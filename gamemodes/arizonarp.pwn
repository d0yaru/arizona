/*

type в inventory_data
1 - айтемы в инве
2 - айтемы в слоте аксов
3 - айтемы шкафа
4 - айтемы багажника
5 - айтемы в слоте дополнений (ТТ, СУПРИМ и тд) багажника



1 - сделал майнинг
2 - пофиксил время в контах
3 - сделал измения цен в биза
4 - сделал тюнинг на кары фулл копию
5 - сделал фулл копию /sholic
6 - перевел мод под ЛаунчерАддон + кастомизация фулл копия
*/
#define AC_ON (1)
#include <a_samp>
#include <pawnbots>
#undef MAX_PLAYERS
#define MAX_PLAYERS (200)
#include <crashdetect>
#include <foreach>
#include <streamer>
#include <fixobject1>
#include <frobj>
#include <a_mysql>
#include <mxINI>
#include <sscanf2>
#include <fmt>
#include <mail>
#include <TOTP>
#include <md5>
#include <Pawn.RakNet>
#define M_LAUNCHER_VERSION "Arizona PC"
//#include <m_custom-sync>
#include <mobile>
//#include <sampvoice>//Войс
#if AC_ON
#include <rakcheat>
#endif
#include <YSF>
#include <Pawn.CMD>
#include <LauncherAddon>
#include <mxdate>
//=============================[ Настройки сервера ]=============================//
#define NAME 							"Arizona"
#define SITE 							"samp-x.ru"
#define FORUM 							"forum.samp-x.ru"
#define VK 								"vk.com/samp_x_ru"
#define MAIL 							"d0@ya.ru"
#define BONUS_LEVEL 					"5"
#define BONUS_MONEY 					"1000"
#define BONUS_DONATE 					"999"
//=============================[ Лимиты ]=============================//
//#pragma warning disable				(201)
#define MAX_CREATE_OBJECTS 				(50)
#define MAX_FAMILY 						(2000)
#define MAX_HOUSES 						(1200)
#define MAX_OWNABLECARS 				(1200)
#define MAX_ITEMS 						(2000)
#define MAX_BIZ         				(300)
#define MAX_SLOT_INV					(108)
#define MAX_SELLCARS 					(150)
#define MAX_FAM_HOUSE 					(100)
#define MAX_PLAYER_HOUSE				(15)
//=============================[ Античит ]=============================//
#define AC_TABLE_SETTINGS               "AC"
#define AC_TABLE_FIELD_CODE             "ac_code"
#define AC_TABLE_FIELD_TRIGGER          "ac_code_trigger_type"
#define AC_MAX_CODES                    (54)
#define AC_MAX_CODE_LENGTH              (5)
#define AC_MAX_CODE_NAME_LENGTH         (34)
#define AC_MAX_TRIGGER_TYPES            (3)
#define AC_MAX_TRIGGER_TYPE_NAME_LENGTH (17)
#define AC_GLOBAL_TRIGGER_TYPE_PLAYER   (0)
#define AC_GLOBAL_TRIGGER_TYPE_IP       (1)
#define AC_CODE_TRIGGER_TYPE_DISABLED   (0)
#define AC_CODE_TRIGGER_TYPE_WARNING    (1)
#define AC_CODE_TRIGGER_TYPE_KICK       (2)
#define AC_TRIGGER_ANTIFLOOD_TIME       (20)
#define AC_MAX_CODES_ON_PAGE            (15)
#define AC_DIALOG_NEXT_PAGE_TEXT        ">>> Следующая страница"
#define AC_DIALOG_PREVIOUS_PAGE_TEXT    "<<< Предыдущая страница"
#define DIALOG_ANTICHEAT_SETTINGS       (8788)
#define DIALOG_ANTICHEAT_EDIT_CODE      (8789)
//=============================[ Цвета ]=============================//
#define COLOR_VALIK 					0x73B461FF
#define COLOR_ORANGE 					0xFAAC58FF
#define COLOR_GREEN 					0x42B02CFF
#define COLOR_GOLD          			0xFFD700FF
#define COLOR_RED 						0xBE2D2DFF
#define COLOR_LIGHTRED 					0xFF6347FF
#define COLOR_LIGHTBLUE 				0x6495EDFF
#define COLOR_LIGHTGREEN 				0x9ACD32FF
#define COLOR_YELLOW 					0xFFFF00FF
#define COLOR_BLUENEW 					0xB8CEF6FF
#define COLOR_BLUE 						0x94B0C1FF
#define COLOR_PURPLE 					0xC2A2DAFF
#define COLOR_LIME 						0x10F441FF
#define COLOR_GREY 						0xAFAFAFFF
#define COLOR_FAMILY        			0xB9C1B8FF
#define COLOR_FAMILY2       			0xFFBC60FF
#define COLOR_CHAT						0xCECECEFF
#define COLOR_SCHAT						0xF0E68CFF
#define COLOR_DOCHAT					0x4682B4FF
#define COLOR_RACIO						0x2DB043FF
#define COLOR_DEPAR						0x3399ffFF
#define COLOR_ACHAT   					0x99CC00FF
#define COLOR_ME            			0xFF99FFFF
#define COLOR_GOV           			0x045FB4FF
//=============================[ Работы ]=============================//
#define JOB_NONE        				(0)
#define JOB_GUNDEALER 					(1)
#define JOB_DETECTIVE 					(2)
#define JOB_CARJACKER 					(3)
#define JOB_MECHANIC 					(4)
#define JOB_TAXI 						(5)
#define JOB_ADVOKAT 					(6)
#define JOB_MINER 						(7)
#define JOB_GUIDE 						(8)
#define JOB_COLLECTOR 					(9)
#define JOB_DRUGDEALER  				(10)
#define JOB_TRUCKER  					(11)
#define JOB_PIZZA  						(12)
#define JOB_SCRAPER  					(13)
#define JOB_MUSOR  						(14)
#define JOB_PORTER 						(15)
#define JOB_NALOG 						(16)
//=============================[ Транспорт ]=============================//
#define VEHICLE_STATE_CAR   			(0)
#define VEHICLE_STATE_BIKE  			(1)
#define VEHICLE_STATE_VELIK 			(2)
#define VEHICLE_STATE_PLANE 			(3)
#define VEHICLE_STATE_BOAT  			(4)
#define VEHICLE_STATE_MOPED 			(5)
#define VEHICLE_STATE_TRAIN 			(6)
//=============================[ Лицензии ]=============================//
#define NULLED_LIC         				(1)
#define YES_LICENSE         			(2)
//=============================[ Админка ]=============================//
#define ADM_NONE 						(0)
#define ADM_MODER 						(1)
#define ADM_SUPER_MODER 				(2)
#define ADM_ADMIN       				(3)
#define ADM_SUPER_ADMIN 				(4)
#define ADM_GRAND_ADMIN 				(5)
#define ADM_DEPUTY_ADMIN 				(6)
#define ADM_MAIN_ADMIN 					(7)
#define ADM_GRAND   					(8)
#define NO_DUTY_TEXT    				!"[A] Вы не авторизованы. Используйте {33CCFF}/apanel"
#define NO_DOSTUP_TEXT    				!"[Ошибка] {cccccc}У Вас нет доступа к этой команде."
//=============================[ VIP ]=============================//
#define STATUS_NONE     				(0)
#define STATUS_VIP      				(1)
#define STATUS_GOLD     				(2)
#define STATUS_PLATIN   				(3)
//=============================[ Бизнесы ]=============================//
#define INVALID_BIZ     				(-1)
#define B_GUNSHOP 						(0)
#define B_BAR 							(1)
#define B_BUY 							(2)
#define B_BINKO 						(3)
#define B_ELECTRO 						(4)
#define B_CARUPGR 						(5)
#define B_GAS 							(6)
#define B_CL_BELL 						(7)
#define B_RENTCAR 						(8)
#define BIZ_ELECTRO_LS 					(15)
#define BIZ_ELECTRO_SF 					(16)
#define BIZ_ELECTRO_LV 					(17)
#define BIZ_CU      					(18)
#define BIZ_GAS_LS_1 					(19)
#define BIZ_GAS_LS_2 					(20)
#define BIZ_GAS_SF_1 					(21)
#define BIZ_GAS_SF_2 					(22)
#define BIZ_GAS_SF_3 					(23)
#define BIZ_GAS_SF_4 					(24)
#define BIZ_GAS_SF_5 					(25)
#define BIZ_GAS_SF_6 					(26)
#define BIZ_GAS_LV_1 					(27)
#define BIZ_GAS_LV_2 					(28)
#define BIZ_GAS_LV_3 					(29)
#define BIZ_GAS_LV_4 					(30)
#define BIZ_GAS_LV_5 					(31)
#define BIZ_GAS_LV_6 					(32)
#define BIZ_RENT_LS     				(39)
#define BIZ_RENT_SF     				(40)
#define BIZ_RENT_LV     				(41)
#define BIZ_AERO_LS     				(42)
#define BIZ_RENTLV2 					(53)
#define BIZ_RENTLV3 					(54)
#define BIZ_RENTLV4 					(55)
#define BIZ_RENTLV5 					(56)
#define BIZ_RENTLV6 					(57)
#define BIZ_RENTLV7 					(58)
#define BIZ_SFRENT1 					(122)
#define BIZ_SFRENT2 					(123)
#define BIZ_SFRENT3 					(124)
#define BIZ_SFRENT4 					(125)
#define AutoMarket 						(126)
#define BIZ_AZS1 						(59)
#define BIZ_AZS2 						(60)
#define BIZ_AZS3 						(61)
#define BIZ_AZS4 						(62)
#define BIZ_AZS5 						(63)
#define BIZ_AZS6 						(64)
#define LV_AMYN1 						(65)
#define LV_AMYN2 						(66)
#define LV_AMYN3 						(67)
#define LV_AMYN4 						(68)
#define BUY_MENU_MEHAN      			"Предмет\tСтоимость\t\nЛопата\t{52A32A}$700{FFFFFF}\nНабор для починки\t{52A32A}$1500{FFFFFF}\nКанистра\t{52A32A}$1500{FFFFFF}\nБалончик с краской\t{52A32A}$1500{FFFFFF}\nБензопила\t{52A32A}$2000{FFFFFF}\nДрова\t{52A32A}$1000{FFFFFF}\nОтмычка\t{52A32A}$1000{FFFFFF}"
#define GRAND_BUY_MENU_TEXT 			"Предмет\tСтоимость\t\nЧипсы\t{52A32A}$400{FFFFFF}\nСпранк\t{52A32A}$100{FFFFFF}\nПиво\t{52A32A}$300{FFFFFF}\nТелефонная книга\t{52A32A}$650{FFFFFF}\nСкрепки\t{52A32A}$90{FFFFFF}\nМаска\t{52A32A}$600{FFFFFF}\nТелефон Xiaomi Mi 8\t{52A32A}$700{FFFFFF}\nРадио\t{52A32A}$400{FFFFFF}\nФотоаппарат\t{52A32A}$100{FFFFFF}\nСим-карта\t{52A32A}$400{FFFFFF}\nСигареты\t{52A32A}$100{FFFFFF}\nЗажигалка\t{52A32A}$200{FFFFFF}\nУдочка\t{52A32A}$500{FFFFFF}\nЧерви\t{52A32A}$20{FFFFFF}\nБронежилет\t{52A32A}$2000{FFFFFF}\nЯд + Шприц\t{52A32A}$500{FFFFFF}\nАптечки\t{52A32A}$600{FFFFFF}\nТаблетки от наркозависимости\t{52A32A}$10000{FFFFFF}\nЦветы\t{52A32A}$50{FFFFFF}\nАптечки для дома\t{52A32A}$650"
//=============================[ Организации ]=============================//
#define TEAM_NONE       				(0)
#define TEAM_LSPD 						(1)
#define TEAM_LVPD 						(2)
#define TEAM_FBI 						(3)
#define TEAM_SFPD						(4)
#define TEAM_MEDICLS 					(5)
#define TEAM_MERIALS 					(6)
#define TEAM_ARMYLV 					(7)
#define TEAM_MEDICSF 					(8)
#define TEAM_LICENSERS 					(9)
#define TEAM_RADIO 						(10)
#define TEAM_GROOVE 					(11)
#define TEAM_VAGOS 						(12)
#define TEAM_BALLAS 					(13)
#define TEAM_CORONOS 					(14)
#define TEAM_RIFA 						(15)
#define TEAM_RM 						(16)
#define TEAM_YAKUZA 					(17)
#define TEAM_LCN 						(18)
#define TEAM_BIKERS 					(19)
#define TEAM_ARMY						(20)
#define TEAM_BANK						(21)
#define TEAM_MEDICLV					(22)
#define TEAM_PDLV 						(23)
#define TEAM_RADIOLV 					(24)
#define TEAM_WOLFS 						(25)
#define TEAM_RADIOSF 					(26)
#define TEAM_ARMYSF 					(27)
//=============================[ Мусор ]=============================//
#define NONE_3D_TEXT 					(Text3D:-1)
#define RES_CAR_TIME    				(600)
#define CLICK_STATE_NONE 	 			(-1)
#define BARRIER_SPEED 					(0.025)
#define INC_CPs 						(22)
#define Pizza_CPs 						(14)
#define MAX_GUNS 						(sizeof(BuyGunInfo)-1)
#define PN(%0) 							PlayerName[%0]
#define RABOTABUS 						(280)
#define SHOWDATA 						(400)
#define SHOWSKILLS 						(500)
#define SHOWACTION 						(600)

#define MAX_DMATS 						(150)
#define MAX_DGUNS 						(150)
#define MAX_NARKO						(45)
#define MAX_BOMBS   					(50)
#define MIN_Bet 						(10)
#define MAX_Bet 						(500)
#define MAX_RADARS  					(100)
#define MAX_WOODS   					(50)
#define MAX_ZONE 						(10)
#define MAX_PARKING	  					(39)
#define MAX_EGGS      					(20)
#define MAX_STRIPS          			(50)
#define MAX_TRASH 						(329)
#define MAX_AREND_CARS 					(196)
#define MAX_ORGS 						(28)
#define MAX_OGRAD 						(500)
#define MAX_BARSs 						(7)
#define MAX_AFK_TIME 					(300)

#define SHOP_TUNE 						"Магазин Тюнинга ЛС"
#define SHOP_CONTAINER 					"Аукцион контейнеров"
#define SHOP_CASINO                     "Казино ЛВ"
#define SHOP_LUXE                     	"Автосалон люкс"

#define FREE_DLG 						(8000)

new CODE_COUNT;
new CODE_VALUE;
new CODE_CODE;

//арз(бенз)
new NewSpeed[MAX_PLAYERS];
//
new vadtime[MAX_PLAYERS];
new govtime[MAX_PLAYERS];
new VadAdvert[MAX_PLAYERS] = -1;

//DM-system
new DmZonePlayers = 0;
new bool:DmZonePlayed[MAX_PLAYERS] = false;
new Float:DmZonePos[14][4] =
{
	{1569.7698, 51.9425, 25.7303, 167.0817},
	{1595.0244, 27.0935, 24.5501, 95.9543},
	{1594.7288, 35.3008, 24.8896, 92.1943},
	{1577.4336, 19.3695, 23.8262, 3.8335},
	{1559.6522, 15.5997, 24.1641, 13.5469},
	{1569.5199, 27.5475, 24.1641, 95.6408},
	{1545.0258, 24.5355, 24.1406, 99.0875},
	{1530.5233, 10.6759, 24.1406, 1.0133},
	{1514.8619, 11.6437, 24.1406, 280.1725},
	{1513.4138, 21.8986, 24.1406, 287.6925},
	{1503.1599, 14.4598, 24.4269, 280.1958},
	{1516.0005, 28.8995, 24.1406, 282.7025},
	{1518.4384, 45.8924, 25.5821, 218.1552},
	{1540.5635, 57.7005, 26.5959, 157.6813}
};
//
enum BlackLuck_Info
{
	Float:BlackLuckX,
	Float:BlackLuckY,
	Float:BlackLuckZ,
	BlackLuckIDS,
	bool:BlackLuckStatus,
 	BlackLuckObject,
	Text3D:BlackLuck3DText
}
new BlackLuckInfo[][BlackLuck_Info] =
{
	{-1794.5491,	-393.0583,	16.2613,	1, false, -1},
	{-1164.6829,	-847.1325,	113.5200,	2, false, -1},
	{-1432.8757,	-1535.1139,	101.8984,	3, false, -1},
	{435.1494,		-1102.2469,	82.2531,	4, false, -1},
	{1247.6433,		-1230.5131,	13.6797,	5, false, -1},
	{853.9568,		-1084.2402,	24.2969,	6, false, -1},
	{1802.6265,		-378.7769,	80.9894,	7, false, -1},
	{1641.2437,		92.7284,	31.3382,	8, false, -1}
	
};
new BlackLuckIDSPlayer[MAX_PLAYERS char];
// Макроссы
#define SCM 							SendClientMessage
#define SCMf 							SendClientMessagef
#define SCMAll 							SendClientMessageToAll
#define SCMAllf 						SendClientMessageToAllf

#define randomEx(%0,%1) (%0+random(%1-%0))

new Mode_City[24] = "samp-x";
new Mode_City_Caps[24] = "samp-x.ru";
//new OPT_NAME[128] = "Arizona Role Play | SAMP-X";

new bool:DEBUG_ON = false;

new SAVE_PLAYER_INV = true; /* лучше юзать true*/// true это будет сохранять инв при зменении переменной, false в дисконнекте сохран будет
new bool:Lotery = true;
new bool:Minigun = true;
new bool:AutoRespawn = true;
new bool:FastAnswer = true;
new bool:SystemReport = true;

new GrandEndOK;
new BITCOINS_PRICE = 35812;
const COST_MINING_CART = 50000000;

new bool:setbiztune;
new bool:MusicAll;
new bool:SletCars;
new bool:OtvetHelper;
new bool:Terakt;
new bool:Meteorit;
new bool:SellVirt;
new bool:EnableContainers;

new IpForBots[3][16] = {"127.0.0.1", ...};
new send_query;

enum MYSQL_SETTINGS
{
	MAZE_HOST,
	MAZE_USERNAME,
	MAZE_PASSWORD,
	MAZE_DATABASE
}
new MySQLSettings[MYSQL_SETTINGS][30];

new ServerName[64];
new WebUrl[64];
new GameMode[64];
new BONUSDONATE;
new BONUSMONEY;
new BONUSLVL;

/*"Топ оптимизация" от Димона*/
new str_1[4096];//Для strcat и прочего
new str_2[4096];//Для strcat и прочего
new str_3[4096];//Для хуеты
new str_4[4096];//Для текстов в чат
new str_query[4096];//Для запросов (юзать строго для запросов в бд!)
/**/
new randomcode32[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "2", "3", "4", "5", "6", "7"};

#define SendAdminsMessagef(%0,%1,%2) 	str_4[0] = EOS, f(str_4, sizeof(str_4), %1, %2) && SendAdminsMessage(%0, str_4)
#define ASCMToAllf(%0,%1,%2)			str_4[0] = EOS, f(str_4, sizeof(str_4), %1, %2) && ASCMToAll(%0, str_4)
#define SendFamilyMessagef(%0,%1,%2,%3) str_4[0] = EOS, f(str_4, sizeof(str_4), %2, %3) && SendFamilyMessage(%0, %1, str_4)
#define SendTeamMessagef(%0,%1,%2,%3) 	str_4[0] = EOS, f(str_4, sizeof(str_4), %2, %3) && SendTeamMessage(%0, %1, str_4)
#define mysql_pqueryf(%0,%1,%2) 		str_query[0] = EOS, mysql_format(mysql, str_query, sizeof(str_query), %1, %2) && mysql_pquery(%0, str_query)
//
#define SetPlayerTimer(%0,%1,%2,%3) 	SetTimerEx(%1, %2, %3, "i", %0)
#define GUN_POS 						GunPos[gunid][0], GunPos[gunid][1], GunPos[gunid][2]
#define GUN_ROT 						90.0, 0.0, 90.0
#define PRESSED(%0) 					(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) 					(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define GetVehicleMaxSpeed(%0) 			GetModelMaxSpeed(GetVehicleModel(%0))
//=============================[ Предметы инв ]=============================//
#define Item_Chest 						(312)//Сундук рулетки
#define Item_BronzeRoulette				(313)//Бронзовая рулетка
#define Item_SilverRoulette				(314)//Серебряная рулетка
#define Item_GoldRoulette				(315)//Золотая рулетка
#define Item_Gift						(316)//Подарок
#define Item_BreakCar					(317)//Отмычки
#define Item_PhoneBook					(318)//Телефонная книга
#define Item_Radio						(319)//Радио
#define Item_CasinoChips				(320)//Фишки для казино
#define Item_Cigarettes					(321)//Сигареты
#define Item_Lighter					(322)//Зажигалка
#define Item_Canister					(323)//Канистра
#define Item_Repair						(324)//Набор для починки
#define Item_Spray						(325)//Баллончик с краской
#define Item_DrugSeeds					(326)//Семена наркотиков
#define Item_Drugs						(327)//Наркотики
#define Item_Mats						(328)//Материалы
#define Item_Chips						(329)//Чипсы
#define Item_Sprunk						(330)//Спранк
#define Item_Beer						(331)//Пиво
#define Item_Clips						(332)//Скрепки
#define Item_Mask						(333)//Маска
#define Item_Armour						(334)//Бронежилет
#define Item_Recipe						(335)//Рецепт от врача
#define Item_MedKit						(336)//Аптечка
#define Item_DrugPills					(337)//Таблетки от наркозависимости
#define Item_Syringe					(338)//Шприц
#define Item_FishingRod					(339)//Удочка
#define Item_Worms						(340)//Черви
#define Item_DonateChest				(341)//Сундук рулетки (донат)
#define Item_Fish						(357)//Рыба
#define Item_FriedFish					(358)//Жареная рыба
#define Item_FamilyTalon				(359)//Семейный талон
#define Item_Firewood					(360)//Дрова
#define Item_Stone						(361)//Камень
#define Item_Metal						(362)//Металл
#define Item_Bronze						(363)//Бронза
#define Item_Silver						(364)//Серебро
#define Item_Gold						(365)//Золото
#define Item_CitizenTalon				(366)//Гражданский талон

#define Item_Xiaomi_Blue				(367)//Xiaomi Mi 8 (Голубой)
#define Item_Xiaomi_White				(368)//Xiaomi Mi 8 (Белый)
#define Item_Xiaomi_DarkBlue			(369)//Xiaomi Mi 8 (Синий)
#define Item_Xiaomi_Green				(370)//Xiaomi Mi 8 (Зеленый)
#define Item_Xiaomi_Red					(371)//Xiaomi Mi 8 (Красный)
#define Item_Xiaomi_Silver				(372)//Xiaomi Mi 8 (Серый)
#define Item_Xiaomi_Orange				(373)//Xiaomi Mi 8 (Оранжевый)
#define Item_Xiaomi_Gold				(374)//Xiaomi Mi 8 (Золотой)
#define Item_Xiaomi_Pink				(375)//Xiaomi Mi 8 (Розовый)
#define Item_Xiaomi_Black				(376)//Xiaomi Mi 8 (Черный)
#define Item_Xiaomi_DarkRed				(377)//Xiaomi Mi 8 (Темно красный)

#define Item_Samsung_Blue				(378)//Samsung Galaxy S10 (Голубой)
#define Item_Samsung_White				(379)//Samsung Galaxy S10 (Белый)
#define Item_Samsung_DarkBlue			(380)//Samsung Galaxy S10 (Синий)
#define Item_Samsung_Green				(381)//Samsung Galaxy S10 (Зеленый)
#define Item_Samsung_Red				(382)//Samsung Galaxy S10 (Красный)
#define Item_Samsung_Silver				(383)//Samsung Galaxy S10 (Серый)
#define Item_Samsung_Orange				(384)//Samsung Galaxy S10 (Оранжевый)
#define Item_Samsung_Gold				(385)//Samsung Galaxy S10 (Золотой)
#define Item_Samsung_Pink				(386)//Samsung Galaxy S10 (Розовый)
#define Item_Samsung_Black				(387)//Samsung Galaxy S10 (Черный)
#define Item_Samsung_DarkRed			(388)//Samsung Galaxy S10 (Темно красный)

#define Item_iPhone_Blue				(389)//iPhone X (Голубой)
#define Item_iPhone_White				(390)//iPhone X (Белый)
#define Item_iPhone_DarkBlue			(391)//iPhone X (Синий)
#define Item_iPhone_Green				(392)//iPhone X (Зеленый)
#define Item_iPhone_Red					(393)//iPhone X (Красный)
#define Item_iPhone_Silver				(394)//iPhone X (Серый)
#define Item_iPhone_Orange				(395)//iPhone X (Оранжевый)
#define Item_iPhone_Gold				(396)//iPhone X (Золотой)
#define Item_iPhone_Pink				(397)//iPhone X (Розовый)
#define Item_iPhone_Black				(398)//iPhone X (Черный)
#define Item_iPhone_DarkRed				(399)//iPhone X (Темно красный)

//342 - 356 (Сертифакаты Launch)
//400 - 611 (Сертифакаты Stock)

#define Item_AngelКing					(612)//Ангельское кольцо
#define Item_Hammer						(613)//Молоток на спину
#define Item_Canister_Thigh				(614)//Канистра на правое бедро
#define Item_Chest_Camera				(615)//Фотоаппарат на грудь
#define Item_Minigun					(616)//Миниган на спину
#define Item_Flamethrower				(617)//Огнемёт на спину
#define Item_Scythe						(618)//Коса на спину

#define Item_Mod_Halloween				(619)//Модификация Хэллоуин
#define Item_Mod_Classic				(620)//Модификация Классик
#define Item_Mod_Futuristic				(621)//Модификация Футуристик
#define Item_Mod_Cyberpunk				(622)//Модификация Киберпанк
#define Item_Mod_FutureTaxi				(623)//Модификация FUTURETAXI
#define Item_Mod_Car					(624)//Улучшение для автомобиля

#define Item_Cock						(625)//Петух на плечо
#define Item_Amulet						(626)//Амулет
#define Item_Parrot						(627)//Попугай на плечо
#define Item_Column						(628)//Колонка
#define Item_Boombox_Red				(629)//Бумбокс (красный)
#define Item_Skate						(630)//Скейт
#define Item_Surf_Board_1				(631)//Доска для сёрфа 1
#define Item_Surf_Board_2				(632)//Доска для сёрфа 2
#define Item_Surf_Board_3				(633)//Доска для сёрфа 3
#define Item_Guitar_Red					(634)//Гитара (Красная)
#define Item_Guitar_White				(635)//Гитара (Белая)
#define Item_Guitar_Black				(636)//Гитара (Черная)
#define Item_Hat_Cylinder				(637)//Шляпа (Цилиндр)
#define Item_Hat						(638)//Шляпа
#define Item_Bag_Brown					(639)//Чемодан (коричневый)
#define Item_Suitcase_Red				(640)//Красный чемодан
#define Item_Chainsaw_Thigh				(641)//Бензопила на спину
#define Item_Balloon_1					(642)//Воздушный шар #1
#define Item_Balloon_2					(643)//Воздушный шар #2
#define Item_Balloon_3					(644)//Воздушный шар #3
#define Item_Balloon_4					(645)//Воздушный шар #4
#define Item_Balloon_5					(646)//Воздушный шар #5
#define Item_Balloon_6					(647)//Воздушный шар #6
#define Item_Balloon_7					(648)//Воздушный шар #7
#define Item_Portable_Kiosk_1			(649)//Переносной ларек (1)
#define Item_Portable_Kiosk_2			(650)//Переносной ларек (2)
#define Item_Portable_Kiosk_3			(651)//Переносной ларек (3)

#define Item_Linen						(652)//Лён
#define Item_Cotton						(653)//Хлопок
#define Item_Skull						(654)//Череп
#define Item_Ingredients				(655)//Ингредиенты
#define Item_Suitcase_Book				(656)//Сумка для ноутбука
#define Item_Supreme					(657)//Наклейка Суприм
#define Item_TwinTurbo					(658)//Twin Turbo

#define Item_Car_Lic					(757)//Лицензия на авто
#define Item_Bike_Lic					(758)//Лицензия на мото
#define Item_Fly_Lic					(759)//Лицензия на полёты
#define Item_Boat_Lic					(760)//Лицензия на плавание
#define Item_Fish_Lic					(761)//Лицензия на ловлю рыбы
#define Item_Gun_Lic					(762)//Лицензия на оружие
#define Item_Hunt_Lic					(763)//Лицензия на охоту
#define Item_Launch						(764)//Launch
#define Item_Premium					(765)//Premium
#define Item_Premium_Maverick			(766)//Premium Maverick
#define Item_Deagle 					(767)//Deagle
#define Item_Pistols 					(768)//Pistols
#define Item_ShotGun					(769)//ShotGun
#define Item_MP5 						(770)//MP5
#define Item_AK47 						(771)//AK47
#define Item_M4 						(772)//M4
#define Item_Country_Rifle 				(773)//Country_Rifle
#define Item_Ticket_AZ 					(774)//Талон AZ Coins
#define Item_Ticket_Donate				(1098)//Талон AZ Rub
#define Item_Ticket_EXP 				(775)//Талон EXP
#define Item_Euro						(776)//Евро
#define Item_Shovel						(1076)//Лопата
#define Item_YellowBox              	(1090) // Желтый бокс
#define Item_BlueBox              		(1091) // Синий бокс
#define Item_RedBox              		(1092) // Красныйй бокс
#define Item_AcsessoryBox           	(1093) // Бокс с аксессуарами
#define Item_StoneEnchant				(1208)//Точильный камень
#define Item_Bitcoin					(1247)//Биткоин
#define Item_Videocard					(1248)//Видеокарта
#define Item_Casket                 	(1280)//Ларец Олигарха
#define Item_PlatinumRoullete       	(1281)//Платиновая рулетка
#define Item_SimCard					(1282)//Сим-карта

#define Item_Weapons					Item_Deagle..Item_Country_Rifle
#define Item_Balloons 					Item_Balloon_1,Item_Balloon_2,Item_Balloon_3,Item_Balloon_4,Item_Balloon_5,Item_Balloon_6,Item_Balloon_7
#define Item_Liccenses 					Item_Car_Lic,Item_Bike_Lic,Item_Fly_Lic,Item_Boat_Lic,Item_Fish_Lic,Item_Gun_Lic,Item_Hunt_Lic
#define Item_Radio_Vehicle				441,464,465,501,564,1283
#define Item_Mod_Vehicle				834..1075
#define Item_Aksioma					849..956
#define IventCarSlot					957..1075

#define CarSlot1 						2001
#define CarSlot2 						2002
#define CarSlot3 						2003
#define CarSlot4 						2004
#define CarSlot5 						2005
#define CarSlot6 						2006
#define CarSlot7 						Item_TwinTurbo,Item_Launch,Item_Premium,Item_Mod_Halloween,Item_Mod_Classic,Item_Mod_Futuristic,Item_Mod_Cyberpunk,Item_Mod_FutureTaxi
#define CarSlot8 						Item_Supreme

//В аттачах нужно делать аттач на -1 слот, тоесть если тут слот 5, то в аттачах делай 4 слот!
#define AcsSlot1 						Item_Hat_Cylinder,Item_Hat,730..738,663..694,713,714,Item_AngelКing,833,1077,1080,1081,1086, 1096
#define AcsSlot2 						695..712,777,1078, 1099
#define AcsSlot3 						739..751,Item_Chest_Camera,Item_Cock,Item_Parrot,780,781,782,Item_Radio_Vehicle
#define AcsSlot4 						715..729,755,756,783..788,1088,1089, 1100
#define AcsSlot5 						Item_Canister_Thigh,659..662,Item_Balloons,1284
#define AcsSlot6 						Item_Boombox_Red,752..754,Item_Hammer,Item_Minigun,Item_Flamethrower,Item_Scythe,Item_Amulet,Item_Column,Item_Skate,Item_Surf_Board_1..Item_Surf_Board_3,Item_Guitar_Red..Item_Guitar_Black,Item_Chainsaw_Thigh,778,779,789..795,819..825,826..832,1079,1082,1083,1084,1085,1087,1094,1095,1097,1285..1288
#define AcsSlot7 						10005
#define AcsSlot8 						Item_Bag_Brown,Item_Suitcase_Red,Item_Suitcase_Book

#define AcsMenuUse 						Item_Canister_Thigh,Item_Balloons,Item_Hammer,Item_Boombox_Red,Item_Column,790..795,Item_Chest_Camera,Item_Skate,Item_Radio_Vehicle
//=============================[ Прочее ]=============================//
#define FamColor 						FamilyChatColor[FamilyInfo[PI[playerid][pFamilyMember]][famChatColor]]
#define FamType  						fType[FamilyInfo[PI[playerid][pFamilyMember]][famType]][typeName]
#define pFamHouse   					FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhID]
#define MAX_COMPLAINTS    				(50)
#define MAX_TATTOO_NAME_LENGTH  		(25 + 1)
#define MAX_TATTOOS_NAME_LENGTH 		(34 + 1)
#define MAX_DMZONE 						(40)
#define MAX_LAVKA 						(40)
#define MAX_AUTO_BAZAR  				(95)
//=============================[ Остальное ]=============================//


enum itemnamebiz
{
    bShop[30],//24-7
    bRefuel[24],//АЗС
    bBar[24],//Бар
    bDinet[24],//Закусочные
   	bAmmo[24]//Аммо
};
new ItemNameBussineses[19][itemnamebiz] =
{
    {"Чипсы","Лопата","Спранк","Картофель-Фри","Кастет"},
    {"Спранк","Набор для починки","Виски","Сэндвич","Бита"},
    {"Пиво","Канистра","Коньяк","Баскет","Катана"},
    {"Телефонная книга","Балончик с краской","Пицца","Крылышки","Парашют"},
    {"Скрепка","Бензопила","Бургер","Салат","Дымовая Шашка"},
    {"Маска","Отмычка","None","None","Desert Eagle"},
    {"Радио","Замок для велосипеда","None","None","Shotgun"},
    {"Фотоаппарат","Домкрат","None","None","MP5"},
    {"Телефон Xiaomi Mi 8","None","None","None","AK-47"},
    {"SIM-Карта","None","None","None","M4"},
    {"Сигареты","None","None","None","Country Rifle"},
    {"Зажигалка","None","None","None","None"},
    {"Удочка","None","None","None","None"},
    {"Черви","None","None","None","None"},
    {"Бронежилет","None","None","None","None"},
    {"Яд","None","None","None","None"},
    {"Аптечка","None","None","None","None"},
    {"Таблетки от наркозависимости","None","None","None","None"},
    {"Цветы","None","None","None","None"}
};
new Text:FillTD[30] = {Text:INVALID_TEXT_DRAW, ...};
new Text:GooglePhone[8] = {Text:INVALID_TEXT_DRAW, ...};
new Text:GoogleStep1[8] = {Text:INVALID_TEXT_DRAW, ...};
new Text:GoogleStep2[8] = {Text:INVALID_TEXT_DRAW, ...};
new Text:GoogleStep3[6] = {Text:INVALID_TEXT_DRAW, ...};
new Text:GoogleStep4[5] = {Text:INVALID_TEXT_DRAW, ...};
new Text:IntroLogo[11] = {Text:INVALID_TEXT_DRAW, ...};
new Tents[40];
new Text:Donate_Global[88] = {Text:INVALID_TEXT_DRAW, ...};

enum GiftItemPrizes
{
	GiftName[64],
	GiftAmount,
	GiftTime
}

enum adminzones 
{
	Zone_ID,
	Zone_Name[60],
	Zone_Interior,
	Zone_VirtualWorld,
	Float:Zone_posX,
	Float:Zone_posY,
	Float:Zone_posZ
}
new AdminZone[][adminzones] = 
{
	{1,""NAME" Interior №1", 12, 1, 2324.419921, -1145.568359, 1050.710083},
	{2,""NAME" Interior №2", 5, 2, 1282.1960, -800.9465, 1089.9375},
	{3,""NAME" Interior №3", 2, 3, 1211.1121, -6.9724, 1000.9219},
	{4,"24/7 1", 17, 4, -25.884498,-185.868988,1003.546875},
	{5,"24/7 2", 10, 5, 6.091179,-29.271898,1003.549438},
	{6,"24/7 3", 18, 6, -30.946699,-89.609596,1003.546875},
	{7,"24/7 4", 16, 7, -25.132598,-139.066986,1003.546875},
	{8,"24/7 5", 4, 8, -27.312299,-29.277599,1003.557250},
	{9,"24/7 6", 6, 9, -26.691598,-55.714897,1003.546875},
	{10,"Airport ticket desk", 14, 10, -1827.147338,7.207417,1061.143554},
	{11,"Airport baggage reclaim", 14, 11, -1861.936889,54.908092,1061.143554},
	{12,"Shamal", 1, 12, 1.808619,32.384357,1199.593750},
	{13,"Andromada", 9, 13, 315.745086,984.969299,1958.919067},
	{14,"Ammunation 1", 1, 14, 286.148986,-40.644397,1001.515625},
	{15,"Ammunation 2", 4, 15, 286.800994,-82.547599,1001.515625},
	{16,"Ammunation 3", 6, 16, 296.919982,-108.071998,1001.515625},
	{17,"Ammunation 4", 7, 17, 314.820983,-141.431991,999.601562},
	{18,"Ammunation 5", 6, 18, 316.524993,-167.706985,999.593750},
	{19,"Ammunation booths", 7, 19, 302.292877,-143.139099,1004.062500},
	{20,"Ammunation range", 7, 20, 298.507934,-141.647048,1004.054748},
	{21,"Blastin fools hallway", 3, 21, 	1038.531372,0.111030,1001.284484},
	{22,"Jefferson motel", 15, 22, 2215.454833,-1147.475585,1025.796875},
	{23,"Off track betting shop", 3, 23, 833.269775,10.588416,1004.179687},
	{24,"Sex shop", 3, 24, -103.559165,-24.225606,1000.718750},
	{25,"Meat factory", 1, 25, 963.418762,2108.292480,1011.030273},
	{26,"Zero's RC shop", 6, 26, -2240.468505,137.060440,1035.414062},
	{27,"Woozie's office", 1, 28,-2159.122802,641.517517,1052.381713}, 
	{28,"Binco", 15, 29, 207.737991,-109.019996,1005.132812}, 
	{29,"Didier sachs", 14, 30,204.332992,-166.694992,1000.523437}, 
	{30,"Prolaps", 3, 31,207.054992,-138.804992,1003.507812}, 
	{31,"Club", 17, 32,493.390991,-22.722799,1000.679687}, 
	{32,"Bar", 11, 33,	501.980987,-69.150199,998.757812}, 
	{33,"Millie room", 6, 34,346.870025,309.259033,999.155700}, 
	{34,"Planning dept.", 3, 35, 384.808624,173.804992,1008.382812}, 
	{35,"Area 51", 0, 36, 223.431976,1872.400268,13.734375}, 
	{36,"LS gym", 5, 37,772.111999,-3.898649,1000.728820}, 
	{37,"SF gym", 6, 38,774.213989,-48.924297,1000.585937}, 
	{38,"Pleasure domes", 3, 39, -2640.762939,1406.682006,906.460937}, 
	{39,"Warehouse 2", 18, 40,1302.519897,-1.787510,1001.028259},
	{40,"RC Battlefield", 10, 41,-975.975708,1060.983032,1345.671875},
	{41,"LV police HQ", 3, 43, 288.745971,169.350997,1007.171875},
	{42,"8-Track", 7, 44, -1398.065307,-217.028900,1051.115844},
	{43,"Bloodbowl", 15, 45,-1398.103515,937.631164,1036.479125},
	{44,"LV Warehouse 1", 0, 46, 1059.895996,2081.685791,10.820312}, 
	{45,"LS Atruim", 18, 47,1710.433715,-1669.379272,20.225049},
	{46,"Kickstart", 14, 48,-1465.268676,1557.868286,1052.531250}
};

enum donateinfo
{
	Item_InvID,
	Item_Name_Eng[64],
	Item_Name_Rus[64],
	Item_Cost,
	Item_Previous,
	Item_Next,
	Item_Text[64]
};

/*
new DonateInfo[][donateinfo] =
{
    //==============================================[ Рулетки ]=============================================//
    {1, 341,    "Chest Rulet (donate)",             "Сундук рулетки (донат)",           35000,  5,      1},//0
    {1, 1345,   "Platinum Chest",                   "Платиновый сундук",                30000,  0,      2},//1
    {1, 313,    "Bronze Rulet",                     "Бронзовая рулетка",                5000,    1,      3},//2
    {1, 314,    "Silver Rulet",                     "Серебряная рулетка",               10000,    2,      4},//3
    {1, 315,    "Gold Rulet",                       "Золотая рулетка",                  20000,    3,      5},//4
    {1, Item_PlatinumRoullete,  "Platinum Rulet",   "Платиновая рулетка",               50000,    4,      0},//5
    //==============================================[ Сертификаты ]=========================================//
    {2, 487,    "Certificate Maverick",             "СертиФикат Maverick",              8000, 38,     7},//6
    {2, 1172,   "Certificate Mercedes GT63s AMG",   "СертиФикат Mercedes GT63s AMG",    50, 6,      8},//7
    {2, 1173,   "Certificate Mercedes GT63 AMG",    "СертиФикат Mercedes GT63 AMG",     50, 7,      9},//8
    {2, 1174,   "Certificate Audi RS6",             "СертиФикат Audi RS6",              50, 8,      10},//9
    {2, 1175,   "Certificate BMW X5",               "СертиФикат BMW X5",                50, 9,      11},//10
    {2, 1176,   "Certificate Chevrolet Corvette",   "СертиФикат Chevrolet Corvette",    50, 10,     12},//11
    {2, 1178,   "Certificate Lexus LX",             "СертиФикат Lexus LX",              50, 11,     13},//12
    {2, 1179,   "Certificate Porshe 911",           "СертиФикат Porshe 911",            50, 12,     14},//13
    {2, 1180,   "Certificate Porshe Cayenne",       "СертиФикат Porshe Cayenne",        50, 13,     15},//14
    {2, 1181,   "Certificate Bentley",              "СертиФикат Bentley",               50, 14,     16},//15
    {2, 1182,   "Certificate BMW M8",               "СертиФикат BMW M8",                50, 15,     17},//16
    
    {2, 1183,   "Certificate Mercedes E63s AMG",    "СертиФикат Mercedes E63s AMG",     50, 16,     18},//17
    {2, 1184,   "Certificate Mercedes S63 Coupe A", "СертиФикат Mercedes S63 Coupe A",  50, 17,     19},//18
    {2, 1185,   "Certificate Volkswagen Touareg",   "СертиФикат Volkswagen Touareg",    50, 18,     20},//19
    {2, 1186,   "Certificate Lamborgini Urus",      "СертиФикат Lamborgini Urus",       50, 19,     21},//20
    {2, 1187,   "Certificate Audi Q8",              "СертиФикат Audi Q8",               50, 20,     22},//21
    {2, 1188,   "Certificate Dodge Challenger",     "СертиФикат Dodge Challenger",      50, 21,     23},//22

	{2, 1189,   "Certificate Acura NSX",            "СертиФикат Acura NSX",             50, 22,     24},//23
    {2, 1193,   "Certificate Lexus Sport-S",        "СертиФикат Lexus Sport-S",         50, 23,     25},//24
    {2, 1194,   "Certificate Ford Mustang",         "СертиФикат Ford Mustang",          50, 24,     26},//25
    {2, 1196,   "Certificate Jaguar F-pace",        "СертиФикат Jaguar F-pace",         50, 25,     27},//26
    {2, 1221,   "Certificate Tesla Model X",        "СертиФикат Tesla Model X",         50, 26,     28},//27
    {2, 1215,   "Certificate Mercedes-Benz GLS 20", "СертиФикат Mercedes-Benz GLS 20",  50, 27,     29},//28
    {2, 1216,   "Certificate Mercedes G65 AMG",     "СертиФикат Mercedes G65 AMG",      50, 28,     30},//29
    {2, 1218,   "Certificate Range Rover SVA",      "СертиФикат Range Rover SVA",       50, 29,     31},//30
    {2, 1233,   "Certificate Buckingham",           "СертиФикат Buckingham",            50, 30,     32},//31
    {2, 1238,   "Certificate Audi R8",              "СертиФикат Audi R8",               50, 31,     33},//32
    {2, 1243,   "Certificate Mercedes Maybach",     "СертиФикат Mercedes Maybach",      50, 32,     34},//33
    {2, 1244,   "Certificate Mercedes-Benz AMG G",  "СертиФикат Mercedes-Benz AMG G",   50, 33,     35},//34
    {2, 1234,   "Certificate Infinity FX 50",       "СертиФикат Infinity FX 50",        50, 34,     36},//35
    {2, 1235,   "Certificate Lexus RX 450h",        "СертиФикат Lexus RX 450h",         50, 35,     37},//36
    {2, 1241,   "Certificate BMW M5 E60",           "СертиФикат BMW M5 E60",            50, 36,    38},//37
    {2, 1242,   "Certificate BMW M5 F90",           "СертиФикат BMW M5 F90",            50, 37,     6},//38
    {2, 1245,   "Certificate Porsche Panamera Turbo","СертиФикат Porsche Panamera Turbo",   50, 38,     6},//39
    //==============================================[ Телефоны ]==============================================//
    {3, 379,    "Samsung Galaxy S10 (White)",       "Samsung Galaxy S10 (Белый)",       4000,    41,     41},//40
    {3, 390,    "iPhone X (White)",                 "iPhone X (Белый)",                 4000,    40,     40},//41
    //==============================================[ Аксессуары ]=============================================//
    {4, 612,    "Angelskoe Kolco (Head)",           "Ангельское кольЦо на голову",      7000,   91,     43},//42
    {4, 613,    "Molotok (spine)",                  "Молоток на спину",                 7000,   42,     44},//43
    {4, 614,    "Leyka (right thigh)",              "Канистра на правое бедро",         7000,   43,     45},//44
    {4, 615,    "Foto pparat (chest)",              "Фотоаппарат на грудь",             7000,   44,     46},//45
    {4, 616,    "Minigun (spine)",                  "Миниган на спину",                 7000,   45,     47},//46
    {4, 617,    "Flare (spine)",                    "Огнемет на спину",                 7000,   46,     48},//47
    {4, 618,    "Scythe (spine)",                   "Коса на спину",                    4500,   47,     49},//48
    {4, 619,    "Modification (Hallowen)",          "МодиФикаЦия (Hallowen)",           3000,   48,     50, "~r~HALLOWEN"},//49
    {4, 620,    "Modification (Classic)",           "МодиФикаЦия (Classic)",            3000,   49,     51, "~y~CLASSIC"},//50
    {4, 621,    "Modification (Future)",            "МодиФикаЦия (Future)",             3000,   50,     52, "~y~FUTURE"},//51
    {4, 622,    "Modification (CyberPunk)",         "МодиФикаЦия (CyberPunk)",          3000,   51,     53, "~y~CYBERPUNK"},//52
    {4, 623,    "Modification (Future Taxi)",       "МодиФикаЦия (Future Taxi)",        3000,   52,     54,"~y~FUTURE~n~TAXI"},//53
    {4, 624,    "Improvement for vehicle",          "Улучшение для автомобиля",         3000,   53,     55},//54
    {4, 625,    "Chiken to left shoulder",          "Петух на плечо",                   7000,   54,     56},//55
    {4, 626,    "Amulet",                           "Амулет",                           7000,   55,      57},//56
    {4, 627,    "Parrot to left shoulder",          "Попугай на плечо",                 7000,   56,     58},//57
    {4, 628,    "Kolonka",                          "Колонка",                          7000,   57,     59},//58
    {4, 629,    "Boombox",                          "Бумбокс (красный)",                7000,   58,     60},//59
    {4, 630,    "Skate",                            "Скейт",                            7000,   59,     61},//60
    {4, 631,    "Board",                            "Доска для серфа 1",                7000,   60,     62},//61
    {4, 632,    "Board",                            "Доска для серфа 2",                7000,   61,     63},//62
    {4, 633,    "Board",                            "Доска для серфа 3",                7000,   62,     64},//63
    {4, 634,    "Guitar (Red)",                     "Гитара (Красная)",                 7000,   63,     65},//64
    {4, 635,    "Guitar (White)",                   "Гитара (Белая)",                   7000,   64,     66},//65
    {4, 636,    "Guitar (Black)",                   "Гитара (Черная)",                  7000,   65,     67},//66
    {4, 637,    "Shlyapa",                          "Шляпа (Цилиндр)",                  7000,   66,     68},//67
    {4, 638,    "Shlyapa",                          "Шляпа",                            7000,   67,     69},//68
    {4, 639,    "Bag (brown)",                      "Чемодан (коричневый)",             7000,   68,     70},//69
    {4, 640,    "Red suitcase",                     "Красный чемодан",                  7000,   69,     71},//70
    {4, 641,    "Chainsaw on spine",                "Бензопила на спину",               7000,   70,     72},//71
    {4, 642,    "Vozdushnyy shar #1",               "Воздушный шар #1",                 7000,  71,     73},//72
    {4, 643,    "Vozdushnyy shar #2",               "Воздушный шар #2",                 7000,  72,     74},//73
    {4, 644,    "Vozdushnyy shar #3",               "Воздушный шар #3",                 7000,  73,     75},//74
    {4, 645,    "Vozdushnyy shar #4",               "Воздушный шар #4",                 7000,  74,     76},//75
    {4, 646,    "Vozdushnyy shar #5",               "Воздушный шар #5",                 7000,  75,     77},//76
    {4, 647,    "Vozdushnyy shar #6",               "Воздушный шар #6",                 7000,  76,     78},//77
    {4, 648,    "Vozdushnyy shar #7",               "Воздушный шар #7",                 7000,  77,     79},//78
    {4, 801,    "Combo \"Niger\"",                  "МодиФикаЦия \"Негр\"",                         7000,   78,     80},//79
    {4, 814,    "Combo \"Palach\"",                 "МодиФикаЦия \"Палач\"",                        7000,   79,     81},//80
    {4, 802,    "Combo \"Darth-Vader\"",            "МодиФикаЦия \"Дарт-вейдер\"",                  7000,   80,     82},//81
    {4, 804,    "Combo \"Sparta\"",                 "МодиФикаЦия \"Спарта\"",                       7000,   81,     83},//82
    {4, 807,    "Combo \"PUBG\"",                   "МодиФикаЦия \"PUBG\"",                         7000,   82,     84},//83
    {4, 441,    "The machine on the radio remote",  "Машинка на радиоуправлении",                   7000,   83,     85},//84
    {4, 464,    "Airplane on the radio remote",     "Самолет на радиоуправлении",                   70000,   84,     86},//85
    {4, 465,    "Helicopter on Radio remote (1)",   "Вертолет на радиоуправлении (1)",              7000,   85,     87},//86
    {4, 501,    "Helicopter on Radio remote (2)",   "Вертолет на радиоуправлении (2)",              7000,   86,     88},//87
    {4, 564,    "Tank on the radio remote",         "Танк на радиоуправлении",                      7000,   87,     89},//88
    {4, 649,    "Portable kiosk (1)",               "Переносной ларек (1)",                         2500,   88,     90},//89
    {4, 650,    "Portable kiosk (2)",               "Переносной ларек (2)",                         2500,   89,     91},//90
    {4, 651,    "Portable kiosk (3)",               "Переносной ларек (3)",                         2500,   90,     42},//91
    //==============================================[ Боксы ]=============================================//
    {6, 1411,   "Tainik Ilona Maska",               "Тайник Илона Маска",                           20,     99,     93}, //92
    {6, 1412,   "Laretz Super Car Box",             "Ларец Super Car Box",                          5,     92,     94}, //93
    {6, 1413,   "Laretz s premiei",                 "Ларец с премией",                              5,     93,     95}, //94
    {6, 1089,   "Super Car Box",                    "Супер кар бокс",                               5,     94,     96}, //95
    {6, 1088,   "Super Moto Box",                   "Супер мото бокс",                              5,     95,     97}, //96
    {6, 1087,   "Rare Box Yellow",                  "Желтый бокс",                                  5,     96,     98}, //97
    {6, 1085,   "Rare Box Blue",                    "Синий бокс",                                   5,     97,     99}, //98
    {6, 1086,   "Rare Box Red",                     "Красный бокс",                                 5,     98,     92}, //99
    //==============================================[ Скины ]=============================================//
    {5, 1101,   "Skin: Alber (ID:312)",             "Скин: Альберт (ID:312)",                       20,   137,    101}, //100
    {5, 1102,   "Skin: Amiran (ID:313)",            "Скин: Амиран (ID:313)",                        20,   100,     102}, //101
    {5, 1103   "Skin: Bathory (ID:314)",           "Скин: Батори (ID:314)",                        20,  101,     103}, //102
    {5, 1104,   "Skin: Bryliov (ID:315)",           "Скин: Брулёв (ID:315)",                        20,  102,     104}, //103
    {5, 1105,   "Skin: Egor Kreed (ID:316)",        "Скин: Егор Крид (ID:316)",                     20,  103,     105}, //104
    {5, 1106,   "Skin: Delorenzy (ID:317)",         "Скин: Альберт (ID:317)",                       20,  104,     106}, //105
    {5, 1107,   "Skin: Edward Bill (ID:318)",       "Скин: Альберт (ID:318)",                       20,  105,     107}, //106
    {5, 1108,   "Skin: Elghey (ID:319)",            "Скин: Элджей (ID:319)",                        20,  106,     108}, //107
    {5, 1109,   "Skin: Eva Elfire (ID:320)",        "Скин: Eva Elfire(ID:320)",                     20,  107,     109}, //108
    {5, 1110,   "Skin: Feduck (ID:321)",            "Скин: Feduck (ID:321)",                        20,  108,     110}, //109
    {5, 1111,   "Skin: Kovalevskiy (ID:322)",       "Скин: Ковалевский (ID:322)",                   20,  109,     111}, //110
    {5, 1112,   "Skin: Litvin (ID:323)",            "Скин: Литвин (ID:323)",                        20,  110,     112}, //111
    {5, 1113,   "Skin: Maras Shakur (ID:324)",      "Скин: Марас Шакур (ID:324)",                   20,  111,    113}, //112
    {5, 1114,   "Skin: Morgenshtern (ID:325)",      "Скин: Моргенштерн (ID:325)",                   20,  112,    114}, //113
    {5, 1115,   "Skin: Habib Nurgomedov (ID:326)",  "Скин: Хабиб Нургамомедов (ID:326)",            20,  113,    115}, //114
    {5, 1116,   "Skin: Oxxxymiron (ID:327)",        "Скин: Oxxxymiron (ID:327)",                    20,  114,    116}, //115
    {5, 1117,   "Skin: Dante (ID:328)",             "Скин: Данте (ID:328)",                         20,  115,    117}, //116
    {5, 1118,   "Skin: Ravyazen (ID:329)",          "Скин: Ravyazen (ID:329)",                      20,  116,    118}, //117
    {5, 1119,   "Skin: Romeru (ID:330)",            "Скин: Romeru (ID:330)",                        20,  117,    119}, //118
    {5, 1120,   "Skin: Sam Mason (ID:331)",         "Скин: Сем Мейсон (ID:331)",                    20,  118,    120}, //119
    {5, 1121,   "Skin: Diana Shurigina (ID:332)",   "Скин: Диана Шурыгина (ID:332)",                20,  119,    121}, //120
    {5, 1122,   "Skin: Farmer (ID:333)",            "Скин: Farmer (ID:333)",                        20,  120,    122}, //121
    {5, 1123,   "Skin: Basta (ID:334)",             "Скин: Баста (ID:334)",                         20,  121,    123}, //122
    {5, 1124,   "Skin: Olga Buzova (ID:335)",       "Скин: Ольга Бузова (ID:335)",                  20,  122,    124}, //123
    {5, 1125,   "Skin: Dzuba (ID:336)",             "Скин: Дзюба (ID:336)",                         20,  123,    125}, //124
    {5, 1126,   "Skin: Ivan Uragan (ID:337)",       "Скин: Иван Ураган (ID:337)",                   20,  124,    126}, //125
    {5, 1127,   "Skin: Hovanskiy (ID:338)",         "Скин: Хованский (ID:338)",                     20,  125,    127}, //126
    {5, 1128,   "Skin: Lukashenko (ID:339)",        "Скин: Лукашенко (ID:339)",                     20,  126,    128}, //127
    {5, 1129,   "Skin: Medison (ID:340)",           "Скин: Медисон (ID:340)",                       20,  127,    129}, //128
    {5, 1130,   "Skin: Noys MC (ID:341)",           "Скин: Нойс МС (ID:341)",                       20,  128,    130}, //129
    {5, 1131,   "Skin: Pasha Texnik (ID:342)",      "Скин: Паша Техник (ID:342)",                   20,  129,    131}, //130
    {5, 1132,   "Skin: Restorator (ID:343)",        "Скин: Ресторатор (ID:343)",                    20,  130,    132}, //131
    {5, 1133,   "Skin: Richi (ID:344)",             "Скин: Ричи (ID:344)",                          20,  131,    133}, //132
    {5, 1134,   "Skin: Sasha Grey (ID:345)",        "Скин: Саша Грей (ID:345)",                     20,  132,    134}, //133
    {5, 1135,   "Skin: Yuriy Dudi (ID:346)",        "Скин: Юрий Дудь (ID:346)",                     20,  133,    135}, //134
    {5, 1136,   "Skin: Navalniy (ID:375)",          "Скин: Навальний (ID:375)",                     20,  134,    136}, //135
    {5, 1137,   "Skin: Putin (ID:376)",             "Скин: Путин (ID:376)",                         20,  135,    137}, //136
    {5, 1138,   "Skin: Anonymus (ID:377)",          "Скин: Анонимус (ID:377)",                      20,  136,    100} //137

};
*/
new DonateInfo[][donateinfo] =
{
	//==============================================[ Рулетки ]=============================================//
	{341,	"Chest Rulet (donate)", 			"Сундук рулетки (донат)", 			6000, 	3, 		1},//0
	{313,	"Bronze Rulet", 					"Бронзовая рулетка", 				15, 	0, 		2},//1
	{314,	"Silver Rulet", 					"Серебряная рулетка", 				50, 	1, 		3},//2
	{315,	"Gold Rulet", 						"Золотая рулетка", 					90, 	2, 		0},//3
	//==============================================[ Сертификаты ]=========================================//
	{528,	"Certificate FBI Truck", 			"СертиФикат FBI Truck", 			5200, 	53,	5},//4
	{539,	"Certificate Vortex", 				"СертиФикат Vortex", 				5200, 	4, 		6},//5
	{563,	"Certificate Raindance", 			"СертиФикат Raindance", 			14000, 	5, 		7},//6
	{524,	"Certificate Cement Truck", 		"СертиФикат Cement Truck", 			12000, 	6, 		8},//7
	{342,	"Certificate Infernus (Launch)",	"СертиФикат Infernus (Launch)", 	4900, 	7, 		9},//8
	{343,	"Certificate Cheetah (Launch)", 	"СертиФикат Cheetah (Launch)", 		4900, 	8, 		10},//9
	{344,	"Certificate Buffalo (Launch)", 	"СертиФикат Buffalo (Launch)", 		4900, 	9, 		11},//10
	{345,	"Certificate Banshee (Launch)", 	"СертиФикат Banshee (Launch)", 		4900, 	10, 	12},//11
	{346,	"Certificate Bullet (Launch)", 		"СертиФикат Bullet (Launch)", 		4900, 	11, 	13},//12
	{347,	"Certificate Comet (Launch)", 		"СертиФикат Comet (Launch)", 		4900, 	12, 	14},//13
	{348,	"Certificate Super GT (Launch)",	"СертиФикат Super GT (Launch)", 	4900, 	13, 	15},//14
	{349,	"Certificate Huntley (Launch)", 	"СертиФикат Huntley (Launch)", 		4900, 	14, 	16},//15
	{350,	"Certificate Turismo (Launch)", 	"СертиФикат Turismo (Launch)", 		4900, 	15, 	17},//16
	{351,	"Certificate Windsor (Launch)", 	"СертиФикат Windsor (Launch)", 		4900, 	16, 	18},//17
	{352,	"Certificate Jester (Launch)", 		"СертиФикат Jester (Launch)", 		4900, 	17, 	19},//18
	{353,	"Certificate Sultan (Launch)", 		"СертиФикат Sultan (Launch)", 		4900, 	18, 	20},//19
	{354,	"Certificate Elegy (Launch)", 		"СертиФикат Elegy (Launch)", 		4900, 	19, 	21},//20
	{355,	"Certificate Phoenix (Launch)", 	"СертиФикат Phoenix (Launch)", 		4900, 	20, 	22},//21
	{356,	"Certificate Cabbie (Launch)", 		"СертиФикат Cabbie (Launch)", 		5100, 	21, 	23},//22
	{487,	"Certificate Maverick", 			"СертиФикат Maverick", 				5500, 	22, 	24},//23
	{522,	"Certificate NRG-500", 				"СертиФикат NRG-500", 				3500, 	23, 	25},//24
	{571,	"Certificate Karting", 				"СертиФикат Картинг", 				4000, 	24, 	26},//25
	
	{1172,  "Certificate Mercedes-AMG GT",      "СертиФикат Mercedes-AMG GT",       4000,   25,     27},// 26
	{1173,  "Certificate Mercedes-Benz G63 AMG","СертиФикат Mercedes-Benz G63 AMG", 4000,  	26,     28},// 27
	{1174,  "Certificate Audi RS6",             "СертиФикат Audi RS6",       		4000,   27,     29},// 28
	{1175,  "Certificate BMW X5",      			"СертиФикат BMW X5",       			4000,   28,     30},// 29
	{1176,  "Certificate Chevrolet Crovvete Stingray", "СертиФикат Chevrolet Crovvete Stingray",       4000,   29,     31},// 30
	{1177,  "Certificate Chevrolet Cruze",      "СертиФикат Chevrolet Cruze",       4000,   30,     32},// 31
	{1178,  "Certificate Lexus LX",      		"СертиФикат Lexus LX",       	4000,   31,     33},// 32
	{1179,  "Certificate Porsche 911",      	"СертиФикат Porsche 911",       	4000,   32,     34},// 33
	{1180,  "Certificate Porsche Cayenne",      "СертиФикат Porsche Cayenne",       4000,   33,     35},// 34
	{1181,  "Certificate Bentley",      		"СертиФикат Bentley",      			4000,   34,     36},// 35

	{1182,  "Certificate BMW M8",      			"СертиФикат BMW M8",       			4000,   35,     37},// 36
	{1183,  "Certificate Mercedes E63",      	"СертиФикат Mercedes E63",       	4000,   36,     38},// 37
	{1185,  "Certificate Volkswagen Touareg",   "СертиФикат Volkswagen Touareg",    4000,   37,     39},// 38
	{1186,  "Certificate Lamborghini Urus",     "СертиФикат Lamborghini Urus",      4000,   38,     40},// 39
	{1187,  "Certificate Audi Q8",          	"СертиФикат Audi Q8",       		4000,   39,     41},// 40
	{1188,  "Certificate Dodge Charger",      	"СертиФикат Dodge Charger",       	4000,   40,     42},// 41
	{1189,  "Certificate Acura NSX",         	"СертиФикат Acura NSX",       		4000,   41,     43},// 42
	{1190,  "Certificate Volvo T6",      		"СертиФикат Volvo T6",       		4000,   42,     44},// 43
	{1191,  "Certificate Range Rover",      	"СертиФикат Range Rover",       	4000,   43,     45},// 44
	{1192,  "Certificate Honda Civic Type-R",   "СертиФикат Honda Civic Type-R",    4000,   44,     46},// 45
	{1193,  "Certificate Lexus Sport-S",      	"СертиФикат Lexus Sport-S",       	4000,   45,     47},// 46
	{1194,  "Certificate Ford Mustang",      	"СертиФикат Ford Mustang",       	4000,   46,     48},// 47
	{1195,  "Certificate Volvo XC90",     		"СертиФикат Volvo XC90",       		4000,   47,     49},// 48
	{1196,  "Certificate Jaguar F-pace",      	"СертиФикат Jaguar F-pace",       	4000,   48,     50},// 49
	{1197,  "Certificate Kia Optima",     		"СертиФикат Kia Optima",       		4000,   49,     51},// 50
	{1198,  "Certificate BMW Z4 40i",      		"СертиФикат BMW Z4 40i",       		4000,   50,     52}, // 51
	{1199,  "Certificate Mercedes-Benz S600",   "СертиФикат Mercedes-Benz S600",    4000,   51,     53}, // 52
	{1207,  "Certificate Rolls-Royce Cullinan", "СертиФикат Rolls-Royce Cullinan",  4000,   52,     4}, // 53
	//==============================================[ Телефоны ]==============================================//
	{379,	"Samsung Galaxy S10 (White)",       "Samsung Galaxy S10 (Белый)",   	600,    55,		55},//54
	{390,	"iPhone X (White)",       			"iPhone X (Белый)",   				600,    54,		54},//55
	//==============================================[ Аксессуары ]=============================================//
	{801,	"Modification Negr with coffin",	"Модификация Негр c гробом",		300000,	125,     57},//56
	{802,	"Modification Darth vader",			"Модификация Дарт Вейдер",			300000,	56,     58},//57
	{803,	"Modification Angel",				"Модификация Ангел",				300000,	57,     59},//58
	{804,	"Modification Sparta",				"Модификация Спарта",				300000,	58,     60},//59
	{805,	"Modification Cyborg",				"Модификация Киборг",				300000,	59,     61},//60
	{806,	"Modification Skull",				"Модификация Череп",				300000,	60,     62},//61
	{807,	"Modification Pubg",				"Модификация Пабг",					300000,	61,     63},//62
	{808,	"Modification Death",				"Модификация Смерть",				300000,	62,     64},//63
	{809,	"Modification Demon with wings",	"Модификация Демон с крыльями",		300000,	63,     65},//64
	{811,	"Modification Sonic",				"Модификация Соник",				300000,	64,     66},//65
	{812,	"Modification Chemist",				"Модификация Химик",				300000,	65,     67},//66
	{813,	"Modification Deadpool",			"Модификация Дэдпул",				300000,	66,     68},//67
	{804,	"Modification Executioner",			"Модификация Палач",				300000,	67,     69},//68
	{815,	"Modification Demon",				"Модификация Демон",				300000,	68,     70},//69
	{816,	"Modification Fashion Jack",		"Модификация Модный Джек",			300000,	69,     71},//70
	{817,	"Modification Celebration",			"Модификация Праздник",				300000,	70,     72},//71
	{818,	"Modification Sponge Bob",			"Модификация Спанч Боб",			300000,	71,     73},//72
	{441,	"The machine on the radio remote",	"The machine on the radio remote",	2000,	72,     74},//73
	{464,	"Airplane on the radio remote",		"Airplane on the radio remote",		2000,	73,     75},//74
	{465,	"Helicopter on Radio remote (1)",	"Helicopter on Radio remote (1)",	2000,	74,     76},//75
	{501,	"Helicopter on Radio remote (2)",	"Helicopter on Radio remote (2)",	2000,	75,     77},//76
	{564,	"Tank on the radio remote",			"Tank on the radio remote",			2000,	76,     78},//77
	{612,	"Angelskoe Kolco (Head)",			"Ангельское кольЦо на голову",		9000,	77,		79},//78
	{613,	"Molotok (spine)",					"Молоток на спину",					1950,	78,		80},//79
	{614,	"Leyka (right thigh)",				"Канистра на правое бедро",	 		1950,	79,		81},//80
	{615,	"Foto pparat (chest)",				"Фотоаппарат на грудь",				1950,	80,		82},//81
	{616,	"Minigun (spine)",					"Миниган на спину",					1800,	81,		83},//82
	{617,	"Flare (spine)",					"Огнемет на спину",					1800,	82,		84},//83
	{618,	"Scythe (spine)",					"Коса на спину",					1800,	83,		85},//84
	{619,	"Modification (Halloween)",			"Модификация (Halloween)",			7000,	84,		86, "~r~HALLOWEN"},//85
	{620,	"Modification (Classic)",			"Модификация (Classic)",			7000,	85,		87, "~y~CLASSIC"},//86
	{621,	"Modification (Future)",			"Модификация (Future)",				7000,	86,		88, "~y~FUTURE"},//87
	{622,	"Modification (CyberPunk)",			"Модификация (CyberPunk)",			8000,	87,		89, "~y~CYBERPUNK"},//88
	{623,	"Modification (Future Taxi)",		"Модификация (Future Taxi)",		8000,	88,		90, "~y~FUTURE~n~TAXI"},//89
	{624,	"Improvement for vehicle",			"Улучшение для автомобиля",			4000,	89,		91},//90
	{625,	"Chiken to left shoulder",			"Петух на плечо",	 				800,	90,		92},//91
	{626,	"Amulet",							"Амулет",	 						1000,	91,		93},//92
	{627,	"Parrot to left shoulder",			"Попугай на плечо",	 				700,	92,     94},//93
	{628,	"Kolonka",							"Колонка",	 						650,	93,     95},//94
	{629,	"Boombox",							"Бумбокс (красный)",	 			700,	94,     96},//95
	{630,	"Skate",							"Скейт",							530,	95,     97},//96
	{631,	"Board",							"Доска для серФа 1",	 			490,	96,     98},//97
	{632,	"Board",							"Доска для серФа 2",				490,	97,     99},//98
	{633,	"Board",							"Доска для серФа 3",	 			490,	98,     100},//99
	{634,	"Guitar (Red)",						"Гитара (Красная)",	 				170,	99,     101},//100
	{635,	"Guitar (White)",					"Гитара (Белая)",	 				170,	100,     102},//101
	{636,	"Guitar (Black)",					"Гитара (Черная)",	 				170,	101,     103},//102
	{637,	"Shlyapa",							"Шляпа (Цилиндр)",	 				100,	102,     104},//103
	{638,	"Shlyapa",							"Шляпа",	 						100,	103,     105},//104
	{639,	"Bag (brown)",						"Чемодан (коричневый)",	 			350,	104,     106},//105
	{640,	"Red suitcase",						"Красный чемодан",	 				450,	105,     107},//106
	{641,	"Chainsaw on spine",				"Бензопила на спину",	 			500,	106,     108},//107
	{642,	"Vozdushnyy shar #1",				"Воздушный шар #1",	 				10000,	107,     109},//108
	{643,	"Vozdushnyy shar #2",				"Воздушный шар #2",	 				10000,	108,     110},//109
	{644,	"Vozdushnyy shar #3",				"Воздушный шар #3",	 				10000,	109,     111},//110
	{645,	"Vozdushnyy shar #4",				"Воздушный шар #4",	 				10000,	110,     112},//111
	{646,	"Vozdushnyy shar #5",				"Воздушный шар #5",	 				10000,	111,     113},//112
	{647,	"Vozdushnyy shar #6",				"Воздушный шар #6",	 				10000,	112,     114},//113
	{648,	"Vozdushnyy shar #7",				"Воздушный шар #7",	 				10000,	113,     115},//114
	{777,	"Devil Head",						"Голова Дъявола",					100000,	114,     116},//115
	{778,	"Exoskeleton",						"Экзоскелет",						100000,	115,     117},//116
	{779,	"Oyster Wings",						"Крылья Устрицы",					100000,	116,     118},//117
	{780,	"Shield",							"Щит",								100000,	117,     119},//118
	{781,	"Horns",							"Рога",								100000,	118,     120},//119
	{782,	"Boxing helmet",					"Шлем для бокса",					100000,	119,     121},//120
	{788,	"Coronavirus mask",					"Маска от коронавируса",			100000,	120,    122},//121
	{789,	"Katana",							"Катана",							100000,	121,    123},//122
	{825,	"Shield",							"Щит",								100000,	122,    124},//123
	{832,	"Sword",							"Меч",								100000,	123,    125},//124
	{833,	"Pumpkin on the head",				"Тыква на голову",					100000,	124,    56},//125
	//==============================================[ Боксы ]==================================================//
	{1090,	"Rare Box Yellow",					"Rare Box Yellow",					20,		129,     127},//126
	{1091,	"Rare Box Blue",					"Rare Box Blue",					30,		126,     128},//127
	{1092,	"Rare Box Red",						"Rare Box Red",						40,		127,     129},//128
	{1093,	"Rare Box Acsessory",				"Rare Box Acsessory",				40,		128,     126},//129
	//==============================================[ Скины ]==================================================//
	{1101,   "Skin: Alber (ID:312)",             "Скин: Альберт (ID:312)",       20,   	130,    131}, //130
    {1102,   "Skin: Amiran (ID:313)",            "Скин: Амиран (ID:313)",        20,   	131, 	132}, //131
    {1103,   "Skin: Bathory (ID:314)",           "Скин: Батори (ID:314)",        20,  	132,  	133}, //132
    {1104,   "Skin: Bryliov (ID:315)",           "Скин: Брулёв (ID:315)",        20,  	133,  	134}, //133
    {1105,   "Skin: Egor Kreed (ID:316)",        "Скин: Егор Крид (ID:316)",     20,  	134,  	135}, //134
    {1106,   "Skin: Delorenzy (ID:317)",         "Скин: Альберт (ID:317)",       20,  	135,  	136}, //135
    {1107,   "Skin: Edward Bill (ID:318)",       "Скин: Альберт (ID:318)",       20,  	136,  	137}, //136
    {1108,   "Skin: Elghey (ID:319)",            "Скин: Элджей (ID:319)",        20,  	137,  	138}, //137
    {1109,   "Skin: Eva Elfire (ID:320)",        "Скин: Eva Elfire(ID:320)",     20, 	138,   	139}, //138
    {1110,   "Skin: Feduck (ID:321)",            "Скин: Feduck (ID:321)",        20,  	139,  	140}, //139
    {1111,   "Skin: Kovalevskiy (ID:322)",       "Скин: Ковалевский (ID:322)",   20,  	140,  	141}, //140
    {1112,   "Skin: Litvin (ID:323)",            "Скин: Литвин (ID:323)",        20,  	141,   	142}, //141
    {1113,   "Skin: Maras Shakur (ID:324)",      "Скин: Марас Шакур (ID:324)",   20, 	142,    143}, //142
    {1114,   "Skin: Morgenshtern (ID:325)",      "Скин: Моргенштерн (ID:325)",   20, 	143,    144}, //143
    {1115,   "Skin: Habib Nurgomedov (ID:326)",  "Скин: Хабиб Нургамомедов (ID:326)", 20,144,    145}, //144
    {1116,   "Skin: Oxxxymiron (ID:327)",        "Скин: Oxxxymiron (ID:327)",    20,  	145,    146}, //145
    {1117,   "Skin: Dante (ID:328)",             "Скин: Данте (ID:328)",         20,  	146,    147}, //146
    {1118,   "Skin: Ravyazen (ID:329)",          "Скин: Ravyazen (ID:329)",      20,  	147,    148}, //147
    {1119,   "Skin: Romeru (ID:330)",            "Скин: Romeru (ID:330)",        20,  	148,    149}, //148
    {1120,   "Skin: Sam Mason (ID:331)",         "Скин: Сем Мейсон (ID:331)",    20,  	149,    150}, //149
    {1121,   "Skin: Diana Shurigina (ID:332)",   "Скин: Диана Шурыгина (ID:332)",20,  	150,    151}, //150
    {1122,   "Skin: Farmer (ID:333)",            "Скин: Farmer (ID:333)",    	 20,	151,    152}, //151
    {1123,   "Skin: Basta (ID:334)",             "Скин: Баста (ID:334)",         20,  	152,    153}, //152
    {1124,   "Skin: Olga Buzova (ID:335)",       "Скин: Ольга Бузова (ID:335)",  20,  	153,    154}, //153
    {1125,   "Skin: Dzuba (ID:336)",             "Скин: Дзюба (ID:336)",         20,  	154,    155}, //154
    {1126,   "Skin: Ivan Uragan (ID:337)",       "Скин: Иван Ураган (ID:337)",   20,  	155,    156}, //155
    {1127,   "Skin: Hovanskiy (ID:338)",         "Скин: Хованский (ID:338)",     20,  	156,    157}, //156
    {1128,   "Skin: Lukashenko (ID:339)",        "Скин: Лукашенко (ID:339)",     20,  	157,    158}, //157
    {1129,   "Skin: Medison (ID:340)",           "Скин: Медисон (ID:340)",       20,  	158,    159}, //158
    {1130,   "Skin: Noys MC (ID:341)",           "Скин: Нойс МС (ID:341)",       20,  	159,    160}, //159
    {1131,   "Skin: Pasha Texnik (ID:342)",      "Скин: Паша Техник (ID:342)",   20,  	160,    161}, //160
    {1132,   "Skin: Restorator (ID:343)",        "Скин: Ресторатор (ID:343)",    20,  	161,    162}, //161
    {1133,   "Skin: Richi (ID:344)",             "Скин: Ричи (ID:344)",          20, 	162,    163}, //162
    {1134,   "Skin: Sasha Grey (ID:345)",        "Скин: Саша Грей (ID:345)",     20,  	163,    164}, //163
    {1135,   "Skin: Yuriy Dudi (ID:346)",        "Скин: Юрий Дудь (ID:346)",     20,  	164,    165}, //164
    {1136,   "Skin: Navalniy (ID:375)",          "Скин: Навальний (ID:375)",     20,  	165,    166}, //165
    {1137,   "Skin: Putin (ID:376)",             "Скин: Путин (ID:376)",         20,  	166,    167}, //166
    {1138,   "Skin: Anonymus (ID:377)",          "Скин: Анонимус (ID:377)",      20,  	167,    130} //167
};
new
	Text:telephonexiaomi[58],
	Text:telephoneiphone[67],
	Text:telephoneSamsung[72];

new
	MPName[257] = "Чтобы попасть на Мероприятие, нужно написать /gotp в чат.",
	MPHealth = 100,
	MPArmour = 100,
	MPPlayerLimit = 1000,
	MPPlayersLimit = 1000,
	MPTime = 60,
	MPTimeStatic = 60,
	MPWeapon = 1,
	MPTeleport,
	Float:TeleportFloat[3],
	TeleportInfoq[2],
	bool:Teleport;
new Text:TeleportEvent[14] = {Text:INVALID_TEXT_DRAW, ...};
new Float:position_unjail[3];
new Float:r_wanted;

new MySQL:mysql;
//new MySQL:mysql_logs;

new Text:noparkzone[3] = {Text:INVALID_TEXT_DRAW, ...};

new PageItems[MAX_PLAYERS];
new PlusItems[MAX_PLAYERS];


//launch
new Text:launch[9] = {Text:INVALID_TEXT_DRAW, ...};
new PlayerText:launchsize[MAX_PLAYERS][1] = {PlayerText:INVALID_TEXT_DRAW, ...};
new launchtimer[MAX_PLAYERS];
new Float:LauncherSize[MAX_PLAYERS];
new LauncherSize2[MAX_PLAYERS];
new skorostb[MAX_PLAYERS];

//Recon
new PlayerText:recon_p[MAX_PLAYERS][50] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:reconmenu[MAX_PLAYERS][7] = {PlayerText:INVALID_TEXT_DRAW, ...};

new ObjectCarSelect[MAX_PLAYERS];
new ObjectCarEdit[MAX_VEHICLES][6];
new PickObject[MAX_PLAYERS];
new bool:AttachEdit[MAX_PLAYERS char];
new bool:TextDrawLoad[MAX_PLAYERS char];
new bool:ContainerTDOpen[MAX_PLAYERS char];

new Item_SelectID[MAX_PLAYERS];
new Item_Select[MAX_PLAYERS];

new Float:rcX[MAX_PLAYERS], Float:rcY[MAX_PLAYERS], Float:rcZ[MAX_PLAYERS];

//new SV_LSTREAM:BogdanVoice[MAX_PLAYERS] = { SV_NULL, ... };//Войс

new Text3D:VoiceText[MAX_PLAYERS] = {NONE_3D_TEXT, ...};
new bool:VoiceTextCreate[MAX_PLAYERS char];

//=============================[ Инвентарь ]=============================//
enum InvInfo
{
    ItemModel,
	Float:ItemPosX,
	Float:ItemPosY,
	Float:ItemPosZ,
	Float:ItemPosC,
	MaxItem,
	ItemInfo[800],
	ItemName[64],
	ItemType,
	ItemColor
};
new ItemsInfo[MAX_ITEMS][InvInfo];
new InvColor[][3] =
{
	{0xBFAE56FF, 0xBF5656FF, 0x994545FF},
	{0xBFA856FF, 0xBF565BFF, 0x994549FF},
	{0xBFA356FF, 0xBF5661FF, 0x99454EFF},
	{0xBF9E56FF, 0xBF5666FF, 0x994552FF},
	{0xBF9956FF, 0xBF566BFF, 0x994556FF},
	{0xBF9356FF, 0xBF5670FF, 0x99455AFF},
	{0xBF8E56FF, 0xBF5676FF, 0x99455EFF},
	{0xBF8956FF, 0xBF567BFF, 0x994562FF},
	{0xBF8456FF, 0xBF5680FF, 0x994566FF},
	{0xBF7E56FF, 0xBF5685FF, 0x99456AFF},
	{0xBF7956FF, 0xBF568BFF, 0x99456FFF},
	{0xBF7456FF, 0xBF5690FF, 0x994573FF},
	{0xBF6F56FF, 0xBF5695FF, 0x994577FF},
	{0xBF6956FF, 0xBF569AFF, 0x99457BFF},
	{0xBF6456FF, 0xBF56A0FF, 0x994580FF},
	{0xBF5F56FF, 0xBF56A5FF, 0x994584FF},
	{0xBF5A56FF, 0xBF56AAFF, 0x994588FF},
	{0xBF5658FF, 0xBF56AFFF, 0x99458CFF},
	{0xBF565DFF, 0xBF56B5FF, 0x994591FF},
	{0xBF5662FF, 0xBF56BAFF, 0x994595FF},
	{0xBF5668FF, 0xBF56BFFF, 0x994599FF},
	{0xBF566DFF, 0xBA56BFFF, 0x954599FF},
	{0xBF5672FF, 0xB556BFFF, 0x914599FF},
	{0xBF5677FF, 0xAF56BFFF, 0x8C4599FF},
	{0xBF567DFF, 0xAA56BFFF, 0x884599FF},
	{0xBF5682FF, 0xA556BFFF, 0x844599FF},
	{0xBF5687FF, 0xA056BFFF, 0x804599FF},
	{0xBF568CFF, 0x9A56BFFF, 0x7B4599FF},
	{0xBF5692FF, 0x9556BFFF, 0x774599FF},
	{0xBF5697FF, 0x9056BFFF, 0x734599FF},
	{0xBF569CFF, 0x8B56BFFF, 0x6F4599FF},
	{0xBF56A1FF, 0x8556BFFF, 0x6A4599FF},
	{0xBF56A7FF, 0x8056BFFF, 0x664599FF},
	{0xBF56ACFF, 0x7B56BFFF, 0x624599FF},
	{0xBF56B1FF, 0x7656BFFF, 0x5E4599FF},
	{0xBF56B6FF, 0x7056BFFF, 0x5A4599FF},
	{0xBF56BCFF, 0x6B56BFFF, 0x564599FF},
	{0xBD56BFFF, 0x6656BFFF, 0x524599FF},
	{0xB856BFFF, 0x6156BFFF, 0x4E4599FF},
	{0xB356BFFF, 0x5B56BFFF, 0x494599FF},
	{0xAE56BFFF, 0x5656BFFF, 0x454599FF},
	{0xA856BFFF, 0x565BBFFF, 0x454999FF},
	{0xA356BFFF, 0x5661BFFF, 0x454E99FF},
	{0x9E56BFFF, 0x5666BFFF, 0x455299FF},
	{0x9956BFFF, 0x566BBFFF, 0x455699FF},
	{0x9356BFFF, 0x5670BFFF, 0x455A99FF},
	{0x8E56BFFF, 0x5676BFFF, 0x455E99FF},
	{0x8956BFFF, 0x567BBFFF, 0x456299FF},
	{0x8456BFFF, 0x5680BFFF, 0x456699FF},
	{0x7E56BFFF, 0x5685BFFF, 0x456A99FF},
	{0x7956BFFF, 0x568BBFFF, 0x456F99FF},
	{0x7456BFFF, 0x5690BFFF, 0x457399FF},
	{0x6F56BFFF, 0x5695BFFF, 0x457799FF},
	{0x6956BFFF, 0x569ABFFF, 0x457B99FF},
	{0x6456BFFF, 0x56A0BFFF, 0x458099FF},
	{0x5F56BFFF, 0x56A5BFFF, 0x458499FF},
	{0x5A56BFFF, 0x56AABFFF, 0x458899FF},
	{0x5658BFFF, 0x56AFBFFF, 0x458C99FF},
	{0x565DBFFF, 0x56B5BFFF, 0x459199FF},
	{0x5662BFFF, 0x56BABFFF, 0x459599FF},
	{0x5668BFFF, 0x56BFBFFF, 0x459999FF},
	{0x566DBFFF, 0x56BFBAFF, 0x459995FF},
	{0x5672BFFF, 0x56BFB5FF, 0x459991FF},
	{0x5677BFFF, 0x56BFAFFF, 0x45998CFF},
	{0x567DBFFF, 0x56BFAAFF, 0x459988FF},
	{0x5682BFFF, 0x56BFA5FF, 0x459984FF},
	{0x5687BFFF, 0x56BFA0FF, 0x459980FF},
	{0x568CBFFF, 0x56BF9AFF, 0x45997BFF},
	{0x5692BFFF, 0x56BF95FF, 0x459977FF},
	{0x5697BFFF, 0x56BF90FF, 0x459973FF},
	{0x569CBFFF, 0x56BF8BFF, 0x45996FFF},
	{0x56A1BFFF, 0x56BF85FF, 0x45996AFF},
	{0x56A7BFFF, 0x56BF80FF, 0x459966FF},
	{0x56ACBFFF, 0x56BF7BFF, 0x459962FF},
	{0x56B1BFFF, 0x56BF76FF, 0x45995EFF},
	{0x56B6BFFF, 0x56BF70FF, 0x45995AFF},
	{0x56BCBFFF, 0x56BF6BFF, 0x459956FF},
	{0x56BFBDFF, 0x56BF66FF, 0x459952FF},
	{0x56BFB8FF, 0x56BF61FF, 0x45994EFF},
	{0x56BFB3FF, 0x56BF5BFF, 0x459949FF},
	{0x56BFAEFF, 0x56BF56FF, 0x459945FF},
	{0x56BFA8FF, 0x5BBF56FF, 0x499945FF},
	{0x56BFA3FF, 0x61BF56FF, 0x4E9945FF},
	{0x56BF9EFF, 0x66BF56FF, 0x529945FF},
	{0x56BF99FF, 0x6BBF56FF, 0x569945FF},
	{0x56BF93FF, 0x70BF56FF, 0x5A9945FF},
	{0x56BF8EFF, 0x76BF56FF, 0x5E9945FF},
	{0x56BF89FF, 0x7BBF56FF, 0x629945FF},
	{0x56BF84FF, 0x80BF56FF, 0x669945FF},
	{0x56BF7EFF, 0x85BF56FF, 0x6A9945FF},
	{0x56BF79FF, 0x8BBF56FF, 0x6F9945FF},
	{0x56BF74FF, 0x90BF56FF, 0x739945FF},
	{0x56BF6FFF, 0x95BF56FF, 0x779945FF},
	{0x56BF69FF, 0x9ABF56FF, 0x7B9945FF},
	{0x56BF64FF, 0xA0BF56FF, 0x809945FF},
	{0x56BF5FFF, 0xA5BF56FF, 0x849945FF},
	{0x56BF5AFF, 0xAABF56FF, 0x889945FF},
	{0x58BF56FF, 0xAFBF56FF, 0x8C9945FF},
	{0x5DBF56FF, 0xB5BF56FF, 0x919945FF},
	{0x62BF56FF, 0xBABF56FF, 0x959945FF},
	{0x68BF56FF, 0xBFBF56FF, 0x999945FF},
	{0x6DBF56FF, 0xBFBA56FF, 0x999545FF},
	{0x72BF56FF, 0xBFB556FF, 0x999145FF},
	{0x77BF56FF, 0xBFAF56FF, 0x998C45FF},
	{0x7DBF56FF, 0xBFAA56FF, 0x998845FF},
	{0x82BF56FF, 0xBFA556FF, 0x998445FF},
	{0x87BF56FF, 0xBFA056FF, 0x998045FF},
	{0x8CBF56FF, 0xBF9A56FF, 0x997B45FF},
	{0x92BF56FF, 0xBF9556FF, 0x997745FF},
	{0x97BF56FF, 0xBF9056FF, 0x997345FF},
	{0x9CBF56FF, 0xBF8B56FF, 0x996F45FF},
	{0xA1BF56FF, 0xBF8556FF, 0x996A45FF},
	{0xA7BF56FF, 0xBF8056FF, 0x996645FF},
	{0xACBF56FF, 0xBF7B56FF, 0x996245FF},
	{0xB1BF56FF, 0xBF7656FF, 0x995E45FF},
	{0xB6BF56FF, 0xBF7056FF, 0x995A45FF},
	{0xBCBF56FF, 0xBF6B56FF, 0x995645FF},
	{0xBFBD56FF, 0xBF6656FF, 0x995245FF},
	{0xBFB856FF, 0xBF6156FF, 0x994E45FF},
	{0xBFB356FF, 0xBF5B56FF, 0x994945FF},
	{0x1C1F21FF, 0x1C1F21FF, 0x555555FF}
};
//~~~~~~~~~~~~~~~~~~~~~~~~~[ Инвентарь ]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
new prost;
new healthpd[8];
new actor[MAX_ACTORS];
new portpick[5];
new MatsDel_CP = -1;
new Text:kbox[2] = {Text:INVALID_TEXT_DRAW, ...};
new Text:HungerFon[2] = {Text:INVALID_TEXT_DRAW, ...};
new ACLoadInfo;
////////////////////
new GroveCar[7],BallasCar[8],CoronosCar[7],VagosCar[7],RifaCar[7],CarWolfs[12];
new RMCars[13], YakuzaCars[10], LCNCars[19];

new ZallFunction[3]=0;
new Text:Map[4] = {Text:INVALID_TEXT_DRAW, ...};
new CodeDostup;
//=============================[ MAX_PLAYERS ]=============================//
//
enum _temp_
{
	pArendaCar,
	pcarid,
	pTimer,
	bool:SPECTPLAYER,
	BreakKey,
	BreakCount,
	BreakTime,
	pDeathCar,
	PT_AntiFlood,
	pLimit,
	pSellCar,
	pLavka,
	vReis,
	TimeHeal,
	ReReport,
	NumReports,
	ReportID,
	pEvent,
	pKladProgress,
	pKladKey,
	pKladID[2],
	pKladOtevet[256],
	Float:pPosVIP[3]
}
new pTemp[MAX_PLAYERS][_temp_];
new ReportMessage[MAX_PLAYERS][128];
new AnswerMessage[MAX_PLAYERS][71];
new pPickupID[MAX_PLAYERS];
new PlayerTimerID[MAX_PLAYERS];
new PlayerTimerTick[MAX_PLAYERS];
new TradeTime[MAX_PLAYERS][2];
new TradeID[MAX_PLAYERS];
new TradeMoney[MAX_PLAYERS];
new TradeBTC[MAX_PLAYERS];
new TradeEURO[MAX_PLAYERS];
new bool:TradeSend[MAX_PLAYERS char];
new TradeTimeCD[MAX_PLAYERS];
new bool:TradeOpen[MAX_PLAYERS char];
new bool:PlayerUsedCode[MAX_PLAYERS char];
new TradeLock[MAX_PLAYERS char];
new pmID[MAX_PLAYERS];
new PhoneID[MAX_PLAYERS][50];
//Аксы
new UseAcsID[MAX_PLAYERS];
new UseAcsColor[MAX_PLAYERS];
new UseAcsEnchant[MAX_PLAYERS];
//Аксы для тачек
new UseModCar[MAX_PLAYERS][8];
new bool:InvCarOpen[MAX_PLAYERS char];
//Аксы для тачек
new TrashID[MAX_PLAYERS];
new HouseID[MAX_PLAYERS];
new bool:AcceptGoogle[MAX_PLAYERS char];
new GoogleCodeTemp[MAX_PLAYERS][16];
new gPlayerGoogleTries[MAX_PLAYERS char];
new bool:ShowIP[MAX_PLAYERS char];
new bool:KillList[MAX_PLAYERS char];
new Reports[MAX_PLAYERS] = {-1, ...};
new CodeDostupTimer[MAX_PLAYERS];
new bool:TimeSelect[MAX_PLAYERS];
new bool:TimeSelectDoctor[MAX_PLAYERS];
new bool:TimeHealDied[MAX_PLAYERS];
new Text3D:DiedText[MAX_PLAYERS];
new Text3D:cretits;
new Float:DiedPos[MAX_PLAYERS][3];
new	bool: captch_opened[MAX_PLAYERS];
new	captch_code[MAX_PLAYERS][7];
new	PlayerText: captch_PTD[MAX_PLAYERS][2] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText: captch_code_PTD[MAX_PLAYERS][5][7];
new	captch_idbuy[MAX_PLAYERS];
new besttime[MAX_PLAYERS];
new	PlayerText:Donate_Player[MAX_PLAYERS][42] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:Donate_Text[MAX_PLAYERS][3] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	bool:donateopen[MAX_PLAYERS char];
new	Donate_Select[MAX_PLAYERS];
new itemphone[MAX_PLAYERS];
new	bool:telephoneon[MAX_PLAYERS char];
new	bool:pSvon[MAX_PLAYERS char];
new bool:MPTeleportPlayer[MAX_PLAYERS char];
new GetPlayerPointDMZZ[MAX_PLAYERS];
new bool:animloading[MAX_PLAYERS char];
new bool:InNZone[MAX_PLAYERS char];
new bool:nomeraproverka[MAX_PLAYERS char];
new nomera[MAX_PLAYERS][64];
new rePassword[MAX_PLAYERS][50];
new bool:AcceptFam[MAX_PLAYERS char];
new bool:InventStatus[MAX_PLAYERS char];
new bool:MenuStatus[MAX_PLAYERS char];
new bool:BuyStatus[MAX_PLAYERS char];
new bool:BuyPageSelectTable[MAX_PLAYERS][2];
new bool:LogoStatus[MAX_PLAYERS char];
new bool:InvLockItem[MAX_PLAYERS char];
new InventClick[MAX_PLAYERS char];
new InventCreatedMenu[MAX_PLAYERS];
new InventPage[MAX_PLAYERS];
new MenuPage[MAX_PLAYERS];
new	InvTimer[MAX_PLAYERS];
new PlayerText:Item_Menu_Shop[MAX_PLAYERS][7] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:Invent[MAX_PLAYERS][51] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:InventAks[MAX_PLAYERS][8] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:InventAksSlot[MAX_PLAYERS][8] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:InvOwnableCar[MAX_PLAYERS][17] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:InventSlot[MAX_PLAYERS][MAX_SLOT_INV] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:InventSlotAmount[MAX_PLAYERS][MAX_SLOT_INV] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:InventMenu[MAX_PLAYERS][13] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:InventButton[MAX_PLAYERS][2] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	InventMenuButton[MAX_PLAYERS][6];
new	PlayerText:Invent_Menu[MAX_PLAYERS][7] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:Invent_Menu_Page[MAX_PLAYERS][150] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:Invent_Menu_PageAmount[MAX_PLAYERS][150] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:Invent_Trade[MAX_PLAYERS][21] = {PlayerText:INVALID_TEXT_DRAW, ...};

enum bogdan_top
{
	NewSkinClient,
	NewSkinLauncher,
	NewSkinItem
};
new NewSkin[][bogdan_top] = 
{
	{18, 312, 1101},
	{18, 313, 1102},
	{18, 314, 1103},
	{18, 315, 1104},
	{18, 316, 1105},
	{18, 317, 1106},
	{18, 318, 1107},
	{18, 319, 1108},
	{18, 329, 1109},
	{18, 332, 1110},
	{18, 340, 1111},
	{18, 382, 1112},
	{18, 383, 1113},
	{18, 398, 1114},
	{18, 399, 1115},
	{18, 795, 1116},
	{18, 796, 1117},
	{18, 797, 1118},
	{18, 798, 1119},
	{18, 799, 1120},
	{18, 907, 1121},
	{18, 908, 1122},
	{18, 1206, 1123},
	{18, 1326, 1124},
	{18, 1573, 1125},
	{18, 1699, 1126},
	{18, 2883, 1127},
	{18, 2884, 1128},
	{18, 3136, 1129},
	{18, 3137, 1130},
	{18, 3138, 1131},
	{18, 3139, 1132},
	{18, 3140, 1133},
	{18, 3141, 1134},
	{18, 3142, 1135},
	{18, 3143, 1136},
	{18, 3144, 1137},
	{18, 3145, 1138},
	{18, 3146, 1139},
	{18, 3147, 1140},
	{18, 3148, 1141},
	{18, 3149, 1142},
	{18, 3150, 1143},
	{18, 3151, 1144},
	{18, 3152, 1146},
	{18, 3153, 1147},
	{18, 3154, 1148},
	{18, 3159, 1149},
	{18, 3160, 1150},
	{18, 3161, 1151},
	{18, 3162, 1152},
	{18, 3163, 1153},
	{18, 3164, 1154},
	{18, 3165, 1155},
	{18, 3166, 1156},
	{18, 3176, 1157},
	{18, 3177, 1158},
	{18, 3179, 1159},
	{18, 3180, 1160},
	{18, 3181, 1161},
	{18, 3182, 1162},
	{18, 3183, 1163},
	{18, 3184, 1164},
	{18, 3185, 1165},
	{18, 3186, 1166},
	{18, 3188, 1167},
	{18, 3189, 1168},
	{18, 3190, 1169},
	{18, 3191, 1170},
	{18, 3192, 1171},
	{18, 4804, 1289},
	{18, 4805, 1290},
	{18, 5085, 1291},
	{18, 5090, 1292},
	{18, 5091, 1293},
	{18, 5092, 1294},
	{18, 5093, 1295},
	{18, 5094, 1296},
	{18, 5095, 1297},
	{18, 5096, 1298},
	{18, 5097, 1299},
	{18, 5098, 1300},
	{18, 5099, 1301},
	{18, 5100, 1302},
	{18, 5101, 1303},
	{18, 5102, 1304},
	{18, 5103, 1305},
	{18, 5104, 1306},
	{18, 5376, 1307},
	{18, 5377, 1308},
	{18, 5378, 1309},
	{18, 5379, 1310},
	{18, 5380, 1311},
	{18, 4773, 1312}
};

enum bogdan_topchik
{
	NewCarClient,
	NewCarLauncher,
	NewCarName[42]
};
new NewCar[][bogdan_topchik] = 
{
    {560, 612, "Mercedes-AMG GT"},
    {579, 613, "Mercedes G63 AMG"},
    {436, 614, "Audi RS6"},
    {400, 662, "BMW X5"},
    {451, 663, "Chevrolet Crovvete Stingray"},
    {507, 665, "Chevrolet Cruze"},
    {490, 666, "Lexus LX"},
    {411, 667, "Porsche 911"},
    {490, 668, "Porsche Cayenne"},
    {541, 699, "Bentley"},
    {494, 793, "BMW M8"},
    {580, 794, "Mercedes E63"},
    {559, 909, "Mercedes-AMG 63"},
    {442, 965, "Volkswagen Touareg"},
    {400, 1194, "Lamborghini Urus"},
    {400, 1195, "Audi Q8"},
    {535, 1196, "Dodge Charger"},
    {494, 1197, "Acura NSX"},
    {400, 1198, "Volvo V60"},
    {490, 1199, "Range Rover"},
    {411, 1200, "Honda Civic Type-R"},
    {566, 1201, "Lexus Sport-S"},
    {475, 1202, "Ford Mustang"},
    {411, 1203, "Volvo XC90"},
    {411, 1204, "Jaguar F-pace"},
    {516, 1205, "Kia Optima"},
    {546, 3155, "BMW Z4 40i"},
    {547, 3156, "Mercedes-Benz S600"},
    {400, 3157, "BMW XF"},
    {411, 3158, "Lexus RX450H"},
    {522, 3194, "Ducati Diavel"},
    {522, 3195, "Ducati Panigale"},
    {522, 3196, "Ducati Ducnaked"},
    {522, 3197, "Kawasaki Ninja ZX-10RR"},
    {522, 3198, "Western"},
	{560, 3199, "Rolls-Royce Cullinan"},
	{545, 3200, "Volkswagen Beetle"},
	{451, 3201, "Bugatti Divo"},
	{541, 3202, "Bugatti Chiron"},
	{545, 3203, "Nieuwe Fiat 500"},
	{400, 3204, "Mercedes GLS"},
	{579, 3205, "Mercedes G65"},
	{411, 3206, "Lamborghini Aventador"},
	{400, 3207, "Range Rover Sport"},
	{585, 3208, "BMW 530i"},
	{566, 3209, "Mercedes W221"},
	{400, 3210, "Tesla Model X"},
	{551, 3211, "Nissan Leaf"},
	{562, 3212, "Nissan Silvia"},
	{400, 3213, "Subaru Forester XT"},
	{580, 3215, "Subaru Legacy"},
	{560, 3216, "Hyundai Sonata"},
	{547, 3217, "BMW E38"},
	{492, 3218, "Mercedes E-55"},
	{466, 3219, "Mercedes 500E"},
	{451, 3220, "Storm"},
	{451, 3222, "McQueen"},
	{525, 3223, "Mater"},
	{563, 3224, "Buckingham"},
	{579, 3232, "Infinity FX50"},
	{490, 3233, "Lexus RX"},
	{400, 3234, "Kia Sportage"},
	{419, 3235, "Volkswagen Golf"},
	{541, 3236, "Audi R8"},
	{445, 3237, "Camry XV40"},
	{560, 3238, "Camry 3.5"},
	{566, 3239, "BMW M5 E60"},
	{540, 3240, "BMW M5 F90"},
	{560, 3245, "Mercedes-Maybach"},
	{480, 3247, "Mercedes-AMG GT"},
	{560, 3248, "Porsche Panamera"},
	{529, 3251, "Volkswagen Passat"},
	{562, 4774, "BMW M760Li"},
	{560, 4775, "Aston Martin One-77"},
	{445, 4776, "Bentley Mulliner Bacalar"},
	{445, 4777, "Bentley Bentayga"},
	{562, 4778, "BMW M4 Comp"},
	{541, 4779, "BMW i8"},
	{419, 4780, "GG90"},
	{529, 4781, "Honda Integra"},
	{560, 4782, "BMW New 3 Series"},
	{400, 4783, "Mercedes S500 W223"},
	{411, 4789, "Porsche Taycan"},
	{559, 4791, "UAZ PATRIOT"},
	{525, 4792, "GAZ VOLGA"},
	{560, 4794, "Jaguar"},
	{559, 4784, "RPTR"},
	{541, 4785, "FRJ50 Datasheet"},
	{560, 4786, "Mercedes-Benz SLR McLaren"},
	{561, 4787, "BRZ"},
	{525, 4788, "LADA Vesta SW Cross"},
	{562, 4790, "ENZO"},
	{560, 4793, "Mercedes-Benz X-Class"},
	{559, 4795, "RCBARON"},
	{555, 4796, "DODDCAR"},
	{411, 4797, "CRTSRT"},
	{411, 4798, "Ford Explorer"},
	{411, 4799, "Ford Ambulance"},
	{411, 4800, "Deltaplan"},
	{411, 4801, "Gidrocycle"},
	{411, 4802, "Lamborghini Aventador Police"},
	{411, 4803, "Ferrari Police Edition"}
};

/*-------- [ Система крафта ] --------*/
new PlayerText:Invent_Craft[MAX_PLAYERS][59] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:Invent_CraftColor[MAX_PLAYERS][11] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:Invent_CraftColorBox[MAX_PLAYERS][1] = {PlayerText:INVALID_TEXT_DRAW, ...};
new bool:CraftOpened[MAX_PLAYERS char];
new bool:CraftColorOpened[MAX_PLAYERS char];
new CraftTabSelect[MAX_PLAYERS char];
new CraftItemSelect[MAX_PLAYERS char];
new CraftPageSelect[MAX_PLAYERS char];
new CraftAmount[MAX_PLAYERS char];
new CraftWriteSlot[MAX_PLAYERS][2];
new CraftSelectColor[MAX_PLAYERS];
new CraftStart[MAX_PLAYERS char];
new CraftTimer[MAX_PLAYERS char];
enum crInfo
{
	CraftType,
	CraftItem,
	CraftChance,
	CraftNeed[5],
	CraftNeedAmount[5],
	CraftCost,
	CraftMax
};
new CraftInfo[][crInfo] = 
{
	// Аксессуары
	{1, 1077, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1078, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1079, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1080, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1081, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1082, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1083, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1084, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1085, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1086, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1087, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1088, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 1089, 5, {652, 653, 654, 1649, 1649}, {30, 35, 40, 0, 0}, 500000, 10},
	{1, 612, 5, {652, 653, 654, 1649, 1649}, {5, 25, 15, 0, 0}, 100000, 10},
	{1, 613, 6, {652, 653, 1649, 1649, 1649}, {5, 5, 0, 0, 0}, 50000, 10},
	{1, 767, 5, {652, 653, 1649, 1649, 1649}, {20, 5, 0, 0, 0}, 20000, 10},
	{1, 614, 6, {652, 653, 1649, 1649, 1649}, {5, 5, 0, 0, 0}, 70000, 10},
	{1, 615, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 500000, 10},
	{1, 617, 6, {652, 653, 365, 1649, 1649}, {5, 5, 10, 0, 0}, 40000, 10},
	{1, 618, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 700000, 10},
	{1, 625, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 626, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 800000, 10},
	{1, 627, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 350000, 10},
	{1, 628, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 629, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 630, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 631, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 632, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 633, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 634, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 635, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 636, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 637, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 638, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 639, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 640, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 641, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 642, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 643, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 644, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 645, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 646, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 647, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 648, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 649, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 650, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 651, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 656, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 800, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 801, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 802, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{1, 766, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{1, 769, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	// Скины
	{2, 11, 5, {652, 653, 365, 363, 1649}, {5, 10, 5, 10, 0}, 100000, 10},
	{2, 16, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 49, 5, {652, 653, 365, 363, 1649}, {5, 5, 5, 10, 0}, 100000, 10},
	{2, 57, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 61, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 70, 6, {652, 653, 365, 1649, 1649}, {5, 25, 5, 0, 0}, 100000, 10},
	{2, 86, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 104, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 102, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 106, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 103, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 105, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 107, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 110, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 109, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 113, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 115, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 114, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 120, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 147, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 149, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 153, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 155, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 158, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 159, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 162, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 163, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 168, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 178, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	{2, 203, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 100000, 10},
	// Chemistry
	{3, 411, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 515, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 420, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 406, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 462, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 481, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 488, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 519, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 520, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 523, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 522, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 539, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 544, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 545, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 556, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 557, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 588, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 601, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{3, 596, 5, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 900000, 10},
	{3, 597, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	//Working
	{4, 336, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 337, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 335, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 338, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 359, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 358, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{4, 327, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	// Phone
	{5, 385, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{5, 383, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{5, 396, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10},
	{5, 394, 6, {652, 653, 365, 1649, 1649}, {5, 5, 5, 0, 0}, 10000, 10}
};
enum CraftPos 
{
	Float:cPosX,
	Float:cPosY,
	Float:cPosZ,
};
new CraftPosition[][CraftPos] = 
{
	{1089.8160, 949.3332, 1600.9935}
};
/*-------- ====================== --------*/
new bool:Proviziya[MAX_PLAYERS char];
new TutState[MAX_PLAYERS];
new maskademon[MAX_PLAYERS];
new Text:demon_TD = Text:INVALID_TEXT_DRAW;
new UseDrugsTime[MAX_PLAYERS];
new PlayerText:HungerProgres[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new Float:CenaRaboti[MAX_PLAYERS];
new CanUse[MAX_PLAYERS];
new dBiz[MAX_PLAYERS];
new pMusicOn[MAX_PLAYERS];
new bool:ShowMap[MAX_PLAYERS];
new bool:NeedDell[MAX_PLAYERS];
new Text:PlayerDraw[MAX_PLAYERS] = {Text:INVALID_TEXT_DRAW, ...};
new Text:StatsDraw[MAX_PLAYERS] = {Text:INVALID_TEXT_DRAW, ...};
new TimetoReturn[MAX_PLAYERS];
new Vnedren[MAX_PLAYERS];
new setcheck[MAX_PLAYERS];
new StatusMoneta[MAX_PLAYERS][6];
new bool:BlockOrel[MAX_PLAYERS char];
new OrelID[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new OrelMoney[MAX_PLAYERS];
new Getemer[MAX_PLAYERS];
new Ingatre[MAX_PLAYERS];
new kasmenu[MAX_PLAYERS];
new TimeBus[MAX_PLAYERS];
new buytime[MAX_PLAYERS];
new deal[MAX_PLAYERS];
new gpss[MAX_PLAYERS];
new lomanim[MAX_PLAYERS];
new medlomka[MAX_PLAYERS];
new startlomka[MAX_PLAYERS];
new cuffer[MAX_PLAYERS];
new EngineStalled[MAX_PLAYERS];
new Carskill[MAX_PLAYERS];
new rabden[MAX_PLAYERS];
new notneedm[MAX_PLAYERS];
new bool:animan[MAX_PLAYERS char];
new	bool:selfi[MAX_PLAYERS char];
new	Float:selfi1[MAX_PLAYERS][3];
new	Float:selfi2[MAX_PLAYERS];
new caoffer[MAX_PLAYERS];
new cartrade[MAX_PLAYERS];
new cardop[MAX_PLAYERS];
new ferman[MAX_PLAYERS];
new selfrac[MAX_PLAYERS];
new gskin[MAX_PLAYERS];
new BusTime[MAX_PLAYERS];
new BusMoney[MAX_PLAYERS];
new jlock[MAX_PLAYERS];
new InJobs[MAX_PLAYERS];
new kostiKos[MAX_PLAYERS];
new engines[MAX_PLAYERS];
new bool:Predlog[MAX_PLAYERS char];
new avir[MAX_PLAYERS];
new aint[MAX_PLAYERS];
new onkey[MAX_PLAYERS];
new ReconMenus[MAX_PLAYERS];
new bool:ReconOpen[MAX_PLAYERS char];
new Healttime[MAX_PLAYERS];
new TimeMessage[MAX_PLAYERS];
new vipob[MAX_PLAYERS];
new sellcarto[MAX_PLAYERS];
new idaofcar[MAX_PLAYERS];
new PlayerAFK[MAX_PLAYERS];
new PlayerAFKTime[MAX_PLAYERS];
new bool:PlayerSetBotLvl[MAX_PLAYERS char];
new	bool:Phonestat[MAX_PLAYERS char];
new	Pstroka[MAX_PLAYERS][7];
new bool:bumreader[MAX_PLAYERS char];
new	bool:FPlayerText[MAX_PLAYERS];
new	Text3D:PlayerFamily[MAX_PLAYERS];
new Text3D:DescriptionText[MAX_PLAYERS] = {NONE_3D_TEXT, ...};
new bool:DescriptionTextCreate[MAX_PLAYERS char];
new	Text3D:BalloonText[MAX_PLAYERS];
new	BalloonVehicle[MAX_PLAYERS];
new RCVehicle[MAX_PLAYERS];
new bool:UpdatePlayerText[MAX_PLAYERS];
new AntiFloodTypeFamily[MAX_PLAYERS];
new AntiFloodPickupLic[MAX_PLAYERS];
new FamEntered[MAX_PLAYERS];
new player_tattoos[MAX_PLAYERS][4];
new	PlayerText:Ppnumber[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new	PlayerText:callname[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:bydilnik[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};

/*Система майнинга*/
new Float:VideoCardManagement[5][3] =
{
    {-1658.4623, -244.2459, 14.14845},
    {-1656.4078, -244.2418, 14.1484},
    {-1654.4594, -244.2415, 14.1484},
    {-1652.4283, -244.2435, 14.1484},
    {-1650.4478, -244.2418, 14.1484}
};
new MaxVideoCart[10][1] =
{
    {50}, {40}, {20}, {15}, {10}, {5}, {3}, {2}, {1}, {1}
};
new AmountMiningVideoCard = 25;

/*Система рулеток*/

new 
	PlayerText:RollTD[MAX_PLAYERS][49] = {PlayerText:INVALID_TEXT_DRAW, ...},
	RoulleteItem[MAX_PLAYERS][4][16], 
	bool:RouletteOpen[MAX_PLAYERS char], 
	RoulleteItemAmount[MAX_PLAYERS][4][16], 
	bool:RoulleteItemMoney[MAX_PLAYERS][4][16],
	PlayerText:RoulettePageSlot[MAX_PLAYERS][16] = {PlayerText:INVALID_TEXT_DRAW, ...}, 
	PlayerText:RoulettePageAmount[MAX_PLAYERS][16] = {PlayerText:INVALID_TEXT_DRAW, ...}, 
	RollTimeUpdate[MAX_PLAYERS];


/*Система точилок*/

new PlayerText:ProgreesEnchantTD[MAX_PLAYERS][7] = {PlayerText:INVALID_TEXT_DRAW, ...};
new Float:ProgressWhiteEnchant[MAX_PLAYERS];
new EnchantClose[MAX_PLAYERS];
new EnchantTimer[MAX_PLAYERS];
new bool:EnchantOpen[MAX_PLAYERS char];
new	PlayerText:Invent_Enchant[MAX_PLAYERS][28] = {PlayerText:INVALID_TEXT_DRAW, ...};
new ItemEnchant[MAX_PLAYERS];
new ItemEnchantStoneAmount[MAX_PLAYERS];
new ItemEnchantLvl[MAX_PLAYERS];
new ItemEnchantSlot[MAX_PLAYERS] = -1;
new ItemEnchantSlots[MAX_PLAYERS] = -1;
new	PlayerText:InventAksEnchant[MAX_PLAYERS][8] = {PlayerText:INVALID_TEXT_DRAW, ...};
new bool:ProccesEnchant[MAX_PLAYERS] = false;
new PlayerText:Invent_Menu_PageEnchant[MAX_PLAYERS][150]  = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:InventSlotEnchant[MAX_PLAYERS][MAX_SLOT_INV] = {PlayerText:INVALID_TEXT_DRAW, ...};
	
new Float:ProcentEnchant[15][1] =
{
	{50.0},
	{25.5},
	{20.0},
	{15.0},
	{12.5},
	{9.0},
	{4.5},
	{2.2},
	{1.0},
	{1.0},
	{1.0},
	{1.0},
	{1.0},
	{1.0},
	{1.0}
};
enum enchantacs
{
	e_enchant,
	e_slot,
	e_text[64],
	e_number
}

new EnchantAcs[][enchantacs] = 
{
	{4, 1, "+1 HP в мин.", 1}, //0
	{5, 1, "+2 HP в мин.", 2}, //1
	{6, 1, "+3 HP в мин.", 3}, //2
	{7, 1, "+4 HP в мин.", 4}, //3
	{8, 1, "+5 HP в мин.", 5}, //4
	{9, 1, "+6 HP в мин.", 6}, //5
	{10, 1, "+7 HP в мин.", 7}, //6 
	{11, 1, "+8 HP в мин.", 8}, //7
	{12, 1, "+8 HP в мин.", 8}, //8

	{4, 2, "-2% урона", 2}, //0
	{5, 2, "-4% урона", 4}, //1
	{6, 2, "-5% урона", 5}, //2
	{7, 2, "-6% урона", 6}, //3
	{8, 2, "-8% урона", 8}, //4
	{9, 2, "-10% урона", 10}, //5
	{10, 2, "-12% урона", 12}, //6 
	{11, 2, "-15% урона", 15}, //7
	{12, 2, "-15% урона", 15}, //8

	{4, 3, "+1% урона", 1}, //0
	{5, 3, "+2% урона", 2}, //1
	{6, 3, "+3% урона", 3}, //2
	{7, 3, "+4% урона", 4}, //3
	{8, 3, "+5% урона", 5}, //4
	{9, 3, "+6% урона", 6}, //5
	{10, 3, "+7% урона", 7}, //6 
	{11, 3, "+8% урона", 8}, //7
	{12, 3, "+8% урона", 8}, //8

	{4, 4, "+1% урон", 1}, //0
	{5, 4, "+2% урон", 2}, //1
	{6, 4, "+3% урон", 3}, //2
	{7, 4, "+4% урон", 4}, //3
	{8, 4, "+5% урон", 5}, //4
	{9, 4, "+6% урон", 6}, //5
	{10, 4, "+7% урон", 7}, //6 
	{11, 4, "+8% урон", 8}, //7
	{12, 4, "+8% урон", 8}, //8

	{4, 5, "-2% урона", 2}, //0
	{5, 5, "-4% урона", 4}, //1
	{6, 5, "-5% урона", 5}, //2
	{7, 5, "-6% урона", 6}, //3
	{8, 5, "-8% урона", 8}, //4
	{9, 5, "-10% урона", 10}, //5
	{10, 5, "-12% урона", 12}, //6 
	{11, 5, "-15% урона", 15}, //7
	{12, 5, "-15% урона", 15}, //8

	{4, 6, "+1% критич.урона", 1}, //0
	{5, 6, "+2% критич.урона", 2}, //1
	{6, 6, "+3% критич.урона", 3}, //2
	{7, 6, "+4% критич.урона", 4}, //3
	{8, 6, "+5% критич.урона", 5}, //4
	{9, 6, "+6% критич.урона", 6}, //5
	{10, 6, "+7% критич.урона", 7}, //6 
	{11, 6, "+8% критич.урона", 8}, //7
	{12, 6, "+8% критич.урона", 8} //8

};
/*---------------*/

new PlayerText:Textdrawa, PlayerText:Textdrawb, PlayerText:Textdrawf;
new SobesStatus[MAX_ORGS];
new SobesTime[MAX_ORGS][16];
new SobesTime1[MAX_ORGS];
new SobesTime2[MAX_ORGS];
new SobesMesto[MAX_ORGS][16];

/*-------- [ Система кладов ] --------*/
/*enum htPosition
{
	Float:htPos[3]
}
new HitchPosition[][htPosition] =
{
	{{-1945.2363, 487.5804, 31.9688}},
	{-1685.1499, 582.2961, 34.5250}
};
enum htInfo
{
	htID,
	htStatus,
	htQuestion
}
new HitchInfo[sizeof(HitchPosition)][htInfo];
enum htQuestions
{
	htQuestion[145],
	htAnswer[145]
}
new HitchQuestion[][htQuestions] =
{
	{"Как зовут квестового NPC в деревне Монтгомери ?", "Майкл"},
	{"Сколько нужно EXP для получения 40 уровня, если у тебя 3 lvl 2 exp?", "3254"},
	{"В каком месяце был добавлен информационный центр ?", "Март"},
	{"Какой налог нужен для слёта дома ?", "90000"},
	{"Что может объединить 1000 игроков на сервере ?", "Семья"},
	{"Сколько АЗ стоит в донате 8000 семейной репутации ?", "2400"},
	{"Максимальное количество AZ монет в 1 слоте инвентаря ?", "10000"},
	{"Красная, как яблоко, наклейка с белой надписью ?", "Supreme"},
	{"Максимальная цена на оружие в AMMO для владельцев бизнеса ?", "50000"},
	{"Какая цена у Premium Vip в AZ монетах ?", "6500"},
	{"Вечно ждущий NPC на вокзале ЛС ?", "Джереми"},
	{"Количество лавок на Центральном Рынке ?", "30"},
	{"Кто однорукий постоянно стоит в казино ?", "Бандит"},
	{"Увеличивает скорость, но не чит, добавляет наклейку, но не Supreme ?", "TwinTurbo"},
	{"Что нужно сделать или получить для выполнения первого начального квеста ?", "Паспорт"},
	{"Кто закопал эти клады ?", "Богдан"},
	{"В каком году был открыт наш проект?", "2016"},
	{"Количество работ в центре занятости?", "10"},
	{"Старый, мудрый, 05 дежурный?", "Николай"},
	{"Каждый проходит через это в начале игры?", "Регистрация"},
	{"Самая популярная игра в казино?", "Кости"},
	{"Как зовут основателя нашего проекта?", "Руслан"},
	{"Когда добавили депозит?", "2019"},
	{"Какой аксессуар может сидеть на плече?", "Попугай"},
	{"В каком году был открыт сервер оргинальной Arizona?", "2014"},
	{"Он бывает 7 раз в неделю, 24 раза в сутки?!", "PayDay"},
	{"Где происходит покупка аксессуаров?", "В донате"},
	{"Любит на репорт отвечать,игрокам всем помогать", "Админ"},
	{"Чем копают клады?", "Лопатой"}
};*/

/*-------- [ Список администраторов с фулл доступом ] --------*/
new FullDostupList[][] =
{
	{"Mr_Wolf"}
};

/*-------- [ Система контейнеров ] --------*/
new PlayerText:ContainerTake[MAX_PLAYERS][64] = {PlayerText:INVALID_TEXT_DRAW, ...};
new Text3D:Conteinertext[10]; 
new Text3D:PrizeCont[10];
new ContainerTime;
new ContainerMapText[20];
new ContainerMaterialObject[40];
new ContainerLeftDoor[10], ContainerRightDoor[10]; 
new ContainerPickup[10];
new bool:ContainerTakeOpen[MAX_PLAYERS char];


enum ContInfo
{
	Float:ContPos[3],
	Float:ContDoorLeftPos[3],
	Float:ContDoorRightPos[3],
	Float:ContDoorLeftPosOpen[3],
	Float:ContDoorRightPosOpen[3],
	ContName[64],
	ContText[64],
	ContID,
	ContCost,
	ContType,
	ContObjectMaterial,
	ContObjectName[64],
	ContObjectText[64],
}
new ContainerInfo[][ContInfo] = 
{
	{{-1739.3700, 191.8370, 3.5547}, {-1738.607178, 191.400772, 5.178199}, {-1740.197998, 191.400772, 5.178199}, {-1737.3541259766, 192.06979370117, 5.1782002449036}, {-1741.4504394531, 192.02169799805, 5.1782002449036}}, // 1
 	{{-1733.1174, 189.2473, 3.5692}, {-1732.354614, 188.811066, 5.192699}, {-1733.945435, 188.811066, 5.192699}, {-1731.1015625, 189.48008728027, 5.1926999092102}, {-1735.1978759766, 189.43199157715, 5.1926999092102}}, // 2
	{{-1722.5510, 123.7143, 3.5547}, {-1721.788208, 123.278084, 5.178199}, {-1723.379028, 123.278084, 5.178199}, {-1720.53515625, 123.94710540771, 5.1782002449036}, {-1724.6314697266, 123.8990020752, 5.1782002449036}}, // 3
	{{-1739.4506, 139.3234, 3.5547}, {-1738.687744, 138.887177, 5.178199}, {-1740.278564, 138.887177, 5.178199}, {-1737.4346923828, 139.55619812012, 5.1782002449036}, {-1741.5310058594, 139.50810241699, 5.1782002449036}}, // 4
	{{-1733.1399, 121.1817, 3.5692}, {-1732.377075, 120.745483, 5.192699}, {-1733.967896, 120.745483, 5.192699}, {-1731.1240234375, 121.41450500488, 5.1926999092102}, {-1735.2203369141, 121.36640167236, 5.1926999092102}}, // 5
	{{-1729.1691, 137.4484, 3.5692}, {-1728.406250, 137.012177, 5.192699}, {-1729.997070, 137.012177, 5.192699}, {-1727.1531982422, 137.68119812012, 5.1926999092102}, {-1731.2495117188, 137.63310241699, 5.1926999092102}}, // 6
	{{-1733.1394, 157.0623, 3.5692}, {-1732.376587, 156.626068, 5.192699}, {-1733.967407, 156.626068, 5.192699}, {-1731.1235351563, 157.29508972168, 5.1926999092102}, {-1735.2198486328, 157.24699401855, 5.1926999092102}}, // 7
	{{-1722.5177, 154.0429, 3.5547}, {-1721.754883, 153.606674, 5.178199}, {-1723.345703, 153.606674, 5.178199}, {-1720.5018310547, 154.27569580078, 5.1782002449036}, {-1724.5981445313, 154.22760009766, 5.1782002449036}}, // 8
	{{-1729.1296, 175.0755, 3.5692}, {-1728.366821, 174.639267, 5.192699}, {-1729.957642, 174.639267, 5.192699}, {-1727.1137695313, 175.30828857422, 5.1926999092102}, {-1731.2100830078, 175.26019287109, 5.1926999092102}}, // 9
	{{-1722.5579, 186.6828, 3.5547}, {-1721.795044, 186.246567, 5.178199}, {-1723.385864, 186.246567, 5.178199}, {-1720.5419921875, 186.91558837891, 5.1782002449036}, {-1724.6383056641, 186.86749267578, 5.1782002449036}} // 10
};
enum ContMap
{
	Float:ContTextLeftPos[3],
	Float:ContTextRightPos[3],
	Float:ContMapLeftPos[3],
	Float:ContMapRightPos[3],
	Float:ContMapMiddlePos[3],
	Float:ContMapDownPos[3],
}
new ContainerMap[][ContMap] =
{
	{{-1737.715942, 186.514862, 5.140759}, {-1741.056030, 186.514862, 5.140759}, {-1737.721802, 186.653641, 5.192191}, {-1741.061768, 186.653641, 5.192191}, {-1739.390503, 186.655655, 6.853194}, {-1739.393677, 186.651627, 3.527187}}, // 1
	{{-1731.463379, 183.925156, 5.155259}, {-1734.803467, 183.925156, 5.155259}, {-1731.469238, 184.063934, 5.206691}, {-1734.809204, 184.063934, 5.206691}, {-1733.137939, 184.065948, 6.867694}, {-1733.141113, 184.061920, 3.541687}}, // 2
	{{-1720.896973, 118.392174, 5.140759}, {-1724.237061, 118.392174, 5.140759}, {-1720.902832, 118.530952, 5.192191}, {-1724.242798, 118.530952, 5.192191}, {-1722.571533, 118.532967, 6.853194}, {-1722.574707, 118.528938, 3.527187}}, // 3
	{{-1737.796509, 134.001266, 5.140759}, {-1741.136597, 134.001266, 5.140759}, {-1737.802368, 134.140045, 5.192191}, {-1741.142334, 134.140045, 5.192191}, {-1739.471069, 134.142059, 6.853194}, {-1739.474243, 134.138031, 3.527187}}, // 4 
	{{-1731.485840, 115.859573, 5.155259}, {-1734.825928, 115.859573, 5.155259}, {-1731.491699, 115.998352, 5.206691}, {-1734.831665, 115.998352, 5.206691}, {-1733.160400, 116.000366, 6.867694}, {-1733.163574, 115.996338, 3.541687}}, // 5
	{{-1727.515015, 132.126266, 5.155259}, {-1730.855103, 132.126266, 5.155259}, {-1727.520874, 132.265045, 5.206691}, {-1730.860840, 132.265045, 5.206691}, {-1729.189575, 132.267059, 6.867694}, {-1729.192749, 132.263031, 3.541687}}, // 6
	{{-1731.485352, 151.740158, 5.155259}, {-1734.825439, 151.740158, 5.155259}, {-1731.491211, 151.878937, 5.206691}, {-1734.831177, 151.878937, 5.206691}, {-1733.159912, 151.880951, 6.867694}, {-1733.163086, 151.876923, 3.541687}}, // 7
	{{-1720.863647, 148.720764, 5.140759}, {-1724.203735, 148.720764, 5.140759}, {-1720.869507, 148.859543, 5.192191}, {-1724.209473, 148.859543, 5.192191}, {-1722.538208, 148.861557, 6.853194}, {-1722.541382, 148.857529, 3.527187}}, // 8
	{{-1727.475586, 169.753357, 5.155259}, {-1730.815674, 169.753357, 5.155259}, {-1727.481445, 169.892136, 5.206691}, {-1730.821411, 169.892136, 5.206691}, {-1729.150146, 169.894150, 6.867694}, {-1729.153320, 169.890121, 3.541687}}, // 9
	{{-1720.903809, 181.360657, 5.140759}, {-1724.243896, 181.360657, 5.140759}, {-1720.909668, 181.499435, 5.192191}, {-1724.249634, 181.499435, 5.192191}, {-1722.578369, 181.501450, 6.853194}, {-1722.581543, 181.497421, 3.527187}} // 10
};
enum ContTemp
{
	ContID,
	ContType,
	ContName[64],
	ContText[64],
	ContCost
}
new ContainerTemp[][ContTemp] = 
{
	{0, 0, "{FAAC58}Ультра {FFFFFF} ( {FAAC58}Ultra{FFFFFF} )", "Ultra", 20000000}, // 1
	{1, 0, "{FAAC58}Премиум {FFFFFF}( {E98E52}Premium{FFFFFF} )", "Premium", 15000000}, // 2
	{2, 0, "{FAAC58}Средний {FFFFFF}( {E98E52}Middle{FFFFFF} )", "Middle", 10000000}, // 3
	{3, 1, "{FAAC58}Бизнес {FFFFFF}( {E98E52}Business{FFFFFF} )", "Business", 2000}, // 4 
	{4, 0, "{FAAC58}Обычный {FFFFFF}( {FAAC58}Usual{FFFFFF} )", "Usual", 4000000} // 5 
};
enum ContRandom
{
	ContItem[40],
	ContMinChance[40],
	ContMaxChance[40],
	ContMinValue[40],
	ContMaxValue[40]
}
new ContainerRandom[][ContRandom] = 
{
	{
		{775, 1080, 641, 1079, 1077, 1096, 365, 364, 315, 314, 562, 415, 328, 327, 355, 571, 1210, 1086, 1083, 1082, 774, 378, 389, 1234, 1235, 1241, 1242, 1245}, 
		{1, 14, 20, 27, 35, 43, 51, 57, 65, 75, 88, 95, 105, 112, 121, 129, 140, 148, 155, 164, 170, 177, 187, 197, 201, 205, 210, 215},
		{13, 19, 26, 34, 42, 50, 56, 64, 74, 87, 94, 104, 111, 120, 128, 139, 147, 154, 163, 169, 176, 186, 196, 200, 204, 209, 214, 218},
		{30, 1, 1, 1, 1, 1, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1, 1, 300, 1, 1, 1, 1, 1, 1, 1},
		{80, 1, 1, 1, 1, 1, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 600, 1, 1, 1, 1, 1, 1, 1}
		//Ultra
	},
	{
		{775, 1077, 1096, 774, 365, 364, 315, 314, 562, 415, 328, 327, 352, 1078, 1079, 627, 649, 650, 651, 378, 389, 1236, 1237, 1239, 1251},
		{1, 15, 19, 24, 32, 39, 47, 54, 60, 68, 77, 83, 91, 98, 105, 112, 120, 129, 131, 138, 147, 156, 159, 165, 168},
		{14, 18, 23, 31, 38, 46, 53, 59, 67, 76, 82, 90, 97, 104, 111, 119, 128, 130, 137, 146, 155, 158, 164, 167, 176},
		{30, 1, 1, 300, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{80, 1, 1, 600, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		//Premium
	},
	{
		{775, 774, 365, 364, 315, 314, 562, 415, 328, 327, 383, 649, 411, 389, 378},
		{1, 17, 27, 34, 40, 48, 59, 66, 74, 84, 97, 112, 121, 129, 138},
		{16, 26, 33, 39, 47, 58, 65, 73, 83, 96, 111, 120, 128, 137, 145},
		{30, 300, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1},
		{80, 600, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		// Middle
	},
	{
		{775, 1079, 1096, 1077, 365, 364, 315, 314, 562, 415, 328, 327, 349, 346, 348, 380, 391, 779, 1084, 1100, 1243, 1244, 1238, 1173},
		{1, 11, 20, 28, 40, 49, 58, 70, 83, 88, 97, 112, 121, 130, 138, 150, 159, 169, 177, 186, 195, 196, 200, 203},
		{10, 19, 27, 39, 48, 57, 69, 82, 87, 96, 111, 120, 129, 137, 149, 158, 168, 176, 185, 194, 196, 199, 202, 205},
		{30, 1, 1, 1, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, 
		{80, 1, 1, 1, 40, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
		// Business
	},
	{
		{775, 774, 365, 364, 315, 314, 562, 415, 328, 327, 349, 346, 348},
		{1, 19, 29, 39, 47, 54, 69, 87, 97, 109, 116, 130, 138},
		{18, 28, 38, 46, 53, 68, 86, 96, 108, 115, 129, 137, 142},
		{30, 200, 10, 10, 1, 1, 1, 1, 500, 100, 1, 1, 1},
		{80, 400, 0, 40, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1}
		//Usual
	}
};
enum ContMatObject
{
	ContObjectMaterial,
	ContObjectName[64],
	ContObjectText[64],
}
new ContainerMatObject[][ContMatObject] = 
{
	{11450, "des_nwtown", "gymtop1_LAe"},
	{11450, "des_nwtown", "gymtop1c_LAe"},
	{10850, "bakerybit2_sfse", "frate64_yellow"},
	{11450, "des_nwtown", "gymtop1b_LAe"},
	{10850, "bakerybit2_sfse", "frate64_red"},
	{5461,  "glenpark6d_lae", "GB_truckdepot20"},
	{10850, "bakerybit2_sfse", "frate64_blue"}
};
enum gCont
{
	gID,
	gOwned[MAX_PLAYER_NAME + 1],
	gCash,
	gTime,
	gTimeClose,
	gTimeDell,
	gPrize[6],
	gPrizeAmount[6],
	bool:gBlockSlot[6],
	gStatus
}
new gContainer[10][gCont];

/*-------- ====================== --------*/


enum dItemCraft
{
	Obj_ID,
	Obj_Amount,
	Obj_Cost
}
new dPlayerItemCraft[][dItemCraft] =
{
	{653, 50, 59},
	{654, 50, 59},
	{655, 50, 59},
	{365, 50, 70},
	{363, 50, 70}
};

enum dAcsessory
{
    dAcsessory_ID,
    dAcsessory_Cost
}
new dPlayerAcsessory[][dAcsessory] =
{
	{1077, 45}, // 1
	{1078, 45}, // 2
	{1079, 45}, // 3
	{1080, 45}, // 4
	{1081, 45}, // 5
	{1082, 45}, // 6
	{1083, 45}, // 7
	{1084, 45}, // 8
	{1085, 45}, // 9
	{1086, 45}, // 10
	{1087, 45}, // 11
	{1088, 45}, // 12
	{1089, 45} // 13
};
enum AccessCmd
{
	CMDName[41]
}
new aAccessCMD[][AccessCmd] =
{
	/*0*/{"makeadmin"},
	/*1*/{"makeadminoff"},
	/*2*/{"createvehicleforbuy"},
	/*3*/{"modellimit"},
	/*4*/{"modellimitadd"},
	/*5*/{"payday"},
	/*6*/{"xpayday"},
	/*7*/{"removeitem"},
	/*8*/{"removeallinv"},
	/*9*/{"giveitem"},
	/*10*/{"addfamhouse"},
	/*11*/{"setcost"},
	/*12*/{"setklass"},
	/*13*/{"changehouse"},
	/*14*/{"changebiz"},
	/*15*/{"setbiztype"},
	/*16*/{"sethousegarage"},
	/*17*/{"asellbiz"},
	/*18*/{"asellhouse"},
	/*19*/{"asellcar"},
	/*20*/{"givemoney"},
	/*21*/{"unawarn"},
	/*22*/{"setstat"},
	/*23*/{"addhouse"},
	/*24*/{"awarn"},
	/*25*/{"giveitemall"},
	/*26*/{"giveazall"},
	/*27*/{"setprefix"},
	/*28*/{"ban"},
	/*29*/{"banip"},
	/*30*/{"banoff"},
	/*31*/{"banipoff"},
	/*32*/{"warn"},
	/*33*/{"changeadminint"},
	/*34*/{"warnoff"},
	/*35*/{"sbanoff"},
	/*36*/{"sban"},
	/*37*/{"swarn"},
	/*38*/{"map"},
	/*39*/{"makeleader"},
	/*40*/{"Ловля бизнесов/домов"}
};

enum DonateCmd
{
	CMDID,
	CMDName[20],
	CMDCost
}

new aDonateCMD[][DonateCmd] =
{
	/*0*/{13, "changehouse", 1049},
	/*1*/{14, "changebiz", 1049},
	/*2*/{17, "asellbiz", 1049},
	/*3*/{18, "asellhouse", 1049},
	/*4*/{19, "asellcar", 1049},
	/*5*/{22, "setstat", 1499},
	/*6*/{28, "ban", 300},
	/*7*/{29, "banip", 450},
	/*8*/{30, "banoff", 300},
	/*9*/{31, "banipoff", 450},
	/*10*/{32, "warn", 150},
	/*11*/{33, "changeadminint", 150},
	/*12*/{34, "warnoff", 300},
	/*13*/{35, "sbanoff", 300},
	/*14*/{36, "sban", 300},
	/*15*/{37, "swarn", 300},
	/*16*/{2, "createvehicleforbuy", 525}
};

enum DonateOther
{
	OtherName[27],
	OtherCost,
	OtherType
}
/*
OtherType 1 - Выйти досрочно с деморгана
OtherType 2 - Снять мут
OtherType 3 - снять аварн
*/
new aDonateOther[][DonateOther] =
{
	{"Выйти досрочно с деморгана", 75, 1},
	{"Снять мут", 75, 2},
	{"Снять awarn", 150, 3}
};

enum DonateCar
{
	CarID,
	CarCost
}

new aDonateCar[][DonateCar] =
{
	{520, 499},
	{519, 299},
	{544, 99},
	{596, 99}
};

enum aDon
{
	DonateName[42],
	DonateCost
}

new aDonate[][aDon] =
{
	{"{FFFFFF}Младший Модератор", 50},
	{"{FFFFFF}Модератор", 100},
	{"{FFFFFF}Старший Модератор", 150},
	{"{FFFFFF}Администратор", 200},
	{"{FFFFFF}Куратор", 300},
	{"{FFFFFF}Заместитель ГА", 400},
	{"{FFFFFF}Главный Администратор", 800},
	{"{FF0000}Основатель", 1500},
	{"{BE2D2D}[АКЦИЯ] ФУЛЛ ДОСТУП + ВСЕ КОМАНДЫ", 1999},
	{"{BE2D2D}Повысить уровень админки", 200}
};


new bool:Ruslan_Razdasha = false;

enum klad
{
	Float:Klad_X,
	Float:Klad_Y,
	Float:Klad_Z,
	kladStatus
}
new KladeInfo[][klad] =
{
	{-1945.2363,487.5804,31.9688, 1},
	{-1685.1499,582.2961,34.5250, 1}, // 10
	{-1601.4185,554.1894,23.9451, 1},
	{-1632.9816,391.4986,7.1875, 1},
	{-1571.1090,44.2709,17.3281, 1},
	{-2108.2954,165.5736,35.0627, 1},
	{-2157.2776,-232.8180,36.5156, 1},
	{-2181.0300,607.5490,35.1641, 1},
	{-2199.2649,681.2418,69.7969, 1},
	{-2189.3538,966.5136,80.0000, 1},
	
	{-2078.7415,1206.6735,42.2263, 1},
	{-2566.0029,323.3477,10.5625, 1}, // 20
	{-2510.2925,141.5534,22.2734, 1},
	{-2902.0017,900.5701,6.0035, 1},
	{-2930.2917,732.7762,5.6390, 1},
	{-2510.3550,138.3699,22.2734, 1},
	{-2762.0000,-164.3020,7.1797, 1},
	{-2538.3533,-247.2860,21.5207, 1},
	{-2398.7026,-219.2670,41.0007, 1},
	{-2483.0562,-261.2476,39.2535, 1},
	{-1208.3705,-1132.7618,129.2188, 1},
	
	{-1208.7192,-824.7427,84.2213, 1}, // 30
	{-1121.1255,-687.9458,33.2937, 1},
	{-1121.4803,-687.9265,32.0126, 1},
	{-939.8353,-519.9071,25.9536, 1},
	{-1308.4088,-1343.0438,145.4684, 1},
	{-757.7637,-1133.0243,62.0623, 1},
	{-1415.6290,-1535.6475,101.7545, 1},
	{-1299.4484,-1502.1544,24.4652, 1},
	{-1259.4033,-1565.8143,35.1370, 1},
	{-1093.9885,-1649.4637,76.3739, 1},
	
	{-987.9436,-1663.8004,76.3672, 1},
	{-946.4857,-1668.2695,76.3672, 1}, // 40
	{-851.4231,-1483.5024,115.2483, 1},
	{-601.4231,-616.5024,23.6365, 1},
	{-335.6015,-460.1879,0.8479, 1},
	{-458.9044,-1725.6531,9.7045, 1},
	{-950.2678,-1954.9377,55.1574, 1},
	{-831.8753,-2165.8411,35.0010, 1},
	{-520.5775,-1948.8591,43.3611, 1},
	{-548.2526,-1907.0018,8.3510, 1},
	
	{-294.6854,-1803.2909,11.1457, 1},
	{-294.3952,-1887.4186,15.3901, 1},
	{-261.9510,-2180.2930,34.9269, 1},
	{-444.2201,-2488.0627,117.8701, 1},
	{-514.9057,-2646.3005,161.1470, 1},
	{-74.9514,-2649.7515,79.7189, 1}, // 50
	{49.6499,-2652.4451,40.4853, 1},
	{-1561.5776,-2482.2241,89.0495, 1},
	{-1674.9524,-2392.0496,98.9760, 1},
	{-1731.0176,-2392.3608,71.6805, 1},
	
	{-1843.0852,-2294.6851,51.6230, 1},
	{-1974.8933,-2392.2876,30.6250, 1},
	{-2102.7153,-2396.7996,38.4766, 1}, // 60
	{-2223.7119,-2376.8699,32.4722, 1},
	{-2131.2727,-2565.6709,31.4823, 1},
	{-2650.0000,-2141.2651,-13.0077, 1},
	{-2654.4636,-2156.2126,48.2784, 1},
	{-2746.6257,-1991.6868,45.1592, 1},
	{-2821.2070,-1825.9000,131.7686, 1},
	{-2777.5930,-1310.4059,127.3812, 1},
	
	{-1908.4657,-1620.2043,25.1564, 1}, // 56, 57, 95, 107, 108, 130
	{-2180.5989,-1756.1151,296.3822, 1},
	{-2347.5896,-1038.9835,87.3454, 1},
	{-785.3065,-131.4090,64.6490, 1},
	{-675.5917,-257.1034,63.4298, 1},
	{-66.9376,-98.4727,12.4750, 1},
	{324.9835,-253.2134,2.1120, 1},
	{365.7549,-113.3041,1.2391, 1},
	{638.1901,64.4707,7.7070, 1},
	{693.8360,288.4446,20.2637, 1},
	{994.3660,162.1803,27.9715, 1},
	
	{965.8641,36.2165,69.8892, 1},
	{951.5135,-33.7583,89.4848, 1},
	{1351.1611,-90.9361,29.7777, 1},
	{1586.6733,33.1212,24.5072, 1},
	{2104.1843,218.0993,9.5408, 1},
	{1712.1775,-112.5990,41.4079, 1},
	{1782.1775,-294.5990,74.2563, 1},
    {2174.5779,-561.1862,126.4490, 1},
	{2347.1570,-568.6138,124.8990, 1},
	{2578.3000,-637.4503,135.6658, 1},
	
	{2788.4812,-637.8004,59.3505, 1},
	{2683.2224,-875.2410,66.9260, 1},
	{1086.9015,-318.5568,73.9922, 1},
	{848.0646,-227.4034,19.9517, 1},
	{824.9612,-475.1855,17.0227, 1},
	{640.9839,-514.5013,16.3359, 1},
	{334.0454,-573.8181,14.6902, 1},
	{152.2051,-529.3922,39.9913, 1},
	{263.1022,-1073.7068,84.7858, 1},
	{256.5311,-1359.0225,53.1094, 1},
	{936.6822,-886.8457,51.2791, 1},
	
	{1620.3719,-890.0058,53.7549, 1},
	{392.0353,-1456.7500,32.1246, 1},
	{955.4179,-1653.0544,14.0005, 1}, // 100
	{1081.1395,-1764.8334,13.3681, 1},
	{1292.8612,-1863.8779,13.5469, 1},
	{1097.5350,-2080.2644,64.9567, 1},
	{1069.5670,-2211.3906,45.5983, 1},
	{2248.1665,-2249.5054,23.0998, 1},
	{2300.0105,-2108.1497,13.5469, 1},
	
	{2505.1934,-1782.6827,13.5469, 1},
	{2883.1934,-2090.6826,5.2511, 1},
	{2636.0105,-1979.3240,13.5484, 1},
	{2411.7327,-1398.2958,24.2123, 1},
	{1986.8594,-1315.8788,21.3807, 1},
	{1940.1388,-1058.8062,24.4155, 1},
	{1887.1996,-1556.1315,13.4249, 1},
	{1737.5574,-1509.3434,13.7226, 1},
	{972.2155,-2156.1594,13.0859, 1},
	{986.3293,-2058.4951,6.0130, 1},
	{894.4435,-1855.8317,9.3273, 1},
	{485.4447,-1806.4292,6.0238, 1},
	{234.7979,-1766.8082,4.7928, 1},
	{1761.0002,596.2509,10.8198, 1},
	{701.0373,1201.5754,13.3906, 1},
	{674.5529,1695.9036,6.7241, 1},
	{1979.5546,1790.3442,12.3679, 1},
	{2930.5039,2103.0139,17.8955, 1},
	{2408.6926,2185.7952,19.0781, 1},
	{2573.3025,2466.6001,10.8203, 1},
	{1899.6462,2772.9932,10.8334, 1},
	{1521.6462,2660.9980,12.7843, 1},
	{1274.6462,2182.9043,11.6575, 1},
	{1031.3827,2913.6196,46.4816, 1},
	{709.3827,1979.2500,4.9375, 1},
	{-117.1888,2256.5425,40.6317, 1},
	{-1032.1658,2070.6685,100.6638, 1},
	{-1114.6407,1117.8633,8.7290, 1},
	{-226.4420,1113.6530,19.7422, 1},
	{-402.0698,1243.4467,10.0333, 1},
	{-744.2406,720.4031,18.1817, 1},
	{-2053.8484,2916.7810,65.8525, 1},
	{-2068.0654,2440.5000,36.8183, 1},
	{-2845.7625,2180.3276,175.4107, 1},
	{429.4844,843.7656,6.4164, 1},
	{1082.6875,1398.7656,6.6328, 1}
};
enum qInfo
{
	kladquestion[256],
	kladanswer[256]
}
new KladObject[sizeof(KladeInfo)][3];
new kladqusans[][qInfo] =
{
	{"Как зовут квестового NPC в деревне Монтгомери ?", "Майкл"},
	{"Сколько нужно EXP для получения 40 уровня, если у тебя 3 lvl 2 exp?", "3254"},
	{"В каком месяце был добавлен информационный центр ?", "Март"},
	{"Какой налог нужен для слёта дома ?", "90000"},
	{"Что может объединить 1000 игроков на сервере ?", "Семья"},
	{"Сколько АЗ стоит в донате 8000 семейной репутации ?", "2400"},
	{"Максимальное количество AZ монет в 1 слоте инвентаря ?", "10000"},
	{"Красная, как яблоко, наклейка с белой надписью ?", "Supreme"},
	{"Максимальная цена на оружие в AMMO для владельцев бизнеса ?", "50000"},
	{"Какая цена у Premium Vip в AZ монетах ?", "6500"},
	{"Вечно ждущий NPC на вокзале ЛС ?", "Джереми"},
	{"Количество лавок на Центральном Рынке ?", "30"},
	{"Кто однорукий постоянно стоит в казино ?", "Бандит"},
	{"Увеличивает скорость, но не чит, добавляет наклейку, но не Supreme ?", "TwinTurbo"},
	{"Что нужно сделать или получить для выполнения первого начального квеста ?", "Паспорт"},
	{"Кто закопал эти клады ?", "Богдан"},
	{"В каком году был открыт наш проект?", "2016"},
	{"Количество работ в центре занятости?", "10"},
	{"Старый, мудрый, 05 дежурный?", "Николай"},
	{"Каждый проходит через это в начале игры?", "Регистрация"},
	{"Самая популярная игра в казино?", "Кости"},
	{"Как зовут основателя нашего проекта?", "Руслан"},
	{"Когда добавили депозит?", "2019"},
	{"Какой аксессуар может сидеть на плече?", "Попугай"},
	{"В каком году был открыт сервер оргинальной "NAME"?", "2014"},
	{"Он бывает 7 раз в неделю, 24 раза в сутки?!", "PayDay"},
	{"Где происходит покупка аксессуаров?", "В донате"},
	{"Любит на репорт отвечать,игрокам всем помогать", "Админ"},
	{"Чем копают клады?", "Лопатой"}
};

enum gtInfo
{
	gtID,
	gtGoID,
	Float:gtX,
	Float:gtY,
	Float:gtZ,
	Float:gtTPX,
	Float:gtTPY,
	Float:gtTPZ,
	gtState,
	gtStayed
}
//boom
new NumMusic[MAX_PLAYERS];
new BoomUse[MAX_PLAYERS];
new Music[MAX_PLAYERS];
new PlayerText:boomtext_p[MAX_PLAYERS][9] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:pboom[MAX_PLAYERS][16] = {PlayerText:INVALID_TEXT_DRAW, ...};
new bool:bumboxopen[MAX_PLAYERS char];
new Text:boomtext[10] = {Text:INVALID_TEXT_DRAW, ...};
new bumboxobject[MAX_PLAYERS];
new Float:BumBoxPos[MAX_PLAYERS][3];
new Text3D: b_box3D[MAX_PLAYERS];
new area_boombox[MAX_PLAYERS];
#define MAX_MUSIC (211)
enum BUMBOX_INFO
{
   bName[60],
   bMusic[200]
};
new BumInfo[MAX_MUSIC][BUMBOX_INFO] =
{
    {"",""},
	{"1._Radio Record FM","http://air.radiorecord.ru:8101/rr_320"},
	{"2._Radio Europa Plus FM","http://ep128server.streamr.ru:8030/ep128"},
	{"3._Radio Premium FM","http://listen.rpfm.ru:9000/premium128"},
	{"4._Radio Zaycev FM","https://zaycevfm.cdnvideo.ru/ZaycevFM_pop_256.mp3"},
	{"5._Radio Dorognoe","http://dorognoe.hostingradio.ru:8000/dorognoe"},
	{"6._Radio Chanson FM","http://chanson.hostingradio.ru:8041/chanson-uncensored128.mp3"},
	{"7._Radio Zabawa FM","http://listen.myradio24.com:9000/8020"},
	{"8._Radio Nawe FM","http://nashe.streamr.ru/nashe-128.mp3"},
	{"9._Radio Pioner FM","http://pioner.hostingradio.ru:8008/ppr128"},
	{"10._Radio Jazz FM","http://jazz.streamr.ru/jazz-128.mp3"},
	{"11._6ix9ine-billy","http://music.arizona-rp.com/bombox/6ix9ine-billy.mp3"},
	{"12._6ix9ine-kooda","http://music.arizona-rp.com/bombox/6ix9ine-kooda.mp3"},
	{"13._Monetochka-kazhdyy_","http://music.arizona-rp.com/bombox/monetochka-kazhdyy_raz.mp3"},
	{"14._Skriptonit-tsepi","http://music.arizona-rp.com/bombox/skriptonit-tsepi.mp3"},
	{"15._t-fest_skriptonit-l","http://music.arizona-rp.com/bombox/t-fest_skriptonit-lambada.mp3"},
	{"16._104-koroleva","http://music.arizona-rp.com/bombox/104-koroleva.mp3"},
	{"17._Afrojack_ravitez-20","http://music.arizona-rp.com/bombox/Afrojack_ravitez-2012.mp3"},
	{"18._Alejandro_fernandez","http://music.arizona-rp.com/bombox/Alejandro_fernandez-s?_que_te_duele.mp3"},
	{"19._Aleksandr_dyumin-ya","http://music.arizona-rp.com/bombox/Aleksandr_dyumin-ya_s_lyubovjyu_igrayu.mp3"},
	{"20._Aleksandr_yaremenko","http://music.arizona-rp.com/bombox/Aleksandr_yaremenko-angely_speshili.mp3"},
	{"21._Aleksandr_zvic-vesn","http://music.arizona-rp.com/bombox/Aleksandr_zvic-vesna.mp3"},
	{"22._Aleksey_bryancev-na","http://music.arizona-rp.com/bombox/Aleksey_bryancev-na_rasstoyanii_lyubvi.mp3"},
	{"23._Alena_dalj-lapochka","http://music.arizona-rp.com/bombox/Alena_dalj-lapochka.mp3"},
	{"24._Allj(eldzhey)-bounc","http://music.arizona-rp.com/bombox/Allj(eldzhey)-bounce.mp3"},
	{"25._Anarhist_mastino-zh","http://music.arizona-rp.com/bombox/Anarhist_mastino-zhenshina_skazka.mp3"},
	{"26._Andrey_klimnyuk-apr","http://music.arizona-rp.com/bombox/Andrey_klimnyuk-aprelj.mp3"},
	{"27._Antirespekt-tishiny","http://music.arizona-rp.com/bombox/Antirespekt-tishiny_hochu.mp3"},
	{"28._Atl-astronavt","http://music.arizona-rp.com/bombox/Atl-astronavt.mp3"},
	{"29._Atl-marabu","http://music.arizona-rp.com/bombox/Atl-marabu.mp3"},
	{"30._Atl-pchelki","http://music.arizona-rp.com/bombox/Atl-pchelki.mp3"},
	{"31._Atl-svyashennyy_rey","http://music.arizona-rp.com/bombox/Atl-svyashennyy_reyv.mp3"},
	{"32._Atl-tancuyte","http://music.arizona-rp.com/bombox/Atl-tancuyte.mp3"},
	{"33._Axwell-more_than_yo","http://music.arizona-rp.com/bombox/Axwell-more_than_you_know.mp3"},
	{"34._Bag_raiders_amice-s","http://music.arizona-rp.com/bombox/Bag_raiders_amice-shooting_stars.mp3"},
	{"35._Bassjackers&bali_ba","http://music.arizona-rp.com/bombox/Bassjackers&bali_bandits-are_you_randy.mp3"},
	{"36._Basta-sansara","http://music.arizona-rp.com/bombox/Basta-sansara.mp3"},
	{"37._Bingo_players_and_g","http://music.arizona-rp.com/bombox/Bingo_players_and_goshfather-everybody.mp3"},
	{"38._Bounce_inc.-nobody_","http://music.arizona-rp.com/bombox/Bounce_inc.-nobody_likes.mp3"},
	{"39._Breathe_carolina&de","http://music.arizona-rp.com/bombox/Breathe_carolina&delayers-long_live_house_music.mp3"},
	{"40._Breathe_carolina&dr","http://music.arizona-rp.com/bombox/Breathe_carolina&dropgun-rhythm_is_a_dancer.mp3"},
	{"41._Breathe_carolina&su","http://music.arizona-rp.com/bombox/Breathe_carolina&sunstars-dysylm.mp3"},
	{"42._Brohug-on_fire","http://music.arizona-rp.com/bombox/Brohug-on_fire.mp3"},
	{"43._Burito-po_volnam","http://music.arizona-rp.com/bombox/Burito-po_volnam.mp3"},
	{"44._Burito-shtrihi","http://music.arizona-rp.com/bombox/Burito-shtrihi.mp3"},
	{"45._Coldblake&roogu-mov","http://music.arizona-rp.com/bombox/Coldblake&roogu-move_it.mp3"},
	{"46._Dan_balan-nashe_let","http://music.arizona-rp.com/bombox/Dan_balan-nashe_leto.mp3"},
	{"47._Dangerous_vibes-sta","http://music.arizona-rp.com/bombox/Dangerous_vibes-stadiumx.mp3"},
	{"48._Daniil_danilevskiy-","http://music.arizona-rp.com/bombox/Daniil_danilevskiy-odna.mp3"},
	{"49._Desiigner-panda","http://music.arizona-rp.com/bombox/Desiigner-panda.mp3"},
	{"50._Dima_bilan-devochka","http://music.arizona-rp.com/bombox/Dima_bilan-devochka_ne_plachj.mp3"},
	{"51._Dima_bilan-egoist","http://music.arizona-rp.com/bombox/Dima_bilan-egoist.mp3"},
	{"52._Dj_slon&katya_ft._r","http://music.arizona-rp.com/bombox/Dj_slon&katya_ft._roman_vasilenko-life_is_good.mp3"},
	{"53._Dnf_i.got.u-rhythm_","http://music.arizona-rp.com/bombox/Dnf_i.got.u-rhythm_is_a_dancer.mp3"},
	{"54._Don_omar-te_quiero_","http://music.arizona-rp.com/bombox/Don_omar-te_quiero_pa?mi.mp3"},
	{"55._Doni-son","http://music.arizona-rp.com/bombox/Doni-son.mp3"},
	{"56._Ekaterina_suvorova-","http://music.arizona-rp.com/bombox/Ekaterina_suvorova-vetreno.mp3"},
	{"57._Eldzhey&feduk-rozov","http://music.arizona-rp.com/bombox/Eldzhey&feduk-rozovoe_vino.mp3"},
	{"58._Eldzhey-ecstasy","http://music.arizona-rp.com/bombox/Eldzhey-ecstasy.mp3"},
	{"59._Eldzhey-heyguys","http://music.arizona-rp.com/bombox/Eldzhey-heyguys.mp3"},
	{"60._Eldzhey-minimal","http://music.arizona-rp.com/bombox/Eldzhey-minimal.mp3"},
	{"61._Eldzhey-rvanye_dzhi","http://music.arizona-rp.com/bombox/Eldzhey-rvanye_dzhinsy.mp3"},
	{"62._Eldzhey-uljtramarin","http://music.arizona-rp.com/bombox/Eldzhey-uljtramarinovye_tancy.mp3"},
	{"63._Eldzhey-zef","http://music.arizona-rp.com/bombox/Eldzhey-zef.mp3"},
	{"64._Elka-mir_otkryvaets","http://music.arizona-rp.com/bombox/Elka-mir_otkryvaetsya.mp3"},
	{"65._Elka-vpusti_muzykuм","http://music.arizona-rp.com/bombox/Elka-vpusti_muzyku.mp3"},
	{"66._Eminem-untouchable","http://music.arizona-rp.com/bombox/Eminem-untouchable.mp3"},
	{"67._Epiik-booty_rock","http://music.arizona-rp.com/bombox/Epiik-booty_rock.mp3"},
	{"68._Estradarada-vite_na","http://music.arizona-rp.com/bombox/Estradarada-vite_nado_vyyti.mp3"},
	{"69._Eva_poljna-siljnee_","http://music.arizona-rp.com/bombox/Eva_poljna-siljnee_menya.mp3"},
	{"70._Exodus&saladin-keep","http://music.arizona-rp.com/bombox/Exodus&saladin-keep_it_rockin.mp3"},
	{"71._Face-ya_ronyayu_zap","http://music.arizona-rp.com/bombox/Face-ya_ronyayu_zapad.mp3"},
	{"72._Faderx-no_rush","http://music.arizona-rp.com/bombox/Faderx-no_rush.mp3"},
	{"73._Faydee-sun_don_t_sh","http://music.arizona-rp.com/bombox/Faydee-sun_don_t_shine.mp3"},
	{"74._Feduk-luna-park","http://music.arizona-rp.com/bombox/Feduk-moryak.mp3"},
	{"75._Feduk-moryak","http://music.arizona-rp.com/bombox/Feduk-luna-park.mp3"},
	{"76._Feenixpawl&daniel_e","http://music.arizona-rp.com/bombox/Feenixpawl&daniel_etienne-dancin_.mp3"},
	{"77._Fresh_til__death-si","http://music.arizona-rp.com/bombox/Fresh_til__death-sippin_.mp3"},
	{"78._Garmiani-fogo","http://music.arizona-rp.com/bombox/Garmiani-fogo.mp3"},
	{"79._Gazirovka-black","http://music.arizona-rp.com/bombox/Gazirovka-black.mp3"},
	{"80._Gianluca_vacchi-tru","http://music.arizona-rp.com/bombox/Gianluca_vacchi-trump_it.mp3"},
	{"81._Gradusy&kravc-vyhod","http://music.arizona-rp.com/bombox/Gradusy&kravc-vyhodi_za_menya.mp3"},
	{"82._Grandy-gulyaka","http://music.arizona-rp.com/bombox/Grandy-gulyaka.mp3"},
	{"83._Gruppa_zapretka-ves","http://music.arizona-rp.com/bombox/Gruppa_zapretka-vesna.mp3"},
	{"84._Gta&damien_n-drix-d","http://music.arizona-rp.com/bombox/Gta&damien_n-drix-dundun.mp3"},
	{"85._Hanna_-puli","http://music.arizona-rp.com/bombox/Hanna_-puli.mp3"},
	{"86._Haus_of_panda-rio_(","http://music.arizona-rp.com/bombox/Haus_of_panda-rio_(original_mix).mp3"},
	{"87._Hot_shit!-more_ener","http://music.arizona-rp.com/bombox/Hot_shit!-more_energy_more_power.mp3"},
	{"88._Humng-far_away_(ori","http://music.arizona-rp.com/bombox/Humng-far_away_(original_mix).mp3"},
	{"89._Inna-don_t_mind","http://music.arizona-rp.com/bombox/Inna-don_t_mind.mp3"},
	{"90._J._balvin&willy_wil","http://music.arizona-rp.com/bombox/J._balvin&willy_william-mi_gente.mp3"},
	{"91._Jax_jones-breathe","http://music.arizona-rp.com/bombox/Jax_jones-breathe.mp3"},
	{"92._Jax_jones-instructi","http://music.arizona-rp.com/bombox/Jax_jones-instruction.mp3"},
	{"93._Joel_fletcher&reece","http://music.arizona-rp.com/bombox/Joel_fletcher&reece_low-dark_beat.mp3"},
	{"94._J-trick_bonka-killa","http://music.arizona-rp.com/bombox/J-trick_bonka-killa.mp3"},
	{"95._Justluke-nasty_(two","http://music.arizona-rp.com/bombox/Justluke-nasty_(twoloud_edit).mp3"},
	{"96._Karandash-tissot","http://music.arizona-rp.com/bombox/Karandash-tissot.mp3"},
	{"97._Ka-re-polovina","http://music.arizona-rp.com/bombox/Ka-re-polovina.mp3"},
	{"98._Karmanov_fedya-sire","http://music.arizona-rp.com/bombox/Karmanov_fedya-sirenj.mp3"},
	{"99._Krovostok-biografiy","http://music.arizona-rp.com/bombox/Krovostok-biografiya.mp3"},
	{"100._Krovostok-bytj_plo","http://music.arizona-rp.com/bombox/Krovostok-bytj_plohim.mp3"},
	{"101._Krovostok-cheburas","http://music.arizona-rp.com/bombox/Krovostok-cheburashka.mp3"},
	{"102._Krovostok-cherepov","http://music.arizona-rp.com/bombox/Krovostok-cherepovec.mp3"},
	{"103._Krovostok-kurtec","http://music.arizona-rp.com/bombox/Krovostok-kurtec.mp3"},
	{"104._L_one-samaya_prost","http://music.arizona-rp.com/bombox/L_one-samaya_prostaya_pesnya.mp3"},
	{"105._Lektrique-laidback","http://music.arizona-rp.com/bombox/Lektrique-laidback.mp3"},
	{"106._Leonid_teleshev-lu","http://music.arizona-rp.com/bombox/Leonid_teleshev-luchik.mp3"},
	{"107._Little_big-lolly_b","http://music.arizona-rp.com/bombox/Little_big-lolly_bomb.mp3"},
	{"108._Lp-suspicion_(goin","http://music.arizona-rp.com/bombox/Lp-suspicion_(going_deeper_remix).mp3"},
	{"109._Lsp-monetka","http://music.arizona-rp.com/bombox/Lsp-monetka.mp3"},
	{"110._Lsp-telo_(tragic_c","http://music.arizona-rp.com/bombox/Lsp-telo_(tragic_city).mp3"},
	{"111._Luciana&nytrix-tro","http://music.arizona-rp.com/bombox/Luciana&nytrix-trouble.mp3"},
	{"112._Lucky_charmes-this","http://music.arizona-rp.com/bombox/Lucky_charmes-this_one_here_(club_mix).mp3"},
	{"113._Maks_barskih-sdela","http://music.arizona-rp.com/bombox/Maks_barskih-sdelay_gromche.mp3"},
	{"114._Maks_korzh-malinov","http://music.arizona-rp.com/bombox/Maks_korzh-malinovyy_zakat.mp3"},
	{"115._Maks_korzh-optimis","http://music.arizona-rp.com/bombox/Maks_korzh-optimist.mp3"},
	{"116._Maksim_fadeev_i_gr","http://music.arizona-rp.com/bombox/Maksim_fadeev_i_grigoriy_leps-orly_ili_vorona.mp3"},
	{"117._Maljbek-gipnozy","http://music.arizona-rp.com/bombox/Maljbek-gipnozy.mp3"},
	{"118._Mari_ferrari-maria","http://music.arizona-rp.com/bombox/Mari_ferrari-maria.mp3"},
	{"119._Masha_kipish_i_maf","http://music.arizona-rp.com/bombox/Masha_kipish_i_mafik-blatata.mp3"},
	{"120._Matrang-meduza","http://music.arizona-rp.com/bombox/Matrang-meduza.mp3"},
	{"121._Mc_doni-ya_ukradu","http://music.arizona-rp.com/bombox/Mc_doni-ya_ukradu.mp3"},
	{"122._Medyanik-ya_v_vese","http://music.arizona-rp.com/bombox/Medyanik-ya_v_vesennem_lesu.mp3"},
	{"123._Mihail_krug-sveta","http://music.arizona-rp.com/bombox/Mihail_krug-sveta.mp3"},
	{"124._Mihail_shufutinski","http://music.arizona-rp.com/bombox/Mihail_shufutinskiy-a_kak_zhe_bytj_s_lyubovjyu.mp3"},
	{"125._Mike_candys-get_th","http://music.arizona-rp.com/bombox/Mike_candys-get_the_fuck_out.mp3"},
	{"126._Mike_hawkins-croco","http://music.arizona-rp.com/bombox/Mike_hawkins-crocodile.mp3"},
	{"127._Mitch_vice-get_dow","http://music.arizona-rp.com/bombox/Mitch_vice-get_down.mp3"},
	{"128._Miyagi&endshpilj-","http://music.arizona-rp.com/bombox/Miyagi&endshpilj-.mp3"},
	{"129._Miyagi&endshpilj-d","http://music.arizona-rp.com/bombox/Miyagi&endshpilj-dlbm.mp3"},
	{"130._Miyagi&endshpilj-i","http://music.arizona-rp.com/bombox/Miyagi&endshpilj-i_got_love_(ft_rem_digga).mp3"},
	{"131._Miyagi&endshpilj-l","http://music.arizona-rp.com/bombox/Miyagi&endshpilj-lyubi_menya.mp3"},
	{"132._Miyagi&endshpilj-p","http://music.arizona-rp.com/bombox/Miyagi&endshpilj-polovina_moya.mp3"},
	{"133._Miyagi&endshpilj-r","http://music.arizona-rp.com/bombox/Miyagi&endshpilj-rapapam.mp3"},
	{"134._Mord_fustang-sorbe","http://music.arizona-rp.com/bombox/Mord_fustang-sorbet.mp3"},
	{"135._Mot-kogda_ischezne","http://music.arizona-rp.com/bombox/Mot-kogda_ischeznet_slovo.mp3"},
	{"136._Mot-solo","http://music.arizona-rp.com/bombox/Mot-solo.mp3"},
	{"137._Moya_mishelj-santa","http://music.arizona-rp.com/bombox/Moya_mishelj-santa.mp3"},
	{"138._Murekian-spin&reco","http://music.arizona-rp.com/bombox/Murekian-spin&record.mp3"},
	{"139._Neizvestnostj-ulyb","http://music.arizona-rp.com/bombox/Neizvestnostj-ulybnisj.mp3"},
	{"140._Niiie-my_name_is_b","http://music.arizona-rp.com/bombox/Niiie-my_name_is_bop.mp3"},
	{"141._Nk_(nastya_kamensk","http://music.arizona-rp.com/bombox/Nk_(nastya_kamenskih)-#etomoyanochj.mp3"},
	{"142._Oljga_buzova-hit_p","http://music.arizona-rp.com/bombox/Oljga_buzova-hit_parad.mp3"},
	{"143._Pasosh_x_lsp-veche","http://music.arizona-rp.com/bombox/Pasosh_x_lsp-vecherinka.mp3"},
	{"144._Pavel_filatov-vesn","http://music.arizona-rp.com/bombox/Pavel_filatov-vesna!.mp3"},
	{"145._Pharaoh-glushitelj","http://music.arizona-rp.com/bombox/Pharaoh-glushitelj.mp3"},
	{"146._Polina_gagarina-ob","http://music.arizona-rp.com/bombox/Polina_gagarina-obezoruzhena.mp3"},
	{"147._Quintino_mightyfoo","http://music.arizona-rp.com/bombox/Quintino_mightyfools-g_thing.mp3"},
	{"148._Quintino-moonrise","http://music.arizona-rp.com/bombox/Quintino-moonrise.mp3"},
	{"149._Rada_ray-ty_moya","http://music.arizona-rp.com/bombox/Rada_ray-ty_moya.mp3"},
	{"150._Ruki_vverh-plaches","http://music.arizona-rp.com/bombox/Ruki_vverh-placheshj_v_temnote.mp3"},
	{"151._Ryan_browne-does_t","http://music.arizona-rp.com/bombox/Ryan_browne-does_this_look_infected.mp3"},
	{"152._S2_(kor)-shake_it","http://music.arizona-rp.com/bombox/S2_(kor)-shake_it.mp3"},
	{"153._Sergey_klushin_i_e","http://music.arizona-rp.com/bombox/Sergey_klushin_i_ekaterina_ebelj-prosti.mp3"},
	{"154._Sever.17-pesnya","http://music.arizona-rp.com/bombox/Sever.17-pesnya.mp3"},
	{"155._Shapov_vs_sam_bagi","http://music.arizona-rp.com/bombox/Shapov_vs_sam_bagira-alternate.mp3"},
	{"156._Showtek&moby-natur","http://music.arizona-rp.com/bombox/Showtek&moby-natural_blues.mp3"},
	{"157._Skrudzhi-rukalico","http://music.arizona-rp.com/bombox/Skrudzhi-rukalico.mp3"},
	{"158._Slamtype-hit_em_li","http://music.arizona-rp.com/bombox/Slamtype-hit_em_like.mp3"},
	{"159._Slvr-kinda","http://music.arizona-rp.com/bombox/Slvr-kinda.mp3"},
	{"160._Svetlana_ternova-y","http://music.arizona-rp.com/bombox/Svetlana_ternova-ya_tak_tebya_lyublyu.mp3"},
	{"161._Swanky_tunes-right","http://music.arizona-rp.com/bombox/Swanky_tunes-right_about_now.mp3"},
	{"162._Tanya_dyachenko_-a","http://music.arizona-rp.com/bombox/Tanya_dyachenko_-a_navkolo_vesna.mp3"},
	{"163._T-fest&skriptonit-","http://music.arizona-rp.com/bombox/T-fest&skriptonit-lambada.mp3"},
	{"164._T-fest-uleti","http://music.arizona-rp.com/bombox/T-fest-uleti.mp3"},
	{"165._Timur_temertey-ya_","http://music.arizona-rp.com/bombox/Timur_temertey-ya_lyublyu_tebya_za_eto.mp3"},
	{"166._Timur_temirov-pros","http://music.arizona-rp.com/bombox/Timur_temirov-prosto_lyubovj.mp3"},
	{"167._Tokyo_machine-cook","http://music.arizona-rp.com/bombox/Tokyo_machine-cookies.mp3"},
	{"168._Tv_noise-milkshake","http://music.arizona-rp.com/bombox/Tv_noise-milkshake.mp3"},
	{"169._Twisterz-back_it_i","http://music.arizona-rp.com/bombox/Twisterz-back_it_in.mp3"},
	{"170._Twisterz-selecta","http://music.arizona-rp.com/bombox/Twisterz-selecta.mp3"},
	{"171._Uljyana_sineckaya_","http://music.arizona-rp.com/bombox/Uljyana_sineckaya_-ula_ula-la.mp3"},
	{"172._Vanotek-tell_me_wh","http://music.arizona-rp.com/bombox/Vanotek-tell_me_who.mp3"},
	{"173._Vitaliy_aksenov-pr","http://music.arizona-rp.com/bombox/Vitaliy_aksenov-proshay_pechalj.mp3"},
	{"174._Vlad_shatura-ty_et","http://music.arizona-rp.com/bombox/Vlad_shatura-ty_eto_vybrala_sama.mp3"},
	{"175._Vladimir_bazhinovs","http://music.arizona-rp.com/bombox/Vladimir_bazhinovskiy-po_gorodu_brozhu.mp3"},
	{"176._Vladimir_zhdamirov","http://music.arizona-rp.com/bombox/Vladimir_zhdamirov-skvozj_son.mp3"},
	{"177._Vremya_i_steklo-tr","http://music.arizona-rp.com/bombox/Vremya_i_steklo-trollj.mp3"},
	{"178._Westend_steve_dark","http://music.arizona-rp.com/bombox/Westend_steve_darko-chugger.mp3"},
	{"179._Zheka-toljko_tak","http://music.arizona-rp.com/bombox/Zheka-toljko_tak.mp3"},
	{"180._2Mashi-Bosaya","http://music.arizona-rp.com/bombox/#2Mashi-Bosaya.mp3"},
	{"181._Big_Baby_Tape-Gimm","http://music.arizona-rp.com/bombox/Big_Baby_Tape-Gimme_The_Loot.mp3"},
	{"182._Big_Baby_Tape-Hoka","http://music.arizona-rp.com/bombox/Big_Baby_Tape-Hokage.mp3"},
	{"183._CYGO-Panda_E","http://music.arizona-rp.com/bombox/CYGO-Panda_E.mp3"},
	{"184._DELORENZY-ZAPRETIT","http://music.arizona-rp.com/bombox/DELORENZY-ZAPRETITE_ANIME.mp3"},
	{"185._Egor_Creed-Krutoi","http://music.arizona-rp.com/bombox/Egor_Creed-Krutoi.mp3"},
	{"186._Erica_Lundmoen-Yad","http://music.arizona-rp.com/bombox/Erica_Lundmoen-Yad.mp3"},
	{"187._FACE-MOI_KALASHNIK","http://music.arizona-rp.com/bombox/FACE-MOI_KALASHNIKOV.mp3"},
	{"188._Gaullin-Moonlight","http://music.arizona-rp.com/bombox/Gaullin-Moonlight.mp3"},
	{"189._GONE.Fludd-BANANOV","http://music.arizona-rp.com/bombox/GONE.Fludd-BANANOVIY_SOK.mp3"},
	{"190._GONE.Fludd-CUBIK_L","http://music.arizona-rp.com/bombox/GONE.Fludd-CUBIK_LDA.mp3"},
	{"191._Gone.Fludd-Dripset","http://music.arizona-rp.com/bombox/Gone.Fludd-Dripset.mp3"},
	{"192._GONE.Fludd-MAMBLE","http://music.arizona-rp.com/bombox/GONE.Fludd-MAMBLE.mp3"},
	{"193._GONE.Fludd-SAHARNI","http://music.arizona-rp.com/bombox/GONE.Fludd-SAHARNIY_CHELOVEK.mp3"},
	{"194._IVAN_VALEEV-Novell","http://music.arizona-rp.com/bombox/IVAN_VALEEV-Novella.mp3"},
	{"195._Lil_Pump-I_Love_It","http://music.arizona-rp.com/bombox/Lil_Pump-I_Love_It.mp3"},
	{"196._Little_Big-SLEMATS","http://music.arizona-rp.com/bombox/Little_Big-SLEMATSYA_PACANI.mp3"},
	{"197._LIZER-KORABLI","http://music.arizona-rp.com/bombox/LIZER-KORABLI.mp3"},
	{"198._Morgenshtern-Cops_","http://music.arizona-rp.com/bombox/Morgenshtern-Cops_na_hvoste.mp3"},
	{"199._Morgenshtern-Uff_D","http://music.arizona-rp.com/bombox/Morgenshtern-Uff_Dengi.mp3"},
	{"200._MORGENSHTERN-Vot_t","http://music.arizona-rp.com/bombox/MORGENSHTERN-Vot_tak.mp3"},
	{"201._MORGENSHTERN-Zelen","http://music.arizona-rp.com/bombox/MORGENSHTERN-Zelenoglasie_defki.mp3"},
	{"202._Nurminskiy-Ment_Na","http://music.arizona-rp.com/bombox/Nurminskiy-Ment_Na_Menya_Gazuet.mp3"},
	{"203._PHARAOH-Na_Lune","http://music.arizona-rp.com/bombox/PHARAOH-Na_Lune.mp3"},
	{"204._Rauf&Faik-Detstvo","http://music.arizona-rp.com/bombox/Rauf&Faik-Detstvo.mp3"},
	{"205._Rauf&Faik-I_Love_Y","http://music.arizona-rp.com/bombox/Rauf&Faik-I_Love_You.mp3"},
	{"206._Rauf&Faik-Vechera","http://music.arizona-rp.com/bombox/Rauf&Faik-Vechera.mp3"},
	{"207._Skriptonit_T-Fes-M","http://music.arizona-rp.com/bombox/Skriptonit_T-Fes-Multibrendoviy.mp3"},
	{"208._Time_Belorusskih-N","http://music.arizona-rp.com/bombox/Time_Belorusskih-Nezabudka.mp3"},
	{"209._Time_Belorusskih-V","http://music.arizona-rp.com/bombox/Time_Belorusskih-Vitaminka.mp3"},
	{"210._Time_Belorusskih-Y","http://music.arizona-rp.com/bombox/Time_Belorusskih-Ya_bolwe_ne_napiwu.mp3"}
};
new GotoInfo[MAX_PLAYERS][gtInfo];
new Text:BetText[MAX_PLAYERS] = {Text:INVALID_TEXT_DRAW, ...};
new Text:BalanceText[MAX_PLAYERS] = {Text:INVALID_TEXT_DRAW, ...};
new Slots[MAX_PLAYERS][3];
new SlotCounter[MAX_PLAYERS];
new Gambling[MAX_PLAYERS];
new SlotTimer[MAX_PLAYERS];
new Bet[MAX_PLAYERS];
new Balance[MAX_PLAYERS];
new CreteBomb[MAX_PLAYERS];
new BreakBomb[MAX_PLAYERS];
new RadarEntered[MAX_PLAYERS];
new Fullness[MAX_PLAYERS];
new pSportZal[MAX_PLAYERS];
new SellGzone[MAX_PLAYERS];
new SellPGzone[MAX_PLAYERS];
new AddMessages[MAX_PLAYERS][128];
new AddTimeMessages[MAX_PLAYERS];
new AddId[MAX_PLAYERS];
#if AC_ON
new pAntiCheatLastCodeTriggerTime[MAX_PLAYERS][AC_MAX_CODES];
new pAntiCheatSettingsPage[MAX_PLAYERS char];
new pAntiCheatSettingsMenuListData[MAX_PLAYERS][AC_MAX_CODES_ON_PAGE];
new pAntiCheatSettingsEditCodeId[MAX_PLAYERS];
#endif
new bool:PlayerPlayed[MAX_PLAYERS char];
new bool:PlayerGlass[MAX_PLAYERS];
new PlayerText:speeddraw[MAX_PLAYERS][7] = {PlayerText:INVALID_TEXT_DRAW, ...};
new SERIU[MAX_PLAYERS];
new TempBGObject[MAX_PLAYERS] = {-1, ...};
new Timerak[MAX_PLAYERS];
new ZapretDice[MAX_PLAYERS];
new KostiName[MAX_PLAYERS];
new KostiMoney[MAX_PLAYERS];
new	PlayerText:PTarget[MAX_PLAYERS][3] = {PlayerText:INVALID_TEXT_DRAW, ...};
new TheftKey[MAX_PLAYERS];
new TheftCount[MAX_PLAYERS];
new TheftCarID[MAX_PLAYERS];
new TheftTime[MAX_PLAYERS];
new RobKey[MAX_PLAYERS];
new RobTime[MAX_PLAYERS];
new RobCount[MAX_PLAYERS];
new ArrestID[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new RegPass[MAX_PLAYERS][30];
new RegSex[MAX_PLAYERS];
new RegRace[MAX_PLAYERS];
new RegReferal[MAX_PLAYERS][24];
new bool:TeamDuty[MAX_PLAYERS char];
new TimeOfCuff[MAX_PLAYERS];
new PlayerOfCuff[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new PlayerText:PlayerCarHPDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:MilageDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:ActionText[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:ActionBand[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:TaxiDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:InfoText[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:PlayerFuelBar[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:FuelCostDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:FuelCountDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:KindFuelDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new PlayerText:HInfoDraw[MAX_PLAYERS][6] = {PlayerText:INVALID_TEXT_DRAW, ...};
new Ring[MAX_PLAYERS];
new FirstReferal[MAX_PLAYERS];
new FirstBL[MAX_PLAYERS];
new TazerPlayer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new ShowJobID[MAX_PLAYERS];
new CreditMoney[MAX_PLAYERS];
new BuyGunAmmo[MAX_PLAYERS] = {-1, ...};
new BuyGuns[MAX_PLAYERS] = {-1, ...};
new ClickBiz[MAX_PLAYERS];
new LoadIntro[MAX_PLAYERS];
new ShowBiz[MAX_PLAYERS][15];
new ShowHouse[MAX_PLAYERS][16];
new ArendKey[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new bool:EnterCasino[MAX_PLAYERS char];
new ResetShield[MAX_PLAYERS];
new SelectPost[MAX_PLAYERS];
new DListitem[MAX_PLAYERS][19 char];
new DBizitem[MAX_PLAYERS][22];
new PddState[MAX_PLAYERS];
new PlayerText:DeathDraw[MAX_PLAYERS] = {PlayerText:INVALID_TEXT_DRAW, ...};
new KindFuel[MAX_PLAYERS];
new Float:CountFuel[MAX_PLAYERS];
new PlayerFuel[MAX_PLAYERS];
new NumInc_CP[MAX_PLAYERS] = {-1, ...};
new InJob[MAX_PLAYERS];
new FireCount[MAX_PLAYERS];
new	Taxi_GO[MAX_PLAYERS];
new	bool:Cuffed[MAX_PLAYERS char];
new	bool:IsPlayerSpawn[MAX_PLAYERS char];
new	bool:Controllable[MAX_PLAYERS char];
new	bool:Crack[MAX_PLAYERS char];
new	bool:TaxiON[MAX_PLAYERS char];
new	bool:MedikON[MAX_PLAYERS char];
new bool:MehanON[MAX_PLAYERS char];
new	bool:PoliseON[MAX_PLAYERS char];
new	bool:Fishing[MAX_PLAYERS char];
new	bool:ADuty[MAX_PLAYERS char];
new	bool:IsPlayerLogged[MAX_PLAYERS char];
new	bool:MinusGun[MAX_PLAYERS char];
new TheifTime[MAX_PLAYERS];
new TheifMoney[MAX_PLAYERS];
new TheifCount[MAX_PLAYERS];
new TheifKey[MAX_PLAYERS];
new NoEnterPickup[MAX_PLAYERS];
new DRotTick[MAX_PLAYERS];
new NoStrip[MAX_PLAYERS];
new ReMail[MAX_PLAYERS][50];
new SpectatePlayer[MAX_PLAYERS];
new HouseEntered[MAX_PLAYERS];
new GarageEntered[MAX_PLAYERS] = {-1, ...};
new ParkingEntered[MAX_PLAYERS];
new BizEntered[MAX_PLAYERS];
new RegisterState[MAX_PLAYERS];
new Question[MAX_PLAYERS];
new ClickedPlayerID[MAX_PLAYERS];
new FullnessTick[MAX_PLAYERS];
new OldFreePlayer[MAX_PLAYERS];
new PlayerDrunkLevel[MAX_PLAYERS];
new PlayerDrunkLevels[MAX_PLAYERS];
new bool:UsingShield[MAX_PLAYERS];
new BuyInt[MAX_PLAYERS] = {-1, ...};
new SetPass[MAX_PLAYERS][30];
new UnbanName[MAX_PLAYERS][24];
new PlayerText:EventTimeTD[MAX_PLAYERS][1] = {PlayerText:INVALID_TEXT_DRAW, ...};
new LawyerOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new LiveOfferID[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new LiveOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new TakeOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new HealOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new PlayerJailCP[MAX_PLAYERS];
new PlayerGoPost[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new TicketPrice[MAX_PLAYERS];
new CuffedTime[MAX_PLAYERS];
new Recuffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new HouseOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new HousePrice[MAX_PLAYERS];
new BizOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new RHouseOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new BizPrice[MAX_PLAYERS];
new ShowVeh[MAX_PLAYERS];
new Errors[MAX_PLAYERS];
new DrivingTest[MAX_PLAYERS];
new FlyivingTest[MAX_PLAYERS];
new CreateMats[MAX_PLAYERS];
new CreateMatsCount[MAX_PLAYERS];
new CarTest[MAX_PLAYERS];
new MotoTest[MAX_PLAYERS];
new FarmJob[MAX_PLAYERS]= {-1, ...};
new Clother[MAX_PLAYERS] = {-1, ...};
new Buyitem[MAX_PLAYERS] = {-1, ...};
new ShowPBiz[MAX_PLAYERS];
new TestASKMassive[MAX_PLAYERS][4];
new TestFASKMassive[MAX_PLAYERS][7];
new TaxiTarif[MAX_PLAYERS];
new TaxiPrice[MAX_PLAYERS];
new TaxiDistance[MAX_PLAYERS];
new PlayerCar[MAX_PLAYERS] = {INVALID_VEHICLE_ID, ...};
new PlayerSeat[MAX_PLAYERS] = {-1, ...};
new Smokes[MAX_PLAYERS];
new Smoke[MAX_PLAYERS];
new SmokeTime[MAX_PLAYERS];
new OldWorld[MAX_PLAYERS];
new TransferPlayer[MAX_PLAYERS];
new GetJob[MAX_PLAYERS];
new TelNumber[MAX_PLAYERS];
new InfoHouse[MAX_PLAYERS];
new InfoBiz[MAX_PLAYERS];
new MLeader[MAX_PLAYERS];
new MLPlayer[MAX_PLAYERS];
new MLName[MAX_PLAYERS][24];
new SGunMats[MAX_PLAYERS];
new SGunID[MAX_PLAYERS];
new SGunOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new SGunPrice[MAX_PLAYERS];
new SGunAmmo[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new CarPrice[MAX_PLAYERS];
new UnLeaderID[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new gPlayerLogTries[MAX_PLAYERS char];
new PanelPlayerID[MAX_PLAYERS];
new OwnableCar[MAX_OWNABLECARS];
new PlayerFish[MAX_PLAYERS][5];
new FishMassa[MAX_PLAYERS][5];
new PassRegSex[MAX_PLAYERS];
new bool:EnchantStart = true;
new ClickedState[MAX_PLAYERS];
new PlayerBed[MAX_PLAYERS];
new bool:PlayerLie[MAX_PLAYERS];
new bool:PlayerLieHeal[MAX_PLAYERS];
new OBJECT_RAKE[MAX_PLAYERS];
new OBJECT_SLEGAN[MAX_PLAYERS];
new gunmute[MAX_PLAYERS];
new HouseNalog[MAX_PLAYERS] = {-1,...};
new HouseNalogState2[MAX_PLAYERS] = {0,...};
new pEngine[MAX_PLAYERS char];
new PlayerMail[MAX_PLAYERS][50];
new PlayerName[MAX_PLAYERS][MAX_PLAYER_NAME];
new PlayerReferal[MAX_PLAYERS][24];
new PlayerRegIP[MAX_PLAYERS][16];
//new PlayerLastIPAuth[MAX_PLAYERS][16];
new PlayerIp[MAX_PLAYERS][16];
new QuestClick[MAX_PLAYERS];
new pPressed[MAX_PLAYERS];
new ShowCar[MAX_PLAYERS][21];
enum psInfo
{
	psSeria,
	psNumber,
	psSex,
	psDate[3],
	psDateBirth[3]
}
new PassInfo[MAX_PLAYERS][psInfo];
enum skate
{
    bool:sActive,
    sSkate
};
new InfoSkate[MAX_PLAYERS][skate];
enum mcInfo
{
	mcState,
	mcDate[3]
}
new MedCardInfo[MAX_PLAYERS][mcInfo];

new IDOFMusic=-1;
enum smusicinfo
{
    mNowTime,
	mTime,
	mAdress[244]
}
new MusicInfo[26][smusicinfo]=
{
	{0,204,"http://music.arizona-rp.com/Heavy%20Young%20Heathens%20%96%20Lucifer%20Main.mp3"},
	{0,229,"http://music.arizona-rp.com/The%20Black%20Keys%20%96%20Howlin'%20For%20You.mp3"},
	{0,142,"http://music.arizona-rp.com/Green%20Day%20%96%20Baby%20Eyes.mp3"},
	{0,242,"http://music.arizona-rp.com/Awolnation%20%96%20Not%20Your%20Fault.mp3"},
	{0,292,"http://music.arizona-rp.com/AWOLNATION%20%96%20Some%20Kind%20of%20Joke%20(OST%20%c6%e5%eb%e5%e7%ed%fb%e9%20%f7%e5%eb%ee%e2%e5%ea%203).mp3"},
	{0,200,"http://music.arizona-rp.com/Arctic%20Monkeys%20%96%20R%20U%20Mine-.mp3"},
	{0,274,"http://music.arizona-rp.com/AWOLNATION%20%96%20I%20Am.mp3"},
	{0,216,"http://music.arizona-rp.com/AWOLNATION%20%96%20All%20I%20Need.mp3"},
	{0,266,"http://music.arizona-rp.com/AWOLNATION%20(original)%20%96%20Sail.mp3"},
	{0,208,"http://music.arizona-rp.com/Kansas%20%96%20Carry%20On%20My%20Wayward%20Son%20(OST%20Supernatural).mp3"},
	{0,294,"http://music.arizona-rp.com/4%20Non%20Blondes%20%96%20What's%20Up%20(Whats%20Going%20On).mp3"},
	{0,239,"http://music.arizona-rp.com/3%20Doors%20Down%20%96%20Kryptonite%20(Superman)%20(%20by%20http---vk.com-2x2_is_4%20).mp3"},
	{0,239,"http://music.arizona-rp.com/ACDC%20%96%20Hightway%20To%20Hell.mp3"},
	{0,232,"http://music.arizona-rp.com/Green%20Day%20%96%20Holiday.mp3"},
	{0,274,"http://music.arizona-rp.com/Green%20Day%20%96%20East%20Jesus%20Nowhere.mp3"},
	{0,174,"http://music.arizona-rp.com/Green%20Day%20%96%20American%20idiots.mp3"},
	{0,547,"http://music.arizona-rp.com/Green%20Day%20%96%20Jesus%20of%20Suburbia.mp3"},
	{0,258,"http://music.arizona-rp.com/Imagine%20Dragons%20%96%20Dream.mp3"},
	{0,230,"http://music.arizona-rp.com/Imagine%20Dragons%20%96%20I'm%20So%20Sorry.mp3"},
	{0,229,"http://music.arizona-rp.com/Kari%20Kimmel%20%96%20Black%20(OST%20The%20Walking%20Dead%20Season%203%20Trailer).mp3"},
	{0,269,"http://music.arizona-rp.com/Red%20Hot%20Chili%20Peppers%20%96%20Can't%20Stop.mp3"},
	{0,178,"http://music.arizona-rp.com/Awolnation%20%96%20Kill%20Your%20Heroes.mp3"},
	{0,248,"http://music.arizona-rp.com/Awolnation%20%96%20Jump%20On%20My%20Shoulders.mp3"},
	{0,182,"http://music.arizona-rp.com/Awolnation%20%96%20Wake%20Up.mp3"},
	{0,188,"http://music.arizona-rp.com/ARIZONA%20RP%20%96%20track%20%232.mp3"},
	{0,236,"http://music.arizona-rp.com/Roxette%20%96%20The%20Look.mp3"}
};

#define void%0(%1) forward %0(%1); public %0(%1)

enum e_FAMILY_HOUSE_INFO
{
	fhID,
	fhCost,
	fhOwner[15+1],
	fhHealth,
	fhArmour,
	fhStatus,
	fhWorld,
	Float: fh_Enter_X,
	Float: fh_Enter_Y,
	Float: fh_Enter_Z,
	Float: fh_Exit_X,
	Float: fh_Exit_Y,
	Float: fh_Exit_Z,
}
enum e_FAMILY_INFO
{
	famID,
	famName[15],
	famSlogan[40],
	famOnline,
	famMembersCount,
	famCreator[MAX_PLAYER_NAME],
	famZam[MAX_PLAYER_NAME],
	famZam2[MAX_PLAYER_NAME],
	famChatColor,
	famGalka,
	famBrand,
	famDiscord[40],
	famHouse,
	famRep,
	famMoney,
	famType,
	famEXP,
	famLevel,
	//Улучшения
	famRespect,//Дополнительный респект
	famQuestTalon,//Успех в работе
	famBussines,//Бизнессмены в долгу
	famShadow,//Неузнаваемый
	famMedicCredit,//Медики в долгу
	famWhiteList,//Белый список
	famBankOffer,//Банковские махинации
	famMarodery,//Мародёры
	famEatFish//Рыбный цех
}
new
	FamilyInfo[MAX_FAMILY][e_FAMILY_INFO],
	FamilyHouse[MAX_FAM_HOUSE][e_FAMILY_HOUSE_INFO],
	Text3D:FamHouseText[MAX_FAM_HOUSE],
	famHousePickUp[MAX_FAM_HOUSE][4],
	famDynamicZone[MAX_FAM_HOUSE],
	FamilyHouses;

enum SAZONE_MAIN
{
	SAZONE_NAME[128],
 	    Float:SAZONE_AREA[6]
};
new gSAZonesCity[][SAZONE_MAIN] =
{
	{"Los Santos",                   {44.60, -2892.90, -242.90, 2997.00, -768.00, 900.00}},
	{"Las Venturas",                 {869.40, 596.30, -242.90, 2997.00, 2993.80, 900.00}},
	{"Bone County",                  {-480.50, 596.30, -242.90, 869.40, 2993.80, 900.00}},
	{"Tierra Robada",                {-2997.40, 1659.60, -242.90, -480.50, 2993.80, 900.00}},
	{"Tierra Robada",                {-1213.90, 596.30, -242.90, -480.50, 1659.60, 900.00}},
	{"San Fierro",                   {-2997.40, -1115.50, -242.90, -1213.90, 1659.60, 900.00}},
	{"Red County",                   {-1213.90, -768.00, -242.90, 2997.00, 596.30, 900.00}},
	{"Flint County",                 {-1213.90, -2892.90, -242.90, 44.60, -768.00, 900.00}},
	{"Whetstone",                    {-2997.40, -2892.90, -242.90, -1213.90, -1115.50, 900.00}}
};
new gSAZones[][SAZONE_MAIN] =
{
    {"The Big Ear",                  {-410.00, 1403.30, -3.00, -137.90, 1681.20, 200.00}},
    {"Aldea Malvada",                {-1372.10, 2498.50, 0.00, -1277.50, 2615.30, 200.00}},
    {"Angel Pine",                   {-2324.90, -2584.20, -6.10, -1964.20, -2212.10, 200.00}},
    {"Arco del Oeste",               {-901.10, 2221.80, 0.00, -592.00, 2571.90, 200.00}},
    {"Avispa Country Club",          {-2646.40, -355.40, 0.00, -2270.00, -222.50, 200.00}},
    {"Avispa Country Club",          {-2831.80, -430.20, -6.10, -2646.40, -222.50, 200.00}},
    {"Avispa Country Club",          {-2361.50, -417.10, 0.00, -2270.00, -355.40, 200.00}},
    {"Avispa Country Club",          {-2667.80, -302.10, -28.80, -2646.40, -262.30, 71.10}},
    {"Avispa Country Club",          {-2470.00, -355.40, 0.00, -2270.00, -318.40, 46.10}},
    {"Avispa Country Club",          {-2550.00, -355.40, 0.00, -2470.00, -318.40, 39.70}},
    {"Back o Beyond",                {-1166.90, -2641.10, 0.00, -321.70, -1856.00, 200.00}},
    {"Battery Point",                {-2741.00, 1268.40, -4.50, -2533.00, 1490.40, 200.00}},
    {"Bayside",                      {-2741.00, 2175.10, 0.00, -2353.10, 2722.70, 200.00}},
    {"Bayside Marina",               {-2353.10, 2275.70, 0.00, -2153.10, 2475.70, 200.00}},
    {"Beacon Hill",                  {-399.60, -1075.50, -1.40, -319.00, -977.50, 198.50}},
    {"Blackfield",                   {964.30, 1203.20, -89.00, 1197.30, 1403.20, 110.90}},
    {"Blackfield",                   {964.30, 1403.20, -89.00, 1197.30, 1726.20, 110.90}},
    {"Blackfield Chapel",            {1375.60, 596.30, -89.00, 1558.00, 823.20, 110.90}},
    {"Blackfield Chapel",            {1325.60, 596.30, -89.00, 1375.60, 795.00, 110.90}},
    {"Blackfield Intersection",      {1197.30, 1044.60, -89.00, 1277.00, 1163.30, 110.90}},
    {"Blackfield Intersection",      {1166.50, 795.00, -89.00, 1375.60, 1044.60, 110.90}},
    {"Blackfield Intersection",      {1277.00, 1044.60, -89.00, 1315.30, 1087.60, 110.90}},
    {"Blackfield Intersection",      {1375.60, 823.20, -89.00, 1457.30, 919.40, 110.90}},
    {"Blueberry",                    {104.50, -220.10, 2.30, 349.60, 152.20, 200.00}},
    {"Blueberry",                    {19.60, -404.10, 3.80, 349.60, -220.10, 200.00}},
    {"Blueberry Acres",              {-319.60, -220.10, 0.00, 104.50, 293.30, 200.00}},
    {"Caligula's Palace",            {2087.30, 1543.20, -89.00, 2437.30, 1703.20, 110.90}},
    {"Caligula's Palace",            {2137.40, 1703.20, -89.00, 2437.30, 1783.20, 110.90}},
    {"Calton Heights",               {-2274.10, 744.10, -6.10, -1982.30, 1358.90, 200.00}},
    {"Chinatown",                    {-2274.10, 578.30, -7.60, -2078.60, 744.10, 200.00}},
    {"City Hall",                    {-2867.80, 277.40, -9.10, -2593.40, 458.40, 200.00}},
    {"Come-A-Lot",                   {2087.30, 943.20, -89.00, 2623.10, 1203.20, 110.90}},
    {"Commerce",                     {1323.90, -1842.20, -89.00, 1701.90, -1722.20, 110.90}},
    {"Commerce",                     {1323.90, -1722.20, -89.00, 1440.90, -1577.50, 110.90}},
    {"Commerce",                     {1370.80, -1577.50, -89.00, 1463.90, -1384.90, 110.90}},
    {"Commerce",                     {1463.90, -1577.50, -89.00, 1667.90, -1430.80, 110.90}},
    {"Commerce",                     {1583.50, -1722.20, -89.00, 1758.90, -1577.50, 110.90}},
    {"Commerce",                     {1667.90, -1577.50, -89.00, 1812.60, -1430.80, 110.90}},
    {"Conference Center",            {1046.10, -1804.20, -89.00, 1323.90, -1722.20, 110.90}},
    {"Conference Center",            {1073.20, -1842.20, -89.00, 1323.90, -1804.20, 110.90}},
    {"Cranberry Station",            {-2007.80, 56.30, 0.00, -1922.00, 224.70, 100.00}},
    {"Creek",                        {2749.90, 1937.20, -89.00, 2921.60, 2669.70, 110.90}},
    {"Dillimore",                    {580.70, -674.80, -9.50, 861.00, -404.70, 200.00}},
    {"Doherty",                      {-2270.00, -324.10, -0.00, -1794.90, -222.50, 200.00}},
    {"Doherty",                      {-2173.00, -222.50, -0.00, -1794.90, 265.20, 200.00}},
    {"Downtown",                     {-1982.30, 744.10, -6.10, -1871.70, 1274.20, 200.00}},
    {"Downtown",                     {-1871.70, 1176.40, -4.50, -1620.30, 1274.20, 200.00}},
    {"Downtown",                     {-1700.00, 744.20, -6.10, -1580.00, 1176.50, 200.00}},
    {"Downtown",                     {-1580.00, 744.20, -6.10, -1499.80, 1025.90, 200.00}},
    {"Downtown",                     {-2078.60, 578.30, -7.60, -1499.80, 744.20, 200.00}},
    {"Downtown",                     {-1993.20, 265.20, -9.10, -1794.90, 578.30, 200.00}},
    {"Downtown Los Santos",          {1463.90, -1430.80, -89.00, 1724.70, -1290.80, 110.90}},
    {"Downtown Los Santos",          {1724.70, -1430.80, -89.00, 1812.60, -1250.90, 110.90}},
    {"Downtown Los Santos",          {1463.90, -1290.80, -89.00, 1724.70, -1150.80, 110.90}},
    {"Downtown Los Santos",          {1370.80, -1384.90, -89.00, 1463.90, -1170.80, 110.90}},
    {"Downtown Los Santos",          {1724.70, -1250.90, -89.00, 1812.60, -1150.80, 110.90}},
    {"Downtown Los Santos",          {1370.80, -1170.80, -89.00, 1463.90, -1130.80, 110.90}},
    {"Downtown Los Santos",          {1378.30, -1130.80, -89.00, 1463.90, -1026.30, 110.90}},
    {"Downtown Los Santos",          {1391.00, -1026.30, -89.00, 1463.90, -926.90, 110.90}},
    {"Downtown Los Santos",          {1507.50, -1385.20, 110.90, 1582.50, -1325.30, 335.90}},
    {"East Beach",                   {2632.80, -1852.80, -89.00, 2959.30, -1668.10, 110.90}},
    {"East Beach",                   {2632.80, -1668.10, -89.00, 2747.70, -1393.40, 110.90}},
    {"East Beach",                   {2747.70, -1668.10, -89.00, 2959.30, -1498.60, 110.90}},
    {"East Beach",                   {2747.70, -1498.60, -89.00, 2959.30, -1120.00, 110.90}},
    {"East Los Santos",              {2421.00, -1628.50, -89.00, 2632.80, -1454.30, 110.90}},
    {"East Los Santos",              {2222.50, -1628.50, -89.00, 2421.00, -1494.00, 110.90}},
    {"East Los Santos",              {2266.20, -1494.00, -89.00, 2381.60, -1372.00, 110.90}},
    {"East Los Santos",              {2381.60, -1494.00, -89.00, 2421.00, -1454.30, 110.90}},
    {"East Los Santos",              {2281.40, -1372.00, -89.00, 2381.60, -1135.00, 110.90}},
    {"East Los Santos",              {2381.60, -1454.30, -89.00, 2462.10, -1135.00, 110.90}},
    {"East Los Santos",              {2462.10, -1454.30, -89.00, 2581.70, -1135.00, 110.90}},
    {"Easter Basin",                 {-1794.90, 249.90, -9.10, -1242.90, 578.30, 200.00}},
    {"Easter Basin",                 {-1794.90, -50.00, -0.00, -1499.80, 249.90, 200.00}},
    {"Easter Bay Airport",           {-1499.80, -50.00, -0.00, -1242.90, 249.90, 200.00}},
    {"Easter Bay Airport",           {-1794.90, -730.10, -3.00, -1213.90, -50.00, 200.00}},
    {"Easter Bay Airport",           {-1213.90, -730.10, 0.00, -1132.80, -50.00, 200.00}},
    {"Easter Bay Airport",           {-1242.90, -50.00, 0.00, -1213.90, 578.30, 200.00}},
    {"Easter Bay Airport",           {-1213.90, -50.00, -4.50, -947.90, 578.30, 200.00}},
    {"Easter Bay Airport",           {-1315.40, -405.30, 15.40, -1264.40, -209.50, 25.40}},
    {"Easter Bay Airport",           {-1354.30, -287.30, 15.40, -1315.40, -209.50, 25.40}},
    {"Easter Bay Airport",           {-1490.30, -209.50, 15.40, -1264.40, -148.30, 25.40}},
    {"Easter Bay Chemicals",         {-1132.80, -768.00, 0.00, -956.40, -578.10, 200.00}},
    {"Easter Bay Chemicals",         {-1132.80, -787.30, 0.00, -956.40, -768.00, 200.00}},
    {"El Castillo del Diablo",       {-464.50, 2217.60, 0.00, -208.50, 2580.30, 200.00}},
    {"El Castillo del Diablo",       {-208.50, 2123.00, -7.60, 114.00, 2337.10, 200.00}},
    {"El Castillo del Diablo",       {-208.50, 2337.10, 0.00, 8.40, 2487.10, 200.00}},
    {"El Corona",                    {1812.60, -2179.20, -89.00, 1970.60, -1852.80, 110.90}},
    {"El Corona",                    {1692.60, -2179.20, -89.00, 1812.60, -1842.20, 110.90}},
    {"El Quebrados",                 {-1645.20, 2498.50, 0.00, -1372.10, 2777.80, 200.00}},
    {"Esplanade East",               {-1620.30, 1176.50, -4.50, -1580.00, 1274.20, 200.00}},
    {"Esplanade East",               {-1580.00, 1025.90, -6.10, -1499.80, 1274.20, 200.00}},
    {"Esplanade East",               {-1499.80, 578.30, -79.60, -1339.80, 1274.20, 20.30}},
    {"Esplanade North",              {-2533.00, 1358.90, -4.50, -1996.60, 1501.20, 200.00}},
    {"Esplanade North",              {-1996.60, 1358.90, -4.50, -1524.20, 1592.50, 200.00}},
    {"Esplanade North",              {-1982.30, 1274.20, -4.50, -1524.20, 1358.90, 200.00}},
    {"Fallen Tree",                  {-792.20, -698.50, -5.30, -452.40, -380.00, 200.00}},
    {"Fallow Bridge",                {434.30, 366.50, 0.00, 603.00, 555.60, 200.00}},
    {"Fern Ridge",                   {508.10, -139.20, 0.00, 1306.60, 119.50, 200.00}},
    {"Financial",                    {-1871.70, 744.10, -6.10, -1701.30, 1176.40, 300.00}},
    {"Fisher's Lagoon",              {1916.90, -233.30, -100.00, 2131.70, 13.80, 200.00}},
    {"Flint Intersection",           {-187.70, -1596.70, -89.00, 17.00, -1276.60, 110.90}},
    {"Flint Range",                  {-594.10, -1648.50, 0.00, -187.70, -1276.60, 200.00}},
    {"Fort Carson",                  {-376.20, 826.30, -3.00, 123.70, 1220.40, 200.00}},
    {"Foster Valley",                {-2270.00, -430.20, -0.00, -2178.60, -324.10, 200.00}},
    {"Foster Valley",                {-2178.60, -599.80, -0.00, -1794.90, -324.10, 200.00}},
    {"Foster Valley",                {-2178.60, -1115.50, 0.00, -1794.90, -599.80, 200.00}},
    {"Foster Valley",                {-2178.60, -1250.90, 0.00, -1794.90, -1115.50, 200.00}},
    {"Frederick Bridge",             {2759.20, 296.50, 0.00, 2774.20, 594.70, 200.00}},
    {"Gant Bridge",                  {-2741.40, 1659.60, -6.10, -2616.40, 2175.10, 200.00}},
    {"Gant Bridge",                  {-2741.00, 1490.40, -6.10, -2616.40, 1659.60, 200.00}},
    {"Ganton",                       {2222.50, -1852.80, -89.00, 2632.80, -1722.30, 110.90}},
    {"Ganton",                       {2222.50, -1722.30, -89.00, 2632.80, -1628.50, 110.90}},
    {"Garcia",                       {-2411.20, -222.50, -0.00, -2173.00, 265.20, 200.00}},
    {"Garcia",                       {-2395.10, -222.50, -5.30, -2354.00, -204.70, 200.00}},
    {"Garver Bridge",                {-1339.80, 828.10, -89.00, -1213.90, 1057.00, 110.90}},
    {"Garver Bridge",                {-1213.90, 950.00, -89.00, -1087.90, 1178.90, 110.90}},
    {"Garver Bridge",                {-1499.80, 696.40, -179.60, -1339.80, 925.30, 20.30}},
    {"Glen Park",                    {1812.60, -1449.60, -89.00, 1996.90, -1350.70, 110.90}},
    {"Glen Park",                    {1812.60, -1100.80, -89.00, 1994.30, -973.30, 110.90}},
    {"Glen Park",                    {1812.60, -1350.70, -89.00, 2056.80, -1100.80, 110.90}},
    {"Green Palms",                  {176.50, 1305.40, -3.00, 338.60, 1520.70, 200.00}},
    {"Greenglass College",           {964.30, 1044.60, -89.00, 1197.30, 1203.20, 110.90}},
    {"Greenglass College",           {964.30, 930.80, -89.00, 1166.50, 1044.60, 110.90}},
    {"Hampton Barns",                {603.00, 264.30, 0.00, 761.90, 366.50, 200.00}},
    {"Hankypanky Point",             {2576.90, 62.10, 0.00, 2759.20, 385.50, 200.00}},
    {"Harry Gold Parkway",           {1777.30, 863.20, -89.00, 1817.30, 2342.80, 110.90}},
    {"Hashbury",                     {-2593.40, -222.50, -0.00, -2411.20, 54.70, 200.00}},
    {"Hilltop Farm",                 {967.30, -450.30, -3.00, 1176.70, -217.90, 200.00}},
    {"Hunter Quarry",                {337.20, 710.80, -115.20, 860.50, 1031.70, 203.70}},
    {"Idlewood",                     {1812.60, -1852.80, -89.00, 1971.60, -1742.30, 110.90}},
    {"Idlewood",                     {1812.60, -1742.30, -89.00, 1951.60, -1602.30, 110.90}},
    {"Idlewood",                     {1951.60, -1742.30, -89.00, 2124.60, -1602.30, 110.90}},
    {"Idlewood",                     {1812.60, -1602.30, -89.00, 2124.60, -1449.60, 110.90}},
    {"Idlewood",                     {2124.60, -1742.30, -89.00, 2222.50, -1494.00, 110.90}},
    {"Idlewood",                     {1971.60, -1852.80, -89.00, 2222.50, -1742.30, 110.90}},
    {"Jefferson",                    {1996.90, -1449.60, -89.00, 2056.80, -1350.70, 110.90}},
    {"Jefferson",                    {2124.60, -1494.00, -89.00, 2266.20, -1449.60, 110.90}},
    {"Jefferson",                    {2056.80, -1372.00, -89.00, 2281.40, -1210.70, 110.90}},
    {"Jefferson",                    {2056.80, -1210.70, -89.00, 2185.30, -1126.30, 110.90}},
    {"Jefferson",                    {2185.30, -1210.70, -89.00, 2281.40, -1154.50, 110.90}},
    {"Jefferson",                    {2056.80, -1449.60, -89.00, 2266.20, -1372.00, 110.90}},
    {"Julius Thruway East",          {2623.10, 943.20, -89.00, 2749.90, 1055.90, 110.90}},
    {"Julius Thruway East",          {2685.10, 1055.90, -89.00, 2749.90, 2626.50, 110.90}},
    {"Julius Thruway East",          {2536.40, 2442.50, -89.00, 2685.10, 2542.50, 110.90}},
    {"Julius Thruway East",          {2625.10, 2202.70, -89.00, 2685.10, 2442.50, 110.90}},
    {"Julius Thruway North",         {2498.20, 2542.50, -89.00, 2685.10, 2626.50, 110.90}},
    {"Julius Thruway North",         {2237.40, 2542.50, -89.00, 2498.20, 2663.10, 110.90}},
    {"Julius Thruway North",         {2121.40, 2508.20, -89.00, 2237.40, 2663.10, 110.90}},
    {"Julius Thruway North",         {1938.80, 2508.20, -89.00, 2121.40, 2624.20, 110.90}},
    {"Julius Thruway North",         {1534.50, 2433.20, -89.00, 1848.40, 2583.20, 110.90}},
    {"Julius Thruway North",         {1848.40, 2478.40, -89.00, 1938.80, 2553.40, 110.90}},
    {"Julius Thruway North",         {1704.50, 2342.80, -89.00, 1848.40, 2433.20, 110.90}},
    {"Julius Thruway North",         {1377.30, 2433.20, -89.00, 1534.50, 2507.20, 110.90}},
    {"Julius Thruway South",         {1457.30, 823.20, -89.00, 2377.30, 863.20, 110.90}},
    {"Julius Thruway South",         {2377.30, 788.80, -89.00, 2537.30, 897.90, 110.90}},
    {"Julius Thruway West",          {1197.30, 1163.30, -89.00, 1236.60, 2243.20, 110.90}},
    {"Julius Thruway West",          {1236.60, 2142.80, -89.00, 1297.40, 2243.20, 110.90}},
    {"Juniper Hill",                 {-2533.00, 578.30, -7.60, -2274.10, 968.30, 200.00}},
    {"Juniper Hollow",               {-2533.00, 968.30, -6.10, -2274.10, 1358.90, 200.00}},
    {"K.A.C.C. Military Fuels",      {2498.20, 2626.50, -89.00, 2749.90, 2861.50, 110.90}},
    {"Kincaid Bridge",               {-1339.80, 599.20, -89.00, -1213.90, 828.10, 110.90}},
    {"Kincaid Bridge",               {-1213.90, 721.10, -89.00, -1087.90, 950.00, 110.90}},
    {"Kincaid Bridge",               {-1087.90, 855.30, -89.00, -961.90, 986.20, 110.90}},
    {"King's",                       {-2329.30, 458.40, -7.60, -1993.20, 578.30, 200.00}},
    {"King's",                       {-2411.20, 265.20, -9.10, -1993.20, 373.50, 200.00}},
    {"King's",                       {-2253.50, 373.50, -9.10, -1993.20, 458.40, 200.00}},
    {"LVA Freight Depot",            {1457.30, 863.20, -89.00, 1777.40, 1143.20, 110.90}},
    {"LVA Freight Depot",            {1375.60, 919.40, -89.00, 1457.30, 1203.20, 110.90}},
    {"LVA Freight Depot",            {1277.00, 1087.60, -89.00, 1375.60, 1203.20, 110.90}},
    {"LVA Freight Depot",            {1315.30, 1044.60, -89.00, 1375.60, 1087.60, 110.90}},
    {"LVA Freight Depot",            {1236.60, 1163.40, -89.00, 1277.00, 1203.20, 110.90}},
    {"Las Barrancas",                {-926.10, 1398.70, -3.00, -719.20, 1634.60, 200.00}},
    {"Las Brujas",                   {-365.10, 2123.00, -3.00, -208.50, 2217.60, 200.00}},
    {"Las Colinas",                  {1994.30, -1100.80, -89.00, 2056.80, -920.80, 110.90}},
    {"Las Colinas",                  {2056.80, -1126.30, -89.00, 2126.80, -920.80, 110.90}},
    {"Las Colinas",                  {2185.30, -1154.50, -89.00, 2281.40, -934.40, 110.90}},
    {"Las Colinas",                  {2126.80, -1126.30, -89.00, 2185.30, -934.40, 110.90}},
    {"Las Colinas",                  {2747.70, -1120.00, -89.00, 2959.30, -945.00, 110.90}},
    {"Las Colinas",                  {2632.70, -1135.00, -89.00, 2747.70, -945.00, 110.90}},
    {"Las Colinas",                  {2281.40, -1135.00, -89.00, 2632.70, -945.00, 110.90}},
    {"Las Payasadas",                {-354.30, 2580.30, 2.00, -133.60, 2816.80, 200.00}},
    {"Las Venturas Airport",         {1236.60, 1203.20, -89.00, 1457.30, 1883.10, 110.90}},
    {"Las Venturas Airport",         {1457.30, 1203.20, -89.00, 1777.30, 1883.10, 110.90}},
    {"Las Venturas Airport",         {1457.30, 1143.20, -89.00, 1777.40, 1203.20, 110.90}},
    {"Las Venturas Airport",         {1515.80, 1586.40, -12.50, 1729.90, 1714.50, 87.50}},
    {"Last Dime Motel",              {1823.00, 596.30, -89.00, 1997.20, 823.20, 110.90}},
    {"Leafy Hollow",                 {-1166.90, -1856.00, 0.00, -815.60, -1602.00, 200.00}},
    {"Liberty City",                 {-1000.00, 400.00, 1300.00, -700.00, 600.00, 1400.00}},
    {"Lil' Probe Inn",               {-90.20, 1286.80, -3.00, 153.80, 1554.10, 200.00}},
    {"Linden Side",                  {2749.90, 943.20, -89.00, 2923.30, 1198.90, 110.90}},
    {"Linden Station",               {2749.90, 1198.90, -89.00, 2923.30, 1548.90, 110.90}},
    {"Linden Station",               {2811.20, 1229.50, -39.50, 2861.20, 1407.50, 60.40}},
    {"Little Mexico",                {1701.90, -1842.20, -89.00, 1812.60, -1722.20, 110.90}},
    {"Little Mexico",                {1758.90, -1722.20, -89.00, 1812.60, -1577.50, 110.90}},
    {"Los Flores",                   {2581.70, -1454.30, -89.00, 2632.80, -1393.40, 110.90}},
    {"Los Flores",                   {2581.70, -1393.40, -89.00, 2747.70, -1135.00, 110.90}},
    {"Los Santos International",     {1249.60, -2394.30, -89.00, 1852.00, -2179.20, 110.90}},
    {"Los Santos International",     {1852.00, -2394.30, -89.00, 2089.00, -2179.20, 110.90}},
    {"Los Santos International",     {1382.70, -2730.80, -89.00, 2201.80, -2394.30, 110.90}},
    {"Los Santos International",     {1974.60, -2394.30, -39.00, 2089.00, -2256.50, 60.90}},
    {"Los Santos International",     {1400.90, -2669.20, -39.00, 2189.80, -2597.20, 60.90}},
    {"Los Santos International",     {2051.60, -2597.20, -39.00, 2152.40, -2394.30, 60.90}},
    {"Marina",                       {647.70, -1804.20, -89.00, 851.40, -1577.50, 110.90}},
    {"Marina",                       {647.70, -1577.50, -89.00, 807.90, -1416.20, 110.90}},
    {"Marina",                       {807.90, -1577.50, -89.00, 926.90, -1416.20, 110.90}},
    {"Market",                       {787.40, -1416.20, -89.00, 1072.60, -1310.20, 110.90}},
    {"Market",                       {952.60, -1310.20, -89.00, 1072.60, -1130.80, 110.90}},
    {"Market",                       {1072.60, -1416.20, -89.00, 1370.80, -1130.80, 110.90}},
    {"Market",                       {926.90, -1577.50, -89.00, 1370.80, -1416.20, 110.90}},
    {"Market Station",               {787.40, -1410.90, -34.10, 866.00, -1310.20, 65.80}},
    {"Martin Bridge",                {-222.10, 293.30, 0.00, -122.10, 476.40, 200.00}},
    {"Missionary Hill",              {-2994.40, -811.20, 0.00, -2178.60, -430.20, 200.00}},
    {"Montgomery",                   {1119.50, 119.50, -3.00, 1451.40, 493.30, 200.00}},
    {"Montgomery",                   {1451.40, 347.40, -6.10, 1582.40, 420.80, 200.00}},
    {"Montgomery Intersection",      {1546.60, 208.10, 0.00, 1745.80, 347.40, 200.00}},
    {"Montgomery Intersection",      {1582.40, 347.40, 0.00, 1664.60, 401.70, 200.00}},
    {"Mulholland",                   {1414.00, -768.00, -89.00, 1667.60, -452.40, 110.90}},
    {"Mulholland",                   {1281.10, -452.40, -89.00, 1641.10, -290.90, 110.90}},
    {"Mulholland",                   {1269.10, -768.00, -89.00, 1414.00, -452.40, 110.90}},
    {"Mulholland",                   {1357.00, -926.90, -89.00, 1463.90, -768.00, 110.90}},
    {"Mulholland",                   {1318.10, -910.10, -89.00, 1357.00, -768.00, 110.90}},
    {"Mulholland",                   {1169.10, -910.10, -89.00, 1318.10, -768.00, 110.90}},
    {"Mulholland",                   {768.60, -954.60, -89.00, 952.60, -860.60, 110.90}},
    {"Mulholland",                   {687.80, -860.60, -89.00, 911.80, -768.00, 110.90}},
    {"Mulholland",                   {737.50, -768.00, -89.00, 1142.20, -674.80, 110.90}},
    {"Mulholland",                   {1096.40, -910.10, -89.00, 1169.10, -768.00, 110.90}},
    {"Mulholland",                   {952.60, -937.10, -89.00, 1096.40, -860.60, 110.90}},
    {"Mulholland",                   {911.80, -860.60, -89.00, 1096.40, -768.00, 110.90}},
    {"Mulholland",                   {861.00, -674.80, -89.00, 1156.50, -600.80, 110.90}},
    {"Mulholland Intersection",      {1463.90, -1150.80, -89.00, 1812.60, -768.00, 110.90}},
    {"North Rock",                   {2285.30, -768.00, 0.00, 2770.50, -269.70, 200.00}},
    {"Ocean Docks",                  {2373.70, -2697.00, -89.00, 2809.20, -2330.40, 110.90}},
    {"Ocean Docks",                  {2201.80, -2418.30, -89.00, 2324.00, -2095.00, 110.90}},
    {"Ocean Docks",                  {2324.00, -2302.30, -89.00, 2703.50, -2145.10, 110.90}},
    {"Ocean Docks",                  {2089.00, -2394.30, -89.00, 2201.80, -2235.80, 110.90}},
    {"Ocean Docks",                  {2201.80, -2730.80, -89.00, 2324.00, -2418.30, 110.90}},
    {"Ocean Docks",                  {2703.50, -2302.30, -89.00, 2959.30, -2126.90, 110.90}},
    {"Ocean Docks",                  {2324.00, -2145.10, -89.00, 2703.50, -2059.20, 110.90}},
    {"Ocean Flats",                  {-2994.40, 277.40, -9.10, -2867.80, 458.40, 200.00}},
    {"Ocean Flats",                  {-2994.40, -222.50, -0.00, -2593.40, 277.40, 200.00}},
    {"Ocean Flats",                  {-2994.40, -430.20, -0.00, -2831.80, -222.50, 200.00}},
    {"Octane Springs",               {338.60, 1228.50, 0.00, 664.30, 1655.00, 200.00}},
    {"Old Venturas Strip",           {2162.30, 2012.10, -89.00, 2685.10, 2202.70, 110.90}},
    {"Palisades",                    {-2994.40, 458.40, -6.10, -2741.00, 1339.60, 200.00}},
    {"Palomino Creek",               {2160.20, -149.00, 0.00, 2576.90, 228.30, 200.00}},
    {"Paradiso",                     {-2741.00, 793.40, -6.10, -2533.00, 1268.40, 200.00}},
    {"Pershing Square",              {1440.90, -1722.20, -89.00, 1583.50, -1577.50, 110.90}},
    {"Pilgrim",                      {2437.30, 1383.20, -89.00, 2624.40, 1783.20, 110.90}},
    {"Pilgrim",                      {2624.40, 1383.20, -89.00, 2685.10, 1783.20, 110.90}},
    {"Pilson Intersection",          {1098.30, 2243.20, -89.00, 1377.30, 2507.20, 110.90}},
    {"Pirates in Men's Pants",       {1817.30, 1469.20, -89.00, 2027.40, 1703.20, 110.90}},
    {"Playa del Seville",            {2703.50, -2126.90, -89.00, 2959.30, -1852.80, 110.90}},
    {"Prickle Pine",                 {1534.50, 2583.20, -89.00, 1848.40, 2863.20, 110.90}},
    {"Prickle Pine",                 {1117.40, 2507.20, -89.00, 1534.50, 2723.20, 110.90}},
    {"Prickle Pine",                 {1848.40, 2553.40, -89.00, 1938.80, 2863.20, 110.90}},
    {"Prickle Pine",                 {1938.80, 2624.20, -89.00, 2121.40, 2861.50, 110.90}},
    {"Queens",                       {-2533.00, 458.40, 0.00, -2329.30, 578.30, 200.00}},
    {"Queens",                       {-2593.40, 54.70, 0.00, -2411.20, 458.40, 200.00}},
    {"Queens",                       {-2411.20, 373.50, 0.00, -2253.50, 458.40, 200.00}},
    {"Randolph Industrial Estate",   {1558.00, 596.30, -89.00, 1823.00, 823.20, 110.90}},
    {"Redsands East",                {1817.30, 2011.80, -89.00, 2106.70, 2202.70, 110.90}},
    {"Redsands East",                {1817.30, 2202.70, -89.00, 2011.90, 2342.80, 110.90}},
    {"Redsands East",                {1848.40, 2342.80, -89.00, 2011.90, 2478.40, 110.90}},
    {"Redsands West",                {1236.60, 1883.10, -89.00, 1777.30, 2142.80, 110.90}},
    {"Redsands West",                {1297.40, 2142.80, -89.00, 1777.30, 2243.20, 110.90}},
    {"Redsands West",                {1377.30, 2243.20, -89.00, 1704.50, 2433.20, 110.90}},
    {"Redsands West",                {1704.50, 2243.20, -89.00, 1777.30, 2342.80, 110.90}},
    {"Regular Tom",                  {-405.70, 1712.80, -3.00, -276.70, 1892.70, 200.00}},
    {"Richman",                      {647.50, -1118.20, -89.00, 787.40, -954.60, 110.90}},
    {"Richman",                      {647.50, -954.60, -89.00, 768.60, -860.60, 110.90}},
    {"Richman",                      {225.10, -1369.60, -89.00, 334.50, -1292.00, 110.90}},
    {"Richman",                      {225.10, -1292.00, -89.00, 466.20, -1235.00, 110.90}},
    {"Richman",                      {72.60, -1404.90, -89.00, 225.10, -1235.00, 110.90}},
    {"Richman",                      {72.60, -1235.00, -89.00, 321.30, -1008.10, 110.90}},
    {"Richman",                      {321.30, -1235.00, -89.00, 647.50, -1044.00, 110.90}},
    {"Richman",                      {321.30, -1044.00, -89.00, 647.50, -860.60, 110.90}},
    {"Richman",                      {321.30, -860.60, -89.00, 687.80, -768.00, 110.90}},
    {"Richman",                      {321.30, -768.00, -89.00, 700.70, -674.80, 110.90}},
    {"Robada Intersection",          {-1119.00, 1178.90, -89.00, -862.00, 1351.40, 110.90}},
    {"Roca Escalante",               {2237.40, 2202.70, -89.00, 2536.40, 2542.50, 110.90}},
    {"Roca Escalante",               {2536.40, 2202.70, -89.00, 2625.10, 2442.50, 110.90}},
    {"Rockshore East",               {2537.30, 676.50, -89.00, 2902.30, 943.20, 110.90}},
    {"Rockshore West",               {1997.20, 596.30, -89.00, 2377.30, 823.20, 110.90}},
    {"Rockshore West",               {2377.30, 596.30, -89.00, 2537.30, 788.80, 110.90}},
    {"Rodeo",                        {72.60, -1684.60, -89.00, 225.10, -1544.10, 110.90}},
    {"Rodeo",                        {72.60, -1544.10, -89.00, 225.10, -1404.90, 110.90}},
    {"Rodeo",                        {225.10, -1684.60, -89.00, 312.80, -1501.90, 110.90}},
    {"Rodeo",                        {225.10, -1501.90, -89.00, 334.50, -1369.60, 110.90}},
    {"Rodeo",                        {334.50, -1501.90, -89.00, 422.60, -1406.00, 110.90}},
    {"Rodeo",                        {312.80, -1684.60, -89.00, 422.60, -1501.90, 110.90}},
    {"Rodeo",                        {422.60, -1684.60, -89.00, 558.00, -1570.20, 110.90}},
    {"Rodeo",                        {558.00, -1684.60, -89.00, 647.50, -1384.90, 110.90}},
    {"Rodeo",                        {466.20, -1570.20, -89.00, 558.00, -1385.00, 110.90}},
    {"Rodeo",                        {422.60, -1570.20, -89.00, 466.20, -1406.00, 110.90}},
    {"Rodeo",                        {466.20, -1385.00, -89.00, 647.50, -1235.00, 110.90}},
    {"Rodeo",                        {334.50, -1406.00, -89.00, 466.20, -1292.00, 110.90}},
    {"Royal Casino",                 {2087.30, 1383.20, -89.00, 2437.30, 1543.20, 110.90}},
    {"San Andreas Sound",            {2450.30, 385.50, -100.00, 2759.20, 562.30, 200.00}},
    {"Santa Flora",                  {-2741.00, 458.40, -7.60, -2533.00, 793.40, 200.00}},
    {"Santa Maria Beach",            {342.60, -2173.20, -89.00, 647.70, -1684.60, 110.90}},
    {"Santa Maria Beach",            {72.60, -2173.20, -89.00, 342.60, -1684.60, 110.90}},
    {"Shady Cabin",                  {-1632.80, -2263.40, -3.00, -1601.30, -2231.70, 200.00}},
    {"Shady Creeks",                 {-1820.60, -2643.60, -8.00, -1226.70, -1771.60, 200.00}},
    {"Shady Creeks",                 {-2030.10, -2174.80, -6.10, -1820.60, -1771.60, 200.00}},
    {"Sobell Rail Yards",            {2749.90, 1548.90, -89.00, 2923.30, 1937.20, 110.90}},
    {"Spinybed",                     {2121.40, 2663.10, -89.00, 2498.20, 2861.50, 110.90}},
    {"Starfish Casino",              {2437.30, 1783.20, -89.00, 2685.10, 2012.10, 110.90}},
    {"Starfish Casino",              {2437.30, 1858.10, -39.00, 2495.00, 1970.80, 60.90}},
    {"Starfish Casino",              {2162.30, 1883.20, -89.00, 2437.30, 2012.10, 110.90}},
    {"Temple",                       {1252.30, -1130.80, -89.00, 1378.30, -1026.30, 110.90}},
    {"Temple",                       {1252.30, -1026.30, -89.00, 1391.00, -926.90, 110.90}},
    {"Temple",                       {1252.30, -926.90, -89.00, 1357.00, -910.10, 110.90}},
    {"Temple",                       {952.60, -1130.80, -89.00, 1096.40, -937.10, 110.90}},
    {"Temple",                       {1096.40, -1130.80, -89.00, 1252.30, -1026.30, 110.90}},
    {"Temple",                       {1096.40, -1026.30, -89.00, 1252.30, -910.10, 110.90}},
    {"The Camel's Toe",              {2087.30, 1203.20, -89.00, 2640.40, 1383.20, 110.90}},
    {"The Clown's Pocket",           {2162.30, 1783.20, -89.00, 2437.30, 1883.20, 110.90}},
    {"The Emerald Isle",             {2011.90, 2202.70, -89.00, 2237.40, 2508.20, 110.90}},
    {"The Farm",                     {-1209.60, -1317.10, 114.90, -908.10, -787.30, 251.90}},
    {"The Four Dragons Casino",      {1817.30, 863.20, -89.00, 2027.30, 1083.20, 110.90}},
    {"The High Roller",              {1817.30, 1283.20, -89.00, 2027.30, 1469.20, 110.90}},
    {"The Mako Span",                {1664.60, 401.70, 0.00, 1785.10, 567.20, 200.00}},
    {"The Panopticon",               {-947.90, -304.30, -1.10, -319.60, 327.00, 200.00}},
    {"The Pink Swan",                {1817.30, 1083.20, -89.00, 2027.30, 1283.20, 110.90}},
    {"The Sherman Dam",              {-968.70, 1929.40, -3.00, -481.10, 2155.20, 200.00}},
    {"The Strip",                    {2027.40, 863.20, -89.00, 2087.30, 1703.20, 110.90}},
    {"The Strip",                    {2106.70, 1863.20, -89.00, 2162.30, 2202.70, 110.90}},
    {"The Strip",                    {2027.40, 1783.20, -89.00, 2162.30, 1863.20, 110.90}},
    {"The Strip",                    {2027.40, 1703.20, -89.00, 2137.40, 1783.20, 110.90}},
    {"The Visage",                   {1817.30, 1863.20, -89.00, 2106.70, 2011.80, 110.90}},
    {"The Visage",                   {1817.30, 1703.20, -89.00, 2027.40, 1863.20, 110.90}},
    {"Unity Station",                {1692.60, -1971.80, -20.40, 1812.60, -1932.80, 79.50}},
    {"Valle Ocultado",               {-936.60, 2611.40, 2.00, -715.90, 2847.90, 200.00}},
    {"Verdant Bluffs",               {930.20, -2488.40, -89.00, 1249.60, -2006.70, 110.90}},
    {"Verdant Bluffs",               {1073.20, -2006.70, -89.00, 1249.60, -1842.20, 110.90}},
    {"Verdant Bluffs",               {1249.60, -2179.20, -89.00, 1692.60, -1842.20, 110.90}},
    {"Verdant Meadows",              {37.00, 2337.10, -3.00, 435.90, 2677.90, 200.00}},
    {"Verona Beach",                 {647.70, -2173.20, -89.00, 930.20, -1804.20, 110.90}},
    {"Verona Beach",                 {930.20, -2006.70, -89.00, 1073.20, -1804.20, 110.90}},
    {"Verona Beach",                 {851.40, -1804.20, -89.00, 1046.10, -1577.50, 110.90}},
    {"Verona Beach",                 {1161.50, -1722.20, -89.00, 1323.90, -1577.50, 110.90}},
    {"Verona Beach",                 {1046.10, -1722.20, -89.00, 1161.50, -1577.50, 110.90}},
    {"Vinewood",                     {787.40, -1310.20, -89.00, 952.60, -1130.80, 110.90}},
    {"Vinewood",                     {787.40, -1130.80, -89.00, 952.60, -954.60, 110.90}},
    {"Vinewood",                     {647.50, -1227.20, -89.00, 787.40, -1118.20, 110.90}},
    {"Vinewood",                     {647.70, -1416.20, -89.00, 787.40, -1227.20, 110.90}},
    {"Whitewood Estates",            {883.30, 1726.20, -89.00, 1098.30, 2507.20, 110.90}},
    {"Whitewood Estates",            {1098.30, 1726.20, -89.00, 1197.30, 2243.20, 110.90}},
    {"Willowfield",                  {1970.60, -2179.20, -89.00, 2089.00, -1852.80, 110.90}},
    {"Willowfield",                  {2089.00, -2235.80, -89.00, 2201.80, -1989.90, 110.90}},
    {"Willowfield",                  {2089.00, -1989.90, -89.00, 2324.00, -1852.80, 110.90}},
    {"Willowfield",                  {2201.80, -2095.00, -89.00, 2324.00, -1989.90, 110.90}},
    {"Willowfield",                  {2541.70, -1941.40, -89.00, 2703.50, -1852.80, 110.90}},
    {"Willowfield",                  {2324.00, -2059.20, -89.00, 2541.70, -1852.80, 110.90}},
    {"Willowfield",                  {2541.70, -2059.20, -89.00, 2703.50, -1941.40, 110.90}},
    {"Yellow Bell Station",          {1377.40, 2600.40, -21.90, 1492.40, 2687.30, 78.00}}
};

enum FamTypeInfo
{
	typeDialog,
	typeLevel,
	typeName[11+1],
	typeNameRus[12+1],
}
new fType[7][FamTypeInfo] =
{
    {1, 1,   "Family", 		"(Семья)",		},
    {2, 10,  "Corporation", "(Корпорация)",	},
    {3, 20,  "Crew", 		"(Команда)",	},
    {4, 30,  "Squad", 		"(Отряд)",		},
    {5, 40,  "Brotherhood", "(Братство)",	},
    {6, 50,  "Dynasty", 	"(Династия)",	},
    {7, 60,  "Empire", 		"(Империя)"		}
};
new Iterator: Family<MAX_PLAYERS>;
new Iterator: Admin<MAX_PLAYERS>;
new Iterator: OWNABLECARS<MAX_VEHICLES>;
//new Iterator: SLETCAR<MAX_OWNABLECARS>;
new Iterator: OWNABLEFAMILYS<MAX_FAMILY>;
new Iterator: OWNABLERADAR<MAX_RADARS>;

new FamilyChatColor[31][7] =
{
	{"FF5E5E"},
	{"FFFFFF"},
	{"E65075"},
	{"EFA4B7"},
	{"905B69"},
	{"D052CE"},
	{"FF00FC"},
	{"5D395D"},
	{"8E38EA"},
	{"6B21BB"},
	{"2F00FF"},
	{"7456F8"},
	{"5287F1"},
	{"1DBAF2"},
	{"308EB0"},
	{"30B061"},
	{"20F271"},
	{"107135"},
	{"47EB2A"},
	{"9EE991"},
	{"C2D95E"},
	{"D1FF00"},
	{"7B9022"},
	{"FFC900"},
	{"E8CA60"},
	{"6B5B1F"},
	{"FF8400"},
	{"C04312"},
	{"5C4C45"},
	{"373534"},
	{"351204"}
};

new
    COMPLAINTS,
    zalobi[MAX_COMPLAINTS][95];

new TATTOO_NAME[5][MAX_TATTOO_NAME_LENGTH] =
{
    {"Ничего"},
    {"Эмблема семья"},
    {"Крёстного отца"},
    {"Роза обвивающая кинжал"},
    {"Ганстер закован в кандалы"}
};
new TATTOOS_NAME[5][MAX_TATTOOS_NAME_LENGTH] =
{
    {"{82DEF8}Чисто"},
    {"{82DEF8}Эмблема семья"},
    {"{82DEF8}Крёстного отца"},
    {"{82DEF8}Роза обвивающая кинжал"},
    {"{82DEF8}Ганстер закован в кандалы"}
};
//АНТИ ДМ ЗОНЫ
new ANDZONS;
enum antidminfo
{
	zID,
    zName[130],
	zStatus,
	Float:zX,
	Float:zY,
	Float:zZ
};
new AntiDm[MAX_DMZONE][antidminfo];
new Float:phonepos[133][3]=
{
	{1540.81, -1720.28, 13.79},
	{1163.00, -1704.39, 14.27},
	{1212.94, -1307.07, 13.78},
	{1363.9105,-1257.7277,13.5469},
	{1517.54, -1314.19, 15.23},
	{926.32, -1313.96, 13.81},
	{1066.10, -1029.03, 32.35},
	{460.74, -1607.63, 25.92},
	{333.68, -1775.89, 5.34},
	{539.27, -1266.13, 16.83},
	{1190.87, -930.76, 43.22},
	{1558.57, -1056.97, 24.02},
	{1674.82, -1168.34, 24.19},
	{1838.52, -1374.49, 13.86},
	{1795.61, -1620.13, 13.83},
	{1345.00, -1567.78, 13.89},
	{1947.05, -1794.71, 13.85},
	{2093.51, -1790.08, 13.79},
	{1950.80, -1978.01, 13.84},
	{1466.70, -2228.48, 13.80},
	{2088.65, -2101.52, 13.84},
	{2245.30, -2199.81, 13.87},
	{2205.43, -1994.22, 13.80},
	{2170.02, -1745.22, 13.82},
	{2243.34, -1724.31, 13.82},
	{2178.41, -1629.57, 15.08},
	{2422.05, -1890.09, 13.83},
	{2503.14, -1940.56, 13.81},
	{2730.45, -1987.05, 13.84},
	{2833.71, -1645.51, 11.21},
	{2484.72, -1495.39, 24.22},
	{2307.92, -1492.46, 23.81},
	{2277.04, -1338.40, 24.26},
	{2026.62, -1267.34, 24.30},
	{2195.91, -1132.80, 25.77},
	{1876.21, -1039.23, 24.08},
	{1990.07, -1472.45, 13.83},
	{2651.60, -1415.61, 30.63},
	{2831.02, -1129.65, 25.22},
	{2251.45, -1308.21, 24.28},
	{1750.36, -1453.00, 13.81},
	{1706.17, -1319.16, 13.84},
	{1429.55, -1536.88, 13.85},
	{1290.85, -1558.72, 13.87},
	{1827.07, 824.71, 10.75},
	{2026.67, 1080.83, 11.05},
	{2085.41, 1386.88, 11.08},
	{2091.63, 1713.69, 11.08},
	{2214.46, 1780.42, 11.13},
	{2101.19, 2031.25, 11.09},
	{2271.61, 2028.42, 11.06},
	{2118.22, 2234.50, 11.07},
	{2333.44, 2421.31, 11.11},
	{2436.25, 2353.93, 11.08},
	{2174.13, 2461.80, 11.09},
	{2019.56, 2460.77, 11.11},
	{1918.68, 2310.74, 11.08},
	{1720.38, 2242.66, 11.06},
	{1486.36, 2046.84, 11.09},
	{1641.04, 1848.49, 11.09},
	{1313.80, 2059.51, 11.06},
	{1119.09, 2059.85, 11.09},
	{1060.15, 1945.67, 11.08},
	{1050.40, 1381.40, 11.10},
	{1405.17, 1199.50, 11.11},
	{1574.73, 736.68, 11.15},
	{1636.78, 939.82, 11.08},
	{1689.39, 1266.98, 11.15},
	{1715.12, 1374.58, 10.93},
	{2443.80, 2061.84, 11.09},
	{2514.01, 1910.17, 11.13},
	{2616.46, 1973.91, 11.08},
	{2811.74, 2119.81, 10.97},
	{2884.44, 2301.22, 11.09},
	{2635.13, 2307.56, 11.09},
	{2520.01, 2302.06, 11.02},
	{2333.71, 1644.22, 11.10},
	{2434.64, 1506.88, 11.12},
	{2445.94, 1366.45, 11.10},
	{2591.83, 1185.00, 11.08},
	{2798.67, 1322.22, 11.20},
	{2560.91, 1367.11, 11.13},
	{2208.06, 1366.71, 11.08},
	{1853.97, 2061.76, 11.14},
	{1936.07, 2165.18, 11.13},
	{1934.44, 2048.72, 11.06},
	{-1807.46, -128.81, 5.97},
	{-2019.60, -61.78, 35.64},
	{-1996.47, 132.13, 27.94},
	{-2114.38, 327.02, 35.45},
	{-2258.88, 135.45, 35.62},
	{-2268.38, -174.33, 35.57},
	{-2363.64, -146.05, 35.61},
	{-2180.08, 313.92, 35.53},
	{-2018.43, 471.62, 35.47},
	{-2266.92, -36.03, 35.58},
	{-2427.97, -52.55, 35.58},
	{-2410.60, 310.71, 35.44},
	{-2237.71, 552.46, 35.44},
	{-2077.99, 557.22, 35.58},
	{-1824.78, 615.24, 35.48},
	{-1928.06, 720.37, 45.65},
	{-1986.18, 831.29, 45.68},
	{-1752.72, 829.49, 25.22},
	{-1723.04, 655.50, 25.18},
	{-1705.30, 825.06, 25.09},
	{-1805.25, 893.59, 25.08},
	{-1910.16, 867.79, 35.36},
	{-1993.13, 893.16, 45.72},
	{-2154.95, 763.83, 69.90},
	{-1982.00, 1088.07, 56.05},
	{-2643.99, 576.62, 14.94},
	{-2446.00, 716.49, 35.43},
	{-2246.69, 674.83, 49.70},
	{-2133.04, 896.79, 80.27},
	{-1631.27, 740.87, 14.90},
	{-1570.14, 508.45, 7.49},
	{-1673.62, 391.68, 7.44},
	{-1813.99, 71.72, 15.33},
	{-2245.78, -150.15, 35.57},
	{-2427.68, -135.93, 35.56},
	{-2508.02, -116.00, 25.91},
	{-2507.95, 17.15, 26.10},
	{-2363.44, -2.61, 35.51},
	{-2672.04, -63.73, 4.56},
	{-2664.74, -218.79, 4.61},
	{-2692.48, 280.11, 4.64},
	{-2732.06, 421.79, 4.60},
	{-1999.5015,96.6074,27.6875},
	{1721.2460,-1720.8604,13.5433},
	{1381.9146,-1802.9962,13.5469},
	{1394.5167,-1765.7505,13.5469},
	{547.3615,-1499.2080,14.5036}
};
new Float:bandos[60][3]=
{
	{2233.0774,1475.2439,1008.7850},
	{2233.0815,1476.0844,1008.7850},
	{2233.0876,1476.8563,1008.7850},
	{2242.8633,1476.5896,1008.8050},
	{2242.2935,1474.9698,1008.8050},
	{2241.7361,1473.3971,1008.8050},
	{2244.4163,1473.3989,1008.8050},
	{2244.9553,1474.9136,1008.8050},
	{2245.2385,1475.7191,1008.8050},
	{2245.9319,1477.2651,1008.8050},
	{2246.6765,1478.8392,1008.8050},
	{2247.3647,1480.2955,1008.8050},
	{2240.2263,1466.0715,1008.8050},
	{2240.0969,1464.3121,1008.8050},
	{2239.9758,1462.6632,1008.8050},
	{2239.9646,1460.7588,1008.8050},
	{2240.0850,1459.1825,1008.8050},
	{2240.2317,1457.3335,1008.8050},
	{2242.6799,1458.4329,1008.8050},
	{2242.5483,1460.0923,1008.8050},
	{2242.4939,1462.4752,1008.8050},
	{2242.6262,1464.2798,1008.8050},
	{2242.7603,1466.1064,1008.8050},
	{2241.5342,1450.1553,1008.8050},
	{2242.3086,1447.7734,1008.8050},
	{2245.0100,1447.6300,1008.8050},
	{2244.4626,1449.3169,1008.8050},
	{2243.9109,1451.0253,1008.8050},
	{2233.0776,1446.6803,1008.7850},
	{2233.0820,1447.5133,1008.7850},
	{2233.0862,1448.3518,1008.7850},
	{2257.4321,1450.1003,1008.8250},
	{2257.9380,1448.5487,1008.8250},
	{2258.4634,1446.9368,1008.8250},
	{2259.2690,1445.0492,1008.8250},
	{2259.9658,1443.5535,1008.8250},
	{2260.7292,1441.9319,1008.8250},
	{2262.6479,1443.7881,1008.8250},
	{2261.9199,1445.3485,1008.8250},
	{2260.8752,1447.7039,1008.8250},
	{2260.3955,1449.1791,1008.8250},
	{2259.8262,1450.9192,1008.8250},
	{2258.5652,1457.5267,1008.8250},
	{2258.4287,1459.2351,1008.8250},
	{2258.2988,1460.8838,1008.8250},
	{2258.2830,1462.4269,1008.8250},
	{2258.4055,1464.1061,1008.8250},
	{2258.5430,1465.9584,1008.8250},
	{2256.0105,1465.9784,1008.8250},
	{2255.8953,1464.4044,1008.8250},
	{2255.7607,1462.5662,1008.8250},
	{2255.7773,1460.7660,1008.8250},
	{2255.9106,1459.0460,1008.8250},
	{2256.0439,1457.3485,1008.8250},
	{2259.9385,1472.6371,1008.8250},
	{2260.4741,1474.1526,1008.8250},
	{2261.0583,1475.8008,1008.8250},
	{2258.6958,1476.6913,1008.8250},
	{2258.0996,1475.0142,1008.8250},
	{2257.5776,1473.5343,1008.8250}
};

new
	Text:PnumberXiaomi[32],
	Text:PnumberSamsung[34],
	Text:Calling[15];
new Text:kryg = Text:INVALID_TEXT_DRAW;
new Text:Bandito[10] = {Text:INVALID_TEXT_DRAW, ...};
new Text:Box = Text:INVALID_TEXT_DRAW;
new Text:Digit1[6] = {Text:INVALID_TEXT_DRAW, ...};
new Text:Digit2[6] = {Text:INVALID_TEXT_DRAW, ...};
new Text:Digit3[6] = {Text:INVALID_TEXT_DRAW, ...};

enum bbInfo
{
	bool:bbCreated,
	Float:bbPos[3],
	bbTime,
	Text3D:bbText,
	bbObject,
	bool:bbBreak
}
new BombInfo[MAX_BOMBS][bbInfo];

enum rInfo
{
	rID,
	rName[MAX_PLAYER_NAME+1],
	Float:radX,
	Float:radY,
	Float:radZ,
	Float:radA,
	rObj,
	Text3D: radText,
	radArea
}
new RadarInfo[MAX_RADARS][rInfo];

new Text:StopAnimation = Text:INVALID_TEXT_DRAW;
new Text:alcodraw[5] = {Text:INVALID_TEXT_DRAW, ...};
new Text:alcodraw2[5] = {Text:INVALID_TEXT_DRAW, ...};
new Text:alcodraw1[7] = {Text:INVALID_TEXT_DRAW, ...};
new actortime[MAX_ACTORS];
new GLS[70];

new Text:URL[3] = {Text:INVALID_TEXT_DRAW, ...};
new Weather;
new Text:GrandKapt[5] = {Text:INVALID_TEXT_DRAW, ...};
new Text:Grand2Kapt[5] = {Text:INVALID_TEXT_DRAW, ...};

/*-------- [ Система ларьков ] --------*/
new PlayerText:PlayerStallTD[MAX_PLAYERS][6] = {PlayerText:INVALID_TEXT_DRAW, ...};
new Text:StallTD[12] = {Text:INVALID_TEXT_DRAW, ...};
new SelectStallItem[MAX_PLAYERS char];
new bool:StallOpen[MAX_PLAYERS char];

new HealSG[93];


#if AC_ON
// Массив AC_CODE хранит в себе текстовые форматы номеров кода анти-чита
new AC_CODE[AC_MAX_CODES][AC_MAX_CODE_LENGTH] =
{
    "1000",
    "1001",
    "1002",
    "1003",
    "1004",
    "1005",
    "1006",
    "1007",
    "1008",
    "1009",
    "1010",
    "1011",
    "1012",
    "1013",
    "1014",
    "1015",
    "1016",
    "1017",
    "1018",
    "1019",
    "1020",
    "1021",
    "1022",
    "1023",
    "1024",
    "1025",
    "1026",
    "1027",
    "1028",
    "1029",
    "1030",
    "1031",
    "1032",
    "1033",
    "1034",
    "1035",
    "1036",
    "1037",
    "1038",
    "1039",
    "1040",
    "1041",
    "1042",
    "1043",
    "1044",
    "1045",
    "1046",
    "1047",
    "1048",
    "1049",
    "1050",
    "1051",
    "1052",
    "1053"
};
new AC_CODE_NAME[AC_MAX_CODES][AC_MAX_CODE_NAME_LENGTH] =
{
    {"Невалидное перемещение - Пешком"},
    {"Невалидное перемещение - В машине"},
    {"Телепорт - Пешком"},
    {"Телепорт - В машине"},
    {"Телепорт - По сиденьям в машине"},
    {"Телепорт - Машину к игроку"},
    {"Телепорт - Пикапы"},
    {"Флай - Пешком"},
    {"Флай - В машине"},
    {"СпидХак - Пешком"},
    {"СпидХак - В машине"},
    {"Чит на хп - В машине"},
    {"Чит на хп - Пешком"},
    {"Чит на броню"},
    {"Чит на деньги"},
    {"Чит на оружие"},
    {"Чит на патроны - Добавлять"},
    {"Чит на патроны - Бесконечные"},
    {"Чит на джетпак"},
    {"ГМ на патроны - Пешком"},
    {"ГМ на патроны - В машине"},
    {"Невидимка"},
    {"Lagcomp-spoof"},
    {"Чит на тюнинг"},
    {"Чит паркур"},
    {"Быстрый разворот"},
    {"Рапид"},
    {"Невалидный вызов спавна"},
    {"Невалидный Килл"},
    {"Про Аим"},
    {"Бег CJ"},
    {"Каршот"},
    {"CarJack"},
    {"Розморозка"},
    {"АФК Привидение"},
    {"Аим"},
    {"Невалидный НПС"},
    {"Реконнект"},
    {"Высокий пинг"},
    {"Подмена диалога"},
    {"Песочница"},
    {"Невалидная версия"},
    {"Взлом Ркон"},
    {"Невалидный тюнинг"},
    {"Флуд смены мест"},
    {"Диалог крашер"},
    {"Невалидные приаттаченные объекты"},
    {"Крашер оружием"},
    {"Подключение в 1 слот"},
    {"Игнорирование функции"},
    {"Невалидное место в авто"},
    {"Ддос"},
    {"NOP's"},
    {"Анти-быстрое движение"}
};


new AC_TRIGGER_TYPE_NAME[AC_MAX_TRIGGER_TYPES][AC_MAX_TRIGGER_TYPE_NAME_LENGTH] = {
    "{BC7677}Отключен",
    "{CAB491}Сообщать",
    "{D89B7D}Кикнуть"
};

new
    AC_CODE_TRIGGER_TYPE[AC_MAX_CODES], // Массив AC_CODE_TRIGGER_TYPE хранит в себе наказания каждого кода анти-чита, которые мы загрузим из базы данных.
    AC_CODE_TRIGGERED_COUNT[AC_MAX_CODES] = {0, ...}; // Массив, хранящий количество срабатываний того или иного кода анти-чита на протяжении текущей сессии

#endif

new EnterSklad[6];
new nalogoffise[2];
new amybank;
new shopeat[33];
new demorgan[1];
new bolka[3];

new Text:speedbox[4] = {Text:INVALID_TEXT_DRAW, ...};
new Float:LightsPos[212][6] =
{
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};
new Float:GunPos[47][3] =
{
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.40999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.35999924, 1001.59997559},
	{295.00001221, -39.35999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{294.90001221, -39.35999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.33999924, 1001.59997559},
	{295.20001221, -39.33999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.10001221, -39.25999924, 1001.59997559},
	{295.10001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.10001221, -39.20999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{295.00001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.40999924, 1001.59997559}
};
//------------------------------------------------------------------------------
main()
{
	print("                    ______________________________\n");
	print("                    | 	    "NAME" PROJECT 	 |");
	print("                    | 	   Copyright 2021 (c)	 |");
	print("                    ______________________________");
}


new object[MAX_OGRAD] ={-1,...};
new dmats[MAX_DMATS] ={-1,...};
new dguns[MAX_DGUNS] ={-1,...};
new dpatrons[MAX_DGUNS]={-1,...};
new dgunn[MAX_DGUNS]={-1,...};

new ddTimer[MAX_NARKO]={-1,...};
new ddrugs[MAX_NARKO] ={-1,...};
new Text3D:ddText[MAX_NARKO];
new ddrugtime[MAX_NARKO];

new wwTimer[MAX_WOODS]={-1,...};
new wwoods[MAX_WOODS] ={-1,...};
new Text3D:wwText[MAX_WOODS];
new wwoodtime[MAX_WOODS];
new wOwner[24][MAX_WOODS];

new dguntime[MAX_DGUNS];
new Text3D:tActor[MAX_ACTORS];

new MinePoroda[5][8] =
{
	{"камня"},
	{"металла"},
	{"бронзы"},
	{"серебра"},
	{"золота"}
};

new uf_VehicleSpeeds[] =
{
	160, 160, 200, 120, 150, 165, 110, 170, 110, 180, 160, 240, 160, 160, 140,
	230, 155, 200, 150, 160, 180, 180, 165, 145, 170, 200, 200, 170, 170, 200,
	190, 130, 800, 180, 200, 120, 160, 160, 160, 160, 160, 750, 150, 150, 110,
	165, 190, 200, 190, 150, 120, 240, 190, 190, 190, 140, 160, 160, 165, 160,
	200, 190, 260, 190, 750, 750, 160, 160, 190, 200, 170, 160, 190, 190, 160,
	160, 200, 200, 150, 165, 200, 120, 150, 120, 190, 160, 100, 200, 200, 170,
	170, 160, 160, 190, 220, 170, 200, 200, 140, 140, 160, 750, 260, 260, 160,
	260, 230, 165, 140, 120, 140, 200, 200, 200, 120, 120, 165, 165, 160, 340,
	340, 190, 190, 190, 110, 160, 160, 160, 170, 160, 600, 700, 140, 200, 160,
	160, 160, 110, 110, 150, 160, 230, 160, 165, 260, 160, 160, 160, 200, 160,
	160, 165, 160, 200, 170, 180, 110, 110, 200, 200, 200, 200, 200, 200, 750,
	200, 160, 160, 170, 110, 110, 900, 600, 110, 600, 160, 160, 200, 110, 160,
	165, 190, 160, 170, 120, 165, 260, 200, 140, 200, 260, 120, 200, 200, 600,
	190, 200, 200, 200, 160, 165, 110, 200, 200, 260, 260, 160, 160, 160, 140,
	160, 260, 210, 180, 225, 190, 170, 220,	160, 160, 110, 110, 150, 160, 230, 
	160, 165, 260, 160, 160, 160, 200, 160,200, 160, 160, 170, 110, 110, 900, 
	600, 110, 600, 160, 160, 200, 110, 160,165, 190, 160, 170, 120, 165, 260, 
	200, 140, 200, 260, 120, 200, 200, 600,190, 200, 200, 200, 160, 165, 110
};

new VehicleName[212][28] =
{
	"Landstalker",
	"Bravura",
	"Buffalo",
	"Linerunner",
	"Perenniel",
	"Sentinel",
	"Dumper",
	"Firetruck",
	"Trashmaster",
	"Stretch",
	"Manana",
	"Infernus",
	"Voodoo",
	"Pony",
	"Mule",
	"Cheetah",
	"Ambulance",
	"Leviathan",
	"Moonbeam",
	"Esperanto",
	"Taxi",
	"Washington",
	"Bobcat",
	"Mr Whoopee",
	"BF Injection",
	"Hunter",
	"Premier",
	"Enforcer",
	"Securicar",
	"Banshee",
	"Predator",
	"Bus",
	"Rhino",
	"Barracks",
	"Hotknife",
	"Article Trailer",
	"Previon",
	"Coach",
	"Cabbie",
	"Stallion",
	"Rumpo",
	"RC Bandit",
	"Romero",
	"Packer",
	"Monster",
	"Admiral",
	"Squallo",
	"Seasparrow",
	"Pizzaboy",
	"Tram",
	"Article Trailer 2",
	"Turismo",
	"Speeder",
	"Reefer",
	"Tropic",
	"Flatbed",
	"Yankee",
	"Caddy",
	"Solair",
	"Berkley's RC Van",
	"Skimmer",
	"PCJ-600",
	"Faggio",
	"Freeway",
	"RC Baron",
	"RC Raider",
	"Glendale",
	"Oceanic",
	"Sanchez",
	"Sparrow",
	"Patriot",
	"Quad",
	"Coastguard",
	"Dinghy",
	"Hermes",
	"Sabre",
	"Rustler",
	"ZR-350",
	"Walton",
	"Regina",
	"Comet",
	"BMX",
	"Burrito",
	"Camper",
	"Marquis",
	"Baggage",
	"Dozer",
	"Maverick",
	"SAN News Maverick",
	"Rancher",
	"FBI Rancher",
	"Virgo",
	"Greenwood",
	"Jetmax",
	"Hotring Racer",
	"Sandking",
	"Blista Compact",
	"Police Maverick",
	"Boxville",
	"Benson",
	"Mesa",
	"RC Goblin",
	"Hotring Racer",
	"Hotring Racer",
	"Bloodring Banger",
	"Rancher",
	"Super GT",
	"Elegant",
	"Journey",
	"Bike",
	"Mountain Bike",
	"Beagle",
	"Cropduster",
	"Stuntplane",
	"Tanker",
	"Roadtrain",
	"Nebula",
	"Majestic",
	"Buccaneer",
	"Shamal",
	"Hydra",
	"FCR-900",
	"NRG-500",
	"HPV1000",
	"Cement Truck",
	"Towtruck",
	"Fortune",
	"Cadrona",
	"FBI Truck",
	"Willard",
	"Forklift",
	"Tractor",
	"Combine Harvester",
	"Feltzer",
	"Remington",
	"Slamvan",
	"Blade",
	"Freight",
	"Brownstreak",
	"Vortex",
	"Vincent",
	"Bullet",
	"Clover",
	"Sadler",
	"Firetruck LA",
	"Hustler",
	"Intruder",
	"Primo",
	"Cargobob",
	"Tampa",
	"Sunrise",
	"Merit",
	"Utility Van",
	"Nevada",
	"Yosemite",
	"Windsor",
	"Monster A",
	"Monster B",
	"Uranus",
	"Jester",
	"Sultan",
	"Stratum",
	"Elegy",
	"Raindance",
	"RC Tiger",
	"Flash",
	"Tahoma",
	"Savanna",
	"Bandito",
	"Freight Flat Trailer",
	"Streak Trailer",
	"Kart",
	"Mower",
	"Dune",
	"Sweeper",
	"Broadway",
	"Tornado",
	"AT400",
	"DFT-30",
	"Huntley",
	"Stafford",
	"BF-400",
	"Newsvan",
	"Tug",
	"Petrol Trailer",
	"Emperor",
	"Wayfarer",
	"Euros",
	"Hotdog",
	"Club",
	"Freight Box Trailer",
	"Article Trailer 3",
	"Andromada",
	"Dodo",
	"RC Cam",
	"Launch",
	"Police Car (LSPD)",
	"Police Car (SFPD)",
	"Police Car (LVPD)",
	"Police Ranger",
	"Picador",
	"Police SF.",
	"Alpha",
	"Phoenix",
	"Glendale Shit",
	"Sadler Shit",
	"Baggage Trailer A",
	"Baggage Trailer B",
	"Tug Stairs Trailer",
	"Boxville",
	"Farm Trailer",
	"Utility Trailer"
};
new Text:Boxmenu0 = Text:INVALID_TEXT_DRAW;
new Text:Boxmenu1 = Text:INVALID_TEXT_DRAW;
new Text:Boxmenu2 = Text:INVALID_TEXT_DRAW;

new Text:Target[5] = {Text:INVALID_TEXT_DRAW, ...};
new Text:BoxTaxi1 = Text:INVALID_TEXT_DRAW;
new Text:BoxTaxi2 = Text:INVALID_TEXT_DRAW;
new Text:Taximonitor = Text:INVALID_TEXT_DRAW;
new Text:TaxiDol = Text:INVALID_TEXT_DRAW;
new Text:TaxiServ = Text:INVALID_TEXT_DRAW;

new Float:JobsPos[3][3] =
{
	{1970.6949,-1964.2100,13.5742},
	{-27.3830,163.9576,2.4367},
	{-86.3118,-304.8957,1.4219}
};
enum JobsPosInfo
{
    Float:Position[2],
    JobsId
};
new JobsInfo[JobsPosInfo];

enum minfo
{
	TrashItem[150],
	TrashItemAmount[150],
	TrashItemColor[150],
	TrashItemEnchant[150],
	TrashItemMining[150]
};
new TrashInfo[MAX_TRASH][minfo];

new MusorObject[MAX_TRASH] = {-1, ...};
new MusorCP[MAX_TRASH] = {-1, ...};
new MusorCar[MAX_TRASH] = {-1, ...};
new TempMusorObject[MAX_TRASH] = {-1, ...};
new Temp2MusorObject[MAX_TRASH] = {-1, ...};
new TempMusorMusor[MAX_TRASH] = {-1, ...};

new MusorCount[MAX_TRASH] = {100, ...};
new Text3D:MusorText[MAX_TRASH] = {NONE_3D_TEXT, ...};
new bool:RemoveObject[MAX_TRASH] = {false, ...};
new SvalkaCP[3];
//-------------------------------------
new FactoryClothes;
/////////

new Merrit[4];
/////////
new Text:FuelDrawBG[2] = {Text:INVALID_TEXT_DRAW, ...};
new Text:FuelNextKey[2] = {Text:INVALID_TEXT_DRAW, ...};
new Text:FuelBackKey[2] = {Text:INVALID_TEXT_DRAW, ...};
new Text:FuelNextBG[2] = {Text:INVALID_TEXT_DRAW, ...};
new Text:FuelKeyDraw[10] = {Text:INVALID_TEXT_DRAW, ...};
new Text:FuelKeyBG = Text:INVALID_TEXT_DRAW;
new Text:FuelBarDraw = Text:INVALID_TEXT_DRAW;
new Text:FuelSelectDraw = Text:INVALID_TEXT_DRAW;
new Text:FuelCancelDraw = Text:INVALID_TEXT_DRAW;
new Text:FuelOtherDraw = Text:INVALID_TEXT_DRAW;
new Text:BandDrawBG[2] = {Text:INVALID_TEXT_DRAW, ...};
new Text:ShieldBG[2] = {Text:INVALID_TEXT_DRAW, ...};
new Bar_CP[MAX_BARSs] = {-1, ...};
new ScrapCP;
new Yakydzapick;
new Eatery_CP[7] = {-1, ...};
new Text:HInfoEnterDraw = Text:INVALID_TEXT_DRAW;
new Text:HInfoBuyDraw = Text:INVALID_TEXT_DRAW;
new Text:HInfoBG = Text:INVALID_TEXT_DRAW;
new Zek_CP = -1;
new RingCP = -1;
new MeriaGun = -1;
new Text:boxaccept = Text:INVALID_TEXT_DRAW;
new Text:boxcancel = Text:INVALID_TEXT_DRAW;
new Text:Boxmenu3 = Text:INVALID_TEXT_DRAW;
new Text:ButtonLeft = Text:INVALID_TEXT_DRAW;
new Text:ButtonRight = Text:INVALID_TEXT_DRAW;
new Text:ButtonUp = Text:INVALID_TEXT_DRAW;
new Text:ButtonDown = Text:INVALID_TEXT_DRAW;
new Text:ButtonCancel = Text:INVALID_TEXT_DRAW;
new Text:ButtonSelect = Text:INVALID_TEXT_DRAW;
new Reklam = 0;
new CaptureDef = -1;
new CaptureAtac = -1;
new CaptureDefKill = 0;
new CaptureAtacKill = 0;
new CaptureTime[2];
new CaptureZone = -1;

new BizAtack;
new BizDeff;
new BizAtakkill;
new BizDeffkill;
new BizTime[2];
new BizWar = -1;
new BizWarState;
new PlaceWar;
new HealExitPickup = -1;
new EnterBankPickup;
new ExitBankPickup;
new RecoveryTime[MAX_ORGS];
//----------------COUNT------------------------------
new SALONOWNABLECARS;
new OWNABLEHOUSES;
new OWNABLEBIZES;
new OWNABLEITEMS;
new GANGZONES;
//----------------COUNT------------------------------
new ARENDCARS;
new ArendCar[MAX_AREND_CARS] = INVALID_VEHICLE_ID;

new Binko_CP = -1;

new HideMapZone;
new ZavodPutCP[8];
new ZavodClotherCP[6];
new FuelName[4][15] =
{
	"Diesel", "A-92", "A-95", "A-98"
};
enum InfoDutyPos
{
	Float:dutyposX,
	Float:dutyposY,
	Float:dutyposZ,
	dutyposWorld
}
new DutyPos[MAX_ORGS][InfoDutyPos] =
{
	{0.0, 0.0, 0.0,228}, //No-ne
	{-927.9057,-2364.6013,1701.0959,-1}, //LSPD
	{2327.72, 60.64, 1502.00,11}, //SFPD (LVPD)
	{-2515.0466,-652.1718,1331.6420,-1}, //FBI
	{2327.72, 60.64, 1502.00,-1}, //SWAT
	{-1775.2629, -1994.1636, 1500.7865,1}, //M4C
	{1495.0961,-1277.8772,113.8064,-1}, //Meria
	{583.8752,1463.3833,1900.7980,-1}, //ARMY LV
	{-1775.2629, -1994.1636, 1500.7865,3}, //деревенская больница
	{-2585.34, -1393.19, 1500.76,-1}, //Licensers
	{-211.89, 1297.29, 1507.67, 1}, //Radio
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
	{0.0, 0.0, 0.0,228},
 	{0.0, 0.0, 0.0,228},
	{458.16, 880.03, 1500.96,-1}, //army
	{-2687.48438, 820.49432, 1500.75085,-1},//bank
	{-1775.2629, -1994.1636, 1500.7865,2},
	{2327.72, 60.64, 1502.00,12},
	{-211.89, 1297.29, 1507.67,2}, //Radio lv
	{0.0, 0.0, 0.0,228}, //No-ne
	{-211.89, 1297.29, 1507.67,3}, //Radio SF
	{-1600.1089,-130.1264,1501.0859,-1}//armysf
};
new TeamDutyCP[MAX_ORGS];
//-------------------------------
new RankName[MAX_ORGS][10][50];
//--------------------------------------
new Inc_CP[3] = -1;

new Text3D:NarkoText[5];

new Text3D:FactoryText[3];
new FactoryFerum;
new FactoryMats;
new FactoryFuel;
new Fish_CP[50];

new	EventLeave;
new	Text:EventSob[7];
// new cars
new Text3D:v_Vehicle_LabelID[MAX_VEHICLES][MAX_PLAYERS] = {{Text3D:-1, ...}, ...};

new HouseCP[MAX_HOUSES] = {-1, ...};
new HouseIcon[MAX_HOUSES] = {-1, ...};
new Text3D:House3DText[MAX_HOUSES] = {NONE_3D_TEXT, ...};
new HouseGaragePickup[MAX_HOUSES] = {-1, ...};
new Text3D:HouseGarage3DText[MAX_HOUSES] =  {NONE_3D_TEXT, ...};
new BizCP[MAX_BIZ] = {-1, ...};
new Text3D:Biz3DText[MAX_BIZ] = {NONE_3D_TEXT, ...};
new BizPick[MAX_BIZ];
new BizPickup[MAX_BIZ];
new BizIcon[MAX_HOUSES] = {-1, ...};
new Text3D:CarText[MAX_OWNABLECARS] = {NONE_3D_TEXT, ...};
new Text3D:CarTextTrunk[MAX_OWNABLECARS] = {NONE_3D_TEXT, ...};
//=============================[ MAX_VEHICLES ]=============================//

new AttachVehicle[MAX_VEHICLES][60];
enum tInfo
{
	TrunkItem[30],
	TrunkItemAmount[30],
	TrunkItemColor[30],
	TrunkItemEnchant[30],
    TrunkItemMining[30],
	tOpen
};
new TrunkInfo[MAX_VEHICLES][tInfo];
new LightsObject[MAX_VEHICLES][2];
enum pTwinTurbo
{
	bool:Engine,
	bool:cStatus
};
new TwinTurbo[MAX_VEHICLES][pTwinTurbo];
new NowMusor[MAX_VEHICLES] = {-1, ...};
new MusorovozPlayer[MAX_VEHICLES] = {INVALID_PLAYER_ID, ...};
new CarMusorCount[MAX_VEHICLES];
new CarproductCount[MAX_VEHICLES];
new CarproductType[MAX_VEHICLES];
new Text3D:MusorCarText[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
new Text3D:AutobCarText[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
new BenzinCount[MAX_VEHICLES];
new Float:BenzinCena[MAX_VEHICLES];
new Contracter[MAX_VEHICLES];
new Text3D:Benzin[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
new Text3D:Product[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];
new VehicleState[MAX_VEHICLES];
new CarScrap[MAX_VEHICLES] = {-1,...};
new BeforeFill[MAX_VEHICLES];
new VehicleSeat[MAX_VEHICLES][10];
new Text3D:TaxiText[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
new TaxiAttach[MAX_VEHICLES];
new UnEngine[MAX_VEHICLES];
new Float:VehicleHealth[MAX_VEHICLES];
enum VehTemp
{
	vName[50],
	vCena,
	StripObject,
	vModel,
	Float:vPos_X,
	Float:vPos_Y,
	Float:vPos_Z,
	Float:vPos_A,
	vEngine,
	vLights,
	vJob,
	vTeam,
	vRank,
	vAntiRepair,
	vLock,
	vPlayer,
	vFilled,
	Float:VehicleMilage,
	CarStrips,
	Float:Fuel
}
new vTemp[MAX_VEHICLES][VehTemp];
//-----------------------------------------------------

new gGate[10];
new dDoor[41];

enum BuildInfo
{
	Text3D:blBuildText,
	blClosed,
	blArenderID[24],
	blTime,
	blCanEnter
}
new BuildsInfo[1][BuildInfo];

enum gsInfo
{
	gsName[20],
	Float:gsPosX,
	Float:gsPosY,
	Float:gsPosZ,
	gsBizzID
}
new GoGunShopCP[11];
new GoGunShop[11][gsInfo] =
{
    {"GunShop LS",1359.9208,-1283.6482,13.3461,B_GUNSHOP},
	{"Palomino Gun",2340.3765,63.1496,26.3359,B_BAR},
	{"Blubbery Gun",235.4267,-180.1013,1.4297,B_BUY},
	{"LV GunShop",2530.9441,2084.2971,10.6719,LV_AMYN1},
	{"LV Pro Gun",2093.8525,2052.8147,10.8203,LV_AMYN2},
	{"FC Gun",-302.5458,827.9150,13.2947,LV_AMYN3},
	{"EQ Gun",-1510.5068,2603.7961,55.6909,LV_AMYN4},
	{"SF Guns",-2625.7246,209.2422,4.6199,115},
	{"SF Guns",-2163.4663,129.3818,35.3203,116},
	{"SF Guns",-2051.9065,553.7458,35.1719,117},
	{"Angel Guns",-2093.6995,-2464.9138,30.6250,118}
};
new GoFuelCP[21];
enum gfinfo
{
	gfName[20],
	Float:gfPos_X,
	Float:gfPos_Y,
	Float:gfPos_Z,
	gfBizzID
}
new GoFuel[21][gfinfo] =
{
	{"Gas LS 1",1004.4177,-940.2440,42.1797,BIZ_GAS_LS_1},
	{"Gas LS 2",1944.3726,-1773.2112,13.3906,BIZ_GAS_LS_2},
	{"Gas LS 3",300.1025,-172.2511,1.3289,BIZ_GAS_LV_2},
	{"Gas LS 4",653.9818,-569.3989,16.3359,BIZ_GAS_LV_4},
	{"Gas LS 5",612.1644,-1511.0835,14.9344,BIZ_GAS_LV_5},
	{"Gas LS 6",1378.2557,456.6682,19.8868,BIZ_GAS_LV_6},
	{"Gas LV 1",2202.4253,2473.4390,10.8203,BIZ_AZS1},
	{"Gas LV 2",1598.4116,2199.1228,10.8203,BIZ_AZS2},
	{"Gas LV 3",611.7775,1694.6161,6.9922,BIZ_AZS3},
	{"Gas LV 4",2145.7642,2748.0129,10.8203,BIZ_AZS4},
	{"Gas LV 5",-1328.3707,2677.3887,50.0625,BIZ_AZS5},
	{"Gas LV 6",-1472.3184,1864.2222,32.6328,BIZ_AZS6},
	{"Gas SF 1",-98.7537,-1166.8053,2.5993,21},//dirka
	{"Gas SF 2",22.4816,-2646.1042,40.4618,27},
	{"Gas SF 3",-1606.3723,-2713.6147,48.5335,22},
	{"Gas SF 4",-2249.9185,-2558.6838,31.8938,25},
	{"Gas SF 5",-1666.6174,408.5915,7.1797,26},
	{"Gas SF 6",-2022.0974,155.9591,28.8359,23},
	{"Gas SF 7",-2261.1799,-2.6144,35.1719,29},
	{"Gas SF 8",-2405.7432,974.6953,45.2969,24},
	{"Gas LV 7",2631.1118,1106.5516,10.8130,133}
};
enum brInfo
{
	brOrg,
	Float:brPos_X,
	Float:brPos_Y,
	Float:brPos_Z,
	Float:brPos_A,
	bool:brOpen,
	brForBarrierID
}
new BarrierInfo[34][brInfo] =
{
    {TEAM_NONE, 		-2669.5933, 2121.8530, 54.3169, 0.000000, false, -1},
    {TEAM_NONE, 		-2686.4246, 2141.3667, 54.3169, 0.000000, false, -1},
	{TEAM_NONE, 		57.626400, -1536.844482, 3.944200, 82.000000, false, -1},
    {TEAM_NONE, 		59.734100, -1521.458862, 3.944200, 82.000000, false, -1},
	{TEAM_NONE, 		1640.88, -1147.39, 22.91, 0.00, false, -1},
	{TEAM_MERIALS,    	1521.98, -1282.21, 13.45,0.00, false, -1},
	{TEAM_LSPD,    		1544.71, -1630.79, 12.36,-90.00, false, -1},
	{TEAM_FBI,          263.067474, -1585.352416, 32.257957, 165.500015, false, -1},
	{TEAM_ARMYLV, 		1152.94, 1362.98, 9.76, 360.00, false, -1},
	{TEAM_ARMYLV, 		347.99, 1799.77, 17.37, 34.51, false, -1},
	{TEAM_ARMYLV, 		-16.81, 2069.87, 16.49, 91.97, false, -1},
	{TEAM_RM, 			997.12, 1752.23, 9.74, 269.34, false, -1},
	{TEAM_RM, 			997.09, 1707.56, 9.74, 269.34, false, -1},
	{TEAM_NONE, 		2478.63, 2516.68, 9.79, 90.07, false, -1},
	{TEAM_NONE, 		2523.94, 2424.26, 9.79, 179.62, false, -1},
	{TEAM_NONE, 		-75.67, -349.27, 0.40, 89.15, false, -1},
	{TEAM_MEDICLV, 		1637.15, 1829.90, 9.63, 269.13, false, -1},
	{TEAM_MEDICLV, 		1577.66, 1829.97, 9.63, 270.69, false, -1},
	{TEAM_PDLV, 		2238.18, 2450.46, 9.80, -90.00, false, -1},
	{TEAM_RADIOLV, 		2617.45, 1169.65, 9.65, 268.97, false, -1},
	{TEAM_NONE, 		428.671,615.601,17.941, 34.000, false, -1},
	{TEAM_NONE, 		423.585,599.148,17.941, 213.997, false, -1},
	{TEAM_NONE, 		-144.712,482.638,11.078, 165.997, false, -1},
	{TEAM_NONE, 		-128.746,490.219,10.383, 345.992, false, -1},
	{TEAM_NONE, 		1792.503540, 811.798828, 9.843500, 0.000, false, -1},
	{TEAM_NONE, 		1808.153442, 811.798828, 9.793500, 0.000, false, -1},
	{TEAM_SFPD,			-1701.43, 687.59, 23.88, 90.00, false, -1},
	{TEAM_SFPD,			-1572.20, 658.84, 6.08, 270.00, false, -1},
    {TEAM_NONE, 		-2154.069580, -745.830383, 31.006355, 90.00, false, -1},
    {TEAM_NONE, 		-2154.069580, -967.349243, 31.006355, 90.00, false, -1},
	{TEAM_ARMYSF,		-1526.3906, 481.3828, 6.1797, 360.0000, false, -1},
    {TEAM_NONE, 		-2049.517822, -217.969101, 34.188900, 0.00, false, -1},
    {TEAM_FBI, 		-2436.851563, 495.453094, 28.953100, 205.000000, false, -1},
    {TEAM_NONE, 			1811.663818, -1886.248169, 12.369600, 90.000000, false, -1}
};
new gBarrier[sizeof(BarrierInfo)];
enum gInfo
{
	gOrg,
	gObID,
	Float:gClose_X,
	Float:gClose_Y,
	Float:gClose_Z,
	Float:gClose_A,
	Float:gOpen_X,
	Float:gOpen_Y,
	Float:gOpen_Z,
	bool:gOpen,
	gForGateid,
	bool:gCreated,
	gWorld
}
new GateInfo[9][gInfo] =
{
	{TEAM_ARMY,976, 2720.25, -2508.42, 12.09,90.0,2720.25, -2516.92, 12.09,false,-1,false,-1},
	{TEAM_ARMY,976,  2720.10, -2409.59, 12.09,90.0, 2720.10, -2418.17, 12.09,false,-1,false,-1},
	{TEAM_LSPD,11327, 1589.33, -1638.27, 14.86,270.09, 1596.37, -1638.27, 14.86,false,-1,false,-1},
	{TEAM_ARMYLV,19313,  134.9800, 1941.5500, 21.7700,0.00,121.8900, 1941.5500, 21.7700,false,-1,false,-1},
	{TEAM_ARMYLV,19313,  285.98, 1822.27, 20.10,270.00,285.9800, 1833.4900, 20.1000,false,-1,false,-1},
    {TEAM_SFPD,19313, -1630.27258, 688.22009, 8.80640,   360.00000, -1644.25256, 688.22009, 8.80640,false,-1,false,-1},
    {TEAM_SFPD,19302, 2331.0060, 66.6724, 1502.2322, 0.00000, 2329.6661, 66.6724, 1502.2322,false,-1,false,0},
	{TEAM_LVPD,19302, 2331.0060, 66.6724, 1502.2322, 0.00000, 2329.6661, 66.6724, 1502.2322,false,-1,false,11},
	{TEAM_PDLV,19302, 2331.0060, 66.6724, 1502.2322, 0.00000, 2329.6661, 66.6724, 1502.2322,false,-1,false,12}
};
enum doorInfo
{
	dOrg,
	dObID,
	Float:dClose_X,
	Float:dClose_Y,
	Float:dClose_Z,
	Float:dClose_A,
	Float:dOpen_X,
	Float:dOpen_Y,
	Float:dOpen_Z,
	bool:dOpen,
	dForDoorid,
	bool: dCreated,
    dWorld
}
new DoorInfo[41][doorInfo] =
{
    {TEAM_ARMY, 1495, 454.5582, 871.9671, 1499.9343, 90.0, 454.5582, 870.6271, 1499.9343, false, -1, false, -1},
	{TEAM_ARMY, 1495, 466.4337, 871.1186, 1499.9343, 180.0, 467.7737, 871.1186, 1499.9343, false, -1, false, -1},
	{TEAM_ARMY, 1495, 468.7119, 870.2476, 1499.9343, 270.0, 468.7119, 871.2076, 1499.9343, false, -1, false, -1},
	{TEAM_ARMY, 1495, 464.9209, 856.7908, 1499.9343, 0.0, 463.5809, 856.7908, 1499.9343, false, -1, false, -1},
	{TEAM_ARMY, 1495, 474.0151, 860.6030, 1499.9343, -90.0, 474.0131, 861.9629, 1499.9343, false, -1, false, -1},
    {TEAM_LICENSERS, 1495, -2583.0000, -1385.2924, 1499.7375, 90.0, -2583.0000, -1386.6324, 1499.7375, false, -1, false, -1},
    {TEAM_MEDICLS, 1495, -1773.2739, -1995.1445, 1499.7488, 0.0, -1774.5939, -1995.1445, 1499.7488, false, 1, false, 1},
	{TEAM_MEDICLS, 1495, -1786.7758, -1998.9915, 1499.7488, 90.0, -1786.7758, -2000.3115, 1499.7488, false, 1, false, 1},
	{TEAM_MEDICLS, 1495, -1757.9042, -1998.9915, 1499.7488, 90.0, -1757.9042, -2000.3115, 1499.7488, false, 1, false, 1},
	{TEAM_MEDICLV, 1495, -1773.2739, -1995.1445, 1499.7488, 0.0, -1774.5939, -1995.1445, 1499.7488, false, 1, false, 2},
	{TEAM_MEDICLV, 1495, -1786.7758, -1998.9915, 1499.7488, 90.0, -1786.7758, -2000.3115, 1499.7488, false, 1, false, 2},
	{TEAM_MEDICLV, 1495, -1757.9042, -1998.9915, 1499.7488, 90.0, -1757.9042, -2000.3115, 1499.7488, false, 1, false, 2},
	{TEAM_MEDICSF, 1495, -1773.2739, -1995.1445, 1499.7488, 0.0, -1774.5939, -1995.1445, 1499.7488, false, 1, false, 3},
	{TEAM_MEDICSF, 1495, -1786.7758, -1998.9915, 1499.7488, 90.0, -1786.7758, -2000.3115, 1499.7488, false, 1, false, 3},
	{TEAM_MEDICSF, 1495, -1757.9042, -1998.9915, 1499.7488, 90.0, -1757.9042, -2000.3115, 1499.7488, false, 1, false, 3},
	{TEAM_MERIALS, 1495, -2067.66919, 2693.16870, 1499.96265, 90.00, -2067.66919, 2691.82861, 1499.96265, false, -1, false, -1},
	{TEAM_MERIALS, 1495, -2067.66919, 2704.74023, 1499.96265, 90.00, -2067.66870, 2703.40015, 1499.96265, false, -1, false, -1},
    {TEAM_MERIALS, 1495, -2062.22510, 2706.25781, 1499.96265, 270.00, -2062.22510, 2707.59790, 1499.96265, false, -1, false, -1},
	{TEAM_MERIALS, 1495, -2062.22510, 2694.67773, 1499.96265, 270.00, -2062.22510, 2695.99780, 1499.96265, false, -1, false, -1},
	{TEAM_BANK, 1495, -2690.8259, 807.4251, 1499.9404,00.00, -2692.1459, 807.4251, 1499.9404, false, -1, false, -1},
	{TEAM_SFPD, 1495, 2363.7012, 96.4450, 1500.9786, 0.00000, 2362.3812, 96.4450, 1500.9786, false, -1, false, 0},
	{TEAM_SFPD, 1495, 2326.7510, 78.2712, 1500.9806, 180.00000, 2328.0710, 78.2712, 1500.9806, false, -1, false, 0},
	{TEAM_SFPD, 1495, 2325.2395, 81.4812, 1500.9806, 360.00000, 2323.9195, 81.4812, 1500.9806, false, -1, false, 0},
	{TEAM_LVPD, 1495, 2363.7012, 96.4450, 1500.9786, 0.00000, 2362.3812, 96.4450, 1500.9786, false, -1, false, 11},
	{TEAM_LVPD, 1495, 2326.7510, 78.2712, 1500.9806, 180.00000, 2328.0710, 78.2712, 1500.9806, false, -1, false, 11},
	{TEAM_LVPD, 1495, 2325.2395, 81.4812, 1500.9806, 360.00000, 2323.9195, 81.4812, 1500.9806, false, -1, false, 11},
	{TEAM_PDLV, 1495, 2363.7012, 96.4450, 1500.9786, 0.00000, 2362.3812, 96.4450, 1500.9786, false, -1, false, 12},
	{TEAM_PDLV, 1495, 2326.7510, 78.2712, 1500.9806, 180.00000, 2328.0710, 78.2712, 1500.9806, false, -1, false, 12},
	{TEAM_PDLV, 1495, 2325.2395, 81.4812, 1500.9806, 360.00000, 2323.9195, 81.4812, 1500.9806, false, -1, false, 12},
    {TEAM_MEDICLS, 1495, -1354.953735, -0.942900, 1600.072510, 0.0, -1356.28, -0.95, 1600.07, false, 1, false, 1},
	{TEAM_MEDICLS, 1495, -1353.440552, 25.053200, 1600.072510, 180.0, -1352.12, 25.06, 1600.07, false, 1, false, 1},
	{TEAM_MEDICLS, 1495, -1321.315918, 0.895000, 1600.072510, 0.0, -1322.64, 0.88, 1600.07, false, 1, false, 1},
	{TEAM_MEDICLS, 1495, -1319.801880, 23.370899, 1600.072510, 180.0, -1318.47, 23.38, 1600.07, false, 1, false, 1},
	{TEAM_MEDICLV, 1495, -1354.953735, -0.942900, 1600.072510, 0.0, -1356.28, -0.95, 1600.07, false, 1, false, 2},
	{TEAM_MEDICLV, 1495, -1353.440552, 25.053200, 1600.072510, 180.0, -1352.12, 25.06, 1600.07, false, 1, false, 2},
	{TEAM_MEDICLV, 1495, -1321.315918, 0.895000, 1600.072510, 0.0, -1322.64, 0.88, 1600.07, false, 1, false, 2},
	{TEAM_MEDICLV, 1495, -1319.801880, 23.370899, 1600.072510, 180.0, -1318.47, 23.38, 1600.07, false, 1, false, 2},
	{TEAM_MEDICSF, 1495, -1354.953735, -0.942900, 1600.072510, 0.0, -1356.28, -0.95, 1600.07, false, 1, false, 3},
	{TEAM_MEDICSF, 1495, -1353.440552, 25.053200, 1600.072510, 180.0, -1352.12, 25.06, 1600.07, false, 1, false, 3},
	{TEAM_MEDICSF, 1495, -1321.315918, 0.895000, 1600.072510, 0.0, -1322.64, 0.88, 1600.07, false, 1, false, 3},
	{TEAM_MEDICSF, 1495, -1319.801880, 23.370899, 1600.072510, 180.0, -1318.47, 23.38, 1600.07, false, 1, false, 3}
};
enum bgInfo
{
	bgGunid,
	bgAmmo[5],
	bgGPrice,
	bgPrice
}
new BuyGunInfo[11][bgInfo] =
{
	{1, 	{1, 0, 0, 0, 0}, 			0, 		60},
	{5, 	{1, 0, 0, 0, 0}, 			0, 		120},
	{8, 	{1, 0, 0, 0, 0}, 			0, 		300},
	{46, 	{1, 0, 0, 0, 0}, 			0, 		240},
	{17, 	{1, 2, 3, 4, 5}, 			0, 		50},
	{24, 	{50, 75, 100, 125, 150}, 	900, 	100},
	{25,	{50, 75, 100, 125, 150}, 	1100, 	120},
	{29, 	{100, 150, 200, 250, 300}, 	1300, 	200},
	{30, 	{100, 150, 200, 250, 300}, 	1400, 	250},
	{31, 	{100, 150, 200, 250, 300}, 	1450, 	280},
	{33, 	{50, 100, 150, 200, 250}, 	1510, 	300}
};
new Float:CarPounds[14][4] =
{
    {1611.3163,-1140.9514,1679.1689,-1073.6880},
    {1603.515625,-1089.84375,1806.640625,-1039.0625},
	{1566.40625,-1041.015625,1755.859375,-1007.8125},
	{1751.953125,-1041.015625,1792.96875,-1021.484375},
	{1755.859375,-1021.484375,1783.203125,-1011.71875},
	{1617.1875,-1140.625,1685.546875,-1091.796875},
	{1615.234375,-1095.703125,1685.546875,-1085.9375},
	{1578.125,-1056.640625,1609.375,-1039.0625},
	{1591.796875,-1068.359375,1607.421875,-1056.640625},
	{1599.609375,-1076.171875,1607.421875,-1066.40625},
	{1825.6003,-1147.3049,1547.0156,-1006.9152},
	{2480.0544,2482.7708,2534.8032,2543.1504},
	{2399.3401,2525.1711,2479.9580,2557.8350},
	{2458.6350,2482.7695,2479.3079,2500.5684}
};
enum healinfo
{
	Float:hCP[3],
	Float:hBed[4],
	hInt,
	hWorld,
	hName[24],
	hID
}
new HealInfo[69][healinfo] =
{
	{{-1750.7972, -2010.3264, 1500.7665}, {-1750.8989, -2009.2577, 1501.4855,0.000}, 2, 1, "The State", 1 },
	{{-1750.7972, -2012.5464, 1500.7665}, {-1750.8989, -2011.4777, 1501.4855,0.000}, 2, 1, "The State", 2 },
	{{-1750.7972, -2014.7675, 1500.7665}, {-1750.8989, -2013.7388, 1501.4855,0.000}, 2, 1, "The State", 3 },
	{{-1750.7972, -2016.9886, 1500.7665}, {-1750.8989, -2015.9203, 1501.4855,0.000}, 2, 1, "The State", 4 },
	{{-1750.7972, -2019.2717, 1500.7665}, {-1750.8989, -2018.1460, 1501.4855,0.000}, 2, 1, "The State", 5 },
	{{-1756.5834, -2017.0441, 1500.7665}, {-1756.3740, -2018.0860, 1501.4855,180.0}, 2, 1, "The State", 6 },
	{{-1756.5834, -2014.8034, 1500.7665}, {-1756.3740, -2015.9041, 1501.4855,180.0}, 2, 1, "The State", 7 },
	{{-1756.5834, -2012.4833, 1500.7665}, {-1756.3740, -2013.6636, 1501.4855,180.0}, 2, 1, "The State", 8 },
	{{-1794.6088, -2018.0068, 1500.7821}, {-1794.5467, -2019.0742, 1501.4855,180.0}, 2, 1, "The State", 9 },
	{{-1794.6088, -2015.7864, 1500.7821}, {-1794.5467, -2016.8727, 1501.4855,180.0}, 2, 1, "The State", 10 },
	{{-1794.6088, -2013.5824, 1500.7821}, {-1794.5467, -2014.6313, 1501.4855,180.0}, 2, 1, "The State", 11 },
	{{-1794.6088, -2011.3427, 1500.7821}, {-1794.5467, -2012.4513, 1501.4855,180.0}, 2, 1, "The State", 12 },
	{{-1794.6088, -2009.1033, 1500.7821}, {-1794.5467, -2010.1914, 1501.4855,180.0}, 2, 1, "The State", 13 },
	{{-1788.2007, -2012.2781, 1500.7821}, {-1788.2453, -2013.6578, 1501.4855,0.000}, 2, 1, "The State", 14 },
	{{-1788.2007, -2014.7587, 1500.7821}, {-1788.2453, -2015.9187, 1501.4855,0.000}, 2, 1, "The State", 15 },
	{{-1788.2007, -2016.9807, 1500.7821}, {-1788.2453, -2018.1586, 1501.4855,0.000}, 2, 1, "The State", 16 },

	{{-1750.7972, -2010.3264, 1500.7665}, {-1750.8989, -2009.2577, 1501.4855,0.000}, 3, 2, "The State", 17 },
	{{-1750.7972, -2012.5464, 1500.7665}, {-1750.8989, -2011.4777, 1501.4855,0.000}, 3, 2, "The State", 18 },
	{{-1750.7972, -2014.7675, 1500.7665}, {-1750.8989, -2013.7388, 1501.4855,0.000}, 3, 2, "The State", 19 },
	{{-1750.7972, -2016.9886, 1500.7665}, {-1750.8989, -2015.9203, 1501.4855,0.000}, 3, 2, "The State", 20 },
	{{-1750.7972, -2019.2717, 1500.7665}, {-1750.8989, -2018.1460, 1501.4855,0.000}, 3, 2, "The State", 21 },
	{{-1756.5834, -2017.0441, 1500.7665}, {-1756.3740, -2018.0860, 1501.4855,180.0}, 3, 2, "The State", 22 },
	{{-1756.5834, -2014.8034, 1500.7665}, {-1756.3740, -2015.9041, 1501.4855,180.0}, 3, 2, "The State", 23 },
	{{-1756.5834, -2012.4833, 1500.7665}, {-1756.3740, -2013.6636, 1501.4855,180.0}, 3, 2, "The State", 24 },
	{{-1794.6088, -2018.0068, 1500.7821}, {-1794.5467, -2019.0742, 1501.4855,180.0}, 3, 2, "The State", 25 },
	{{-1794.6088, -2015.7864, 1500.7821}, {-1794.5467, -2016.8727, 1501.4855,180.0}, 3, 2, "The State", 26 },
	{{-1794.6088, -2013.5824, 1500.7821}, {-1794.5467, -2014.6313, 1501.4855,180.0}, 3, 2, "The State", 27 },
	{{-1794.6088, -2011.3427, 1500.7821}, {-1794.5467, -2012.4513, 1501.4855,180.0}, 3, 2, "The State", 28 },
	{{-1794.6088, -2009.1033, 1500.7821}, {-1794.5467, -2010.1914, 1501.4855,180.0}, 3, 2, "The State", 29 },
	{{-1788.2007, -2012.2781, 1500.7821}, {-1788.2453, -2013.6578, 1501.4855,0.000}, 3, 2, "The State", 30 },
	{{-1788.2007, -2014.7587, 1500.7821}, {-1788.2453, -2015.9187, 1501.4855,0.000}, 3, 2, "The State", 31 },
	{{-1788.2007, -2016.9807, 1500.7821}, {-1788.2453, -2018.1586, 1501.4855,0.000}, 3, 2, "The State", 32 },

	{{-1750.7972, -2010.3264, 1500.7665}, {-1750.8989, -2009.2577, 1501.4855,0.000}, 3, 3, "The State", 33 },
	{{-1750.7972, -2012.5464, 1500.7665}, {-1750.8989, -2011.4777, 1501.4855,0.000}, 3, 3, "The State", 34 },
	{{-1750.7972, -2014.7675, 1500.7665}, {-1750.8989, -2013.7388, 1501.4855,0.000}, 3, 3, "The State", 35 },
	{{-1750.7972, -2016.9886, 1500.7665}, {-1750.8989, -2015.9203, 1501.4855,0.000}, 3, 3, "The State", 36 },
	{{-1750.7972, -2019.2717, 1500.7665}, {-1750.8989, -2018.1460, 1501.4855,0.000}, 3, 3, "The State", 37 },
	{{-1756.5834, -2017.0441, 1500.7665}, {-1756.3740, -2018.0860, 1501.4855,180.0}, 3, 3, "The State", 38 },
	{{-1756.5834, -2014.8034, 1500.7665}, {-1756.3740, -2015.9041, 1501.4855,180.0}, 3, 3, "The State", 39 },
	{{-1756.5834, -2012.4833, 1500.7665}, {-1756.3740, -2013.6636, 1501.4855,180.0}, 3, 3, "The State", 40 },
	{{-1794.6088, -2018.0068, 1500.7821}, {-1794.5467, -2019.0742, 1501.4855,180.0}, 3, 3, "The State", 41 },
	{{-1794.6088, -2015.7864, 1500.7821}, {-1794.5467, -2016.8727, 1501.4855,180.0}, 3, 3, "The State", 42 },
	{{-1794.6088, -2013.5824, 1500.7821}, {-1794.5467, -2014.6313, 1501.4855,180.0}, 3, 3, "The State", 43 },
	{{-1794.6088, -2011.3427, 1500.7821}, {-1794.5467, -2012.4513, 1501.4855,180.0}, 3, 3, "The State", 44 },
	{{-1794.6088, -2009.1033, 1500.7821}, {-1794.5467, -2010.1914, 1501.4855,180.0}, 3, 3, "The State", 45 },
	{{-1788.2007, -2012.2781, 1500.7821}, {-1788.2453, -2013.6578, 1501.4855,0.000}, 3, 3, "The State", 46 },
	{{-1788.2007, -2014.7587, 1500.7821}, {-1788.2453, -2015.9187, 1501.4855,0.000}, 3, 3, "The State", 47 },
	{{-1788.2007, -2016.9807, 1500.7821}, {-1788.2453, -2018.1586, 1501.4855,0.000}, 3, 3, "The State", 48 },

	{{-1339.6770, 19.8657, 1601.0889}, {-1338.7952, 19.7113, 1601.5659, 83.8531}, 2, 1, "The State", 49 },
	{{-1339.6770, 19.8657, 1601.0889}, {-1338.7952, 19.7113, 1601.5659, 83.8531}, 3, 2, "The State", 50 },
	{{-1339.6770, 19.8657, 1601.0889}, {-1338.7952, 19.7113, 1601.5659, 83.8531}, 3, 3, "The State", 51 },
	{{-1345.4254,19.8650,1601.0889}, {-1344.6072,19.8704,1601.5659,83.1468}, 2, 1, "The State", 52 },
	{{-1345.4254,19.8650,1601.0889}, {-1344.6072,19.8704,1601.5659,83.1468}, 3, 2, "The State", 53 },
	{{-1345.4254,19.8650,1601.0889}, {-1344.6072,19.8704,1601.5659,83.1468}, 3, 3, "The State", 54 },
	{{-1337.3591,3.5709,1601.0889}, {-1338.4857,4.4988,1601.5659,266.2759}, 2, 1, "The State", 55 },
	{{-1337.3591,3.5709,1601.0889}, {-1338.4857,4.4988,1601.5659,266.2759}, 3, 2, "The State", 56 },
	{{-1337.3591,3.5709,1601.0889}, {-1338.4857,4.4988,1601.5659,266.2759}, 3, 3, "The State", 57 },
	{{-1335.7355,19.8683,1601.0889}, {-1334.9148,19.7931,1601.5659,88.3194}, 2, 1, "The State", 58 },
	{{-1335.7355,19.8683,1601.0889}, {-1334.9148,19.7931,1601.5659,88.3194}, 3, 2, "The State", 59 },
	{{-1335.7355,19.8683,1601.0889}, {-1334.9148,19.7931,1601.5659,88.3194}, 3, 3, "The State", 60 },
	{{-1330.4944,19.8672,1601.0929}, {-1329.4827,19.7623,1601.5659,86.2056}, 2, 1, "The State", 61 },
	{{-1330.4944,19.8672,1601.0929}, {-1329.4827,19.7623,1601.5659,86.2056}, 3, 2, "The State", 62 },
	{{-1330.4944,19.8672,1601.0929}, {-1329.4827,19.7623,1601.5659,86.2056}, 3, 3, "The State", 63 },
	{{-1327.5740,4.6242,1601.0889}, {-1328.7638,4.5789,1601.5659,264.5501}, 2, 1, "The State", 64 },
	{{-1327.5740,4.6242,1601.0889}, {-1328.7638,4.5789,1601.5659,264.5501}, 3, 2, "The State", 65 },
	{{-1327.5740,4.6242,1601.0889}, {-1328.7638,4.5789,1601.5659,264.5501}, 3, 3, "The State", 66 },
	{{-1333.8420,4.5398,1601.0889}, {-1334.6543,4.5476,1601.5659,264.6297}, 2, 1, "The State", 67 },
	{{-1333.8420,4.5398,1601.0889}, {-1334.6543,4.5476,1601.5659,264.6297}, 3, 2, "The State", 68 },
	{{-1333.8420,4.5398,1601.0889}, {-1334.6543,4.5476,1601.5659,264.6297}, 3, 3, "The State", 69 }
};
new Text3D:HealText[69] = {NONE_3D_TEXT, ...};

enum lavkaInfo
{
    Float:lavkaPosX,
    Float:lavkaPosY,
    Float:lavkaPosZ,
    Float:lavkaPosXOwner,
    Float:lavkaPosYOwner,
    Float:lavkaPosZOwner,
    Text3D:lavkaLabel,
    lavkaOwnerID,
    lavkaBuy,
    lavkaArea
}
new LavkaInfo[MAX_LAVKA][lavkaInfo] =
{
    {1146.6704,-1433.7843,15.7969, 1148.7556,-1434.0309,15.7969},
    {1146.6704,-1438.4403,15.7969, 1148.7556,-1438.4071,15.7969},
    {1146.6696,-1442.8069,15.7969, 1148.7556,-1442.9894,15.7969},
    {1146.6704,-1456.3344,15.7969, 1148.7556,-1456.5496,15.7969},
    {1146.6703,-1460.5026,15.7969, 1148.7556,-1460.8811,15.7969},
    {1146.6075,-1464.7372,15.7969, 1148.7556,-1465.1311,15.7969},
    {1148.5486,-1473.7638,15.7969, 1150.5582,-1473.1851,15.7969},
    {1150.2361,-1478.3962,15.7969, 1152.2539,-1477.8400,15.7969},
    {1147.3052,-1507.4816,15.7969, 1148.8733,-1508.8607,15.7969},
    {1137.6014,-1513.7876,15.7969, 1138.2324,-1515.7781,15.7969},
    {1133.5236,-1515.2703,15.7969, 1134.3611,-1517.1835,15.7969},
    {1122.9036,-1515.4423,15.7969, 1122.3289,-1517.4551,15.7969},
    {1118.6233,-1513.9199,15.7969, 1118.0729,-1515.9391,15.7969},
    {1109.1364,-1506.7504,15.7969, 1107.2931,-1507.8097,15.7969},
    {1116.8893,-1502.3210,15.8003, 1118.9727,-1502.5111,15.8003},
    {1116.8893,-1493.4728,15.8003, 1118.9727,-1493.6068,15.8003},
    {1116.8881,-1489.2975,15.7969, 1118.9735,-1488.9879,15.7969},
    {1116.8883,-1484.5940,15.7969, 1118.9735,-1484.6185,15.7969},
    {1116.8883,-1475.2950,15.7969, 1118.9735,-1475.5645,15.7969},
    {1107.1213,-1478.1066,15.7969, 1105.2189,-1477.2336,15.7969},
    {1108.6709,-1473.7292,15.7969, 1106.7723,-1472.8470,15.7969},
    {1110.7471,-1465.2914,15.7969, 1108.5249,-1465.2080,15.7969},
    {1110.6187,-1460.8588,15.7969, 1108.5249,-1460.6704,15.7969},
    {1110.6101,-1456.4812,15.7969, 1108.5249,-1456.2189,15.7969},
    {1110.6101,-1449.4174,15.7969, 1108.5249,-1449.5651,15.7969},
    {1110.6104,-1442.6844,15.7969, 1108.5249,-1442.8457,15.7969},
    {1110.6101,-1437.5795,15.7969, 1108.5249,-1438.3497,15.7969},
    {1110.6331,-1433.9965,15.7969, 1108.5249,-1433.8062,15.7969},
    {1125.6609,-1460.9254,15.7969, 1127.7461,-1460.7992,15.7969},
    {1125.6609,-1456.2260,15.7969, 1127.7461,-1456.3513,15.7969},
    {1125.6609,-1451.7166,15.7969, 1127.7461,-1451.7596,15.7969},
    {1125.6609,-1447.2598,15.7969, 1127.7461,-1447.3499,15.7969},
    {1125.6609,-1442.8569,15.7969, 1127.7461,-1442.7814,15.7969},
    {1125.6609,-1438.2837,15.7969, 1127.7461,-1438.3190,15.7969},
    {1132.1006,-1438.2875,15.7969, 1130.0154,-1438.3826,15.7969},
    {1132.1006,-1442.8413,15.7969, 1129.9209,-1442.6797,15.7969},
    {1132.1007,-1447.3715,15.7969, 1130.0154,-1447.4327,15.7969},
    {1132.1006,-1451.6976,15.7969, 1130.0154,-1451.7686,15.7969},
    {1132.1006,-1456.2316,15.7969, 1130.0154,-1456.2648,15.7969},
    {1132.1006,-1460.9349,15.7969, 1130.0154,-1460.9425,15.7969}
};/*
const UNOCCUPIED_SYNC = 209;
IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs) 
{ 
	new unoccupiedData[PR_UnoccupiedSync]; 

	BS_IgnoreBits(bs, 8); 
	BS_ReadUnoccupiedSync(bs, unoccupiedData); 
	if(floatcmp(floatabs(unoccupiedData[PR_roll][0]), 1.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_roll][1]), 1.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_roll][2]), 1.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_direction][0]), 1.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_direction][1]), 1.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_direction][2]), 1.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_position][0]), 20000.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_position][1]), 20000.00000) == 1 
		|| floatcmp(floatabs(unoccupiedData[PR_position][2]), 20000.00000) == 1 
	) { 
		return false; 
	} 
	
	return true; 
}
const ID_PLAYER_SYNC = 116;
IPacket:ID_PLAYER_SYNC(playerid, BitStream:bs) 
{ 
	new lrkeys, udkeys, sampkeys,
	Float:pos[3], Float:quaternion[4],
	health, armor, weaponid, specialaction,
	Float:speed[3], Float:surfingoffsets[3],
	surfingvehid, animationid, animflags;

	BS_IgnoreBits(bs, 8); // packet id
	BS_ReadValue(bs, PR_UINT16, lrkeys,
	PR_UINT16, udkeys,
	PR_UINT16, sampkeys,
	PR_FLOAT, pos[0],
	PR_FLOAT, pos[1],
	PR_FLOAT, pos[2],
	PR_FLOAT, quaternion[0],
	PR_FLOAT, quaternion[1],
	PR_FLOAT, quaternion[2],
	PR_FLOAT, quaternion[3],
	PR_UINT8, health,
	PR_UINT8, armor,
	PR_UINT8, weaponid,
	PR_UINT8, specialaction,
	PR_FLOAT, speed[0],
	PR_FLOAT, speed[1],
	PR_FLOAT, speed[2],
	PR_FLOAT, surfingoffsets[0],
	PR_FLOAT, surfingoffsets[1],
	PR_FLOAT, surfingoffsets[2],
	PR_UINT16, surfingvehid,
	PR_UINT16, animationid,
	PR_UINT16, animflags);

	if(!Osnovat(PN(playerid)))
	{	
		switch(weaponid)
		{
			case 16,38,35,36,39,40: weaponid = 0;
		}
	}

	BS_Reset(bs);
	BS_WriteValue(bs, PR_UINT8, ID_PLAYER_SYNC,
	PR_UINT16, lrkeys,
	PR_UINT16, udkeys,
	PR_UINT16, sampkeys,
	PR_FLOAT, pos[0],
	PR_FLOAT, pos[1],
	PR_FLOAT, pos[2],
	PR_FLOAT, quaternion[0],
	PR_FLOAT, quaternion[1],
	PR_FLOAT, quaternion[2],
	PR_FLOAT, quaternion[3],
	PR_UINT8, health,
	PR_UINT8, armor,
	PR_UINT8, weaponid,
	PR_UINT8, specialaction,
	PR_FLOAT, speed[0],
	PR_FLOAT, speed[1],
	PR_FLOAT, speed[2],
	PR_FLOAT, surfingoffsets[0],
	PR_FLOAT, surfingoffsets[1],
	PR_FLOAT, surfingoffsets[2],
	PR_UINT16, surfingvehid,
	PR_UINT16, animationid,
	PR_UINT16, animflags);
	return true; 
}

new ID_UNOCCUPIED_SYNC = 110;
IPacket:ID_UNOCCUPIED_SYNC(playerid, BitStream:bs)
{
	new data[PR_UnoccupiedSync];
	BS_IgnoreBits(bs, 8);
	BS_ReadUnoccupiedSync(bs, data);

	if ( data[PR_position][0] != veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_pos ] [ 0 ] && data[PR_position][0] != veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_now_pos ] [ 0 ] ||
	data[PR_position][1] != veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_pos ] [ 1 ] && data[PR_position][1] != veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_now_pos ] [ 1 ] ||
	data[PR_position][2] != veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_pos ] [ 2 ] && data[PR_position][2] != veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_now_pos ] [ 2 ] )
	{
		if( admin_detected_1 == 1 ) if ( ! veh_info [ data [ RAKNET_VEHICLE ] - 1 ] [ v_time ] ) return false ;
	}

	if ( data [ PR_seatId ] == 1 || data [ PR_seatId ] == 255 )
	{
		if(GetPlayerVehicleID(playerid) != data [ RAKNET_VEHICLE ])
		{
			anti_cheat(playerid, "car flood (kick)", 599);
		}
	}
	return true;
}
*/

const MAX_LINEN_OBJECT = 11;
enum linenInfo
{
    bool: linenStatus,
    Float:linenPosX,
    Float:linenPosY,
    Float:linenPosZ,
    linenObject,
    Text3D: linenLabel,
    linenScore,
    linenSecund
}
new LinenInfo[MAX_LINEN_OBJECT][linenInfo] =
{
    {true, -264.8821, -1393.6427, 11.4850},
    {true, -288.1983, -1396.1859, 12.2953},
    {true, -310.4437, -1416.4810, 15.0943},
    {true, -290.1641, -1416.4885, 13.1366},
    {true, -265.3173, -1415.6331, 10.4779},
    {true, -239.7378, -1413.1207, 8.4944},
    {true, -214.3640, -1411.2096, 6.3158},
    {true, -189.4012, -1408.9705, 4.3835},
    {true, -189.3507, -1388.5031, 5.8134},
    {true, -213.2893, -1389.5488, 7.4410},
    {true, -240.2519, -1391.7345, 10.5762}
};
const MAX_COTTON_OBJECT = 15;
enum cottonInfo
{
    bool:cottonStatus,
    Float:cottonPosX,
    Float:cottonPosY,
    Float:cottonPosZ,
    cottonObject,
    Text3D:cottonLabel,
    cottonScore,
    cottonSecund
}
new CottonInfo[MAX_COTTON_OBJECT][cottonInfo] =
{
    {true, -225.0934, -1538.5936, 7.4748},
    {true, -244.9032, -1538.2950, 6.3041},
    {true, -266.6799, -1538.8119, 4.8946},
    {true, -290.5024, -1538.9031, 8.4306},
    {true, -313.8723, -1539.2168, 12.9345},
    {true, -315.5166, -1515.1859, 12.9114},
    {true, -292.6646, -1514.9556, 8.9786},
    {true, -268.7896, -1514.8757, 5.9850},
    {true, -247.3963, -1514.4823, 7.5544},
    {true, -226.8527, -1515.3866, 7.9063},
    {true, -225.5202, -1489.0884, 8.2394},
    {true, -246.1186, -1488.9327, 6.9872},
    {true, -268.2265, -1490.1191, 5.8928},
    {true, -291.3911, -1489.0592, 8.3316},
    {true, -315.4521, -1489.0024, 12.6806}
};
enum EggsInfo
{
    Float:ePos_X,
	Float:ePos_Y,
	Float:ePos_Z,
	eVWorld,
	eCreate
};
new EggsTimer;
new Eggs[MAX_EGGS][EggsInfo] =
{
	{-2275.7200,87.0314,35.1641, 1, -1},
	{-2295.3132,107.4114,35.3125, 1, -1},
	{-2267.4077,117.4337,35.1718, 1, -1},
	{-2269.8113,47.6080,35.1641, 1, -1},
	{-2286.6294,56.6063,35.3125, 1, -1},
	{-2319.9539,48.5028,35.1641, 1, -1},
	{-2348.1899,76.4638,35.3125, 1, -1},
	{-2393.0188,66.4582,35.2920, 1, -1},
	{-2422.9236,85.2413,35.0234, 1, -1},
	{-2401.7488,121.9103,35.2546, 1, -1},
	{-2404.8376,176.9519,35.2152, 1, -1},
	{-2360.1316,192.3997,35.3125, 1, -1},
	{-2338.8518,237.9753,35.3168, 1, -1},
	{-2310.9033,223.2881,36.7057, 1, -1},
	{-2285.3687,266.9162,35.3203, 1, -1},
	{-2319.6628,249.2534,35.3203, 1, -1},
	{-2304.3103,133.7990,35.3125, 1, -1},
	{-2324.4160,166.4205,35.3125, 1, -1},
	{-2352.1743,198.1319,35.3125, 1, -1},
	{-2329.1748,113.6600,35.3125, 1, -1}
};
const MAX_MINE_OBJECT = 35;
enum mineInfo
{
    bool:mineStatus,
    Float:minePosX,
    Float:minePosY,
    Float:minePosZ,
    mineObject,
    Text3D:mineLabel,
    mineTimer,
    minePoroda
}
new MineInfo[MAX_MINE_OBJECT][mineInfo] =
{
    {true, 619.2419, 941.3776, -37.2434},
    {true, 661.9933, 936.9175, -37.8092},
    {true, 629.8119, 947.0472, -35.2863},
    {true, 632.1992, 953.4025, -34.3900},
    {true, 644.1904, 955.9868, -34.1643},
    {true, 646.9728, 941.4316, -35.6497},
    {true, 584.6645, 949.8398, -30.6175},
    {true, 563.0754, 944.5233, -29.5798},
    {true, 497.0916, 917.7969, -29.9888},
    {true, 508.1040, 924.3862, -28.4721},
    {true, 508.4806, 938.4163, -27.7112},
    {true, 518.5377, 944.4051, -25.3424},
    {true, 528.7015, 958.9933, -22.2651},
    {true, 532.1467, 969.0619, -21.7194},
    {true, 518.7510, 969.2048, -23.7236},
    {true, 488.4578, 896.8007, -30.5957},
    {true, 470.8828, 871.3386, -28.9356},
    {true, 496.9825, 850.9363, -29.4746},
    {true, 510.7053, 835.5143, -26.7997},
    {true, 514.9717, 822.7236, -24.7397},
    {true, 518.4806, 809.1451, -23.2232},
    {true, 506.6518, 805.2540, -21.9453},
    {true, 500.1867, 792.5642, -21.6318},
    {true, 517.2272, 790.6378, -21.3920},
    {true, 565.3442, 770.0980, -16.5111},
    {true, 582.7704, 791.1359, -29.9858},
    {true, 692.9124, 799.8726, -30.2292},
    {true, 716.2703, 816.9769, -30.2541},
    {true, 713.0031, 833.7784, -30.2268},
    {true, 719.2053, 847.8356, -29.9590},
    {true, 686.4009, 788.7589, -29.9033},
    {true, 561.9888, 800.1697, -28.0481},
    {true, 615.9201, 777.2510, -31.8031},
    {true, 648.7132, 777.1953, -29.9342},
    {true, 663.9606, 788.6589, -29.9526}
};
enum autoBazar
{
    Float:autoBazarPosX,
    Float:autoBazarPosY,
    Float:autoBazarPosZ,
    Float:autoBazarZAngle,
    autoBazarType,
    Float:autoBazar2PosX,
    Float:autoBazar2PosY,
    Float:autoBazar2PosZ,
    Text3D:autoBazarLabel,
    Text3D:autoBazarLabel2,
	autoBazarObject[4],
	autoBazarArea,
	autoBazarCost,
	autoBazarCarID,
	autoBazarCarID_Ownable,
	autoBazarplayerid
}
new autoBazarInfo[MAX_AUTO_BAZAR][autoBazar] =
{
    {-2133.7847,-757.5536,32.0234,90.0,1},
    {-2133.2046,-760.4934,32.0234,90.0,1},
    {-2133.4939,-763.5651,32.0234,90.0,1},
    {-2133.6294,-766.5255,32.0234,90.0,1},
    {-2133.7976,-769.6598,32.0234,90.0,1},
    {-2133.4438,-772.4928,32.0234,90.0,1},
    {-2133.3384,-775.6821,32.0234,90.0,1},
    {-2133.0896,-778.6199,32.0234,90.0,1},
    {-2133.5383,-781.6777,32.0234,90.0,1},
    {-2133.5181,-784.6282,32.0234,90.0,1},
    {-2133.0618,-787.7657,32.0234,90.0,1},
    {-2133.6675,-790.4675,32.0234,90.0,1},
    {-2134.1685,-793.5968,32.0234,90.0,1},
    {-2134.0239,-796.6945,32.0234,90.0,1},
    {-2133.9241,-799.5476,32.0234,90.0,1},
    {-2133.3132,-802.7231,32.0234,90.0,1},
    {-2149.8672,-757.6962,32.0234,270.0,1},
    {-2149.7026,-760.7056,32.0234,270.0,1},
    {-2150.0671,-763.4629,32.0234,270.0,1},
    {-2150.1787,-766.7797,32.0234,270.0,1},
    {-2149.8430,-769.5658,32.0234,270.0,1},
    {-2149.7102,-772.5457,32.0234,270.0,1},
    {-2150.1123,-775.5920,32.0234,270.0,1},
    {-2150.0867,-778.6870,32.0234,270.0,1},
    {-2149.9207,-781.6351,32.0234,270.0,1},
    {-2150.4460,-784.5776,32.0234,270.0,1},
    {-2150.0620,-787.5490,32.0234,270.0,1},
    {-2149.3301,-790.8079,32.0234,270.0,1},
    {-2149.0452,-793.5135,32.0234,270.0,1},
    {-2149.4521,-796.5894,32.0234,270.0,1},
    {-2149.1191,-799.6165,32.0234,270.0,1},
    {-2148.6055,-802.5846,32.0234,270.0,1},
    {-2148.5591,-805.8231,32.0234,270.0,1},
    {-2148.9773,-808.6389,32.0234,270.0,1},
    {-2148.9690,-811.6345,32.0234,270.0,1},
    {-2148.9536,-814.8036,32.0234,270.0,1},
    {-2149.1687,-818.1646,32.0234,270.0,1},
    {-2148.6953,-821.4638,32.0234,270.0,1},
    {-2148.1729,-824.8022,32.0234,270.0,1},
    {-2148.3762,-828.0490,32.0234,270.0,1},
    {-2148.8687,-831.1489,32.0234,270.0,1},
    {-2148.8994,-834.4568,32.0234,270.0,1},
    {-2148.9795,-837.8000,32.0234,270.0,1},
    {-2149.3828,-841.1108,32.0234,270.0,1},
    {-2148.8235,-844.0851,32.0234,270.0,1},
    {-2148.8108,-847.5101,32.0234,270.0,1},
    {-2148.9412,-850.5940,32.0234,270.0,1},
    {-2149.1848,-853.8034,32.0234,270.0,1},
    {-2133.0254,-815.0574,31.5958,90.0,1},
    {-2132.6958,-818.0237,31.5993,90.0,1},
    {-2132.7507,-821.6968,31.5902,90.0,1},
    {-2132.5005,-825.0496,31.5951,90.0,1},
    {-2133.5005,-827.8699,31.5961,90.0,1},
    {-2133.2410,-831.3567,31.5764,90.0,1},
    {-2132.7981,-834.1809,31.5931,90.0,1},
    {-2132.7905,-837.5715,31.5955,90.0,1},
    {-2132.9663,-840.7917,31.5957,90.0,1},
    {-2134.0847,-843.8647,31.5991,90.0,1},
    {-2133.9458,-847.4242,31.5995,90.0,1},
    {-2133.8171,-850.4931,31.5986,90.0,1},
    {-2133.8945,-853.6144,31.5965,90.0,1},
    {-2125.8113,-815.0848,31.5946,270.0,1},
    {-2125.0237,-817.9536,31.5991,270.0,1},
    {-2124.2620,-821.3064,31.5990,270.0,1},
    {-2124.3130,-824.7056,31.5983,270.0,1},
    {-2124.7581,-827.9227,31.5993,270.0,1},
    {-2124.6248,-831.1382,31.5978,270.0,1},
    {-2123.8840,-834.4582,31.5867,270.0,1},
    {-2125.5986,-837.7907,31.5971,270.0,1},
    {-2124.4814,-840.9609,31.5986,270.0,1},
    {-2123.9492,-844.0683,31.5961,270.0,1},
    {-2124.2764,-847.1362,31.5978,270.0,1},
    {-2124.5750,-850.5481,31.5980,270.0,1},
    {-2124.9832,-853.7025,31.5993,270.0,1},
    {-2125.5747,-757.4848,31.5940,270.0,1},
    {-2125.6846,-760.1937,31.5950,270.0,1},
    {-2124.6802,-763.2191,31.5962,270.0,1},
    {-2124.7546,-766.5494,31.5977,270.0,1},
    {-2125.0969,-769.7847,31.5962,270.0,1},
    {-2124.9866,-772.8482,31.5991,270.0,1},
    {-2124.4126,-775.4781,31.5949,270.0,1},
    {-2124.3528,-778.7167,31.5971,270.0,1},
    {-2124.7014,-781.6792,31.5983,270.0,1},
    {-2125.0100,-784.6066,31.5977,270.0,1},
    {-2124.3083,-787.3878,31.5947,270.0,1},
    {-2124.5654,-790.5499,31.5930,270.0,1},
    {-2125.3350,-793.4932,31.5978,270.0,1},
    {-2124.6309,-796.6444,31.5975,270.0,1},
    {-2124.8667,-799.8256,31.5988,270.0,1},
    {-2124.6003,-802.5762,31.5983,270.0,1},
    {-2141.0378,-956.4103,31.6296,90.0,2},
    {-2141.0786,-936.3013,31.6199,90.0,2},
    {-2141.6599,-916.4990,31.6182,90.0,2},
    {-2141.4026,-896.4485,31.6288,90.0,2},
    {-2140.7351,-876.3362,31.6300,90.0,2}
};

enum pInfo
{
	pID,
	pOldRepl,
	pAllRepl,
	pBeg[5],
	pLevel,
	pMoney,
	pExp,
	pWanted,
	pChestTime,
	pVIP,
	pLeader,
	pMember,
	pAdmin,
	pGunLic,
	pBoatLic,
	pFishLic,
	pFlyLic,
	pCarLic,
	pBikeLic,
	pHuntLic,
	pVirMoney,
	pDonateMoney,
	pWarns,
	pHouseSpawn,
	pHouseTemp,
	pHouseKey[MAX_PLAYER_HOUSE],
	pSkillLevel,
	pFWarns,
	pDemorgan,
	pRank,
	pContractTime,
	pCars,
	pSex,
	pRace,
	pBank,
	pSkin,
	pOldSkin,
	pTelNum,
	pAPromo,
	pJob,
	pMuteTime,
	pFMuteTime,
	pHeal,
	pHealTime,
	pJailTime,
	pTimeTP,
	pBailPrice,
	pKungfu,
	pKneehead,
	pElbow,
	pBoxing,
	pMaskON,
	pDCTime,
	pPistol_Skill,
	pSDPistol_Skill,
	pEagle_Skill,
	pShotGun_Skill,
	pUZI_Skill,
	pMP5_Skill,
	pAK47_Skill,
	pM4_Skill,
	pSniper_Skill,
	pObmen,
	pBankPass,
	pBL,
	pZKP,
	Float:pHealth,
	Float:pArmour,
	Float:pShield,
	pPack,
	pPrison,
	pHospCity,
	pFeFinder,
	pCredit,
	pBlackout,
	pBomb,
 	pHungryShow,
	pAdmAction,
	pDepChat,
	pTelWork,
	pNewsChat,
	pTelBalance,
	pRacia,
	pRabRacia,
	pKillShow,
	pVipChat,
	pFamilyChat,
	pAmmos[13],
	pGuns[13],
	pShowName,
	plveh,
	pMerrit[MAX_PLAYER_NAME],
 	pSendName[MAX_PLAYER_NAME],
 	pCalling,
 	pONPhoneTalk,
 	pbydilnik,
	pKlogin,
	Float:Admin_X,
	Float:Admin_Y,
	Float:Admin_Z,
	pLastGun,
	pLastAmmo,
	pTimeToLastWarn,
	preOrg,
	preOrgg,
	pObjikt,
	pHSpectr,
	pScutes,
	pMScutes,
	pVID,
	pType,
	pHospital,
	pSecond,
	pMore,
	pPlanshet,
	pShowCase,
	pDamageInfo,
	pVipTime,
	pBuildType,
	pZall,
	pPlayedTime,
	//pPlayerAllTime,
	pTir,
	pTirUp,
	pFamilyMute,
	pFamilyMember,
	pFamilyMemberID,
	pFamily,
	pNameFamily,
	pNameFamily2[15],
	pPcix,
	pDeposit,
	pDepositChar,
	pDepositChar2,
	pLastIP[16],
	pEventTime,
	pReputation,
	pShowDokument,
	pCarSkill,
	pCarSkillNo,
	pAWarns,
	pDataReg[12],
	pRespawnChat,
	pReferalReturn,
	pInvLang,
	pInvItem[MAX_SLOT_INV],
	pInvItemAmount[MAX_SLOT_INV],
	pInvItemColor[MAX_SLOT_INV],
	pInvItemEnchant[MAX_SLOT_INV],
	pInvItemMining[MAX_SLOT_INV],
	pInvItemLock[MAX_SLOT_INV],
	pInvItemAcs[8],
	pInvItemAcsColor[8],
	pInvItemAcsEnchant[8],
	pAcsCellLock[8],
	pModCellLock[8],
	pTradeInvID[10],
	pTradeItem[10],
	pTradeItemAmount[10],
	pTradeItemColor[10],
	pTradeItemEnchant[10],
	pTradeItemMining[10],
	pInvColor,
	pInvCell,
	pBuyItem[30],
	pModSlot,
	Float:pInvPos_X,
	Float:pInvPos_Y,
	Float:pInvSize_X,
	Float:pInvSize_Y,
	pGoogle,
	pGoogleKey[17],
	pAPass[17],
	pAccessCMD[sizeof(aAccessCMD)],
	pGameRate,
	pInvBlack,
	pBankCard,
	pMoreHouses,
	Float:pPos_X,
	Float:pPos_Y,
	Float:pPos_Z,
	Float:pPos_A,
	pPrefix[64],
	pDescription[81],
	pRCTime,
	pVideoCartID,
	pMiningBuyTime,
	pCustomArizona[9],
	pDmZoneKill,
	pDmZoneDeath,
	pLarec
}
new PI[MAX_PLAYERS][pInfo];
enum tpInfo
{
	tpName[50],
	Float:tpEnterPos_X,
	Float:tpEnterPos_Y,
	Float:tpEnterPos_Z,
	tpEnterWorld,
	tpEnterInt,
	Float:tpExitPos_X,
	Float:tpExitPos_Y,
	Float:tpExitPos_Z,
	Float:tpExitPos_A,
	tpExitInt,
	tpExitWorld
}
new TeleportInfo[87][tpInfo] =
{
    {"Мэрия",1495.1898,-1279.9283,14.5749, 0, 0, 1536.9352,1049.4387,1033.8420,1.6982, 2, 2},
	{"Выход на улицу",1536.8024,1045.9612,1033.8420, 2, 2, 1495.1967,-1283.5261,14.5414,184.2417, 0, 0},
	//
	{"FBI",-2456.1079,503.9311,30.0781, 0, 0, -2525.3167,-634.8485,1327.9960,1.3493, 2, 0},
	{"Выход на улицу",-2525.1655,-637.4876,1327.9960, 0, 2, -2454.1189,503.8209,30.0792,273.8015, 0, 0},
	//
	{"Полицейский участок LS",1554.866943, -1675.680297, 16.195312, 0, 0, -959.0286,-2358.1538,1701.0859,268.0805, 2, 2},
	{"Выход на улицу",-960.8102,-2358.1533,1701.0859, 2, 2, 1552.464599,-1675.447143,16.195312, 90.0, 0, 0},
	{"Полицейский участок LS",1568.5947,-1689.9709,6.2188, 0, 0, -927.4053,-2356.8748,1701.0859,87.5521, 2, 2},
	{"Выход в гараж",-925.3655,-2357.3103,1701.0859, 2, 2, 1568.4929,-1692.5367,5.8906,179.4458, 0, 0},
	//
	{"Полицейский участок RC",627.3923,-571.7623,17.9145, 0, 0, 2372.11, 81.18, 1502.01,90.00, 6, 11},
	{"Выход на улицу",2374.48, 81.06, 1502.01, 11, 6, 630.7498,-571.5781,16.3359,268.5526, 0, 0},
	//
	{"Тюрьма Сан Фиерро",-1606.3378,672.0713,-4.9063, 0, 0, 325.8035,94.0766,1001.0410,268.4566, 6, 13},
	{"Выход на улицу",323.9006,94.2639,1001.0410, 13, 6, -1606.3887,675.7780,-5.2422,359.2028, 0, 0},
    {"Полицейский участок SF",-1605.5493,710.2738,13.8672, 0, 0, 2372.11, 81.18, 1502.01,90.00, 10, 0},
	{"Выход на улицу",2374.48, 81.06, 1502.01, 0, 10 ,-1606.1509,713.7501,13.2903,359.7803, 0, 0},
	{"Полицейский участок SF",-1594.2084,716.2449,-4.9063, 0, 0, 2366.17, 98.29, 1501.99,90.00, 10, 0},
	{"Выход в гараж",2367.95, 98.26, 1501.99, 0, 10, -1592.1372,715.8721,-5.2422,268.9620, 0, 0},
	//
	{"Полицейский участок LV",2287.0254,2432.3618,10.8203, 0, 0, 2372.11, 81.18, 1502.01,90.00, 6, 12},
	{"Выход на улицу",2374.48, 81.06, 1502.01, 12, 6, 2287.0684,2428.8718,10.8203,179.2759, 0, 0},
	{"Полицейский участок LV",2297.1162,2451.5430,10.8203, 0, 0, 2366.17, 98.29, 1501.99,90.00, 6, 12},
	{"Выход в гараж",2367.95, 98.26, 1501.99, 12, 6, 2293.2761,2451.4275,10.8203,87.4205, 0, 0},
	{"Вход на крышу",2297.1160,2468.7705,10.8203, 0, 0, 2290.2505,2460.7644,38.6875,284.8691, 0, 0},
	{"Выход в гараж",2287.9663,2458.1406,38.6875, 0, 0, 2294.0698,2468.4187,10.8203,88.4307, 0, 0},
	//
    {"Церковь", 2491.4995,918.3869,11.0234,0,0,2351.4946,-1958.6272,1601.0859,269.7597,0,0},
	{"Лас Вентурас", 2349.7522,-1958.6034,1601.0859,0,0,2489.3921,918.2584,11.0234,93.7449,0,0},
	{"Банковское отделение города Las Venturas",2375.5674,2306.3022,8.1406, 0, 0, 487.3989,1307.4255,774.4839,0.6282, 1, 2},
	{"Выход на улицу",487.5179,1304.6077,774.4839,2,1, 2375.3784,2310.3059,8.1406,0.8172, 0, 0},
	//
	{"Sport Club LS",2229.631835, -1721.709350, 13.565642, 0, 0, 773.9093,-76.9094,1000.6545,2.5748, 7, 0},
	{"Los Santos",773.8964,-78.8464,1000.6628, 0, 7, 2228.418701,-1722.766357,13.554397, 137.274353, 0, 0},
    {"Sport Club LV",2092.6499,2493.1968,14.8390, 0, 0, 773.9093,-76.9094,1000.6545,2.5748, 7, 1},
	{"Las Venturas",773.8964,-78.8464,1000.6628, 1, 7, 2095.5288,2493.2524,14.8390,267.9022, 0, 0},
	//
    {"Завод",-86.3057, -299.6985, 2.7646, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 10},
	{"Лос Сантос",2577.3730,-1289.8970,1044.1250, 10, 2, -86.3985, -301.6363, 2.7646, 170.0, 0, 0},
	{"Завод Армия LS",2731.6279,-2417.5535,13.6280, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 11},
	{"Выход",2577.3730,-1289.8970,1044.1250, 11, 2, 2731.6812,-2416.2803,13.6277,0.7204, 0, 0},
    {"Завод Армия LV",237.8633,1872.3997,11.4609, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 12},
	{"Выход",2577.3730,-1289.8970,1044.1250, 12, 2, 233.9474,1872.2189,11.4609,90.4364, 0, 0},
	{"Завод Армия SF",-1510.6035,459.8911,7.1875, 0, 0, 2575.9531,-1289.5161,1044.1250,87.2380, 2, 13},
	{"Выход",2577.3730,-1289.8970,1044.1250, 13, 2, -1510.6216,462.8984,7.1875,357.1089, 0, 0},
    //
	{"Автошкола",-2038.5787, -86.3088, 35.4019, 0, 0, -2573.77, -1376.21, 1500.76, 90.0, 3, 5},
	{"San-Fierro",-2572.15, -1376.23, 1500.76, 5, 3, -2040.3466, -85.1591, 35.4019,50.00, 0, 0},
	{"Парковка",-2592.11, -1373.03, 1500.76, 5, 3, -2044.7375, -119.6919, 35.3930,90.0, 0, 0},
	{"Автошкола",-2043.2159, -119.6945, 35.3930, 0, 0, -2589.92, -1373.02, 1500.76, 270.0, 3, 5},
    {"АвиаШкола",2427.6968,1662.9028,10.8203, 0, 0, -2027.7902,-105.3816,1035.1719,90.0, 3, 1},
	{"Las Venturas",-2026.8085,-103.6107,1035.1798, 1, 3, 2423.1008,1662.2064,10.8203,89.7324, 0, 0},
    //
    {"Radio студия LS",1653.9441,-1654.7587,22.5156, 0, 0, -192.45, 1341.93, 1500.98,180.00, 18, 1},
	{"Los Santos",-192.55, 1345.09, 1500.98, 1, 18, 1653.5554,-1658.9841,22.5156,181.2989, 0, 0},
    {"Radio студия SF",-1941.0482,456.0038,35.1719, 0, 0, -192.45, 1341.93, 1500.98,180.00, 18, 3},
	{"San Fierro",-192.55, 1345.09, 1500.98, 3, 18, -1941.4008,459.7771,35.1719,1.2511, 0, 0},
	{"Radio студия LV",2637.8018,1185.2871,10.8203, 0, 0, -192.45, 1341.93, 1500.98,180.00, 18, 2},
	{"Las-Venturas",-192.55, 1345.09, 1500.98, 2, 18, 2637.8726,1182.4669,10.8203,179.5183, 0, 0},
    //
	{"La Cosa Nostra",1456.1313,2773.3252,10.8203, 0, 0, -1126.26, 1884.15, 1502.01,0.00, 5, 1},
	{"Las Venturas",-1125.94, 1881.66, 1502.01, 1, 5, 1460.8861,2773.1716,10.8203,269.9729, 0, 0},
	{"Yakuza",-2463.4805,131.7678,35.1719, 0, 0, -1418.83, 2098.87, 1502.02,180.0, 5, 0},
	{"San Fierro",-1418.83, 2100.82, 1502.02, 0, 5, -2460.8835,134.6681,35.1719,318.6300, 0, 0},
	{"Русская Мафия",937.0781,1731.0668,8.8516, 0, 0, -1423.74, 1723.25, 1502.00,270.0, 3, 0},
	{"Las Venturas",-1426.71, 1723.33, 1502.00, 0, 3, 940.1907,1731.1997,8.8516,271.1088, 0, 0},
    {"Warlock MC", -2191.5746, -2348.6829, 30.6186, 0, 0, 800.2677, 2518.0256, 1501.9982, 90.0, 3, 1},
	{"Выход на улицу", 801.6673, 2517.9797, 1501.9982, 1, 3, -2189.8608,-2350.1213,30.6250,230.0000, 0, 0},
    //
    {"Varrios Los Aztecas",2524.1243,-1998.7643,13.7826, 0, 0, -719.47, 2235.79, 1500.97,0.000, 7, 4},
	{"Выход на улицу",-719.51, 2233.60, 1500.97, 4, 7, 2521.5767,-2001.4885,13.5469,137.3131, 0, 0},
	{"Los Santos Vagos",2795.966552, -1619.309692, 10.921875, 0, 0, -404.95, 2416.19, 1500.97,90.0, 7, 2},
	{"Выход на улицу",-402.28, 2416.12, 1500.97, 2, 7, 2793.590820,-1618.637817,10.921875, 79.540718, 0, 0},
	{"Grove Street",2495.311035, -1690.930175, 14.765625, 0, 0, -560.5607, 2414.4805, 1500.9701,90.000, 7, 1},
	{"Выход на улицу",-558.6435, 2414.4875, 1500.9701, 1, 7, 2495.2034,-1689.1195,14.2319, 0.9635, 0, 0},
	{"The Rifa",2185.7822, -1815.2261, 13.5469, 0, 0, -561.1273, 2259.4351, 1500.9692,180.00, 7, 5},
	{"Выход на улицу",-561.1097, 2261.1970, 1500.9692, 5, 7, 2185.8145,-1810.8423, 13.5469, 1.5911, 0, 0},
	{"East Side Ballas",2000.0466,-1114.0533,27.1250, 0, 0, -725.4955, 2402.1990, 1500.9508,0.00, 7, 3},
	{"Выход на улицу",-725.4694, 2400.6169, 1500.9508, 3, 7, 2000.2607,-1115.9844,27.0374,179.5801, 0, 0},
    {"Night Wolfs",2473.1143,-1424.5762,29.0816, 0, 0, -579.2181,127.4654,1501.0900,90.4372, 7, 7},
 	{"Выход на улицу",-577.2973,126.9751,1501.0859, 7, 7, 2473.1699,-1422.2638,28.8397,357.6896, 0, 0},
    //
  	{"Наркопритон",2166.124267, -1671.345947, 15.073492, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 1},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 1, 5, 2167.414550,-1672.636352,15.080650, 223.037063, 0, 0},
	{"Наркопритон",1814.4722,-1995.8588,13.5544, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 2},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 2, 5, 1811.2611,-1996.1890,13.5513,87.3189, 0, 0},
	{"Наркопритон",2286.6912,-2012.8440,13.5447, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 3},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 3, 5, 2285.3196,-2015.5061,13.5434,131.0462, 0, 0},
	{"Наркопритон",2333.4478,-1922.6251,12.2991, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 4},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 4, 5, 2333.2817,-1919.0001,12.9586,359.0316, 0, 0},
	{"Наркопритон",2175.9934,-1503.9364,23.9520, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 5},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 5, 5, 2176.1218,-1501.6234,23.9621,1.0594, 0, 0},
    //
	{"ЖК Аксиома", 1803.1802, 410.1853, 20.2294, 0, 0, 2788.6782, 738.2451, 1500.1187, 138.3252, 23, 1},
	{"Выход", 2790.6880, 739.5242, 1500.1187, 1, 23, 1802.9182, 407.6309, 20.2294, 175.2988, 0, 0},
	{"Психиатрическая больница", -2156.5039, 645.3629, 52.3672, 0, 0, -809.3956, 2800.9446, 1501.9896, 358.2348, 6, 6},
	{"Крыша", 1499.9198, -1334.7799, 14.0258, 0, 0, 1489.1989,-1327.4569,23.6172,295.4271, 0, 0},
	{"Выход", 1486.5768, -1328.6232, 23.6172, 0, 0, 1502.0079,-1334.2809,14.0059,285.6668, 0, 0},
	{"Банковское отделение города San Fierro", -1703.9647,785.6906,25.7360, 0, 0, 957.6198,2460.6807,1601.9771,133.3242, 1, 2},
	{"Выход", 959.4328,2462.5598,1601.9771, 2, 1, -1705.4897,788.4920,24.8906,12.0529, 0, 0}
};
new TeleportPickup[sizeof(TeleportInfo)] = {-1, ...};
new TirObj[8];
enum tirInfo
{
	Float:tirPosX,
	Float:tirPosY,
	Float:tirPosZ,
	Float:ftirPosX,
	Float:ftirPosY,
	Float:ftirPosZ
}
new Tir[][tirInfo] =
{
	{289.20,-24.89,1001.5,  289.10000610,-7.7,1000.5},
	{290.79,-24.89,1001.5,  290.60000610,-7.7,1000.5},
	{292.20,-24.89,1001.5,  292.10000610,-7.7,1000.5},
	{293.70,-24.89,1001.5,  293.60000610,-7.7,1000.5},
	{295.29,-24.89,1001.5,  295.10000610,-7.7,1000.5},
	{296.79,-24.89,1001.5,  296.60000610,-7.7,1000.5},
	{298.29,-24.89,1001.5,  298.10000610,-7.7,1000.5},
	{299.79,-24.89,1001.5,  299.60000610,-7.7,1000.5}
};

new HouseRooms[33] = { 0, 1, 1, 4, 1, 5, 2, 4, 1, 1, 2, 1, 2, 4 , 2, 3, 3, 5, 2, 2, 1, 2, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5};
new Float:GHSPos[33][3] =
{
	{0.000000, 0.000000, 0.000000},
	{244.182006, 304.898986, 999.148010},
	{267.100006, 305.000000, 999.148010},
	{235.257995, 1187.099975, 1080.260009},
	{300.210998, 312.851013, 999.148010},
	{226.897003, 1114.280029, 1081.000000},
	{744.351989, 1436.760009, 1102.699951},
	{225.671997, 1022.030029, 1084.020019},
	{-42.601600, 1405.920043, 1084.430053},
	{260.757995, 1237.770019, 1084.260009},
	{23.968000, 1340.520019, 1084.380004},
	{446.709991, 506.898010, 1001.419982},
	{386.919006, 1471.699951, 1080.189941},
	{82.98, 1323.15, 1083.13},
	{-68.6603,1351.2046,1080.2109},
	{226.4221,1239.9434,1082.1406},
	{328.0897,1477.6736,1084.4375},
	{446.9292,1397.0680,1084.3047},
	{318.6248,1114.7825,1083.8828},
	{2365.2981,-1135.3936,1050.8750},
	{2308.7720,-1212.9192,1049.0234},
	{2237.4131,-1081.6366,1049.0234},
	{2196.5149,-1204.5540,1049.0234},
	{2270.0549,-1210.6090,1047.5625},
	{-2169.9524, -2135.4763, 1501.1027},
	{-674.9777, -2166.6406, 1501.1388},
	{-407.3475, -2086.0859, 1501.0980},
	{-1036.5283, -2205.2937, 1501.0880},
	{2195.2798, -738.4201, 1502.0010},
	{2180.9004, -567.7491, 1502.0034},
	{2206.6814, -402.8716, 1502.0066},
	{2408.1118, -434.1063, 1502.0000},
	{-1838.9, 1227.97, 1502.01}
};
enum nozoneinfo
{
	Float:zEnter_x,
	Float:zEnter_y,
	Float:zEnter_z,
	zDistance,
	zArea
};
new nzone[MAX_ZONE][nozoneinfo] =
{
	{280.1964,   840.0210,    18.1845, 	  150},
	{1421.4620,  -1735.1715,  13.0778,    100},
	{1172.8483,  -1393.1085,  13.0592,    100},
	{1809.0847,  -1891.0630,  13.1014,    100},
	{-2019.9607, -1002.5316,  31.7185,    100},
	{-1958.8065, 225.4428,    32.1599,    100},
	{-1992.9835, 165.4760,    27.2341,    100},
	{-2094.9800, -67.3422,    34.8602,    150},
	{-2140.2649, -782.1013,   32.0234,	  100},
	{-2142.2278, -948.1774,   32.0234,    100}
};

enum parkinginfo
{
    Float:pEnter_x,
	Float:pEnter_y,
	Float:pEnter_z,
	Float:pEnter_a,
	pVWorld,
    Float:pExit_x,
    Float:pExit_y,
    Float:pExit_z,
    Float:pExit_a,
    Float:pVExit_x,
    Float:pVExit_y,
    Float:pVExit_z,
    Float:pVExit_a,
};
new parking[MAX_PARKING][parkinginfo] =
{
	{1159.0061, -1412.9017, 13.2993, 92.1731, 1, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1814.3567, -1877.0453, 13.5781, 3.1156, 2, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-78.3442,1180.6338,19.4433,178.3271, 3, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{2811.5740,1235.1237,10.4653,88.9500, 5, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{2650.6873,1181.1444,10.8203,91.8699, 6, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1790.0857,418.0161,19.9621,86.8489, 7, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1504.7184,-1325.3362,13.7060,271.2840, 8, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1436.8799,-1578.2943,13.2682,1.1519, 9, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1637.1638,-1684.8743,13.2173,93.0377, 10, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1403.2896,-1652.7843,13.1607,271.2161, 11, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1283.7948,-1349.4983,13.1657,3.1795, 12, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1175.3805,-1308.6919,13.6326,269.0903, 13, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{340.4299,-1618.8706,32.7566,179.5325, 14, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{611.8994,-1348.3763,13.4575,279.0285, 15, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{167.3457,-183.4712,1.3028,269.8813, 16, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-1452.4008,457.6721,6.9208,0.1636, 17, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-1991.2229,235.8233,28.6959,91.8888, 18, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2099.6377,-52.8561,35.0399,181.8297, 19, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2079.7205,-54.8950,34.9738,0.5623, 20, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2153.8198,277.4999,35.0464,181.6078, 21, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2443.9368,523.5727,29.9163,181.6118, 22, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-1967.0040,548.9451,34.8768,90.3882, 23, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2565.8049,556.1598,14.1902,269.6837, 24, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2627.1423,627.0738,14.1298,181.6917, 25, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2730.2429,75.1695,4.0616,271.5603, 26, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-1994.6035,-1032.1533,31.8478,359.2426, 27, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1613.7208,1721.5741,10.5646,265.7845, 28, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{2201.0083,2411.4814,10.4901,177.4481, 29, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{2255.9700,-1135.6167,26.4331,246.4052, 30, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{2248.2683,-1726.0171,13.2362,268.7718, 31, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{2773.5608,-1649.4165,11.4144,270.2876, 32, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2123.9248,-2295.5845,30.3705,142.9485, 33, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2443.9199,105.2780,34.8502,258.0834, 34, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1446.2391,2816.8208,10.5487,271.3440, 35, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{946.8265,1660.0414,8.3660,268.2236, 36, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2456.6633,2292.8625,4.7045,1.0456, 37, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1156.6422,-1627.2762,13.6746,0.0072, 38, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{1798.8214,-1442.1119,13.4887,1.6389, 39, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872},
	{-2093.2893,94.9678,35.3392,90.5946, 40, 2420.7029, 2355.3875, 1491.5951, 271.0465,2496.8066,2343.3479,1502.3184,87.2872}
};

enum e_GARAGE_INTERIORS
{
	Float:e_GARAGE_INTERIOR_X,
	Float:e_GARAGE_INTERIOR_Y,
	Float:e_GARAGE_INTERIOR_Z,
	e_GARAGE_INTERIOR_INT
}

new GaragesInteriors[][e_GARAGE_INTERIORS] = { //Интерьер будет зависить от класса дома [hKlass]
	{2623.8853,1795.6268,1502.0000, 1},//1
	{340.1541,34.9017,829.3619, 1},//2
	{-1277.325928, -279.933807, 1501.000000, 1},//3
	{2570.1963,1750.9730,1501.9946, 1},//3
	{2696.876465, 1658.765991, 1502.083740, 1},//5
	{1862.762451, -2442.002441, 1500.968750, 1}//5
};

enum iInfo
{
	Float:iCam_X,
	Float:iCam_Y,
	Float:iCam_Z,
	Float:iCamAt_X,
	Float:iCamAt_Y,
	Float:iCamAt_Z,
	iInterior,
	iCost
}
new Float:IntInfo[31][iInfo] =
{
	{	0.0000,		0.0000,		0.0000,		0.0000,		0.0000,		0.0000,		0,	0		},
	{	249.6246,	306.6749,	1001.1484,	243.5571,	300.3347,	999.1484,	1,	40000	},
	{	266.9934,	303.4084,	999.1484,	273.9032,	306.8496,	999.1484,	2,	40000	},
	{	237.3471,	1186.9100,	1080.2578,	231.0561,	1204.1001,	1080.2578,	3,	390000	},
	{	311.0790,	311.6574,	1003.3047,	300.4887,	301.3558,	1003.5391,	4,	120000	},
	{	226.4762,	1114.2119,	1080.9939,	241.9857,	1114.0405,	1080.9922,	5,	550000	},
	{	742.7902,	1436.4205,	1102.7031,	762.0859,	1442.8284,	1102.7031,	6,	140000	},
	{	224.1152,	1021.5891,	1084.0173,	243.2221,	1039.6519,	1084.0137,	7,	620000	},
	{	-52.5170,	1412.7664,	1084.4297,	-45.2184,	1403.6163,	1084.4370,	8,	80000	},
	{	259.1778,	1237.3501,	1084.2578,	265.0774,	1250.0245,	1084.2578,	9,	80000	},
	{	18.3519,	1340.2017,	1084.3750,	32.0237,	1345.5005,	1088.8750,	10,	240000	},
	{	443.1728,	506.6413,	1001.4195,	451.4167,	515.1450,	1001.4195,	12,	60000	},
	{	387.1001,	1472.7684,	1080.1875,	383.9466,	1470.7700,	1080.1949,	15,	60000	},
    {	85.73,	    1322.62,	1085.04,	85.59,  	1323.23,	1085.07,    9,  800000	},
    {	-71.72,  	1366.68,	1082.73,	-70.58,  	1366.15,	1082.32,    6,  60000	},
    {	217.61, 	1238.98,	1084.30,	218.12, 	1239.33,	1084.06,    2,  90000	},
    {	330.23, 	1477.15,	1085.04,	329.94, 	1478.36,	1084.91,    15, 110000	},
    {	445.27, 	1397.00,	1086.54,	445.69, 	1398.18,	1086.25,    2,  400000	},
    {	316.37, 	1116.34,	1085.26,	317.39, 	1117.06,	1085.17,    5,  100000	},
    {	2366.97,	-1126.16,	1052.11,	2366.66,	-1126.70,	1052.00,    8,  380000	},
    {	2306.26,	-1206.41,	1051.03,	2306.81,	-1206.70,	1050.84,    6,  190000	},
    {	2236.43,	-1080.86,	1050.34,	2236.60,	-1080.26,	1050.27,    2,  240000	},
    {	2197.01,	-1199.81,	1050.94,	2196.50,	-1200.17,	1050.78,    6,  380000	},
    {	2263.93,	-1206.06,	1051.39,	2263.40,	-1206.37,	1051.25,    10, 380000	},
    {	-2155.3071, -2131.8706, 1503.2584,	-2155.9573, -2131.1160, 1503.0336,  8, 	2000000	},
    {	-647.9572,  -2179.6384, 1502.9762,	-648.8239,  -2179.1418, 1502.7513,  6, 	2100000	},
    {	-400.7250,  -2086.1755, 1502.5798,	-401.5462,  -2085.6079, 1502.4802,  2, 	4000000	},
    {	-1040.0017, -2186.1450, 1502.1348,	-1040.4255, -2187.0496, 1502.0493,  1, 	3900000	},
    {	2176.2957,  -738.4600,  1503.3000,	2176.6794,  -739.3814,  1503.1348,  10, 13000000},
    {	2181.1086,  -580.2449,  1504.2460,	2181.9258,  -579.6741,  1503.9709,  10, 13000000},
    {	2202.0627,  -401.4944,  1504.5913,	2201.7144,  -402.4331,  1504.2576,  10, 13000000}
};
new Float:PrisonPos[5][3] =
{
 	{610.9518,-586.3849,17.2266},
	{-1590.2208,716.0150,-5.2422},
	{1568.9985,-1694.6547,5.8906},
	{2286.9282,2427.9839,10.8203},
	{-1591.2236,716.0541,-5.2422}
};
new Float:JailPos[3][3] =
{
	{2314.43, 74.15, 1502.00},
	{2309.30, 73.72, 1502.00},
	{325.4229,89.3657,1001.0410}
};
new Tfarm_CP[70];
new Kfarm_CP[41];
new Zfarm_CP[41];
new Test_CP[41];
new MTest_CP[26];
new FTest_CP[50];
enum arInfo
{
	aRentID,
	aID,
	Float:aPos_X,
	Float:aPos_Y,
	Float:aPos_Z,
	Float:aPos_A,
	aColor_1,
	aColor_2,
	aBizid
};
new ArendInfo[MAX_AREND_CARS][arInfo] =
{
    {INVALID_PLAYER_ID, 526, 2402.1697,1667.7183,10.5668,359.0430,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 527, 2395.7109,1667.5551,10.4994,359.6040,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 527, 2386.3408,1658.9071,10.4994,179.7020,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1593.6954, 1832.7589, 10.2700, 180.5820,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1595.8210, 1832.8043, 10.3100, 180.5820,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1597.9672, 1832.8949, 10.3100, 180.5820,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1600.0338, 1832.6292, 10.2700, 180.5820,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1602.2183, 1832.6133, 10.2700, 180.5820,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1604.3276, 1832.6333, 10.2700, 180.5820,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1606.4049, 1832.9114, 10.3100, 180.5820,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 586, 1216.0262, -1426.8013, 12.8806, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1217.4323, -1426.7660, 12.8806, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1218.7133, -1426.7719, 12.8806, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1219.9784, -1426.6898, 12.8806, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1222.7548, -1426.7323, 12.8806, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 586, 1214.6040, -1426.8230, 12.8806, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1509.6296, -1280.8462, 14.0600, 137.3464,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1510.4818, -1281.5426, 14.0600, 137.3464,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1511.3479, -1282.1930, 14.0600, 137.3464,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 1512.3319, -1282.9500, 14.0600, 137.3464,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 422, 667.6203, -543.1777, 16.2203, 89.3185,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 422, 667.6231, -546.2809, 16.2203, 89.3185,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 422, 667.5521, -549.3002, 16.2203, 89.3185,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 652.4126, -588.9568, 15.8675, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 653.6716, -588.8953, 15.8675, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 655.0917, -588.9109, 15.8675, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 462, 656.5114, -588.8748, 15.8675, 0.0000,-1,-1,INVALID_BIZ},
    {INVALID_PLAYER_ID, 426, 1280.7815, -1292.0701, 13.1210, 90.0676,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 426, 1280.8137, -1295.7914, 13.1210, 90.0676,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 426, 1280.8157, -1299.6920, 13.1210, 90.0676,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 526, 1281.2010, -1303.5446, 13.1210, 90.0676,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 426, 1280.8484, -1307.4536, 13.1210, 90.0676,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 526, 1280.9872, -1310.9534, 13.1210, 90.0676,-1,-1,INVALID_BIZ},
 	{INVALID_PLAYER_ID, 547, 1392.1981, 385.5167, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 547, 1390.7390, 382.2040, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 546, 1389.3024, 378.8274, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 546, 1387.8916, 375.5937, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 546, 1386.3928, 372.3194, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 547, 1393.5696, 388.9565, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 547, 1394.9910, 392.3134, 19.4100, 246.3684,-1,-1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 546, 2475.6345, -1526.8542, 23.6052, 359.0000,-1,-1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 546, 2478.8823, -1526.9244, 23.6052, 359.0000,-1,-1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 547, 2481.9150, -1526.8684, 23.6052, 359.0000,-1,-1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 546, 2484.2478, -1517.7936, 23.6052, 181.9089,-1,-1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 547, 2487.3140, -1517.7598, 23.6052, 181.9089,-1,-1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 547, 2490.3770, -1517.8289, 23.6052, 181.9089,-1,-1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 540,552.2256,-1263.0308,16.8377,215.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,549.2261,-1265.1127,16.8615,215.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,546.2819,-1267.1350,16.8603,216.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,543.2506,-1269.3328,16.8853,212.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,540.3386,-1271.8612,16.9312,218.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,537.4234,-1274.1729,16.8892,218.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,534.7526,-1276.3138,16.8918,219.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,531.9340,-1278.4873,16.8892,218.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,565.7926,-1283.7555,17.0098,103.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,564.8121,-1279.5139,17.0102,103.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,563.9153,-1275.2931,17.0073,102.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,563.3939,-1271.1617,16.9935,103.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 540,562.5081,-1267.2034,16.9659,103.0,-1,-1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 487, 1875.0159, -2270.8831, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 487, 1875.0159, -2286.0461, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 487, 1875.0159, -2302.0259, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 487, 1859.6726, -2292.7288, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 487, 1859.6726, -2277.2041, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 469, 1884.0103, -2354.0991, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 469, 1884.0103, -2366.1475, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 469, 1884.0103, -2378.2358, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 469, 1870.8276, -2372.3872, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 469, 1870.8276, -2359.9214, 14.4766, -90.0000, -1,-1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 484, 130.5295,-1836.3340,0.2430,89.8457, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 484, 135.2226,-1887.9935,0.0909,93.2317, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 484, 135.2712,-1882.1295,0.1079,95.1366, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 484, 135.3813,-1873.3422,0.0287,92.2677, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 484, 135.5959,-1867.2753,0.0326,94.8338, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 484, 135.7223,-1858.2585,0.1352,96.5957, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 484, 135.7435,-1852.0146,0.0225,96.9833, -1,-1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 558, 2148.7693, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 558, 2145.5740, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 558, 2139.1221, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 558, 2135.9407, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 541, 2126.3281, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 541, 2119.9055, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 541, 2116.7261, 1398.1857, 10.3921, 180.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 542, 2116.8022, 1409.0896, 10.5221, 360.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 542, 2110.3604, 1409.0831, 10.5221, 360.0000, -1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 542, 2107.2341, 1409.0896, 10.5221, 360.0000,-1,-1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 560, 2216.1982, 2034.6406, 10.3637, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 560, 2216.1982, 2038.1283, 10.3637, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 560, 2216.1982, 2041.7065, 10.3637, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 560, 2216.1982, 2045.4866, 10.3637, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 496, 2246.2927, 2046.3232, 10.4237, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 496, 2246.2927, 2042.3247, 10.4237, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 496, 2246.2927, 2038.5048, 10.4237, 270.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 426, 2235.0664, 2038.6821, 10.4637, 90.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 426, 2235.0664, 2042.5248, 10.4637, 90.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 426, 2235.0664, 2050.1907, 10.4637, 90.0000, -1,-1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 410, 1731.6844, 1885.4795, 10.3846, 90.5101, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 410, 1731.6948, 1890.8372, 10.3846, 90.5101, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 410, 1731.6909, 1893.6300, 10.3846, 90.5101, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 404, 1731.2958, 1899.5796, 10.3846, 90.5101, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 404, 1731.2533, 1902.0092, 10.3846, 90.5101, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 404, 1731.2714, 1905.6315, 10.3846, 90.5101, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 400, 1741.6327, 1885.7103, 10.7886, 270.0000, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 400, 1741.6398, 1888.6401, 10.7886, 270.0000, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 400, 1741.6577, 1895.1151, 10.7886, 270.0000, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 401, 1741.7596, 1897.8267, 10.5856, 270.0000, -1,-1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 400, 2080.5874, 2468.3430, 10.7266, 0.0190, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 400, 2084.7898, 2468.3430, 10.7266, 0.0190, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 400, 2088.9299, 2468.3430, 10.7266, 0.0190, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 401, 2082.2666, 2480.2153, 10.7266, 180.0000, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 401, 2078.1626, 2480.2153, 10.7266, 180.0000, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 401, 2073.9431, 2480.2153, 10.7266, 180.0000, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 401, 2069.8408, 2480.2153, 10.7266, 180.0000, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 404, 2057.1904, 2480.2153, 10.7266, 180.0000, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 404, 2053.1138, 2480.2007, 10.7266, 180.0000, -1,-1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 422, -30.8412, 1166.7690, 19.3222, 360.0000, -1,-1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 422, -34.2425, 1166.7690, 19.3222, 360.0000, -1,-1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 422, -37.8182, 1166.7690, 19.3222, 360.0000, -1,-1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 527, -44.6972, 1166.7690, 19.3222, 360.0000, -1,-1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 527, -48.3838, 1166.7690, 19.3222, 360.0000, -1,-1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 542, 1838.0161, -1870.9659, 13.1197, 360.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 543, 1834.8230, -1871.1737, 13.1197, 360.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 549, 1844.3335, -1871.2560, 13.1197, 360.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 549, 2161.2803, -1192.2465, 23.5259, 90.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 543, 2161.4214, -1187.3746, 23.5259, 90.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 542, 2161.5625, -1182.4960, 23.5259, 90.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 589, 2161.6877, -1177.5209, 23.5259, 90.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 549, 196.5415, -155.3585, 1.2498, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 543, 199.4011, -155.4082, 1.3298, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 542, 218.6169, -173.2578, 1.2898, 90.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 549, 2760.3621, 1432.2369, 10.2147, 270.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 543, 2760.4126, 1429.2205, 10.2147, 270.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 542, 2760.6042, 1426.3209, 10.2147, 270.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2029.5892, -57.5981, 34.8291, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2026.9446, -57.7941, 34.8291, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2024.0134, -58.0167, 34.8291, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2020.9968, -58.1063, 34.8291, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2679.0906, 576.9824, 14.1563, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2680.5342, 577.0114, 14.1563, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2681.9968, 577.0459, 14.1563, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID, 462, -2683.5112, 577.0217, 14.1563, 180.0000,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,400, -1989.9163, 275.5569, 35.1662, 267.0000 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1990.0594, 272.2518, 35.1662, 267.0000 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1990.3448, 269.0416, 35.1662, 267.0000 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,401, -1990.7004, 263.9048, 34.8462, 267.0000 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,401, -1990.9237, 261.2656, 34.8462, 267.0000 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,404, -1991.3481, 255.2821, 34.8462, 264.0474 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,404, -1991.6816, 252.6617, 34.8462, 264.0474 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,410, -1992.7944, 248.2620, 34.8462, 264.0474 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,410, -1993.0652, 245.8304, 34.8462, 264.0474 ,-1,-1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -2585.8699, 335.4568, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,400, -2585.8457, 331.9096, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,401, -2585.9548, 328.1809, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,401, -2585.9983, 324.8647, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,404, -2585.9209, 321.3739, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,404, -2585.9912, 317.6576, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,410, -2586.1077, 314.0794, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,410, -2586.0518, 310.8368, 4.9638, 90.0000 ,-1,-1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,400, -2493.7048, 795.6027, 35.2550, 270.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,400, -2493.6475, 792.7779, 35.2550, 270.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,401, -2493.6985, 790.0810, 35.1350, 270.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,401, -2493.7954, 787.2208, 35.1350, 270.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,404, -2493.5164, 784.3647, 34.7750, 270.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,404, -2493.6309, 781.4155, 34.7750, 270.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,410, -2459.8179, 779.5052, 34.7350, 90.0000 ,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,410, -2459.4915, 786.4857, 34.7350, 90.0000,-1,-1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,409, -1764.7040, 956.2208, 24.4421, 270.0000 ,-1,-1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,409, -1752.3950, 956.3077, 24.4421, 270.0000 ,-1,-1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,409, -1760.8821, 947.5552, 24.4421, 270.0000 ,-1,-1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,409, -1750.7251, 947.5801, 24.4421, 270.0000 ,-1,-1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,409, -1740.4351, 955.3890, 24.4421, 258.6977 ,-1,-1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID,578, 1746.7456, 381.2450, 20.3878, 267.1472 ,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,578, 1774.6460, 379.7216, 19.9795, 265.7042 ,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,578, 1800.9841, 377.1846, 19.6196, 260.5329 ,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,578, 1819.5880, 371.7882, 19.5521, 252.5589 ,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,578, 1844.4434, 364.3566, 20.0035, 251.7380 ,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,578, 1874.5470, 355.5519, 20.7511, 258.1940 ,-1,-1,INVALID_BIZ},
	{INVALID_PLAYER_ID,415, -2197.2468, 971.6848, 79.7720, 270.0000 ,-1,-1,134},
	{INVALID_PLAYER_ID,429, -2197.2410, 977.7761, 79.6647, 269.9763 ,-1,-1,134},
	{INVALID_PLAYER_ID,411, -2197.2402, 989.8215, 79.7179, 270.0000 ,-1,-1,134},
	{INVALID_PLAYER_ID,451, -2197.2356, 995.7289, 79.7076, 269.9999 ,-1,-1,134},
	{INVALID_PLAYER_ID,506, -2197.2402, 1001.9411, 79.6714, 270.0000 ,-1,-1,147},
	{INVALID_PLAYER_ID,481, 1863.5612, -1398.4520, 12.9585, 261.0214 ,-1,-1,147},
	{INVALID_PLAYER_ID,481, 1863.5105, -1401.0997, 12.9626, 264.6744 ,-1,-1,147},
	{INVALID_PLAYER_ID,481, 1864.3284, -1405.0979, 12.9516, 253.1930 ,-1,-1,147},
	{INVALID_PLAYER_ID,481, 1864.5745, -1408.2422, 12.9564, 255.2842 ,-1,-1,147},
	{INVALID_PLAYER_ID,453, 2966.3306, -2020.8579, 0.3133, 279.6246 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.4080, -2015.0914, 0.2930, 285.7707 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.3630, -2009.5854, 0.2314, 271.8062 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.3481, -2003.7334, -0.8248, 276.4967 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.4287, -1997.7563, -0.6937, 288.3154 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.3748, -1991.5703, -0.5333, 270.0859 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.3374, -1985.8020, -0.9594, 271.3583 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2966.4446, -1980.1864, 0.2038, 280.8868 ,-1,-1,130},
	{INVALID_PLAYER_ID,453, 2967.0342, -1972.9269, 0.0905, 282.4146 ,-1,-1,130},
	{INVALID_PLAYER_ID,409, 2461.7688,918.7493,10.6470,269.5557, -1, -1, INVALID_BIZ}
};
new Float:FishZone[15][3] =
{
	{349.8644,-2052.0598,7.8359},
	{349.9288,-2059.7078,7.8359},
	{349.9258,-2064.8701,7.8359},
	{349.9335,-2067.3757,7.8359},
	{349.9633,-2072.5100,7.8359},
	{354.5819,-2088.6687,7.8359},
	{362.2255,-2088.7966,7.8359},
	{367.2188,-2088.7983,7.8359},
	{369.7726,-2088.7871,7.8359},
	{375.0870,-2088.7959,7.8359},
	{383.4317,-2088.7952,7.8359},
	{391.2613,-2088.7966,7.8359},
	{396.0679,-2088.7976,7.8359},
	{398.6076,-2088.7954,7.8359},
	{403.9636,-2088.7976,7.8359}
};
new FishName[14][22] =
{
	"None",
	"Корешка",
	"Навага",
	"Сельдь",
	"Карп",
	"Окунь",
	"Тунец",
	"Камбала",
	"Кета",
	"Горбуша",
	"Красноперка",
	"Судак",
	"Щука",
	"Лещ"
};
new FishCost[14] =
{
	0, //None
	150, //Корешка
	50, //Навага
	150, //Сельдь
	200, //Карп
	200, //Окунь
	300, //Тунец
	80, //Камбала
	90, //Кета
	80, //Горбуша
	150, //Красноперка
	150, //Судак
	150, //Щука
	90  //Лещ
};
new JailCP[5];
new GetPizza[2];
new MinerDownCP;
new PorterDownCP;
new MinerCP[4];
new FerumPickup[6];
new FerumCP[16];
new FerumEndCP;
new BankCP[4];
new IncCP[INC_CPs][2];

new PizzCP[Pizza_CPs][2];

enum CarParking
{
	Float:CarParking_X,
	Float:CarParking_Y,
	Float:CarParking_Z,
	Float:CarParking_A,
	CarParking_Free,
	CarParking_Number
};

new Float:StandartCarParking[][CarParking]=
{
	{-1871.6202, -753.9549, 31.6340, 89.0427, 1, INVALID_VEHICLE_ID},
	{-1871.9474, -757.0220, 31.6343, 89.2582, 1, INVALID_VEHICLE_ID},
	{-1871.6311, -760.0211, 31.6340, 89.8982, 1, INVALID_VEHICLE_ID},
	{-1872.1663, -762.9946, 31.6344, 90.0468, 1, INVALID_VEHICLE_ID},
	{-1872.1367, -765.9468, 31.6341, 89.4313, 1, INVALID_VEHICLE_ID},
	{-1872.0852, -768.9422, 31.6339, 90.4691, 1, INVALID_VEHICLE_ID},
	{-1871.3602, -772.0715, 31.6339, 90.6048, 1, INVALID_VEHICLE_ID},
	{-1871.9237, -775.0435, 31.6340, 90.2190, 1, INVALID_VEHICLE_ID},
	{-1872.0220, -777.9892, 31.6343, 89.2233, 1, INVALID_VEHICLE_ID},
	{-1872.0299, -780.9689, 31.6346, 89.5120, 1, INVALID_VEHICLE_ID},
	{-1871.9841, -783.9876, 31.6344, 90.7812, 1, INVALID_VEHICLE_ID},
	{-1871.8494, -787.0410, 31.6343, 90.4071, 1, INVALID_VEHICLE_ID},
	{-1871.5658, -790.0233, 31.6340, 89.6425, 1, INVALID_VEHICLE_ID},
	{-1871.7587, -793.0941, 31.6344, 89.7132, 1, INVALID_VEHICLE_ID},
	{-1871.8359, -796.0454, 31.6340, 90.2430, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -798.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -801.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -804.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -807.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -810.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -813.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -816.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -819.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -822.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -825.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -828.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -831.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -834.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -837.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -840.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -843.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -846.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -849.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -852.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -855.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -858.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -861.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -864.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -866.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -869.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -872.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -875.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -878.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -881.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -884.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -887.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -890.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -893.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -896.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -899.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -902.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -905.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -908.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -911.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -914.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -917.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -920.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -923.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -926.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -929.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -932.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -935.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -938.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -941.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -944.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -947.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -950.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -953.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -956.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0118, -959.9916, 31.6342, 91.0487, 1, INVALID_VEHICLE_ID},
	{-1872.0845, -963.5865, 31.6340, 90.0455, 1, INVALID_VEHICLE_ID},
	{-1886.9064, -963.7236, 31.6344, 269.2615, 1, INVALID_VEHICLE_ID},
	{-1887.1301, -960.5974, 31.6343, 268.6360, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -957.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -954.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -951.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -948.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -945.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -942.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -939.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -936.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -933.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -930.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -927.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -924.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -921.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.3192, -918.5673, 31.6344, 270.0260, 1, INVALID_VEHICLE_ID},
	{-1887.8038, -915.7139, 31.6343, 268.7760, 1, INVALID_VEHICLE_ID},
	{-1887.6500, -903.4103, 31.6343, 268.8207, 1, INVALID_VEHICLE_ID},
	{-1887.2260, -900.1493, 31.6341, 268.8922, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -896.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -893.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -890.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -887.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -884.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -881.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -878.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -875.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -872.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1887.5204, -869.9490, 31.6343, 270.0451, 1, INVALID_VEHICLE_ID},
	{-1886.9302, -864.5999, 31.6343, 268.7473, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -853.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -850.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -847.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -844.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -841.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -838.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -835.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -832.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -829.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -824.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -821.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.9866, -818.1797, 31.6344, 269.6419, 1, INVALID_VEHICLE_ID},
	{-1886.8785, -814.3453, 31.6343, 269.7630, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -802.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -799.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -796.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -793.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -790.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -787.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -784.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -781.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -778.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -775.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -772.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -769.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -766.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -763.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -760.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.3572, -757.0540, 31.6343, 269.0090, 1, INVALID_VEHICLE_ID},
	{-1887.0830, -753.9937, 31.6342, 269.2267, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -754.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -757.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -760.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -763.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -766.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -769.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -772.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -775.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -778.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -781.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -784.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -787.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -790.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -793.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -796.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.4717, -799.0249, 31.6344, 90.0577, 1, INVALID_VEHICLE_ID},
	{-1897.6514, -801.9987, 31.6344, 88.8193, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -814.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -817.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -820.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -823.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -826.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -829.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -832.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -835.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -838.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -841.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -844.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -847.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.5822, -850.1745, 31.6340, 89.2212, 1, INVALID_VEHICLE_ID},
	{-1897.4645, -853.0779, 31.6342, 90.3830, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -864.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -867.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -870.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -873.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -876.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -879.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -882.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -885.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -888.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -891.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -894.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -897.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.6432, -900.5861, 31.6342, 91.4497, 1, INVALID_VEHICLE_ID},
	{-1897.3824, -903.4614, 31.6340, 88.1722, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -915.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -918.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -921.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -924.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -927.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -930.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -933.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -936.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -939.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -942.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -945.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -948.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -951.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -955.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -958.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.6892, -961.7218, 31.6340, 88.9445, 1, INVALID_VEHICLE_ID},
	{-1897.8511, -963.6726, 31.6343, 90.3608, 1, INVALID_VEHICLE_ID},
	{1558.4680, -1012.4069, 23.5168, 181.9901, 1, INVALID_VEHICLE_ID},
	{1562.8892, -1012.2247, 23.5166, 180.4049, 1, INVALID_VEHICLE_ID},
	{1567.3582, -1011.8825, 23.5202, 180.6724, 1, INVALID_VEHICLE_ID},
	{1571.9059, -1012.0411, 23.5166, 181.7434, 1, INVALID_VEHICLE_ID},
	{1576.3126, -1012.1378, 23.5165, 182.2266, 1, INVALID_VEHICLE_ID},
	{1581.4943, -1011.8914, 23.5173, 186.3029, 1, INVALID_VEHICLE_ID},
	{1585.8787, -1010.7643, 23.5168, 185.6483, 1, INVALID_VEHICLE_ID},
	{1590.4026, -1010.5210, 23.5170, 186.4816, 1, INVALID_VEHICLE_ID},
	{1594.7281, -1010.0948, 23.5165, 185.9081, 1, INVALID_VEHICLE_ID},
	{1599.2446, -1009.2011, 23.5168, 185.9490, 1, INVALID_VEHICLE_ID},
	{1604.3210, -1008.8847, 23.5166, 176.8446, 1, INVALID_VEHICLE_ID},
	{1608.9269, -1009.1859, 23.5170, 177.5059, 1, INVALID_VEHICLE_ID},
	{1613.2728, -1009.0444, 23.5168, 180.2016, 1, INVALID_VEHICLE_ID},
	{1617.7999, -1009.8328, 23.5110, 179.8297, 1, INVALID_VEHICLE_ID},
	{1623.3464, -1010.7888, 23.5088, 162.1745, 1, INVALID_VEHICLE_ID},
	{1627.7533, -1011.9344, 23.5087, 162.5268, 1, INVALID_VEHICLE_ID},
	{1632.2615, -1013.2950, 23.5092, 163.1210, 1, INVALID_VEHICLE_ID},
	{1636.3907, -1014.4413, 23.5091, 162.5507, 1, INVALID_VEHICLE_ID},
	{1640.6299, -1016.0787, 23.5087, 161.4913, 1, INVALID_VEHICLE_ID},
	{1645.2540, -1017.0021, 23.5094, 160.7001, 1, INVALID_VEHICLE_ID},
	{1651.7897, -1017.7875, 23.5094, 189.9938, 1, INVALID_VEHICLE_ID},
	{1656.1506, -1016.8237, 23.5093, 189.7430, 1, INVALID_VEHICLE_ID},
	{1660.5764, -1016.3417, 23.5087, 191.1470, 1, INVALID_VEHICLE_ID},
	{1664.8175, -1015.1065, 23.5092, 191.0829, 1, INVALID_VEHICLE_ID},
	{1674.4000, -1013.1021, 23.5095, 200.0218, 1, INVALID_VEHICLE_ID},
	{1678.6801, -1011.6260, 23.5091, 198.4138, 1, INVALID_VEHICLE_ID},
	{1682.7860, -1009.9215, 23.5089, 199.0804, 1, INVALID_VEHICLE_ID},
	{1686.8544, -1008.4095, 23.5165, 197.5920, 1, INVALID_VEHICLE_ID},
	{1691.2926, -1007.2444, 23.5165, 198.6693, 1, INVALID_VEHICLE_ID},
	{1695.7494, -1006.4331, 23.5165, 197.4052, 1, INVALID_VEHICLE_ID},
	{1703.7869, -1005.0826, 23.5190, 170.5832, 1, INVALID_VEHICLE_ID},
	{1708.1157, -1005.7994, 23.5231, 171.3285, 1, INVALID_VEHICLE_ID},
	{1712.6115, -1006.1609, 23.5250, 171.8795, 1, INVALID_VEHICLE_ID},
	{1717.0189, -1006.8057, 23.5246, 171.4042, 1, INVALID_VEHICLE_ID},
	{1721.6476, -1007.1997, 23.5240, 171.4922, 1, INVALID_VEHICLE_ID},
	{1726.6277, -1007.6859, 23.5379, 166.5302, 1, INVALID_VEHICLE_ID},
	{1730.7971, -1008.8813, 23.5512, 166.4220, 1, INVALID_VEHICLE_ID},
	{1735.3641, -1009.9448, 23.5666, 168.3793, 1, INVALID_VEHICLE_ID},
	{1739.9144, -1011.0194, 23.5717, 166.8184, 1, INVALID_VEHICLE_ID},
	{1744.2775, -1012.2689, 23.5715, 167.7883, 1, INVALID_VEHICLE_ID},
	{1748.7714, -1012.7493, 23.5717, 166.9149, 1, INVALID_VEHICLE_ID},
	{1752.8365, -1014.3951, 23.5716, 168.8181, 1, INVALID_VEHICLE_ID},
	{1757.3102, -1015.0510, 23.5718, 166.1820, 1, INVALID_VEHICLE_ID},
	{1761.7666, -1015.7945, 23.5715, 170.3444, 1, INVALID_VEHICLE_ID},
	{1767.5665, -1017.9461, 23.5716, 152.3228, 1, INVALID_VEHICLE_ID},
	{1771.6459, -1020.1177, 23.5717, 152.0864, 1, INVALID_VEHICLE_ID},
	{1775.6600, -1022.0659, 23.5719, 153.4988, 1, INVALID_VEHICLE_ID},
	{1779.8026, -1023.7059, 23.5714, 154.3663, 1, INVALID_VEHICLE_ID},
	{1783.8260, -1025.7316, 23.5716, 150.3163, 1, INVALID_VEHICLE_ID},
	{1793.5167, -1061.1029, 23.5752, 0.4574, 1, INVALID_VEHICLE_ID},
	{1788.9436, -1060.8019, 23.5719, 358.9199, 1, INVALID_VEHICLE_ID},
	{1784.2389, -1060.8807, 23.5721, 0.0023, 1, INVALID_VEHICLE_ID},
	{1780.1812, -1061.0358, 23.5713, 359.0605, 1, INVALID_VEHICLE_ID},
	{1775.3362, -1061.3716, 23.5717, 358.6985, 1, INVALID_VEHICLE_ID},
	{1771.1055, -1060.9952, 23.5720, 358.8543, 1, INVALID_VEHICLE_ID},
	{1766.4647, -1060.8171, 23.5718, 359.4640, 1, INVALID_VEHICLE_ID},
	{1762.0133, -1061.7875, 23.5713, 359.0246, 1, INVALID_VEHICLE_ID},
	{1761.9238, -1070.1180, 23.5712, 180.2054, 1, INVALID_VEHICLE_ID},
	{1766.4242, -1070.4081, 23.5714, 177.5186, 1, INVALID_VEHICLE_ID},
	{1771.1721, -1069.9393, 23.5714, 177.4281, 1, INVALID_VEHICLE_ID},
	{1775.4537, -1070.2118, 23.5712, 178.2182, 1, INVALID_VEHICLE_ID},
	{1779.8951, -1069.5941, 23.5713, 179.3939, 1, INVALID_VEHICLE_ID},
	{1784.2726, -1070.0413, 23.5712, 180.4913, 1, INVALID_VEHICLE_ID},
	{1788.9608, -1070.4805, 23.5717, 179.1534, 1, INVALID_VEHICLE_ID},
	{1793.3495, -1070.2399, 23.5716, 182.3082, 1, INVALID_VEHICLE_ID},
	{1803.2043, -1085.2394, 23.5720, 358.0617, 1, INVALID_VEHICLE_ID},
	{1798.8994, -1084.6654, 23.5719, 358.1654, 1, INVALID_VEHICLE_ID},
	{1794.1704, -1084.9940, 23.5796, 357.9424, 1, INVALID_VEHICLE_ID},
	{1789.6384, -1085.1123, 23.5794, 359.0909, 1, INVALID_VEHICLE_ID},
	{1785.3490, -1085.1626, 23.5795, 0.4020, 1, INVALID_VEHICLE_ID},
	{1780.5991, -1085.2754, 23.5718, 359.5494, 1, INVALID_VEHICLE_ID},
	{1776.1948, -1084.8647, 23.5715, 0.5800, 1, INVALID_VEHICLE_ID},
	{1771.6897, -1084.2368, 23.5717, 0.3023, 1, INVALID_VEHICLE_ID},
	{1767.1836, -1085.7990, 23.5712, 0.2183, 1, INVALID_VEHICLE_ID},
	{1762.5854, -1084.4930, 23.5717, 358.7430, 1, INVALID_VEHICLE_ID},
	{1758.0923, -1085.2037, 23.5719, 1.2575, 1, INVALID_VEHICLE_ID},
	{1753.6434, -1085.0924, 23.5715, 0.1049, 1, INVALID_VEHICLE_ID},
	{1748.9657, -1084.8939, 23.5719, 0.6234, 1, INVALID_VEHICLE_ID},
	{1744.6156, -1085.3342, 23.5713, 0.7709, 1, INVALID_VEHICLE_ID},
	{1739.9070, -1085.4197, 23.5711, 0.3403, 1, INVALID_VEHICLE_ID},
	{1735.3269, -1085.3162, 23.5711, 1.2077, 1, INVALID_VEHICLE_ID},
	{1731.2482, -1085.5979, 23.5559, 359.6583, 1, INVALID_VEHICLE_ID},
	{1726.2017, -1084.9943, 23.5337, 359.2104, 1, INVALID_VEHICLE_ID},
	{1743.9335, -1037.4263, 23.5716, 0.1580, 1, INVALID_VEHICLE_ID},
	{1748.3455, -1036.7844, 23.5714, 359.5643, 1, INVALID_VEHICLE_ID},
	{1752.8572, -1036.9032, 23.5720, 359.0736, 1, INVALID_VEHICLE_ID},
	{1757.5089, -1037.1031, 23.5718, 0.4561, 1, INVALID_VEHICLE_ID},
	{1761.9230, -1037.3584, 23.5714, 356.7782, 1, INVALID_VEHICLE_ID},
	{1761.8252, -1046.3853, 23.5715, 177.8386, 1, INVALID_VEHICLE_ID},
	{1757.4915, -1046.1006, 23.5713, 179.1035, 1, INVALID_VEHICLE_ID},
	{1753.0697, -1046.1973, 23.5719, 179.6179, 1, INVALID_VEHICLE_ID},
	{1748.4551, -1046.7034, 23.5718, 180.0661, 1, INVALID_VEHICLE_ID},
	{1743.9131, -1046.4293, 23.5715, 179.7599, 1, INVALID_VEHICLE_ID},
	{1722.7699, -1060.6680, 23.5338, 358.9793, 1, INVALID_VEHICLE_ID},
	{1718.2196, -1060.0126, 23.5207, 358.6655, 1, INVALID_VEHICLE_ID},
	{1713.7673, -1060.7281, 23.5167, 359.4945, 1, INVALID_VEHICLE_ID},
	{1709.4412, -1060.6038, 23.5165, 359.4044, 1, INVALID_VEHICLE_ID},
	{1704.7166, -1059.9884, 23.5172, 358.1128, 1, INVALID_VEHICLE_ID},
	{1700.3153, -1060.7413, 23.5166, 358.7368, 1, INVALID_VEHICLE_ID},
	{1695.8868, -1060.2627, 23.5227, 358.8898, 1, INVALID_VEHICLE_ID},
	{1691.2753, -1060.5869, 23.5243, 357.4435, 1, INVALID_VEHICLE_ID},
	{1691.1912, -1069.8153, 23.5171, 180.6926, 1, INVALID_VEHICLE_ID},
	{1695.8701, -1069.3495, 23.5168, 178.6040, 1, INVALID_VEHICLE_ID},
	{1700.2670, -1069.3667, 23.5168, 179.0710, 1, INVALID_VEHICLE_ID},
	{1704.7157, -1069.7094, 23.5171, 178.8946, 1, INVALID_VEHICLE_ID},
	{1709.2683, -1069.4926, 23.5169, 178.0049, 1, INVALID_VEHICLE_ID},
	{1713.7153, -1069.4919, 23.5165, 179.2534, 1, INVALID_VEHICLE_ID},
	{1718.3026, -1068.9731, 23.5173, 180.8427, 1, INVALID_VEHICLE_ID},
	{1722.6871, -1069.1141, 23.5334, 179.7421, 1, INVALID_VEHICLE_ID},
	{1722.6025, -1060.4854, 23.5336, 359.4358, 1, INVALID_VEHICLE_ID},
	{1718.2721, -1060.4814, 23.5207, 0.6014, 1, INVALID_VEHICLE_ID},
	{1713.9677, -1060.7882, 23.5168, 0.1287, 1, INVALID_VEHICLE_ID},
	{1709.3805, -1060.5582, 23.5169, 359.0342, 1, INVALID_VEHICLE_ID},
	{1704.7964, -1060.1798, 23.5168, 357.7699, 1, INVALID_VEHICLE_ID},
	{1700.3353, -1059.8936, 23.5172, 357.8647, 1, INVALID_VEHICLE_ID},
	{1695.7241, -1060.3492, 23.5232, 359.5998, 1, INVALID_VEHICLE_ID},
	{1691.3960, -1060.7487, 23.5248, 359.2441, 1, INVALID_VEHICLE_ID},
	{1705.9163, -1085.5106, 23.5169, 358.3792, 1, INVALID_VEHICLE_ID},
	{1701.4266, -1085.1654, 23.5171, 357.9610, 1, INVALID_VEHICLE_ID},
	{1697.0255, -1084.9978, 23.5165, 359.8781, 1, INVALID_VEHICLE_ID},
	{1692.5027, -1085.4437, 23.5169, 359.4893, 1, INVALID_VEHICLE_ID},
	{1688.2380, -1085.4274, 23.5165, 357.8648, 1, INVALID_VEHICLE_ID},
	{1675.8231, -1097.8225, 23.5168, 88.0123, 1, INVALID_VEHICLE_ID},
	{1675.8021, -1102.3594, 23.5165, 89.7332, 1, INVALID_VEHICLE_ID},
	{1675.9368, -1106.9783, 23.5166, 87.8055, 1, INVALID_VEHICLE_ID},
	{1675.7943, -1111.4727, 23.5172, 89.7565, 1, INVALID_VEHICLE_ID},
	{1675.7751, -1115.9670, 23.5172, 90.4918, 1, INVALID_VEHICLE_ID},
	{1675.8225, -1120.3788, 23.5172, 88.7881, 1, INVALID_VEHICLE_ID},
	{1675.5469, -1124.8788, 23.5171, 89.2826, 1, INVALID_VEHICLE_ID},
	{1675.5693, -1129.3719, 23.5171, 88.5380, 1, INVALID_VEHICLE_ID},
	{1666.4688, -1135.2738, 23.5171, 0.1341, 1, INVALID_VEHICLE_ID},
	{1661.7244, -1136.0667, 23.5172, 358.6440, 1, INVALID_VEHICLE_ID},
	{1657.2987, -1135.6372, 23.5172, 359.8706, 1, INVALID_VEHICLE_ID},
	{1652.9393, -1135.6422, 23.5165, 358.0985, 1, INVALID_VEHICLE_ID},
	{1648.4742, -1135.5204, 23.5172, 1.2977, 1, INVALID_VEHICLE_ID},
	{1617.0967, -1137.1364, 23.5172, 272.5109, 1, INVALID_VEHICLE_ID},
	{1617.1405, -1132.5933, 23.5171, 266.8187, 1, INVALID_VEHICLE_ID},
	{1616.2843, -1128.2009, 23.5166, 267.9693, 1, INVALID_VEHICLE_ID},
	{1616.8486, -1123.8628, 23.5170, 269.7912, 1, INVALID_VEHICLE_ID},
	{1617.0011, -1119.1412, 23.5172, 267.3853, 1, INVALID_VEHICLE_ID},
	{1592.1229, -1057.8048, 23.5165, 308.7149, 1, INVALID_VEHICLE_ID},
	{1589.3940, -1054.6306, 23.5172, 308.6678, 1, INVALID_VEHICLE_ID},
	{1586.8616, -1050.7434, 23.5173, 305.9297, 1, INVALID_VEHICLE_ID},
	{1584.3718, -1047.3011, 23.5167, 309.4448, 1, INVALID_VEHICLE_ID},
	{1581.6361, -1043.6340, 23.5166, 309.3819, 1, INVALID_VEHICLE_ID},
	{1577.7589, -1039.2748, 23.5174, 321.4056, 1, INVALID_VEHICLE_ID},
	{1573.6016, -1037.0328, 23.5209, 320.5859, 1, INVALID_VEHICLE_ID},
	{1570.1982, -1034.2122, 23.5249, 320.7296, 1, INVALID_VEHICLE_ID},
	{1563.9054, -1030.9979, 23.5186, 342.1199, 1, INVALID_VEHICLE_ID},
	{1559.7295, -1029.5508, 23.5165, 343.3477, 1, INVALID_VEHICLE_ID},
	{1555.3745, -1028.2522, 23.5167, 341.3905, 1, INVALID_VEHICLE_ID},
	{1551.0745, -1026.7731, 23.5170, 342.4940, 1, INVALID_VEHICLE_ID},
	{1546.8508, -1025.5540, 23.5171, 342.1929, 1, INVALID_VEHICLE_ID},
	{1542.6683, -1024.1702, 23.5171, 340.9424, 1, INVALID_VEHICLE_ID},
	{1658.9448, -1037.8763, 23.5088, 359.8871, 1, INVALID_VEHICLE_ID},
	{1654.3845, -1037.5585, 23.5094, 358.4614, 1, INVALID_VEHICLE_ID},
	{1649.9601, -1037.5441, 23.5093, 358.1330, 1, INVALID_VEHICLE_ID},
	{1645.3553, -1037.4141, 23.5094, 359.9295, 1, INVALID_VEHICLE_ID},
	{1640.7861, -1037.6759, 23.5091, 359.4187, 1, INVALID_VEHICLE_ID},
	{1636.3569, -1037.7754, 23.5088, 359.5124, 1, INVALID_VEHICLE_ID},
	{1631.8942, -1037.8721, 23.5089, 0.0841, 1, INVALID_VEHICLE_ID},
	{1627.3131, -1037.5183, 23.5093, 358.6852, 1, INVALID_VEHICLE_ID},
	{1627.1763, -1046.4005, 23.5087, 180.3113, 1, INVALID_VEHICLE_ID},
	{1631.8175, -1046.4231, 23.5091, 178.3477, 1, INVALID_VEHICLE_ID},
	{1636.1625, -1046.2880, 23.5094, 178.9926, 1, INVALID_VEHICLE_ID},
	{1640.7754, -1046.6510, 23.5090, 179.1166, 1, INVALID_VEHICLE_ID},
	{1645.2764, -1046.8058, 23.5094, 177.1074, 1, INVALID_VEHICLE_ID},
	{1649.7460, -1046.4567, 23.5090, 178.3391, 1, INVALID_VEHICLE_ID},
	{1654.4225, -1046.3765, 23.5090, 178.9497, 1, INVALID_VEHICLE_ID},
	{1658.6324, -1046.3380, 23.5086, 178.2492, 1, INVALID_VEHICLE_ID},
	{1658.0083, -1080.0065, 23.5127, 268.5453, 1, INVALID_VEHICLE_ID},
	{1657.9198, -1084.5458, 23.5164, 269.3615, 1, INVALID_VEHICLE_ID},
	{1658.3243, -1089.0385, 23.5166, 269.3302, 1, INVALID_VEHICLE_ID},
	{1658.2106, -1093.5894, 23.5170, 270.4691, 1, INVALID_VEHICLE_ID},
	{1658.3051, -1097.9753, 23.5171, 269.3956, 1, INVALID_VEHICLE_ID},
	{1658.3674, -1102.7065, 23.5172, 269.9523, 1, INVALID_VEHICLE_ID},
	{1657.9114, -1107.1176, 23.5166, 269.9855, 1, INVALID_VEHICLE_ID},
	{1658.4811, -1111.5708, 23.5169, 269.8734, 1, INVALID_VEHICLE_ID},
	{1648.9885, -1111.4705, 23.5248, 89.5551, 1, INVALID_VEHICLE_ID},
	{1648.9166, -1107.0082, 23.5172, 89.4219, 1, INVALID_VEHICLE_ID},
	{1649.6259, -1102.5834, 23.5165, 90.5175, 1, INVALID_VEHICLE_ID},
	{1649.1847, -1098.0969, 23.5168, 90.6903, 1, INVALID_VEHICLE_ID},
	{1649.4255, -1093.6208, 23.5168, 90.3299, 1, INVALID_VEHICLE_ID},
	{1649.0256, -1089.0177, 23.5172, 88.5190, 1, INVALID_VEHICLE_ID},
	{1649.7467, -1084.6544, 23.5167, 90.4367, 1, INVALID_VEHICLE_ID},
	{1649.0420, -1080.0314, 23.5134, 90.7553, 1, INVALID_VEHICLE_ID},
	{1629.5481, -1107.4907, 23.5172, 268.6024, 1, INVALID_VEHICLE_ID},
	{1629.8374, -1103.0299, 23.5166, 267.2411, 1, INVALID_VEHICLE_ID},
	{1629.7446, -1098.4086, 23.5165, 268.7328, 1, INVALID_VEHICLE_ID},
	{1629.4772, -1093.9991, 23.5204, 268.5530, 1, INVALID_VEHICLE_ID},
	{1630.1189, -1089.5664, 23.5168, 268.1686, 1, INVALID_VEHICLE_ID},
	{1629.4015, -1085.0798, 23.5167, 268.1021, 1, INVALID_VEHICLE_ID},
	{1621.1122, -1084.9014, 23.5165, 89.2882, 1, INVALID_VEHICLE_ID},
	{1621.1877, -1089.5990, 23.5172, 88.3801, 1, INVALID_VEHICLE_ID},
	{1620.8409, -1094.0743, 23.5206, 90.3619, 1, INVALID_VEHICLE_ID},
	{1621.1720, -1098.5520, 23.5171, 89.8521, 1, INVALID_VEHICLE_ID},
	{1620.6381, -1103.0771, 23.5171, 89.8721, 1, INVALID_VEHICLE_ID},
	{1621.2124, -1107.3531, 23.5169, 90.2835, 1, INVALID_VEHICLE_ID}
};

new TeamColors[28]=
{
	0xFFFFFF80, //None
    0x0049FF80, //LSPD
    0x0049FF80, //LVPD
    0x00000080, //FBI
    0x004eff80, //SWAT
    0xFF7E7E80, //Medic
    0xCCFF0080, //Meria LS
    0x99663380, //ARMY LV
    0xFF7E7E80, //Meria LV
    0xFF663380, //Licensers
    0xFF800080, //Radio
    0x00932799, //Groove Street
    0xD1DB1C99, //LS Vagos
    0xcc00cc99, //Ballas
    0x00FFE299, //El Coronos
    0x6666FF99, //SF Rifa
    0x33669980, //Russian Mafia
    0x96020280, //Yakuza Mafia
    0x99336680, //La Cosa Nostra
    0xBA541D80, //Bikers
	0x99663380, //army
	0x298CB780, //bank
	0xFF7E7E80, //hospital lv
	0x0049FF80, //LVPD
	0xFF800080, //cnn lv
	0x7F646480, //wolfs
	0xFF800080, //cnn SF
	0x99663380 //cnn SF
};
new WeaponNames[48][40] =
{
	"Unarmed (Fist)",
	{"Brass Knuckles"},
	{"Golf Club"},
	{"Night Stick"},
	{"Knife"},
	{"Baseball Bat"},
	{"Shovel"},
	{"Pool Cue"},
	{"Katana"},
	{"Chainsaw"},
	{"Purple Dildo"},
	{"Big White Vibrator"},
	{"Medium White Vibrator"},
	{"Small White Vibrator"},
	{"Flowers"},
	{"Cane"},
	{"Grenade"},
	{"Teargas"},
	{"Molotov"},
	{" "},
	{" "},
	{" "},
	{"Pistols"},
	{"Desert Eagle (Silencer)"},
	{"Desert Eagle"},
	{"Shotgun"},
	{"Sawnoff Shotgun"},
	{"Combat Shotgun"},
	{"Micro Uzi (Mac 10)"},
	{"MP5"},
	{"AK47"},
	{"M4"},
	{"Tec9"},
	{"Country Rifle"},
	{"Sniper Rifle"},
	{"Rocket Launcher"},
	{"Auto Rocket Launcher"},
	{"Flamethrower"},
	{"Minigun"},
	{"Satchel Charge"},
	{"Detonator"},
	{"Spray Can"},
	{"Fire Extinguisher"},
	{"Camera"},
	{"Night Vision Goggles"},
	{"Infrared Vision Goggles"},
	{"Parachute"},
	{"Fake Pistol"}
};
enum dInfo
{
    dDialog,
	dQuestion[100],
	dAnswers[150],
	dSuccesQwe
}
new QueInfo[4][dInfo] =
{
	{2,"Максимальная скорость в городе:",		"40 Км/ч\n60 Км/ч\n80 Км/ч\n100 Км/ч",1},
	{2,"Максимальная скорость вне города:		","100 Км/ч\n120 Км/ч\n150 Км/ч\nБез ограничений",1},
	{2,"Разрешена ли парковка на тротуаре?",	"Всегда да\nЕсли админ разрешит\nТолько в экстренных ситуациях\nВсегда нет",2},
	{2,"Что нужно делать при тумане?",		 	"Снизить скорость и включить фары\nЕхать как можно быстрее\nВыйти из авто и идти пешком\nЕхать и материться",0}
};
new QueFInfo[7][dInfo] =
{
    {2,"Можно ли садиться на зданиях?",  "Да\nНет\nВ особых местах\nВ любых местах",2},
    {2,"Разрешено ли буксировать другие транспортные средства?", "Да\nНет\nДа если ваша масса больше его\nБез ограничений",1},
    {2,"Какая дистанция должна быть между двумя летящими вертолётам/самолетами?", "2 метра\n10 метров\nКак можно ближе друг к другу\nНеобходимая для безопасного пролета",3},
    {2,"Полет между зданиями",    "Разрешён\nЗапрещен\nРазрешен при необходимости\nТолько так и надо летать",1},
    {2,"Летать разрешено",    "Везде\nТолько над водоемами\nТолько над сушей\nЗа исключением военных объектов",3},
    {2,"Покидать кабину летательного аппарата разрешено",    "После остановки двигателя\nНа лету\nКогда самолет перевернут\nНеисправен или двигатель остановлен",0},
    {2,"Перед взлетом необходимо проверить", "Стоимость реактивного топлива\nУровень реактивного топлива\nБезопастность взлета\nВсе пассажиры взяли с собой горшки",1}
};
new OrgSalary[28][14] =
{
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //None
	{4500,5000,5500,6000,6500,7000,8000,8500,9000,10000,10500,11000,11500,12000}, //Police LS
	{4050,5000,5500,6000,6050,7000,8000,8500,9000,10000,10500,11000,11050,12000}, //Police LS
	{6500,7000,7500,8000,8500,9000,9500,10000,10500,11000,11500,12000,12050,13000}, //CIA
	{4500,5000,5500,6000,6500,7000,8000,8500,9000,10000,10500,11000,11500,12000}, //S.W.A.T
	{4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10500,11000}, //Medic
	{6000,7000,8000,8500,9000,9500,10000,10500,11000,11500,12000,12500,13000,13500}, //Meria LS
	{2000,3000,4000,5000,6000,6500,6000,7000,7500,8000,9000,10200,10600,11000}, //Meria SF
	{4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10500,11000}, //medic sf
	{3800,4000,4200,4300,4500,4700,5000,5300,5600,5900,6100,6400,6700,7000}, //Licensers
	{4900,5100,5500,6100,6500,6900,7300,7600,8000,8400,8800,9200,9600,10000}, //Radio
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Groove
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Vagos
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Ballas
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Coronos
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10}, //Rifa
	{4800,4900,5000,6000,6500,7000,8000,8500,9000,9500,10000,10500,10000,11000}, //Russian Mafia
	{4800,4900,5000,6000,6500,7000,8000,8050,9000,9500,10000,10500,10000,11000}, //Yakuza
	{4800,4900,5000,6000,6500,7000,8000,8500,9000,9500,10000,10500,10000,11000}, //LCN
	{4800,4900,5000,6000,6500,7000,8000,8500,9000,9500,10000,10500,10000,11000}, //Bikers
	{2000,3000,4000,5000,6000,6500,6000,7000,7500,8000,9000,10200,10600,11000}, //army
	{5500,5800,5900,6000,6200,6500,6700,7000,8000,10000,11000,12000,12800,13000}, //bank
	{4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,10500,11000},
	{4500,5000,5500,6000,6500,7000,8000,8500,9000,10000,10500,11000,11500,12000},
	{4900,5100,5500,6100,6500,6900,7300,7600,8000,8400,8800,9200,9600,10000},
	{10,10,10,10,10,10,10,10,10,10,10,10,10,10},
	{4900,5100,5500,6100,6500,6900,7300,7600,8000,8400,8800,9200,9600,10000}, //RadioSF
	{2000,3000,4000,5000,6000,6500,6000,7000,7500,8000,9000,10200,10600,11000} //army
};
new MOrgSkins[][] =
{
    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},//None
    {71,266,284,267,267,265,282,282,311,17,295},//Police LS
    {71,266,284,267,267,265,282,282,288,283,283,0},//Police rcpd
    {286,286,286,286,163,163,163,165,165,165,166,166},//FBI
    {71,266,284,267,267,265,282,282,311,17,295,0},//Police SF
    {274,274,276,276,276,275,275,275,275, 70,70,0},//M4C
    {164,164, 164,163, 163,187,187,57,57,147,147,0},//Meria LS
    {287,287,287,179,179,253,253,61,61,255,255,0},//Army лв
    {274,274,274,274,274,275,275,275,275, 70,70,0},//M
    {59,59,59,59, 59, 59, 59, 59,59,240,240,0},//Licensers
    {188,188,188,188,250,250,250,250,250,261,261,0}, //Radio
    {105,105,105,105,106,106,106,107,269,271,270,270,270,270},//Groove Street
    {108,108,108,108,108,108,109,109,109,110,110,110,110,110},//LS Vagos
    {103,103,103,103,103,103,102,102,102,104,104,104,104,104},//Ballas
    {114,114,114,114,116,116,116,116,115,292,292,115,115},//El'Coronos
    {175,175,175,175,174,174,174,174,173,173,273,273,173,173},//SF Rifa
    {112,112,112,112,111,111,111,46,46,125,125,125, 125, 126},//Русская Мафия
    {122,122,122,208,208,123,123,123,186,186,118,118,228,228},//Yakuza
    {124,124,124,98,98,127,127,223,223,113,113,113,113,113},//LCN Male
    {181,242,241,181,181,248,248,248,248,247,247,110,110,100},//Bikers
    {287,287,287,179,179,253,253,61,61,255,255,0},//Army
    {164,171, 164,163, 171,166,153,118,153,227,227,0},//BANK
    {274,274,274,274,274,275,275,275,275, 70,70,0},//MEDIC LV
    {71,266,284,267,267,265,282,282,311,17,295,0},//Police LV
    {188,188,188,188,250,250,250,250,250,261,261,0}, //Radio lv
    {21,21,21,21,28,28,28,293,293,297,297,0}, //Wolfs
    {188,188,188,188,250,250,250,250,250,261,261,0}, //Radio
    {287,287,287,179,179,253,253,61,61,255,255,0}//Army sf
};
new GOrgSkins[][] =
{
    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},//None
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},//Police LS
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},//Police LV
    {141,141,141,141,141,141,141,141,141,141,141,141,141,141},//F.B.I
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},//Police SF
    {219,308,308,308,308,308,150,150,150,150,150,219,219,219},//M4C
    {150,150,150,150,150,150,150,150,150,150,150,150,150,150},//Meria LS
    {191,191,191,191,191,191,191,191,191,191,191,191,191,191},//Army
    {219,308,308,308,308,308,219,219,219,219,219,219,219,219},//M4C SF
    {150,11,11,11,11,11,172,172,172,172,172,150,150,150},//Licensers
    {211,211,211,211,211,211,211,211,211,211,211,211,211,211}, //Radio
    {65,65,65,65,65,65,207,207,207,207,207,207,298,298},//Groove Street
    {190,190,190,190,190,190,190,190,190,190,190,190,190,190},//LS Vagos
    {195,195,195,195,195,195,195,195,195,195,195,195,195,195},//Ballas
    {41,193,193,193,193,193,193,193,193,193,193,41,41,41},//El'Coronos
    {226,226,226,226,226,226,226,226,226,226,226,226,226,226},//SF Rifa
    {214,233,233,233,233,233,214,214,214,214,214,214,214,214},//Русская Мафия Female
    {169,169,169,169,169,169, 169, 169, 169,169,169,169,169,169},//Yakuza
    {91,91,91,91,91,91,91,91,91,91,91,91,91,91},//LCN Female
    {233,233,233,233,233,233,233,233,233,233,233,233,233,233},//Bikers
    {191,191,191,191,191,191,191,191,191,191,191,191,191,191},//Army
    {141,141,141,141,141,141,141,141,141,141,141,141,141,141},//BANK
    {219,308,308,308,308,308,219,219,219,219,219,219,219,219},//M4C LV
    {76,306,306,306,307,307,307,309,309,76,76,76,76,76},    //Police LV
    {211,211,211,211,211,211,211,211,211,211,211,211,211,211}, //Radio lv
    {56,56,56,56,56,56,56,56,56,56,56,56,56,56}, //wolfs
    {211,211,211,211,211,211,211,211,211,211,211,211,211,211}, //Radio lv
    {191,191,191,191,191,191,191,191,191,191,191,191,191,191}
};
new ItemsId[][] =
{
	{ 19421,19422,19423,19424,1}, //Наушники
	{ 19069,19068,19067,19554,18953,18954,1},//Шапки
	{ 18968,18967,18969,1},//Панамки
	{ 18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},//Кепки
	{ 19104,19105,19106,19107,19108,19109,1},//Каски
	{ 18925,18922,18923,18924,18921,1},//Береты
	{ 19519,19274,1},//Парики
	{ 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},//Очки
	{ 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1 }, //Банданы
	{ 18947,18948,18949,18950,18951,1 }, //Шляпы
	{ 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1 }, //Часы
	{ 3026,371,19559,1 },//портфели
	{ 18970, 18973, 18972, 18971,1 },//Шляпы
	{ 18910, 18909, 18908, 18907, 18906,1 }// Банданы на голову
};
new ItemsCost[][] =
{
	{ 3000,3000,3000,3000,1}, //Наушники
	{ 2500,2500,4000,6000,3000,3000,1},//Шапки
	{ 1500,1500,1500,1},//Панамки
	{ 1000,1000,1000,2000,2000,1500,4000,4000,3000,2500,2500,4000,1},//Кепки
	{ 2500,2500,3000,3000,3000,3000,1},//Каски
	{ 2000,2200,2200,2500,3000,1},//Береты
	{ 3000,3000,1},//Парики
	{ 500,2000,500,700,1200,1800,2800,2800,2800,3000,3000,3000,3000,3000,2000,2100,2100,4000,1},//Очки
	{ 2000,1000,1000,1700,1700,1700,1300,1000,1000,1700,1 }, //Банданы
	{ 2100,2100,2100,2100,2100,1 }, //Шляпы
	{ 40000,30000,45000,50000,60000,4000,4000,4000,5000,5500,5000,5200,5400,1 }, //Часы
	{1000,800,1200,1},//портфели
	{3400,3200,3500,3300,1},//шляпы
	{2000,2000,2000,2000,2000,1}//Банданы
};
new MSkins[][] =
{
	{ 1,   78,135,137,2,3,50,29,  37,  44,58, 68,  72,167,  73,  96,  97, 101, 119,153, 184, 206, 235, 236,20,242, 252, 258,98, 289, 290, 291, 294,299},
	{14, 79,134, 136,15,4,5,  19,21,22,143,67,  24,  25,  28,  36,	83,  84, 128, 156,182,144,183, 220, 221, 222, 241,18,262,180,293, 292, 297,296}
};
new GSkins[][] =
{
	{91,90, 93,150,138, 216, 226,56,55,225,233},
	{9, 11, 12, 40, 76, 190,215, 192,298,211,214}
};
new MSkinCost[] =
{
 	2000,2000,2000,2000,2000,4000,2000,4000,4000,4000,
	4000,6000,6000,7000,7000,7000,10000,
	13000,14000,20000,20000,20000,20000,21000,
	50000,75000,76000,77000,150000,250000,100000,
	100000,450000,500000,

	2000,2000,2000,2000,2000,4000,4000,4000,4000,4000,6000,6000,6000,
	6000,7000,7000,25000,25000,15000,15000,
	15000,25000,25000,20000,50000,60000,61000,80000,
	20000,25000,150000,150000,200000,450000
};
new GSkinCost[] =
{
 	2000,2000,5000,7000,10000,10000,
	10000,10000,20000,100000,200000,
	2000,2000,2000,5000,7000,
	25000,50000,70000,100000,350000,500000
};
new MBomzSkins[][] =
{
    {78, 135, 137, 200, 213, 230},
	{79, 136, 134, 35, 4 , 5}
};
new GBomzSkins[][] =
{
	{41, 77, 226},
	{13, 245, 214}
};
enum fillinfo
{
	Float:fPos_X,
	Float:fPos_Y,
	Float:fPos_Z,
	fBizzID
}
new Text3D:FuelText[23] = { NONE_3D_TEXT, ... };
new FuelInfo[31][fillinfo] =
{
    {1007.7967,-939.0165,42.1797,BIZ_GAS_LS_1},
	{1000.0021,-939.7214,42.1797,BIZ_GAS_LS_1},
	{1943.9103,-1778.4739,13.3906,BIZ_GAS_LS_2},
	{1944.1837,-1774.2662,13.3906,BIZ_GAS_LS_2},
	{1944.1002,-1771.2139,13.3900,BIZ_GAS_LS_2},
	{1944.1849,-1767.2201,13.3828,BIZ_GAS_LS_2},
	{296.1086,-171.5746,1.5781,BIZ_GAS_LV_2},
	{296.0072,-181.3552,1.5781,BIZ_GAS_LV_2},
	{300.9220,-181.4067,1.5781,BIZ_GAS_LV_2},
	{300.3612,-171.8585,1.5781,BIZ_GAS_LV_2},
	{653.0966,-559.7371,16.3359,BIZ_GAS_LV_4},
	{653.5595,-570.3958,16.3359,BIZ_GAS_LV_4},
	{612.1537,-1510.7721,14.9320,BIZ_GAS_LV_5},
	{1379.0016,459.1470,19.9564,BIZ_GAS_LV_6},
	{1383.4531,456.9103,19.9467,BIZ_GAS_LV_6},
	{1385.5155,461.5921,20.1510,BIZ_GAS_LV_6},
	{1380.5353,463.0790,20.1233,BIZ_GAS_LV_6},
	{2205.3462,2476.8647,10.4015,BIZ_AZS1},
	{1594.2661,2202.1384,10.4015,BIZ_AZS2},
	{609.9623,1700.6389,6.5774,BIZ_AZS3},
	{2147.2593,2750.6055,10.4014,BIZ_AZS4},
	{-1329.8168,2672.0408,49.6437,BIZ_AZS5},
	{-1470.7079,1863.8987,32.6328,BIZ_AZS6},
	{-98.7537,-1166.8053,2.5993,21},
	{22.4816,-2646.1042,40.4618,27},
	{-1606.3723,-2713.6147,48.5335,22},
	{-2249.9185,-2558.6838,31.8938,25},
	{-1666.6174,408.5915,7.1797,26},
	{-2022.0974,155.9591,28.8359,23},
	{-2261.1799,-2.6144,35.1719,29},
	{-2405.7432,974.6953,45.2969,24}

};
enum oInfo
{
	oID,
	oName[32],
	oLeader[24],
	oBank,
	oDrugs,
	oMats,
	Max_Rang,
	oOb4ak,
	oBenz,
	oRemont,
	oMask,
	oInvite,
	oInviteRank
}
new OrgInfo[MAX_ORGS][oInfo];
new Dorm_CP[MAX_ORGS] = {-1, ...};
new Text3D:DormText[MAX_ORGS] = {NONE_3D_TEXT, ...};
new Float:DormPos[27][3] =
{
	{0.0,0.0,0.0}, //None
	{0.0,0.0,0.0}, //LSPD
	{0.0,0.0,0.0}, //LVPD
	{0.0,0.0,0.0}, //CIA
	{0.0,0.0,0.0}, //SWAT
	{0.0,0.0,0.0}, //Medik
	{0.0,0.0,0.0}, //MeriaLS
	{0.0,0.0,0.0}, //MeriaSF
	{0.0,0.0,0.0}, //MeriaLV
	{0.0,0.0,0.0}, //Licensers
	{0.0,0.0,0.0}, //Radio
	{-590.6566, 2405.8647, 1503.81}, //Groove St.
	{-436.4060, 2414.9927, 1500.02}, //LS Vagos
	{-739.9849, 2418.2139, 1500.02}, //Ballas
	{-708.18, 2247.16, 1500.02}, //Coronos
	{-567.9110, 2244.9880, 1500.02}, //Rifa
	{-1376.59, 1730.02, 1501.45}, //RM
	{-1394.2540, 2101.7390, 1501.2599}, //Yakuza
	{-1147.6879, 1926.7343, 1501.1862}, //LCN
	{778.4292, 2518.5076, 1502.0092}, //Bikers
	{0.0,0.0,0.0}, //army
	{0.0,0.0,0.0}, //BANK
	{0.0,0.0,0.0}, //BANK
	{0.0,0.0,0.0}, //BANK
	{0.0,0.0,0.0}, //BANK
	{-599.0525,112.0772,1503.5990}, //wolfs
	{0.0,0.0,0.0} //sf
};
enum gzInfo
{
	gzFracID,
	Float:gzMin_X,
	Float:gzMin_Y,
	Float:gzMax_X,
	Float:gzMax_Y
};
new GZInfo[130][gzInfo];
new GangZone[130];
new Float:Bankomats[][4] =
{
	{1491.64, -1279.95, 14.27,90.00},
	{ 1641.49, -1172.26, 23.59, 270.00},
	{2250.82, -1667.82, 15.13,255.48},
	{461.87, -1512.79, 30.63,1.38},
	{2820.09, -1468.37, 15.97, 90.00},
	{-107.03, -305.86, 1.13, 180.00},
	{-1823.97, 1284.36, 16.03,110.70},
	{1810.93, -1905.23, 13.25,0.00},
	{1918.69, -1766.31, 13.25,-90.00},
	{1364.10, -1751.19, 13.25, 0.00},
	{1225.59, -1811.40, 16.25,90.00},
	{1147.24, -1773.07, 16.25,-90.00},
	{1232.28, -1415.86, 13.11,-90.00},
	{1367.62, -1290.17, 13.11,0.00},
	{753.93, -1384.86, 13.37,89.32},
	{1650.38, -1655.55, 22.19,90.50},
	{1949.18, -1986.50, 13.43,180.73},
	{2423.85, -1906.82, 13.22,359.22},
	{2233.128906, -1758.811646, 13.367500,269.85},
	{2351.486328, -1758.965332, 13.367500,269.85},
	{669.08, -577.52, 16.18,89.33},
	{ 2733.04, -2458.37, 13.41,179.86},
	{ -68.99, 1209.25, 19.61,90.00},
	{ 652.04, 1705.81, 6.99,41.29},
	{ 1154.41, 1363.19, 10.63,270.00},
	{ 1626.66, 1814.01, 10.53,270.00},
	{ 2018.83, 1005.11, 10.53,180.00},
	{ 2239.50, 1282.36, 10.63,360.00},
	{ 2197.74, 1395.31, 11.02,90.00},
	{ 2093.95, 1450.54, 10.48, 134.65},
	{ 2185.11, 1660.57, 10.76,285.21},
	{ 2257.25, 1804.71, 10.63,359.10},
	{ 2332.84, 2171.95, 10.60,180.00},
	{ 2619.40, 2345.90, 10.52,111.19},
	{ 2889.23, 2459.36, 10.89,134.97},
	{ 2597.39, 1086.47, 10.65,180.00},
	{ 2283.26, 2432.83, 10.62,90.00},
	{ 2479.92, 2520.86, 10.61,180.00},
	{ 2098.86, 2484.50, 10.90,89.78},
	{1177.1570, -610.8480, 1104.8850},
	{127.77, 1910.33, 18.55, 0.00},
	{-2674.95, 635.06, 14.30,90.0},
	{-2276.68, 535.11, 34.98,180.0},
	{-2186.82, 330.27, 35.09,90.0},
	{-2241.62, 83.38, 35.26,360.0},
	{-2034.73, -60.15, 35.11,90.0},
	{-2020.87, 128.47, 28.31,180.0},
	{-2017.89, 450.44, 35.05,180.0},
	{-1624.12, 716.50, 14.5,270.0},
	{-1712.51, 1349.73, 6.88,47.0},
	{-2765.62, 372.16, 6.00,180.0},
	{-2629.31, 1407.91, 6.85,159.0},
	{2847.007080, 1295.574707, 11.271100, 90.0},
	{-1970.933228, 116.201599, 27.543800, 270.0},
	{1496.193726, -1750.358398, 15.176110, 270.0},
	{1131.687622, -1473.322998, 15.690900, 270.0},
	{-2129.861084, -765.109985, 31.764299, 360.0},
	{1172.423584, -1329.188843, 15.149100, 270.0}
};
new Float:FerumCPPos[16][4] =
{
	{2558.4739,-1295.8499,1044.1250,0.0},
	{2556.1707,-1295.8499,1044.1250,0.0},
	{2553.7725,-1295.8497,1044.1250,0.0},
	{2544.3621,-1295.8524,1044.1250,0.0},
	{2542.0627,-1295.8502,1044.1250,0.0},
	{2542.0247,-1291.0040,1044.1250,180.0},
	{2544.2896,-1291.0055,1044.1250,180.0},
	{2553.8286,-1291.0051,1044.1250,180.0},
	{2556.1653,-1291.0057,1044.1250,180.0},
	{2558.4722,-1291.0055,1044.1250,180.0},
	{2560.0459,-1284.6926,1044.1250,90.0},
	{2560.0452,-1282.7565,1044.1250,90.0},
	{2552.0383,-1282.8169,1044.1250,90.0},
	{2552.0391,-1284.8226,1044.1250,90.0},
	{2544.0613,-1282.7789,1044.1250,90.0},
	{2544.0613,-1284.7793,1044.1250,90.0}
};
new Float:FerumPickupPos[6][3] =
{
    {2559.1011,-1299.8197,1044.1250},
	{2551.1067,-1299.7057,1044.1250},
	{2543.0305,-1299.8914,1044.1250},
	{2543.1702,-1287.7507,1044.1250},
	{2551.1094,-1287.7623,1044.1250},
	{2559.1382,-1287.6731,1044.1250}
};

enum griba
{
	Float:gribPos[3],
	gribCreat
}
new Float:GribInfo[106][griba] =
{
    {{702.8815,-705.6253,18.1862},-1},
    {{629.6369,-626.4828,16.8087},-1},
    {{552.2899,-710.6613,15.6666},-1},
    {{549.5466,-726.0712,16.4740},-1},
    {{498.2195,-679.3785,19.3385 },-1},
    {{435.9091,-699.4714,24.1253 },-1},
    {{410.0149,-693.8445,25.3369 },-1},
    {{423.6373,-632.5778,31.2596 },-1},
    {{383.9173,-598.8234,38.6380 },-1},
    {{365.3120,-605.5251,37.1760 },-1},
    {{389.1755,-564.6368,42.2504 },-1},
    {{396.1581,-548.8250,41.7694 },-1},
    {{411.8608,-449.7965,29.2956 },-1},
    {{424.7657,-430.9502,28.3068 },-1},
    {{441.9207,-381.7615,31.4900 },-1},
    {{439.1675,-350.8515,32.7176 },-1},
    {{271.2307,-263.2632,1.5781 },-1},
    {{108.2987,-136.0934,1.5781 },-1},
    {{175.8603,49.5331,2.3979 },-1},
    {{493.5621,97.1763,27.7191 },-1},
    {{547.1754,173.4039,27.1073 },-1},
    {{708.5907,307.0195,20.2344 },-1},
    {{743.8032,331.7983,20.3124 },-1},
    {{942.9208,409.0231,20.2344 },-1},
    {{1233.2169,536.8552,20.2344 },-1},
    {{1330.6167,494.6686,20.2184 },-1},
    {{1491.0624,324.2256,18.8417 },-1},
    {{1485.3533,273.8969,18.9174 },-1},
    {{1429.8097,164.6635,21.9831 },-1},
    {{1265.4169,-133.5778,39.7847 },-1},
    {{-372.7117,-89.7796,46.0523 },-1},
    {{-462.4359,-204.0353,77.9991 },-1},
    {{-554.9720,-221.0948,76.3361 },-1},
    {{921.3636,-479.7340,44.0374 },-1},
    {{890.4687,-494.8910,36.9549 },-1},
    {{878.1802,-483.0581,35.4741 },-1},
    {{1983.4618,89.3856,29.4775 },-1},
    {{2210.0349,146.4971,26.1758 },-1},
    {{-332.3008,-1987.6200,26.1051 },-1},
    {{-375.2895,-2004.4412,28.4262 },-1},
    {{-420.7345,-1962.1367,20.7989 },-1},
    {{-370.9467,-2049.1355,28.5462 },-1},
    {{-448.5980,-2072.9041,80.6654 },-1},
    {{-490.3048,-2121.0930,89.5054 },-1},
    {{-515.2039,-2223.6245,42.7538 },-1},
    {{-556.2787,-2223.5444,34.8664},-1},
    {{-653.4810,-2185.8540,14.6571 },-1},
    {{-697.4235,-2144.5728,24.7645 },-1},
    {{-913.5545,-2281.5803,45.6804 },-1},
    {{-924.2963,-2392.5601,63.9710 },-1},
    {{-921.2469,-2419.2676,73.1529 },-1},
    {{-928.6000,-2452.7974,90.8816 },-1},
    {{-1092.1782,-2576.2622,77.2730 },-1},
    {{-1114.4218,-2326.8787,44.7146 },-1},
    {{-1095.8896,-2317.7642,51.1427 },-1},
    {{-1036.0745,-2331.6079,60.0633 },-1},
    {{-1823.0471,-2169.1082,77.6051 },-1},
    {{-1745.4077,-2018.1677,74.5071 },-1},
    {{-1943.8130,-2144.5457,76.9309 },-1},
    {{-1955.9766,-2162.8020,75.9688 },-1},
    {{-1685.1254,-2385.9275,99.3290 },-1},
    {{-1643.7135,-2411.9897,95.7691 },-1},
    {{-1551.1573,-2505.1743,90.8708 },-1},
    {{-1465.4910,-2556.2893,63.7663 },-1},
    {{-1435.4855,-2544.3879,60.4281 },-1},
    {{-1401.0656,-2548.1582,55.9067 },-1},
    {{-1347.5752,-2507.9780,37.0068 },-1},
    {{-1328.0197,-2467.7183,27.8259 },-1},
    {{-1290.3135,-2479.8984,16.9108 },-1},
    {{-1277.4055,-2498.1367,11.4951 },-1},
    {{-568.3260,-2276.3220,27.5938 },-1},
    {{-653.1019,-2255.4465,23.3936 },-1},
    {{-614.5738,-2398.0959,28.0911 },-1},
    {{-620.2932,-2477.4644,52.8450 },-1},
    {{-673.6429,-2562.6052,58.4840 },-1},
    {{-797.0350,-2611.4380,85.9543 },-1},
    {{-814.8298,-2713.2485,90.4954 },-1},
    {{-900.3575,-2635.6716,96.5351 },-1},
    {{-908.8201,-2450.1675,86.1361},-1},
    {{-564.7324,-2000.7518,48.2172 },-1},
    {{-514.0831,-1990.8127,46.7821 },-1},
    {{-386.3437,-1968.6517,25.7109 },-1},
    {{-285.8642,-2063.6074,34.5075 },-1},
    {{-1735.6969,-2501.1594,10.1409 },-1},
    {{-1840.7139,-2382.2207,29.1400 },-1},
    {{-1906.1353,-2212.6089,77.4492 },-1},
    {{-1874.5731,-1969.2981,87.2874 },-1},
    {{-1739.6145,-1950.4650,98.8599 },-1},
    {{-1613.4684,-1867.4391,86.1701 },-1},
    {{-1868.5590,-1894.4634,88.9713 },-1},
    {{-2005.6901,-1937.4910,77.0140 },-1},
    {{-1672.1672,-1241.9645,56.0353 },-1},
    {{-1650.4935,-1225.4619,61.8498 },-1},
    {{-1650.6229,-1209.2308,64.9244 },-1},
    {{-1666.0083,-1198.4526,66.7604 },-1},
    {{-1663.8088,-1177.6703,74.1764 },-1},
    {{-1762.3182,-1037.3500,71.8555 },-1},
    {{-1776.3201,-1027.1984,67.7035 },-1},
    {{-1768.3276,-1001.6918,72.3583 },-1},
    {{-1728.5266,-979.0954,75.2465 },-1},
    {{-1717.1040,-972.0726,73.4562 },-1},
    {{-1705.9585,-976.0599,73.1204 },-1},
    {{-1699.4006,-992.9841,72.9413 },-1},
    {{-1693.8057,-1018.5599,72.9807 },-1},
    {{-1707.7991,-1044.0151,74.1118 },-1},
    {{-1734.0542,-924.7174,74.8878 },-1}
};

/*enum porinfo
{
	Float:porPos[3],
	porCreat
}
new Float:PodarokInfo[85][porinfo] =
{
	{{1866.2776,-1604.3927,13.5391},-1},
	{{1814.5684,-1787.9949,13.4401},-1},
	{{1899.3964,-1976.2174,13.4399},-1},
	{{2065.4348,-1899.6436,13.4442},-1},
	{{2197.3042,-1855.2643,13.3267},-1},
	{{2313.6838,-1795.1702,13.4699},-1},
	{{2407.0701,-1954.1401,13.4406},-1},
	{{2274.1104,-2103.2578,13.4973},-1},
	{{2177.1252,-2160.6355,13.4378},-1},
	{{1941.1720,-2140.8835,13.4478},-1},
	{{1482.3195,-2325.6230,13.4409},-1},
	{{1661.6312,-1978.0310,23.7100},-1},
	{{1512.1938,-1658.8248,13.4357},-1},
	{{1222.8649,-1697.8893,13.4395},-1},
	{{1063.3287,-1564.4937,13.4395},-1},
	{{967.8336,-1808.8470,14.0392},-1},
	{{670.1074,-1421.6511,14.6103},-1},
	{{583.8209,-1309.3801,13.7937},-1},
	{{300.5122,-1360.0142,14.0718},-1},
	{{194.8382,-1644.4232,14.0252},-1},
	{{220.7997,-1775.0699,3.8997},-1},
	{{654.8619,-1857.2825,5.2646},-1},
	{{363.6814,-2043.7883,7.6767},-1},
	{{832.4582,-2058.2939,12.7593},-1},
	{{333.6727,-1520.2332,35.7631},-1},
	{{459.7726,-1522.1858,30.2806},-1},
	{{775.7328,-1412.9839,13.4245},-1},
	{{1183.7593,-1287.9641,13.4399},-1},
	{{990.7426,-1133.5524,23.7192},-1},
	{{757.9119,-1146.1381,22.6154},-1},
	{{690.0941,-1128.2615,16.7324},-1},
	{{1025.8206,-974.4745,42.3914},-1},
	{{1439.4906,-963.5345,36.1676},-1},
	{{1483.8202,-1011.8369,26.7372},-1},
	{{1971.6509,-1177.9795,19.9193},-1},
	{{2409.0242,-1391.9742,24.1428},-1},
	{{2683.8762,-1414.5601,30.3843},-1},
	{{2586.3250,-1249.4274,46.4436},-1},
	{{2802.6338,-1899.1608,10.9829},-1},
	{{2933.0454,-1322.6327,10.6862},-1},
	{{2494.3455,-2177.5037,13.4812},-1},
	{{1974.2274,-1674.5240,15.8614},-1},
	{{822.2839,-1353.1713,13.4293},-1},
	{{65.8857,-1533.7729,5.0430},-1},
	{{452.4081,-1233.7101,49.0372},-1},
	{{1001.4413,-791.0386,100.4963},-1},
	{{1300.8093,-1240.1006,13.4411},-1},
	{{1023.7307,-1369.5272,13.4544},-1},
	{{744.0558,-880.7582,42.8126},-1},
	{{714.4377,-571.5151,16.2290},-1},
	{{261.8877,-365.6202,8.9916},-1},
	{{143.8467,-131.9939,1.4706},-1},
	{{495.1965,209.4183,12.4406},-1},
	{{1343.1210,292.7504,19.4472},-1},
	{{1554.8766,29.5960,24.0460},-1},
	{{2275.3826,31.5334,26.3556},-1},
	{{2536.9907,-17.8911,26.5074},-1},
	{{1574.1636,816.5991,8.7627},-1},
	{{1186.2969,1178.7659,8.5832},-1},
	{{1071.7129,1382.2140,10.8203},-1},
	{{1302.0533,1650.0642,19.8637},-1},
	{{1394.0889,1957.2930,10.8203},-1},
	{{1551.3290,2290.4065,10.8203},-1},
	{{1519.1072,2376.7710,10.8203},-1},
	{{1371.4966,2611.3972,10.8203},-1},
	{{1685.7153,2825.1113,10.8203},-1},
	{{2235.4685,2780.5583,10.8203},-1},
	{{2628.2214,2083.9587,10.8176},-1},
	{{2778.1863,1732.5300,11.3926},-1},
	{{2817.2224,1308.1560,10.9609},-1},
	{{2563.7805,1064.5363,10.8203},-1},
	{{2095.9702,1186.2184,10.8203},-1},
	{{1874.4264,978.4785,10.8203},-1},
	{{1816.7653,1521.9406,6.8753},-1},
	{{2034.7957,1701.6351,10.8203},-1},
	{{2160.2742,2007.1144,10.8203},-1},
	{{2078.5476,2299.5012,10.7913},-1},
	{{2019.9073,2493.1055,10.8203},-1},
	{{2273.3745,2520.7566,10.8203},-1},
	{{2419.2251,2346.9021,10.8203},-1},
	{{2616.3193,2328.4590,10.8203},-1},
	{{2615.3694,1972.9207,10.8203},-1},
	{{2558.0049,1765.8701,11.0312},-1},
	{{2419.6987,1705.2953,10.8203},-1},
	{{2122.1624,1522.2683,10.8203},-1}
};
*/
new scSpawnTime;
new scSpawnTimer;
enum cInfo
{
    cID,
    cModel,
    Float:cSell_X,
	Float:cSell_Y,
	Float:cSell_Z,
    Float:cSell_A,
	Float:cPos_X,
	Float:cPos_Y,
	Float:cPos_Z,
    Float:cPos_A,
 	cInterior,
	cVirtualWorld,
	cColor_1,
	cColor_2,
	cOwner[MAX_PLAYER_NAME],
	cShtrafer,
	cNumber[30],
	cKeyer[MAX_PLAYER_NAME],
	cLock,
	cCost,
	cShtraf,
	cAlarmON,
	cKeyIN,
	Float:cMilage,
	cParkedInGarage,
	cParkedInParking,
	cParkedInStanartParking,
	cShtrafName[MAX_PLAYER_NAME],
	cAddCar,
	Float:cFuel,
	cTrunkItem[30],
	cTrunkItemAmount[30],
	cTrunkItemColor[30],
	cTrunkItemEnchant[30],
    cTrunkItemMining[30],
	cSlotItem[8],
	cModelObject[6],
	Float:cObjectPosX[6],
	Float:cObjectPosY[6],
	Float:cObjectPosZ[6],
	Float:cObjectRotX[6],
	Float:cObjectRotY[6],
	Float:cObjectRotZ[6],
	cObjectUsed[6]
};
new CarInfo[MAX_OWNABLECARS][cInfo];
new GetVehicle[MAX_PLAYERS][MAX_OWNABLECARS];
enum scInfo
{
	scID,
	scModel,
	scCount,
	scSpawn,
	Float:sc_Pos_X,
	Float:sc_Pos_Y,
	Float:sc_Pos_Z,
	Float:sc_Pos_A
}
new SellInfo[MAX_SELLCARS][scInfo];
enum hInfo
{
	hID,
	Float:hEnter_X,
	Float:hEnter_Y,
	Float:hEnter_Z,
	Float:hExit_X,
	Float:hExit_Y,
	Float:hExit_Z,
	hCost,
	hLevel,
	hOwner[24],
	hInt,
	hLock,
	hMoney,
	hDrugs,
	hMats,
	hBar,
	hPodval,
	hNalog,
	hNalog2,
	hProducts,
	hKlass,
	hMed,
	hGarage,
	Float:hGarage_X,
	Float:hGarage_Y,
	Float:hGarage_Z,
	hDescription[32],
	hItem[90],
	hItemAmount[90],
	hItemColor[90],
	hItemEnchant[90],

	/*Система майнинга*/
    hItemMining[90],
    hMiningPodval,
    bool:hMiningStatus[20],//кажные 4 новый ид шкафа
    Float:hMiningProfit[20],
    hMiningLevel[20],
    Float:hMiningState[20]
}
new HouseInfo[MAX_HOUSES][hInfo];
new HRoomOwner[MAX_HOUSES][6][MAX_PLAYER_NAME];
enum bInfo
{
	bID,
	bState,
	Float:bEnter_X,
	Float:bEnter_Y,
	Float:bEnter_Z,
	Float:bExit_X,
	Float:bExit_Y,
	Float:bExit_Z,
	bOwner[24],
	bZam[24],
	bDescription[32],
	bName[30],
	bCost,
	bNalog,
	bInt,
	bLock,
	bMoney,
	Float:bEnterPrice,
	bProducts,
	Float:bProdPrice,
	bKrasher,
	bNum,
	bVisit,
	bWin,
	bBuyCost,
	bNeedItem,
	bDayOfWeak0,
	bDayOfWeak1,
	bDayOfWeak2,
	bDayOfWeak3,
	bDayOfWeak4,
	bDayOfWeak5,
	bDayOfWeak6,
	bItemCost[20]
}
new BizInfo[MAX_BIZ][bInfo];
new Float:TStripPos[MAX_STRIPS][3];
new StripCount;
enum QuestInfo
{
	QuestName[64],
	QuestText[600],
	LastProgress
}
new QI[][QuestInfo] =
{
    {"Сделать паспорт {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Ейй привет братишка, ты меня наверно не знаешь, давай я представлюсь.\nЯ сотрудник компании: 'Путь к успеху', и я буду первым кто поможет тебе\nизменить свою жизнь в лучшую сторону!\nИщи автобус или мопед и направляйся в мэрию чтобы сделать паспорт!\n\n{DA9815}Для выполнения задания необходимо добраться к мэрии и сделать паспорт\nзатем вернуться обратно для получения награды!\n\nНаграда за выполение:\n350$ и 1ехр",2},
    {"Лучшая работа {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Снова здравствуй! У меня знакомый есть, ему нужна рабочая сила на ферме, а тебе как-раз\nпервый заработок. Отправляйся туда и поработай не много.\n\n{DA9815}Для выполнения задания необходимо устроиться начинающим фермером и\nперенести 30 стогов сена на склад.\nПосле переодеться, забрать зарплату и вернуться обратно для получения награды!\n\nНаграда за выполение:\n450$ и 1ехр",30},
    {"Нужно разгрузить вагоны! {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Недалеко от сюда, привезли вагоны с грузом, нужно их разгрузить\nпотому что на складе нет продуктов для развозки по магазинам!\nЗаймись этим, за-одно не много заработаешь.\n\n{DA9815}Для выполнения задания необходимо устроиться грузчиком и\nперенести 20 предметов на склад Лос Сантоса.\nПосле переодеться, забрать зарплату и вернуться обратно для получения награды!\n\nНаграда за выполение:\n550$ и 1ехр",20},
    {"Время что-то получить {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Эх, вот я стою и думаю, ты же вроде умный человек, в ПДД разбираешься, почему бы\nтебе не получить вод. удостоверение? Короче, вот что я тебе скажу, езжай в\nавтошколу, сдай там теорию и практику, тогда и поговорим.\n\n{DA9815}Для выполнения задания необходимо приехать в автошколу и получить права, сдав при этом все экзамены.\nПосле вернуться обратно для получения награды!\n\nНаграда за выполение:\n550$ и 2ехр",2},
    {"Хватит сложной работы! {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Дружище, слушай что я придумал! Короче, у меня в одной из\nфирм по развозке пиццы есть знакомый, он сможет помочь тебе туда устроиться.\nГони в фирму Лос Сантоса, отработай и доложи мне ситуацию!\n\n{DA9815}Для выполнения задания необходимо приехать на фирму по развозке пиццы, устроиться туда и развезти 15 заказов.\nПосле вернуться обратно для получения награды!\n\nНаграда за выполение:\n750$ и 1ехр",15},
    {"Пора прощаться {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Эх, к сожалению я с тобой больше не могу работать.\nНаправляйся к Майклу у него на тебя планы. Будь осторожен!\n\n{DA9815}Для выполнения задания необходимо приехать к Майклу и познакомиться с ним.\nТеперь он будет давать вам задания!\n\nНаграда за выполение: 450$",1},
    {"Трудные будни {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Скажу прямо, гони на завод, и поработай не много.\nГоворят там сейчас не плохо платят, так-что это пойдет тебе на пользу.\n\n{DA9815}Для выполнения задания необходимо приехать на завод и сделать 25 материалов.\nПосле окончания работы вернуться обратно к Майклу за наградой!\n\nНаграда за выполение:\n 600$ и 1ехр",25},
    {"Кто ты без телефона? {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Слушай меня дорогой, а не пора ли тебе купить телефон? или он у тебя уже есть?\nВ общем мне все равно, если нету езжай в магазин 24/7 и купи нормальный\nтелефон, он тебе в любом случае пригодится!\n\n{DA9815}Для выполнения задания необходимо приехать в любой магазин 24/7 и купить телефон\nв разделе техника. После вернуться обратно к Майклу за наградой!\n\nНаграда за выполение:\n 400$ и 1ехр",1},
    {"Че ты как бомж? {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Дружище, мне кажется что ты с такими шмотками далеко не пройдешь.\nЕзжай в любой магазин одежды, и прикупи что-нибудь получше этого!\nЗатем возращайся обратно за наградой.\n\n{DA9815}Для выполнения задания необходимо приехать в любой магазин одежды\nи купить новый скин. После вернуться обратно к Майклу за наградой!\n\nНаграда за выполение:\n 6000$ и 1ехр",1},
    {"Человек с картой! {6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Эх, теперь тебе смогут сделать банкоскую карту, так-как она тебе очень понадобится!\nЕзжай в Банк Las-Venturas, и займись этим делом.\nВнимательно заполняй документы!\n\n{DA9815}Для выполнения задания необходимо приехать в банковское отделение Las-Venturas\nи зарегистрировать на себя банк. карту, информацию о нее можно найти в /help.\nПосле вернуться обратно к Майклу за наградой!\n\nНаграда за выполение:\n 2000$ и 1ехр",1},
    {"Уроки самообороны!{6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Ой дружище, как видишь мы тебе не плохо помогли устроиться тут.\nНо беда может наступить уже скоро, тебе хоть драться научиться надо!\nЕзжай в спортзал и немного потренируйся. \n\n{DA9815}Для выполнения задания необходимо приехать в спортзал ЛС, переодеться и ударить грушу 100 раз!\nПосле вернуться обратно к Майклу за наградой!\n\nНаграда за выполение:\n 1350$ и 1ехр",99},
    {"Пора пострелять{6DA5EF}[Сюжет]{FFFFFF}","{FFFFFF}Теперь ты знаешь где можно изучить стили боя, но это не все! На борьбе тоже далеко не уйдешь\nесли вдруг тебе попадется бандит с оружием, что ты делать будешь?\nЕзжай в тир и научись стрелять!\n\n{DA9815}Для выполнения задания необходимо приехать в Тир ЛС и постаратся поразить 30 целей.\nПосле вернуться обратно к Майклу за наградой!\n\nНаграда за выполение:\n 5000$ и 2ехр",30},
    {"Перевозим провизию!{6DA5EF}[Ежедневное]{FFFFFF}","{FFFFFF}Привет, пришел за работой?\nУ меня всегда есть чем занять человека! В нашу семью нужно пополнять провизию, ибо нам не выжить.\nВозьми один из грузовиков и перевези 3 груза из порта СФ!\n\n{DA9815}Для выполнения задания необходимо взять грузовик вашей семьи и сделать 3 рейса\nпо перевозке провизии на склад семьи!\nПо завершению задания, нужно вернуться к Нейтону за наградой.\n\nНаграда за выполнение:\n 2 семейных талона.",3}
};
new QuestProgress[MAX_PLAYERS][sizeof(QI)];
new QuestShow[MAX_PLAYERS][sizeof(QI)];
new AcceptQuest[MAX_PLAYERS][sizeof(QI)];
new Float:SpawnInfo[28][4] =
{
	{1874.8156, 2228.1123, 1036.3204, 90.7581},				    //Int:  0 | World: 0 | None
	{-937.7300, -2363.8003, 1701.0859, 35.5382},				//Int:  6 | World: 10 | LSPD
	{2339.45, 82.01, 1501.99,180.00},				        //Int:  6 | World: 11 | RCPD
	{-2517.5935,-650.5844,1327.9659,358.1692},				//Int:  2 | World: 12 | FBI
	{2339.45, 82.01, 1501.99,180.00},				        //Int:  10 | World: 0 | SFPD
	{-1770.5271,-1990.9928,1500.7853,113.1071},			//Int:  0 | World: 0 | Medic
	{1498.7437,-1284.4575,113.8212,59.1108},		//Int:  0 | World: 0 | Meria LS
	{582.7991,1473.3457,1900.7980,94.9175},				    //Int:  3 | World: 1 | ARMY LV
	{-1770.5271,-1990.9928,1500.7853,113.1071},		    //Int:  3 | World: 2 | MedicSF
	{-2587.53, -1390.88, 1500.76,0.000},			    	//Int:  3 | World: 5 | Licensers
	{-211.50, 1300.34, 1507.68,270.0},        		        //Int:  1 | World: 1 | Radio
	{-560.5607, 2414.4805, 1500.9701, 90.0},			    //Int:  7 | World: 1 | Groove
	{-404.95, 2416.19, 1500.97,90.0},				        //Int:  7 | World: 2 | Vagos
	{-725.4955, 2402.1990, 1500.9508,0.0},			     	//Int:  7 | World: 3 | Ballas
	{-719.47, 2235.79, 1500.97,0.000},				        //Int:  7 | World: 4 | Coronos
	{-561.1273, 2259.4351, 1500.9692,180.0},				//Int:  7 | World: 5 | Rifa
	{-1390.49, 1718.02, 1502.28,90.0},			            //Int:  3 | World: 0 | Russian
	{-1409.89, 2072.84, 1502.02,0.000},     				//Int:  5 | World: 0 | Yakuza
	{-1126.22, 1931.18, 1501.96,180.0},		                //Int:  5 | World: 1 | LCN
	{778.4115, 2509.0295, 1501.9790,270.0},		            //Int:  3 | World: 0 | Bikers
	{459.18, 878.14, 1500.96, 180.000},	                    //Int:  0 | World: 0 | Army
	{-2684.58740, 820.24365, 1500.97046,180.000},		    //Int:  1 | World: 1 | Bank
	{-1770.5271,-1990.9928,1500.7853,113.1071},		    //Int:  1 | World: 2 | MedicLV
	{2339.45, 82.01, 1501.99,180.00},		                //Int:  1 | World: 2 | LVPD
	{-211.50, 1300.34, 1507.68,270.0},		                //Int:  1 | World: 2 | CNN LV
	{-596.0529,130.2787,1501.0900,234.3755},                //Int:  7 | World: 7 | Night Wolfs
	{-211.50, 1300.34, 1507.68,270.0},		                //Int:  1 | World: 3 | CNN SF
	{-1609.6104,-113.5421,1501.0859,179.3103}
};
new SpawnIntWorld[28][2] =
{
	{0,0},//Int: 0 | World: 0 | None
	{2,2},//Int: 6 | World: 10 | LSPD
	{6,11},//Int: 6 | World: 11 | LVPD
	{2,0},//Int: 2 | World: 12 | FBI
	{10,0},//Int: 10 | World: 0 | police sf
	{2,1},//Int: 0 | World: 0 | Medic
	{2,2},//Int: 0 | World: 0 | Meria LS
	{2,1},//Int: 3 | World: 1 | ARMY LV
	{3,3},//Int: 3 | World: 2 | hospital sf
	{3,5},//Int: 3 | World: 5 | Licensers
	{18,1},//Int: 1 | World: 1 | Radio
	{7,1},//Int: 7 | World: 1 | Groove
	{7,2},//Int: 7 | World: 2 | Vagos
	{7,3},//Int: 7 | World: 3 | Ballas
	{7,4},//Int: 7 | World: 4 | Coronos
	{7,5},//Int: 7 | World: 5 | Rifa
	{3,0},//Int: 3 | World: 0 | Russian
	{5,0},//Int: 5 | World: 0 | Yakuza
	{5,1},//Int: 5 | World: 1 | LCN
	{3,1},//Int: 3 | World: 1 | Bikers
	{2,1},//army
	{1,1}, //банк
	{3,2}, //medic lv
	{6,12}, //lvpd
	{18,2}, //radio lv
	{7,7}, //wolfs
	{18,3}, //sf news
	{2,1}//armysf
};
enum gpsInfo
{
	gpsName[50],
	Float:gpsPos[3],
	bool:gpsCP
}
new GpsInfo[16][gpsInfo] =
{
	{"Автошкола",				{-2027.4399,-73.7133,34.8768}, true},
	{"Мэрия ЛС",				{1495.3958,-1283.8339,14.5343}, true},
	{"Ферма",					{-27.0336,163.0780,2.4297}, true},
	{"Грузчики",				{1969.7396,-1969.3291,13.1014}, true},
	{"Завод",					{-86.1893,-305.8608,1.4219}, true},
	{"Банк",					{1480.9033,-1744.6389,13.5469}, true},
	{"Устройство на работу",	{1289.0641,-1271.5160,13.5400}, true},
	{"Больница ЛС", 			{1177.6864,-1323.2448,14.0830}, true},
	{"Больница LV", 			{1641.8849,1833.5286,10.8508}, true},
	{"Больница SF", 			{-2666.6680,580.7857,14.4609}, true},
	{"ЖД Los Santos", 			{1805.0404,-1908.3304,13.3983}, true},
	{"ЖД San Fierro", 			{-1994.0475,100.2056,27.5391}, true},
	{"ЖД Las-Venturas", 		{2827.3931,1255.9264,10.7685}, true},
	{"Полиция LS", 				{1540.0491,-1676.1680,13.2146}, true},
	{"Полиция SF", 				{-1629.0847,726.1740,14.1306}, true},
	{"Полиция LV", 				{2285.9685,2420.4519,10.4922}, true}

};
new Float:MusorPos[MAX_TRASH][4] =
{
    {1464.30004883,-725.00000000,92.50000000,110.00000000},
	{1514.50000000,-776.00000000,79.69999695,126.00000000},
	{1523.40002441,-794.79998779,74.09999847,87.99670410},
	{1522.69995117,-837.29998779,67.00000000,87.99499512},
	{1459.30004883,-888.09997559,55.29999924,337.99499512},
	{1415.69995117,-930.59997559,35.70000076,175.99438477},
	{1444.40002441,-934.40002441,36.09999847,175.98999023},
	{1273.50000000,-914.29998779,42.00000000,185.98999023},
	{1236.59997559,-920.79998779,42.70000076,189.98754883},
	{1179.19995117,-932.09997559,43.00000000,189.98657227},
	{1133.69995117,-1033.09997559,31.70000076,179.98657227},
	{1116.69995117,-1033.19995117,31.70000076,179.98352051},
	{1091.90002441,-1071.90002441,27.89999962,89.98352051},
	{1091.90002441,-1097.69995117,24.89999962,89.97802734},
	{1172.00000000,-1104.69995117,24.70000076,89.97802734},
	{1171.90002441,-1070.80004883,28.10000038,89.97802734},
	{1199.50000000,-1029.09997559,31.79999924,179.97802734},
	{1237.30004883,-1028.50000000,31.79999924,179.97802734},
	{820.79998779,-1411.90002441,13.30000019,359.97802734},
	{848.90002441,-1412.09997559,13.19999981,359.97253418},
	{883.79998779,-1412.30004883,12.89999962,359.97253418},
	{908.59997559,-1467.90002441,13.39999962,269.97253418},
	{908.29998779,-1509.59997559,13.39999962,269.96704102},
	{858.09997559,-1523.90002441,13.39999962,269.96704102},
	{801.00000000,-1689.40002441,13.39999962,269.96704102},
	{801.29998779,-1703.59997559,13.39999962,269.96704102},
	{801.09997559,-1724.00000000,13.39999962,269.96704102},
	{796.00000000,-1759.90002441,13.30000019,179.96704102},
	{764.29998779,-1744.19995117,12.10000038,89.96704102},
	{763.40002441,-1690.69995117,4.30000019,89.96154785},
	{788.09997559,-1665.59997559,13.30000019,179.96154785},
	{648.29998779,-1644.30004883,14.80000019,89.95605469},
	{647.59997559,-1614.40002441,15.00000000,89.95056152},
	{196.10000610,-1389.90002441,48.00000000,40.00000000},
	{255.50000000,-1337.59997559,52.70000076,39.99572754},
	{289.29998779,-1314.19995117,53.90000153,39.99572754},
	{347.29998779,-1280.59997559,53.79999924,29.99572754},
	{409.60000610,-1252.90002441,51.59999847,29.99267578},
	{563.00000000,-1196.00000000,44.59999847,20.00000000},
	{634.90002441,-1111.09997559,46.50000000,39.99511719},
	{684.40002441,-1061.69995117,49.40000153,59.99023438},
	{725.79998779,-985.70001221,52.70000076,59.98535156},
	{312.60000610,-1196.09997559,76.00000000,219.98535156},
	{253.89999390,-1239.09997559,72.30000305,210.98474121},
	{220.69999695,-1267.30004883,65.19999695,239.98474121},
	{339.50000000,-1197.19995117,76.30000305,39.97985840},
	{402.70001221,-1168.40002441,78.30000305,149.97924805},
	{579.20001221,-1127.40002441,49.20000076,199.97436523},
	{632.59997559,-1093.40002441,46.79999924,213.97314453},
	{668.00000000,-1057.00000000,49.29999924,233.96972656},
	{691.40002441,-1014.79998779,51.70000076,243.96484375},
	{828.70001221,-868.50000000,68.59999847,201.96240234},
	{872.20001221,-855.09997559,77.30000305,201.96166992},
	{921.09997559,-832.20001221,93.59999847,201.96166992},
	{831.59997559,-880.29998779,68.19999695,331.96166992},
	{924.59997559,-842.20001221,93.59999847,21.95739746},
	{976.59997559,-814.29998779,97.59999847,21.95617676},
	{1030.19995117,-791.50000000,102.80000305,21.95617676},
	{1081.80004883,-777.50000000,107.69999695,1.95617676},
	{1077.90002441,-765.50000000,107.59999847,189.95556641},
	{1063.90002441,-623.79998779,115.69999695,9.95361328},
	{1082.59997559,-626.00000000,113.00000000,9.94812012},
	{998.20001221,-644.50000000,121.50000000,29.94812012},
	{910.70001221,-681.79998779,116.19999695,229.94323730},
	{949.00000000,-696.29998779,121.90000153,29.93835449},
	{898.40002441,-769.40002441,97.09999847,9.93774414},
	{832.79998779,-798.29998779,73.09999847,9.93713379},
	{794.29998779,-807.40002441,65.90000153,9.93713379},
	{897.29998779,-711.79998779,109.59999847,260.00000000},
	{239.65, -95.84, 1.58,   91.32},
	{239.74, -118.88, 1.58,   91.32},
	{325.93, -121.10, 1.58,   271.10},
	{325.89, -95.86, 1.58,   271.10},
	{265.45, -64.92, 1.58,   179.96},
	{239.69, -26.58, 1.58,   89.71},
	{736.57, -523.21, 16.21,   179.02},
	{779.00, -523.25, 16.21,   179.02},
	{813.12, -523.26, 16.21,   179.96},
	{738.81, -536.99, 16.21,   1.11},
	{777.70, -536.99, 16.21,   1.94},
	{2350.80, 188.64, 26.22,   91.00},
	{2350.75, 134.63, 26.22,   91.00},
	{2350.71, 105.32, 26.22,   91.00},
	{2400.71, 22.17, 26.22,   91.00},
	{2470.83, 66.71, 26.22,   91.00},
	{2540.73, 76.81, 26.22,   91.00},
	{2540.66, 5.85, 26.22,   91.00},
	{2498.47, 104.91, 26.22,   359.23},
	{2431.72, -35.15, 26.22,   359.23},
	{2378.88, -35.13, 26.22,   359.23},
	{2313.62, -105.08, 26.22,   359.23},
	{2259.08, -105.03, 26.22,   359.23},
	{2443.21, 48.53, 26.22,   178.94},
	{2421.21, 48.45, 26.22,   178.94},
	{2383.01, 98.79, 26.22,   178.94},
	{2475.12, 118.51, 26.22,   178.94},
	{2512.74, 118.49, 26.22,   178.94},
	{2509.32, -15.08, 26.22,   359.23},
	{1903.05, -1049.86, 23.89,   358.00},
	{1953.33, -1054.39, 24.10,   350.34},
	{2026.01, -1060.01, 24.55,   157.00},
	{2065.52, -1077.81, 24.76,   157.00},
	{2105.70, -1095.61, 25.04,   155.39},
	{2153.94, -1088.39, 25.03,   155.00},
	{2023.31, -1129.72, 24.72,   179.00},
	{1992.58, -1129.78, 25.64,   179.00},
	{1944.96, -1129.73, 25.64,   181.21},
	{1904.3395, -1129.8004, 24.6400,   181.21},
	{2077.97, -1127.56, 23.92,   90.31},
	{2077.91, -1163.08, 23.92,   89.89},
	{2089.25, -1294.75, 23.89,   179.96},
	{2128.76, -1294.73, 23.89,   179.96},
	{2191.03, -1294.59, 23.89,   179.96},
	{2247.32, -1294.73, 23.89,   179.96},
	{2094.57, -1226.91, 23.89,   360.00},
	{2154.48, -1226.86, 23.89,   360.00},
	{2205.32, -1226.86, 23.89,   360.00},
	{2253.96, -1226.92, 23.89,   360.00},
	{2151.10, -1306.91, 23.89,   360.00},
	{2107.25, -1306.97, 23.89,   360.00},
	{2227.45, -1390.26, 23.89,   360.00},
	{2263.73, -1390.36, 23.89,   360.00},
	{2206.45, -1403.90, 23.89,   269.38},
	{2147.68, -1378.29, 23.89,   179.96},
	{2135.47, -1426.23, 23.89,   90.49},
	{2135.48, -1470.86, 23.89,   90.49},
	{2186.56, -1378.25, 23.89,   179.96},
	{2206.53, -1488.03, 23.89,   269.38},
	{1855.69, -1926.20, 13.44,   180.00},
	{1903.58, -1926.18, 13.44,   180.00},
	{1944.11, -1926.27, 13.44,   180.00},
	{1995.55, -1718.13, 13.50,   270.55},
	{1995.59, -1647.34, 13.50,   270.55},
	{2074.87, -1728.97, 13.50,   270.55},
	{2074.88, -1706.43, 13.50,   270.55},
	{2074.80, -1649.38, 13.50,   270.55},
	{2074.79, -1624.52, 13.50,   270.55},
	{2008.48, -1635.21, 13.50,   90.28},
	{2008.48, -1721.76, 13.50,   90.28},
	{2314.05, -1726.07, 13.42,   179.55},
	{2386.48, -1725.76, 13.42,   179.55},
	{2389.23, -1653.06, 13.42,   179.55},
	{2366.88, -1652.96, 13.42,   179.55},
	{2285.65, -1652.69, 14.98,   182.25},
	{2642.57, 767.02, 10.84,   0.59},
	{2618.29, 767.06, 10.84,   0.59},
	{2565.09, 767.02, 10.84,   0.59},
	{2529.38, 766.97, 10.84,   0.59},
	{2551.88, 699.42, 10.87,   180.32},
	{2398.52, 706.79, 10.84,   0.59},
	{2369.56, 706.98, 10.84,   0.59},
	{2329.12, 706.88, 10.84,   0.59},
	{2258.87, 706.79, 10.84,   0.59},
	{2203.37, 706.77, 10.84,   0.59},
	{2122.67, 666.96, 10.84,   0.59},
	{2075.39, 667.23, 10.84,   0.59},
	{2030.08, 666.90, 10.84,   0.59},
	{2028.57, 746.85, 10.84,   0.59},
	{2072.46, 746.99, 10.84,   0.59},
	{2114.22, 747.03, 10.84,   0.59},
	{2394.46, 719.40, 10.87,   180.32},
	{2433.57, 724.43, 10.87,   90.27},
	{2433.68, 679.99, 10.87,   90.27},
	{2343.90, 719.52, 10.87,   180.32},
	{2393.25, 639.58, 10.87,   180.32},
	{2341.52, 639.45, 10.87,   180.32},
	{2252.82, 639.42, 10.87,   180.32},
	{2203.64, 639.33, 10.87,   180.32},
	{2201.28, 719.26, 10.87,   180.32},
	{2120.93, 759.50, 10.87,   180.32},
	{2070.09, 759.47, 10.87,   180.32},
	{2023.90, 759.45, 10.87,   180.32},
	{2034.44, 679.66, 10.87,   180.32},
	{2095.44, 679.43, 10.87,   180.32},
	{2153.85, 764.59, 10.87,   90.27},
	{1861.23, 708.06, 10.87,   270.72},
	{1303.57, 2034.20, 10.63,   89.38},
	{1303.69, 2001.51, 10.63,   89.38},
	{1394.07, 1990.95, 10.63,   89.38},
	{1393.90, 2024.64, 10.63,   89.38},
	{1393.58, 1926.95, 10.63,   89.38},
	{1533.87, 2074.94, 10.63,   89.38},
	{1533.83, 2114.63, 10.63,   89.38},
	{1624.99, 2154.48, 10.63,   89.38},
	{1624.71, 2096.19, 10.63,   89.38},
	{1624.71, 2045.27, 10.63,   89.38},
	{1381.06, 1994.91, 10.63,   271.13},
	{1380.93, 2035.42, 10.63,   269.63},
	{1612.15, 2035.01, 10.63,   269.63},
	{1611.98, 2065.01, 10.63,   269.63},
	{1612.14, 2115.02, 10.63,   269.63},
	{1611.95, 2148.89, 10.63,   269.63},
	{1699.60, 2121.21, 10.63,   269.63},
	{1700.27, 2075.47, 10.63,   269.63},
	{1700.60, 2040.05, 10.63,   269.63},
	{1700.92, 1985.08, 10.63,   269.63},
	{1560.99, 2011.05, 10.63,   270.30},
	{1561.03, 1989.74, 10.63,   270.30},
	{1380.92, 1895.00, 10.63,   271.13},
	{1480.91, 1892.00, 10.63,   271.13},
	{1480.97, 1937.24, 10.63,   271.13},
	{1300.29, 2547.20, 10.88,   90.08},
	{1391.93, 2551.38, 10.87,   90.08},
	{1484.43, 2532.94, 10.87,   90.08},
	{1594.32, 2663.57, 10.87,   90.08},
	{1914.71, 2753.74, 10.87,   90.08},
	{1953.12, 2748.35, 10.87,   180.72},
	{1989.09, 2748.43, 10.87,   180.72},
	{2023.63, 2748.47, 10.87,   180.72},
	{2064.93, 2748.47, 10.87,   180.72},
	{2053.51, 2650.59, 10.87,   180.72},
	{2011.46, 2650.65, 10.87,   180.72},
	{1985.99, 2650.74, 10.87,   180.72},
	{1943.95, 2650.69, 10.87,   180.72},
	{1659.71, 2739.69, 10.87,   180.72},
	{1623.39, 2740.00, 10.87,   180.72},
	{1578.96, 2739.51, 10.87,   180.72},
	{1564.48, 2827.96, 10.87,   180.72},
	{1606.19, 2828.01, 10.87,   180.72},
	{1669.44, 2828.21, 10.87,   180.72},
	{1615.70, 2596.47, 10.87,   180.72},
	{1653.03, 2596.10, 10.87,   180.72},
	{1551.35, 2596.23, 10.87,   180.72},
	{1499.03, 2596.12, 10.87,   180.72},
	{1335.61, 2596.18, 10.87,   180.72},
	{1306.87, 2596.19, 10.87,   180.72},
	{1281.20, 2596.15, 10.87,   180.72},
	{1240.80, 2601.34, 10.87,   269.24},
	{1285.23, 2561.32, 10.87,   269.24},
	{1285.18, 2537.78, 10.87,   269.51},
	{1379.27, 2536.53, 10.87,   269.51},
	{1471.01, 2534.72, 10.87,   269.51},
	{1332.01, 2583.56, 10.87,   360.00},
	{1355.20, 2583.58, 10.87,   360.00},
	{1421.89, 2583.46, 10.87,   360.00},
	{1446.24, 2583.39, 10.87,   360.00},
	{1488.70, 2582.01, 10.878,   360.00},
	{1510.08, 2581.70, 10.87,   360.00},
	{1529.74, 2582.02, 10.87,   360.00},
	{1582.53, 2582.17, 10.87,   360.00},
	{1650.35, 2582.03, 10.87,   360.00},
	{1557.09, 2727.03, 10.87,   360.00},
	{1595.83, 2726.94, 10.87,   360.00},
	{1628.76, 2726.99, 10.87,   360.00},
	{1668.93, 2727.10, 10.87,   360.00},
	{1699.00, 2706.95, 10.87,   360.00},
	{1720.95, 2707.02, 10.87,   360.00},
	{1001.12, 2025.14, 10.69,   269.86},
	{1001.23, 1976.18, 10.69,   269.86},
	{1001.18, 1924.32, 10.69,   269.86},
	{1001.16, 1878.22, 10.69,   269.86},
	{1101.15, 1974.30, 10.69,   269.86},
	{1101.13, 2024.37, 10.69,   269.86},
	{901.13, 2051.30, 10.69,   269.86},
	{901.12, 1984.46, 10.69,   269.86},
	{913.65, 2031.43, 10.69,   90.34},
	{913.78, 1932.05, 10.69,   90.34},
	{1013.64, 1929.09, 10.69,   90.34},
	{1013.67, 1876.48, 10.69,   90.34},
	{1013.65, 1848.01, 10.69,  90.34},
	{1013.70, 1976.77, 10.69,   90.34},
	{1013.65, 2029.22, 10.69,   90.34},
	{-2800.30004883,-187.19999695,7.00000000,270.00000000},
	{-2800.30004883,-162.69999695,7.00000000,270.00000000},
	{-2800.19995117,-137.00000000,7.00000000,270.00000000},
	{-2800.89990234,-124.40000153,7.00000000,270.00000000},
	{-2800.00000000,-97.30000305,7.00000000,270.00000000},
	{-2800.19995117,-86.09999847,7.00000000,270.00000000},
	{-2799.80004883,-44.40000153,7.00000000,270.00000000},
	{-2800.19995117,-22.89999962,7.00000000,270.00000000},
	{-2800.60009766,3.59999990,7.00000000,270.00000000},
	{-2800.80004883,24.10000038,7.00000000,270.00000000},
	{-2800.00000000,76.00000000,7.00000000,270.00000000},
	{-2799.89990234,93.90000153,7.00000000,270.00000000},
	{-2800.00000000,115.19999695,7.00000000,270.00000000},
	{-2800.30004883,138.89999390,7.00000000,270.00000000},
	{-2800.10009766,177.69999695,7.00000000,270.00000000},
	{-2800.60009766,202.60000610,7.00000000,270.00000000},
	{-2800.19995117,220.60000610,7.00000000,270.00000000},
	{-2714.80004883,-176.30000305,4.09999990,90.00000000},
	{-2715.10009766,-149.60000610,4.09999990,90.00000000},
	{-2714.89990234,-130.00000000,4.09999990,90.00000000},
	{-2715.00000000,-111.69999695,4.09999990,90.00000000},
	{-2715.00000000,-86.59999847,4.09999990,90.00000000},
	{-2714.89990234,-54.50000000,4.09999990,90.00000000},
	{-2714.80004883,-37.09999847,4.09999990,90.00000000},
	{-2715.10009766,-16.50000000,4.09999990,90.00000000},
	{-2714.80004883,3.40000010,4.09999990,90.00000000},
	{-2714.69995117,23.60000038,4.09999990,90.00000000},
	{-2695.39990234,5.30000019,4.09999990,270.00000000},
	{-2695.80004883,-16.39999962,4.09999990,270.00000000},
	{-2697.80004883,-92.50000000,4.09999990,270.00000000},
	{-2697.60009766,-111.80000305,4.09999990,270.00000000},
	{-2697.69995117,-130.50000000,4.09999990,270.00000000},
	{-2698.10009766,-150.69999695,4.09999990,270.00000000},
	{-2697.50000000,-168.89999390,4.09999990,270.00000000},
	{-2697.19995117,-178.60000610,4.09999990,270.00000000},
	{-2697.60009766,-194.39999390,4.09999990,270.00000000},
	{-2612.80004883,-194.50000000,4.09999990,90.00000000},
	{-2612.89990234,-171.19999695,4.09999990,90.00000000},
	{-2612.89990234,-152.10000610,4.09999990,90.00000000},
	{-2612.80004883,-129.39999390,4.09999990,90.00000000},
	{-2612.69995117,-114.19999695,4.09999990,90.00000000},
	{-2612.50000000,-93.50000000,4.09999990,90.00000000},
	{-2510.19995117,-187.00000000,25.39999962,90.00000000},
	{-2509.89990234,-164.89999390,25.39999962,90.00000000},
	{-2509.80004883,-148.10000610,25.39999962,90.00000000},
	{-2595.10009766,-116.30000305,4.09999990,270.00000000},
	{-2596.00000000,-88.40000153,4.09999990,270.00000000},
	{-2868.19995117,802.70001221,37.00000000,70.00000000},
	{-2874.50000000,751.29998779,31.29999924,99.99938965},
	{-2865.39990234,723.90002441,28.89999962,119.99752808},
	{-2856.69995117,711.40002441,26.79999924,129.99267578},
	{-2839.69995117,686.59997559,21.50000000,129.99023438},
	{-2833.00000000,861.20001221,43.90000153,89.99023438},
	{-2832.30004883,890.50000000,43.90000153,89.98901367},
	{-2833.80004883,931.20001221,43.90000153,89.98901367},
	{-2832.30004883,908.79998779,43.90000153,89.98901367},
	{-2837.19995117,948.20001221,43.90000153,97.98901367},
	{-2852.60009766,976.09997559,43.09999847,127.98706055},
	{-2880.00000000,1008.70001221,37.90000153,107.98526001},
	{-2887.69995117,1028.69995117,35.29999924,107.98461914},
	{-2890.69995117,1059.59997559,32.09999847,85.98461914},
	{-2890.69995117,1082.80004883,30.29999924,85.98449707},
	{-2890.50000000,1108.40002441,26.50000000,85.98449707},
	{-2648.60009766,166.60000610,4.09999990,0.00000000},
	{-2621.10009766,166.69999695,4.09999990,0.00000000},
	{-2697.19995117,92.90000153,4.09999990,270.00000000},
	{-2697.50000000,118.59999847,4.09999990,270.00000000}
};
new Float:KfarmCP[41][6] =
{
    {-184.9722,-82.7518,4.0306},
	{-131.5195,45.3891,4.0314},
	{-129.7648,61.2338,4.0232},
	{-148.4111,45.9041,4.0279},
	{-188.4211,-58.5058,4.0253},
	{-202.8581,-79.2588,4.0287},
	{-221.0651,-66.4053,4.0322},
	{-177.5857,55.6894,4.0302},
	{-175.0521,76.7636,4.0246},
	{-197.2664,69.6795,4.0278},
	{-240.1194,-49.5897,4.0308},
	{-252.1668,-68.7349,4.0291},
	{-262.7175,-46.3346,4.0275},
	{-217.3090,77.5874,3.6632},
	{-218.6236,97.6469,3.3378},
	{-238.1613,89.3703,2.7706},
	{-278.9063,-53.0016,3.6665},
	{-250.8011,-104.9574,4.0266},
	{-68.7040,-134.6366,4.0254},
	{-46.4462,-107.6458,4.0299},
	{-12.9264,-15.5678,4.0344},
	{2.1369,-4.6207,4.0267},
	{5.5661,-27.8083,4.0280},
	{-21.4320,-99.4839,4.0263},
	{-20.7517,-116.0080,3.8912},
	{-1.2317,-109.2714,2.8481},
	{18.9543,-49.4316,4.0405},
	{32.3634,-58.4100,2.9603},
	{20.9043,-101.8049,1.7312},
	{34.4455,-119.9228,1.5343},
	{68.4658,-79.7715,1.5228},
	{67.4805,-42.6489,1.5188},
	{76.3979,6.2672,1.5196},
	{71.7280,23.9239,1.5195},
	{45.6861,4.9714,3.3803},
	{23.1783,7.6011,4.0307},
	{39.5740,43.2017,3.7079},
	{36.1423,62.1102,3.9340},
	{15.3264,44.8276,4.0422},
	{-25.1018,16.0796,4.0290},
	{-51.7812,20.7080,4.0368}
};
new Float:ZfarmCP[25][6] =
{
	{100.6866,-64.5787,1.5455},
	{56.0033,-145.7697,0.9653},
	{-111.8483,-116.8205,16.6434},
	{-318.5152,74.1949,71.3597},
	{-486.6695,374.2145,82.5771},
	{-738.7219,1122.5493,89.3947},
	{-333.3462,1444.7206,99.2022},
	{336.7698,1514.1581,102.1196},
	{1087.0231,1546.8097,105.9969},
	{1575.1433,1205.4236,102.8536},
	{1838.5952,572.6145,102.5804},
	{1927.1459,222.2732,103.4873},
	{2351.5313,-359.0211,118.3301},
	{2643.5742,-606.6374,172.7613},
	{2681.6025,-989.9222,161.0328},
	{2611.0366,-1618.5599,155.6738},
	{2086.8401,-2028.3580,151.8905},
	{1331.8174,-2077.0786,151.9869},
	{636.3494,-2029.3116,153.8539},
	{77.0836,-1852.5889,155.9250},
	{-267.1792,-1520.8143,156.9968},
	{-110.4687,-782.8535,143.0934},
	{-33.0220,-459.3522,91.2547},
	{36.1508,-163.4410,11.9876},
	{69.5594,10.8043,0.8711}
};

new Float:TfarmCP[70][6] =
{
	{-118.1748,97.4917,3.0651},
	{-102.3105,145.5701,3.0610},
	{-106.8568,149.7707,3.1874},
	{-112.8148,140.7989,3.0597},
	{-125.5881,105.3041,3.0673},
	{-133.4025,103.0735,3.0632},
	{-132.3515,113.7574,3.0645},
	{-118.9367,150.9895,3.4657},
	{-126.4329,156.4545,3.9562},
	{-131.5200,148.3374,3.6880},
	{-144.6826,109.5869,3.2178},
	{-153.9973,118.8447,3.3910},
	{-141.2469,156.2265,4.6573},
	{-146.6637,162.1942,5.4198},
	{-153.4110,150.9425,4.7476},
	{-165.3392,117.8946,3.3752},
	{-175.0434,117.1606,3.3544},
	{-174.4845,125.0051,3.5019},
	{-160.1963,164.7359,6.4523},
	{-166.2135,169.6932,7.6537},
	{-173.5223,160.1913,6.4298},
	{-187.2398,124.2202,3.7512},
	{-195.5763,128.0365,3.5244},
	{-193.6472,137.9212,4.4866},
	{-182.0522,171.8253,8.3759},
	{-190.6828,175.6244,8.6778},
	{-195.9674,169.0853,7.6857},
	{-207.4358,140.7540,3.7952},
	{-214.2281,141.1931,3.3721},
	{-212.4464,148.7155,4.2040},
	{-202.1340,172.1356,7.7502},
	{-205.6149,177.4380,8.3778},
	{-210.4960,166.1616,6.1400},
	{-241.9848,86.0831,1.7317},
	{-271.4360,-5.3024,1.8295},
	{-279.3911,-48.8195,2.4158},
	{-275.4128,-54.1622,3.0598},
	{-268.7864,-47.4318,3.0608},
	{-220.9540,94.0284,2.3265},
	{-212.7856,94.8735,2.5955},
	{-214.4124,84.4652,2.7034},
	{-263.1281,-64.3032,3.0636},
	{-258.4779,-70.3799,3.0646},
	{-253.8372,-65.0455,3.0634},
	{-203.2972,88.8572,3.0195},
	{-195.5331,88.9328,3.0653},
	{-196.3607,77.2021,3.0632},
	{-246.9209,-72.4962,3.0652},
	{-240.0850,-78.7946,3.0630},
	{-233.9185,-70.4941,3.0624},
	{-183.3356,80.3386,3.0632},
	{-176.9255,81.6690,3.0670},
	{-176.9210,72.5584,3.0632},
	{-227.2966,-77.2946,3.0637},
	{-221.4651,-82.8734,3.0636},
	{-214.6182,-70.3217,3.0632},
	{-165.5585,75.0176,3.0638},
	{-157.1545,74.6684,3.0633},
	{-159.6431,60.2371,3.0633},
	{-206.8094,-79.7317,3.0663},
	{-198.9123,-83.9681,3.0671},
	{-193.5644,-71.2071,3.0632},
	{-145.0178,64.9668,3.0636},
	{-137.8913,64.4220,3.0657},
	{-139.5562,52.8586,3.0630},
	{-187.3551,-78.2913,3.0636},
	{-184.3640,-83.0329,3.0691},
	{-175.9903,-72.4573,3.0632},
	{-148.7052,-2.5463,3.0632},
	{-101.1523,121.7584,3.0556}
};
new Float:FTestCP[32][3] =
{
 	{335.2493,2507.1733,16.7721},
	{245.4903,2507.4009,17.9485},
	{96.2973,2505.7954,36.9217},
	{-256.5354,2499.8550,106.8746},
	{-501.2109,2495.5256,163.0337},
	{-753.5185,2491.0242,227.6976},
	{-997.2165,2486.7146,256.8429},
	{-1230.9210,2482.5798,265.5193},
	{-1442.9468,2478.8218,290.0843},
	{-1597.0712,2451.8928,299.4502},
	{-1732.5657,2161.2761,301.4369},
	{-1687.0771,1842.2844,305.7045},
	{-1514.3478,1600.4325,312.6266},
	{-1315.4949,1377.0530,297.0782},
	{-1116.7668,1193.6467,298.9896},
	{-915.7100,1005.9146,307.8987},
	{-719.2480,598.1807,322.2305},
	{-481.8251,210.9960,331.3884},
	{-46.6716,-81.8203,354.6748},
	{355.5101,-353.4440,383.1853},
	{753.8187,-121.7109,393.5413},
	{845.5276,354.7133,419.5043},
	{788.0444,934.6417,516.7670},
	{446.4632,1510.7357,501.1467},
	{58.6717,1922.6689,515.6477},
	{-202.2462,2283.7065,545.9451},
	{-683.5740,2397.1563,557.9771},
	{-931.2388,2517.4988,559.1993},
 	{-711.4028,2742.4685,539.8641},
	{-382.1129,2624.3086,227.4810},
	{210.9538,2504.4670,18.1422},
	{410.8219,2501.4426,16.7665}
};
new Float:MotoCP[26][3] =
{
 	{-2059.0200, -126.1100, 34.0},
	{-2054.6084, -147.0878, 34.0},
	{-2055.1780, -152.9433, 34.0},
	{-2065.7983, -153.4618, 34.0},
	{-2089.6201, -154.5897, 34.0},
	{-2091.42, -210.18, 34.0},
	{-2082.95, -210.03, 34.0},
	{-2057.8975, -209.8797, 34.0},
	{-2053.1602, -215.7152, 34.0},
	{-2057.0249, -225.8122, 34.0},
	{-2070.8521, -231.4756, 34.0},
	{-2065.2292, -239.5741, 34.0},
	{-2071.4102, -247.3599, 34.0},
	{-2065.2590, -255.4796, 34.0},
	{-2051.60, -267.89, 34.0},
	{-2024.13, -259.16, 34.0},
	{-2024.10, -233.73, 34.0},
	{-2023.31, -207.86, 34.0},
	{-2016.04, -199.51, 34.0},
	{-2024.73, -179.44, 34.0},
	{-2016.11, -170.78, 34.0},
	{-2024.96, -175.48, 34.0},
	{-2031.50, -170.52, 34.0},
	{-2052.21, -163.68, 34.0},
	{-2052.32, -127.16, 34.0},
	{-2071.39, -121.10, 34.0}
};
new Float:TestCP[41][3] =
{
 	{-2059.0200, -126.1100, 34.0},
	{-2054.6084, -147.0878, 34.0},
	{-2055.1780, -152.9433, 34.0},
	{-2065.7983, -153.4618, 34.0},
	{-2089.6201, -154.5897, 34.0},
	{-2090.1208, -161.4055, 34.0},
	{-2085.0481, -170.1313, 34.0},
	{-2079.8274, -180.0190, 34.0},
	{-2084.1169, -191.9221, 34.0},
	{-2090.0884, -199.6911, 34.0},
	{-2085.2195, -209.9026, 34.0},
	{-2057.8975, -209.8797, 34.0},
	{-2053.1602, -215.7152, 34.0},
	{-2057.0249, -225.8122, 34.0},
	{-2070.8521, -231.4756, 34.0},
	{-2065.2292, -239.5741, 34.0},
	{-2071.4102, -247.3599, 34.0},
	{-2065.2590, -255.4796, 34.0},
	{-2057.6206, -261.1608, 34.0},
	{-2051.0156, -261.1801, 34.0},
	{-2061.3167, -259.7816, 34.0},
	{-2043.6409, -266.7408, 34.0},
	{-2028.5431, -257.5663, 34.0},
	{-2028.6276, -236.3317, 34.0},
	{-2024.5247, -215.4607, 34.0},
	{-2033.3253, -203.2597, 34.0},
	{-2034.0292, -198.1813, 34.0},
	{-2039.9347, -207.4130, 34.0},
	{-2017.5181, -205.4601, 34.0},
	{-2017.3644, -198.5782, 34.0},
	{-2024.6440, -185.7857, 34.0},
	{-2025.4039, -172.4389, 34.0},
	{-2033.2543, -170.1053, 34.0},
	{-2051.2263, -168.5887, 34.0},
	{-2050.9883, -161.9117, 34.0},
	{-2043.2867, -154.1868, 34.0},
	{-2024.8883, -153.6865, 34.0},
	{-2025.2654, -137.3493, 34.0},
	{-2032.9283, -137.1115, 34.0},
	{-2052.6453, -133.3875, 34.0},
	{-2069.7473, -124.5639, 34.0}
};
new Float:IncCPPos[INC_CPs][44] =
{
	{767.1450,-1045.3896,23.9731,776.8019,-1038.0181,24.2658},
	{955.3633,-1330.1484,13.3765,953.9100,-1335.5221,13.5389},
	{1198.9749,-1441.2113,13.3481,1206.0974,-1438.9908,13.3828},
	{1213.5999,-1574.7318,13.3906,1217.2823,-1583.1549,13.5469},
	{1138.3198,-1743.4321,13.3984,1139.4956,-1760.5665,13.5942},
	{395.0161,-1775.0806,5.3623,385.2637,-1817.8198,7.8409},
	{453.0342,-1500.5748,30.8837,459.5194,-1500.8080,31.0414},
	{822.6261,-1596.8116,13.3828,822.8293,-1589.4729,13.5545},
	{1741.0114,-1596.5645,13.3819,1739.3080,-1583.7665,14.1583},
	{1824.1311,-1685.0016,13.3828,1835.0616,-1682.3575,13.4055},
	{2288.9473,2419.0779,10.8203,2287.1638,2429.7104,10.8203},
	{2114.6890,2083.5286,10.8203,2086.3657,2074.2183,11.0547},
	{1986.9327,1085.8973,10.8203,1977.7756,1076.0548,10.8203},
	{2614.7888,1162.4569,10.8203,2637.4773,1182.7587,10.8203},
	{2496.7053,1526.4484,10.8125,2481.6992,1525.5863,11.7108},
	{2583.9001,2001.6904,10.8203,2546.8918,1971.8082,10.8203},
	{2884.9507,2438.1228,10.8203,2876.7019,2446.1970,11.0690},
	{2160.3674,2780.6301,10.8203,2172.6409,2795.6777,10.8203},
	{1472.9072,2385.1072,10.8203,1442.1285,2360.2480,10.8203},
	{1654.7034,1796.7312,10.8203,1671.5212,1814.3573,10.8203},
	{1561.0010,981.8759,10.8203,1557.5923,990.4278,10.8203},
	{2116.7949,2461.2368,10.8203,2085.7800,2486.2427,11.0781}
};
new Float:PizzaCPPos[Pizza_CPs][28] =
{
	{1440.1667,-1737.8706,13.5469,1435.2152,-1739.8103,13.5469},
	{1382.3086,-1797.8336,13.5469,1382.6823,-1803.2275,13.5469},
	{1776.6429,-1902.4270,12.9070,1772.1271,-1901.4381,13.5535},
	{2213.4614,-1144.1184,25.3181,2219.9824,-1149.0887,25.7654},
	{1188.1270,-1310.5155,13.0823,1184.5132,-1316.7859,13.5726},
	{187.0143,-124.0223,1.0808,193.8266,-116.8488,1.5496},
	{-84.5102,112.2954,2.6442,-86.5782,102.0456,3.1172},
	{-85.2322,-323.6229,0.9474,-103.6221,-311.7107,1.4297},

	{-52.2622,1205.6853,18.8788,-61.6785,1207.6107,19.6705},
	{2030.7439,991.9927,10.3462,2031.5634,987.1809,10.8131},
	{2600.1536,1051.1808,10.3450,2599.8362,1058.9191,10.8125},
	{2320.6665,2420.6665,10.3401,2326.4238,2420.3315,10.8203},
	{2345.1563,2406.7139,10.3474,2350.0383,2406.5601,10.8203},
	{2534.8772,2128.6367,10.3500,2536.9409,2135.6943,10.8203}
};
new Float:MinPos[4][3] =
{
	{-99.1655,116.7517,3.1096},
	{-100.7876,112.9081,3.1096},
	{-103.8008,104.6256,3.1172},
	{-105.0540,100.2948,3.1172}
};
enum BUSLLS {
	BUSSTATION1,
	Float:BUS_COORD1[3]
};
new Float:BusCityLS[37][BUSLLS] = {
	{0,{1229.8259,-1829.7358,13.5368}},
	{0,{1280.2579,-1854.6804,13.5182}},
	{0,{1652.2408,-1873.4386,13.5162}},
	{0,{1734.5934,-1819.4779,13.5007}},
	{1,{1816.8345,-1904.2699,13.6184}},
	{0,{1818.5557,-1914.4448,13.5211}},
	{0,{1942.7035,-1933.7701,13.5162}},
	{1,{1965.2905,-1784.1429,13.5104}},
	{0,{1965.2986,-1775.8351,13.5162}},
	{0,{1834.2664,-1749.8036,13.5161}},
	{1,{1824.0920,-1645.9943,13.5162}},
	{0,{1824.0588,-1627.0508,13.5162}},
	{0,{1580.0244,-1590.1259,13.5271}},
	{0,{1432.5289,-1571.1511,13.4886}},
	{0,{1455.5337,-1456.0300,13.4987}},
	{0,{1583.1376,-1443.8529,13.5238}},
	{0,{1610.7544,-1324.1510,17.4376}},
	{1,{1538.7518,-1294.6869,16.0552}},
	{0,{1521.1030,-1295.0481,15.1298}},
	{0,{1456.5043,-1255.2910,13.5255}},
	{0,{1371.3203,-1239.2648,13.5156}},
	{1,{1339.4738,-1306.8401,13.5837}},
	{0,{1339.5033,-1314.6669,13.5420}},
	{0,{1340.9142,-1382.7581,13.6311}},
	{0,{1223.4369,-1393.6273,13.3420}},
	{1,{1209.1743,-1316.7479,13.5312}},
	{0,{1209.0643,-1303.7913,13.5224}},
	{0,{1080.9596,-1278.3923,13.5390}},
	{0,{1056.1063,-1378.4590,13.5907}},
	{0,{1324.8569,-1407.8351,13.4525}},
	{0,{1438.4069,-1443.2587,13.5189}},
	{0,{1427.7025,-1707.5081,13.5161}},
	{1,{1502.1509,-1735.7925,13.5162}},
	{0,{1502.1509,-1735.7925,13.5162}},
	{0,{1567.4381,-1748.1270,13.5161}},
	{0,{1568.1758,-1859.9463,13.5161}},
	{0,{1281.2180,-1848.9690,13.5216}}
};
enum BUSFLS {
	BUSSTATION2,
	Float:BUS_COORD2[3]
};
new Float:BusFarm[67][BUSFLS] = {
	{0,{1237.8948,-1832.1141,13.4713}},
	{0,{1404.0356,-1874.5087,13.4578}},
	{0,{1652.9841,-1874.6194,13.4578}},
	{0,{1807.0486,-1834.2417,13.4592}},
	{1,{1818.7704,-1906.8622,13.4683}},
	{0,{1818.7704,-1906.8622,13.4683}},
	{0,{1927.7805,-1935.2821,13.4578}},
	{0,{1963.7667,-1893.1801,13.4578}},
	{1,{1964.7584,-1778.1088,13.4547}},
	{0,{1964.7584,-1778.1088,13.4547}},
	{0,{1911.3258,-1749.8579,13.4574}},
	{0,{1824.5112,-1725.7615,13.4745}},
	{1,{1824.8112,-1645.2742,13.4578}},
	{0,{1824.8112,-1645.2742,13.4578}},
	{0,{1853.1031,-1429.0073,13.4657}},
	{0,{1868.8618,-1164.9558,23.7471}},
	{0,{1915.4825,-1043.4963,23.8686}},
	{0,{2085.8872,-1099.6027,24.9618}},
	{1,{2235.0862,-1140.5504,25.7006}},
	{0,{2235.0862,-1140.5504,25.7006}},
	{0,{2394.4849,-1156.6980,28.8896}},
	{0,{2697.7700,-1155.8300,52.8518}},
	{0,{2890.3357,-1099.2585,10.9500}},
	{0,{2896.3125,-851.6042,10.9502}},
	{0,{2816.1965,-435.7941,20.9845}},
	{0,{2742.5786,-208.1715,29.8970}},
	{0,{2818.1643,27.4715,20.8995}},
	{0,{2733.5378,46.7397,22.6336}},
	{0,{2413.7217,44.1769,26.4117}},
	{0,{2395.8704,76.3691,26.4110}},
	{1,{2278.4397,95.1039,26.4167}},
	{0,{2278.4397,95.1039,26.4167}},
	{0,{2207.5850,44.9261,26.4122}},
	{0,{1920.4877,45.7306,34.2922}},
	{0,{1741.3544,111.9195,33.0462}},
	{0,{1510.2655,147.4181,31.5759}},
	{1,{1229.3667,278.9224,19.4813}},
	{0,{1229.3667,278.9224,19.4813}},
	{0,{1220.0930,333.0586,19.4829}},
	{0,{1296.6200,319.4578,19.4829}},
	{0,{1348.4712,377.3011,19.4842}},
	{0,{1361.6685,455.9211,19.9597}},
	{0,{1159.1312,557.9290,19.9648}},
	{0,{1008.9088,459.5093,19.9578}},
	{0,{844.3448,347.9556,19.9638}},
	{0,{524.7679,249.8273,14.7410}},
	{0,{313.7930,79.9660,3.1327}},
	{1,{-2.4951,167.0647,2.1562}},
	{0,{-2.4951,167.0647,2.1562}},
	{0,{-169.3714,232.4576,10.7568}},
	{0,{-267.1622,87.9629,1.1528}},
	{0,{-285.3360,-214.5397,1.1534}},
	{1,{-153.9026,-375.9617,1.1538}},
	{0,{-153.9026,-375.9617,1.1538}},
	{0,{17.6611,-500.0209,8.4701}},
	{0,{46.8314,-657.7147,3.5617}},
	{0,{320.6441,-571.8426,40.6437}},
	{0,{677.5936,-675.7714,16.2595}},
	{0,{692.6474,-845.8254,43.3442}},
	{0,{796.1514,-1138.9399,24.0360}},
	{0,{795.8639,-1377.2534,13.4896}},
	{0,{854.6149,-1407.6465,13.2316}},
	{1,{1271.4054,-1409.2161,13.1092}},
	{0,{1271.4054,-1409.2161,13.1092}},
	{0,{1339.3062,-1426.6134,13.4578}},
	{0,{1295.0242,-1667.2679,13.4578}},
	{0,{1294.7853,-1829.2402,13.4578}}
};
enum BUSZLS {
    BUSSTATION3,
	Float:BUS_COORD3[3]
};
new Float:BusZav[39][BUSZLS] = {
	{0,{1229.2997,-1831.3430,13.4918}},
	{0,{1656.7872,-1874.7206,13.4766}},
	{0,{1692.0085,-1824.3645,13.4765}},
	{0,{1807.9644,-1835.1954,13.4760}},
	{1,{1819.0844,-1905.2897,13.4900}},
	{0,{1819.0844,-1905.2897,13.4900}},
	{0,{1945.8931,-1934.5231,13.4759}},
	{0,{1963.6215,-1765.2841,13.4761}},
	{0,{1835.3751,-1750.2057,13.4757}},
	{1,{1824.7355,-1646.5450,13.4763}},
	{0,{1824.7355,-1646.5450,13.4763}},
	{0,{1852.6595,-1275.8950,13.4841}},
	{0,{1731.1975,-1298.5696,13.5214}},
	{1,{1549.8947,-1293.5890,16.5593}},
	{0,{1549.8947,-1293.5890,16.5593}},
	{0,{1467.7245,-1296.6996,13.5162}},
	{0,{1456.8760,-1246.0756,13.4824}},
	{0,{1369.8267,-1238.0427,13.4760}},
	{0,{1379.0013,-961.8619,34.1029}},
	{0,{1173.1611,-939.0876,42.9138}},
	{0,{1259.4996,-366.2016,2.9810}},
	{0,{1188.1992,-177.1511,40.3592}},
	{0,{943.0252,-176.3220,11.2184}},
	{0,{543.1816,-138.7326,37.4017}},
	{0,{347.0766,-139.8066,1.6424}},
	{0,{296.2548,-139.2764,1.5204}},
	{0,{280.4119,-196.8805,1.5154}},
	{0,{29.9225,-205.7583,1.5759}},
	{0,{-293.6570,-146.0782,1.4663}},
	{1,{-146.8190,-382.9973,1.1712}},
	{0,{36.6532,-623.3799,3.4851}},
	{0,{203.1494,-651.0359,19.7352}},
	{0,{401.8615,-586.5921,37.6639}},
	{0,{665.8414,-665.6905,16.3843}},
	{0,{793.1093,-1028.8997,25.4933}},
	{0,{794.4880,-1380.8113,13.5557}},
	{0,{1134.5815,-1407.9766,13.5701}},
	{0,{1328.6002,-1407.6282,13.4327}},
	{0,{1295.3855,-1766.4696,13.4766}}
};
enum BUSALS {
    BUSSTATION4,
	Float:BUS_COORD4[3]
};
new Float:BusAvto[28][BUSALS] = {
	{0,{1232.6331,-1830.5366,13.4941}},
	{0,{1410.1094,-1875.3966,13.4760}},
	{0,{1656.1490,-1874.8623,13.4756}},
	{0,{1692.0580,-1827.3738,13.4761}},
	{0,{1808.1899,-1835.3752,13.4761}},
	{1,{1818.9661,-1905.0737,13.4903}},
	{0,{1818.9661,-1905.0737,13.4903}},
	{0,{1941.8381,-1934.3352,13.4759}},
	{0,{2072.3174,-1935.4684,13.4711}},
	{0,{2091.6484,-1765.0592,13.4909}},
	{0,{2174.4597,-1754.3929,13.4692}},
	{0,{2403.6680,-1734.2816,13.4759}},
	{1,{2410.3813,-1906.8245,13.4759}},
	{0,{2410.9624,-1946.8339,13.4758}},
	{0,{2226.4150,-1969.8279,13.4749}},
	{0,{2220.7681,-1907.9124,13.4615}},
	{0,{2094.4858,-1892.2651,13.4661}},
	{1,{1982.1689,-1928.8876,13.4753}},
	{0,{1982.1689,-1928.8876,13.4753}},
	{0,{1832.2825,-1929.9409,13.4775}},
	{0,{1824.0001,-1837.5123,13.5067}},
	{0,{1703.1348,-1809.0640,13.4597}},
	{0,{1598.1779,-1869.9440,13.4766}},
	{0,{1571.9581,-1745.8114,13.4766}},
	{1,{1498.0388,-1728.6017,13.4759}},
	{0,{1489.6395,-1728.8545,13.4765}},
	{0,{1402.1185,-1729.0494,13.4836}},
	{0,{1386.6500,-1858.5278,13.4759}}
};

////////маршутки лв
enum BUSLV { ///////////с лс до лв
    BUSSTATION5,
	Float:BUS_COORD5[3]
};
new Float:BusLv[51][BUSLV] = {
	{0,{1232.0515,-1828.6260,13.4986}},
	{0,{1250.6344,-1854.9460,13.4760}},
	{0,{1488.9105,-1874.8153,13.4773}},
	{0,{1703.0072,-1813.7273,13.4600}},
	{1,{1818.5599,-1906.5231,13.4893}},
	{0,{1818.5599,-1906.5231,13.4893}},
	{0,{1946.3177,-1934.2123,13.4760}},
	{1,{1963.8538,-1777.8281,13.4761}},
	{0,{1963.8538,-1777.8281,13.4761}},
	{0,{1801.3658,-1730.7200,13.4837}},
	{1,{1500.5328,-1729.7361,13.4750}},
	{0,{1500.5328,-1729.7361,13.4750}},
	{0,{1314.3804,-1718.7456,13.4760}},
	{0,{1359.2566,-1431.8987,13.4799}},
	{1,{1361.0975,-1266.0936,13.4760}},
	{0,{1361.0975,-1266.0936,13.4760}},
	{0,{1370.4576,-1058.4480,26.7226}},
	{0,{1399.8005,-951.6357,34.9892}},
	{0,{1565.7369,-993.6835,45.6616}},
	{0,{1708.4244,-785.1653,54.5776}},
	{0,{1680.0234,-236.2828,42.4546}},
	{0,{1657.3685,250.2939,29.9955}},
	{0,{1790.0594,656.9621,18.1466}},
	{0,{2000.8984,834.6299,6.8330}},
	{0,{2506.7175,844.3246,6.8291}},
	{0,{2727.5769,1250.8336,6.8329}},
	{0,{2796.3796,1456.4688,10.7554}},
	{0,{2824.8545,1389.0665,10.8473}},
	{1,{2823.2661,1255.8954,10.8554}},
	{0,{2823.2661,1255.8954,10.8554}},
	{0,{2794.2759,1315.3356,10.8434}},
	{0,{2625.3569,1298.4623,10.7653}},
	{1,{2604.9023,1097.9755,10.7646}},
	{0,{2604.9023,1097.9755,10.7646}},
	{0,{2501.0615,1075.6737,10.7651}},
	{0,{2345.2649,1046.8436,10.7651}},
	{0,{2334.6252,976.3047,10.7645}},
	{1,{2137.9341,976.5244,10.7816}},
	{0,{2137.9341,976.5244,10.7816}},
	{0,{2046.6974,952.9116,10.2044}},
	{0,{2024.6371,854.6613,6.8276}},
	{0,{1789.5865,804.9660,11.1350}},
	{0,{1726.7368,525.0765,28.1258}},
	{0,{1654.1354,-169.6108,35.2687}},
	{0,{1700.9017,-580.4525,37.3024}},
	{0,{1583.0924,-894.6972,49.9651}},
	{0,{1359.8951,-959.5404,34.0466}},
	{1,{1339.1453,-1311.2400,13.5118}},
	{0,{1339.1453,-1311.2400,13.5118}},
	{0,{1295.9526,-1554.2906,13.4825}},
	{0,{1285.6277,-1849.1674,13.4842}}
};
//////////
enum BUSLVV { ///////////с лс до лв
	BUSSTATION6,
	Float:BUS_COORD6[3]
};
new Float:BusLvv[52][BUSLVV] = {
	{0,{2807.6387,1272.8435,10.8427}},
	{1,{2825.9631,1256.7458,10.8591}},
	{0,{2825.9631,1256.7458,10.8591}},
	{0,{2828.9734,1393.1162,10.8363}},
	{0,{2729.9451,1663.1802,6.8276}},
	{0,{2739.0483,1987.6598,6.8265}},
	{0,{2812.8105,2110.1235,10.7473}},
	{0,{2849.4526,2145.1411,10.7650}},
	{0,{2892.3428,2291.0251,10.7734}},
	{0,{2909.6057,2414.2551,10.9135}},
	{1,{2856.4448,2401.3391,10.9138}},
	{0,{2856.4448,2401.3391,10.9138}},
	{0,{2804.6528,2383.3884,10.9136}},
	{0,{2818.2456,2315.2917,10.9135}},
	{0,{2905.1653,2388.1152,10.7650}},
	{0,{2840.4058,2295.1409,10.8219}},
	{0,{2625.9592,2278.2600,10.7645}},
	{0,{2542.5381,2235.6853,10.7654}},
	{1,{2450.1213,2236.4241,10.7706}},
	{0,{2450.1213,2236.4241,10.7706}},
	{0,{2430.5205,2399.5078,10.7647}},
	{1,{2392.3000,2417.3269,10.8366}},
	{0,{2392.3000,2417.3269,10.8366}},
	{0,{2229.5918,2426.0535,10.7643}},
	{1,{2084.2234,2457.1541,10.7648}},
	{0,{2084.2234,2457.1541,10.7648}},
	{0,{2025.6925,2438.1533,10.7651}},
	{0,{2116.6624,2263.3884,10.7667}},
	{0,{2109.2144,2116.1926,10.7732}},
	{0,{1925.2623,2101.1592,10.7652}},
	{0,{1913.1256,2044.5667,10.7647}},
	{0,{1705.0833,2037.6892,10.7669}},
	{0,{1691.8285,1876.0144,10.7651}},
	{1,{1644.2288,1818.9999,10.7729}},
	{0,{1644.2288,1818.9999,10.7729}},
	{0,{1663.2039,1711.4940,10.7644}},
	{0,{1975.4893,1711.2468,10.7662}},
	{0,{2043.9906,1689.7333,10.7651}},
	{0,{2044.2896,1381.0764,10.7658}},
	{1,{2039.3444,1061.6316,10.7652}},
	{0,{2039.3444,1061.6316,10.7652}},
	{0,{2056.6633,974.5224,10.6306}},
	{1,{2161.5979,970.3667,10.8381}},
	{0,{2161.5979,970.3667,10.8381}},
	{0,{2328.8586,971.0248,10.7650}},
	{0,{2366.9402,1070.0721,10.7646}},
	{0,{2593.4543,1071.5558,10.7647}},
	{1,{2610.7393,1087.2466,10.7646}},
	{0,{2610.7393,1087.2466,10.7646}},
	{0,{2609.3401,1239.3336,10.7647}},
	{0,{2629.3052,1297.4266,10.7651}},
	{0,{2789.9265,1310.8939,10.8431}}
};
////////
enum BUSLVVV { ///////////с лс до лв
    BUSSTATION7,
	Float:BUS_COORD7[3]
};
new Float:BusLvvv[54][BUSLVVV] = {
	{1,{2826.6458,1256.2856,10.8607}},
	{0,{2826.6458,1256.2856,10.8607}},
	{0,{2817.6826,1312.2994,10.8472}},
	{0,{2541.7107,1314.7201,10.7647}},
	{0,{2429.8262,1353.9536,10.7650}},
	{0,{2335.4736,1374.8931,10.7662}},
	{1,{2128.0342,1376.2758,10.7692}},
	{0,{2128.0342,1376.2758,10.7692}},
	{0,{2050.5156,1376.1844,10.7650}},
	{0,{2045.2562,1225.3993,10.7662}},
	{1,{2039.2996,1060.9802,10.7650}},
	{0,{2039.2996,1060.9802,10.7650}},
	{0,{2045.5696,869.7059,6.9740}},
	{0,{1741.0863,854.6646,9.5771}},
	{0,{1355.0416,907.3795,9.7279}},
	{0,{926.2228,743.3319,10.7975}},
	{0,{479.3568,737.7695,4.6967}},
	{0,{244.9114,935.9122,26.6957}},
	{0,{189.1044,1121.2612,15.2849}},
	{0,{82.1361,1200.2052,18.6089}},
	{1,{-82.8524,1203.1519,19.7575}},
	{0,{-82.8524,1203.1519,19.7575}},
	{0,{-115.2880,1240.1694,17.5618}},
	{0,{132.7793,1175.0040,16.2269}},
	{0,{261.1092,1218.7169,15.7113}},
	{1,{348.2864,1393.8882,6.9014}},
	{0,{348.2864,1393.8882,6.9014}},
	{0,{396.9423,1564.6307,17.3186}},
	{1,{646.7731,1761.4861,4.9962}},
	{0,{646.7731,1761.4861,4.9962}},
	{0,{652.9279,1807.9609,5.5642}},
	{0,{693.6188,1808.6732,5.6322}},
	{0,{711.8121,1844.6010,5.6461}},
	{0,{813.0897,1785.5085,3.8044}},
	{0,{830.9492,1542.2643,17.9034}},
	{0,{787.4529,1314.0424,25.1152}},
	{1,{806.6180,1143.0206,28.4117}},
	{0,{806.6180,1143.0206,28.4117}},
	{0,{535.7621,1059.8241,28.4218}},
	{0,{239.1753,979.0547,28.2874}},
	{0,{263.9735,879.7539,21.6726}},
	{0,{379.7841,660.2042,13.3631}},
	{0,{386.7987,698.2360,8.9994}},
	{0,{630.9131,655.3173,6.1711}},
	{0,{963.0237,730.8145,10.7728}},
	{0,{1254.0504,828.2292,8.4419}},
	{0,{1703.8965,831.3081,8.3600}},
	{0,{1966.6864,831.3790,6.8309}},
	{0,{2190.9299,832.0923,6.8290}},
	{0,{2519.5972,844.5468,6.8291}},
	{0,{2724.1719,1089.6066,6.8321}},
	{0,{2751.4805,1371.3278,7.0348}},
	{0,{2797.1931,1467.6797,10.9872}},
	{0,{2811.0874,1302.5314,10.8440}}
};



////////
enum BUSSF{ ///////////с лс до cf
    BUSSTATION8,
	Float:BUS_COORD8[3]
};
new Float:bussf[67][BUSSF] = {
	{0,{1239.2727,-1830.1093,13.4772}},
	{0,{1222.9926,-1855.1899,13.4578}},
	{0,{1659.7306,-1873.6669,13.4587}},
	{0,{1691.8713,-1828.2920,13.4563}},
	{0,{1707.5065,-1815.3641,13.4411}},
	{1,{1818.9033,-1907.0626,13.4684}},
	{0,{1818.9033,-1907.0626,13.4684}},
	{0,{1940.1924,-1935.0177,13.4580}},
	{0,{2066.0974,-1935.1301,13.4468}},
	{0,{2084.1279,-1916.7261,13.4578}},
	{0,{2114.9438,-1532.5641,24.1030}},
	{0,{2114.6106,-1397.4122,23.9031}},
	{0,{2255.9529,-1385.9990,23.9079}},
	{0,{2272.8545,-1166.5625,26.2749}},
	{1,{2242.8049,-1137.0457,25.8989}},
	{0,{2242.8049,-1137.0457,25.8989}},
	{0,{2149.0205,-1093.2343,24.9249}},
	{0,{1874.5559,-1006.6810,36.1298}},
	{0,{1709.8173,-707.0225,47.3745}},
	{0,{1693.8153,-403.5671,36.4291}},
	{0,{1644.5189,-3.8706,36.6602}},
	{0,{1786.8777,646.0321,18.9150}},
	{0,{1809.8561,817.5914,10.8629}},
	{0,{1767.7992,852.4989,10.4403}},
	{0,{1405.0864,876.2901,7.0759}},
	{0,{928.0593,743.1429,10.7757}},
	{0,{477.9346,737.8159,4.7228}},
	{0,{-4.5236,639.8621,8.8318}},
	{0,{-619.5453,658.5139,16.7961}},
	{0,{-842.0254,964.0228,25.1174}},
	{0,{-878.1572,1142.8975,28.1087}},
	{0,{-1009.8782,1293.9994,40.2651}},
	{0,{-1284.6588,963.9929,45.2598}},
	{0,{-1523.9430,711.5268,45.3911}},
	{0,{-1816.2042,416.2890,17.6484}},
	{0,{-1875.0621,404.4098,17.2046}},
	{0,{-1986.7096,349.5109,34.9161}},
	{0,{-2007.7003,306.7575,34.9604}},
	{1,{-2009.9449,130.6911,27.6141}},
	{0,{-2009.9449,130.6911,27.6141}},
	{1,{-2009.3240,-86.2265,35.4043}},
	{0,{-2009.3240,-86.2265,35.4043}},
	{0,{-2007.1432,-273.2873,35.3966}},
	{0,{-2046.3518,-326.7133,35.3794}},
	{0,{-2385.0352,-325.1478,37.9981}},
	{0,{-2806.4470,-491.9019,7.2122}},
	{0,{-2916.6018,-1155.5824,9.5673}},
	{0,{-2940.6841,-1538.1550,10.9662}},
	{0,{-2867.6536,-1946.4441,37.2266}},
	{0,{-2525.5186,-2273.7234,29.1935}},
	{0,{-2323.9414,-2630.9778,59.4208}},
	{0,{-1918.3955,-2622.7783,58.2431}},
	{0,{-1612.5243,-2768.3389,46.9970}},
	{0,{-1149.4178,-2868.0261,67.7893}},
	{0,{-820.2522,-2833.2683,56.6978}},
	{0,{-214.1823,-2869.7571,39.2527}},
	{0,{9.9848,-2644.1697,40.2500}},
	{0,{-316.1310,-2113.1294,27.9829}},
	{0,{-266.0706,-1667.7366,14.9981}},
	{0,{79.3633,-1298.2041,13.1298}},
	{0,{604.4440,-1195.3882,19.1967}},
	{0,{625.6140,-1427.2957,13.8754}},
	{0,{621.9033,-1713.2443,14.2480}},
	{0,{665.4852,-1755.8931,13.5018}},
	{0,{1042.6567,-1842.6890,13.5036}},
	{0,{1102.1276,-1854.6323,13.4550}},
	{0,{1250.8386,-1855.1190,13.4580}}

};



enum obj_INFO
{
    objID,
	objOwner[34],
	objectID,
	objName[32],
	objModel,
	Float:objPosX,
	Float:objPosY,
	Float:objPosZ,
	Float:objRotX,
	Float:objRotY,
	Float:objRotZ,
	otime[20],
	odate[20],
	objuidowner
}
new	ObjInfo[MAX_CREATE_OBJECTS][obj_INFO];
new	TOTALOBJECTS;
new	EditObjectPlayer[MAX_PLAYERS];
new	ObjectNamePlayer[MAX_PLAYERS][30];
new ObjectSelectMap[MAX_PLAYERS];
new ListObject[MAX_PLAYERS];
new ObjectListItem[MAX_PLAYERS][24];


enum BUSLVSF{ ///////////с лв до cf
        BUSSTATION9,
		Float:BUS_COORD9[3]
};
new Float:buslvsf[69][BUSLVSF] = {
	{1,{2818.7419,1257.3925,10.8343}},
	{0,{2818.7419,1257.3925,10.8343}},
	{0,{2791.3337,1315.4778,10.8250}},
	{0,{2574.2002,1315.0728,10.8538}},
	{0,{2446.2585,1315.7064,10.8499}},
	{0,{2429.9224,1357.2341,10.7468}},
	{0,{2389.2612,1375.7986,10.7485}},
	{0,{2125.0715,1375.3788,10.7516}},
	{0,{2097.9458,1375.4659,10.7855}},
	{0,{2045.9497,1341.0956,10.7473}},
	{1,{2040.6155,1062.1938,10.7468}},
	{0,{2040.6155,1062.1938,10.7468}},
	{0,{2045.6891,881.5240,7.2298}},
	{0,{1995.8934,855.4678,6.8081}},
	{0,{1658.7972,854.5658,6.8740}},
	{0,{1356.7434,907.4755,9.6777}},
	{0,{1116.4193,845.9794,10.7428}},
	{0,{888.3245,727.7820,10.8321}},
	{0,{659.8762,679.7547,7.5954}},
	{0,{491.3829,731.1174,4.3072}},
    {0,{299.1613,838.0553,17.1871}},
	{0,{199.1845,1056.6332,21.0792}},
	{0,{169.6721,1152.3199,14.4374}},
	{0,{67.3102,1200.3102,18.6911}},
	{1,{-83.8147,1202.2227,19.7309}},
	{0,{-83.8147,1202.2227,19.7309}},
	{0,{-113.0133,1217.5348,19.0318}},
	{0,{-77.6962,1255.8416,12.6333}},
	{0,{169.3127,1147.4120,14.3619}},
	{0,{260.4173,874.7805,21.4181}},
	{0,{116.6964,703.6432,5.9623}},
	{0,{-231.3173,577.5603,15.7142}},
	{0,{-574.3392,637.8568,16.7930}},
	{0,{-831.6596,836.4021,19.8658}},
	{0,{-873.1947,1126.7213,26.9703}},
	{0,{-915.5178,1315.5579,37.8013}},
	{0,{-1085.5634,1198.1527,39.0290}},
	{0,{-1297.7290,949.5397,45.6279}},
	{0,{-1597.4331,633.9749,42.3623}},
	{0,{-1820.2052,411.9102,17.4357}},
	{0,{-1878.3140,399.3504,17.5204}},
	{0,{-1982.8495,349.0168,34.7826}},
	{0,{-2008.9194,245.0558,29.6036}},
	{0,{-2009.2172,123.8958,27.6140}},
	{1,{-1989.2716,176.2378,27.6140}},
	{0,{-1989.2716,176.2378,27.6140}},
	{0,{-2000.4724,328.1176,35.0907}},
	{0,{-1979.3467,340.7978,34.6584}},
	{0,{-1867.6576,403.1433,17.1183}},
	{0,{-1822.2546,375.9888,17.0860}},
	{0,{-1783.6349,394.4813,17.9640}},
	{0,{-1575.9696,625.4163,42.6431}},
	{0,{-1329.9995,885.0818,46.6918}},
	{0,{-1078.1804,1152.6123,38.2186}},
	{0,{-908.4866,931.0784,18.8703}},
	{0,{-700.2190,672.8992,16.6869}},
	{0,{-257.4713,550.0108,16.1901}},
	{0,{39.5957,634.2082,7.2312}},
	{0,{480.1574,709.7883,5.0814}},
	{0,{934.9865,720.3270,10.7901}},
	{0,{1191.9908,823.4895,9.5034}},
	{0,{1506.4880,830.6743,6.8950}},
	{0,{1887.7756,832.3083,8.4499}},
	{0,{2292.8589,831.5078,6.8095}},
	{0,{2658.0078,937.9959,6.8081}},
	{0,{2728.9512,1246.3154,6.8095}},
	{0,{2795.9653,1451.9988,10.7232}},
	{0,{2824.8608,1393.1545,10.8226}},
	{0,{2809.2686,1291.3936,10.8302}}
};


///////
enum BUSSFSF{ ///////////с лв до cf
        BUSSTATION10,
		Float:BUS_COORD10[3]
};
new Float:bussfsf[55][BUSSFSF] = {
	{0,{-2167.1038,317.4204,34.8428}},
	{0,{-2023.2380,318.5129,34.6873}},
	{0,{-2009.1259,300.6385,34.3691}},
	{0,{-2009.8013,125.2293,27.2110}},
	{1,{-1988.5049,180.6631,27.2085}},
	{0,{-1988.5049,180.6631,27.2085}},
	{0,{-2001.5211,264.7843,31.2235}},
	{1,{-1999.0499,468.3500,34.6873}},
	{0,{-1999.0499,468.3500,34.6873}},
	{0,{-1998.5966,590.4084,34.6897}},
	{0,{-1855.5277,600.6783,34.6854}},
	{0,{-1709.1293,673.1445,24.4042}},
	{0,{-1708.8419,714.7418,24.4120}},
	{1,{-1637.9459,726.1580,14.1365}},
	{0,{-1637.9459,726.1580,14.1365}},
	{0,{-1578.1815,726.1118,7.0200}},
	{0,{-1526.2339,883.5734,6.7088}},
	{0,{-1579.1440,1109.5095,6.7088}},
	{1,{-1714.2565,1335.4342,6.7150}},
	{0,{-1714.2565,1335.4342,6.7150}},
	{0,{-1871.2581,1361.2819,6.7088}},
	{0,{-2006.2347,1313.5310,6.7088}},
	{0,{-2233.9192,1336.1649,6.7088}},
	{1,{-2630.1072,1309.6821,6.7104}},
	{0,{-2630.1072,1309.6821,6.7104}},
	{0,{-2784.3318,1294.9115,5.4524}},
	{0,{-2884.1899,1114.9465,24.7271}},
	{0,{-2811.4885,877.4551,43.5760}},
	{0,{-2766.2197,805.7432,52.1425}},
	{0,{-2753.2576,794.6345,52.8756}},
	{0,{-2753.7847,689.5037,40.7973}},
	{0,{-2753.0166,577.3898,14.0619}},
	{0,{-2737.8687,562.3759,14.0691}},
	{1,{-2632.8486,560.7029,14.1319}},
	{0,{-2632.8486,560.7029,14.1319}},
	{0,{-2441.3323,561.8361,23.8603}},
	{0,{-2401.4966,561.9412,24.4133}},
	{0,{-2389.6692,549.9596,24.8637}},
	{0,{-2285.2390,391.5641,34.4838}},
	{0,{-2254.6250,212.0838,34.8417}},
	{1,{-2255.0723,133.9813,34.8427}},
	{0,{-2255.0723,133.9813,34.8427}},
	{0,{-2260.0593,-48.1074,34.8416}},
	{0,{-2236.5339,-73.3561,34.8419}},
	{1,{-2029.0266,-73.3784,34.8431}},
	{0,{-2029.0266,-73.3784,34.8431}},
	{0,{-2005.2770,-57.4544,34.8351}},
	{0,{-2004.3948,13.9501,32.7774}},
	{0,{-2020.1083,32.0629,32.8326}},
	{0,{-2157.3428,32.7148,34.8390}},
	{0,{-2144.7627,190.4043,34.8720}},
	{0,{-2164.1365,211.0393,34.8426}},
	{0,{-2239.3037,210.7358,34.8418}},
	{0,{-2248.9690,227.7879,34.8352}},
	{0,{-2248.8120,305.6744,34.8365}}
};


enum BUSSFFA{ ///////////с лв до cf
        BUSSTATION11,
		Float:BUS_COORD11[3]
};
new Float:bussffa[75][BUSSFFA] = {
	{0,{-2174.9050,317.7509,34.8427}},
	{0,{-2019.6237,318.1793,34.6871}},
	{0,{-2008.9510,305.0338,34.5090}},
	{1,{-2010.6046,132.7925,27.2097}},
	{0,{-2010.6046,132.7925,27.2097}},
	{0,{-2008.9885,-54.7401,34.8402}},
	{0,{-1992.7821,-71.9844,34.0853}},
	{0,{-1814.6967,-118.2254,5.1683}},
	{0,{-1801.4783,-128.7777,5.3002}},
	{0,{-1818.4156,-418.9573,14.9718}},
	{0,{-1821.5718,-560.0546,15.8870}},
	{0,{-1775.8096,-585.4281,16.0077}},
	{0,{-1764.6259,-605.3375,15.8596}},
	{0,{-1657.9926,-777.3015,42.9683}},
	{0,{-1332.6031,-817.1893,75.3023}},
	{0,{-1176.0317,-676.6423,48.4221}},
	{0,{-1056.9240,-463.1037,34.6965}},
	{0,{-947.2189,-254.8894,36.9878}},
	{0,{-792.8929,-249.9980,45.8879}},
	{0,{-562.7043,-256.6750,60.9046}},
	{0,{-316.2539,-286.0246,6.6690}},
	{0,{-272.0051,-223.7131,0.7491}},
	{0,{-302.1390,-159.6033,0.7516}},
	{0,{-224.5988,-172.3030,1.8700}},
	{0,{-142.8315,-189.3140,1.5519}},
	{0,{-125.6160,-173.4721,1.7245}},
	{0,{-126.3775,-20.3938,2.7886}},
	{1,{-52.7965,127.3154,2.7880}},
	{0,{-52.7965,127.3154,2.7880}},
	{0,{-27.6686,157.9936,2.1155}},
	{0,{-5.2347,159.2431,1.7491}},
	{0,{218.4274,46.1648,1.9498}},
	{0,{230.1113,-88.4340,1.1009}},
	{0,{230.0273,-268.5443,1.1006}},
	{0,{205.9705,-307.4175,1.1301}},
	{0,{332.2468,-391.9171,12.2810}},
	{0,{532.9624,-418.1426,28.4018}},
	{0,{631.2547,-417.7620,15.9580}},
	{0,{638.9210,-471.1431,15.8565}},
	{0,{599.3491,-505.5807,15.8574}},
	{0,{628.7352,-533.2062,15.8594}},
	{1,{637.9811,-580.6973,15.8584}},
	{0,{637.9811,-580.6973,15.8584}},
	{0,{647.9406,-622.0186,16.0518}},
	{0,{487.1001,-604.9935,35.3475}},
	{0,{227.8586,-604.9842,31.0738}},
	{0,{53.7878,-654.0306,3.4489}},
	{0,{46.8307,-617.3934,3.1673}},
	{0,{-69.5452,-430.3338,0.7478}},
	{1,{-159.3885,-356.7591,0.9042}},
	{0,{-159.3885,-356.7591,0.9042}},
	{0,{-238.8560,-274.7635,0.7491}},
	{0,{-266.2452,-273.7684,1.3606}},
	{0,{-479.6364,-269.6306,46.8227}},
	{0,{-738.6415,-244.1123,55.8440}},
	{0,{-930.6696,-235.2151,38.3850}},
	{0,{-954.9512,-267.3421,36.2725}},
	{0,{-1127.2024,-527.6874,30.0361}},
	{0,{-1199.4417,-725.4346,57.2638}},
	{0,{-1394.0016,-813.6325,81.2812}},
	{0,{-1682.1772,-759.7511,40.5603}},
	{0,{-1759.1646,-598.3143,15.9505}},
	{0,{-1780.5062,-576.2640,16.0070}},
	{0,{-1815.9708,-560.0258,15.8876}},
	{0,{-1803.9103,-361.1591,19.1933}},
	{0,{-1797.0063,-128.9246,5.3084}},
	{0,{-1811.9873,-114.1868,5.1679}},
	{0,{-1964.3723,-62.7383,25.4352}},
	{1,{-2032.3367,-67.7764,34.8424}},
	{0,{-2032.3367,-67.7764,34.8424}},
	{0,{-2201.4539,-67.3160,34.8417}},
	{0,{-2238.8613,-67.4324,34.8414}},
	{0,{-2250.8760,-57.2726,34.8425}},
	{0,{-2249.4824,138.3279,34.8427}},
	{0,{-2249.3821,306.6966,34.8339}}
};
forward AntiFloodInv(playerid);
public AntiFloodInv(playerid) SetPVarInt(playerid, !"antifloodinv", 0);

forward AntiFloodLaunch(playerid);
public AntiFloodLaunch(playerid) SetPVarInt(playerid, !"antifloodlaunch", 0);

forward PlayKick(playerid);
public PlayKick(playerid) Kick(playerid);
#define Kick(%0) SetTimerEx("PlayKick",1000,false,"d",%0)

#define f format

forward _SetGun(playerid, weaponid, ammo);
public _SetGun(playerid, weaponid, ammo)
{
	new slot = GetWeaponSlot(weaponid);
	if(slot == 0xFFFF) return 0;

	if(PI[playerid][pAmmos][slot] < 7)
	{
	    PI[playerid][pGuns][slot] =
		PI[playerid][pAmmos][slot] = 0;
        return 0;
	}
	PI[playerid][pAmmos][slot] = ammo;
	PI[playerid][pGuns][slot] = weaponid;

	GivePlayerWeapon(playerid, weaponid, ammo);
	if(!PI[playerid][pAmmos][slot]) PI[playerid][pGuns][slot]=0;
	return 1;
}
forward GiveGun(playerid, weaponid, ammo);
public GiveGun(playerid, weaponid, ammo)
{
	new slot = GetWeaponSlot(weaponid);
	if(slot == 0xFFFF) return 0;
	gunmute[playerid] = gettime()+3;

	if(BuyGuns[playerid] == 5) return InvAdd(playerid, Item_Deagle, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);
	if(BuyGuns[playerid] == 6) return InvAdd(playerid, Item_Pistols, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);
	if(BuyGuns[playerid] == 7) return InvAdd(playerid, Item_ShotGun, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);
	if(BuyGuns[playerid] == 8) return InvAdd(playerid, Item_MP5, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);
	if(BuyGuns[playerid] == 9) return InvAdd(playerid, Item_AK47, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);
	if(BuyGuns[playerid] == 10) return InvAdd(playerid, Item_M4, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);
	if(BuyGuns[playerid] == 11) return InvAdd(playerid, Item_Country_Rifle, ammo),aml(101, playerid, "", "покупка оружия", Item_Deagle, ammo);

	GivePlayerWeapon(playerid, weaponid, ammo);
	GameTextForPlayer(playerid, !"New weapon", 0, 1);
	if(!PI[playerid][pAmmos][slot]) PI[playerid][pGuns][slot]=0;
	return 1;
}
forward ResetGun(playerid);
public ResetGun(playerid)
{
    gunmute[playerid] = gettime()+3;
    ResetPlayerWeapons(playerid);
	for(new x; x < 13; x ++)
	{
		PI[playerid][pAmmos][x] =
		PI[playerid][pGuns][x] = 0;
	}
	PI[playerid][pLastGun]=
	PI[playerid][pLastAmmo]= 0;
	return 1;
}
forward GetCarPrice(model);
public GetCarPrice(model)
{
	new cost;
	switch(model)
	{
		case 400: cost = 500000;//Landstalker B
		case 401: cost = 180000;//Bravura D
		case 402: cost = 1500000;//Buffalo A
		case 403: cost = 42000000;//Linerunner
		case 404: cost = 160000;//Perenniel C
		case 405: cost = 340000;//Sentinel C
		case 406: cost = 12000000;//Dumper
		case 407: cost = 14000000;//Firetruck
		case 408: cost = 13000000;//Trashmaster
		case 409: cost = 32000000;//Stretch
		case 410: cost = 130000;//Manana D
	    case 411: cost = 9000000;//Инфернус S
		case 412: cost = 260000;//Voodoo D
		case 413: cost = 360000;//Pony D
		case 414: cost = 740000;//Mule
		case 415: cost = 3200000;//Cheetah A
		case 416: cost = 18000000;//Ambulance
		case 417: cost = 300000000;//Leviathan
		case 418: cost = 360000;//Moonbeam C
		case 419: cost = 260000;//Esperanto D
		case 420: cost = 7000000;//Taxi
		case 421: cost = 400000;//Washington D
		case 422: cost = 180000;//Bobcat C
		case 423: cost = 560000;//Mr Whoopee
		case 424: cost = 8000000;//BF Injection
		case 425: cost = 300000000;//Hunter
		case 426: cost = 220000;//Premier D
		case 427: cost = 20000000;//Enforcer
		case 428: cost = 16000000;//Securicar
		case 429: cost = 3000000;//Banshee A
		case 430: cost = 3000000;//Predator
		case 431: cost = 12000000;//Bus
		case 432: cost = 300000000;//Rhino
		case 433: cost = 300000000;//Barracks
		case 434: cost = 700000;//Hotknife B
		case 435: cost = 900000;//Article Trailer
		case 490: cost = 1100000;//FBI Rancher
		case 487: cost = 14500000;//Maverick Вертолет
	    case 469: cost = 5200000;//Sparrow Вертолет
		case 541: cost = 6800000;//Булка S
		case 451: cost = 6000000;//Туризмо S
		case 506: cost = 2800000;//Super GT A
		case 560: cost = 2700000;//Султан A
		case 559: cost = 2400000;//Jester A
		case 562: cost = 1800000;//Elegy A
		case 495: cost = 1400000;//Sandking A
		case 477: cost = 1380000;//ZR-350 A
		case 565: cost = 1300000;//Flash A
		case 480: cost = 2200000;//Comet B
		case 603: cost = 1740000;//Phoenix B
		case 558: cost = 1580000;//Uranus B
		case 579: cost = 1200000;//Huntley B
		case 554: cost = 1200000;//Yosemite B
		case 602: cost = 860000;//Alpha B
		case 533: cost = 800000;//Feltzer B
		case 587: cost = 680000;//Euros B
		case 535: cost = 460000;//Slamvan B
		case 555: cost = 350000;//Windsor B
		case 561: cost = 1020000;//Stratum C
		case 589: cost = 630000;//Club C
		case 600: cost = 600000;//Picador C
		case 458: cost = 560000;//Solair C
		case 439: cost = 530000;//Stallion C
		case 491: cost = 460000;//Virgo C
		case 475: cost = 440000;//Sabre C
		case 545: cost = 420000;//Hustler C
		case 482: cost = 400000;//Burrito C
		case 549: cost = 360000;//Tampa C
		case 580: cost = 320000;//Stafford C
		case 567: cost = 320000;//Savanna C
		case 575: cost = 260000;//Broadway C
		case 474: cost = 240000;//Hermes C
		case 518: cost = 240000;//Buccaneer C
		case 507: cost = 230000;//Elegant C
		case 479: cost = 210000;//Regina C
		case 496: cost = 200000;//Blista Compact C
		case 516: cost = 196000;//Nebula C
		case 529: cost = 194000;//Willard C
		case 576: cost = 190000;//Tornado C
		case 466: cost = 190000;//Glendale C
		case 478: cost = 170000;//Walton C
		case 547: cost = 162000;//Primo C
		case 526: cost = 160000;//Fortune C
		case 517: cost = 158000;//Majestic C
		case 436: cost = 156000;//Previon C
		case 546: cost = 152000;//Intruder C
		case 542: cost = 140000;//Clover C
		case 536: cost = 640000;//Blade D
		case 489: cost = 5800000;//Rancher D
		case 534: cost = 500000;//Remington D
		case 566: cost = 400000;//Tahoma D
		case 459: cost = 360000;//Berkley's RC Van D
		case 550: cost = 360000;//Sunrise D
		case 483: cost = 280000;//Camper D
		case 551: cost = 260000;//Merit D
		case 492: cost = 220000;//Greenwood D
		case 445: cost = 220000;//Admiral D
		case 500: cost = 200000;//Mesa D
		case 540: cost = 180000;//Vincent D
		case 543: cost = 116000;//Sadler D
		case 527: cost = 98000;//Cadrona D
		case 522: cost = 2000000;//NRG-500 Мото
		case 521: cost = 360000;//FCR-900 Мото
		case 461: cost = 180000;//PCJ-600 Мото
		case 468: cost = 140000;//Sanchez Мото
		case 581: cost = 130000;//BF-400 Мото
		case 463: cost = 100000;//Freeway Мото
		case 586: cost = 90000;//Wayfarer Мото
		case 471: cost = 70000;//Quad Мото
		case 462: cost = 30000;//Faggio Мото
		case 510: cost = 20000;//Mountain Bike Мото
		case 481: cost = 15000;//BMX Мото
		case 509: cost = 10000;//Bike Мото
		//Черный рынок
		case 573: cost = 36000000;//Dune
		case 528: cost = 40000000;//FBI Truck
		case 438: cost = 7000000;//Cabbie(Taxi)
		case 504: cost = 14000000;//Bloodring Banger
		case 455: cost = 40000000;//Flatbed
		case 539: cost = 22000000;//Vortex
		case 494: cost = 14000000;//Hotring Racer S
		case 502: cost = 14000000;//Hotring Racer S
		case 503: cost = 14000000;//Hotring Racer S
		case 519: cost = 50000000;//Shamal
		case 612: cost = 250000000; // 
		case 613: cost = 350000000; //
		case 614: cost = 150000000; //
		case 662: cost = 200000000; //
		case 665: cost = 350000000; //
		case 666: cost = 550000000; //
		case 667: cost = 350000000; //
		case 668: cost = 250000000; //
		case 699: cost = 450000000; //
		case 793: cost = 150000000; //
		case 794: cost = 250000000; //
		case 909: cost = 450000000; //
		case 965: cost = 350000000; //
		case 1194: cost = 150000000; //
		case 1195: cost = 250000000; //
		case 1196: cost = 450000000; //
		case 1197: cost = 350000000; //
		case 1198: cost = 250000000; //
		case 1199: cost = 150000000; //
		case 1200: cost = 200000000; //
		case 1201: cost = 300000000; //
		case 1202: cost = 400000000; //
		case 1203: cost = 180000000; //
		case 1204: cost = 200000000; //
		case 1205: cost = 250000000; //
		case 3155: cost = 350000000; //
		case 3156: cost = 450000000; //
		case 3157: cost = 300000000; //
		case 3158: cost = 160000000; //
		case 3194: cost = 200000000; //
		case 3195: cost = 300000000; //
		case 3196: cost = 180000000; //
		case 3197: cost = 350000000; //
		case 3198: cost = 500000000; //
		case 3199: cost = 250000000; //
		///////
		default: cost = 180000;
	}
	return cost;
}
forward Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2);
public Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
{
	return floatsqroot(floatpower(floatabs(floatsub(x2,x)),2)+floatpower(floatabs(floatsub(y2,y)),2)+floatpower(floatabs(floatsub(z2,z)),2));
}
/*-------- [ Система ларьков ] --------*/
stock ShowStall(playerid)
{
	if(StallOpen{playerid}) return 1;
	if(DEBUG_ON) SCM(playerid, -1, "ShowStall(playerid)");
	#include ../library/TEXTDRAWS/stall
	for(new i ; i < 12; i++)
	{
		TextDrawShowForPlayer(playerid, StallTD[i]);
		if(i < 6) PlayerTextDrawShow(playerid, PlayerStallTD[playerid][i]);
	}
	StallOpen{playerid} = true;
	return SelectTextDraw(playerid, 0xFFFFFFAA);
}
stock HideStall(playerid)
{
	if(!StallOpen{playerid}) return 1;
	if(DEBUG_ON) SCM(playerid, -1, "HideStall(playerid)");
	for(new i ; i < 12; i++)
	{
		TextDrawHideForPlayer(playerid, StallTD[i]);
		if(i < 6) DestroyPlayerTD(playerid, PlayerStallTD[playerid][i]);
	}
    StallOpen{playerid} = false;
	SelectStallItem{playerid} = 0;
	return CancelSelectTextDraw(playerid);
}

/*-------- [ Система контейнеров ] --------*/
stock LoadContainer()
{
	new j, k, currenttime = GetTickCount(), count;
	for(new i ; i < sizeof(ContainerInfo); i++)
	{
		j = random(sizeof(ContainerTemp));
		k = random(sizeof(ContainerMatObject));
		SetString(ContainerInfo[i][ContName], ContainerTemp[j][ContName]);
		SetString(ContainerInfo[i][ContText], ContainerTemp[j][ContText]);
		SetString(ContainerInfo[i][ContObjectName], ContainerMatObject[k][ContObjectName]);
		SetString(ContainerInfo[i][ContObjectText], ContainerMatObject[k][ContObjectText]);
		ContainerInfo[i][ContObjectMaterial] = ContainerMatObject[k][ContObjectMaterial];
		ContainerInfo[i][ContType] = ContainerTemp[j][ContType];
		ContainerInfo[i][ContCost] = ContainerTemp[j][ContCost];
		ContainerInfo[i][ContID] = ContainerTemp[j][ContID];

		Conteinertext[i] = CreateDynamic3DTextLabel("",-1,ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]+1.2,10.0);
		PrizeCont[i] = CreateDynamic3DTextLabel("",-1,ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1]-3.7844, ContainerInfo[i][ContPos][2]+1.9535,5.0);
		ContainerPickup[i] = CreatePickup(1254, 23, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2], -1);
		// Левая надпись
		ContainerMapText[i] = CreateDynamicObject(2789, ContainerMap[i][ContTextLeftPos][0], ContainerMap[i][ContTextLeftPos][1], ContainerMap[i][ContTextLeftPos][2], 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 2
		SetDynamicObjectMaterialText(ContainerMapText[i], 0, ContainerInfo[i][ContText], 130, "Impact", 120, 0, 0xFFFFFFFF, 0, 1);
		// Правая надпись
		ContainerMapText[i] = CreateDynamicObject(2789, ContainerMap[i][ContTextRightPos][0], ContainerMap[i][ContTextRightPos][1], ContainerMap[i][ContTextRightPos][2], 0.000000, 0.000000, 270.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 2
		SetDynamicObjectMaterialText(ContainerMapText[i], 0, ContainerInfo[i][ContText], 130, "Impact", 120, 0, 0xFFFFFFFF, 0, 1);
		// Левая часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapLeftPos][0], ContainerMap[i][ContMapLeftPos][1], ContainerMap[i][ContMapLeftPos][2], 0.000000, 0.000059, 0.000000, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Правая часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapRightPos][0], ContainerMap[i][ContMapRightPos][1], ContainerMap[i][ContMapRightPos][2], 0.000000, 0.000059, 0.000000, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Середня часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapMiddlePos][0], ContainerMap[i][ContMapMiddlePos][1], ContainerMap[i][ContMapMiddlePos][2], 0.000000, 89.999939, 179.999634, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Нижняя часть
		ContainerMaterialObject[i] = CreateDynamicObject(19445, ContainerMap[i][ContMapDownPos][0], ContainerMap[i][ContMapDownPos][1], ContainerMap[i][ContMapDownPos][2], 0.000000, 90.000061, 0.000000, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerMaterialObject[i], 0, ContainerInfo[i][ContObjectMaterial], ContainerInfo[i][ContObjectName], ContainerInfo[i][ContObjectText], 0);
		// Левая дверь
		ContainerLeftDoor[i] = CreateDynamicObject(19426, ContainerInfo[i][ContDoorLeftPos][0], ContainerInfo[i][ContDoorLeftPos][1], ContainerInfo[i][ContDoorLeftPos][2], 0.000059, 0.000000, 89.999817, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerLeftDoor[i], 0, 3564, "dockcargo2_las", "lastrk5", 0);
		// Правая дверь
		ContainerRightDoor[i] = CreateDynamicObject(19426, ContainerInfo[i][ContDoorRightPos][0], ContainerInfo[i][ContDoorRightPos][1], ContainerInfo[i][ContDoorRightPos][2], -0.000052, 540.000000, -89.999847, -1, -1, -1, STREAMER_OBJECT_SD, 300.0); // 1
		SetDynamicObjectMaterial(ContainerRightDoor[i], 0, 3564, "dockcargo2_las", "lastrk5", 0);
		ContainerAction(i, 0);
		count++;
	}
	printf("LoadContainer(%i) загрузился за %i ms", count, GetTickCount() - currenttime);
	return 1;
}
stock RandomGetID(t)
{
	new cout;
	for(new i; i < 40 ; i++) if(ContainerRandom[t][ContMaxChance][i]) cout++;
	return cout;
}
stock CheckContList(cont, k)
{
	new ID = ContainerInfo[cont][ContID], m = RandomGetID(ID) - 1, d = -1;
	for(new i; i < m; i++)
	{
	    if(k >= ContainerRandom[ID][ContMinChance][i] && k <= ContainerRandom[ID][ContMaxChance][i]) return d = i;
	}
	return d;
}
stock RandomContainer(cont)
{
	new k, ID = ContainerInfo[cont][ContID], b = ContainerRandom[ID][ContMinChance][RandomGetID(ID) - 1], g;
    for(new i ; i < 6; i++)
    {
        k = randomEx(1, b + 1), g = CheckContList(cont, k);
		if(g != -1)
		{
			if(ContainerRandom[ID][ContMinValue][g] >= 1 && ContainerRandom[ID][ContMaxValue][g] == 1) gContainer[cont][gPrizeAmount][i] = randomEx(1, ContainerRandom[ID][ContMinValue][g] + 1);
			else if(ContainerRandom[ID][ContMinValue][g] == 1 && ContainerRandom[ID][ContMaxValue][g] == 1) gContainer[cont][gPrizeAmount][i] = ContainerRandom[ID][ContMaxValue][g];
			else if(ContainerRandom[ID][ContMinValue][g] >= 1 && ContainerRandom[ID][ContMaxValue][g] > 1) gContainer[cont][gPrizeAmount][i] = randomEx(ContainerRandom[ID][ContMinValue][g], ContainerRandom[ID][ContMaxValue][g] + 1);
			else gContainer[cont][gPrizeAmount][i] = ContainerRandom[ID][ContMinValue][g];
			gContainer[cont][gPrize][i] = ContainerRandom[ID][ContItem][g];
		}
	}
	return 1;
}

stock ContainerOpenTake(playerid, cont)
{
	if(ContainerTakeOpen{playerid} || gContainer[cont][gStatus] != 3 || !GetString(gContainer[cont][gOwned], PN(playerid)) || cont == -1) return 0;
	#include "../library/TEXTDRAWS/ContainerTake.inc"
	for(new i ; i < 64; i++) PlayerTextDrawShow(playerid, ContainerTake[playerid][i]);
	PlayerTextDrawSetStringf(playerid, ContainerTake[playerid][55], "%s", ContainerInfo[cont][ContText]);
	ContainerTakeOpen{playerid} = true;
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][1]);
	ContTakeOpen(playerid, cont);
	return 1;
}
stock ContainerCloseTake(playerid)
{
	if(!ContainerTakeOpen{playerid}) return 1;
	for(new i ; i < 64; i++) DestroyPlayerTD(playerid, ContainerTake[playerid][i]);
	ContainerTakeOpen{playerid} = false;
	CancelSelectTextDraw(playerid);
	return 1;
}
stock GiveItemContainer(playerid, ID, cont, Item)
{
	if(gContainer[cont][gBlockSlot][ID] == true || !GetString(gContainer[cont][gOwned], PN(playerid)) || !Item) return 0;
	Item_SelectID[playerid] = ID; // slot
	Item_Select[playerid] = cont; // id conta
	f(str_1, 850, "{FFFFFF}%s\n{FFFFFF}\nВы действительно желаете {869C71}забрать {FFFFFF}данный предмет?",ItemsInfo[Item][ItemInfo]);
	f(str_2, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[cont][ContName]);
	SPD(playerid, 83, 0, str_2, str_1, !"»", "x");
	return 1;
}
stock ContTextDrawText(playerid, cont)
{
	new d;
	for(new i ; i < 6; i++)
	{
	 	d = i + 6;
		if(gContainer[cont][gBlockSlot][i] == true) PlayerTextDrawColor(playerid, ContainerTake[playerid][d], 0xD0341BFF);
		else PlayerTextDrawColor(playerid, ContainerTake[playerid][d], 0x869C71FF);
		PlayerTextDrawShow(playerid, ContainerTake[playerid][d]);
	}
	return 1;
}
stock ContTakeOpen(playerid, cont)
{
	new k, d, b;
	ContTextDrawText(playerid, cont);
	for(new i ; i < 6; i++)
	{
		k = gContainer[cont][gPrize][i], d = i + 6, b = gContainer[cont][gPrizeAmount][i];
		PlayerTextDrawSetStringf(playerid, ContainerTake[playerid][d], "%s(%i)", FixText(ItemsInfo[k][ItemName]), b);
		PlayerTextDrawSetPreviewModel(playerid, ContainerTake[playerid][i], ItemsInfo[k][ItemModel]);
		PlayerTextDrawSetPreviewRot(playerid, ContainerTake[playerid][i], ItemsInfo[k][ItemPosX], ItemsInfo[k][ItemPosY], ItemsInfo[k][ItemPosZ], ItemsInfo[k][ItemPosC]);
		PlayerTextDrawShow(playerid, ContainerTake[playerid][i]);
	}
	return 1;
}
stock ContainerOpen(playerid, cont)
{
	SendClientMessage(playerid, -1, "{73B461}[Container-System] {FFFFFF}Вы открыли контейнер! Войдите в него для того, чтобы забрать приз");
	DestroyPickup(ContainerPickup[cont]);
	ContainerPickup[cont] = CreatePickup(1254, 23, ContainerInfo[cont][ContPos][0], ContainerInfo[cont][ContPos][1]-2.2787, ContainerInfo[cont][ContPos][2]+1.0584, -1);
	ContainerGateAction(cont, 1);
	gContainer[cont][gTime] = 0;
	gContainer[cont][gTimeDell] = 0;
	gContainer[cont][gTimeClose] = 300;
	gContainer[cont][gStatus] = 3;
	RandomContainer(cont);
	Container3dText(cont, gContainer[cont][gStatus]);
	return 1;
}
stock ContainerDialog(playerid, i)
{
	if(!EnableContainers) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Контейнеры отключены!");
	format(str_1, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[i][ContName]);
	switch( gContainer[i][gStatus] )
	{
		case 0:
		{
			if(!gContainer[i][gStatus]) format(str_2, sizeof(str_2), "{FFFFFF}Наименование\t{FFFFFF}Параметр\n{FFFFFF}Посмотреть возможный выигрыш	[ {FAAC58}Посмотреть{FFFFFF} ]\nКласс\t%s\nНачальная цена: %s {FAAC58}%i\n{FAAC58}Аукцион закрыт:{FFFFFF} ( {FAAC58}%i:00{FFFFFF} ):\n- Последняя ставка\t{FAAC58}%s{FFFFFF}\n- Последняя сумма\t%s {FAAC58}%i\n{FF0000}Аукцион закрыт!", ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ContainerTime, 
			gContainer[i][gOwned], ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash]);
		}
		case 1:
		{
			format(str_2, sizeof(str_2), "{FFFFFF}Наименование\t{FFFFFF}Параметр\n{FFFFFF}Посмотреть возможный выигрыш	[ {FAAC58}Посмотреть{FFFFFF} ]\nКласс\t%s\nНачальная цена: %s {FAAC58}%i\n{FAAC58}Аукцион:{FFFFFF} ( {FAAC58}%s{FFFFFF} ):\n- Последняя ставка\t{FAAC58}%s{FFFFFF}\n- Последняя сумма\t%s {FAAC58}%i\n{73B461}Участвовать в аукционе", ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ConvertTD(gContainer[i][gTime]), 
			gContainer[i][gOwned], ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash]);
		} 
		case 2:
		{
			format(str_2, sizeof(str_2), "{FFFFFF}Наименование\t{FFFFFF}Параметр\n{FFFFFF}Посмотреть возможный выигрыш	[ {FAAC58}Посмотреть{FFFFFF} ]\nКласс\t%s\nНачальная цена: %s {FAAC58}%i\n{FAAC58}Аукцион завершен:{FFFFFF} ( {FAAC58}%s{FFFFFF} ):\n- Владелец\t{FAAC58}%s{FFFFFF}\n- Купил за\t%s {FAAC58}%i\n{73B461}Открыть контейнер", ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ConvertTD(gContainer[i][gTimeDell]), 
			gContainer[i][gOwned], ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash]);
		}
	}
	return SPD(playerid, 13000, DIALOG_STYLE_TABLIST_HEADERS, str_1, str_2, "»", "x");
}
stock ContainerAction(cont, action)
{
	new hour;
	gettime(hour, _, _);
	if(hour >= 19 && hour <= 23 || hour >= 0 && hour < 12) ContainerTime = 12;
	else if(hour >= 12 && hour < 15) ContainerTime = 15;
	else if(hour >= 15 && hour < 19) ContainerTime = 19;
    switch(action)
    {
    	case 0:
    	{
    		if(gContainer[cont][gStatus] == 3) ContainerGateAction(cont, 0);
			gContainer[cont][gTime] = 0;
			gContainer[cont][gTimeClose] = 0;
			gContainer[cont][gStatus] = 0;
			gContainer[cont][gCash] = 0;
			DestroyPickup(ContainerPickup[cont]);
			ContainerPickup[cont] = CreatePickup(1254, 23, ContainerInfo[cont][ContPos][0], ContainerInfo[cont][ContPos][1], ContainerInfo[cont][ContPos][2], -1);
			SetString(gContainer[cont][gOwned], "-");
			Container3dText(cont, gContainer[cont][gStatus]);
			for(new i ; i < 6; i++) gContainer[cont][gBlockSlot][i] = false, gContainer[cont][gPrize][i] = 0, gContainer[cont][gPrizeAmount][i] = 0;
    	}
    	case 1: ContainerAuction(cont);
    }
	return 1;
}
stock ContainerGateAction(cont, sgate)
{
	switch(sgate)
	{
		case 0:
		{
			MoveDynamicObject(ContainerLeftDoor[cont], ContainerInfo[cont][ContDoorLeftPos][0], ContainerInfo[cont][ContDoorLeftPos][1], ContainerInfo[cont][ContDoorLeftPos][2], 0.5, 0.000059, 0.000000, 89.999817);
            MoveDynamicObject(ContainerRightDoor[cont], ContainerInfo[cont][ContDoorRightPos][0], ContainerInfo[cont][ContDoorRightPos][1], ContainerInfo[cont][ContDoorRightPos][2], 0.5, -0.000052, 540.000000, -89.999847);
		}
		case 1:
		{
        	MoveDynamicObject(ContainerLeftDoor[cont], ContainerInfo[cont][ContDoorLeftPosOpen][0], ContainerInfo[cont][ContDoorLeftPosOpen][1], ContainerInfo[cont][ContDoorLeftPosOpen][2], 0.5, 9.9999997473788e-05, 0, -36.960201263428);
            MoveDynamicObject(ContainerRightDoor[cont], ContainerInfo[cont][ContDoorRightPosOpen][0], ContainerInfo[cont][ContDoorRightPosOpen][1], ContainerInfo[cont][ContDoorRightPosOpen][2], 0.5, -9.9999997473788e-05, 540, 35.460201263428);
		}
	}
}
stock Container3dText(i, status)
{
	switch(status)
	{
		case 0: format(str_1,sizeof(str_1),"Контейнер:\n\nКласс: %s\nНачальная цена: %s {FAAC58}%i\n\n{FF0000}Следующий аукцион:{FFFFFF}\n\n- %i:00",ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ContainerTime);
		case 1: format(str_1,sizeof(str_1),"Контейнер:\n\nКласс: %s\nНачальная цена: %s {FAAC58}%i\n\n{FF0000}Аукцион {FFFFFF}( {FAAC58}%s {FFFFFF})\n\n- Последняя ставка: {FAAC58}%s\n{FFFFFF}- Последнаяя сумма: %s {FAAC58}%i",ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ConvertTD(gContainer[i][gTime]), gContainer[i][gOwned], ContainerInfo[i][ContType] ? ("AZ") : ("$"), gContainer[i][gCash]);
		case 2: format(str_1,sizeof(str_1),"Контейнер:\n\nКласс: %s\nНачальная цена: %s {FAAC58}%i\n\n{FF0000}Аукцион завершен{FFFFFF}( {FAAC58}%s {FFFFFF})\n\n- Владелец: {FAAC58}%s\n{FFFFFF}- Приобрел за: %s {FAAC58}%i",ContainerInfo[i][ContName], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContCost], ConvertTD(gContainer[i][gTimeDell]), gContainer[i][gOwned], ContainerInfo[i][ContType] ? ("AZ") : ("$"), gContainer[i][gCash]);
		case 3: 
		{
			format(str_1,sizeof(str_1),"{FF0000}Контейнер закроется через{FFFFFF} ( {FAAC58}%s{FFFFFF} ):{FFFFFF}\n\n- Владелец: {FAAC58}%s{FFFFFF}\n- Приобрел за: %s {FAAC58}%i\n\n{FF0000}Призы:{FFFFFF}\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )\n- %s ( {FAAC58}%i{FFFFFF} )", ConvertTD(gContainer[i][gTimeClose]), 
			gContainer[i][gOwned], ContainerInfo[i][ContType] ? ("AZ") : ("$"), gContainer[i][gCash], ItemsInfo[gContainer[i][gPrize][0]][ItemName], gContainer[i][gPrizeAmount][0], ItemsInfo[gContainer[i][gPrize][1]][ItemName], gContainer[i][gPrizeAmount][1], ItemsInfo[gContainer[i][gPrize][2]][ItemName], 
			gContainer[i][gPrizeAmount][2], ItemsInfo[gContainer[i][gPrize][3]][ItemName], gContainer[i][gPrizeAmount][3], 
			ItemsInfo[gContainer[i][gPrize][4]][ItemName], gContainer[i][gPrizeAmount][4], ItemsInfo[gContainer[i][gPrize][5]][ItemName], gContainer[i][gPrizeAmount][5]);
		}
	}
	if(status == 3) UpdateDynamic3DTextLabelText(PrizeCont[i],-1,str_1), UpdateDynamic3DTextLabelText(Conteinertext[i],-1, "");
	else UpdateDynamic3DTextLabelText(Conteinertext[i],-1,str_1), UpdateDynamic3DTextLabelText(PrizeCont[i],-1, " ");
}
stock ContainerAuction(cont)
{
	gContainer[cont][gTime] = 300;
	gContainer[cont][gTimeDell] = 0;
	gContainer[cont][gTimeClose] = 0;
	gContainer[cont][gStatus] = 1;
	Container3dText(cont, gContainer[cont][gStatus]);
	return 1;
}
stock ContainerTimer()
{	
	new ContHour, ContMinute, ContSecond;
	gettime(ContHour, ContMinute, ContSecond);
	for(new i ; i < sizeof(ContainerInfo); i++)
	{
		if(gContainer[i][gTime] > 0)
		{
			gContainer[i][gTime]--;
		    if(!gContainer[i][gTime] && GetString(gContainer[i][gOwned], "-")) ContainerAction(i, 0);
		    if(!gContainer[i][gTime] && !GetString(gContainer[i][gOwned], "-"))
		   	{
		   		gContainer[i][gStatus] = 2;
		   		gContainer[i][gTimeDell] = 300;
		   		gContainer[i][gTime] = 0;
		   	}
			Container3dText(i, gContainer[i][gStatus]);
		}
		if(gContainer[i][gTimeClose] > 0)
		{
			gContainer[i][gTimeClose]--;
	     	if(!gContainer[i][gTimeClose]) ContainerAction(i, 0);
	     	Container3dText(i, gContainer[i][gStatus]);
		}
		if(gContainer[i][gTimeDell] > 0)
		{
			gContainer[i][gTimeDell]--;
	     	if(!gContainer[i][gTimeDell]) ContainerAction(i, 0);
	     	Container3dText(i, gContainer[i][gStatus]);
   		}
		if(gContainer[i][gTimeClose] > 0)
		{
			gContainer[i][gTimeClose]--;
	     	if(!gContainer[i][gTimeClose]) ContainerAction(i, 0);
	     	Container3dText(i, gContainer[i][gStatus]);
   		}
		if(!gContainer[i][gStatus] && ContHour == ContainerTime && !ContMinute && !ContSecond) ContainerAction(i, 1);
	}
}
/*-------- ================== --------*/


/*-------- [ Система крафта ] --------*/
stock ShowCraft(playerid)
{
	if(CraftOpened{playerid}) return false;
	#include ../library/TEXTDRAWS/craft.inc
 	CraftTabSelect{playerid} = 1;
 	CraftItemSelect{playerid} = 0;
 	CraftPageSelect{playerid} = 1;
 	CraftOpened{playerid} = true;
 	CraftAmount{playerid} = 1;
	CraftOpen(playerid);
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	return 1;
}
stock ShowCraftSelectColor(playerid)
{
	if(CraftColorOpened{playerid}) return false;
	#include ../library/TEXTDRAWS/CraftColor.inc
	for(new i ; i < 11; i++) PlayerTextDrawShow(playerid, Invent_CraftColor[playerid][i]);
	PlayerTextDrawSetString(playerid, Invent_Craft[playerid][0], "");
	PlayerTextDrawShow(playerid, Invent_Craft[playerid][0]);
	return CraftColorOpened{playerid} = true;
}
stock HideCraftSelectColor(playerid, dell = 0)
{
	if(!CraftColorOpened{playerid}) return false;
	for(new i ; i < 11; i++) DestroyPlayerTD(playerid, Invent_CraftColor[playerid][i]);
	PlayerTextDrawSetString(playerid, Invent_Craft[playerid][0], "SELECT COLOR");
	PlayerTextDrawShow(playerid, Invent_Craft[playerid][0]);
	if(dell)
	{
		DestroyPlayerTD(playerid, Invent_CraftColorBox[playerid][0]);
		CraftSelectColor[playerid] = 0;
		// обнуление переменных
	}
	return CraftColorOpened{playerid} = false;	
}
stock CreateCraftBoxTextDraw(playerid)
{
	Invent_CraftColorBox[playerid][0] = CreatePlayerTextDraw(playerid, 289.174988, 203.850006, "usebox");
	PlayerTextDrawLetterSize(playerid, Invent_CraftColorBox[playerid][0], 0.000000, 0.185949);
	PlayerTextDrawTextSize(playerid, Invent_CraftColorBox[playerid][0], 282.390625, 0.000000);
	PlayerTextDrawAlignment(playerid, Invent_CraftColorBox[playerid][0], 1);
	PlayerTextDrawColor(playerid, Invent_CraftColorBox[playerid][0], 0xE1E1E1FF);
	PlayerTextDrawUseBox(playerid, Invent_CraftColorBox[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, Invent_CraftColorBox[playerid][0], CraftSelectColor[playerid]);
	PlayerTextDrawSetShadow(playerid, Invent_CraftColorBox[playerid][0], 2);
	PlayerTextDrawSetOutline(playerid, Invent_CraftColorBox[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, Invent_CraftColorBox[playerid][0], 0x000000FF);
	PlayerTextDrawFont(playerid, Invent_CraftColorBox[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, Invent_CraftColorBox[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, Invent_CraftColorBox[playerid][0], 0);
}
stock StartCraft(playerid)
{
	CraftStart{playerid} = 1;
	TogglePlayerControllable(playerid,false);
	switch(random(3))
	{
		case 0: ApplyAnimation(playerid, !"SCRATCHING", !"SCMID_L", 4.1, 1, 1, 1, 1, 0, 1);
		case 1: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_REACT_MISS", 4.1, 1, 1, 1, 1, 0, 1);
		case 2: ApplyAnimation(playerid, !"CASINO", !"DEALONE", 4.1, 1, 1, 1, 1, 0, 1);
	}
	CraftTimer{playerid} = SetTimerEx("CraftStop", 5000, 0, "d", playerid);
	HideCraft(playerid);
	return 1;
}
void CraftStop(playerid)
{
	ClearAnims(playerid);
	TogglePlayerControllable(playerid,true);
	new ID = SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}+CraftItemSelect{playerid}, number_random = randomEx(1, 101), vip = 1;
	if(PI[playerid][pVIP] > 5) vip = 2;
	if(number_random <= CraftInfo[ID][CraftChance]*vip) 
	{
		SCMf(playerid, COLOR_VALIK, "Вы успешно создали предмет '%s' (шанс изготовления %i процент(ов))", ItemsInfo[CraftInfo[ID][CraftItem]][ItemName], CraftInfo[ID][CraftChance]*vip);
		InvAdd(playerid, CraftInfo[ID][CraftItem], 1, 1, CraftSelectColor[playerid]);
		aml(101, playerid, "", "крафт", CraftInfo[ID][CraftItem], 1);
		GameTextForPlayer(playerid, "~g~SUCCESSFULLY", 1500, 1);
	}
	else 
	{
		SCMf(playerid, 0xAFAFAFFF, "Создание предмета '%s' не удалось (шанс изготовления %i процент(ов))", ItemsInfo[CraftInfo[ID][CraftItem]][ItemName], CraftInfo[ID][CraftChance]*vip);
		GameTextForPlayer(playerid,"Failing",1500,1);
	}
	for(new i ; i < 5; i ++)
	{
		if(CraftInfo[ID][CraftNeed][i] != 1649)
		{
			InvAdd(playerid, CraftInfo[ID][CraftNeed][i], -CraftInfo[ID][CraftNeedAmount][i], 0);
			aml(102, playerid, "", "крафт", CraftInfo[ID][CraftNeed][i], CraftInfo[ID][CraftNeedAmount][i]);
		}
	}
	GiveMoney(playerid, -CraftInfo[ID][CraftCost]);
	CraftAmount{playerid}--;
	if(CraftStart{playerid} && CraftAmount{playerid}) StartCraft(playerid);
	else CraftStart{playerid} = 0, ShowCraft(playerid);
	return 1;
}
stock CraftResetString(playerid)
{
	for(new i = 40; i > 29; i--) 
	{ 
		PlayerTextDrawSetString(playerid, Invent_Craft[playerid][i], " ");
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	}
}

stock CraftSetColorItem(playerid, slot)
{
	if(slot == 9) return HideCraftSelectColor(playerid, 1);
	CraftSelectColor[playerid] = PlayerTextDrawGetColor(playerid, Invent_CraftColor[playerid][slot]);
	CraftRequirements(playerid);
	CreateCraftBoxTextDraw(playerid);
	if(!IsPlayerTextDrawVisible(playerid, Invent_CraftColorBox[playerid][0])) PlayerTextDrawShow(playerid, Invent_CraftColorBox[playerid][0]);
	HideCraftSelectColor(playerid);
	return true;
}

stock CraftOpen(playerid)
{
	HideCraftSelectColor(playerid, 1);
	new ID = CraftInfo[SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}][CraftItem], Chance = CraftInfo[SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}][CraftChance], Cost = CraftInfo[SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}][CraftCost];
	for(new i ; i < 59; i++) PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	if(PI[playerid][pMoney] < CraftInfo[SearchSelectItemCraft(playerid)][CraftCost])
	{
		if(CraftAmount{playerid}) PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][6], "~r~$%i", CraftInfo[SearchSelectItemCraft(playerid)][CraftCost]); // Стоимость;
		else PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][6], "~r~$%i / %i", Cost, Cost*10); // Стоимость;
		PlayerTextDrawSetString(playerid, Invent_Craft[playerid][7], "~r~COST"); // Стоимость;
	}
	else 
	{
		if(CraftAmount{playerid}) PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][6], "~g~$%i", CraftInfo[SearchSelectItemCraft(playerid)][CraftCost]); // Стоимость;
		else PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][6], "~g~$%i / %i", Cost, Cost*10); // Стоимость;
		PlayerTextDrawSetString(playerid, Invent_Craft[playerid][7], "~g~COST"); // Стоимость;
	}
	PlayerTextDrawHide(playerid, Invent_Craft[playerid][0]);
	PlayerTextDrawHide(playerid, Invent_Craft[playerid][1]);
	if(CraftTabSelect{playerid} == 1) 
	{
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][0]);
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][1]);
	}
	PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][28], "%i / %i", CraftPageSelect{playerid}, IntRound(GetAllAmountCraft(playerid)));
	PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][25], "%s", FixText(ItemsInfo[ID][ItemName]));
	if(PI[playerid][pVIP] > 5) PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][5], "SUCCESS CHANCE: %i% (+%i%)", Chance, Chance*2); // Шанс
	else PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][5], "SUCCESS CHANCE: %i%", Chance); // Шанс
	if(!ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Invent_Craft[playerid][2], 0x333333FF);
	else PlayerTextDrawBackgroundColor(playerid, Invent_Craft[playerid][2], ItemsInfo[ID][ItemColor]);
	PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][9], "%i", CraftAmount{playerid});
	PlayerTextDrawCraftTabUpdate(playerid, CraftTabSelect{playerid});
	for(new i = 40; i > 29+GetCyclCraft(playerid); --i) 
	{
		CraftResetString(playerid);
		for(new j ; j < 10-GetCyclCraft(playerid); j++) 
		{
			i--;
			PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][i], 1);
			PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][i], "%s", FixText(ItemsInfo[CraftInfo[SearchSelectItemCraft(playerid)+j][CraftItem]][ItemName]));
			PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
		}
	}
	CraftRequirements(playerid);
	PlayerTextDrawSelectUpdate(playerid, CraftItemSelect{playerid});
	PlayerTextDrawSetPreviewModel(playerid, Invent_Craft[playerid][2], ItemsInfo[ID][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, Invent_Craft[playerid][2], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	PlayerTextDrawShow(playerid, Invent_Craft[playerid][2]);
	return 1;
}
stock PlayerTextDrawTabReset(playerid)
{
	for(new i = 55; i > 49 ; i--)
	{
		PlayerTextDrawColor(playerid, Invent_Craft[playerid][i], 0x777777FF);
		PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][i], 1);
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	}
	return 1;
}
stock CraftRequirementsReset(playerid)
{
	for(new i = 18; i > 12; i--) 
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent_Craft[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, Invent_Craft[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	}
	return 1;
}
stock CraftRequirementsResetString(playerid)
{
	for(new i = 23; i > 17; i--) PlayerTextDrawSetString(playerid, Invent_Craft[playerid][i], "");
	return 1;
}
stock CraftRequirements(playerid)
{
	new ID = SearchSelectItemCraft(playerid)+CraftItemSelect{playerid};
	CraftRequirementsReset(playerid);
	if(!CraftSelectColor[playerid] )
	{
		if(CraftWriteSlot[playerid][0]) CraftInfo[ID][CraftNeed][CraftWriteSlot[playerid][0]] = 1649;
		if(CraftWriteSlot[playerid][1]) CraftInfo[ID][CraftNeedAmount][CraftWriteSlot[playerid][1]] = 0;
	}
	if(CraftSelectColor[playerid]) CraftRequirementSearchSlot(playerid);
	CraftRequirementsText(playerid);
	for(new i = 18; i > 12; --i) 
	{
		for(new j ; j < 5; j++) 
		{
			i--;
			new Need = CraftInfo[ID][CraftNeed][j];
			if(Need != 1649)
			{
				PlayerTextDrawSetPreviewModel(playerid, Invent_Craft[playerid][i], ItemsInfo[Need][ItemModel]);
				PlayerTextDrawSetPreviewRot(playerid, Invent_Craft[playerid][i], ItemsInfo[Need][ItemPosX], ItemsInfo[Need][ItemPosY], ItemsInfo[Need][ItemPosZ], ItemsInfo[Need][ItemPosC]);
				PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][i], true);
			}
			else PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][i], false);
			PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
		}
	}
	return 1;
}
stock CraftRequirementsText(playerid)
{
	new ID = SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}, bool:lock[5];
	CraftRequirementsResetString(playerid);
	for(new i = 23; i > 17; --i)
	{
		for(new j; j < 5; j++)
		{
			new Need = CraftInfo[ID][CraftNeed][j];
			new NeedAmount = CraftInfo[ID][CraftNeedAmount][j]*CraftAmount{playerid};
			new count = GetInvCount(playerid, Need);
			i--;
			if(Need != 1649)
			{
				PlayerTextDrawSetStringf(playerid, Invent_Craft[playerid][i], "%i / %i", count, NeedAmount);
				if(count < NeedAmount) PlayerTextDrawColor(playerid, Invent_Craft[playerid][i], 0xFF0000FF);
				else if(count >= NeedAmount && PI[playerid][pMoney] >= CraftInfo[ID][CraftCost]*CraftAmount{playerid})
				{
					lock[j] = true;
					PlayerTextDrawColor(playerid, Invent_Craft[playerid][i], 0x008000FF);
				}
				else lock[j] = false, PlayerTextDrawColor(playerid, Invent_Craft[playerid][i], 0xFF0000FF);
			}
			else lock[j] = true;
			PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
		}
	}
	if(lock[0] && lock[1] && lock[2] && lock[3] && lock[4])
	{
		if(!PlayerTextDrawIsSelectable(playerid, Invent_Craft[playerid][4]))
		{
			PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][4], true);
			PlayerTextDrawColor(playerid, Invent_Craft[playerid][4], 0x5e9e4bFF);
			PlayerTextDrawShow(playerid, Invent_Craft[playerid][4]);
		}
	}
	else
	{
		if(PlayerTextDrawIsSelectable(playerid, Invent_Craft[playerid][4]))
		{
			PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][4], false);
			PlayerTextDrawColor(playerid, Invent_Craft[playerid][4], 0xBE6955FF);
			PlayerTextDrawShow(playerid, Invent_Craft[playerid][4]);
		}
	}
}
stock CraftRequirementSearchSlot(playerid)
{
	new ID = SearchSelectItemCraft(playerid)+CraftItemSelect{playerid};
	for(new j ; j < 5; j++) 
	{
		if(CraftInfo[ID][CraftNeed][j] == 1649)
		{
			CraftInfo[ID][CraftNeed][j] = 1209;
			CraftInfo[ID][CraftNeedAmount][j] = 10;
			CraftWriteSlot[playerid][0] = j;
			CraftWriteSlot[playerid][1] = j;
			CraftSelectColor[playerid] = 0;
			CraftRequirementsText(playerid);
			break;
		}
	}
	return 1;
}
stock PlayerTextDrawCraftTabUpdate(playerid, wtab)
{
	switch(wtab)
	{
		case 1: wtab = 55; case 2: wtab = 54; case 3: wtab = 53; case 4: wtab = 52; case 5: wtab = 51;
	}
	PlayerTextDrawTabReset(playerid);
	PlayerTextDrawColor(playerid, Invent_Craft[playerid][wtab], 0xDA9949FF);
	PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][wtab], 0);
	for(new i = 55; i > 49 ; i--) PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	return 1;
}
stock PlayerTextDrawSelectReset(playerid, select)
{
	for(new i = 40; i > 29 ; --i)
	{
		PlayerTextDrawColor(playerid, Invent_Craft[playerid][i], 0x777777FF);
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	}
	for(new i = 50; i > 40 ; --i)
	{
		PlayerTextDrawBoxColor(playerid, Invent_Craft[playerid][i], 0x050505FF);
		PlayerTextDrawShow(playerid, Invent_Craft[playerid][i]);
	}
	PlayerTextDrawColor(playerid, Invent_Craft[playerid][select-11], 0xFFFFFFFF);
	PlayerTextDrawShow(playerid, Invent_Craft[playerid][select-11]);
	return 1;
}
stock PlayerTextDrawSelectUpdate(playerid, select)
{
	switch(select)
	{
		case 0: select = 50; case 1: select = 49; case 2: select = 48; case 3 : select = 47; case 4 : select = 46; case 5: select = 45; case 6 : select = 44; case 7: select = 43; case 8: select = 42; case 9: select = 41;
	}
	PlayerTextDrawSelectReset(playerid, select);
	PlayerTextDrawSetSelectable(playerid, Invent_Craft[playerid][select-11], 0);
	PlayerTextDrawColor(playerid, Invent_Craft[playerid][select-11], 0xFFFFFFFF);
	PlayerTextDrawBoxColor(playerid, Invent_Craft[playerid][select], InvColor[PI[playerid][pInvColor]][1]);
	PlayerTextDrawShow(playerid, Invent_Craft[playerid][select-11]);
	PlayerTextDrawShow(playerid, Invent_Craft[playerid][select]);
	return 1;
}
stock IntRound(number)
{
	new list = 0;
	if(number > (number/10) * 10) list = (number/10) + 1;
	else list = number/10;
	return list;
}
stock GetCyclCraft(playerid)
{
	new cycl = 0;
	if(CraftPageSelect{playerid} == IntRound(GetAllAmountCraft(playerid)))
		cycl = ConvertToNegativeNumber(((GetAllAmountCraft(playerid)) - (IntRound(GetAllAmountCraft(playerid)) * 10)));
	return cycl;
}
stock GetAllAmountCraft(playerid)
{
	new max_id;
	for(new i ; i < sizeof(CraftInfo); i++)
	{
		if(CraftInfo[i][CraftType] != CraftTabSelect{playerid}) continue;
		max_id++;
	}
	return max_id;
}
stock SearchSelectItemCraft(playerid)
{
	new arr_id, page = (CraftPageSelect{playerid}*10)-10;
	for(new i ; i < sizeof(CraftInfo); i++)
	{
		if(CraftInfo[i][CraftType] == CraftTabSelect{playerid})
		{
			arr_id = i+page;
			break;
		}
	}
	return arr_id;
}
stock HideCraft(playerid)
{
	if(!CraftOpened{playerid}) return false;
	for(new i ; i < 59; i++) DestroyPlayerTD(playerid, Invent_Craft[playerid][i]);
 	CraftOpened{playerid} = false;
 	HideCraftSelectColor(playerid, 1);
	return CancelSelectTextDraw(playerid);
}
/*-------- ====================== --------*/
stock AddCarsSalon()
{
	for(new i; i < SALONOWNABLECARS; i++)
	{
		if(SellInfo[i][scSpawn])
		{
			if(SellInfo[i][scCount])
			{
				CreateOwnableCar(SellInfo[i][scModel], SellInfo[i][sc_Pos_X],SellInfo[i][sc_Pos_Y], SellInfo[i][sc_Pos_Z], SellInfo[i][sc_Pos_A], "The State", 0);
				SellInfo[i][scCount] --;
				SellInfo[i][scSpawn] = 0;
				SaveSletCar(i);
			}
		}
	}
	return true;
}
forward MysqlReferalCheck(playerid);
public MysqlReferalCheck(playerid)
{
	if(!cache_num_rows()) return 1;
	static Referal[24];
	cache_get_value_name(0, "Referal", Referal);
	new cost = 300000;
	if(GetString(Referal, "No Referal"))
	{
		new refid = GetPlayerID(Referal);
		if(IsPlayerConnected(refid))
		{
		    if(PI[refid][pReferalReturn])
		    {
		        GiveMoney(playerid, PI[refid][pReferalReturn]);
		        SCMf(playerid, COLOR_VALIK, "%s осуществил Вам возврат реферальной суммы в размере $%i", PlayerName[refid], PI[refid][pReferalReturn]);
		    }
		    if(PI[refid][pReferalReturn] != cost)
		    {
				GiveMoney(refid, cost-PI[refid][pReferalReturn]);
				SCMf(refid, COLOR_VALIK, "Вы получаете $%i за приведенного вами игрока %s", cost-PI[refid][pReferalReturn], PlayerName[playerid]);
		    }
		}
		else
		{
		    new RefMoney;
		    mysql_format(mysql, str_3, sizeof(str_3), "SELECT * FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", Referal);
			new Cache:result = mysql_query(mysql, str_3);
			if(cache_num_rows() > 0) cache_get_value_name_int(0, "ReferalReturn", RefMoney);
			cache_delete(result);
		    if(RefMoney != 0)
		    {
		        GiveMoney(playerid, RefMoney);
		        SCMf(playerid, COLOR_VALIK, "%s осуществил Вам возврат реферальной суммы в размере $%i", Referal, RefMoney);
		    }
		    if(RefMoney != cost) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Money`=`Money`+%i WHERE `NickName`='%s'", RefMoney, Referal);
		}
		aml(51, -1, Referal, "приведенного игрока", cost);
	}
	return 1;
}
stock SaveServer()
{
	new currenttime = GetTickCount();
    foreach(new i: Player) SavePlayer(i);
    printf("SavePlayer сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
    foreach(new i: OWNABLECARS) SaveOwnableCar(i);
    printf("SaveOwnableCar сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
	for(new i; i < OWNABLEHOUSES; i++) SaveHouse(i);
	printf("SaveHouse сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
	for(new i ;i < OWNABLEBIZES; i++) SaveBiz(i);
	printf("SaveBiz сохранился за %i ms", GetTickCount() - currenttime);

	currenttime = GetTickCount();
    SaveOrgs();
    printf("SaveOrgs сохранился за %i ms", GetTickCount() - currenttime);

    currenttime = GetTickCount();
	SaveInforamtion();
	printf("SaveInforamtion сохранился за %i ms", GetTickCount() - currenttime);
	return 1;
}
forward PlayerSpawn(playerid);
public PlayerSpawn(playerid)
{
	if(DEBUG_ON) SCM(playerid, -1, !"PlayerSpawn");
    if(IsPlayerInAnyVehicle(playerid))
	{
	    new Float:X, Float:Y, Float:Z;
	    GetPlayerPos(playerid, X, Y, Z);
		J_SetPlayerPos(playerid, X ,Y, Z);
	    SetTimerEx("PlayerSpawn", 50, false, "i", playerid);
	    return 1;
	}
 	SettingSpawn(playerid);
	if(pTemp[playerid][SPECTPLAYER] == true) SpecPl(playerid, false);
	else SpawnPlayer(playerid);
	return 1;
}
forward LoginCodeDostup(playerid);
public LoginCodeDostup(playerid)
{
	J_SetPlayerHealth(playerid, 100);
	new hour, minute;
	gettime(hour, minute, _);
	SetPlayerTime(playerid, hour, minute);
	CodeDostupTimer[playerid] = 20;
	SCM(playerid, -1, !"У вас есть {BE2D2D}20{FFFFFF} секунд, чтобы ввести код доступа.");
	return SPD(playerid, 2394, DIALOG_STYLE_PASSWORD, !"{BE2D2D}Код доступа", !"{FFFFFF}Введите код доступа в поле ниже:", !"Ввод", !"Отмена");
}
forward MysqlLoadingIDAccount(playerid, namez[]);
public MysqlLoadingIDAccount(playerid, namez[])
{
	if(cache_num_rows() > 0) cache_get_value_name_int(0, "ID", PI[playerid][pID]);
	else PI[playerid][pID] = -1;

	PreloadAnimLib(playerid, !"CRACK");
	PreloadAnimLib(playerid, !"PED");
	PreloadAnimLib(playerid, !"BAR");
 	J_SetPlayerHealth(playerid, 100);
   	SpecPl(playerid, true);
    SetPlayerVirtualWorld(playerid, 1228);
	InterpolateCameraPos(playerid, 2172.4255, -1043.7322, 73.9263, 2172.4255, -1043.7322, 73.9263, 10000);
	InterpolateCameraLookAt(playerid, 2170.4832, -1045.6545, 73.8663, 2170.4832, -1045.6545, 73.8663, 10000);

	SetActorPos(actor[245], 2169.2637, -1053.1842, 71.9548);
	SetActorPos(actor[246], 2164.0886, -1046.4413, 71.9966);
	SetActorPos(actor[247], 2168.1323, -1051.1493, 71.9546);
	SetActorPos(actor[248], 2161.3301, -1050.7638, 71.9536);

	for(new i; i < 11; i++) TextDrawShowForPlayer(playerid, IntroLogo[i]);
    if(PI[playerid][pID] != -1) ShowLoginDialog(playerid);
    else
    {
		RegisterState[playerid] = 1;
	   	ShowRegisterDialog(playerid, RegisterState[playerid]);
	}
	return 1;
}
forward ClearAnim(playerid);
public ClearAnim(playerid) return ApplyAnimation(playerid, !"CARRY", !"crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
forward CreatedMats(playerid);
public CreatedMats(playerid)
{
	if(CreateMats[playerid] == 3)
	{
	    Controllable{playerid} = true;
		CarryAnim(playerid);
		RemovePlayerAttachedObject(playerid, 6);
		SetPlayerAttachedObject(playerid, 7, 1279, 5, 0.05, 0.24, 0.2, 104, 10, 75);
		TogglePlayerDynamicCP(playerid, FerumEndCP, true);
		CreateMats[playerid] = 4;
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	return 0;
}
forward EngineVehicle(playerid,vehicleid);
public EngineVehicle(playerid, vehicleid)
{
	if(DEBUG_ON) SCMf(playerid, -1, "public EngineVehicle(playerid, %i)", vehicleid);
	if(IsPlayerInVehicle(playerid,vehicleid))
	{
		new number = GetVehicleID(vehicleid);
	    if(!IsAOwnableCar(number) || CarInfo[number][cKeyIN])
	    {
	        new Float:Health;
			GetVehicleHealth(vehicleid, Health);
			if(Health > 1000.0) Health = 1000.0;
			new hp = 11 - floatround(Health / 100.0);
		    new uEngine = random(hp);
		    str_1[0] = EOS;
		    if(uEngine < 4)
		    {
		        SetEngineStatus(vehicleid, true, playerid);
		        f(str_1, 59, " Двигатель успешно завелся | -  %s .", cPN(playerid));
		        ProxDetector(25.0,playerid, str_1,COLOR_DOCHAT);
		        if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1)
			  	{
     				DestroyDynamicObject(LightsObject[vehicleid][0]);
					DestroyDynamicObject(LightsObject[vehicleid][1]);
					LightsObject[vehicleid][0] = -1;
					LightsObject[vehicleid][1] = -1;
					SignalTick[vehicleid][0] = 0;
					SignalTick[vehicleid][1] = -1;
					Signal[vehicleid] = 0;
				}
		    }
		    else
		    {
		        f(str_1, 53, " Двигатель не завелся | -  %s.",cPN(playerid));
		        ProxDetector(25.0, playerid, str_1, COLOR_DOCHAT);
			}
		}
	}
	return 1;
}
forward DestroyTempStrip(strip, carid);
public DestroyTempStrip(strip, carid)
{
	DestroyDynamicObject(vTemp[carid][StripObject]);
	vTemp[carid][StripObject] = -1;
	if(StripCount > 1)
	{
		for(new i = strip; i < StripCount; i ++)
		{
		    TStripPos[i][0] = TStripPos[i+1][0];
			TStripPos[i][1] = TStripPos[i+1][1];
			TStripPos[i][2] = TStripPos[i+1][2];
		}
	}
	StripCount --;
	return 1;
}
forward PlayerUnStrip(playerid);
public PlayerUnStrip(playerid)
{
    NoStrip[playerid] = -1;
    return 1;
}
forward MysqlCheckNickReferal(playerid, inputtext[]);
public MysqlCheckNickReferal(playerid, inputtext[])
{
	if(!strlen(inputtext) || (cache_num_rows() > 0 && !GetString(inputtext, PlayerName[playerid])))
    {
        RegisterState[playerid] = 0;
        if(!strlen(inputtext)) SetString(RegReferal[playerid], "No Referal");
		else
		{
			mysql_escape_string(inputtext, RegReferal[playerid]);
			new refid = GetPlayerID(RegReferal[playerid]);
			if(refid != INVALID_PLAYER_ID)
			{
			    SCMf(refid, -1, "Только что игрок {FF9900}%s{FFFFFF} указал ваш ник при регистрации, при достижении 3 уровня вы получите 300 000$!", PN(playerid));
			    SCM(refid, COLOR_VALIK, !"Посмотреть весь список указавших ваш ник игроков вы можете введя /referals");
			}
		}
		PlayerReg(playerid);
   	}
   	else
   	{
   	    SCM(playerid, COLOR_RED, !"_________________Ошибка_____________________");
   	    SCM(playerid, COLOR_RED, !"Возможные причины:");
   	    SCM(playerid, COLOR_LIGHTGREEN, !"    - Вы указали свой ник");
   	    SCM(playerid, COLOR_LIGHTGREEN, !"    - Такого аккаунта не существует");
   	    SCM(playerid, COLOR_RED, !"_____________________________________________");
   	    ShowRegisterDialog(playerid, RegisterState[playerid]);
   	}
   	return 1;
}
forward MysqlCheckNameSetName(playerid, id, name[]);
public MysqlCheckNameSetName(playerid, id, name[])
{
    if(cache_num_rows()) return SCM(playerid, -1, !"Это имя уже занято");
    
    if(PI[id][pFamilyMember] >= 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не может сменить ник, пока находиться в семье!");
    if(PI[id][pLeader]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может сменить ник!");
    if(PI[id][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Админ не может сменить ник!");
	if(GetPlayerHouse(id) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не может сменить ник, пока у него есть дом или он в нем подселен!");
	if(GetPlayerBiz(id) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не может сменить ник, пока у него есть бизнес!");
	GetNumberCars(id, PI[id][pCars]);
	if(PI[id][pCars]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не может сменить ник, пока у него есть автомобиль!");
    
    SCMf(playerid, -1, "Вы сменили имя игрока %s[%i] на %s", PN(id), id, name);
    SCMf(id, -1, " Администратор %s сменил вам ник на %s", PN(playerid), name);
    new year, month, day;
    getdate(year, month, day);
    f(str_1, sizeof(str_1), "<a href=/nickname?iddb=%i&date=%i-%02i-%02i>%s</a>", PI[playerid][pID], year, month, day, PN(playerid));
    aml(17, id, name, str_1);
    return RenamePlayer(id, name);
}
forward MysqlCheckNameBuyName(playerid, name[]);
public MysqlCheckNameBuyName(playerid, name[])
{
	if(cache_num_rows() > 0) return SPD(playerid, 224, DIALOG_STYLE_INPUT, !"Покупка", !"{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник занят", !"Сменить", !"Отмена");
	if(GetDonate(playerid) < 20) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
	
	if(PI[playerid][pFamilyMember] >= 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока находитесь в семье!");
	if(PI[playerid][pLeader]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может сменить ник!");
	if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Админ не может сменить ник!");
	if(GetPlayerHouse(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть дом или вы в нем подселены!");
	if(GetPlayerBiz(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть бизнес!");
	GetNumberCars(playerid, PI[playerid][pCars]);
	if(PI[playerid][pCars]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть автомобиль!");

	PI[playerid][pVirMoney] -= 20;
	UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
	RenamePlayer(playerid, name);
	SCM(playerid, COLOR_VALIK, !"Вы успешно сменили свой ник");
	aml(54, playerid, "", "смена ника", 20);
	return aml(17, playerid, name, "донат");
}
forward MysqlRenameRPName(playerid, name[]);
public MysqlRenameRPName(playerid, name[])
{
	if(cache_num_rows() > 0) return SPD(playerid, 7982, DIALOG_STYLE_INPUT, !"Смена ника", "{FFFFFF}Вы хотите сменить свой {E9F451}Non-RP {FFFFFF}ник\nВведите новый ник в окно\nЗатем нажмите \"{E9F451}Сменить{FFFFFF}\"\n\n{F47F51}Ошибка. Этот ник занят!", !"Сменить", !"Отмена");
		
	if(PI[playerid][pFamilyMember] >= 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока находитесь в семье!");			
	if(PI[playerid][pLeader]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может сменить ник!");
	if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Админ не может сменить ник!");
	if(GetPlayerHouse(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть дом или вы в нем подселены!");
	if(GetPlayerBiz(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть бизнес!");
	GetNumberCars(playerid, PI[playerid][pCars]);
	if(PI[playerid][pCars]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть автомобиль!");
	
	RenamePlayer(playerid, name);
	return SCM(playerid, COLOR_VALIK, !"Вы успешно сменили свой ник");
}
forward Fillup(playerid,carid,Float:gas);
public Fillup(playerid, carid, Float:gas)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInVehicle(playerid,carid))
	    {
			if(IsAtGasStation(playerid))
			{
       			vTemp[carid][Fuel] += gas;
			    BeforeFill[carid] += gas;
			    if(BeforeFill[carid] >= gas || vTemp[carid][Fuel] >= 100.0)
			    {
			        if(vTemp[carid][Fuel] >= 100.0) vTemp[carid][Fuel] = 100.0;
					TogglePlayerControllable(playerid, true);
					SCMf(playerid, COLOR_ORANGE, "Ваш транспорт заправлен {FFFFFF}%.1f{FAAC58} литрами топлива.", gas);
					callcmd::engine(playerid,"");
				}
    			else SetTimerEx("Fillup",200,false,"idd",playerid,carid,gas);
			}
		}
  		else if(IsAtGasStationC(carid)) vTemp[carid][Fuel] = gas;
	}
	return 1;
}
forward MysqlLoadPassport(playerid);
public MysqlLoadPassport(playerid)
{
	if(cache_num_rows() == 1)
	{
		cache_get_value_name_int(0, "Seria", PassInfo[playerid][psSeria]);
		cache_get_value_name_int(0, "Number", PassInfo[playerid][psNumber]);
		cache_get_value_name_int(0, "Sex", PassInfo[playerid][psSex]);
		cache_get_value_name_int(0, "D_Day", PassInfo[playerid][psDate][0]);
		cache_get_value_name_int(0, "D_Month", PassInfo[playerid][psDate][1]);
		cache_get_value_name_int(0, "D_Year", PassInfo[playerid][psDate][2]);
		cache_get_value_name_int(0, "DB_Day", PassInfo[playerid][psDateBirth][0]);
		cache_get_value_name_int(0, "DB_Month", PassInfo[playerid][psDateBirth][1]);
		cache_get_value_name_int(0, "DB_Year", PassInfo[playerid][psDateBirth][2]);
		cache_get_value_name(0, "McDate", MedCardInfo[playerid][mcDate]);
		cache_get_value_name_int(0, "McState", MedCardInfo[playerid][mcState]);
	}
}
forward OnPlayerRegisterMysql(playerid);
public OnPlayerRegisterMysql(playerid)
{
    PI[playerid][pID] = cache_insert_id();
	aml(-3, playerid, "", PlayerIP(playerid));
	OnPlayerLogin(playerid);
    return 1;
}
forward OnPlayerLoginMysql(playerid);
public OnPlayerLoginMysql(playerid)
{
    cache_get_value_name_int(0, "ID", PI[playerid][pID]);
    cache_get_value_name_int(0, "Level", PI[playerid][pLevel]);
    cache_get_value_name_int(0, "Exp", PI[playerid][pExp]);
    cache_get_value_name_int(0, "Sex", PI[playerid][pSex]);
    cache_get_value_name_int(0, "Race", PI[playerid][pRace]);
    cache_get_value_name_int(0, "Admin", PI[playerid][pAdmin]);
    cache_get_value_name_int(0, "Money", PI[playerid][pMoney]);
    cache_get_value_name_int(0, "Bank", PI[playerid][pBank]);
    cache_get_value_name_int(0, "Wanted", PI[playerid][pWanted]);
    cache_get_value_name_int(0, "VIP", PI[playerid][pVIP]);
    cache_get_value_name_int(0, "Leader", PI[playerid][pLeader]);
    cache_get_value_name_int(0, "Member", PI[playerid][pMember]);
   	cache_get_value_name_int(0, "Rank", PI[playerid][pRank]);
    cache_get_value_name_int(0, "GunLic", PI[playerid][pGunLic]);
    cache_get_value_name_int(0, "BoatLic", PI[playerid][pBoatLic]);
    cache_get_value_name_int(0, "FishLic", PI[playerid][pFishLic]);
    cache_get_value_name_int(0, "FlyLic", PI[playerid][pFlyLic]);
    cache_get_value_name_int(0, "CarLic", PI[playerid][pCarLic]);
    cache_get_value_name_int(0, "BikeLic", PI[playerid][pBikeLic]);
    cache_get_value_name_int(0, "HuntLic", PI[playerid][pHuntLic]);
    cache_get_value_name_int(0, "Warns", PI[playerid][pWarns]);
    cache_get_value_name_int(0, "TimeToLastWarn", PI[playerid][pTimeToLastWarn]);
    cache_get_value_name_int(0, "HouseSpawn", PI[playerid][pHouseSpawn]);
    
    new HouseSet;
    cache_get_value_name_int(0, "HouseSet", HouseSet);

    cache_get_value_name_int(0, "FWarns", PI[playerid][pFWarns]);
    cache_get_value_name_int(0, "Skin", PI[playerid][pSkin]);
    cache_get_value_name_int(0, "TelNum", PI[playerid][pTelNum]);
    cache_get_value_name_int(0, "TelWork", PI[playerid][pTelWork]);
    cache_get_value_name_int(0, "TelBalance", PI[playerid][pTelBalance]);
    cache_get_value_name_int(0, "Job", PI[playerid][pJob]);
    cache_get_value_name_int(0, "MuteTime", PI[playerid][pMuteTime]);
    cache_get_value_name_int(0, "FMuteTime", PI[playerid][pFMuteTime]);
    cache_get_value_name_int(0, "JailTime", PI[playerid][pJailTime]);
    cache_get_value_name_int(0, "TimeTP", PI[playerid][pTimeTP]);
    cache_get_value_name_int(0, "BailPrice", PI[playerid][pBailPrice]);
    cache_get_value_name_int(0, "KungfuStyle", PI[playerid][pKungfu]);
    cache_get_value_name_int(0, "KneeheadStyle", PI[playerid][pKneehead]);
    cache_get_value_name_int(0, "BoxingStyle", PI[playerid][pBoxing]);
    cache_get_value_name_int(0, "ElbowStyle", PI[playerid][pElbow]);
    cache_get_value_name_int(0, "DCTime", PI[playerid][pDCTime]);
    cache_get_value_name_int(0, "Drunk", PlayerDrunkLevel[playerid]);
    cache_get_value_name_int(0, "Pistol_Skill", PI[playerid][pPistol_Skill]);
    cache_get_value_name_int(0, "SDPistol_Skill", PI[playerid][pSDPistol_Skill]);
    cache_get_value_name_int(0, "Eagle_Skill", PI[playerid][pEagle_Skill]);
    cache_get_value_name_int(0, "ShotGun_Skill", PI[playerid][pShotGun_Skill]);
    cache_get_value_name_int(0, "UZI_Skill", PI[playerid][pUZI_Skill]);
    cache_get_value_name_int(0, "MP5_Skill", PI[playerid][pMP5_Skill]);
    cache_get_value_name_int(0, "AK47_Skill", PI[playerid][pAK47_Skill]);
    cache_get_value_name_int(0, "M4_Skill", PI[playerid][pM4_Skill]);
    cache_get_value_name_int(0, "Sniper_Skill", PI[playerid][pSniper_Skill]);
    cache_get_value_name_int(0, "BlackList", PI[playerid][pBL]);
    cache_get_value_name_int(0, "BankPass", PI[playerid][pBankPass]);
    cache_get_value_name_int(0, "ZKP", PI[playerid][pZKP]);
    cache_get_value_name_int(0, "Heal", PI[playerid][pHeal]);
    cache_get_value_name_int(0, "Fullness", Fullness[playerid]);
    cache_get_value_name_int(0, "Pack", PI[playerid][pPack]);
    cache_get_value_name_int(0, "Prison", PI[playerid][pPrison]);
    cache_get_value_name_int(0, "HospCity", PI[playerid][pHospCity]);
    cache_get_value_name_int(0, "SkillLevel", PI[playerid][pSkillLevel]);
    cache_get_value_name_int(0, "VirMoney", PI[playerid][pVirMoney]);
    cache_get_value_name_int(0, "DonateMoney", PI[playerid][pDonateMoney]);
    cache_get_value_name_int(0, "OldRepl", PI[playerid][pOldRepl]);
    cache_get_value_name_int(0, "AllRepl", PI[playerid][pAllRepl]);
    cache_get_value_name_int(0, "Credit", PI[playerid][pCredit]);
    cache_get_value_name_int(0, "Demorgan", PI[playerid][pDemorgan]);
    cache_get_value_name_int(0, "FeFinder", PI[playerid][pFeFinder]);
    cache_get_value_name_int(0, "Obmen", PI[playerid][pObmen]);
    cache_get_value_name_int(0, "ContractTime", PI[playerid][pContractTime]);
    cache_get_value_name_int(0, "PlayedTime", PI[playerid][pPlayedTime]);
	cache_get_value_name_int(0, "AdmAction", PI[playerid][pAdmAction]);
    cache_get_value_name_int(0, "DepChat", PI[playerid][pDepChat]);
    cache_get_value_name_int(0, "VipChat", PI[playerid][pVipChat]);
    cache_get_value_name_int(0, "FamilyChat", PI[playerid][pFamilyChat]);
	cache_get_value_name_int(0, "NewsChat", PI[playerid][pNewsChat]);
	cache_get_value_name_int(0, "Racia", PI[playerid][pRacia]);
	cache_get_value_name_int(0, "RabRacia", PI[playerid][pRabRacia]);
    cache_get_value_name_int(0, "VipTime", PI[playerid][pVipTime]);
	cache_get_value_name_int(0, "ShowCase", PI[playerid][pShowCase]);
	cache_get_value_name_int(0, "HungryShow", PI[playerid][pHungryShow]);
	cache_get_value_name_int(0, "Hospital", PI[playerid][pHospital]);
	cache_get_value_name_int(0, "More", PI[playerid][pMore]);
    cache_get_value_name_int(0, "KillShow", PI[playerid][pKillShow]);
    cache_get_value_name_int(0, "Planshet", PI[playerid][pPlanshet]);
    cache_get_value_name_int(0, "APromo", PI[playerid][pAPromo]);
  	cache_get_value_name_int(0, "FamilyMemberID", PI[playerid][pFamilyMemberID]);
    cache_get_value_name_int(0, "FamilyMute", PI[playerid][pFamilyMute]);
    cache_get_value_name_int(0, "Family", PI[playerid][pFamily]);
    cache_get_value_name_int(0, "NameFamily", PI[playerid][pNameFamily]);
	cache_get_value_name_int(0, "Pcix", PI[playerid][pPcix]);
	cache_get_value_name_int(0, "tattoo1", player_tattoos[playerid][0]);
	cache_get_value_name_int(0, "tattoo2", player_tattoos[playerid][1]);
	cache_get_value_name_int(0, "tattoo3", player_tattoos[playerid][2]);
	cache_get_value_name_int(0, "tattoo4", player_tattoos[playerid][3]);
	cache_get_value_name_int(0, "Deposit", PI[playerid][pDeposit]);
	cache_get_value_name_int(0, "DepositChar", PI[playerid][pDepositChar]);
	cache_get_value_name_int(0, "DepositChar2", PI[playerid][pDepositChar2]);
	cache_get_value_name_int(0, "Reputation", PI[playerid][pReputation]);
	cache_get_value_name_int(0, "InvLang", PI[playerid][pInvLang]);
	cache_get_value_name_int(0, "ShowDokument", PI[playerid][pShowDokument]);
	cache_get_value_name_int(0, "CarSkill", PI[playerid][pCarSkill]);
	cache_get_value_name_int(0, "CarSkillNo", PI[playerid][pCarSkillNo]);
	cache_get_value_name_int(0, "AWarns", PI[playerid][pAWarns]);
	cache_get_value_name_int(0, "RespawnChat", PI[playerid][pRespawnChat]);
    cache_get_value_name_int(0, "ReferalReturn", PI[playerid][pReferalReturn]);
	cache_get_value_name_int(0, "InvColor", PI[playerid][pInvColor]);
	cache_get_value_name_int(0, "InvCell", PI[playerid][pInvCell]);
	cache_get_value_name_int(0, "ChestTime", PI[playerid][pChestTime]);
	cache_get_value_name_int(0, "DamageInfo", PI[playerid][pDamageInfo]);

	new style;
    cache_get_value_name_int(0, "Style", style);

	cache_get_value_name_float(0, "HP", PI[playerid][pHealth]);
	cache_get_value_name_float(0, "ARM", PI[playerid][pArmour]);
	cache_get_value_name_float(0, "InvPos_X", PI[playerid][pInvPos_X]);
	cache_get_value_name_float(0, "InvPos_Y", PI[playerid][pInvPos_Y]);
	cache_get_value_name_float(0, "InvSize_X", PI[playerid][pInvSize_X]);
	cache_get_value_name_float(0, "InvSize_Y", PI[playerid][pInvSize_Y]);

    cache_get_value_name(0, "RegIP", PlayerRegIP[playerid]);
    cache_get_value_name(0, "OldIP", PlayerIp[playerid]);
    cache_get_value_name(0, "Referal", PlayerReferal[playerid]);
    cache_get_value_name(0, "Mail", PlayerMail[playerid]);
    cache_get_value_name(0, "LastIP", PI[playerid][pLastIP]);
	cache_get_value_name(0, "NameFamily2", PI[playerid][pNameFamily2]);
    cache_get_value_name(0, "Merrit", PI[playerid][pMerrit]);
    cache_get_value_name(0, "APass", PI[playerid][pAPass]);
    cache_get_value_name(0, "Prefix", PI[playerid][pPrefix]);

    cache_get_value_name_int(0, "GameRate", PI[playerid][pGameRate]);
    cache_get_value_name_int(0, "InvBlack", PI[playerid][pInvBlack]);
    cache_get_value_name_int(0, "BankCard", PI[playerid][pBankCard]);
    cache_get_value_name_int(0, "MoreHouses", PI[playerid][pMoreHouses]);

   	cache_get_value_name_float(0, "Pos_X", PI[playerid][pPos_X]);
   	cache_get_value_name_float(0, "Pos_Y", PI[playerid][pPos_Y]);
   	cache_get_value_name_float(0, "Pos_Z", PI[playerid][pPos_Z]);
   	cache_get_value_name_float(0, "Pos_A", PI[playerid][pPos_A]);

   	cache_get_value_name_int(0, "ModSlot", PI[playerid][pModSlot]);
   	cache_get_value_name(0, "Description", PI[playerid][pDescription]);

   	cache_get_value_name_int(0, "RCTime", PI[playerid][pRCTime]);
   	
   	//cache_get_value_name_int(0, "PlayerAllTime", PI[playerid][pPlayerAllTime]);

    f(str_2, sizeof(str_2), "p<,>a<i>[%i]", sizeof(aAccessCMD));
    cache_get_value_name(0, "AccessCMD", str_1), sscanf(str_1, str_2, PI[playerid][pAccessCMD]);
	cache_get_value_name(0, "datareg", PI[playerid][pDataReg]);
	
	cache_get_value_name_int(0, "ArizonaCustom1", PI[playerid][pCustomArizona][0]);
    cache_get_value_name_int(0, "ArizonaCustom2", PI[playerid][pCustomArizona][1]);
    cache_get_value_name_int(0, "ArizonaCustom3", PI[playerid][pCustomArizona][2]);
    cache_get_value_name_int(0, "ArizonaCustom4", PI[playerid][pCustomArizona][3]);
    cache_get_value_name_int(0, "ArizonaCustom5", PI[playerid][pCustomArizona][4]);
    cache_get_value_name_int(0, "ArizonaCustom6", PI[playerid][pCustomArizona][5]);
    cache_get_value_name_int(0, "ArizonaCustom7", PI[playerid][pCustomArizona][6]);
    cache_get_value_name_int(0, "ArizonaCustom8", PI[playerid][pCustomArizona][7]);
    cache_get_value_name_int(0, "ArizonaCustom9", PI[playerid][pCustomArizona][8]);

	cache_get_value_name_int(0, "DmKill", PI[playerid][pDmZoneKill]);
	cache_get_value_name_int(0, "DmDeath", PI[playerid][pDmZoneDeath]);
	cache_get_value_name_int(0, "Larec", PI[playerid][pLarec]);

	PI[playerid][pFamilyMember] = GetFamilyID(PI[playerid][pFamilyMemberID]);

	cache_get_value_name_int(0, "MiningBuyTime", PI[playerid][pMiningBuyTime]);
	static Weapons[100];
	cache_get_value_name(0, "Weapons", Weapons);
	for(new x1, x2; x1 < 13; x1 ++)
	{
		PI[playerid][pGuns][x1] = strval(strtok(Weapons, x2));
		PI[playerid][pAmmos][x1] = strval(strtok(Weapons, x2));
	}
	if(PI[playerid][pFamilyMember] >= 0)
    {
        Iter_Add(Family, playerid);
    	UpdatePlayerText[playerid] = false;
    }
	GetPlayerIp(playerid, PlayerIp[playerid], 16);

    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `OldIP` = '%s', `Online_status`= '%i', `LastLogin`= NOW() WHERE `ID` = '%i'", PlayerIp[playerid], playerid, PI[playerid][pID]);
	
	static fmt_str[] = "SELECT * FROM `Passports` WHERE `Name` = '%s' LIMIT 1";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, PN(playerid));
	mysql_pquery(mysql, str_3, "MysqlLoadPassport", "d", playerid);

	mysql_pqueryf(mysql, "DELETE FROM `OnlineInfo` WHERE `Name` = '%s'", PN(playerid));

	for(new i; i < 11; i++) TextDrawHideForPlayer(playerid, IntroLogo[i]);
	if(PI[playerid][pCustomArizona][1] == 0) ShowLogo(playerid);
    //Войс
    /*BogdanVoice[playerid] = SvCreateDLStreamAtPlayer(40.0, SV_INFINITY, playerid), SvAddKey(playerid, 0x5A);
	if(PI[playerid][pMuteTime]) SvMutePlayerEnable(playerid);
	else SvMutePlayerDisable(playerid);*/
	//Войс
 	IsPlayerLogged{playerid} = true;
	SetPlayerScore(playerid, PI[playerid][pLevel]);
	GivePlayerMoney(playerid, PI[playerid][pMoney]);
	if(PI[playerid][pHealth] > 5) J_SetPlayerHealth(playerid, PI[playerid][pHealth]);
	else J_SetPlayerHealth(playerid, 20);
	CheckLic(playerid);
	GetNumberCars(playerid,PI[playerid][pCars]);
	SetPlayerFightingStyle(playerid,style);
	if(Teleport) for(new i; i < 14; i++) TextDrawShowForPlayer(playerid, TeleportEvent[i]);
	if(IsAtGang(playerid) || IsAtMafia(playerid) || TeamDuty{playerid}) SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
	else SetPlayerColor(playerid, 0xFDFCFC15);
	if(PI[playerid][pLeader] > 0)
	{
	    if(!GetString(OrgInfo[PI[playerid][pLeader]][oLeader], PN(playerid)))
	    {
	        if(IsACop(playerid))
			{
				if(UsingShield[playerid]) RemovePlayerAttachedObject(playerid, 7);
				PI[playerid][pShield] = 0.0;
			}
	    	SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	    	PI[playerid][pLeader] =
	    	PI[playerid][pMember] =
	    	PI[playerid][pDCTime] =
	    	PI[playerid][pRank] = 0;
	    	UpdatePlayerDataInt(playerid, "DCTime", 0);
	    	UpdatePlayerDataInt(playerid, "Rank", 0);
	    	UpdatePlayerDataInt(playerid, "Member", 0);
	    	UpdatePlayerDataInt(playerid, "Leader", 0);
	    	SetBumSkin(playerid);
	    	SCM(playerid, COLOR_GREY, !"Вы были сняты с поста лидера");
	    }
	}
	f(str_1, sizeof(str_1), "SELECT * FROM `QuestsProgress` WHERE `name`='%s' ORDER BY `idquest`", PN(playerid));
	mysql_pquery(mysql, str_1, "LoadQuestMysql", "d", playerid);
	GameTextForPlayerf(playerid, 5000, 6, "~n~~n~~n~~n~~n~~n~~w~Welcome~n~~b~%s", PN(playerid));
	if(PI[playerid][pLeader] != 0 || (PI[playerid][pAdmin] != 0 && !Osnovat(PN(playerid))))
	{
	    foreach(new i: Admin)
	    {
		    if(ShowIP{i}) SCMf(i, COLOR_RED, "Игрок/админ %s[%i] зашел.", PN(playerid), playerid);
		    else SCMf(i, COLOR_RED, "Игрок/админ %s[%i] зашел [reg ip:%s] -- [norm ip: %s]", PN(playerid), playerid, PlayerRegIP[playerid], PlayerIp[playerid]);
		}
	}
	if(!PI[playerid][pHungryShow]) Hunger(playerid,0);

	UpdateCharacterDescription(playerid);
	if(DescriptionTextCreate{playerid})
	{
		SCM(playerid, COLOR_YELLOW, !"Описание вашего персонажа:");
		SendCharacterDescription(playerid);
	}

    SCM(playerid, -1, !"{DFCFCF}[Подсказка] {DC4747}На сервере есть инвентарь, используйте клавишу Y для работы с ним.");
    SCM(playerid, -1, !"{DFCFCF}[Подсказка] {DC4747}Вы можете задать вопрос в нашу техническую поддержку /report");
	/*if(!SvGetVersion(playerid)) SPD(playerid, 0, 0, !"{FFFFFF}Обнова | {ae433d}Голосовой чат", !"{FFFFFF}Здраствуйте, спешим сообщить что розработчики добавили {BE2D2D}Голосовой чат{FFFFFF}.\n\nЧтобы им пользоватся, прочитайте инструкцию {FFFF00}>>> arizona-games.ru/news", !"Окей", !"");
	else
	{
		VoiceText[playerid] = CreateDynamic3DTextLabel("[ VOICE ]", 0x4EFF2BFF, 0.0, 0.0, -0.05, 5.0, playerid, -1, 0, -1, -1, -1);
		VoiceTextCreate{playerid} = true;
		if(SvHasMicro(playerid))
		{
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Активация голосового чата {ae433d}Z");
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Настройки голосового чата {ae433d}F11");
		}
		else SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}У вас отсутствует микрофон!");
	}*/
	//Войс
    for(new i; i < MAX_PLAYER_HOUSE; i++) PI[playerid][pHouseKey][i] = -1;

	for(new i; i < OWNABLEHOUSES; i++)
	{
		if(!GetString(HouseInfo[i][hOwner], PN(playerid))) continue;
		SetPlayerHouse(playerid, i);
	}

    new house = GetPlayerHouse(playerid);
    if(house != -1)
	{
	    new bool: on = false;
		new s = GetHouseStyle(house);
		for(new i; i < HouseRooms[s]; i++)
		{
			if(GetString(HRoomOwner[house][i], PN(playerid)))
			{
                on = true;
                break;
			}
		}
		if(on == false && !GetString(HouseInfo[house][hOwner], PN(playerid)))
		{
			DeletePlayerHouse(playerid, house);
			new id = GetPlayerFirstHouse(playerid);
			PI[playerid][pHouseSpawn] = id;
			UpdatePlayerDataInt(playerid, "HouseSpawn", id);
		}
	}

	if(!HouseSet)
	{
		new houseid = GetPlayerFirstHouse(playerid);
		PI[playerid][pHouseSpawn] = houseid;
		UpdatePlayerDataInt(playerid, "HouseSpawn", houseid);
		UpdatePlayerDataInt(playerid, "HouseSet", 1);
	}
	if(GetPlayerHouse(playerid) == -1)
	{
		new houseid = GetPlayerFirstHouse(playerid);
		if(houseid != -1)
		{
			PI[playerid][pHouseSpawn] = houseid;
			UpdatePlayerDataInt(playerid, "HouseSpawn", houseid);
		}
	}
	if(PI[playerid][pRank] > 0 && PI[playerid][pMember] == 0)PI[playerid][pRank] = 0;
	if(PI[playerid][pCredit] > 200000)
	{
	    SCMf(playerid, COLOR_ACHAT, "Долг центральному банку штата составляет: %i$. Оплатите кредит во избежание блокировки аккаунта.", PI[playerid][pCredit]);
	    SendAdminsMessagef(COLOR_ORANGE, "[A] %s[%i] зашел в игру. На данный момент у него задолженность в банке %i$", PN(playerid), playerid, PI[playerid][pCredit]);
	    OrgInfo[TEAM_BANK][oBank] += 100000;
	    SaveOrg(TEAM_BANK);
	}
	if(PI[playerid][pWarns] > 0)
	{
		PI[playerid][pMember] =
		PI[playerid][pLeader] =
		PI[playerid][pRank] = 0;
		UpdatePlayerDataInt(playerid, "Rank", 0);
		UpdatePlayerDataInt(playerid, "Member", 0);
		UpdatePlayerDataInt(playerid, "Leader", 0);
		if(PI[playerid][pDCTime] == 2)
		{
			PI[playerid][pDCTime] = 0;
			UpdatePlayerDataInt(playerid, "DCTime", 0);
		}
	}
    if(PI[playerid][pWarns] > 2)
	{
	    SCM(playerid, COLOR_RED, !"Ваш аккаунт заблокирован!");
	    UpdatePlayerDataInt(playerid, "Warns", 0);
		BanPlayer(playerid);
	}
	switch(PI[playerid][pDCTime])
	{
	    case 1: if(GetPlayerHouse(playerid) == -1) PI[playerid][pDCTime] = 0;
	    case 2: if(!PI[playerid][pMember]) PI[playerid][pDCTime] = 0;
		case 3: if(PI[playerid][pFamilyMember] == -1) PI[playerid][pDCTime] = 0;
	}
	UpdatePlayerDataInt(playerid, "DCTime", PI[playerid][pDCTime]);
	NoEnterPickup[playerid] = 6;
	CreatePlayerMapDraws(playerid);
	GetPlayerIp(playerid, PI[playerid][pLastIP], 16);
	if(PI[playerid][pVIP] < 4)
	{
		if(!ActualVIP(playerid))
	    {
	        if(PI[playerid][pVIP] > 0)
	     	{
		        if(PI[playerid][pVIP] > 1)
		    	{
			     	SCM(playerid, COLOR_LIGHTBLUE, !"[Важно] {FFFFFF}Срок вашего VIP аккаунта истек, уровень VIP понижен и продлен!");
			    	PI[playerid][pVipTime] = gettime() + (30 * 24 * 60 * 60);
			    	UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
		    	}
                else if(PI[playerid][pVIP] == 1) SCM(playerid, COLOR_LIGHTBLUE, !"[Важно] {FFFFFF}Срок вашего VIP аккаунта истек, уровень VIP был снят.");
	       		PI[playerid][pVIP] --;
     		}
    	}
	}
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно зашли с %s", IsPlayerLauncherOld(playerid));
 	PlayerSpawn(playerid);
 	aml(-1, playerid, "", PlayerIp[playerid]);
	LoadOwnableCars(PN(playerid));
	LoadOwnableCarsInv(PN(playerid));

	LoadInv(playerid);
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItemAmount][i] > ItemsInfo[PI[playerid][pInvItem][i]][MaxItem] && PI[playerid][pInvItemAmount][i]) PI[playerid][pInvItemAmount][i] = ItemsInfo[PI[playerid][pInvItem]][MaxItem];
		if(!PI[playerid][pInvItem][i] && PI[playerid][pInvItemAmount][i]) PI[playerid][pInvItemAmount][i] = 0;
		if(!PI[playerid][pInvItem][i] && PI[playerid][pInvItemColor][i]) PI[playerid][pInvItemColor][i] = 0;
		if(!PI[playerid][pInvItem][i] && PI[playerid][pInvItemEnchant][i]) PI[playerid][pInvItemEnchant][i] = 0;
		if(!PI[playerid][pInvItem][i] && PI[playerid][pInvItemMining][i]) PI[playerid][pInvItemMining][i] = 1;
	}

	if(!GetInvCount(playerid, Item_Chest))
    {
    	InvAdd(playerid, Item_Chest, 1);
    	aml(101, playerid, "", "регистрация", Item_Chest, 1);
    }

	/*
	if(!RemoveItem)//Обнуление предметов
	{
		SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}У вас были обнулены ЕВРО, Вирты, AZ COINS!");
		SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Также обнулены Бизнесы, Дома, Багажники авто!");
	}*/
	CallRemoteFunction("PiarServeraPlayer", "i", playerid);

    //спидометр
	if(PI[playerid][pCustomArizona][0] == 0 || PI[playerid][pCustomArizona][0] == 1) Interface_Arizona(playerid, Arz_Speedometer, 0);
	else if(PI[playerid][pCustomArizona][0] == 2) Interface_Arizona(playerid, Arz_Speedometer, 1);
	else if(PI[playerid][pCustomArizona][0] == 3) Interface_Arizona(playerid, Arz_Speedometer, 2);

	//худ
	if(PI[playerid][pCustomArizona][1] == 0) Interface_Arizona(playerid, Arz_Hud, 0);
	else if(PI[playerid][pCustomArizona][1] == 1) Interface_Arizona(playerid, Arz_Hud, 1);
	else if(PI[playerid][pCustomArizona][1] == 2) Interface_Arizona(playerid, Arz_Hud, 2);

	//радар
	if(PI[playerid][pCustomArizona][2] == 0) Interface_Arizona(playerid, Arz_Radar, 0);
	else if(PI[playerid][pCustomArizona][2] == 1) Interface_Arizona(playerid, Arz_Radar, 1);
	else if(PI[playerid][pCustomArizona][2] == 2) Interface_Arizona(playerid, Arz_Radar, 2);

	//подсказки
	if(PI[playerid][pCustomArizona][3] == 0) Interface_Arizona(playerid, Arz_Hints, 0);
	else if(PI[playerid][pCustomArizona][3] == 1) Interface_Arizona(playerid, Arz_Hints, 1);

	//прозрачный чат
	if(PI[playerid][pCustomArizona][4] == 0) Interface_Arizona(playerid, Arz_TransparentChat, 0);
	else if(PI[playerid][pCustomArizona][4] == 1) Interface_Arizona(playerid, Arz_TransparentChat, 1);

	//Сохранение диалога
	if(PI[playerid][pCustomArizona][5] == 0) Interface_Arizona(playerid, Arz_SaveDialog, 0);
	else if(PI[playerid][pCustomArizona][5] == 1) Interface_Arizona(playerid, Arz_SaveDialog, 1);

	//nametag
	if(PI[playerid][pCustomArizona][6] == 0) Interface_Arizona(playerid, Arz_NewNametag, 0);
	else if(PI[playerid][pCustomArizona][6] == 1) Interface_Arizona(playerid, Arz_NewNametag, 1);

	//вид диалогов
	if(PI[playerid][pCustomArizona][8] == 0) Interface_Arizona(playerid, Arz_RenderDialog, 0);
	else if(PI[playerid][pCustomArizona][8] == 1) Interface_Arizona(playerid, Arz_RenderDialog, 1);
	else if(PI[playerid][pCustomArizona][8] == 2) Interface_Arizona(playerid, Arz_RenderDialog, 2);

	return 1;
}
forward LoadQuestMysql(playerid);
public LoadQuestMysql(playerid)
{
	new idquest;
	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name_int(i, "idquest", idquest);
		cache_get_value_name_int(i, "progress", QuestProgress[playerid][idquest]);
		cache_get_value_name_int(i, "accept", AcceptQuest[playerid][idquest]);
	}
	return 1;
}
forward AutoCarSpawnStart();
public AutoCarSpawnStart()
{
    if(AutoRespawn) foreach(new i: Vehicle) if(!IsVehicleOccupied(i)) SetVehicleToRespawn(i);
	return 1;
}
forward GrandTimer();
public GrandTimer()
{
	//print("GrandTimer");
	new currenttime = GetTickCount();
	if(gettime() == 1621170000)
	{
		SendRconCommand("password 0");
		//LoadFilterScript("hostname");
	}
	ContainerTimer();
	Reklam ++;
	new year,month,day,minuite,second,hour;
   	getdate(year,month,day);
   	gettime(hour,minuite,second);
   	scSpawnTimer--;
   	hour+=3;
   	if(second == 00)
   	{
   		AddCarsSalon();
   	}
   	if(!minuite && !second)
   	{
   	    SetWorldTime(hour);
        PayDayer();
	}
	if((hour == 5 && minuite == 00 && second == 00))
	{
		SCMAll(COLOR_RED, !"Внимание!");
		SCMAll(COLOR_RED, !"Технический рестарт через 05 минут. Советуем завершить текущую сессию");
	}
	else if((hour == 5 && minuite == 02 && second == 00))
	{
		SCMAll(COLOR_RED, !"Внимание!");
		SCMAll(COLOR_RED, !"Технический рестарт через 03 минут. Советуем завершить текущую сессию");
	}
	else if((hour == 5 && minuite == 03 && second == 00))
	{
		SCMAll(COLOR_RED, !"Внимание!");
		SCMAll(COLOR_RED, !"Технический рестарт через 02 минут. Советуем завершить текущую сессию");
	}
	else if((hour == 5 && minuite == 05 && second == 00))
	{
		SCMAll(COLOR_RED, !"Внимание!");
		SCMAll(COLOR_RED, !"Технический рестарт. Сессия завершена принудительно");
		foreach(new i : Player) Kick(i);
		GameModeExit();
	}
	if(hour == 20)
	{
	    if(minuite == 00 && second == 0)
		{
	        for(new i; i != 7; i++) TextDrawShowForAll(EventSob[i]);
	        SCMAll(-1, !"[Подсказка] {FF6347}Мероприятие: 'Собиратели', начнется в {FFFFFF}20.15! {FF6347}Используйте: /findcollectors");
		}
		if(minuite == 01 && second == 0) for(new i; i != 7; i++) TextDrawHideForAll(EventSob[i]);
	    if(minuite == 15 && second == 0) EggsTimer = SetTimer("EggsSpawn", 40000, true);
	}
	if(hour == 23)
	{
	    if(minuite == 59 && second == 00)
	    {
			new UTC;
			switch(((gettime()+UTC*3600)/86400)%7)
			{
				case 3:
    			{
					for(new i = 0; i < MAX_BIZ; i++)
					{
			 			f(str_1,sizeof(str_1),"UPDATE `Businesses` SET `DayOfWeak0`='0',`DayOfWeak1`='0',`DayOfWeak2`='0',`DayOfWeak3`='0',`DayOfWeak4`='0',`DayOfWeak5`='0',`DayOfWeak6`='0' WHERE `ID` = '%i' ;",i+1);
						mysql_pquery(mysql, str_3);
						BizInfo[i][bDayOfWeak0] = 0;
						BizInfo[i][bDayOfWeak1] = 0;
						BizInfo[i][bDayOfWeak2] = 0;
						BizInfo[i][bDayOfWeak3] = 0;
						BizInfo[i][bDayOfWeak4] = 0;
						BizInfo[i][bDayOfWeak5] = 0;
						BizInfo[i][bDayOfWeak6] = 0;
						SaveBiz(i);
					}
			   	}
			}
	    }
	}
	if(hour == 21 && minuite == 0 && second == 0) KillTimer(EggsTimer);
	if((minuite == 0 || minuite == 29) && second == 0 && AutoRespawn) AutoCarSpawn();
   	if(scSpawnTimer < 0)
   	{
		SellInfo[scSpawnTime][scCount] = 1;
		SellInfo[scSpawnTime][scSpawn] = 1;
		SaveSletCar(scSpawnTime);
		RandomSletCar();
   	}
	if(Teleport)
	{
		MPTime --;
		TextDrawSetStringf(TeleportEvent[1], "%s_~W~-_/GOTP", Convert(MPTime));
	}
	if(MPTime == 0)
	{
	    SCMAll(0x40FF00FF, !"[Мероприятие]{FFFFFF} Телепорт на мероприятие закрыт, время вышло.");
		Teleport = false;
		MPTime = 60;
		for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
	}
	TextDrawSetStringf(telephonexiaomi[8], "%02i:%02i", hour, minuite);
	TextDrawSetStringf(telephonexiaomi[29], "%02i:%02i", hour, minuite);
	TextDrawSetStringf(telephoneiphone[36], "%02i:%02i", hour, minuite);
	TextDrawSetStringf(telephoneiphone[29], "%02i:%02i", hour, minuite);
	TextDrawSetStringf(telephoneSamsung[50], "%02i:%02i", hour, minuite);
	TextDrawSetStringf(telephoneSamsung[29], "%02i:%02i", hour, minuite);
	switch(Reklam)
	{
	    case 600:
	    {
			GLS[36]=0;
			new forcount = MuchNumber(sizeof(GribInfo), sizeof(KladeInfo));
			for(new i; i < forcount; i++)
			{
				if(forcount < sizeof(GribInfo))
				{
					if(GribInfo[i][gribCreat]==-1) GribInfo[i][gribCreat] = CreatePickup(859,1,GribInfo[i][gribPos][0], GribInfo[i][gribPos][1], GribInfo[i][gribPos][2],-1);
				}
				if(forcount < sizeof(KladeInfo))
				{
					if(!KladeInfo[i][kladStatus])
					{
					    KladeInfo[i][kladStatus] = 1;
						DestroyDynamicObject(KladObject[i][0]);
				   		DestroyDynamicObject(KladObject[i][1]);
				   		DestroyDynamicObject(KladObject[i][2]);
				    	KladObject[i][0] = CreateDynamicObject(2680, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y], KladeInfo[i][Klad_Z]-0.9, 0.0, -89.100021, 0.5, -1, -1, -1, 300.0, 300.0);
						KladObject[i][1] = CreateDynamicObject(16302, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y]-1.8, KladeInfo[i][Klad_Z]-5.800000, 0.0, 0.0, 0.0, -1, -1, -1, 300.00, 300.00);
		                SetDynamicObjectMaterial(KladObject[i][1], 0, 18065, "ab_sfammumain", "plywood_gym", 0x00000000);
						KladObject[i][2] = CreateDynamicObject(1271, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y]-1.8, KladeInfo[i][Klad_Z]-1.100000, 0.800000, -90.600044, -3.900000, -1, -1, -1, 300.00, 300.00);
		                SetDynamicObjectMaterial(KladObject[i][2], 0, 16037, "des_nbridge", "girder2_red_64HV", 0x00000000);
					}
				}
			}
	    }
	    case 1100:
	    {
			if(hour < 19 && hour > 5)
			{
		        //Weather = random(21);
		        SetWeather(Weather);
			}
		    SCMAll(COLOR_ORANGE, !"Подробнее об обновлениях сервера смотрите на: {FFFFFF}"VK"");
			SCMAll(COLOR_ORANGE, !"Пополнение игрового счета: '"SITE"/donate' Подробнее: /adonate");
			SCMAll(COLOR_ORANGE, !"Наш сайт: "SITE"");
	    }
	    case 1200:
		{
		    Reklam = 0;
            /*SCMAll(COLOR_ORANGE, !"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			SCMAll(COLOR_ORANGE, !"- Основные команды сервера: /menu /help /gps /settings");
			SCMAll(COLOR_ORANGE, !"- Пригласи друга и получи бонус в размере $300 000!");
            SCMAll(COLOR_ORANGE, !"- Донат и получение дополнительных средств "SITE"/donate");
            SCMAll(COLOR_ORANGE, !"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");*/
			GLS[36] = 0;
		}
	}
	new Attack, Deff;
	foreach(new i: Player)
	{
		//PlayerTimer(i);
		if(BizWarState == 1)
		{
			switch(PlaceWar)
		    {
		        case 1: if(!IsPlayerInRangeOfPoint(i, 100.0, -553.5379,-189.4500,78.4063)) continue;
		        case 2: if(!IsPlayerInRangeOfPoint(i, 200.0, 400.7428,2505.4106,16.4844)) continue;
		        case 3: if(!IsPlayerInRangeOfPoint(i, 200.0, 331.5244,1116.4584,11.2496)) continue;
		        case 4: if(!IsPlayerInRangeOfPoint(i, 200.0, -1297.4867,2551.0503,87.1012)) continue;
		    }
			if(PI[i][pMember] == BizAtack) Attack++;
			if(PI[i][pMember] == BizDeff) Deff++;
		}
	}
	if(BizWarState == 1)
	{
		if(Attack >= 4 && Deff >= 4)
		{
		    SendTeamMessage(BizAtack,COLOR_GREY,"Стрела началась!");
		    SendTeamMessage(BizDeff,COLOR_GREY,"Стрела началась!");
		    BizAtakkill = 0;
		    BizDeffkill = 0;
		    BizWarState++;
		    BizTime[0] = 10;
		    BizTime[1] = 0;
		}
		else
		{
		    SendTeamMessage(BizAtack,COLOR_GREY,"Стрела отменена!");
		    SendTeamMessage(BizDeff,COLOR_GREY,"Стрела отменена!");
		    BizWarState = 0;
		}
	}

	foreach(new i: Vehicle)
	{
		CheckPassengers(i);
		CheckGas(i);
	}
	for(new i = 0; i < MAX_ORGS; i++)
	{
		if(hour == SobesTime1[i])
		{
			if(minuite == SobesTime2[i] && second == 00)
			{
				SendClientMessageToAll(-1, !" ");
				f(str_1, sizeof(str_1),"Гос.Новости: [ %s ] Здравствуйте, хотим сообщить, что сейчас проходит собеседование в %s!",OrgInfo[i][oName],OrgInfo[i][oName]);
				SendClientMessageToAll(COLOR_GOV,str_1);
				f(str_1, sizeof(str_1),"Гос.Новости: [ %s ] Собеседование будет проходить в %s!",OrgInfo[i][oName],SobesMesto[i]);
				SendClientMessageToAll(COLOR_GOV,str_1);
				f(str_1, sizeof(str_1),"Гос.Новости: [ %s ] При себе иметь: паспорт, лицензии!",OrgInfo[i][oName]);
				SendClientMessageToAll(COLOR_GOV,str_1);
				SendClientMessageToAll(-1, !" ");
				SobesStatus[i]=0;
			}
		}
	}
	for(new i; i < MAX_BOMBS; i++) BombTimer(i);
	for(new i; i < MAX_ORGS; i++)
	{
        if(RecoveryTime[i] > 0)
	    {
	        RecoveryTime[i] --;
	        if(RecoveryTime[i] == 0) SendTeamMessage(i, COLOR_YELLOW, !"Ваша банда/мафия восстановила силы и может захватывать зоны.");
		}
	}
	for(new i;i<MAX_WOODS;i++)
    {
        if(wwoods[i]!=-1)
        {
            if(wwTimer[i]>0)
		    {
	            wwTimer[i]--;
				f(str_1,sizeof(str_1),"Костер\nРазжёг: %s\n{FFFFFF}Горит. Осталось: {FAAC58}%i {FFFFFF}минут(ы).\n\nПожарить рыбу: /cook",wOwner[i],floatround(float(wwTimer[i])/60.0));
                UpdateDynamic3DTextLabelText(wwText[i],-1,str_1);
			    if(wwTimer[i]==0)
                {
                    DestroyDynamicObject(wwoods[i]);
                    DestroyDynamic3DTextLabel(wwText[i]);
                    wwTimer[i]=0;
                    wwoods[i]=-1;
				}
            }
		}
	}
	for(new linenid; linenid != MAX_LINEN_OBJECT; linenid++)
	{
        if(LinenInfo[linenid][linenObject] && LinenInfo[linenid][linenScore] <= 0)
        {
		  	LinenInfo[linenid][linenSecund] --;
		    f(str_2, sizeof(str_2), "Лён в процессе роста\n{FFFFFF}Осталось %s", Convert(LinenInfo[linenid][linenSecund]));
		    UpdateDynamic3DTextLabelText(LinenInfo[linenid][linenLabel], COLOR_VALIK, str_2);

		    if(LinenInfo[linenid][linenSecund] <= 0)
		    {
		        LinenInfo[linenid][linenStatus] = true;
		        LinenInfo[linenid][linenScore] = 10;

				f(str_2, sizeof(str_2), "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[linenid][linenScore]);
		        UpdateDynamic3DTextLabelText(LinenInfo[linenid][linenLabel], -1, str_2);
		    }
		}
	}
	for(new cottonid; cottonid != MAX_LINEN_OBJECT; cottonid++)
	{
        if(CottonInfo[cottonid][cottonObject] && CottonInfo[cottonid][cottonScore] <= 0)
        {
		    CottonInfo[cottonid][cottonSecund] --;
		    f(str_2, sizeof(str_2), "Хлопок в процессе роста\n{FFFFFF}Осталось %s", Convert(CottonInfo[cottonid][cottonSecund]));
		    UpdateDynamic3DTextLabelText(CottonInfo[cottonid][cottonLabel], COLOR_VALIK, str_2);

		    if(CottonInfo[cottonid][cottonSecund] <= 0)
		    {
		        CottonInfo[cottonid][cottonStatus] = true;
		        CottonInfo[cottonid][cottonScore] = 10;

				f(str_2, sizeof(str_2), "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[cottonid][cottonScore]);
		        UpdateDynamic3DTextLabelText(CottonInfo[cottonid][cottonLabel], -1, str_2);
		        SetDynamicObjectMaterial(CottonInfo[cottonid][cottonObject], 0, 817, "gta_procflowers", "gras07Si", 0);
		    }
		}
	}
    for(new i;i<MAX_NARKO;i++)
	{
	    if(ddrugs[i]!=-1)
	    {
		    if(ddTimer[i]>0)
		    {
	            ddTimer[i]--;
	            if(ddTimer[i] > 3600)
	            {
		            f(str_1,100,"Саженец конопли\nВ процессе созревания. Осталось: {FAAC58}%i{FFFFFF} минут(ы).",floatround(float(ddTimer[i])/60.0));
		            UpdateDynamic3DTextLabelText(ddText[i],-1,str_1);
	 			}
	            if(ddTimer[i]<= 3600)
	            {
	                new Float:x, Float:y,Float:z;
	    			GetDynamicObjectPos(ddrugs[i],x,y,z);

		            if(ddTimer[i]== 3600)
					{
					    DestroyDynamicObject(ddrugs[i]);
					    ddrugs[i] = CreateDynamicObject(861, x,y,z,0, 0,180);
					}
					if(ddTimer[i]== 0)
		            {
		                DestroyDynamicObject(ddrugs[i]);
					    ddrugs[i] = CreateDynamicObject(862, x,y,z,0, 0,180);
			            UpdateDynamic3DTextLabelText(ddText[i],-1, "{FAAC58}Созревшая конопля{FFFFFF}\nНажмите ALT чтобы забрать урожай.");
		            }
					else
					{
					    f(str_1,100,"Конопля\nСозревает. Осталось: {FAAC58}%i{FFFFFF} минут(ы).",floatround(float(ddTimer[i])/60.0));
		            	UpdateDynamic3DTextLabelText(ddText[i],-1,str_1);
					}
	            }
		    }
		}
	}
    foreach(new i: Actor)
	{
		if(actortime[i] > 0)
		{
			actortime[i]--;
			if(actortime[i]==0)
			{
				Update3DTextLabelText(tActor[i], COLOR_GREY, "");
				ApplyActorAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
				if(i==98||i==99||i==100||i==101||(i>=103 && i<=112)) ApplyActorAnimation(i,"PED","SEAT_down",4.1,0,0,0,1,1);
			}
		}
	}
	if(BizWarState>0)
	{
	    if(BizTime[1]==0)
		{
			BizTime[0]--;
	 		BizTime[1]=60;
	 	}
		BizTime[1]--;
		if(BizTime[0] == 0 && BizTime[1] == 0)
		{
		    if(BizWarState == 2)
			{
			    RecoveryTime[BizAtack] = 1800;
				RecoveryTime[BizDeff] = 1800;
				if(BizAtakkill > BizDeffkill)
				{
				    SendTeamMessage(BizDeff, COLOR_RED, "Вы проиграли стрелу");
				    SendTeamMessage(BizAtack, COLOR_VALIK, "Вы выиграли стрелу!");
				    BizInfo[BizWar][bKrasher] =BizAtack;
				    UpdateBiz(BizWar);
				    UpdateDorm(BizDeff);
				    UpdateDorm(BizAtack);
				}else{
				    SendTeamMessage(BizAtack, COLOR_RED, "Вы проиграли сражение за территорию");
				    SendTeamMessage(BizDeff, COLOR_VALIK, "Вы выиграли сражение за территорию!");
				}
				BizTime[0]=0; BizTime[1]=0;
				BizWarState = 0;
				for(new i; i<5; i++){TextDrawHideForAll(Grand2Kapt[i]);}
				BizDeff = -1;
				BizAtack = -1;
				PlaceWar=0;

			}
		}
	}
	if(BizWarState == 2)
	{
	    static tmin[3], tsec[3];
	    tmin[0] = EOS, tsec[0] = EOS;
		if(BizTime[1]<10)f(tsec, sizeof(tsec), "0%i", BizTime[1]); else f(tsec, sizeof(tsec), "%i", BizTime[1]);
		if(BizTime[0]<10)f(tmin, sizeof(tmin), "0%i", BizTime[0]); else f(tmin, sizeof(tmin), "%i", BizTime[0]);
		TextDrawSetStringf(Grand2Kapt[0], "%s:%s", tmin, tsec);
		TextDrawSetStringf(Grand2Kapt[1], "%i", BizDeffkill);
		TextDrawSetStringf(Grand2Kapt[2], "%i", BizAtakkill);
		TextDrawColor(Grand2Kapt[1], TeamColors[BizDeff]);
		TextDrawColor(Grand2Kapt[2], TeamColors[BizAtack]);
        foreach(new playerid: Player)
		{
		    if((GetTeamID(playerid)==BizAtack || GetTeamID(playerid)==BizDeff))
		    for(new i; i<5; i++) TextDrawShowForPlayer(playerid, Grand2Kapt[i]);
			else for(new i; i<5; i++) TextDrawHideForPlayer(playerid, Grand2Kapt[i]);
		}
	}
	if(CaptureTime[0]>0 || CaptureTime[1]>0)
	{
		if(CaptureTime[1]==0)
		{
			CaptureTime[0]--;
			CaptureTime[1]=60;
		}
		CaptureTime[1] --;
		static tmin[3], tsec[3];
		tmin[0] = EOS, tsec[0] = EOS;
		if(CaptureTime[1]<10)f(tsec, sizeof(tsec), "0%i", CaptureTime[1]);
		else f(tsec, sizeof(tsec), "%i", CaptureTime[1]);
		if(CaptureTime[0]<10)f(tmin, sizeof(tmin), "0%i", CaptureTime[0]);
		else f(tmin, sizeof(tmin), "%i", CaptureTime[0]);
		TextDrawSetStringf(GrandKapt[0], "%s:%s", tmin, tsec);
		TextDrawSetStringf(GrandKapt[1], "%i", CaptureDefKill);
		TextDrawSetStringf(GrandKapt[2], "%i", CaptureAtacKill);
		TextDrawColor(GrandKapt[1], TeamColors[CaptureDef]);
		TextDrawColor(GrandKapt[2], TeamColors[CaptureAtac]);
		foreach(new playerid: Player)
		{
		    if((GetTeamID(playerid)==CaptureAtac || GetTeamID(playerid)==CaptureDef))
		    for(new i; i<5; i++) TextDrawShowForPlayer(playerid, GrandKapt[i]);
		    else for(new i; i<5; i++) TextDrawHideForPlayer(playerid, GrandKapt[i]);
		}
		GangZoneFlashForAll(GangZone[CaptureZone],TeamColors[CaptureAtac]);
	}
	if(CaptureTime[0]==0 && CaptureTime[1]==1)
	{
		GangZoneStopFlashForAll(GangZone[CaptureZone]);
		RecoveryTime[CaptureAtac] = 1800;
		RecoveryTime[CaptureDef] = 1800;
		if(CaptureAtacKill > CaptureDefKill)
		{
		    SendTeamMessage(CaptureDef, COLOR_RED, "Вы проиграли сражение за территорию");
		    SendTeamMessage(CaptureAtac, COLOR_VALIK, "Вы выиграли сражение за территорию!");
		    GangZoneHideForAll(GangZone[CaptureZone]);
		    GangZoneShowForAll(GangZone[CaptureZone],TeamColors[CaptureAtac]);
		    GZInfo[CaptureZone][gzFracID] = CaptureAtac;
		}
		else
		{
		    SendTeamMessage(CaptureAtac, COLOR_RED, "Вы проиграли сражение за территорию");
		    SendTeamMessage(CaptureDef, COLOR_VALIK, "Вы выиграли сражение за территорию!");
		}
		CaptureTime[0]=0; CaptureTime[1]=0;
		for(new i; i<5; i++){TextDrawHideForAll(GrandKapt[i]);}
		UpdateDorm(CaptureDef);
  		UpdateDorm(CaptureAtac);
		CaptureDef = -1;
		CaptureAtac = -1;
		SaveGangZone(CaptureZone);
		CaptureZone = -1;
	}
    if(BuildsInfo[0][blTime]>0)
	{
        BuildsInfo[0][blTime]--;
        if(!BuildsInfo[0][blTime])
        {
            SetString(BuildsInfo[0][blArenderID],"The State");
            BuildsInfo[0][blClosed]=
            BuildsInfo[0][blTime]=

            ZallFunction[0]=
            ZallFunction[1]=
            ZallFunction[2]=0;

			UpdateDynamic3DTextLabelText(BuildsInfo[0][blBuildText],-1,"{23BA8F}Концертный зал{FFFFFF}\nВход: ALT\nЗдание: {EBA22D}Не арендовано");
			foreach(new i: Player)
			{
				SetPVarInt(i,"zalll",0);
				PI[i][pZall]=-1;
			}
        }
	}
	if(IDOFMusic!=-1)
	{
	    if(MusicInfo[IDOFMusic][mNowTime]<=MusicInfo[IDOFMusic][mTime])MusicInfo[IDOFMusic][mNowTime]++;
	    else
		{
		    MusicInfo[IDOFMusic][mNowTime]=0;
			if(IDOFMusic<24)IDOFMusic++;
			else IDOFMusic=0;
		}
	}
	if(DEBUG_ON) printf("GrandTimer прокрутился за %i ms", GetTickCount() - currenttime);
	return 1;
}
forward GateClose(gate);
public GateClose(gate)
{
	GateInfo[gate][gOpen] = false;
	MoveDynamicObject(gGate[gate],GateInfo[gate][gClose_X],GateInfo[gate][gClose_Y],GateInfo[gate][gClose_Z],3.0);
    new gateid = GateInfo[gate][gForGateid];
    if(gateid != -1)
    {
        GateInfo[gateid][gOpen] = false;
		MoveDynamicObject(gGate[gateid],GateInfo[gateid][gClose_X],GateInfo[gateid][gClose_Y],GateInfo[gateid][gClose_Z],3.0);
    }
    return 1;
}
forward DoorClose(door);
public DoorClose(door)
{
	DoorInfo[door][dOpen] = false;
	MoveDynamicObject(dDoor[door],DoorInfo[door][dClose_X],DoorInfo[door][dClose_Y],DoorInfo[door][dClose_Z],3.0);
    new doorid = DoorInfo[door][dForDoorid];
    if(doorid != -1)
    {
        DoorInfo[doorid][dOpen] = false;
		MoveDynamicObject(dDoor[doorid],DoorInfo[doorid][dClose_X],DoorInfo[doorid][dClose_Y],DoorInfo[doorid][dClose_Z],3.0);
    }
    return 1;
}
forward BarrierClose(barrier);
public BarrierClose(barrier)
{
	BarrierInfo[barrier][brOpen] = false;
    MoveDynamicObject(gBarrier[barrier],BarrierInfo[barrier][brPos_X],BarrierInfo[barrier][brPos_Y],BarrierInfo[barrier][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[barrier][brPos_A]+180);
    new barrierid = BarrierInfo[barrier][brForBarrierID];
    if(barrierid != -1)
    {
        BarrierInfo[barrierid][brOpen] = false;
    	MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[barrierid][brPos_A]+180);
    }
    return 1;
}
forward RemovingObject(musor, carid, playerid);
public RemovingObject(musor, carid, playerid)
{
	new objectid = TempMusorObject[musor];
    new Float:X[2], Float:Y[2], Float:Z[2], string[70];
	GetDynamicObjectPos(objectid, X[0], Y[0], Z[0]);
	GetDynamicObjectRot(objectid, X[1], Y[1], Z[1]);
	MoveDynamicObject(objectid, X[0], Y[0], Z[0]+0.005, 0.001, 130, 90, Z[1]);
	SetTimerEx("StopMusor", 4000, false, "i", objectid);
	RemoveObject[objectid] = false;
	CarMusorCount[carid] += floatround(MusorCount[musor]/10);
	if(CarMusorCount[carid] > 100) CarMusorCount[carid] = 100;
	MusorCount[musor] = 0;
	f(string, sizeof(string), "Всего мусора: %i\%/100\%", CarMusorCount[carid]);
	SCM(playerid, 0x33CCFFFF, string);
	f(string, sizeof(string), "Загружено: %i%/100%", CarMusorCount[carid]);
	UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
	f(string, sizeof(string), "Загружено: %i%/100%", MusorCount[musor]);
	UpdateDynamic3DTextLabelText(MusorText[musor], 0xAFAFAFFF, string);
	return 1;
}
forward StopMusor(objectid);
public StopMusor(objectid)
{
    if(TempMusorMusor[objectid] != -1)
	{
	    new musor = TempMusorMusor[objectid];
		if(objectid == TempMusorObject[musor])
		{
			new carid = MusorCar[musor];
			if(RemoveObject[objectid]) SetTimerEx("RemovingObject", 3000, false, "iii", musor, carid, MusorovozPlayer[carid]);
			else
			{
				new playerid = MusorovozPlayer[carid];
				if(IsPlayerInVehicle(playerid, carid) && InJob[playerid] == 2)
				{
					TogglePlayerControllable(playerid, true);
					InJob[playerid] = 1;
					if(CarMusorCount[carid] >= 100)
					{
						CarMusorCount[carid] = 100;
						SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Отправляйтесь на свалку чтобы разгрузить мусоровоз.");
						SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Свалка вашего города обозначена на карте красной меткой.");
						if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) EnableGPSForPlayer(playerid,2200.9934,-1977.1194,13.5576);
						else EnableGPSForPlayer(playerid,178.4099,1101.4073,16.4498);
						SetDoorsStatus(carid, 1);
					}
				}
				DetachMusor(carid);
			}
		}
	}
	return 1;
}
forward PlayerFishing(playerid);
public PlayerFishing(playerid)
{
	new rand_fish = 1+random(sizeof(FishName) + 8);
	new Fished;
	TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObject(playerid, 7);
	ClearAnims(playerid);
	Fishing{playerid} = false;
	switch(rand_fish)
	{
	    case 1..13:
	    {
	    	new fish_massa = 1 + random(5);
			for(new i;i < 5;i ++)
			{
			    if(!PlayerFish[playerid][i])
			    {
	        		SCMf(playerid, -1, "Вы поймали ' {73B461}%s{FFFFFF} ' массой %i кг.", FishName[rand_fish], fish_massa);
			        PlayerFish[playerid][i] = rand_fish;
			        FishMassa[playerid][i] = fish_massa;
			        InvAdd(playerid, Item_Worms, -1);
			        aml(102, playerid, "", "поймал рыбу", Item_Worms, 1);
			        Fished = 1;
			        break;
			    }
			}
			if(!Fished) SCMf(playerid, -1, "{BE2D2D}Вы поймали {FFFFFF}( %s ){BE2D2D} массой %i Кг, но вы не унесете больше 5-и рыб.", FishName[rand_fish], fish_massa);
	    }
	    case 14..17:
	    {
	        SCMf(playerid, COLOR_GREY, "{BE2D2D}Рыба {FFFFFF}( %s ){BE2D2D} сорвалась и съела наживку.", FishName[1+random(13)]);
     		InvAdd(playerid, Item_Worms, -1);
     		aml(102, playerid, "", "поймал рыбу", Item_Worms, 1);
	    }
	    default: SCMf(playerid, COLOR_GREY, "{BE2D2D}Рыба{FFFFFF} ( %s ){BE2D2D} сорвалась, но наживка осталась на крючке.", FishName[1+random(13)]);
	}
	for(new i;i < sizeof(FishZone);i ++)
	{
		if(IsPlayerInDynamicCP(playerid, Fish_CP[i]))return SPD(playerid,212,0,"Место для рыбалки","{FFFFFF}Вы действительно хотите порыбачить?\nДля рыболовли вам необходима удочка, которую можно приобрести в любом 24/7\nи наживка для рыбалки, ее так же можно там купить.\nРыбу можно продать в магазин.","да","Нет");
	}
	return 1;
}
forward ChangeInterior(playerid);
public ChangeInterior(playerid)
{
	static string[30];
	string = "";
	if(BuyInt[playerid] == 1)
	{
		SetPlayerInterior(playerid,IntInfo[1][iInterior]);
		SetPlayerCameraPos(playerid,IntInfo[1][iCam_X],IntInfo[1][iCam_Y],IntInfo[1][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[1][iCamAt_X],IntInfo[1][iCamAt_Y],IntInfo[1][iCamAt_Z]); //
		f(string,sizeof(string),"Level: %i~n~Cost: $%i",1,IntInfo[1][iCost]);
		PlayerTextDrawSetString(playerid, InfoText[playerid],string);
		PlayerTextDrawShow(playerid,InfoText[playerid]);
		TextDrawShowForPlayer(playerid,Boxmenu0);
		TextDrawShowForPlayer(playerid,Boxmenu1);
		TextDrawShowForPlayer(playerid,Boxmenu2);
		TextDrawShowForPlayer(playerid,Boxmenu3);
		TextDrawShowForPlayer(playerid,ButtonRight);
		TextDrawShowForPlayer(playerid,ButtonCancel);
		TextDrawShowForPlayer(playerid,ButtonSelect);
		TextDrawShowForPlayer(playerid,boxaccept);
		TextDrawShowForPlayer(playerid,boxcancel);
		SelectTextDraw(playerid, 0xFF6347FF); //0xFFFFFFFF
		SCM(playerid, COLOR_LIGHTBLUE, !"Чтобы посмотреть следующий интерьер введите /next или нажмите {9ACD32}>");
		SCM(playerid, COLOR_LIGHTBLUE, !"Чтобы посмотреть предыдущий интерьер введите /back или нажмите {9ACD32}<");
		SCM(playerid, COLOR_LIGHTBLUE, !"Чтобы выбрать интерьер введите /done или нажмите {9ACD32}Select");
		SCM(playerid, COLOR_LIGHTBLUE, !"Для отмены нажмите {9ACD32}Cancel");
	}
	return true;
}
forward DeathPlayer(playerid);
public DeathPlayer(playerid)
{
	if(DEBUG_ON) SCM(playerid, -1, "public DeathPlayer(playerid)");
    SetPlayerDrunkLevel(playerid, 0);
	PI[playerid][pHeal] = 1;
	UpdatePlayerDataInt(playerid, "Heal", 1);
    return J_SetPlayerHealth(playerid, 0);
}
forward ChangePlayerPos(playerid, Float:X, Float:Y, Float:Z);
public ChangePlayerPos(playerid, Float:X, Float:Y, Float:Z)
{
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	J_SetPlayerPos(playerid, X, Y, Z);
	return true;
}
forward MysqlCheckBanned(playerid);
public MysqlCheckBanned(playerid)
{
	static Name[MAX_PLAYER_NAME];
	Name = "";
	new accounts = cache_num_rows();
	if(accounts == 0) return SCM(playerid, COLOR_GREY, !"Больше нет забаненных");
	str_1[0] = EOS;
	for(new i; i < accounts; i ++)
	{
		cache_get_value_name(i, "Name", Name);
		f(str_1, 600, "%s%s\n", str_1, Name);
	}
	if(accounts == 20) strcat(str_1, "{FF9900}Далее >>>\n");
	if(FirstBL[playerid]) strcat(str_1, "{FF9900}<<< Назад");
	SPD(playerid, 96, 2, "Забаненые", str_1, "Выбор", "Назад");
	return 1;
}
stock MysqlCheckAdmins(playerid)
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM Qelksekm WHERE Admin > 0");
	new admins = cache_num_rows();
	cache_delete(result);

	mysql_format(mysql, str_3, sizeof(str_3), "SELECT * FROM Qelksekm WHERE Admin > 0 ORDER BY Admin DESC LIMIT %i, 20", FirstBL[playerid]);
	new Cache:result2 = mysql_query(mysql, str_3), count;
	new lvl, id, admins2 = cache_num_rows();
	static name[24], lastlogin[30], status[24];
	str_1 = "{FFFFFF}Администратор\t{FFFFFF}Уровень\t{FFFFFF}Статус\n";
	f(str_2, sizeof(str_2), "{cccccc}Администрация сервера", admins);
	for(new i; i < admins2; i++)
	{
		cache_get_value_name_int(i, "Admin", lvl);
		cache_get_value_name(i, "LastLogin", lastlogin);
		cache_get_value_name(i, "NickName", name);

		id = GetPlayerID(name);
		if(id != INVALID_PLAYER_ID)
		{
			status = "{869C71}online{FFFFFF}";
			f(name, sizeof(name), "%s", name);
		}
		else status = "{BE2D2D}offline{FFFFFF}";
		f(str_1, sizeof(str_1), "{FFFFFF}%s{FFFFFF}%s\t[%i lvl]\t%s{FFFFFF}\n", str_1, name, lvl, status);
		count++;
	}
	if(count > 8) strcat(str_1, ""AC_DIALOG_NEXT_PAGE_TEXT"");
	if(FirstBL[playerid]) strcat(str_1, ""AC_DIALOG_PREVIOUS_PAGE_TEXT"");
	SPD(playerid, 1649, DIALOG_STYLE_TABLIST_HEADERS, str_2, str_1, !"Выбрать", !"Назад");
	return cache_delete(result2);
}
forward LoginDialogMysql(playerid, inputtextsave[]);
public LoginDialogMysql(playerid, inputtextsave[])
{
	static password[50];
	password[0] = EOS;
 	cache_get_value_name(0, "Password", password);
	cache_get_value_name_int(0, "Google", PI[playerid][pGoogle]);
	cache_get_value_name(0, "GoogleKey", PI[playerid][pGoogleKey]);
	if(GetString(MD5_Hash(inputtextsave), password, 1))
	{
		static reason[30], admin[MAX_PLAYER_NAME], Bdate[22], seconds;

	    static fmt_str[] = "SELECT * FROM `BanNames` WHERE BINARY `Name` = '%s' LIMIT 1";
	    mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, PN(playerid));
		new Cache:result = mysql_query(mysql, str_3);
		new num = cache_num_rows();

		if(num)
		{
	        cache_get_value_name(0, "BanAdmin", admin);
	        cache_get_value_name(0, "BanReason", reason);
			cache_get_value_name_int(0, "BanSeconds", seconds);
			cache_get_value_name(0, "BanDate", Bdate);
		}
		cache_delete(result);

		if(num)
	    {
			new times = gettime();
			static tima[20];
			new dima;
			if(floatround((seconds-times) / 60 / 60 / 24) > 1)
			{
				tima = "дней";
				dima = floatround((seconds-times) / 60 / 60 / 24, floatround_ceil);
			}
			else if(floatround((seconds-times) / 60 / 60) > 1)
	 	    {
		 		tima = "час(ов)";
		 		dima = floatround((seconds-times) / 60 / 60, floatround_ceil);
			}
			else
			{
		 		tima = "минут";
		 		dima = floatround((seconds-times) / 60, floatround_ceil);
			}
			if(times < seconds)
			{
				f(str_1, sizeof(str_1), "{FFFFFF}Ваш игровой аккаунт: \t{FF0000}%s\n{FFFFFF}заблокирован на %i %s\nпо причине: %s\nадминистратором: %s\nдата блокировки: %s\nподать заявку можно : "FORUM"/", PN(playerid), dima, tima, reason, admin, Bdate);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Этот аккаунт заблокирован!", str_1, !"Ок", !"");
				return Kick(playerid);
			}
			else
			{
				mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Warns` = '0' WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
			    mysql_pqueryf(mysql, "DELETE FROM `BanNames` WHERE `Name` = '%s' LIMIT 1", PN(playerid));
				if(PI[playerid][pGoogle]) ShowGoogleLogin(playerid);
				else OnPlayerLogin(playerid);
			}
	    }
	    else
	    {
			if(PI[playerid][pGoogle]) ShowGoogleLogin(playerid);
			else OnPlayerLogin(playerid);
		}
	}
	else
	{
		gPlayerLogTries{playerid} --;
		if(gPlayerLogTries{playerid} <= 0) return J_Kick(playerid, 7740);
	  	ClearChatForPlayer(playerid);
	  	f(str_1, sizeof(str_1), "{FFFFFF}Добро пожаловать на {EBA225}"NAME" Role Play{FFFFFF}\n\n{FF0000}Неверный пароль!\n{FFFFFF}Попыток для ввода пароля: {28910B}%i", gPlayerLogTries{playerid});
	    return SPD(playerid, 2, 3, !"{BFBBBA}Авторизация", str_1, !"Принять", !"");
	}
	return 1;
}
forward Gambler(playerid);
public Gambler(playerid)
{
    if(Gambling[playerid] != 2)
    {
        KillTimer(SlotTimer[playerid]);
        SlotTimer[playerid] = -1;
        Gambling[playerid] = 0;
        return 0;
    }
    SlotCounter[playerid] -= 1;
    new slot = SlotCounter[playerid];
    if(slot < 10) Slots[playerid][2]+=random(3)+1;
    else if(slot < 20)
    {
        Slots[playerid][1]+=random(3)+1;
        Slots[playerid][2]+=random(3)+1;
    }
    else
    {
        Slots[playerid][0]+=random(3)+1;
        Slots[playerid][1]+=random(3)+1;
        Slots[playerid][2]+=random(3)+1;
    }
    if(Slots[playerid][0] >= 6) Slots[playerid][0] = 0;
    if(Slots[playerid][1] >= 6) Slots[playerid][1] = 0;
    if(Slots[playerid][2] >= 6) Slots[playerid][2] = 0;

    ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

    if(SlotCounter[playerid] == 0)
    {
        KillTimer(SlotTimer[playerid]);
        SlotTimer[playerid] = -1;
        Gambling[playerid] = 3;

        if(Slots[playerid][0] == Slots[playerid][1] && Slots[playerid][0] == Slots[playerid][2])
        {
            new Multiplier=1;
            switch(Slots[playerid][0])
            {
            	case 0: Multiplier = 5;
                case 1: Multiplier = 10;
                case 2: Multiplier = 20;
                case 3: Multiplier = 25;
                case 4: Multiplier = 50;
                case 5: Multiplier = 100;
            }
            new money = floatround(Bet[playerid] * Multiplier * 1.0);
            GameTextForPlayerf(playerid, 5000, 4, "~w~Winner: ~g~%i~w~!", money);
            Balance[playerid] += money;
            UpdateBetText(playerid);
            Slots[playerid][0] = random(5);
            Slots[playerid][1] = random(5);
            Slots[playerid][2] = random(5);
        }
        else
        {
            if(Slots[playerid][0] == Slots[playerid][1] || Slots[playerid][1] == Slots[playerid][2] || Slots[playerid][0] == Slots[playerid][2]) GameTextForPlayer(playerid,"Almost!",3000,4);
            else GameTextForPlayer(playerid,"Bad luck!",3000,4);
        }
        SetTimerEx("PlayAgainTimer", 750, 0, "d", playerid);
        return 1;
    }
    return 0;
}
forward PlayAgainTimer(playerid);
public PlayAgainTimer(playerid)
{
    Gambling[playerid] = 1;
    new keys,lr,ud;
    GetPlayerKeys(playerid,keys,ud,lr);
    if(keys & KEY_SPRINT) OnPlayerKeyStateChange(playerid,KEY_SPRINT,0);
}
forward UnBombPlayer(playerid, bombid);
public UnBombPlayer(playerid, bombid)
{
	if(BreakBomb[playerid] == bombid)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.0, BombInfo[bombid][bbPos][0], BombInfo[bombid][bbPos][1], BombInfo[bombid][bbPos][2]))
		{
		    ClearAnims(playerid);
		    BombInfo[bombid][bbBreak] = false;
		    BombInfo[bombid][bbCreated] = false;
		    BombInfo[bombid][bbTime] = 0;
			DestroyDynamicObject(BombInfo[bombid][bbObject]);
			DestroyDynamic3DTextLabel(BombInfo[bombid][bbText]);
			if(random(10) < 5)
			{
				SCM(playerid, COLOR_LIME, !"Вы успешно обезвредили бомбу");
				TogglePlayerControllable(playerid,true);
			}
			else
			{
			    SCM(playerid, COLOR_GREY, !"Вы не смогли обезвредить бомбу...");
			    CreateExplosion(BombInfo[bombid][bbPos][0], BombInfo[bombid][bbPos][1], BombInfo[bombid][bbPos][2], 7, 20.0);
	            foreach(new i: Player) if(IsPlayerInRangeOfPoint(i, 20.0, BombInfo[bombid][bbPos][0], BombInfo[bombid][bbPos][1], BombInfo[bombid][bbPos][2])) SCM(i, COLOR_GREY, !"Рядом взорвалась бомба!");
			}
	    }
	}
	BreakBomb[playerid] = -1;
	return 1;
}
forward ShowPlayerMessages(playerid);
public ShowPlayerMessages(playerid)
{
	new rows = cache_num_rows();
	str_1[0] = EOS;
	if(rows > 0)
	{
	    static Name[MAX_PLAYER_NAME], Namez[MAX_PLAYER_NAME], vh[40], ctr[48];
		Name[0] = EOS, Namez[0] = EOS, str_2[0] = EOS, vh[0] = EOS;
		new read, time, nazad;
		for(new row; row < rows; row++)
		{
			cache_get_value_name(row, "Name", Name);
			cache_get_value_name(row, "Namez", Namez);
			cache_get_value_name_int(row, "read", read);
			cache_get_value_name_int(row, "time", time);

		   	if(read == 1) str_2 = "{2BC12D}[NEW]{FFFFFF}"; else str_2 = "{9E8F91}[Прочитано]{FFFFFF}";
			if(strcmp(Namez, PN(playerid), true) == 0) vh = "{73B461}[Контакт]{FFFFFF}"; else vh = "{85FC65}[Вы]{FFFFFF}";
			nazad = gettime() - time;
   			if(nazad > 24 * 3600) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} дней(я) назад]", floatround(nazad / (24 * 3600)));
			else if(nazad > 3600) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} час(ов) назад]", floatround(nazad / 3600));
			else if(nazad > 60) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} минут(ы) назад]", floatround(nazad / 60));
			else if(nazad > 1) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} секунд(ы) назад]", nazad);
			f(str_1, sizeof(str_1), "%s\nОт: {73B461}%s{FFFFFF} \t%s.. %s%s", str_1, Name, ctr, str_2);
		}
	}
	else return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"Сообщений нет!", !"Принять", !"");
	SPD(playerid, 954, DIALOG_STYLE_LIST, !"Информация", str_1, !"Принять", !"Отмена");
	return 1;
}
forward ShowPlayerMessage(playerid);
public ShowPlayerMessage(playerid)
{
    new rows = cache_num_rows();
    if(rows > 0)
    {
        static Name[MAX_PLAYER_NAME], Namez[MAX_PLAYER_NAME], stat[60], vh[40];
		Name[0] = EOS, Namez[0] = EOS, stat[0] = EOS, vh[0] = EOS, str_1[0] = EOS, str_2[0] = EOS;
		new read, time, nazad;
        for(new row; row < rows; row++)
        {
            cache_get_value_name(row, "Name", Name);
			cache_get_value_name(row, "Namez", Namez);
			cache_get_value_name(row, "Text", str_2);
			cache_get_value_name_int(row, "read", read);
			cache_get_value_name_int(row, "time", time);

            if(read != 1) stat = "{2BC12D}[Не прочитано]{FFFFFF}"; else stat = "{9E8F91}[Прочитано]{FFFFFF}";
            if(strcmp(Namez, PN(playerid), true) == 0) vh = "{73B461}[Контакт]{FFFFFF}"; else vh = "{85FC65}[Вы]{FFFFFF}";
            nazad = gettime() - time;
            static ctr[90];
            ctr = "";
            if(nazad > 24 * 3600) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} дней(я) назад]", floatround(nazad / (24 * 3600)));
            else if(nazad > 3600) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} час(ов) назад]", floatround(nazad / 3600));
            else if(nazad > 60) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} минут(ы) назад]", floatround(nazad / 60));
            else if(nazad > 1) f(ctr, sizeof(ctr), "[{B03131}%i{FFFFFF} секунд(ы) назад]", nazad);
            else if(nazad == 0) ctr = "[{B03131}только что{FFFFFF}]";
            f(str_1, sizeof(str_1), "%s\n%s - %s%s%s", str_1, ctr, vh, str_2, stat);
        }
    }
    else str_1 = "Сообщений нет!";
    SPD(playerid, 955, DIALOG_STYLE_INPUT, PI[playerid][pSendName], str_1, !"Отправить", !"Отмена");
    return 1;
}
forward MysqlShowContacts(playerid);
public MysqlShowContacts(playerid)
{
	str_1 = "Добавить контакт\n{FF7E7E}Вызвать скорую\n{0049FF}Вызвать полицию\n{F5AC19}Вызвать Такси\n{323949}Вызвать Механика{FFFFFF}\nУзнать владельца дома\n";
	new rows = cache_num_rows();
	if(rows)
	{
	    static Namez[MAX_PLAYER_NAME], stat[50], blstr[20];
	    Namez[0] = EOS, stat[0] = EOS, blstr[0] = EOS;
	    new num, stats, tellnum, bl;
		for(new row; row < rows; row++)
		{
			cache_get_value_name(row, "Namez", Namez);
			cache_get_value_name_int(row, "Num", num);
			cache_get_value_name_int(row, "TelNum", tellnum);
			cache_get_value_name_int(row, "Online_status", stats);
            cache_get_value_name_int(row, "Group", bl);

			if(stats == -1) stat = "{B03131}offline{FFFFFF}";
			else stat = "{41BE13}online{FFFFFF}";
			if(!bl) blstr = "[ЧС] ";
			f(str_1, sizeof(str_1), "%s\n{B03131}%s%s[%i]{FFFFFF} [%s]:\tНомер {AFAFAF}%i{FFFFFF}\tПропущенных: {73B461}%i{FFFFFF}", str_1, blstr, Namez, playerid, stat, tellnum, num);
		}
	}
	SPD(playerid, 952, DIALOG_STYLE_LIST, !"Информация", str_1, !"Принять", !"Отмена");
	return 1;
}
forward MysqlAddContact(playerid, id);
public MysqlAddContact(playerid, id)
{
	if(cache_num_rows() > 0) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"Нельзя добавить данный контакт , так как он уже добавлен!", !"Принять", !"");
	f(str_2, sizeof(str_2), "SELECT COUNT(*) FROM `PhoneBook` WHERE `Name`='%s'", PN(playerid));
	mysql_pquery(mysql, str_2, "MysqlAddContactTwo", "dd", playerid, id);
	return 1;
}
forward MysqlAddContactTwo(playerid, id);
public MysqlAddContactTwo(playerid, id)
{
	if(cache_num_rows() > 29) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"Память вашей SIM-Карты заполнена!", !"Принять", !"");
    if(id == playerid) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"Вы не можете добавить сами себя в контакты!", !"Принять", !"");
    if(!PI[id][pTelNum]) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"У этого человека нет мобильного телефона или sim карты!", !"Принять", !"");
    mysql_pqueryf(mysql, "INSERT INTO `PhoneBook` (`Name`, `Namez`, `Group`) VALUES ('%s','%s', '1')", PN(playerid), PN(id));
    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{73B461}Ваш контакт был успешно добавлен!", !"Принять", !"");
    SCMf(id, COLOR_GREY, "%s {73B461}добавил вас в контакты.", PN(playerid));
	return 1;
}

forward MysqlAddMessage(playerid);
public MysqlAddMessage(playerid)
{
	f(str_2, sizeof(str_2), "SELECT * FROM `PhoneMes` WHERE (`Name` = '%s' AND `Namez` = '%s') OR (`Namez `= '%s' AND `Name` = '%s') ORDER BY `time` DESC LIMIT 0, 20", PN(playerid), PI[playerid][pSendName], PN(playerid), PI[playerid][pSendName]);
	mysql_pquery(mysql, str_2, "ShowPlayerMessage", "d", playerid);
	return 1;
}
forward MysqlCheckCall(playerid);
public MysqlCheckCall(playerid)
{
	if(cache_num_rows())
	{
		new Group;
		cache_get_value_name_int(0, "Group", Group);
		if(!Group) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Вы в черном списке!", !"Закрыть", !"");
	    new id;
		sscanf(PI[playerid][pSendName], "u", id);
	    if(PI[id][pCalling] != -1) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Линия занята!", !"Закрыть", !"");
		if(PI[id][pTelWork] != 1) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Ваш абонент вне зоны действия сети!\n{FFFFFF}Вы можете оставить ему сообщение, как только он появится в сети он его сможет прочитать.", !"Закрыть", !"");
		foreach(new i: Player) if(PI[i][pCalling] == id && IsPlayerLogged{i}) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Ошибка", !"Занято. Пожалуйста перезвоните позже.", !"Закрыть", !"");
		PI[playerid][pCalling] = id;
		PI[id][pCalling] = playerid;
		SCM(playerid, COLOR_VALIK, !"Нажмите клавишу Y для того чтобы достать курсор управления телефоном.");
		SCM(id, COLOR_VALIK, !"Нажмите клавишу Y для того чтобы достать курсор управления телефоном.");
		mysql_pqueryf(mysql, "UPDATE `PhoneBook` SET `num`='0' WHERE `Name`='%e' AND `Namez`='%e'", PN(playerid), PN(PI[playerid][pCalling]));
		SetPlayerChatBubble(id, !"Звонит телефон", COLOR_PURPLE, 10.0, 10000);
		GameTextForPlayer(id, !"Press: y", 0, 1);
		PlayerPlaySound(id, 20600, 0.0, 0.0, 0.0);
		for(new i; i < 15; i++) TextDrawShowForPlayer(playerid, Calling[i]);
		TextDrawHideForPlayer(playerid, Calling[5]);
		TextDrawHideForPlayer(playerid, Calling[4]);
		TextDrawHideForPlayer(playerid, Calling[3]);
		TextDrawHideForPlayer(playerid, Calling[2]);
		f(str_2, sizeof(str_2), "~l~%s~n~~r~Outcoming", PN(PI[playerid][pCalling]));
		callname[playerid] = CreatePlayerTextDraw(playerid, 88.399620, 243.825302, str_2);
		PlayerTextDrawLetterSize(playerid, callname[playerid], 0.185864, 0.915255);
		PlayerTextDrawTextSize(playerid, callname[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, callname[playerid], 2);
		PlayerTextDrawColor(playerid, callname[playerid], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, callname[playerid], 0);
		PlayerTextDrawBoxColor(playerid, callname[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, callname[playerid], 0);
		PlayerTextDrawSetOutline(playerid, callname[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, callname[playerid], 0x00000046);
		PlayerTextDrawFont(playerid, callname[playerid], 1);
		PlayerTextDrawSetProportional(playerid, callname[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, callname[playerid], 0);
		pSvon{playerid} = true;
		f(str_2, sizeof(str_2), "~l~%s~n~~g~Incoming", PN(playerid), PI[playerid][pONPhoneTalk]);
		callname[id] = CreatePlayerTextDraw(id, 88.399620, 243.825302, str_2);
		PlayerTextDrawLetterSize(id, callname[id], 0.185864, 0.915255);
		PlayerTextDrawTextSize(id, callname[id], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(id, callname[id], 2);
		PlayerTextDrawColor(id, callname[id], 0xFFFFFFFF);
		PlayerTextDrawUseBox(id, callname[id], 0);
		PlayerTextDrawBoxColor(id, callname[id], 0x80808080);
		PlayerTextDrawSetShadow(id, callname[id], 0);
		PlayerTextDrawSetOutline(id, callname[id], 0);
		PlayerTextDrawBackgroundColor(id, callname[id], 0x00000046);
		PlayerTextDrawFont(id, callname[id], 1);
		PlayerTextDrawSetProportional(id, callname[id], 1);
		PlayerTextDrawSetSelectable(id, callname[id], 0);
		PlayerTextDrawShow(id, callname[id]);
		pSvon{id} = false;
		if(GetPVarInt(id, !"telephone") == 1)
		{
			for(new i; i < 58; i++)
			{
				TextDrawShowForPlayer(id, telephonexiaomi[i]);
				if(i < 15) TextDrawShowForPlayer(playerid, Calling[i]);
			}
		}
		else if(GetPVarInt(id, !"telephone") == 2)
		{
			for(new i; i < 67; i++)
			{
			    TextDrawShowForPlayer(id, telephoneiphone[i]);
				if(i < 15) TextDrawShowForPlayer(playerid, Calling[i]);
			}
		}
		if(GetPVarInt(id, !"telephone") == 3)
		{
		    for(new i; i < 72; i++)
		    {
		        TextDrawShowForPlayer(id, telephoneSamsung[i]);
				if(i < 15) TextDrawShowForPlayer(playerid, Calling[i]);
		    }
		}
		if(Phonestat{playerid})
        {
            Phonestat{playerid} = false;
			switch(GetPVarInt(playerid, !"telephone"))
			{
	            case 1,2: for(new i; i < 32; i++) TextDrawHideForPlayer(playerid,PnumberXiaomi[i]);
	            case 3: for(new i; i < 34; i++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
			}
			DestroyPlayerTD(playerid, Ppnumber[playerid]);
        }
		else if(Phonestat{id})
        {
            Phonestat{id} = false;
            switch(GetPVarInt(playerid, !"telephone"))
            {
	            case 1,2: for(new i; i < 32; i++) TextDrawHideForPlayer(id,PnumberXiaomi[i]);
	            case 3: for(new i; i < 34; i++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
	 		}
            DestroyPlayerTD(id, Ppnumber[id]);
        }
		PlayerPlaySound(id, 20600, 0.0, 0.0, 0.0);
        if(GetPVarInt(playerid, !"telephone") == 1)
        {
			for(new i = 2; i < 25; i++) TextDrawHideForPlayer(playerid, telephonexiaomi[i]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[57]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[56]);
		}
		if(GetPVarInt(id, !"telephone") == 1)
		{
			for(new i = 2; i < 25; i++) TextDrawHideForPlayer(id, telephonexiaomi[i]);
			TextDrawHideForPlayer(id, telephonexiaomi[57]);
			TextDrawHideForPlayer(id, telephonexiaomi[56]);
		}
	    if(GetPVarInt(playerid, !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawHideForPlayer(playerid, telephoneiphone[i]);
	    if(GetPVarInt(id, !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawHideForPlayer(id, telephoneiphone[i]);
		if(GetPVarInt(playerid, !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawHideForPlayer(playerid, telephoneSamsung[i]);
		if(GetPVarInt(id, !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawHideForPlayer(id, telephoneSamsung[i]);
		if(!telephoneon{id})
		{
		    if(GetPVarInt(id, !"telephone") == 1)
		    {
				f(str_2, sizeof(str_2), "%s достал(а) белый Xiaomi Mi 8 из кармана", cPN(id));
				ProxDetector(25, id, str_2, COLOR_ME);
				SelectTextDraw(id, -16776961);
				if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(id, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
			}
			else if(GetPVarInt(id, !"telephone") == 2)
			{
				f(str_2, sizeof(str_2), "%s достал(а) серебряный iPhone X из кармана", cPN(id));
				ProxDetector(25, id, str_2, COLOR_ME);
				SelectTextDraw(id, -16776961);
				if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(id, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
			}
			else if(GetPVarInt(id, !"telephone") == 3)
			{
				f(str_2, sizeof(str_2), "%s достал(а) белый Samsung Galaxy S10 из кармана", cPN(id));
				ProxDetector(25, id, str_2, COLOR_ME);
				SelectTextDraw(id, -16776961);
				if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(id, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
			}
		}
	}
	return 1;
}
forward MysqlCheckSMS(playerid, inputtext[]);
public MysqlCheckSMS(playerid, inputtext[])
{
	if(cache_num_rows())
	{
		new Group;
		cache_get_value_name_int(0, "Group", Group);
		if(!Group) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Вы в черном списке!", !"Закрыть", !"");

		str_1[0] = EOS;
		mysql_escape_string(inputtext, str_1);

		f(str_2, sizeof(str_2), "INSERT INTO `PhoneMes` VALUES('%s', '%s', '%s', '1', '%i')", PN(playerid), PI[playerid][pSendName], str_1, gettime());
		mysql_pquery(mysql, str_2, "MysqlAddMessage", "d", playerid);

		new id;
	    sscanf(PI[playerid][pSendName], "u", id);
		if(id != INVALID_PLAYER_ID)
		{
	   		if(PI[id][pTelWork] == 1)
			{
		        SCM(id, COLOR_GREY, !"Вам пришло новое сообщение!");
		        SetPlayerChatBubble(id, !"Получил сообщение", COLOR_PURPLE, 10.0, 5000);
			}
		}
		if(PI[playerid][pScutes] != -1) SCMf(PI[playerid][pScutes], COLOR_BLUE, "[ЖУЧЕК]: %s написал СМС игроку %s:  %s", PN(playerid), PN(id), inputtext);
		mysql_pqueryf(mysql, "UPDATE `PhoneMes` SET `read` = '0' WHERE `Namez` = '%s' AND `Name` = '%s'", PN(playerid), PI[playerid][pSendName]);
    }
	return 1;
}
forward MysqlChencheGroup(playerid);
public MysqlChencheGroup(playerid)
{
	f(str_1, 300, "SELECT `PhoneBook`.`Namez`,`PhoneBook`.`Num`,`Qelksekm`.`TelNum`,`Qelksekm`.`Online_status`,`PhoneBook`.`Group` FROM `PhoneBook`,`Qelksekm` WHERE `PhoneBook`.`Name`='%s' AND `Qelksekm`.`NickName`=`PhoneBook`.`Namez` ORDER BY `PhoneBook`.`Group` DESC;",PN(playerid));
	mysql_pquery(mysql, str_1, "MysqlShowContacts", "d", playerid);
	return 1;
}
forward SaveQuests(playerid, id);
public SaveQuests(playerid, id) mysql_pqueryf(mysql, "UPDATE `QuestsProgress` SET `progress`='%i' WHERE `idquest`='%i' AND `name`='%s';", QuestProgress[playerid][id], id, PN(playerid));

#if AC_ON
forward OnCheatDetected(playerid, ip_address[], type, code, code2);
public OnCheatDetected(playerid, ip_address[], type, code, code2)
{
	if(Osnovat(PN(playerid)) || IsABot(playerid) || IsPlayerPBot(playerid)) return false;
    if(type) BlockIpAddress(ip_address, 0);
    else
    {
        switch(code)
        {
            case 5, 6, 11, 14, 22, 32: return 1;
            case 40: SendClientMessage(playerid, -1, MAX_CONNECTS_MSG);
            case 41: SendClientMessage(playerid, -1, UNKNOWN_CLIENT_MSG);
            default:
            {
                if(gettime() - pAntiCheatLastCodeTriggerTime[playerid][code] < AC_TRIGGER_ANTIFLOOD_TIME) return 1;
                pAntiCheatLastCodeTriggerTime[playerid][code] = gettime();
                AC_CODE_TRIGGERED_COUNT[code]++;
                new trigger_type = AC_CODE_TRIGGER_TYPE[code];
                if(trigger_type == AC_CODE_TRIGGER_TYPE_WARNING) SendAdminsMessagef(COLOR_RED, "<Warning>{FFFFFF} %s[%i] подозревается в использовании чит-программ: %s [code: %03d].", PN(playerid), playerid, AC_CODE_NAME[code], code + 1000);
                else // AC_CODE_TRIGGER_TYPE_KICK
                {
					SendAdminsMessagef(COLOR_RED, "<Warning>{FFFFFF} %s[%i] был кикнут по подозрению в использовании чит-программ: %s [code: %03d].", PN(playerid), playerid, AC_CODE_NAME[code], code  + 1000);
					return ToCheat(code, playerid);
                }
            }
        }
    }
    return 1;
}
#endif

forward mysql_PromoCheck(playerid);
public mysql_PromoCheck(playerid)
{
    if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Промо-код не найден!"),SPD(playerid,2388,DIALOG_STYLE_INPUT,"","{FFFFFF}Введите {e9fb4b}промо-код{FFFFFF} пригласившего вас ютубера!","Ввод","Назад");
    
    new money, virmoney;

    cache_get_value_name_int(0, "money", money);
	cache_get_value_name_int(0, "virmoney", virmoney);

	f(str_1, sizeof(str_1), "{FFFFFF}Вы успешно активировали {FF6347}промо-код\n{FFFFFF}Вам выдано: {42B02C}%i$\n{FFFFFF}Вам выдано: {FAAC58}%i AZ-монет", money,virmoney);
    SPD(playerid, 0, 0, !"{BFBBBA}", str_1, !"Спасибо", !"");
	GiveMoney(playerid, money);
    InvAdd(playerid, Item_Ticket_AZ, virmoney);
    aml(101, playerid, "", "активация промо-кода", Item_Ticket_AZ, virmoney);
    PI[playerid][pAPromo] = 1;
    UpdatePlayerDataInt(playerid, "APromo", PI[playerid][pAPromo]);
    return aml(51, playerid, "", "промо-код", money);
}
forward mysql_PromoCodeShow(playerid);
public mysql_PromoCodeShow(playerid)
{
    if(!cache_num_rows()) return SCM(playerid, COLOR_VALIK, !"[A] Список промо-кодов отсутствует");
    str_2[0] = EOS;
    new virmoney, money;
    for(new i; i < cache_num_rows(); i++)
    {
        cache_get_value_name(i, "code", str_1);
        cache_get_value_name_int(i, "money", money);
        cache_get_value_name_int(i, "virmoney", virmoney);
        f(str_2, sizeof(str_2), "%s%i. Название: %s | Деньги: %i$ | Донат: %i AZ-монет\n", str_2, i+1, str_1, money, virmoney);
    }
    SPD(playerid, 0, DIALOG_STYLE_LIST, !"{FF6347}Список промокодов", str_2, !"Закрыть", !"");
    return 1;
}
forward PromoCodeDelete(playerid, code[]);
public PromoCodeDelete(playerid, code[])
{
    if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Промокод не обнаружен");
    SCM(playerid, COLOR_LIGHTBLUE, !"{FFFFFF}Промо-код успешно удалён");
    mysql_pqueryf(mysql, "DELETE FROM `Promo` WHERE `code` = '%s'", code);
	return 1;
}
forward mysql_PromoCreate(playerid,code[]);
public mysql_PromoCreate(playerid,code[])
{
    if(cache_num_rows()) return SCM(playerid,COLOR_LIGHTRED, "[Ошибка] Промокод уже есть в списке");

    new promomoney = GetPVarInt(playerid,"PROMOMONEY");
    new promovip = GetPVarInt(playerid,"PROMOVIPMONEY");
    mysql_pqueryf(mysql, "INSERT INTO `Promo` (`code`,`money`,`virmoney`) VALUES ('%s','%i','%i')", code, promomoney,promovip);

    f(str_2,sizeof(str_2),"{FFFFFF}Промокод '%s' успешно создан\nВыдача AZ монет: %i\nВыдача денег на %i$",code,promovip,promomoney);
    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{66CC00}Создание промокода", str_2, "Закрыть", "");

    DeletePVar(playerid,"PROMONAME");
	DeletePVar(playerid,"PROMOMONEY");
    DeletePVar(playerid,"PROMOVIPMONEY");
	return 1;
}
forward OnDelAccount(playerid, name[]);
public OnDelAccount(playerid, name[])
{
    if(cache_num_rows())
    {
	    SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Аккаунт с именем %s успешно удален!", name);
	    SendAdminsMessagef(COLOR_LIGHTRED, "[Внимание]{FFFFFF} Администратор %s удалил аккаунт игрока %s", PN(playerid), name);
	    aml(1, playerid, name, "удалил аккаунт");
	    new getplayer = GetPlayerID(name);
	    if(getplayer != INVALID_PLAYER_ID)
	    {
			SCM(getplayer, COLOR_LIGHTRED, !"Ваш аккаунт был удалён за нарушение правил сервера");
			Kick(getplayer);
		}
	    mysql_pqueryf(mysql, "DELETE FROM `Qelksekm` WHERE `NickName` = '%s'", name);
    }
    else
    {
        DeletePVar(playerid, !"OnDelAccount");
        SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
    }
    return 1;
}
@_FamilyHouseID(playerid);
@_FamilyHouseID(playerid)
{
    FamilyHouse[FamilyHouses][fhID] = cache_insert_id();
    return LoadFamilyHouse();
}
stock GoogleLogin(playerid)
{
	for(new i;i<8;i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
	for(new i=1;i<8;i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
	for(new i;i<5;i++) TextDrawHideForPlayer(playerid, GoogleStep4[i]);
	OnPlayerLogin(playerid);
}
stock GoogleSteep(playerid, steep, hide = 0)
{
	switch(steep)
	{
		case 0:
		{
			for(new i;i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
			for(new i = 1;i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
			for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, GoogleStep4[i]);
		}
		case 1:
		{
			for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GooglePhone[i]);
			for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GoogleStep1[i]);
			SPD(playerid, 8919, DIALOG_STYLE_MSGBOX, !"1-вый шаг", !"{FFFFFF}\n\nНачнем с того, что если у вас нет приложения, то его нужно\nзагрузить.Заходим в {FDC459}Play Market или App Store{FFFFFF} и ищем\nGoogle Authenticator.\n\n{B0FD59}Нашли? Нажимаем загрузить приложение.\n\n{B0FD59}Нажмите: 'Enter', чтобы пройти к следующему этапу.\n\n", !"Дальше", !"Отмена");
		}
		case 2:
		{
			if(hide)
			{
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep1[i]);
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
				return true;
			}
			for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep1[i]);
			for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GoogleStep2[i]);
			SPD(playerid, 8920, DIALOG_STYLE_MSGBOX, !"2-ой шаг", !"{FFFFFF}\n\nОтлично! Вы загрузили приложение, теперь давайте его запустим.\nНажимаем на {FDC459}+{FFFFFF}, так как показано на примере.\n\n{B0FD59}Нажмите: 'Enter', чтобы пройти к следующему этапу.\n\n", !"Дальше", !"Отмена");
		}
		case 3:
		{
			if(hide)
			{
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep1[i]);
				for(new i; i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
				return true;
			}
			for(new i; i < 6; i++) TextDrawShowForPlayer(playerid, GoogleStep3[i]);
			TextDrawHideForPlayer(playerid, GoogleStep2[0]);
		}
		case 4:
		{
			if(hide)
			{
				for(new i = 1; i < 8; i++) TextDrawHideForPlayer(playerid, GoogleStep2[i]);
				for(new i ; i < 6; i++) TextDrawHideForPlayer(playerid, GoogleStep3[i]);
				for(new i ; i < 8; i++) TextDrawHideForPlayer(playerid, GooglePhone[i]);
				return true;
			}
			for(new i; i < 6; i++) TextDrawHideForPlayer(playerid, GoogleStep3[i]);
			for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, GoogleStep4[i]);
			SPD(playerid, 8922, DIALOG_STYLE_INPUT, !"4-тый шаг", !"{FFFFFF}\n\nЕсли вы правильно ввели код, то теперь\nу вас в приложении будет обновляться другой код, который\nвы будете использовать для авторизации на сервере.\n(Код, который на компютере, это пример!)\n\n{ED4242}Теперь введите код с вашего телефона в этот диалог.\nЕсли он совпадет, значит все получилось!\n\n", !"Дальше", !"Отмена");
		}
	}
	return true;
}
stock ShowGoogleLogin(playerid)
{	
	for(new i; i < 8; i++) TextDrawShowForPlayer(playerid, GooglePhone[i]);
	for(new i = 1; i < 8; i++) TextDrawShowForPlayer(playerid, GoogleStep2[i]);
	for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, GoogleStep4[i]);
	SPD(playerid, 8929, DIALOG_STYLE_INPUT, !"Подтверждение", !"{FFFFFF}\n\nК этому аккаунту подключено приложение {F1FC4C}Google Authenticator{FFFFFF}.\nВведите код подтверждения для входа в игру.\n\n{FC4C4C}Если вы потеряли телефон/удалили приложение или потеряли\nидентификационный код, то при условии того что у вас\nправильно привязана почта, вы можете\nотключить Google Authenticator на сайте:\n\n{FFFFFF}"SITE"/profile/in", !"Принять", !"Отмена");
}
stock CheckTelNum(playerid, number, adm = 0)
{
	new bool:num;
    mysql_format(mysql, str_1, sizeof(str_1), "SELECT NickName FROM `Qelksekm` WHERE `TelNum` = '%i'", number);
	new Cache:result = mysql_query(mysql, str_1);
	if(cache_num_rows() > 0) num = true;
	cache_delete(result);

	if(num)
	{
		if(!adm) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Произошла ошибка при покупке SIM карты, попробуйте еще раз!");
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный номер уже занят!");
		return true;
	}
	return false;
}
stock AddReport(playerid)
{
	for(new i; i < sizeof(Reports); i++)
	{
		if(Reports[i] == -1)
		{
			Reports[i] = playerid;
			pTemp[playerid][NumReports] = i;
			break;
		}
	}
	return true;
}
stock TotalReport()
{
	new num;
	for(new i; i < sizeof(Reports); i++)
	{
		if(Reports[i] != -1) num ++;
	}
	return num;
}
/*stock LoadRadars()
{
	new currenttime = GetTickCount();
	new Cache:result = mysql_query(mysql, "SELECT * FROM `Radar`");
    if(cache_num_rows())
    {
        for(new i; i < cache_num_rows(); i++)
        {
            RadarInfo[i][rID] = cache_get_value_name_int(i, 0, mysql);
		    cache_get_value_name(i, 1, RadarInfo[i][rName], mysql, MAX_PLAYER_NAME+1);
		    RadarInfo[i][radX] = cache_get_value_name_float(i, 2, mysql);
		    RadarInfo[i][radY] = cache_get_value_name_float(i, 3, mysql);
		    RadarInfo[i][radZ] = cache_get_value_name_float(i, 4, mysql);
		    RadarInfo[i][radA] = cache_get_value_name_float(i, 5, mysql);
		    f(str_1, sizeof(str_1), "Радар\nМаксимальная скорость: {9ACD32}120 км/ч.\n{FFFFFF}Штраф за нарушение: {9ACD32}1500$.\n{FFFFFF}Поставил: {9ACD32}%s", RadarInfo[i][rName]);
	        RadarInfo[i][radText] = CreateDynamic3DTextLabel(str_1, -1, RadarInfo[i][radX], RadarInfo[i][radY], RadarInfo[i][radZ] + 2.0, 20.0);
	        RadarInfo[i][rObj] = CreateDynamicObject(18880, RadarInfo[i][radX], RadarInfo[i][radY], RadarInfo[i][radZ]-1.3, 0, 0, RadarInfo[i][radA]);
	        RadarInfo[i][radArea] = CreateDynamicSphere(RadarInfo[i][radX], RadarInfo[i][radY], RadarInfo[i][radZ], 10.0, 0, 0, -1);
	        Iter_Add(OWNABLERADAR, i);
        }
    }
    cache_delete(result);
    printf("LoadRadars загрузился за %i ms", GetTickCount() - currenttime);
	return true;
}*/
@_FamilyID(playerid, inputtext[]);
@_FamilyID(playerid, inputtext[])
{
	new id = Iter_Free(OWNABLEFAMILYS);
    FamilyInfo[id][famID] = cache_insert_id();

    PI[playerid][pFamilyMemberID] = FamilyInfo[id][famID];
    UpdatePlayerDataInt(playerid, "FamilyMemberID", PI[playerid][pFamilyMemberID]);

    PI[playerid][pFamilyMember] = id;

	strmid(FamilyInfo[id][famName], PI[playerid][pNameFamily2], 0, 16);

    GiveFam(playerid);

	PI[playerid][pFamily] = 0;
	PI[playerid][pNameFamily] = 0;
	UpdatePlayerDataInt(playerid, "NameFamily", PI[playerid][pNameFamily]);
	UpdatePlayerDataInt(playerid, "Family", PI[playerid][pFamily]);
	SetString(PI[playerid][pNameFamily2], !"None");
	UpdatePlayerDataStr(playerid, "NameFamily2", PI[playerid][pNameFamily2]);

	callcmd::fammenu(playerid);
	return true;
}
@_ConnectFam(playerid);
@_ConnectFam(playerid)
{
    new id = PI[playerid][pFamilyMember];
    LoadOwnableFamily(0, id);
	UpdatePlayerText[playerid] = false;
	return true;
}
@__LinenProgressGrow(linenid);
@__LinenProgressGrow(linenid)
{
    LinenInfo[linenid][linenObject] = CreateDynamicObject(865, LinenInfo[linenid][linenPosX], LinenInfo[linenid][linenPosY], LinenInfo[linenid][linenPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
    SetDynamicObjectMaterial(LinenInfo[linenid][linenObject], 0, 812, "gta_proc_grassland", "oak2b", 0);
	LinenInfo[linenid][linenLabel] = CreateDynamic3DTextLabel(" ", -1, LinenInfo[linenid][linenPosX], LinenInfo[linenid][linenPosY], LinenInfo[linenid][linenPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
	return 1;
}
@__CottonProgressGrow(cottonid);
@__CottonProgressGrow(cottonid)
{
    CottonInfo[cottonid][cottonObject] = CreateDynamicObject(819, CottonInfo[cottonid][cottonPosX], CottonInfo[cottonid][cottonPosY], CottonInfo[cottonid][cottonPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
    SetDynamicObjectMaterial(CottonInfo[cottonid][cottonObject], 0, 812, "gta_proc_grassland", "oak2b", 0);
    CottonInfo[cottonid][cottonLabel] = CreateDynamic3DTextLabel(" ", -1, CottonInfo[cottonid][cottonPosX], CottonInfo[cottonid][cottonPosY], CottonInfo[cottonid][cottonPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    return 1;
}
@__MineProgressGrow(mineid);
@__MineProgressGrow(mineid)
{
    MineInfo[mineid][mineStatus] = true;
	MineInfo[mineid][mineObject] = CreateDynamicObject(3930, MineInfo[mineid][minePosX], MineInfo[mineid][minePosY], MineInfo[mineid][minePosZ] - 1.2, -5.499997, 0.000000, -26.200012, -1, -1);
	SetDynamicObjectMaterial(MineInfo[mineid][mineObject], 0, 12871, "ce_ground01", "cs_rockdetail2", 0);
	switch(random(50))
	{
	    case 0..15: MineInfo[mineid][minePoroda] = 5;
	    case 16..25: MineInfo[mineid][minePoroda] = 4;
	    case 26..35: MineInfo[mineid][minePoroda] = 3;
	    case 36..45: MineInfo[mineid][minePoroda] = 2;
	    case 46..49: MineInfo[mineid][minePoroda] = 1;
	}

    f(str_2, sizeof(str_2), "Месторождение %s\n{73B461}Для добычи ископаемого\n{FFFFFF}нажмите 'ПРОБЕЛ'", MinePoroda[MineInfo[mineid][minePoroda] - 1]);
    MineInfo[mineid][mineLabel] = CreateDynamic3DTextLabel(str_2, -1, MineInfo[mineid][minePosX], MineInfo[mineid][minePosY], MineInfo[mineid][minePosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    return 1;
}
@DeleteFamily(playerid);
@DeleteFamily(playerid)
{
    if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Семьи с таким названием не существует!");
    new familyid;
    cache_get_value_name_int(0, "id", familyid);
    new familyindex = GetFamilyID(familyid);
    SCMf(playerid, COLOR_RED, "[Информация] {FFFFFF}Семья {%s}%s {FFFFFF}успешно удалена!", FamilyChatColor[FamilyInfo[familyindex][famChatColor]], FamilyInfo[familyindex][famName]);
    f(str_1, sizeof(str_1), "удалил семью %s", FamilyInfo[familyindex][famName]);
	aml(18, playerid, "", str_1);
    foreach(new i: Player)
    {
        if(PI[i][pFamilyMember] != familyid) continue;
        PI[i][pFamilyMember] = -1;
        PI[i][pFamilyMemberID] = -1;
        UpdatePlayerDataInt(i, "FamilyMemberID", -1);
        SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Семья в которой вы состояли, была расформирована!");
    }
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET FamilyMemberID = -1 WHERE FamilyMemberID = %i", familyid);
    mysql_pqueryf(mysql, "DELETE FROM `Family` WHERE id = '%i' LIMIT 1", familyid);
    FamilyInfo[familyindex][famMembersCount] = 0;
    FamilyInfo[familyindex][famID] = -1;
    FamilyInfo[familyindex][famName] = EOS;
    strmid(FamilyInfo[familyindex][famCreator], "None", 0, MAX_PLAYER_NAME);
    strmid(FamilyInfo[familyindex][famZam], "None", 0, MAX_PLAYER_NAME);
    strmid(FamilyInfo[familyindex][famZam2], "None", 0, MAX_PLAYER_NAME);
    strmid(FamilyInfo[familyindex][famDiscord], "None", 0, 40);
    Iter_Remove(OWNABLEFAMILYS, familyindex);
    return 1;
}
forward EggsSpawn();
public EggsSpawn()
{
	for(new i; i != MAX_EGGS; i++) if(Eggs[i][eCreate] == -1) Eggs[i][eCreate] = CreateDynamicPickup(19343, 1, Eggs[i][ePos_X], Eggs[i][ePos_Y], Eggs[i][ePos_Z], Eggs[i][eVWorld]);
	return 1;
}
forward MysqlTopDm(playerid);
public MysqlTopDm(playerid)
{
	new kills, deaths, name[MAX_PLAYER_NAME + 1];
	new rows = cache_num_rows();
	if(rows < 1) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}На данный момент ТОП-15 не составлен.");
	
	str_4[0] = EOS;
	strcat(str_4, "Место\tИгрок\tУбийств\tСмертей\n");
	
	for(new i; i < rows; i++)
	{
		cache_get_value_name(i, "NickName", name);
		cache_get_value_name_int(i, "DmKill", kills);
		cache_get_value_name_int(i, "DmDeath", deaths);

		f(str_2, sizeof(str_2), "{BE2D2D}%i.\t{FFFFFF}%s\t{BE2D2D}%i {FFFFFF}убийств\t{BE2D2D}%i {FFFFFF}смертей\n",
			i+1, name, kills, deaths
		);
		strcat(str_4, str_2);
	}
	SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"ТОП-15", str_4, !"x", !"");
	return 1;
}
forward MysqlDonationBlago(playerid);
public MysqlDonationBlago(playerid)
{
	if(cache_num_rows())
	{
        static name[MAX_PLAYER_NAME + 1];

		str_4[0] = EOS;
        strcat(str_4, "Место\tИгрок\tПожертвовал денег\n");
        new money;

        for(new i; i < cache_num_rows(); i++) {

            cache_get_value_name(i, !"NickName", name);
            cache_get_value_name_int(i, !"donation", money);

            f(str_2, sizeof(str_2), "%s{b2ff52}%i.\t{FFFFFF}%s\t{b2ff52}$%i\n", str_1, i+1, name, money);
			strcat(str_4, str_2);
        }
		SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"Топ благотворителей", str_4, !"Закрыть", !"");
    }
    return 1;
}
forward CarSkill(playerid);
public CarSkill(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(PI[playerid][pCarSkill] > 100) return 1;

	    PI[playerid][pCarSkill] += 2;
	    UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
	    SCMf(playerid, COLOR_LIGHTBLUE, "Ваш навык вождения повышен! Теперь ваш навык: {FFFFFF}%i/100", PI[playerid][pCarSkill]);
    }
    return 1;
}
@OfflineFamilyMembers(playerid);
@OfflineFamilyMembers(playerid)
{
    static name[MAX_PLAYER_NAME];
    name[0] = EOS, str_2[0] = EOS;
    new full;
    if(cache_num_rows() > 0)
    {
        for(new i = 0; i < cache_num_rows(); i++)
        {
            cache_get_value_name(i, !"NickName", name);
            foreach(new j : Player)
            {
                if(!strcmp(PlayerName[j], name)) continue;
                strcat(str_2, name);
                strcat(str_2, "\n");
                full++;
            }
        }
    }
    return SPD(playerid, 0, DIALOG_STYLE_LIST, "{FFCC00}Члены семьи", !full ? "{FFFFFF}Ничего не найдено" : str_2, "Закрыть", "");
}
forward OfflineUninvite(playerid, name[]);
public OfflineUninvite(playerid, name[])
{
	if(!cache_num_rows()) return SCM(playerid, -1, !"Аккаунт игрока не найден или игрок не состоит в Вашей фракции.");
	SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}выгнал оффлайн из семьи: %s!", FamColor, PN(playerid), playerid, name);
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `FamilyMemberID` = '-1' WHERE `NickName` = '%s'", name);
	return 1;
}
stock ServerInfo()
{
	switch(mysql_errno())
	{
		case 0, 1146: print("Подключение к базе данных удалось");
	    case 1044: return print("Подключение к базе данных не удалось [Указано несуществующее имя пользователя]");
	    case 1045: return print("Подключение к базе данных не удалось [Указан неправильный пароль]");
	    case 1049: return print("Подключение к базе данных не удалось [Указана несуществующая база данных]");
	    case 2003: return print("Подключение к базе данных не удалось [Хостинг с базой данных недоступен]");
	    case 2005: return print("Подключение к базе данных не удалось [Указан неправильный адрес хостинга]");
	    default: return printf("Подключение к базе данных не удалось [Неизвестная ошибка. Код ошибки: %i]", mysql_errno());
	}
	printf("Создано транспорта: %i", CountVehicles());
	printf("Создано объектов: %i", CountDynamicObjects());
	printf("Создано иконок: %i", CountDynamicMapIcons());
	printf("Создано 3D текстов: %i", CountDynamic3DTextLabels());
    return 1;
}

stock ResetArrays(playerid)
{
	RouletteOpen{playerid}                      = false;
	PlayerUsedCode{playerid} 					= false;
	TextDrawLoad{playerid} 						= false;
	ContainerTDOpen{playerid} 					= false;
	AttachEdit{playerid} 						= false;
	AcceptGoogle{playerid} 						= false;
	InvLockItem{playerid} 						= false;
	pTemp[playerid][SPECTPLAYER] 				= false;
    IsPlayerLogged{playerid} 					= false;
	NeedDell[playerid] 							= false;
	AcceptFam{playerid} 						= false;
	nomeraproverka{playerid} 					= false;
	InNZone{playerid} 							= false;
	MinusGun{playerid} 							= false;
	NumMusic[playerid] 							= false;
	bumboxobject[playerid]						= false;
	BoomUse[playerid] 							= false;
	Music[playerid] 							= false;
	bumboxopen{playerid} 						= false;
	animloading{playerid} 						= false;
	pSvon{playerid} 							= false;
	telephoneon{playerid} 						= false;
	Proviziya{playerid} 						= false;
	animan{playerid} 							= false;
	selfi{playerid} 							= false;
	donateopen{playerid} 						= false;
	EnterCasino{playerid} 						= false;
	ShowMap[playerid] 							= false;
	Controllable{playerid} 						= false;
	TeamDuty{playerid}                          = false;
	ADuty{playerid}                             = false;
	PlayerPlayed{playerid}						= false;
	PlayerGlass[playerid]						= false;
	Fishing{playerid} 							= false;
	IsPlayerSpawn{playerid} 					= false;
	Cuffed{playerid}                        	= false;
	PlayerLie[playerid]                         = false;
	PlayerLieHeal[playerid]                     = false;
	Phonestat{playerid}                         = false;
	PlayerSetBotLvl{playerid}                   = false;
	UsingShield[playerid]                       = false;
	captch_opened[playerid] 					= false;
	InventStatus{playerid} 						= false;
	MenuStatus{playerid}						= false;
	BuyStatus{playerid}							= false;
	LogoStatus{playerid} 						= false;
	UpdatePlayerText[playerid] 					= false;
	DescriptionTextCreate{playerid} 			= false;
	VoiceTextCreate{playerid} 					= false;
	TimeSelect[playerid]						= false;
	TimeSelectDoctor[playerid]					= false;
	TimeHealDied[playerid]						= false;
 	KillList{playerid}							= false;
	Predlog{playerid}							= false;
	TradeSend{playerid}							= false;
	TradeOpen{playerid}							= false;
	InvCarOpen{playerid}						= false;
	BlockOrel{playerid} 						= false;
	ReconOpen{playerid} 						= false;
	BuyPageSelectTable[playerid][0]				= false;
	BuyPageSelectTable[playerid][1]				= false;

	/*-------- [ Система крафта ] --------*/
	CraftOpened{playerid} = false;
	CraftColorOpened{playerid} = false;
	CraftAmount{playerid} = 1;
	CraftSelectColor[playerid] = 0;
	CraftTabSelect{playerid} = 1;
	CraftItemSelect{playerid} = 0;
	CraftPageSelect{playerid} = 1;
	CraftWriteSlot[playerid][0] = 0;
	CraftWriteSlot[playerid][1] = 0;
	/*-------- ====================== --------*/



	/*-------- [ Система контейнеров ] --------*/
	ContainerTakeOpen{playerid} = false;
	/*-------- ====================== --------*/
	
	
	/*-------- [ Система майнинга ] --------*/
	
	PI[playerid][pVideoCartID] = -1;
	
	SelectStallItem{playerid} = 0;
	StallOpen{playerid} = false;


	PlusItems[playerid]                         = 0;
	PageItems[playerid]                     	= 0;
	TradeLock{playerid}							= 0;
	TradeTimeCD[playerid]						= 0;
	TradeTime[playerid][0] 						= 0;
	TradeTime[playerid][1] 						= 10;
	PlayerTimerID[playerid]						= 0;
	PlayerTimerTick[playerid]					= 0;
	CuffedTime[playerid] 						= 0;
	pTemp[playerid][pEvent]						= 0;
	pTemp[playerid][ReReport]					= 0;
	pTemp[playerid][TimeHeal]					= 0;
    PI[playerid][pBeg][3] 						= 0;
    player_tattoos[playerid][0] 				= 0;
    player_tattoos[playerid][1] 				= 0;
    player_tattoos[playerid][2] 				= 0;
    player_tattoos[playerid][3] 				= 0;
    OBJECT_RAKE[playerid] 						= 0;
    OBJECT_SLEGAN[playerid] 					= 0;
 	Gambling[playerid] 							= 0;
 	pTemp[playerid][pLimit] 					= 0;
	PI[playerid][pMore] 						= 0;
	PI[playerid][pMoreHouses] 					= 0;
	PI[playerid][pRCTime] 						= 0;
    PI[playerid][pPos_X] 						= 0.0;
	PI[playerid][pPos_Y] 						= 0.0;
	PI[playerid][pPos_Z] 						= 0.0;
	PI[playerid][pPos_A] 						= 0.0;
	pTemp[playerid][pPosVIP][0]					= 0.0;
	pTemp[playerid][pPosVIP][1]					= 0.0;
	pTemp[playerid][pPosVIP][2]					= 0.0;
	PI[playerid][pSecond] 						= 0;
	pMusicOn[playerid]							= 0;
    QuestClick[playerid] 						= 0;
	PI[playerid][pVipTime] 						= 0;
	PI[playerid][pShowCase] 					= 0;
    cardop[playerid] 							= 0;
	PI[playerid][pHospital] 					= 0;
	Timerak[playerid]							= 0;
	CanUse[playerid] 							= 0;
	PI[playerid][pVID] 							= 0;
	Vnedren[playerid] 							= 0;
    TimetoReturn[playerid] 						= 0;
    vadtime[playerid]                           = 0;
    govtime[playerid]                           = 0;
	pTemp[playerid][vReis] 						= 0;
	CenaRaboti[playerid] 						= 0;
	PlayerAFKTime[playerid] 					= 0;
	PI[playerid][pObjikt] 						= 0;
	Getemer[playerid] 							= 0;
	kasmenu[playerid] 							= 0;
	TimeBus[playerid] 							= 0;
	deal[playerid] 								= 0;
	gpss[playerid] 								= 0;
	lomanim[playerid] 							= 0;
    medlomka[playerid] 							= 0;
    startlomka[playerid] 						= 0;
    cuffer[playerid] 							= 0;
    EngineStalled[playerid] 					= 0;
    Carskill[playerid] 							= 0;
    rabden[playerid] 							= 0;
    notneedm[playerid] 							= 0;
    caoffer[playerid] 							= 0;
    ferman[playerid]							= 0;
    selfrac[playerid] 							= 0;
    gskin[playerid] 							= 0;
    BusTime[playerid]						 	= 0;
    BusMoney[playerid] 							= 0;
    PlayerDrunkLevels[playerid] 				= 0;
    PlayerDrunkLevel[playerid] 					= 0;
    #if AC_ON
    pAntiCheatSettingsPage{playerid} 			= 0;
    #endif
    InJobs[playerid] 							= 0;
    kostiKos[playerid] 							= 0;
    engines[playerid] 							= 0;
	onkey[playerid] 							= 0;
	ReconMenus[playerid] 						= 0;
	Healttime[playerid] 						= 0;
	TimeMessage[playerid] 						= 0;
	vipob[playerid] 							= 0;
	sellcarto[playerid] 						= 0;
	idaofcar[playerid] 							= 0;
	PI[playerid][pMaskON]						= 0;
	PI[playerid][pAWarns]						= 0;
	PI[playerid][pRespawnChat]					= 0;
	Taxi_GO[playerid]                           = 0;
	PI[playerid][pLastGun] 						= 0;
	PI[playerid][pLastAmmo] 					= 0;
	PI[playerid][pHungryShow] 					= 0;
	CreteBomb[playerid]                         = 0;
	TimeOfCuff[playerid]                        = 0;
	GotoInfo[playerid][gtState]                 = 0;
 	PI[playerid][pBomb]                 		= 0;
 	TheifMoney[playerid]                        = 0;
	TheifKey[playerid] 							= 0;
	TheifTime[playerid] 						= 0;
	TheifCount[playerid] 						= 0;
	CreateMats[playerid] 						= 0;
	CreateMatsCount[playerid] 					= 0;
	UseDrugsTime[playerid]                      = 0;
	NoEnterPickup[playerid]                     = 0;
	PI[playerid][pVirMoney]             		= 0;
	ClickedState[playerid]                      = 0;
	CreateMats[playerid]                        = 0;
	CreateMatsCount[playerid]                   = 0;
	Errors[playerid]                            = 0;
	BizPrice[playerid]                          = 0;
	PI[playerid][pHealTime]           			= 0;
	PI[playerid][pHeal]           				= 0;
	PI[playerid][pHospCity]						= 0;
	FullnessTick[playerid]                      = 0;
	PI[playerid][pDemorgan]                 	= 0;
	PI[playerid][pFWarns] 						= 0;
	PI[playerid][pRank] 						= 0;
	PI[playerid][pContractTime] 				= 0;
	PI[playerid][pCars] 						= 0;
	PI[playerid][pSex] 							= 0;
	PI[playerid][pRace] 						= 0;
	PI[playerid][pBank] 						= 0;
	PI[playerid][pSkin] 						= 0;
	PI[playerid][pTelNum] 						= 0;
	PI[playerid][pPack] 						= 0;
    PI[playerid][pAPromo]    					= 0;
	PI[playerid][pJob] 							= 0;
	PI[playerid][pMuteTime] 					= 0;
	PI[playerid][pShowDokument] 				= 0;
	PI[playerid][pInvLang]						= 0;
	PI[playerid][pInvPos_X] 					= 0;
	PI[playerid][pInvPos_Y] 					= 0;
	PI[playerid][pInvSize_X] 					= 0;
	PI[playerid][pInvSize_Y] 					= 0;
	ObjectCarSelect[playerid]					= 0;
	for(new i; i < 108; i++)
	{
		PI[playerid][pInvItem][i] = 0;
		PI[playerid][pInvItemAmount][i] = 0;
		PI[playerid][pInvItemColor][i] = 0;
		PI[playerid][pInvItemEnchant][i] = 0;
		PI[playerid][pInvItemMining][i] = 1;
		PI[playerid][pInvItemLock][i] = 0;
		if(i < 50) PhoneID[playerid][i] = 0;
		if(i < 30) PI[playerid][pBuyItem][i] = 0;
		if(i < 10)
		{
			PI[playerid][pTradeItem][i] = 0;
			PI[playerid][pTradeItemAmount][i] = 0;
			PI[playerid][pTradeItemColor][i] = 0;
			PI[playerid][pTradeItemEnchant][i] = 0;
			PI[playerid][pTradeItemMining][i] = 0;
			PI[playerid][pTradeInvID][i] = -1;
		}
		if(i < 8)
		{	
			UseModCar[playerid][i] = 0;
			PI[playerid][pAcsCellLock][i] = 0;
			PI[playerid][pModCellLock][i] = 0;
			PI[playerid][pInvItemAcs][i] = 0;
			PI[playerid][pInvItemAcsColor][i] = 0;
			PI[playerid][pInvItemAcsEnchant][i] = 0;
		}
		if(i < MAX_PLAYER_HOUSE) PI[playerid][pHouseKey][i] = 0;
		if(i < sizeof(aAccessCMD)) PI[playerid][pAccessCMD][i] = 0;
	}
	UseAcsID[playerid] 							= 0;
	UseAcsEnchant[playerid] 					= 0;
	UseAcsColor[playerid] 						= 0;
	//PI[playerid][pPlayerAllTime] 				= 0;
	PI[playerid][pFMuteTime] 					= 0;
	PI[playerid][pJailTime] 					= 0;
	PI[playerid][pTimeTP] 						= 0;
	PI[playerid][pBailPrice] 					= 0;
	PI[playerid][pKungfu] 						= 0;
	PI[playerid][pKneehead] 					= 0;
	PI[playerid][pElbow] 						= 0;
	PI[playerid][pBoxing] 						= 0;
	PI[playerid][pAdmAction] 					= 0;
	PI[playerid][pDepChat] 						= 0;
	PI[playerid][pTelWork] 					    = 0;
	PI[playerid][pTelBalance] 					= 0;
	PI[playerid][pNewsChat] 					= 0;
	PI[playerid][pRacia] 				    	= 0;
	PI[playerid][pRabRacia]                     = 0;
	PI[playerid][pKillShow]                     = 0;
	PI[playerid][pVipChat]                      = 0;
	PI[playerid][pFamilyChat]                   = 0;
	CreditMoney[playerid]                       = 0;
	RobKey[playerid]                            = 0;
	RobTime[playerid]                           = 0;
	PI[playerid][pZKP]                  		= 0;
 	LoadIntro[playerid]                         = 0;
	RobCount[playerid]                          = 0;
	InJob[playerid] 							= 0;
	PI[playerid][pOldSkin] 						= 0;
	FireCount[playerid] 						= 0;
	RegisterState[playerid] 					= 0;
	Question[playerid]		 					= 0;
	PI[playerid][pAllRepl]						= 0;
	PI[playerid][pOldRepl]						= 0;
	PI[playerid][pLeader] 						= 0;
	PI[playerid][pBikeLic] 						= 0;
	PI[playerid][pWarns] 						= 0;
    jlock[playerid] 							= 0;
    InventPage[playerid] 						= 0;
    MenuPage[playerid] 							= 0;
	PI[playerid][pMember] 						= 0;
	PassInfo[playerid][psDateBirth][0] 			= 0;
 	PassInfo[playerid][psDateBirth][1] 			= 0;
 	PassInfo[playerid][psDateBirth][2] 			= 0;
 	PassInfo[playerid][psDate][0] 				= 0;
 	PassInfo[playerid][psDate][1] 				= 0;
 	PassInfo[playerid][psDate][2] 				= 0;
 	TaxiTarif[playerid] 						= 0;
	TaxiPrice[playerid] 						= 0;
	TaxiDistance[playerid] 						= 0;
	PI[playerid][pbydilnik]						= 0;
	PI[playerid][pONPhoneTalk]					= 0;
	Ring[playerid]                    			= 0;
	PI[playerid][pBankPass]               		= 0;
	PI[playerid][pBankCard]               		= 0;
	PI[playerid][pKlogin]               		= 0;
	MLeader[playerid] 							= 0;
	PI[playerid][pDCTime] 						= 0;
	TheftKey[playerid] 							= 0;
	TheftCount[playerid] 						= 0;
	TheftCarID[playerid] 						= 0;
	TheftTime[playerid] 						= 0;
	pTemp[playerid][BreakKey] 					= 0;
	pTemp[playerid][BreakCount] 				= 0;
	pTemp[playerid][BreakTime] 					= 0;
	SGunMats[playerid] 							= 0;
	SGunID[playerid] 							= 0;
	SGunPrice[playerid] 						= 0;
	SGunAmmo[playerid] 							= 0;
	CarPrice[playerid] 							= 0;
	PI[playerid][pTir]                          = 0;
	PI[playerid][pTirUp]                        = 0;
	pEngine{playerid}                           = 0;
	KostiMoney[playerid]						= 0;
	ZapretDice[playerid] 						= 0;
	Smokes[playerid] 							= 0;
	Smoke[playerid] 							= 0;
	SmokeTime[playerid] 						= 0;
	TransferPlayer[playerid] 					= 0;
	GetJob[playerid] 							= 0;
	TelNumber[playerid] 						= 0;
	captch_code[playerid][0] 					= 0;
	CodeDostupTimer[playerid]                   = 0;
	InvTimer[playerid]							= 0;
	TradeBTC[playerid]                          = 0;
    TradeEURO[playerid]                         = 0;
	TradeMoney[playerid] 						= 0;
	OrelMoney[playerid] 						= 0;
	Item_SelectID[playerid]						= 0;
	Item_Select[playerid]						= 0;
	for(new i; i < 5; i++) PlayerFish[playerid][i] 	= 0;
	PickObject[playerid] 						= -1;
	pmID[playerid]								= INVALID_PLAYER_ID;
	TrashID[playerid]							= -1;
	HouseID[playerid]							= -1;
	TradeID[playerid] 							= -1;
	pTemp[playerid][NumReports]					= -1;
	Donate_Select[playerid] 					= -1;
	InventCreatedMenu[playerid] 				= -1;
	InventClick{playerid} 						= 255;
    PI[playerid][pBeg][0] 						= -1;
  	SlotTimer[playerid] 						= -1;
	PI[playerid][pZall] 						= -1;
 	pTemp[playerid][pLavka] 					= -1;
	PI[playerid][pBuildType] 					= -1;
    cartrade[playerid] 							= -1;
	dBiz[playerid] 								= -1;
	PI[playerid][pType] 						= -1;
	PI[playerid][pScutes] 						= -1;
	PI[playerid][pMScutes] 						= -1;
	PI[playerid][pHSpectr] 						= -1;
	setcheck[playerid] 							= -1;
	TutState[playerid] 							= -1;
    Ingatre[playerid] 							= -1;
    avir[playerid] 								= -1;
	aint[playerid] 								= -1;
	PI[playerid][pCalling] 						= -1;
	BreakBomb[playerid]                         = -1;
	PlayerJailCP[playerid]                      = -1;
	PlayerGoPost[playerid]                      = -1;
	PlayerBed[playerid]                         = -1;
    NumInc_CP[playerid] 						= -1;
	HouseEntered[playerid] 						= -1;
	GarageEntered[playerid] 					= -1;
	ParkingEntered[playerid] 					= -1;
	BizEntered[playerid] 						= -1;
	BuyGuns[playerid]                           = -1;
	BuyInt[playerid] 							= -1;
	CarTest[playerid] 							= -1;
	PI[playerid][pFamilyMember] 				= -1;
	MotoTest[playerid]                          = -1;
	FarmJob[playerid] 							= -1;
	PI[playerid][pHouseSpawn] 					= -1;
	PI[playerid][pHouseTemp] 					= -1;
	Clother[playerid] 							= -1;
	Buyitem[playerid]                           = -1;
	PlayerSeat[playerid] 						= -1;
	pTemp[playerid][pArendaCar] 				= -1;
	PI[playerid][plveh]                         = -1;
	InfoHouse[playerid] 						= -1;
	InfoBiz[playerid]                           = -1;
	PanelPlayerID[playerid] 					= -1;
 	MedCardInfo[playerid][mcState] 				= -1;
	NoStrip[playerid]                           = -1;
 	pTemp[playerid][pSellCar] 					= -1;
 	#if AC_ON
	pAntiCheatSettingsEditCodeId[playerid] 		= -1;
	#endif
	FamEntered[playerid]                        = -1;
	for(new i; i < 3; i++) DiedPos[playerid][i] = -1;
	#if AC_ON
    for(new i = 0; i < AC_MAX_CODES; i++) pAntiCheatLastCodeTriggerTime[playerid][i] = -1;
    #endif
    for(new i; i < 6; i ++) InventMenuButton[playerid][i] = -1;

	SpectatePlayer[playerid]					= INVALID_PLAYER_ID;
	LiveOfferID[playerid]						= INVALID_PLAYER_ID;
	LiveOffer[playerid]							= INVALID_PLAYER_ID;
	MLPlayer[playerid] 							= INVALID_PLAYER_ID;
	SGunOffer[playerid] 						= INVALID_PLAYER_ID;
	CarOffer[playerid] 							= INVALID_PLAYER_ID;
	InviteOffer[playerid] 						= INVALID_PLAYER_ID;
	HouseOffer[playerid] 						= INVALID_PLAYER_ID;
	BizOffer[playerid] 							= INVALID_PLAYER_ID;
	RHouseOffer[playerid]						= INVALID_PLAYER_ID;
	LawyerOffer[playerid] 						= INVALID_PLAYER_ID;
	ArrestID[playerid]                        	= INVALID_PLAYER_ID;
	TazerPlayer[playerid]                       = INVALID_PLAYER_ID;
	PlayerOfCuff[playerid]                      = INVALID_PLAYER_ID;
	OldFreePlayer[playerid]                     = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtID]                    = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtGoID] 					= INVALID_PLAYER_ID;
	Recuffer[playerid]                          = INVALID_PLAYER_ID;
	KostiName[playerid] 						= INVALID_PLAYER_ID;
	SERIU[playerid] 							= INVALID_PLAYER_ID;
	OrelID[playerid]                          	= INVALID_PLAYER_ID;

	PlayerCar[playerid] 						= INVALID_PLAYER_ID;
	pTemp[playerid][pcarid] 					= INVALID_PLAYER_ID;
	pTemp[playerid][pDeathCar] 					= INVALID_PLAYER_ID;
	ArendKey[playerid]                          = INVALID_VEHICLE_ID;

	GotoInfo[playerid][gtX]                     = 0.0;
	GotoInfo[playerid][gtY]                     = 0.0;
	GotoInfo[playerid][gtZ]                     = 0.0;
	GotoInfo[playerid][gtTPX]                   = 0.0;
	GotoInfo[playerid][gtTPY]                   = 0.0;
	GotoInfo[playerid][gtTPZ]                   = 0.0;
	PI[playerid][pShield] 						= 0.0;

	PI[playerid][pInvCell]						= 72;

 
	/* Систсема заточки */
    ItemEnchant[playerid] = 0;
    ItemEnchantStoneAmount[playerid] = 0;
    ItemEnchantSlots[playerid] = -1;
    ItemEnchantSlot[playerid] = -1;
    EnchantOpen{playerid} = false;
	/*----------------------------*/
	GetPlayerPointDMZZ[playerid] 				= 7;
	PI[playerid][pCarSkill] 					= 80;
	SetPass[playerid][0]						= EOS;
	ReMail[playerid]                           	= "No Mail Adress";
	GoogleCodeTemp[playerid]					= "None";
	DRotTick[playerid]                          = 120;
 	Fullness[playerid]                     		= 55;
	PI[playerid][pShowName]                 	= 1;
	PI[playerid][pVIP] 							= STATUS_NONE;
	gPlayerLogTries{playerid} 					= 3;
	gPlayerGoogleTries{playerid} 				= 3;
	PI[playerid][pHealth] 						= 30;
	PI[playerid][pArmour] 						= 0;
	StatusMoneta[playerid]						= "";
}
stock FamMoneySklad(playerid)
{
	SPD(playerid, 5004, DIALOG_STYLE_INPUT, !"",
   !"\
        \n\n\
        {FFFFFF}Введите количество{C5D0FF} денег{FFFFFF}, которые хотите положить\n\
        на склад семейной квартиры.\n\n\
        Об вашем пополнении узнает вся семья.\n\
        Деньги семьи можно будет потратить на различные{E3BC6B} улучшения{FFFFFF}!\n\n\
	",
	!"Принять",
	!"Отмена");
	return true;
}
stock FamMoneySklad2(playerid) return SPD(playerid, 5005, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Введите количество{C5D0FF} денег{FFFFFF}, которые хотите взять\nна складе семейной квартиры.\n\n", !"Принять", !"Отмена");
stock UpdateFamHouse(famhouseid)
{
    if(GetString(FamilyHouse[famhouseid][fhOwner], "The State"))
    {
        str_1 =
		"\
			Семейная квартира\n\
			Стоимость: {87EB7F}%i репутации\n\
			{FFFFFF}Статус: %s\
		";
        f(str_2, 126, str_1, FamilyHouse[famhouseid][fhCost], (FamilyHouse[famhouseid][fhStatus] == 0) ? ("{87EB7F}[Открыта]") : ("{FF5E5E}[Закрыта]"));
        UpdateDynamic3DTextLabelText(FamHouseText[famhouseid], -1, str_2);
    }
    else
    {
        str_1 =
		"\
			Семейная квартира\n\
			Владелец: {56A351}%s\n\
			{FFFFFF}Статус: %s\
		";
        f(str_2, 300, str_1, FamilyHouse[famhouseid][fhOwner], (FamilyHouse[famhouseid][fhStatus] == 0) ? ("{87EB7F}[Открыта]") : ("{FF5E5E}[Закрыта]"));
        UpdateDynamic3DTextLabelText(FamHouseText[famhouseid], -1, str_2);
    }
	return true;
}
stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}
stock Float:GetVehicleAngleToPoint(vehicleid, Float:x, Float:y)
{
    new Float:ix, Float:iy, Float:iz, Float:a;
	GetVehicleZAngle(vehicleid, a);
	GetVehiclePos(vehicleid, ix, iy, iz);
	return GetAngleToPoint(ix, iy, a, x, y);
}
stock NextStapQI(playerid,id)
{//не должно быть ретурнов иначе не будет сохранение
	switch(id)
	{
	    case 0: //паспорт
	    {
	        if(IsValidPassport(playerid))
	        {
				SPD(playerid, 0, 0, !"", !"{FFFFFF}У вас уже есть паспорт! Задание было выполнено, получите награду.", !"Принять", !"");
	            QuestProgress[playerid][id]=2;
	            if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
	        }
	        else if(QuestProgress[playerid][id]==0)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение мэрии, направляйтесь туда");
				SCM(playerid, -1, !"чтобы получить паспорт.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,1495.1967,-1283.5261,14.5414);
	        }
	        if(QuestProgress[playerid][id]==2)
	        {
	           	if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
	        }
	    }
	    case 1: //ферма
	    {
	        if(QuestProgress[playerid][id]>=0 && QuestProgress[playerid][id]<30)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение фермы, направляйтесь туда");
				SCM(playerid, -1, !"и перенесите 30 стогов сена. Необходимо устроится на работу начальному фермеру, затем переодеться!");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,-69.1276,92.9946,3.1172);
	        }
	        else if(QuestProgress[playerid][id]==30)
			{
			    if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
	    }
	    case 2: //грузчики
	    {
            if(QuestProgress[playerid][id]>=0 && QuestProgress[playerid][id]<20)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение разгрузочной станции, направляйтесь туда");
				SCM(playerid, -1, !"и перенесите 20 предметов с вагонов на склад. Необходимо устроиться грузчиком");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,1980.2667,-1971.0826,13.5825);
	        }
	        else if(QuestProgress[playerid][id]==20)
			{
			    if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
	    }
	    case 3: //автошкола
	    {
	        if(GetInvCount(playerid, Item_Car_Lic))
	        {
	            QuestProgress[playerid][id]=2;
	            SPD(playerid, 0, 0, !"", !"{FFFFFF}У вас уже есть вод. удостоверение! Задание было выполнено, получите награду.", !"Принять", !"");
	            if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
	        }
            if(QuestProgress[playerid][id]==0)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение автошколы, направляйтесь туда,");
				SCM(playerid, -1, !"сдайте теорию, практику и получите вод. удостоверение.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,-2034.7258,-116.8749,35.2599);
	        }
	        else if(QuestProgress[playerid][id]==2)
			{
			    if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
	    }
	    case 4: //пицца
	    {
            if(QuestProgress[playerid][id]>=0 && QuestProgress[playerid][id]<15)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение фирмы по развоке пиццы, направляйтесь туда");
				SCM(playerid, -1, !"и развезите 15 заказов. Необходимо устроиться на работу развозчика пиццы.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,677.5144,-1560.4213,16.0349);
	        }
	        else if(QuestProgress[playerid][id]==15)
			{
			    if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
				else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
	    }
	    case 5:
	    {
	        if(QuestProgress[playerid][id]==0)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение Майкла, направляйтесь туда");
				SCM(playerid, -1, !"по просьбе вашего друга, познакомьтесь с ним для завершения задания!");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
	        }
	    }
	    case 6: //завод
	    {
            if(QuestProgress[playerid][id]>=0 && QuestProgress[playerid][id]<25)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение завода, направляйтесь туда");
				SCM(playerid, -1, !"и изготовьте 25 материалов. Необходимо устроиться на работу.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,-86.2750,-301.2829,2.7646);
	        }
	        else if(QuestProgress[playerid][id]==25)
			{
   				EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
	    }
	    case 7:
		{
		    if(PI[playerid][pTelNum] != 0)
	        {
				SPD(playerid, 0, 0, !"", !"{FFFFFF}У вас уже есть мобильный телефон! Задание было выполнено, получите награду.", !"Принять", !"");
	            QuestProgress[playerid][id]=1;
	            EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
	        }
		    if(QuestProgress[playerid][id]==0)
	        {
				new b = random(28);
				new a=0;
				for(new i;i<OWNABLEBIZES;i++)
				{
				    if (BizInfo[i][bState]==2 && BizInfo[i][bLock]==0)
				    {
				        if(b == a)
						{
							EnableGPSForPlayer(playerid,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]);
							SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место где можно купить мобильный телефон,");
							SCM(playerid, -1, !"отправляйтесь туда и сделайте как просил Майкл.");
							SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
						}
				        a++;
				    }
				}
	        }
	        else if(QuestProgress[playerid][id]==1)
			{
   				EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
		}
		case 8:
		{
		    if(PI[playerid][pLevel]>3)
			{
			    SPD(playerid, 0, 0, !"", !"{FFFFFF}Этот квест работает для игроков до 3-го уровня!\nДля игроков по старше квест выполняется автоматически!\n{6DA5EF}Задание было выполнено, получите награду.", !"Принять", !"");
	            QuestProgress[playerid][id]=1;
	            EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
			}
		    if(QuestProgress[playerid][id]==0)
	        {
				new b = random(8);
				new a=0;
				for(new i;i<OWNABLEBIZES;i++)
				{
				    if (BizInfo[i][bState]==3 && BizInfo[i][bLock]==0)
				    {
				        if(b == a)
						{
							EnableGPSForPlayer(playerid,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]);
							SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место где можно купить новую одежду,");
							SCM(playerid, -1, !"отправляйтесь туда и сделайте как просил Майкл.");
							SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
						}
				        a++;
				    }
				}
	        }
	        else if(QuestProgress[playerid][id]==1)
			{
   				EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
		}
		case 9:
		{
		    if(PI[playerid][pBankCard] !=0)
	        {
				SPD(playerid, 0, 0, !"", !"{FFFFFF}У вас уже есть банковская карта! Задание было выполнено, получите награду.", !"Принять", !"");
	            QuestProgress[playerid][id]=1;
	            EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
	        }
		    if(QuestProgress[playerid][id]==0)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение банковского отделения");
				SCM(playerid, -1, !"Las-Venturas, отправляйтесь туда и сделайте банковскую карту для выполнения задания.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,2375.5586,2308.5142,8.1406);
	        }
		    else if(QuestProgress[playerid][id]==1)
			{
   				EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
		}
		case 10:
		{
			if(PI[playerid][pSkillLevel] >= 30000)
			{
			    SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы уже полностью изучили стили боя! Задание было выполнено, получите награду.", !"Принять", !"");
	            QuestProgress[playerid][id]=100;
	            EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
			}
		    if(QuestProgress[playerid][id]==0)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение спортзала ЛС.");
				SCM(playerid, -1, !"отправляйтесь туда и потренируйтесь для выполнения задания.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,2228.4187,-1722.7664,13.5544);
	        }
		    else if(QuestProgress[playerid][id]==99)
			{
   				EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
		}
		case 11:
		{
			if(PI[playerid][pPistol_Skill]>=9000 && PI[playerid][pSDPistol_Skill]>=9000 && PI[playerid][pEagle_Skill]>=9000 && PI[playerid][pShotGun_Skill]>=9000 && PI[playerid][pUZI_Skill]>=9000 &&
			PI[playerid][pMP5_Skill]>=9000 && PI[playerid][pAK47_Skill]>=9000 && PI[playerid][pM4_Skill]>=9000 && PI[playerid][pSniper_Skill]>=9000)
			{
			    SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы и так уже в совершенстве владеете оружием! Задание было выполнено, получите награду.", !"Принять", !"");
	            QuestProgress[playerid][id]=30;
	            EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
			}

		    if(QuestProgress[playerid][id]==0)
	        {
	            SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на местоположение тира ЛС,");
				SCM(playerid, -1, !"отправляйтесь туда чтобы совершенствовать навыки стрельбы для выполнения задания.");
				SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
	            EnableGPSForPlayer(playerid,876.4536,-1566.7714,13.5391);
	        }
		    else if(QuestProgress[playerid][id]==30)
			{
   				EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
				SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}На миникарте установлена метка на место сдачи квеста.");
				SCM(playerid, -1, !"Отправляйтесь туда чтобы получить награду за выполненое задание.");
			}
		}
		case 12:
		{
		    if(QuestProgress[playerid][id] < 2)
		    {
		        EnableGPSForPlayer(playerid, 1813.0168, 373.9233, 18.9664);
		        SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Для того чтобы выполнить это задание, вам необходимо взять один из грузовиков семьи,");
		        SCM(playerid, -1, !"и следовать подсказкам по перевозке груза со склада СФ на склад семьи.");
		        SCM(playerid, COLOR_GREY, !"Если вы перезайдете в игру, то вам придется выполнять задание заново.");
		    }
		    else
		    {
		        EnableGPSForPlayer(playerid, 1800.4841, 409.9243, 20.2294);
		        SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Отправляйтесь к Нейтону для завершения задания, чтобы получить награду.");
		    }
		}
	}
    mysql_pqueryf(mysql, "UPDATE `QuestsProgress` SET `progress`='%i' WHERE `idquest`='%i' AND `name`='%s';", QuestProgress[playerid][id], id, PN(playerid));
	return 1;
}
stock CreateTeamVehicle(org,rank,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
	new carid = J_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime);
	vTemp[carid][vTeam] = org;
	vTemp[carid][vRank] = rank;
	return carid;
}
stock CreateJobVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
	new carid = J_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime);
	vTemp[carid][vJob] = job;
	return carid;
}
stock SetEngineStatus(carid,status, playerid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,status,lights,alarm,doors,bonnet,boot,objective);
    vTemp[carid][vEngine] = status;
    if(!status)
    {
        SetLightsStatus(carid, false, playerid != -1? playerid: -1);
        if(Signal[carid])
        {
            DestroyDynamicObject(LightsObject[carid][0]);
	 		DestroyDynamicObject(LightsObject[carid][1]);
	 		LightsObject[carid][0] = -1;
	 		LightsObject[carid][1] = -1;
	  		SignalTick[carid][0] = 0;
	  		SignalTick[carid][1] = -1;
	  		Signal[carid] = 0;
  		}
  		if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetPVarInt(playerid, !"pSpeed"))
  		{
			PlayerTextDrawSetString(playerid, speeddraw[playerid][4], "000");
			PlayerTextDrawSetString(playerid, speeddraw[playerid][3], "_");
		}
    }
    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetPlayerState(playerid)==2 && GetPVarInt(playerid, !"pSpeed"))
    {
		if(IsPlayerTextDrawVisible(playerid, speeddraw[playerid][2])) DestroyPlayerTD(playerid, speeddraw[playerid][2]);
		speeddraw[playerid][2] = CreatePlayerTextDraw(playerid, 603.000000, 396.000000, "eng"); //????????? ??? ??
		PlayerTextDrawAlignment(playerid, speeddraw[playerid][2], 2);
		PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][2], 255);
		PlayerTextDrawFont(playerid, speeddraw[playerid][2], 2);
		PlayerTextDrawLetterSize(playerid, speeddraw[playerid][2], 0.259999, 1.600000);
		PlayerTextDrawColor(playerid, speeddraw[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, speeddraw[playerid][2], 0);
		PlayerTextDrawSetProportional(playerid, speeddraw[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, speeddraw[playerid][2], 1);
		PlayerTextDrawUseBox(playerid, speeddraw[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, speeddraw[playerid][2], (vTemp[carid][vEngine])?576000767:-1407312129);
		PlayerTextDrawTextSize(playerid, speeddraw[playerid][2], 241.000000, 28.000000);
		PlayerTextDrawSetSelectable(playerid, speeddraw[playerid][2], 0);
		PlayerTextDrawShow(playerid, speeddraw[playerid][2]);
	}
    return 1;
}
stock SetLightsStatus(carid,status, playerid=-1)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,status,alarm,doors,bonnet,boot,objective);
    vTemp[carid][vLights] = status;
    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetPlayerState(playerid)==2 && GetPVarInt(playerid, !"pSpeed"))
    {
		if(IsPlayerTextDrawVisible(playerid, speeddraw[playerid][1])) DestroyPlayerTD(playerid, speeddraw[playerid][1]);
	    speeddraw[playerid][1] = CreatePlayerTextDraw(playerid, 567.000000, 396.000000, "light"); //????
		PlayerTextDrawAlignment(playerid, speeddraw[playerid][1], 2);
		PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][1], 255);
		PlayerTextDrawFont(playerid, speeddraw[playerid][1], 2);
		PlayerTextDrawLetterSize(playerid, speeddraw[playerid][1], 0.229999, 1.600000);
		PlayerTextDrawColor(playerid, speeddraw[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, speeddraw[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, speeddraw[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, speeddraw[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, speeddraw[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, speeddraw[playerid][1], (vTemp[carid][vLights])?-949019137:0x848482FF);
		PlayerTextDrawTextSize(playerid, speeddraw[playerid][1], 241.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, speeddraw[playerid][1], 0);
		PlayerTextDrawShow(playerid, speeddraw[playerid][1]);
    }
    return 1;
}
stock SetDoorsStatus(carid,status, playerid = -1)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,alarm,status,bonnet,boot,objective);
    if(playerid != -1 && GetPlayerState(playerid)==2 && !IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetPVarInt(playerid, !"pSpeed"))
    {
		new number = GetVehicleID(carid);
	    if(IsPlayerTextDrawVisible(playerid, speeddraw[playerid][0])) DestroyPlayerTD(playerid, speeddraw[playerid][0]);
	    speeddraw[playerid][0] = CreatePlayerTextDraw(playerid, 531.000000, 396.000000, "lock");
		PlayerTextDrawAlignment(playerid, speeddraw[playerid][0], 2);
		PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][0], 255);
		PlayerTextDrawFont(playerid, speeddraw[playerid][0], 2);
		PlayerTextDrawLetterSize(playerid, speeddraw[playerid][0], 0.239998, 1.600000);
		PlayerTextDrawColor(playerid, speeddraw[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, speeddraw[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, speeddraw[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, speeddraw[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, speeddraw[playerid][0], 1);
		if(IsAOwnableCar(number))PlayerTextDrawBoxColor(playerid, speeddraw[playerid][0], (CarInfo[number][cLock])?-1407312129:576000767);
		else if(vTemp[carid][vJob]!=0 || IsAArendCar(carid)) PlayerTextDrawBoxColor(playerid, speeddraw[playerid][0], (vTemp[carid][vLock])?-1407312129:576000767);
		PlayerTextDrawTextSize(playerid, speeddraw[playerid][0], 241.000000, 28.000000);
		PlayerTextDrawSetSelectable(playerid, speeddraw[playerid][0], 0);
		PlayerTextDrawShow(playerid, speeddraw[playerid][0]);
    }
    return 1;
}
stock SetBootStatus(carid,status)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,status,objective);
    return 1;
}
stock SetAlarmStatus(carid,status)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,status,doors,bonnet,boot,objective);
    return 1;
}
stock GetEngineStatus(carid) return vTemp[carid][vEngine];
stock GetLightsStatus(carid) return vTemp[carid][vLights];
/*stock ConnectMySQL()
{
    new currenttime = GetTickCount();
	if(GetString(Mode_City, "Test")) mysql = mysql_connect("77.222.42.28", "gs117627", "KcfHU5jCurkz", "gs117627");
	else mysql = mysql_connect("77.222.42.28", "gs117627", "KcfHU5jCurkz", "gs117627");
	mysql_pquery(mysql, "SET NAMES 'cp1251'");
	mysql_set_charset("cp1251", mysql);
    printf("=======> mysql connect %i", Float:mysql);
    //============
    mysql_pquery(mysql, "UPDATE `Qelksekm` SET `Online_status` = '-1'");
    printf("MySQL подключился за %i ms", GetTickCount() - currenttime);
    return true;
}*/

stock ConnectMySQL()
{
    new currenttime = GetTickCount();
    LoadMySQLSettings();
    mysql = mysql_connect(MySQLSettings[MAZE_HOST],MySQLSettings[MAZE_USERNAME],MySQLSettings[MAZE_PASSWORD], MySQLSettings[MAZE_DATABASE]);
	mysql_tquery(mysql, "SET NAMES cp1251");
	mysql_set_charset("cp1251");
	mysql_query(mysql, "SET CHARACTER SET cp1251"); // это для рухоста
	mysql_query(mysql, "SET NAMES 'utf8'");
	printf("=======> mysql connect %i", Float:mysql);
	mysql_pquery(mysql, "UPDATE `Qelksekm` SET `Online_status` = '-1'");
	printf("MySQL подключился за %i ms", GetTickCount() - currenttime);
	mysql_pquery(mysql, "SELECT * FROM `hostnames`", "LoadNames");
    return true;
}

BonusLoad()
{
	new Cache:result = mysql_query(mysql,"SELECT * FROM `setbonus`" );
	if(cache_num_rows() > 0)
	{
		//BONUSLVL = cache_get_row_int(0, 0, mysql);
		//BONUSMONEY = cache_get_row_int(0, 1, mysql);
		//BONUSDONATE = cache_get_row_int(0, 2, mysql);
		cache_get_value_name_int(0, "level", BONUSLVL);
		cache_get_value_name_int(0, "money", BONUSMONEY);
		cache_get_value_name_int(0, "donate", BONUSDONATE);
	}
	cache_delete(result);

	printf("Бонус LEVEL:      		%d",BONUSLVL);
	printf("Бонус MONEY:      		%d",BONUSMONEY);
	printf("Бонус DONATE:      		%d",BONUSDONATE);
	return 1;
}

forward LoadNames();
public LoadNames() {
    if(cache_num_rows() > 0)
	{
		//cache_get_field_content(0, "hostname", ServerName, mysql);
		//cache_get_field_content(0, "weburl", WebUrl, mysql);
		//cache_get_field_content(0, "gamemode", GameMode, mysql);
		cache_get_value_name(0, "hostname", ServerName);
		cache_get_value_name(0, "weburl", WebUrl);
		cache_get_value_name(0, "gamemode", GameMode);
	}
	print("[Загрузка]: MazeConfig загружен успешно!");
	print("Бесплатный хостинг игровых серверов Maze-Host");
	print("Maze-Host.Ru");
	SendRconCommand(ServerName);
	SendRconCommand(WebUrl);
	SetGameModeText(GameMode);
	return true;
}

stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[MAZE_HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[MAZE_USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[MAZE_PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[MAZE_DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}

stock CountVehicles()
{
	new carid = AddStaticVehicleEx(400, -100, -100, -100, 0, 0, 0, 0);
	DestroyVehicleEx(carid);
	return carid;
}
stock bool:floatcomp(Float:X1, Float:X2, Float:Delta = 0.05)
{
    return (floatabs(X1-X2) < Delta) ? true : false;
}
stock IsAtBankomat(playerid,Float:distance)
{
    for(new i = 0;i < sizeof(Bankomats);i ++) if(IsPlayerInRangeOfPoint(playerid,distance,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2])) return 1;
	return 0;
}
stock IsAtGang(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_GROOVE,TEAM_VAGOS,TEAM_BALLAS,TEAM_CORONOS,TEAM_RIFA,TEAM_WOLFS: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsAtMafia(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_RM,TEAM_YAKUZA,TEAM_LCN,TEAM_BIKERS: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsAtFrakcia(playerid, onlygos = 0)
{
	new team = GetTeamID(playerid);
	if(onlygos)
	{
	    switch(team)
		{
		    case TEAM_LSPD,TEAM_PDLV,TEAM_LVPD,TEAM_FBI,TEAM_ARMY,TEAM_ARMYLV,TEAM_LICENSERS,TEAM_SFPD,TEAM_MEDICLS,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MEDICSF,TEAM_BANK,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMYSF: return 1;
		    default: return 0;
		}
	}
	else
	{
		switch(team)
		{
		    case TEAM_LSPD,TEAM_PDLV,TEAM_LVPD,TEAM_FBI,TEAM_SFPD,TEAM_MEDICLS,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MEDICSF,TEAM_LICENSERS,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMY,TEAM_ARMYLV,TEAM_BANK,TEAM_ARMYSF: return 1;
		    default: return 0;
		}
	}
	return 0;
}
stock GetPlayerFAngle(playerid, &Float:angle)
{
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
	else GetPlayerFacingAngle(playerid, angle);
}

#if AC_ON
forward LoadAC();
public LoadAC()
{
	new currenttime = GetTickCount();
    new rows = cache_num_rows();
    if(rows > 0)
    {
        for(new i = 0; i < AC_MAX_CODES; i++)
        {
            cache_get_value_name_int(i, ""AC_TABLE_FIELD_TRIGGER"", AC_CODE_TRIGGER_TYPE[i]);
            if(AC_CODE_TRIGGER_TYPE[i] == AC_CODE_TRIGGER_TYPE_DISABLED) EnableAntiCheat(i, 0);
        }
		ACLoadInfo = rows;
    }
    printf("LoadAC(%i) загрузился за %i ms", ACLoadInfo, GetTickCount() - currenttime);
    return 1;
}
#endif

stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
    new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2:
	    {
	        a += 90.0;
	        x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
	    }
	    case 3:
		{
		    a -= 90.0;
      		x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return 0;
	}
	return 1;
}
stock ShiftCords(style, &Float:x, &Float:y, Float:a, Float:distance)
{
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return 0;
	}
	return 1;
}
stock IsGangToZone(gangid, zone, Float:kolvo = 50.0)
{
	new Count, InZone, Float:All;
	foreach(new i: Player)
	{
	    if(GetTeamID(i) == gangid)
	    {
	        Count ++;
	        if(IsPlayerToKvadrat(i, GZInfo[zone][gzMin_X], GZInfo[zone][gzMin_Y], GZInfo[zone][gzMax_X], GZInfo[zone][gzMax_Y])) InZone ++;
		}
	}
	if(!Count || !InZone) return 0;
	All = 100.0 * float(InZone) / Count;
	return (All >= kolvo);
}
stock GetPlayerGangZone(playerid)
{
	for(new i = 1; i < GANGZONES; i++)
	{
	    if(IsPlayerToKvadrat(playerid, GZInfo[i][gzMin_X], GZInfo[i][gzMin_Y], GZInfo[i][gzMax_X], GZInfo[i][gzMax_Y])) return i;
	}
	return -1;
}
stock IsTeamConnected(gangid)
{
	new count;
    foreach(new i: Player)
	{
        if(GetTeamID(i) == gangid) count++;
	}
	return count;
}
stock SPD(playerid, dialogid, style, const caption[], info[], button1[], button2[])
{
	static dcaption[100];
	dcaption = "{BFBBBA}";
	strcat(dcaption, caption);
	return ShowPlayerDialog(playerid, dialogid, style, dcaption, info, button1, button2);
}
stock ResetDynamicCPs(playerid)
{
    TogglePlayerDynamicCP(playerid, MinerDownCP, false);
    TogglePlayerDynamicCP(playerid, PorterDownCP, false);
	TogglePlayerDynamicCP(playerid, Binko_CP, true);
	for(new i; i < 4; i++) TogglePlayerDynamicCP(playerid, BankCP[i], false);
	TogglePlayerDynamicCP(playerid, ScrapCP, false);
	TogglePlayerDynamicCP(playerid, FerumEndCP, false);
	for(new i; i < MAX_TRASH; i ++)
	{
	    if(i < MAX_TRASH) TogglePlayerDynamicCP(playerid, MusorCP[i], false);
	    if(i < sizeof(MinPos)) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	    if(i < sizeof(FerumCP)) TogglePlayerDynamicCP(playerid, FerumCP[i], false);
	    if(i < sizeof(GoFuelCP)) TogglePlayerDynamicCP(playerid, GoFuelCP[i], false);
	    if(i < sizeof(GoGunShop)) TogglePlayerDynamicCP(playerid, GoGunShopCP[i], false);
	   	if(i < sizeof(PrisonPos)) TogglePlayerDynamicCP(playerid, JailCP[i], false);
		if(i < sizeof(IncCP))
		{
		    TogglePlayerDynamicCP(playerid, IncCP[i][0], false);
	    	TogglePlayerDynamicCP(playerid, IncCP[i][1], false);
		}
		if(i < sizeof(PizzCP))
		{
		    TogglePlayerDynamicCP(playerid, PizzCP[i][0], false);
	    	TogglePlayerDynamicCP(playerid, PizzCP[i][1], false);
		}
	}
	return 1;
}
stock DisableAllRaceCPs(playerid)
{
    for(new i = 1;i <= CountDynamicRaceCPs();i ++) TogglePlayerDynamicRaceCP(playerid, i, false);
	return 1;
}
stock Autorisation(playerid)
{
    SetPlayerVirtualWorld(playerid, 1228);
	if(PI[playerid][pID] != -1) ShowLoginDialog(playerid);
	else
	{
	    RegisterState[playerid] = 1;
	   	ShowRegisterDialog(playerid,RegisterState[playerid]);
	}
	return 1;
}
stock CheckBizState(bizid, set)
{
	switch(BizInfo[bizid][bState])
	{
		case 0:
		{
			BizInfo[bizid][bInt] = 1;
			SetString(BizInfo[bizid][bName], "Амуниция/Тир");
			BizInfo[bizid][bExit_X] = 285.4;
			BizInfo[bizid][bExit_Y] = -41.228;
			BizInfo[bizid][bExit_Z] = 1001.52;
			if(set)
			{
				if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
				BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 6, 0, -1, -1, -1, 300.0);
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 1:
		{
			if(BizInfo[bizid][bInt] == 17)
			{
				SetString(BizInfo[bizid][bName], "Бар");
				BizInfo[bizid][bExit_X] = 493.32;
				BizInfo[bizid][bExit_Y] = -24.8194;
				BizInfo[bizid][bExit_Z] = 1000.68;
			}
			if(BizInfo[bizid][bInt] == 3)
			{
				SetString(BizInfo[bizid][bName], "Бар");
				BizInfo[bizid][bExit_X] = -2636.52;
				BizInfo[bizid][bExit_Y] = 1402.46;
				BizInfo[bizid][bExit_Z] = 906.461;
			}
			if(BizInfo[bizid][bInt] == 11)
			{
				SetString(BizInfo[bizid][bName], "Бар");
				BizInfo[bizid][bExit_X] = 501.871;
				BizInfo[bizid][bExit_Y] = -67.582;
				BizInfo[bizid][bExit_Z] = 998.758;
			}
			if(set)
			{
				if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
				BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 49, 0, -1, -1, -1, 300.0);
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 2:
		{
			BizInfo[bizid][bInt] = 16;
			SetString(BizInfo[bizid][bName], "Магазин 24/7");
			BizInfo[bizid][bExit_X] = 2586.03;
			BizInfo[bizid][bExit_Y] = 1437.58;
			BizInfo[bizid][bExit_Z] = 1800.97;
			if(set)
			{
				if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
				BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 17, 0, -1, -1, -1, 300.0);
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 3:
		{
			BizInfo[bizid][bInt] = 3;
			SetString(BizInfo[bizid][bName], "Магазин одежды");
			BizInfo[bizid][bExit_X] = 207.011;
			BizInfo[bizid][bExit_Y] = -140.115;
			BizInfo[bizid][bExit_Z] = 1003.51;
			if(set)
			{
				if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
				BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 45, 0, -1, -1, -1, 300.0);
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 4:
		{
			SetString(BizInfo[bizid][bName], "Предприятие");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 5:
		{
			SetString(BizInfo[bizid][bName], "Тюнинг салон");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 6:
		{
			BizInfo[bizid][bInt] = 3;
			SetString(BizInfo[bizid][bName], "АЗС/Магазин механики");
			BizInfo[bizid][bExit_X] = 671.706;
			BizInfo[bizid][bExit_Y] = -579.11;
			BizInfo[bizid][bExit_Z] = 1700.74;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 7:
		{
			BizInfo[bizid][bInt] = 9;
			SetString(BizInfo[bizid][bName], "Закусочная");
			BizInfo[bizid][bExit_X] = 1085.87;
			BizInfo[bizid][bExit_Y] = 1005.05;
			BizInfo[bizid][bExit_Z] = 1601;
			if(set)
			{
				if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
				BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 10, 0, -1, -1, -1, 300.0);
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 8:
		{
			SetString(BizInfo[bizid][bName], "Аренда транспорта");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 9:
		{
			BizInfo[bizid][bInt] = 3;
			SetString(BizInfo[bizid][bName], "Магазин аксессуаров");
			BizInfo[bizid][bExit_X] = -401.596;
			BizInfo[bizid][bExit_Y] = 2227.4;
			BizInfo[bizid][bExit_Z] = 1801.09;
			if(set)
			{
				if(IsValidDynamicMapIcon(BizIcon[bizid])) DestroyDynamicMapIcon(BizIcon[bizid]);
				BizIcon[bizid] = CreateDynamicMapIcon(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 56, 0, -1, -1, -1, 300.0);
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 10:
		{
			BizInfo[bizid][bInt] = 3;
			SetString(BizInfo[bizid][bName], "Информационный центр");
			BizInfo[bizid][bExit_X] = 368.666;
			BizInfo[bizid][bExit_Y] = 162.288;
			BizInfo[bizid][bExit_Z] = 1025.79;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 11:
		{
			SetString(BizInfo[bizid][bName], "Предприятие");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 12:
		{
			SetString(BizInfo[bizid][bName], "Концертный зал");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 13:
		{
			SetString(BizInfo[bizid][bName], "Шахта");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 14:
		{
			BizInfo[bizid][bCost] = 0;
			SetString(BizInfo[bizid][bName], "Автосалон СФ");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 15:
		{
			BizInfo[bizid][bCost] = 0;
			SetString(BizInfo[bizid][bName], "Автосалон ЛВ");
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 16:
		{
			BizInfo[bizid][bInt] = 16;
			SetString(BizInfo[bizid][bName], SHOP_TUNE);
			BizInfo[bizid][bExit_X] = 1086.9600;
			BizInfo[bizid][bExit_Y] = 1521.4000;
			BizInfo[bizid][bExit_Z] = 1716.0868;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 17:
		{
			BizInfo[bizid][bCost] = 0;
			SetString(BizInfo[bizid][bName], SHOP_CONTAINER);
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 18:
		{
			BizInfo[bizid][bCost] = 50000000;
			SetString(BizInfo[bizid][bName], SHOP_CASINO);
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 19:
		{
			BizInfo[bizid][bCost] = 5000;
			SetString(BizInfo[bizid][bName], SHOP_LUXE);
			BizInfo[bizid][bExit_X] = 0.0;
			BizInfo[bizid][bExit_Y] = 0.0;
			BizInfo[bizid][bExit_Z] = 0.0;
			if(set)
			{
				if(IsValidDynamicPickup(BizPickup[bizid])) DestroyDynamicPickup(BizPickup[bizid]);
				BizPickup[bizid] = CreatePickup(1239, 23, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], -1);
			}
		}
		case 20:
		{
			BizInfo[bizid][bCost] = 15000000;
			SetString(BizInfo[bizid][bName], "Ремонт одежды");
			BizInfo[bizid][bExit_X] = 1548.1293;
			BizInfo[bizid][bExit_Y] = 1645.9443;
			BizInfo[bizid][bExit_Z] = 10.8203;
			BizInfo[bizid][bInt] = 7;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
		case 21:
		{
			BizInfo[bizid][bCost] = 30000000;
			SetString(BizInfo[bizid][bName], "Магазин видеокарт");
			BizInfo[bizid][bExit_X] = 1088.42;
			BizInfo[bizid][bExit_Y] = -1699.34;
			BizInfo[bizid][bExit_Z] = 12.5218;
			BizInfo[bizid][bInt] = 1;
			if(set)
			{
				if(IsValidDynamicCP(BizCP[bizid])) DestroyDynamicCP(BizCP[bizid]);
				BizCP[bizid] = CreateDynamicCP(BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z], 1.0, -1, -1, -1, 25);
			}
		}
	}
}
stock UpdateBiz(bizid, save = 1, set = 0)
{
	if(bizid == -1) return false;
	CheckBizState(bizid, set);
	if(set)
	{
		if(IsValidDynamic3DTextLabel(Biz3DText[bizid])) DestroyDynamic3DTextLabel(Biz3DText[bizid]);
		Biz3DText[bizid] = CreateDynamic3DTextLabel(!" Бизнес ", 0x4CD10FF, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y],BizInfo[bizid][bEnter_Z], 20.0);
		if(!IsNoEnterBiz(bizid))
		{
			if(IsValidDynamicPickup(BizPick[bizid])) DestroyDynamicPickup(BizPick[bizid]);
			BizPick[bizid] = CreatePickup(19132, 1, BizInfo[bizid][bExit_X], BizInfo[bizid][bExit_Y], BizInfo[bizid][bExit_Z], (bizid+100));
		}
	}
    if(GetString(BizInfo[bizid][bOwner], "The State"))
    {
    	if(BizInfo[bizid][bCost]) 
    	{
    		if(BizInfo[bizid][bState] == 19) f(str_2, sizeof(str_2), "%i AZ-RUB", BizInfo[bizid][bCost]);
    		else f(str_2, sizeof(str_2), "$%i", BizInfo[bizid][bCost]);
    	}
   		f(str_1, sizeof(str_1), "\
		{FAAC58}Бизнес продается \n\n\
		{73B461}Тип бизнеса: {FFFFFF}%s\n\
		{73B461}Номер бизнеса: {FFFFFF}%i\n\
		{73B461}Цена: {FFFFFF}%s\n\
		{73B461}Можно приобрести: {FFFFFF}/buybiz", BizInfo[bizid][bName], bizid, BizInfo[bizid][bCost] ? str_2 : ("500000 AZ Coins"));
   		UpdateDynamic3DTextLabelText(Biz3DText[bizid], -1, str_1);
	}
	else
	{
		switch(BizInfo[bizid][bKrasher])
		{
		    case TEAM_RM: str_2 = "Русская Мафия";
			case TEAM_YAKUZA: str_2 = "Якудза";
			case TEAM_LCN: str_2 = "ЛКН";
			case TEAM_BIKERS: str_2 = "Байкеры";
			default: str_2 = "none";
		}
		f(str_1, sizeof(str_1), "\
		{FFFF00}%s\n\n\
		{73B461}Тип бизнеса: {FFFFFF}%s\n\
		{73B461}Номер бизнеса: {FFFFFF}%i\n\
		{73B461}Владелец: {FFFFFF}%s\n\
		{73B461}Крыша: {FFFFFF}%s%s", BizInfo[bizid][bDescription], BizInfo[bizid][bName], bizid, BizInfo[bizid][bOwner], str_2, IsNoEnterBiz(bizid) ? ("\n{CB2424}Входа нет!") : (""));
		if(BizInfo[bizid][bState] == 7 || BizInfo[bizid][bState] == 1 || BizInfo[bizid][bState] == 2 || BizInfo[bizid][bState] == 3 || BizInfo[bizid][bState] == 9)
		{
            if(BizInfo[bizid][bBuyCost] > 0 && BizInfo[bizid][bNeedItem] > 0)
			{
			    if(BizInfo[bizid][bState] == 7) f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Скупает {CBB42F}%i{FFFFFF} продуктов со склада фермы\nСтоимость 1-го продукта: {CBB42F}%i$\nНажмите 'H' чтобы разгрузить продукты.", str_1, BizInfo[bizid][bNeedItem], BizInfo[bizid][bBuyCost]);
			    else f(str_1, sizeof(str_1), "%s\n\nСкупает {CBB42F}%i{FFFFFF} продуктов с разгрузочной станции.\nСтоимость 1-го предмета: {CBB42F}%i$\nНажмите 'H' чтобы разгрузить продукты.", str_1, BizInfo[bizid][bNeedItem], BizInfo[bizid][bBuyCost]);
			}
		}
        UpdateDynamic3DTextLabelText(Biz3DText[bizid], -1, str_1);
	}
	if(save) SaveBiz(bizid);
	return 1;
}
stock UpdateHouseGarage(house)
{
	if(IsValidDynamicPickup(HouseGaragePickup[house])) DestroyDynamicPickup(HouseGaragePickup[house]);
	if(IsValidDynamic3DTextLabel(HouseGarage3DText[house])) DestroyDynamic3DTextLabel(HouseGarage3DText[house]);
	if(HouseInfo[house][hGarage])
	{
		HouseGaragePickup[house] = CreateDynamicPickup(19133, 0, HouseInfo[house][hGarage_X], HouseInfo[house][hGarage_Y], HouseInfo[house][hGarage_Z], 0, 0, -1, 25.0);
		f(str_1, sizeof(str_1), "{FFFFFF}Гараж ( %i )\nВойти: {f4e451}ALT{FFFFFF}\nЗаехать: {f4e451}H", house);
		HouseGarage3DText[house] = CreateDynamic3DTextLabel(str_1, -1, HouseInfo[house][hGarage_X], HouseInfo[house][hGarage_Y], HouseInfo[house][hGarage_Z], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	}
	return 1;
}
stock UpdateHouse(house, save = 1)
{
	if(IsValidDynamicMapIcon(HouseIcon[house])) DestroyDynamicMapIcon(HouseIcon[house]);
	if(GetString(HouseInfo[house][hOwner], "The State"))
	{
		if(HouseInfo[house][hLevel] == 10) f(str_2, sizeof(str_2), "%i AZ Coins", HouseInfo[house][hCost]);
	    else f(str_2, sizeof(str_2), "$%i", HouseInfo[house][hCost]);
		f(str_1, sizeof(str_1), "{FF9900}*** Дом продается ***\n\n{FFFFFF}Номер дома: {AFAFAF}%i\n{FFFFFF}Класс дома: {AFAFAF}%i\n{FFFFFF}Стоимость: {AFAFAF}%s\n{FFFFFF}Гараж: {FFFFFF}%s", house, HouseInfo[house][hKlass], str_2, HouseInfo[house][hGarage] ? ("[{27c627} ЕСТЬ {FFFFFF}]") : ("[{fa736c} НЕТ {FFFFFF}]"));
		HouseIcon[house] = CreateDynamicMapIcon(HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z], 31, 0);
	}
	else
	{
		f(str_1, sizeof(str_1), "{FF9900}*** Дом занят ***\n{FFFF00}%s\n\n{FFFFFF}Номер дома: {AFAFAF}%i\n{FFFFFF}Класс дома: {AFAFAF}%i\n{FFFFFF}Дверь: %s\n{FFFFFF}Гараж: {FFFFFF}%s", HouseInfo[house][hDescription], house, HouseInfo[house][hKlass], !HouseInfo[house][hLock] ? ("{3D9829}Открыта{FFFFFF}") : ("{C22323}Закрыта{FFFFFF}"), HouseInfo[house][hGarage] ? ("[{27c627} ЕСТЬ {FFFFFF}]") : ("[{fa736c} НЕТ {FFFFFF}]"));
		HouseIcon[house] = CreateDynamicMapIcon(HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z], 32, 0);
	}
	UpdateDynamic3DTextLabelText(House3DText[house], -1, str_1);
	if(save) SaveHouse(house);
	return 1;
}
stock DestroyAllTextDraws(playerid)
{
	DestroyDeathTextDraw(playerid);
	for(new i; i < 6; i ++) DestroyPlayerTD(playerid, HInfoDraw[playerid][i]);
	DestroyPlayerTD(playerid, PlayerCarHPDraw[playerid]);
	DestroyPlayerTD(playerid, InfoText[playerid]);
	DestroyPlayerTD(playerid, TaxiDraw[playerid]);
	DestroyPlayerTD(playerid, ActionText[playerid]);
	DestroyPlayerTD(playerid, ActionBand[playerid]);

	DestroyPlayerTD(playerid, PlayerFuelBar[playerid]);
	DestroyPlayerTD(playerid, KindFuelDraw[playerid]);
	DestroyPlayerTD(playerid, FuelCountDraw[playerid]);
	DestroyPlayerTD(playerid, FuelCostDraw[playerid]);
	DestroyPlayerTD(playerid, PTarget[playerid][0]);
	DestroyPlayerTD(playerid, MilageDraw[playerid]);
	return 1;
}
stock CreateAllTextDraws(playerid)
{
	DestroyAllTextDraws(playerid);

	PTarget[playerid][0] = CreatePlayerTextDraw(playerid, 321.999939, 11.199998, "Invalid Player (-1)");
	PlayerTextDrawLetterSize(playerid, PTarget[playerid][0], 0.136997, 0.687404);
	PlayerTextDrawTextSize(playerid, PTarget[playerid][0], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, PTarget[playerid][0], 2);
	PlayerTextDrawColor(playerid, PTarget[playerid][0], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PTarget[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, PTarget[playerid][0], 0x80808080);
	PlayerTextDrawSetShadow(playerid, PTarget[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTarget[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTarget[playerid][0], 0x000000FF);
	PlayerTextDrawFont(playerid, PTarget[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, PTarget[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, PTarget[playerid][0], 0);

	PTarget[playerid][1] = CreatePlayerTextDraw(playerid, 322.333710, 23.229647, "100.00");
	PlayerTextDrawLetterSize(playerid, PTarget[playerid][1], 0.097666, 0.596148);
	PlayerTextDrawTextSize(playerid, PTarget[playerid][1], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, PTarget[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTarget[playerid][1], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PTarget[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, PTarget[playerid][1], 0x80808080);
	PlayerTextDrawSetShadow(playerid, PTarget[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTarget[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTarget[playerid][1], 0x000000FF);
	PlayerTextDrawFont(playerid, PTarget[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PTarget[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, PTarget[playerid][1], 0);

	PTarget[playerid][2] = CreatePlayerTextDraw(playerid, 322.333710, 29.207420, "100.00");
	PlayerTextDrawLetterSize(playerid, PTarget[playerid][2], 0.097666, 0.596148);
	PlayerTextDrawTextSize(playerid, PTarget[playerid][2], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, PTarget[playerid][2], 2);
	PlayerTextDrawColor(playerid, PTarget[playerid][2], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, PTarget[playerid][2], 0);
	PlayerTextDrawBoxColor(playerid, PTarget[playerid][2], 0x80808080);
	PlayerTextDrawSetShadow(playerid, PTarget[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTarget[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PTarget[playerid][2], 0x000000FF);
	PlayerTextDrawFont(playerid, PTarget[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, PTarget[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, PTarget[playerid][2], 0);

	InfoText[playerid] = CreatePlayerTextDraw(playerid, 400,300,"-");
	PlayerTextDrawBackgroundColor(playerid, InfoText[playerid],0x000000FF);
	PlayerTextDrawFont(playerid, InfoText[playerid],2);
	PlayerTextDrawLetterSize(playerid, InfoText[playerid],0.42,1.1);
	PlayerTextDrawColor(playerid, InfoText[playerid],-1);
	PlayerTextDrawSetOutline(playerid, InfoText[playerid],1);
	PlayerTextDrawSetProportional(playerid, InfoText[playerid],1);
	PlayerTextDrawSetShadow(playerid, InfoText[playerid],1);

	TaxiDraw[playerid] = CreatePlayerTextDraw(playerid,574.000000, 205.000000, "0");
	PlayerTextDrawBackgroundColor(playerid,TaxiDraw[playerid], 255);
	PlayerTextDrawFont(playerid,TaxiDraw[playerid], 2);
	PlayerTextDrawLetterSize(playerid,TaxiDraw[playerid], 0.229998, 1.699998);
	PlayerTextDrawColor(playerid,TaxiDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid,TaxiDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid,TaxiDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid,TaxiDraw[playerid], 1);
	PlayerTextDrawSetSelectable(playerid,TaxiDraw[playerid], 0);

	ActionText[playerid] = CreatePlayerTextDraw(playerid, 325.000000, 83.000000, "PRESS ~r~ENTER");
	PlayerTextDrawAlignment(playerid, ActionText[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, ActionText[playerid], 255);
	PlayerTextDrawFont(playerid, ActionText[playerid], 2);
	PlayerTextDrawLetterSize(playerid, ActionText[playerid], 0.909999, 2.599999);
	PlayerTextDrawColor(playerid, ActionText[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionText[playerid], 1);
	PlayerTextDrawSetProportional(playerid, ActionText[playerid], 1);

	ActionBand[playerid] = CreatePlayerTextDraw(playerid, 205.000000, 112.000000, "Band");
	PlayerTextDrawBackgroundColor(playerid, ActionBand[playerid], 255);
	PlayerTextDrawFont(playerid, ActionBand[playerid], 1);
	PlayerTextDrawLetterSize(playerid, ActionBand[playerid], -0.000000, 0.899999);
	PlayerTextDrawColor(playerid, ActionBand[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionBand[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ActionBand[playerid], 1);
	PlayerTextDrawSetShadow(playerid, ActionBand[playerid], 1);
	PlayerTextDrawUseBox(playerid, ActionBand[playerid], 1);
	PlayerTextDrawBoxColor(playerid, ActionBand[playerid], 0xFF990055);
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], 201.000000, 0.000000);

	PlayerFuelBar[playerid] = CreatePlayerTextDraw(playerid, 245.966599, 187.818604, "Box");
	PlayerTextDrawLetterSize(playerid, PlayerFuelBar[playerid], 0.000000, -0.235900);
	PlayerTextDrawTextSize(playerid, PlayerFuelBar[playerid], 242.966599, 0.000000);
	PlayerTextDrawAlignment(playerid, PlayerFuelBar[playerid], 1);
	PlayerTextDrawColor(playerid, PlayerFuelBar[playerid], 0x808080FF);
	PlayerTextDrawUseBox(playerid, PlayerFuelBar[playerid], 1);
	PlayerTextDrawBoxColor(playerid, PlayerFuelBar[playerid], 0xADD8E6FF);
	PlayerTextDrawSetShadow(playerid, PlayerFuelBar[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PlayerFuelBar[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFuelBar[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, PlayerFuelBar[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PlayerFuelBar[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerFuelBar[playerid], 0);

	KindFuelDraw[playerid] = CreatePlayerTextDraw(playerid, 301.766205, 218.244400, "DIESEL");
	PlayerTextDrawLetterSize(playerid, KindFuelDraw[playerid], 0.400000, 1.600000);
	PlayerTextDrawTextSize(playerid, KindFuelDraw[playerid], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, KindFuelDraw[playerid], 1);
	PlayerTextDrawColor(playerid, KindFuelDraw[playerid], 0xA52A2AFF);
	PlayerTextDrawUseBox(playerid, KindFuelDraw[playerid], 0);
	PlayerTextDrawBoxColor(playerid, KindFuelDraw[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, KindFuelDraw[playerid], 0);
	PlayerTextDrawSetOutline(playerid, KindFuelDraw[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, KindFuelDraw[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, KindFuelDraw[playerid], 1);
	PlayerTextDrawSetProportional(playerid, KindFuelDraw[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, KindFuelDraw[playerid], 0);

	FuelCostDraw[playerid] = CreatePlayerTextDraw(playerid, 320.966187, 199.348099, "$0");
	PlayerTextDrawLetterSize(playerid, FuelCostDraw[playerid], 0.281599, 1.346899);
	PlayerTextDrawTextSize(playerid, FuelCostDraw[playerid], 10.100000, 30.100000);
	PlayerTextDrawAlignment(playerid, FuelCostDraw[playerid], 2);
	PlayerTextDrawColor(playerid, FuelCostDraw[playerid], 0x141414FF);
	PlayerTextDrawUseBox(playerid, FuelCostDraw[playerid], 0);
	PlayerTextDrawBoxColor(playerid, FuelCostDraw[playerid], 0x80808080);
	PlayerTextDrawSetShadow(playerid, FuelCostDraw[playerid], 0);
	PlayerTextDrawSetOutline(playerid, FuelCostDraw[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, FuelCostDraw[playerid], 0x000000FF);
	PlayerTextDrawFont(playerid, FuelCostDraw[playerid], 1);
	PlayerTextDrawSetProportional(playerid, FuelCostDraw[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, FuelCostDraw[playerid], 1);

	HInfoDraw[playerid][0] = CreatePlayerTextDraw(playerid, 598.000000, 169.000000, "HOUSE 1");
	PlayerTextDrawAlignment(playerid, HInfoDraw[playerid][0], 3);
	PlayerTextDrawBackgroundColor(playerid, HInfoDraw[playerid][0], 255);
	PlayerTextDrawFont(playerid, HInfoDraw[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid, HInfoDraw[playerid][0], 0.569998, 1.899999);
	PlayerTextDrawColor(playerid, HInfoDraw[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, HInfoDraw[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, HInfoDraw[playerid][0], 1);

	HInfoDraw[playerid][1] = CreatePlayerTextDraw(playerid, 499.000000, 194.000000, "Owner~n~~g~Jack_Alliance");
	PlayerTextDrawAlignment(playerid, HInfoDraw[playerid][1], 2);
	PlayerTextDrawBackgroundColor(playerid, HInfoDraw[playerid][1], 255);
	PlayerTextDrawFont(playerid, HInfoDraw[playerid][1], 3);
	PlayerTextDrawLetterSize(playerid, HInfoDraw[playerid][1], 0.509999, 1.0);
	PlayerTextDrawColor(playerid, HInfoDraw[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, HInfoDraw[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, HInfoDraw[playerid][1], 1);

	HInfoDraw[playerid][2] = CreatePlayerTextDraw(playerid, 403.000000, 229.000000, "LEVEL: ~g~5");
	PlayerTextDrawBackgroundColor(playerid, HInfoDraw[playerid][2], 255);
	PlayerTextDrawFont(playerid, HInfoDraw[playerid][2], 3);
	PlayerTextDrawLetterSize(playerid, HInfoDraw[playerid][2], 0.709999, 1.399999);
	PlayerTextDrawColor(playerid, HInfoDraw[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, HInfoDraw[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, HInfoDraw[playerid][2], 1);

	HInfoDraw[playerid][3] = CreatePlayerTextDraw(playerid, 403.000000, 248.000000, "PRICE: ~g~1000000");
	PlayerTextDrawBackgroundColor(playerid, HInfoDraw[playerid][3], 255);
	PlayerTextDrawFont(playerid, HInfoDraw[playerid][3], 3);
	PlayerTextDrawLetterSize(playerid, HInfoDraw[playerid][3], 0.709999, 1.399999);
	PlayerTextDrawColor(playerid, HInfoDraw[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, HInfoDraw[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, HInfoDraw[playerid][3], 1);

	HInfoDraw[playerid][4] = CreatePlayerTextDraw(playerid, 403.000000, 267.000000, "ROOMS: ~g~4");
	PlayerTextDrawBackgroundColor(playerid, HInfoDraw[playerid][4], 255);
	PlayerTextDrawFont(playerid, HInfoDraw[playerid][4], 3);
	PlayerTextDrawLetterSize(playerid, HInfoDraw[playerid][4], 0.709999, 1.399999);
	PlayerTextDrawColor(playerid, HInfoDraw[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, HInfoDraw[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, HInfoDraw[playerid][4], 1);

	HInfoDraw[playerid][5] = CreatePlayerTextDraw(playerid, 403.000000, 286.000000, "STATUS: ~r~Open");
	PlayerTextDrawBackgroundColor(playerid, HInfoDraw[playerid][5], 255);
	PlayerTextDrawFont(playerid, HInfoDraw[playerid][5], 3);
	PlayerTextDrawLetterSize(playerid, HInfoDraw[playerid][5], 0.709999, 1.399999);
	PlayerTextDrawColor(playerid, HInfoDraw[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, HInfoDraw[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, HInfoDraw[playerid][5], 1);
	CreateDeathTextDraw(playerid);
	return 1;
}
stock ShowPlayerAZS(playerid)
{
    str_1[0] = EOS;
	for(new i;i < sizeof(GoFuel);i ++)
	{
		new biz = GoFuel[i][gfBizzID];
		f(str_2, 100, "{FFFFFF}%s {B83434}%i/50000 л. {9ACD32}$%i\n", GoFuel[i][gfName], BizInfo[biz][bProducts], BizInfo[biz][bMoney]);
		strcat(str_1, str_2);
	}
	SPD(playerid, 236, 2, !"Выберите АЗС", str_1, !"Выбор", !"Отмена");
	return 1;
}
stock ShowPlayerGS(playerid)
{
	str_1[0] = EOS;
	for(new i;i < sizeof(GoGunShop);i ++)
	{
		new biz = GoGunShop[i][gsBizzID];
		f(str_2, 100, "{FFFFFF}%s {B83434}%i/50000 мат. Баланс бизнеса: {9ACD32}$%i\n", GoGunShop[i][gsName], BizInfo[biz][bProducts], BizInfo[biz][bMoney]);
		strcat(str_1, str_2);
	}
	return SPD(playerid, 258, 2, !"Выберите GunShop", str_1, !"Выбор", !"Отмена");
}
stock Float:fmax(Float:v1, Float:v2) return v1 > v2?v1:v2;
stock Float:fmin(Float:v1, Float:v2) return v1 < v2?v1:v2;
stock Float:jfloatsub(Float:value1, Float:value2)
{
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}
stock ShowPlayerActionText(playerid, text[])
{
	PlayerTextDrawSetString(playerid, ActionText[playerid], text);
	PlayerTextDrawShow(playerid, ActionText[playerid]);
	return 1;
}
stock HidePlayerActionText(playerid)
{
	PlayerTextDrawHide(playerid, ActionText[playerid]);
	return 1;
}
stock ShowPlayerActionBand(playerid, status, endstatus)
{
	new Float:part = 100.0 / float(endstatus) * float(status);
	new Float:length = 201.0 + part * 2.42;
	if(length > 443.0) length = 443.0;
	else if(length < 201.0) length = 201.0;
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], length, 0.0);
	PlayerTextDrawShow(playerid, ActionBand[playerid]);
	TextDrawShowForPlayer(playerid, BandDrawBG[0]);
	TextDrawShowForPlayer(playerid, BandDrawBG[1]);
	return 1;
}
stock HidePlayerActionBand(playerid)
{
	PlayerTextDrawHide(playerid, ActionBand[playerid]);
	TextDrawHideForPlayer(playerid, BandDrawBG[0]);
	TextDrawHideForPlayer(playerid, BandDrawBG[1]);
	return 1;
}
stock ResetDoorsStatus(carid)
{
	new status;
	new number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) status = false;
	else status = CarInfo[number][cLock];
	SetDoorsStatus(carid, status);
	return status;
}
stock Isameria(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
		case TEAM_MERIALS: return 1;
		default: return 0;
	}
	return 0;
}
stock IsAMedic(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
		case TEAM_MEDICSF: return 1;
		case TEAM_MEDICLS: return 1;
		case TEAM_MEDICLV: return 1;
		default: return 0;
	}
	return 0;
}
stock VehicleSeatState(seat)
{
	new seatstate;
	switch(seat)
	{
	    case 0: seatstate = 2;
	    default: seatstate = PLAYER_STATE_PASSENGER;
	}
	return seatstate;
}
stock GetVehicleSeat(vehicleid, seatid)
{
	new playerid = VehicleSeat[vehicleid][seatid];
	if(IsPlayerInVehicle(playerid, vehicleid))
	{
	    if(GetPlayerState(playerid) == VehicleSeatState(seatid)) return playerid;
	}
	VehicleSeat[vehicleid][seatid] = INVALID_PLAYER_ID;
	return VehicleSeat[vehicleid][seatid];
}
stock GetSkinOfPlayer(playerid)
{
	new skin, org = GetTeamID(playerid), rank = PI[playerid][pRank];
	if(!org) skin = PI[playerid][pSkin];
	else
	{
	    if(TeamDuty{playerid}) skin = (PI[playerid][pSex] == 2) ? GOrgSkins[org][rank] : MOrgSkins[org][rank];
		else skin = PI[playerid][pSkin];
		if(IsAtGang(playerid) || IsAtMafia(playerid) )skin = (PI[playerid][pSex] == 2) ? GOrgSkins[org][rank] : MOrgSkins[org][rank];
	}
	return skin;
}
stock SettingSpawn(playerid)
{
	//SCM(playerid, -1, !"SettingSpawn");
    TogglePlayerControllable(playerid, true);
	new skin = GetSkinOfPlayer(playerid);

	//if(TimeHealDied[playerid]) return SetSpawnInfo(playerid, 255, GetSkinOfPlayer(playerid), DiedPos[playerid][0], DiedPos[playerid][1], DiedPos[playerid][2]-0.2, 180.0, 0, 0, 0, 0, 0, 0);
   	if(DmZonePlayed[playerid] == true) return DmZoneSendToPlace(playerid);
	if(PI[playerid][pHospital] > 0)
	{
	    if(PI[playerid][pHealth] > 5) J_SetPlayerHealth(playerid,PI[playerid][pHealth]);
   		else J_SetPlayerHealth(playerid, 20);
	}
	else
	{
	    if(PI[playerid][pLevel] > 1)
	    {
		    PI[playerid][pHospital] = 1;
		    UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
		    J_SetPlayerHealth(playerid, 20);
		}
	}
 	if(PI[playerid][pJailTime] > 0)
	{
		new rand = random(2);
		if(PI[playerid][pPrison]==1)
		{
			SetPlayerVirtualWorld(playerid, 11);
			SetSpawnInfoEx(playerid, skin, JailPos[rand][0], JailPos[rand][1], JailPos[rand][2], 180.0);
		}
		else if(PI[playerid][pPrison]==2)
		{
			SetPlayerVirtualWorld(playerid, 12);
			SetSpawnInfoEx(playerid, skin, JailPos[rand][0], JailPos[rand][1], JailPos[rand][2], 180.0);
		}
		else if(PI[playerid][pPrison]==3)
		{
			SetPlayerVirtualWorld(playerid, 13);
			SetSpawnInfoEx(playerid, skin, JailPos[2][0], JailPos[2][1], JailPos[2][2], 180.0);
		}
		else
		{
		    SetPlayerVirtualWorld(playerid, 11);
			SetSpawnInfoEx(playerid, skin, JailPos[rand][0], JailPos[rand][1], JailPos[rand][2], 180.0);
		}
		SetPlayerInterior(playerid, 6);
		J_SetPlayerHealth(playerid,100);
		return 1;
	}
	else if(PI[playerid][pDemorgan] > 0)
	{
		SetSpawnInfoEx(playerid, skin, -801.45, 2831.39, 1501.99, 180.0);
		J_SetPlayerHealth(playerid, 100);
		SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid, 6);
		SetPlayerSkinEx(playerid, 268);
		return 1;
	}
 	else if(PI[playerid][pHeal] > 0 && !IsAtGang(playerid))
	{
		if(!IsAArmy(playerid))
	    {
			if(PI[playerid][pLevel] < 20)
			{
		        switch(random(2))
				{
					case 0: SetSpawnInfoEx(playerid, skin, -1753.7180, -2017.6670, 1500.7856,0.000);
					case 1: SetSpawnInfoEx(playerid, skin, -1791.3062, -2018.2821, 1500.7856,0.000);
				}
			}
			else SetSpawnInfoEx(playerid, skin, -1354.0164, 8.2145, 1601.0859, 290.6552);
			switch(PI[playerid][pHospCity])
			{
			    case 1:
			    {
			        SetPlayerVirtualWorld(playerid, 1);
			    	SetPlayerInterior(playerid, 2);
			    }
			    case 2:
			    {
			        SetPlayerVirtualWorld(playerid, 2);
			    	SetPlayerInterior(playerid, 3);
			    }
			    default:
				{
				 	SetPlayerVirtualWorld(playerid, 3);
			    	SetPlayerInterior(playerid, 3);
				}
			}
        }
		else
		{
			if(GetTeamID(playerid) == TEAM_ARMY) SetSpawnInfoEx(playerid, skin, 471.80, 881.74, 1500.96, 180.000);
			if(GetTeamID(playerid) == TEAM_ARMYLV) SetSpawnInfoEx(playerid, skin, 549.5598,1466.0801,1900.7980,353.8267);
			if(GetTeamID(playerid) == TEAM_ARMYSF) SetSpawnInfoEx(playerid, skin, -1609.6104,-113.5421,1501.0859,179.3103);
			SetPlayerVirtualWorld(playerid, 1);
  			SetPlayerInterior(playerid, 2);
			return 1;
		}
	    J_SetPlayerHealth(playerid, 50);
	    if(startlomka[playerid] == 1)
	    {
	    	PI[playerid][pOldRepl]=0;
	    	UpdatePlayerDataInt(playerid, "OldRepl", 0);
	    }
	    return 1;
	}
	else//спавн дома
	{
	    if(PI[playerid][pDCTime] == 0)
		{
			switch(random(4))
			{
				case 0: SetSpawnInfoEx(playerid, skin, 1765.5046, -1892.7008, 13.5611, 175.9128);
				case 1: SetSpawnInfoEx(playerid, skin, 1765.3536, -1902.9863, 13.5661, 355.7444);
				case 2: SetSpawnInfoEx(playerid, skin, 1758.8562, -1903.0684, 13.5646, 357.3111);
				case 3: SetSpawnInfoEx(playerid, skin, 1758.8551, -1892.5815, 13.5559, 177.4561);
			}
		}
		else if(PI[playerid][pDCTime] == 3)
		{
			if(PI[playerid][pFamilyMember] >= 0)
			{
				if(FamilyInfo[PI[playerid][pFamilyMember]][famHouse])
				{
				    SetSpawnInfoEx(playerid, skin, -1496.9866, 2718.3179, 1500.9674, 46.0202);
				    SetPlayerInterior(playerid, 1);
				    SetPlayerVirtualWorld(playerid, (pFamHouse+50));
					return 1;
				}
			}
		}
		else if(PI[playerid][pDCTime] == 4 && PI[playerid][pVIP] >= 5)
		{
		    SetSpawnInfoEx(playerid, skin, PI[playerid][pPos_X],PI[playerid][pPos_Y],PI[playerid][pPos_Z],PI[playerid][pPos_A]);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			return 1;
		}
		else if(PI[playerid][pDCTime] == 1 && GetPlayerHouse(playerid) != -1)
		{
			new house = GetPlayerHouse(playerid);
			if(GetString(HouseInfo[house][hOwner],PN(playerid)))
			{
			    HouseEntered[playerid] = house;
				SetSpawnInfoEx(playerid, skin, HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z],0.0);
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				SetPlayerVirtualWorld(playerid,house+50);
				return 1;
			}
			else
			{
				new s = GetHouseStyle(house);
				for(new i;i < HouseRooms[s];i ++)
				{
					if(GetString(HRoomOwner[house][i],PN(playerid)))
					{
					    HouseEntered[playerid] = house;
						SetSpawnInfoEx(playerid, skin, HouseInfo[house][hExit_X],HouseInfo[house][hExit_Y],HouseInfo[house][hExit_Z],0.0);
						SetPlayerInterior(playerid,HouseInfo[house][hInt]);
						SetPlayerVirtualWorld(playerid,house+50);
						return 1;
					}
				}
			}
		}
		else if(PI[playerid][pDCTime] == 2 && PI[playerid][pMember])
		{
			SetPlayerFacingAngle(playerid,SpawnInfo[PI[playerid][pMember]][3]);
		    SetPlayerInterior(playerid,SpawnIntWorld[PI[playerid][pMember]][0]);
		    SetPlayerVirtualWorld(playerid,SpawnIntWorld[PI[playerid][pMember]][1]);
			SetSpawnInfoEx(playerid, skin, SpawnInfo[PI[playerid][pMember]][0], SpawnInfo[PI[playerid][pMember]][1], SpawnInfo[PI[playerid][pMember]][2], SpawnInfo[PI[playerid][pMember]][3]);
			return 1;
		}
		else if(PI[playerid][pDCTime] == 3)
		{
			if(PI[playerid][pFamilyMember] >= 0)
			{
				if(FamilyInfo[PI[playerid][pFamilyMember]][famHouse])
				{
				    SetSpawnInfoEx(playerid, skin, -1496.9866, 2718.3179, 1500.9674, 46.0202);
				    SetPlayerInterior(playerid, 1);
				    SetPlayerVirtualWorld(playerid, (pFamHouse+50));
					return 1;
				}
			}
		}
	}
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	PI[playerid][pDCTime] = 0;
	UpdatePlayerDataInt(playerid, "DCTime", 0);
	return 1;
}
stock CreateDeathTextDraw(playerid)
{
    if(PlayerText:DeathDraw[playerid] != PlayerText:INVALID_TEXT_DRAW) DestroyPlayerTD(playerid, DeathDraw[playerid]);
    DeathDraw[playerid] = CreatePlayerTextDraw(playerid,300,0,"New TextDraw");
    PlayerTextDrawUseBox(playerid, DeathDraw[playerid],1);
    PlayerTextDrawAlignment(playerid, DeathDraw[playerid],2);
    PlayerTextDrawSetOutline(playerid, DeathDraw[playerid],1);
	PlayerTextDrawLetterSize(playerid, DeathDraw[playerid],0.0,60.0);
	PlayerTextDrawSetProportional(playerid, DeathDraw[playerid],0);
	PlayerTextDrawTextSize(playerid, DeathDraw[playerid],-180.0,700.0);
	PlayerTextDrawBoxColor(playerid, DeathDraw[playerid],0x00000066);
	PlayerTextDrawFont(playerid, DeathDraw[playerid],3);
	return 1;
}
stock UpdateCarInfo(vehicleid)
{
	new number = GetVehicleID(vehicleid);
    if(IsAOwnableCar(number))
	{
	    if(IsASellCar(number)) f(str_2, sizeof(str_2), "{FF9900} Транспорт продается {FFFFFF}\n\nМодель: {AFAFAF}%s (%i){FFFFFF}\nНомер: {AFAFAF}SP %i{FFFFFF}\nСтоимость: {AFAFAF}$%i", GetNameCar(GetVehicleModelEx(vehicleid)),GetVehicleModelEx(vehicleid),vehicleid,CarInfo[number][cCost]);
	    else f(str_2, 10, " ");
	    if(CarText[number] != NONE_3D_TEXT) UpdateDynamic3DTextLabelText(CarText[number],-1,str_2);
		f(str_2, 30, "{000000}%s", CarInfo[number][cNumber]);
		SetVehicleNumberPlate(vehicleid, str_2);
        if(CarInfo[number][cModel] == 487) f(str_2, sizeof(str_2), "Открыть багажник:\n/trunk %i", vehicleid);
		if(CarTextTrunk[number] != NONE_3D_TEXT) UpdateDynamic3DTextLabelText(CarTextTrunk[number], 0xFFFFFF34, str_2);
	}
	return 1;
}
stock DestroyDeathTextDraw(playerid)
{
	if(PlayerText:DeathDraw[playerid] != PlayerText:INVALID_TEXT_DRAW)
	{
	    PlayerTextDrawHide(playerid,DeathDraw[playerid]);
		DestroyPlayerTD(playerid, DeathDraw[playerid]);
		DeathDraw[playerid] = PlayerText:INVALID_TEXT_DRAW;
		return 1;
	}
	return 0;
}
stock ClearChatForPlayer(playerid)
{
	for(new i; i < 20; i ++)SCM(playerid, -1, !" ");
	return 1;
}
stock CheckTheftCar(playerid)
{
	if(TheftCarID[playerid] != 0)
	{
	    TheftCarID[playerid] = 0;
	    TheftKey[playerid] = 0;
	    TheftTime[playerid] = 0;
	    TheftCount[playerid] = 0;
	    HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
    }
    return 1;
}
stock CheckBreakCuff(playerid)
{
	if(pTemp[playerid][BreakKey] != 0)
	{
	    pTemp[playerid][BreakKey] = 0;
	    pTemp[playerid][BreakTime] = 0;
	    pTemp[playerid][BreakCount] = 0;
	    HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
    }
    return 1;
}
stock CheckMiner(playerid)
{
    for(new i; i < sizeof(MinPos); i ++)TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	TogglePlayerDynamicCP(playerid, MinerDownCP, false);
	RemovePlayerAttachedObject(playerid, 7);
    return 1;
}
stock CheckPorter(playerid)
{
	TogglePlayerDynamicCP(playerid, PorterDownCP, false);
	RemovePlayerAttachedObject(playerid, 7);
    return 1;
}
stock IsARcCar(carid)
{
	switch(GetVehicleModel(carid))
	{
		case Item_Radio_Vehicle: return 1;
	}
	return 0;
}
stock IsABoat(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
stock IsAVelik(carid) return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
stock IsAPlane(carid) return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
stock IsABike(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);
stock Isamoped(carid) return (GetVehicleState(carid) == VEHICLE_STATE_MOPED);
stock IsACar(carid) return (GetVehicleState(carid) == VEHICLE_STATE_CAR);
stock DestroyVehicleEx(carid)
{
 	if(LightsObject[carid][0] != -1 || LightsObject[carid][1] != -1)
  	{
		DestroyDynamicObject(LightsObject[carid][0]);
		DestroyDynamicObject(LightsObject[carid][1]);
		LightsObject[carid][0] = -1;
		LightsObject[carid][1] = -1;
		SignalTick[carid][0] = 0;
		SignalTick[carid][1] = -1;
		Signal[carid] = 0;
	}
	for(new i; i < 6; i++)
	{
		if(ObjectCarEdit[carid][i])
		{
			DestroyDynamicObject(ObjectCarEdit[carid][i]);
			ObjectCarEdit[carid][i] = 0;
		}
	}
	VehicleState[carid] = 0;
	vTemp[carid][vModel] = 0;
	vTemp[carid][vPos_X] = 0;
	vTemp[carid][vPos_Y] = 0;
	vTemp[carid][vPos_Z] = 0;
	vTemp[carid][vPos_A] = 0;
	vTemp[carid][vLights] = false;
	vTemp[carid][vEngine] = false;
	vTemp[carid][vJob] = 0;
	vTemp[carid][vTeam] = 0;
	vTemp[carid][vRank] = 0;
	vTemp[carid][vAntiRepair] = 0;
	vTemp[carid][vLock] = 0;
	vTemp[carid][vPlayer] = 0;
	vTemp[carid][vFilled] = 0;
	TwinTurbo[carid][Engine] = false;
	TwinTurbo[carid][cStatus] = false;
	DestroyVehicle(carid);
	return 1;
}
stock GetFamilyID(id)
{
	new fid = -1;
	foreach(new i: OWNABLEFAMILYS) 
	{
		if(FamilyInfo[i][famID] == id)
		{
			fid = i;
			break;
		}
	}
	return fid;
}
stock GetVehicleID(carid)
{
	new number = INVALID_VEHICLE_ID;
	foreach(new i: OWNABLECARS)
	{
		if(OwnableCar[i] == carid)
		{
			number = i;
			break;
		}
	}
	return number;
}
stock IsAOwnableCar(number)
{
	if(number == INVALID_VEHICLE_ID) return 0;
	if(Iter_Contains(OWNABLECARS, number)) return 1;
    return 0;
}
stock IsASellCar(number)
{
	if(number == INVALID_VEHICLE_ID) return 0;
    if(IsAOwnableCar(number) && GetString(CarInfo[number][cOwner], "The State")) return 1;
	return 0;
}
stock IsPlayerHaveCar(playerid, number)
{
	if(number == INVALID_VEHICLE_ID) return 0;
	if(IsAOwnableCar(number)) if(GetString(CarInfo[number][cKeyer], PN(playerid)) || GetString(CarInfo[number][cOwner], PN(playerid))) return 1;
	return 0;
}
stock IsPlayerRegCar(playerid, number)
{
    if(IsAOwnableCar(number) && GetString(CarInfo[number][cOwner], PN(playerid))) return 1;
	return 0;
}
stock GetNumberCars(playerid,&number)
{
	new cars;
	foreach(new i: OWNABLECARS) if(IsPlayerHaveCar(playerid, i)) cars ++;
	number = cars;
}
stock SetCarOwner(carid,const name[]) return SetString(CarInfo[GetVehicleID(carid)][cOwner],name);
stock SetCarKeyer(carid,const name[]) return SetString(CarInfo[GetVehicleID(carid)][cKeyer],name);

stock GetString(const param1[], const param2[], log = 0)
{
	if(!log) return !strcmp(param1, param2, false);
	else return !strcmp(param1, param2, true);
}
stock IsATaxi(carid) return (vTemp[carid][vJob] == 5);
stock CheckEnterCar(playerid, vehicleid)
{
	if(GetPlayerVirtualWorld(playerid)!=1228)
	{
		if(vTemp[vehicleid][vJob] != 0)
		{
		    new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
			{
		 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
		 		ExitCar(playerid);
		 		return 1;
			}
			if(PI[playerid][pJob] != vTemp[vehicleid][vJob])
			{
			    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этого транспорта!");
				ExitCar(playerid);
			}
			else if(!InJob[playerid] && vTemp[vehicleid][vJob] == JOB_COLLECTOR)
			{
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Ошибка", !"{FFFFFF}Сначала переоденьтесь", !"Ок", !"");
				ExitCar(playerid);
			}
		}
		else if(vTemp[vehicleid][vTeam] != 0)
		{
			if(!TeamDuty{playerid} && vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
			{
		        SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Служебный транспорт доступен только во время работы!");
	   			ExitCar(playerid);
				return 0;
			}
			if(GetTeamID(playerid) != vTemp[vehicleid][vTeam] && (vTemp[vehicleid][vTeam] != TEAM_LICENSERS || CarTest[playerid] == -1 && MotoTest[playerid] == -1))
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этого транспорта!");
				ExitCar(playerid);
			}
			else
			{
			    if(PI[playerid][pRank] < vTemp[vehicleid][vRank] && (vTemp[vehicleid][vTeam] != TEAM_LICENSERS || CarTest[playerid] == -1 && MotoTest[playerid] == -1))
			    {
			        SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Ваш ранг недостаточно высок!");
					ExitCar(playerid);
			    }
			}
		}
		else if(IsAPlane(vehicleid))
		{
		    if(CarTest[playerid] == -1 || vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
		    {
				if(!GetInvCount(playerid, Item_Fly_Lic))
				{
				    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на полеты, поэтому вы не можете водить этот транспорт!");
					ExitCar(playerid);
					return 1;
				}
			}
		}
		else if(IsABoat(vehicleid))
		{
			if(!GetInvCount(playerid, Item_Boat_Lic))
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на вождение водного транспорта, поэтому вы не можете водить на этой лодке!");
				ExitCar(playerid);
				return 1;
			}
		}
		else if(IsABike(vehicleid))
		{
            if(MotoTest[playerid] == -1 || vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
			{
				if(!GetInvCount(playerid, Item_Bike_Lic))
			    {
	   				SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на вождение мотоцикла, поэтому вы не можете водить этот транспорт!");
			    	ExitCar(playerid);
			    	return 1;
	    		}
			}
		}
		else if(!IsABike(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsAVelik(vehicleid) && !IsARcCar(vehicleid) && !Isamoped(vehicleid))
		{
			if(CarTest[playerid] == -1 || vTemp[vehicleid][vTeam] != TEAM_LICENSERS)
			{
				if(!GetInvCount(playerid, Item_Car_Lic))
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Возможно у вас нет лицензии на вождение, поэтому вы не можете водить это авто.");
					ExitCar(playerid);
					return 1;
				}
			}
		}
		else if(IsAArendCar(vehicleid))
		{
		    if(ArendInfo[GetArendCarID(vehicleid)][aID] == 578)
		    {
				if(PI[playerid][pFamilyMember] == -1)
				{
					ExitCar(playerid);
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт доступен только для членов семьи!");
				}
				if(!AcceptQuest[playerid][12])
				{
					ExitCar(playerid);
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете пользоваться этой машиной, так как у вас не принят");
					return SCM(playerid, -1, !"ежедневный квест!");
				}
			}
		}
	}
	return 1;
}
stock ExitCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))RemovePlayerFromVehicle(playerid);
	else ClearAnimations(playerid);
	return 1;
}
stock SetPlayerMoney(playerid, money)
{
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, money);
	PI[playerid][pMoney] = money;
	UpdatePlayerDataInt(playerid, "Money", PI[playerid][pMoney]);
	return true;
}
stock IsAArended(carid)
{
    if(IsAArendCar(carid) && ArendInfo[GetArendCarID(carid)][aRentID] != INVALID_PLAYER_ID) return 1;
	return 0;
}
stock CreateGate(gateid)
{
    gGate[gateid] = CreateDynamicObject(GateInfo[gateid][gObID],GateInfo[gateid][gClose_X],GateInfo[gateid][gClose_Y],GateInfo[gateid][gClose_Z],0,0,GateInfo[gateid][gClose_A],GateInfo[gateid][gWorld]);
	GateInfo[gateid][gCreated] = true;
	return 1;
}
stock CreateDoor(doorid)
{
    dDoor[doorid] = CreateDynamicObject(DoorInfo[doorid][dObID],DoorInfo[doorid][dClose_X],DoorInfo[doorid][dClose_Y],DoorInfo[doorid][dClose_Z],0,0,DoorInfo[doorid][dClose_A],DoorInfo[doorid][dWorld]);
	DoorInfo[doorid][dCreated] = true;
	SetDynamicObjectMaterial(dDoor[doorid], 2, 3440, "airportpillar", "metalic_64", 0);
    SetDynamicObjectMaterial(dDoor[doorid], 1, 4830, "airport2", "sanairtex3", 0);
    SetDynamicObjectMaterial(dDoor[doorid], 0, 3440, "airportpillar", "metalic_64", 0xFFD3D3D3);
	return 1;
}
stock SetBuyGunCamera(playerid)
{
	SetPlayerCameraPos(playerid, 295.1925, -36.7806, 1002.9);
	SetPlayerCameraLookAt(playerid, 295.1925, -39.7806, 1002.9);
	InterpolateCameraPos(playerid, 295.1925, -35.7806, 1002.9, 295.1925, -38.7, 1002.9, 1000);
	InterpolateCameraLookAt(playerid, 295.1925, -38.7, 1002.9, 295.20001221, -39.29999924, 1001.59997559, 1000, CAMERA_MOVE);
	return 1;
}
stock GetVehicleMaxSeat(vehicleid)
{
    static MaxSeats[] =
	{
		3,1,1,1,3,3,0,1,1,3,1,1,1,3,1,1,3,1,3,1,3,
		3,1,1,1,0,3,3,3,1,0,8,0,1,1,15,1,8,3,1,3,0,
		1,1,1,3,0,1,0,1,15,1,0,0,0,1,1,1,3,3,1,1,1,
		1,1,1,3,3,1,1,3,1,0,0,1,1,0,1,1,3,1,0,3,1,
		0,0,0,3,1,1,3,1,3,0,1,1,1,3,3,1,1,1,1,1,1,
		1,1,3,1,0,0,1,0,0,1,1,3,1,1,0,0,1,1,1,1,1,
		1,1,1,3,0,0,0,1,1,1,1,2,2,0,3,1,1,1,1,1,3,
		3,1,1,3,3,1,0,1,1,1,1,1,1,3,3,1,1,0,1,3,3,
		0,15,1,0,0,1,0,1,1,1,1,3,3,1,3,0,15,3,1,1,1,
		1,15,15,1,1,1,0,3,3,3,1,1,1,1,1,3,1,15,15,15,3,
		15,15
	};
	new model = GetVehicleModelEx(vehicleid) - 400;
	if(model >= 0) return MaxSeats[model];
	return -1;
}
stock SetPlayerBuyItem(playerid)
{
    new race = PI[playerid][pType];
	SetPlayerCameraPos(playerid,-398.04,2229.84,1801.91);
	SetPlayerCameraLookAt(playerid,-397.68,2230.35,1801.47);
	Buyitem[playerid] = 0;
	ClearChatForPlayer(playerid);
    switch(ItemsId[race][0])
	{
		//наушники
		case 19421: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
		//шапки
		case 19069: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
		//панамки
		case 18968: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
		//кепки
		case 18955: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
		//каски
		case 19104: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
		//береты
		case 18925: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
		//парики
		case 19519: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.8564, 2231.0369, 1801.5004,269.0000, 345.0000, 86.1028);
		//очки
		case 19011: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
		//банданы
		case 18911: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
		//шляпы
		case 18947: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
		//часы
		case 19042: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
		//портфели
		case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
		case 18970: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
        case 18910: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
	}
	PlayerTextDrawSetStringf(playerid, InfoText[playerid], "~g~Cost: ~r~$%i", ItemsCost[race][0]);
	PlayerTextDrawShow(playerid,InfoText[playerid]);
	BuyInt[playerid] = -1;
	TogglePlayerControllable(playerid, false);
	TextDrawShowForPlayer(playerid,Boxmenu0);
	TextDrawShowForPlayer(playerid,Boxmenu1);
	TextDrawShowForPlayer(playerid,Boxmenu2);
	TextDrawShowForPlayer(playerid,Boxmenu3);
	TextDrawShowForPlayer(playerid,ButtonRight);
	TextDrawShowForPlayer(playerid,ButtonCancel);
	TextDrawShowForPlayer(playerid,ButtonSelect);
	TextDrawShowForPlayer(playerid,boxaccept);
	TextDrawShowForPlayer(playerid,boxcancel);
 	SelectTextDraw(playerid, -16776961);
	return 1;
}
stock SetPlayerBuySkin(playerid, shop = 0)
{
	TogglePlayerControllable(playerid, false);
    new race = PI[playerid][pRace];
	if(shop)
	{
		GetPlayerSkin(playerid);
		ClearChatForPlayer(playerid);
		SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Для отмены нажмите {FFFFFF}Cancel");
		SPD(playerid, 0, 0, "", "\n{FFFFFF}Для отмены нажмите {FF6347}Cancel\n{FFFFFF}Чтобы купить скин нажмите {FF6347}Accept\n", "Принять", "");
	    TogglePlayerDynamicCP(playerid, Binko_CP, false);
	    SetPlayerFacingAngle(playerid,180.0);
		SetPlayerPos(playerid,199.1063, -128.3574, 1003.5152);
		SetPlayerCameraPos(playerid,199.2,-134.3,1003.5);
		SetPlayerCameraLookAt(playerid,199.1,-131.6,1003.5);

		if(PI[playerid][pSex] <= 1)
		{
		    f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",MSkinCost[0]);
			SetPlayerSkinEx(playerid,MSkins[race][0]);
		}
		else
		{
		    f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",GSkinCost[0]);
			SetPlayerSkinEx(playerid,GSkins[race][0]);
		}
		PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
		PlayerTextDrawShow(playerid,InfoText[playerid]);
	}
	else
	{
	    new team = GetTeamID(playerid);
	    new Float:X = SpawnInfo[team][0];
	    new Float:Y = SpawnInfo[team][1];
	    new Float:Z = SpawnInfo[team][2];
	    new Float:A = SpawnInfo[team][3];
	    PlayerTextDrawHide(playerid,InfoText[playerid]);
		SetPlayerPos(playerid, X, Y, Z);
	    SetPlayerFacingAngle(playerid, A);
	    ShiftCords(0, X, Y, A, 3.0);
	    SetPlayerCameraPos(playerid, X, Y, Z);
	    SetPlayerCameraLookAt(playerid, SpawnInfo[team][0], SpawnInfo[team][1], SpawnInfo[team][2]);
	    if(PI[playerid][pSex] <= 1) SetPlayerSkinEx(playerid,MBomzSkins[race][0]);
		else SetPlayerSkinEx(playerid,GBomzSkins[race][0]);
	}
	BuyInt[playerid] = -1;
	Clother[playerid] = 0;
	OldWorld[playerid] = GetPlayerVirtualWorld(playerid);
	PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	SetPlayerVirtualWorld(playerid,playerid + 5);
	TextDrawShowForPlayer(playerid,Boxmenu0);
	TextDrawShowForPlayer(playerid,Boxmenu1);
	TextDrawShowForPlayer(playerid,Boxmenu2);
	TextDrawShowForPlayer(playerid,Boxmenu3);
	TextDrawShowForPlayer(playerid,ButtonRight);
	TextDrawShowForPlayer(playerid,ButtonCancel);
	TextDrawShowForPlayer(playerid,ButtonSelect);
	TextDrawShowForPlayer(playerid,boxaccept);
	TextDrawShowForPlayer(playerid,boxcancel);
 	SelectTextDraw(playerid, -16776961);
	return 1;
}
stock addlistitem(playerid, string[], siz, const str[], list, &listitem)
{
	strcat(string, str, siz);
	DListitem[playerid]{list} = listitem;
	listitem ++;
	return 1;
}
stock ShowBankMenu(playerid)
{
	if(!PI[playerid][pBankCard]) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Вы не можете воспользоватся банком/банкоматом.{FFFFFF}\nУ вас нет банковской карты. Получить ее можно в\nбанковском отделении Las Venturas ,или у сотрудника банка!", !"Закрыть", !"");
	if(!PI[playerid][pKlogin]) return SPD(playerid, 991, DIALOG_STYLE_INPUT, !"", !"{929290}Вы должны подтвердить свой PIN-код к карточке.\nВведите свой код в ниже указаную строку.", !"Принять", !"Закрыть");
	str_1[0] = EOS;
	new
		listitem = 0,
	    isatbank = IsPlayerInRangeOfPoint(playerid, 2.5, -2683.9232, 807.4161, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2676.5600, 807.4161, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2669.0400, 807.4161, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4729, 805.8691, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4665, 799.2879, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4139, 792.5835, 1500.9094) ||

					IsPlayerInRangeOfPoint(playerid, 2.5, 495.2409,1305.6490,774.4839) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 495.2459,1307.4744,774.4839)||
					IsPlayerInRangeOfPoint(playerid, 2.5, 495.2454,1309.2797,774.4839)||
					IsPlayerInRangeOfPoint(playerid, 2.5, 495.2461,1311.0074,774.4839) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 495.2460,1312.8225,774.4839) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 951.8005,2458.6746,1601.9771) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 954.9710,2463.5288,1601.9771) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 946.6893,2456.3723,1601.9771);

    for(new i; i < 19; i++) DListitem[playerid]{i} = -1;
	addlistitem(playerid, str_1, sizeof(str_1), !"Узнать счет\n", 0, listitem);
	addlistitem(playerid, str_1, sizeof(str_1), !"Снять со счета\n", 1, listitem);
	if(isatbank)
	{
		addlistitem(playerid, str_1, sizeof(str_1), !"Пополнить счет\n", 2, listitem);
	    addlistitem(playerid, str_1, sizeof(str_1), !"Перевести деньги\n", 3, listitem);
		if(PI[playerid][pCredit]) addlistitem(playerid, str_1, sizeof(str_1), !"Погасить кредит\n", 4, listitem);
		if(PI[playerid][pRank] > 0) addlistitem(playerid, str_1, sizeof(str_1), !"Счет моей организации\n", 5, listitem);
		if(PI[playerid][pRank] >= 9 || PI[playerid][pLeader] > 0) addlistitem(playerid, str_1, sizeof(str_1), !"Снять со счета организации\n", 6, listitem);
		addlistitem(playerid, str_1, sizeof(str_1), !"{73B461}Оплатить налог на транспорт\n", 7, listitem);
	    new hour;
	    gettime(hour, _, _);
	    if(PI[playerid][pFamilyMember] >= 0)
	   	{
		    if(!(hour > 12 && hour < 20) && (!FamilyInfo[PI[playerid][pFamilyMember]][famGalka] || !FamilyInfo[PI[playerid][pFamilyMember]][famBrand]))
		    {
		        addlistitem(playerid, str_1, sizeof(str_1), !"Пополнить депозит {FCBE52}[20.00 - 12.00]\n", 8, listitem);
		        addlistitem(playerid, str_1, sizeof(str_1), !"Снять деньги с депозита {FCBE52}[20.00 - 12.00]\n", 9, listitem);
			}
			else if((FamilyInfo[PI[playerid][pFamilyMember]][famGalka] || FamilyInfo[PI[playerid][pFamilyMember]][famGalka]))
			{
		        addlistitem(playerid, str_1, sizeof(str_1), !"Пополнить депозит {FCBE52}[VIP]\n", 8, listitem);
		        addlistitem(playerid, str_1, sizeof(str_1), !"Снять деньги с депозита {FCBE52}[VIP]\n", 9, listitem);
		    }
		}
	    addlistitem(playerid, str_1, sizeof(str_1), "Купить валюту {f6f404}[ЕВРО]\n",10,listitem);
		addlistitem(playerid, str_1, sizeof(str_1), "Продать валюту {f6f404}[ЕВРО]\n",11,listitem);
		addlistitem(playerid, str_1, sizeof(str_1), "Купить валюту {F7931A}[BITCOIN]\n",17,listitem);
		addlistitem(playerid, str_1, sizeof(str_1), "Продать валюту {F7931A}[BITCOIN]\n",18,listitem);
		addlistitem(playerid, str_1, sizeof(str_1), !"Внести залог на транспорт\n", 12, listitem);
	}
	if(GetPlayerHouse(playerid) != -1) addlistitem(playerid, str_1, sizeof(str_1), !"{73B461}Оплатить налоги на дом\n", 13, listitem);
	if(GetPlayerBiz(playerid) != -1) addlistitem(playerid, str_1, sizeof(str_1), !"{73B461}Оплатить налоги на бизнес\n", 14, listitem);
	if(PI[playerid][pMember] != 0) addlistitem(playerid, str_1, sizeof(str_1), !"Пополнить счет организации\n", 15, listitem);
	if(PI[playerid][pTelNum] > 0) addlistitem(playerid, str_1, sizeof(str_1), !"Пополнить счет sim карты мобильного телефона", 16, listitem);
	return SPD(playerid, 33, DIALOG_STYLE_LIST, isatbank ? ("Банк") : ("Банкомат"), str_1, !"Выбор", !"Отмена");
}
stock SetPlayerSkills(playerid)
{
    if(!IsPlayerConnected(playerid)) return 1;
    SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,			PI[playerid][pPistol_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,	PI[playerid][pSDPistol_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,		PI[playerid][pEagle_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,			PI[playerid][pShotGun_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,			PI[playerid][pUZI_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,				PI[playerid][pMP5_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,				PI[playerid][pAK47_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,				PI[playerid][pM4_Skill]/10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,		PI[playerid][pSniper_Skill]/10);
	return 1;
}
stock MuchNumber(...)
{
	new count = numargs(), maxnum;
	for(new i; i < count; i ++)
	{
	    new temp = getarg(i);
	    if(temp > maxnum) maxnum = temp;
	}
	return maxnum;
}
stock IsAStripCar(carid)
{
	new model = GetVehicleModelEx(carid);
	switch(model)
	{
	    case 528, 596..599: return 1;
	    default: return 0;
	}
	return 0;
}
stock bool:bollean(value)
{
	return value?true:false;
}
stock CuffedPlayer(playerid, cuffedtime)
{
	TogglePlayerControllable(playerid, true);
	CuffedTime[playerid] = cuffedtime;
	Crack{playerid} = bollean(cuffedtime > 0);
	if(PI[playerid][pJob] == 17 && InJob[playerid] == 2)
	{
	    for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	    TogglePlayerDynamicCP(playerid, MinerDownCP, false);
	}
	if(PI[playerid][pJob] == JOB_PORTER && InJob[playerid] == 2) TogglePlayerDynamicCP(playerid, PorterDownCP, false);
    if(TheftCarID[playerid] != 0)
	{
	    TheftCarID[playerid] = 0;
	    TheftKey[playerid] = 0;
	    TheftTime[playerid] = 0;
	    TheftCount[playerid] = 0;
	    HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
	}
	if(pTemp[playerid][BreakKey] != 0)
	{
		pTemp[playerid][BreakKey] =
		pTemp[playerid][BreakTime] =
		pTemp[playerid][BreakCount] = 0;
  		HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
		InvAdd(playerid, Item_Clips, -1);
		aml(102, playerid, "", "CuffedPlayer", Item_Clips, 1);
	}
	if(IsACop(playerid))
	{
	    new cuffid = PlayerOfCuff[playerid];
	    if(cuffid != INVALID_PLAYER_ID)
	    {
	        if(PlayerOfCuff[cuffid] == playerid) PlayerOfCuff[cuffid] = INVALID_PLAYER_ID;
	        PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
	        TimeOfCuff[playerid] = 0;
	    }
	}
	if(cuffedtime <= 0)
	{
	    new tazer = TazerPlayer[playerid];
		if(tazer != INVALID_PLAYER_ID)
  		{
 			TazerPlayer[playerid] = INVALID_PLAYER_ID;
 			TazerPlayer[tazer] = INVALID_PLAYER_ID;
  		}
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
	}
	CancelCuff(playerid);
	return 1;
}
stock UnCuffPlayer(playerid)
{
	Cuffed{playerid} = false;
	CuffedTime[playerid] = 0;
	SetPlayerSpecialAction(playerid, 0);
    TogglePlayerControllable(playerid, true);
    pTemp[playerid][BreakKey] = 0;
	pTemp[playerid][BreakTime] = 0;
	pTemp[playerid][BreakCount] = 0;
 	HidePlayerActionText(playerid);
	HidePlayerActionBand(playerid);
	ClearAnimations(playerid);
	return 1;
}
stock Parking(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
    if(ParkingEntered[playerid] == -1)
    {
        for(new i; i < MAX_PARKING; i++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]))
        	{
            	SPD(playerid, 1981, DIALOG_STYLE_LIST, !"Выберите этаж!", !"{FFFFFF}1.\n2.", !"Принять", !"Отмена");
                break;
            }
        }
    }
    else
    {
        new i = ParkingEntered[playerid];
        if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z]))
        {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
			{
				SetVehiclePos(carid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
				SetVehicleZAngle(carid, parking[i][pExit_a]);
				LinkVehicleToInterior(carid, 0);
				SetVehicleVirtualWorld(carid, 0);
                //
                SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                ParkingEntered[playerid] = -1;
			}
            else //Когда игрок не в тачке
            {
    			J_SetPlayerPos(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
    			SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
    			SetPlayerInterior(playerid, 0);
    			SetPlayerVirtualWorld(playerid, 0);
    			ParkingEntered[playerid] = -1;
            }
        }
        else if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z]))
        {
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
			{
				SetVehiclePos(carid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
				SetVehicleZAngle(carid, parking[i][pExit_a]);
				LinkVehicleToInterior(carid, 0);
				SetVehicleVirtualWorld(carid, 0);
                //
                SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                ParkingEntered[playerid] = -1;
			}
            else //Когда игрок не в тачке
            {
    			J_SetPlayerPos(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.0);
    			SetPlayerFacingAngle(playerid, parking[i][pEnter_a]);
    			SetPlayerInterior(playerid, 0);
    			SetPlayerVirtualWorld(playerid, 0);
    			ParkingEntered[playerid] = -1;
            }
        }
    }
    return 1;
}
stock GarageMovement(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	if(GarageEntered[playerid] == -1)
	{
		for(new i; i < OWNABLEHOUSES; i++)
		{
			if(HouseInfo[i][hGarage] == 1)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hGarage_X], HouseInfo[i][hGarage_Y], HouseInfo[i][hGarage_Z]))
				{
				    if(GetString(HouseInfo[i][hOwner], PN(playerid)) || GetString(HRoomOwner[i][HouseRooms[GetHouseStyle(i)]], PN(playerid)) || IsACop(playerid))
					{
						if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
						{
						    new count;
						    foreach(new vehid : Vehicle)
						    {
						        if(GetVehicleVirtualWorld(vehid) != (i+50)) continue;
						       	count ++;
						    }
						    if(count == 1 && HouseInfo[i][hKlass] == 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 1 машина!");
						    if(count == 2 && HouseInfo[i][hKlass] == 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 2 машины!");
						    if(count == 3 && (HouseInfo[i][hKlass] == 3 || HouseInfo[i][hKlass] == 4)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 3 машины!");
	 					    if(count == 5 && HouseInfo[i][hKlass] == 5) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом гараже уже есть 5 машин!");
							SetVehiclePos(carid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_X], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Y], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Z]+1.0);
							LinkVehicleToInterior(carid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
							SetVehicleVirtualWorld(carid, i + 50);
	                        //
	                        SetPlayerInterior(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
	                        SetPlayerVirtualWorld(playerid, i + 50);
	                        GarageEntered[playerid] = i;
	                        break;
						}
	                    else //Когда игрок не в тачке
	                    {
	    					J_SetPlayerPos(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_X], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Y], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Z] + 1.0);
	    					SetPlayerInterior(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
	    					SetPlayerVirtualWorld(playerid, i + 50);
	    					GarageEntered[playerid] = i;
	                        break;
	                    }
	                }
	                else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш гараж!");
				}
			}
		}
	}
	else
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.5, GaragesInteriors[HouseInfo[GarageEntered[playerid]][hKlass] - 1][e_GARAGE_INTERIOR_X], GaragesInteriors[HouseInfo[GarageEntered[playerid]][hKlass] - 1][e_GARAGE_INTERIOR_Y], GaragesInteriors[HouseInfo[GarageEntered[playerid]][hKlass] - 1][e_GARAGE_INTERIOR_Z]))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
                if(GetPlayerVirtualWorld(playerid) == (GarageEntered[playerid] + 50))
                {
					SetVehiclePos(carid, HouseInfo[GarageEntered[playerid]][hGarage_X], HouseInfo[GarageEntered[playerid]][hGarage_Y], HouseInfo[GarageEntered[playerid]][hGarage_Z] + 0.6);
					LinkVehicleToInterior(carid, 0);
					SetVehicleVirtualWorld(carid, 0);
					SetPlayerInterior(playerid, 0);
    				SetPlayerVirtualWorld(playerid, 0);
                    GarageEntered[playerid] = -1;
                }
			}
            else
            {
    			J_SetPlayerPos(playerid, HouseInfo[GarageEntered[playerid]][hGarage_X], HouseInfo[GarageEntered[playerid]][hGarage_Y], HouseInfo[GarageEntered[playerid]][hGarage_Z] + 0.6);
    			SetPlayerInterior(playerid, 0);
    			SetPlayerVirtualWorld(playerid, 0);
    			GarageEntered[playerid] = -1;
            }
		}
	}
	return 1;
}
stock EnterBiz(playerid,bizid)
{
    if(!IsNoEnterBiz(bizid))
	{
		if(!BizInfo[bizid][bLock])
		{
		    if(GetPlayerVirtualWorld(playerid)!=0)return 1;
			BizEntered[playerid] = bizid;
			SetPlayerInterior(playerid,BizInfo[bizid][bInt]);
			SetPlayerVirtualWorld(playerid,(bizid+100));
			J_SetPlayerPos(playerid,BizInfo[bizid][bExit_X],BizInfo[bizid][bExit_Y],BizInfo[bizid][bExit_Z]);
			NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
	    	SetCameraBehindPlayer(playerid);
			BizInfo[bizid][bVisit] ++;
			if(GetString(BizInfo[bizid][bName], SHOP_TUNE) && !setbiztune)
			{	
				SetActorVirtualWorld(actor[235], (bizid+100));
				setbiztune = true;
			}
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь закрыта, невозможно зайти");
	}
	return 1;
}
stock ClearAnims(playerid) return ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
stock IsNoEnterBiz(bizid)
{
	if(BizInfo[bizid][bExit_X] == 0.0 && BizInfo[bizid][bExit_Y] == 0.0 && BizInfo[bizid][bExit_Z] == 0.0) return 1;
	return 0;
}
stock CheckBed(playerid)
{
	if(PI[playerid][pHeal] > 0)
	{
	    if(PlayerLie[playerid])
	    {
	    	new bed = PlayerBed[playerid];
	    	PlayerLie[playerid] = false;
	    	TogglePlayerControllable(playerid,true);
	    	SetString(HealInfo[PlayerBed[playerid]][hName],"The State");
			PlayerBed[playerid] = -1;
			UpdateDynamic3DTextLabelText(HealText[bed],-1,"Койка {33AA33}[Свободна]\n{AFAFAF}Нажмите N чтобы занять.\nНеобходимо начать лечение!");
		}
	}
	return 1;
}
stock ShowLoginDialog(playerid)
{
	DisableAllRaceCPs(playerid);
	ResetDynamicCPs(playerid);
	ClearChatForPlayer(playerid);
	f(str_1, sizeof(str_1), "{FFFFFF}Добро пожаловать на {EBA225}"NAME" Role Play{FFFFFF}\n\nВведите свой пароль\n{FFFFFF}Попыток для ввода пароля: {28910B}%i", gPlayerLogTries{playerid});
	return SPD(playerid, 2, DIALOG_STYLE_PASSWORD, !"{BFBBBA}Авторизация", str_1, !"Принять", !"");
}
stock ShowJobInfo(playerid = INVALID_PLAYER_ID, job = 1)
{
    str_1[0] = EOS;
    ShowJobID[playerid] = job;
	switch(job)
	{
		case 1:
		{
			strcat(str_1,"{4F943D}Работа 'Водитель автобуса'{FFFFFF}\n");
			strcat(str_1,"Для начала вам надо арендовать свободный автобус. Стоимость его аренды\n");
			strcat(str_1,"зависит от установленой цены губернатором штата.\n");
			strcat(str_1,"После того как вы арендуете автобус ,вам необходимо установить цену за проезд и\n");
			strcat(str_1,"выбрать рейс по какому будете передвигатся. После того как вы выбрали рейс\n");
			strcat(str_1,"вам надо будет ездить по чекпоинтам и останавлеватся на остановках.\n");
			strcat(str_1,"За 1 чекпоинт вы будете получать столько денег, сколько установит губернатор!\n\n");
			strcat(str_1,"Удачной работы!");
		}
		case 3:
		{
			strcat(str_1,"{4F943D}Работа 'Развозчик продуктов'{FFFFFF}\n");
			strcat(str_1,"Для начала вам необходимо найти свободный транспорт для перевозки продуктов, для этого введите /gps - По работе - Продуктовозы.\n");
			strcat(str_1,"После того как вы нашли свободный автомобиль вам необходимо закупить продукты. Закупить их можно на складе фермы - даст возможность развозить продукты по закусочным,\n");
			strcat(str_1,"или на складе разгрузочной станции, что даст возможность развозить продукты по магазинам 24/7 , магазинам аксесуаров, магазинам одежды и другим.\n");
			strcat(str_1,"Стоимость закупки и перепродажи может быть разная, так как их стоимость регулирует губернатор и владельцы бизнесов, которые в свою очередь делают заказы на закупку.\n");
			strcat(str_1,"Чтобы найти заказчика продуктов используйте /orderlist и выберите нужный вам бизнес. Обратите внимание что некоторые бизнесы могут быть не багаты, и они не смогут оплатить\n");
			strcat(str_1,"заказ, по этому следите за состоянием их банка. Так же будьте внимательны, ведь закусочные не принимают груз из разгрузочных станций!\nСледите за выгодой при продажи, ибо вы можете уйти в минус.");
			strcat(str_1,"Для того чтобы заработать еще, закупайте продукты заново и ищите предпринимателей!\n\n");
			strcat(str_1,"Удачной работы!\n");
		}
		case 4:
		{
			strcat(str_1,"{4F943D}Работа 'Механик' - на фирме{FFFFFF}\n");
			strcat(str_1,"Суть работы заключается в починке, ремонте двигателя , а также доставки транспорта в автомастерскую.\n");
			strcat(str_1,"Для того чтобы начать свою работу , вам необходимо добратся в автомастерскую , ее можно найти с \n");
			strcat(str_1,"помощью команды /gps. После того переодеться и ждать клиентов для начала работы.\n");
			strcat(str_1,"При нажатии клавищи ALT у машины в которой сидит игрок , вы начнете ее чинить. Если там не будет игрока,\n");
			strcat(str_1,"то у вас ничего не получится. Ремонт двигателя сбивает пробег автомобиля и уменьшит шанс поломки авто в дальнейшем.\n");
			strcat(str_1,"Для того чтобы чинить двигатель , станьте у капота авто и жмите клавишу ALT.\n");
			strcat(str_1,"С ремонта авто вы получите $1000, за ремонт двигателя $20.000.\n\n");
			strcat(str_1,"{4F943D}Работа 'Механик' - по городу{FFFFFF}\n");
			strcat(str_1,"Суть работы заключается в ремонте и заправке транспорта автомобилям, которые застряли в дороге.\n");
			strcat(str_1,"Для того чтобы начать работу необходимо найти авто махаников, после чего направится в одну из АЗС\n");
			strcat(str_1,"и заключить с ней контракт, продавая бензин в 2 раза дешевле и получая 50 процентов от прибыли.\n\n");
			strcat(str_1,"{4F943D}Команды: /filscar - заправить авто. /repare - отремонтировать авто. /contractfill - заключить контракт на работу\n/azsmonitor - Мониторинг заправок");
		}
		case 5:
		{
			strcat(str_1,"{4F943D}Работа 'Таксист'{FFFFFF}\n");
			strcat(str_1,"Суть работы заключается в развозке игроков в заданую точку.\n");
			strcat(str_1,"Чтобы работать вы должны сесть в 1 из авто такси и ввести трафик.\n");
			strcat(str_1,"После подтверждения все получат сообщение о том, что вы вышли на работу.\n");
			strcat(str_1,"Если игрок закажет такси{FFFFFF} всем таксистам поступит заказ.\n");
			strcat(str_1,"Чтобы принять заказ нужно ввести {10F441}/gotaxi [id игрока]{FFFFFF}.\n");
			strcat(str_1,"После принятия вызова игрок будет отмечен на карте красным маркером.\n");
			strcat(str_1,"Когда игрок сядет к вам в такси вы будете оповещены об этом.\n");
			strcat(str_1,"По ходу перевозке будет начисляться сумма проезда.\n");
			strcat(str_1,"Как только игрок выйдет из такси вы получите деньги.\n\n");
			strcat(str_1,"Удачной работы!");
		}
		case JOB_ADVOKAT:
		{
			strcat(str_1,"{4F943D}Работа 'Адвокат'{FFFFFF}\n");
			strcat(str_1,"Основная цель вашей работы заключается в помощи игрокам которые\n");
			strcat(str_1,"попали в тюрьму. Вы можете помочь им с сокращением срока за определенную\n");
			strcat(str_1,"сумму денег, собственно с этого и идет ваша прибыль. Найти заключенных\n");
			strcat(str_1,"можно в 3 полицейских участках, а именно RCPD, LVPD и SFPD.\n");
			strcat(str_1,"У вас есть возможность просмотреть базу заключенных чтобы узнать уровень\n");
			strcat(str_1,"их преступления (чем выше их уровень преступления тем больше плата за сокращение срока)\n");
			strcat(str_1,"и их местоположение чтобы приехать и помочь им в освобождении.\n\n");
			strcat(str_1,"{E4AE25}База заключенных - /zeks.\nСократить срок заключенному - /free.\n\n");
			strcat(str_1,"{4F943D}Удачной работы!");
		}
		case 8:
		{
			strcat(str_1,"{4F943D}Работа 'Крупье'{FFFFFF}\n");
			strcat(str_1,"Для начала вам надо отправится в само казино,\n");
			strcat(str_1,"найти его можно с помощью /gps развлечения - казино.\n");
			strcat(str_1,"В здании будет раздевалка , где вы сможете начать рабочий день.\n");
			strcat(str_1,"После начала работы , ваша цель будет заключатся в том что , бы\n");
			strcat(str_1,"следить за игроками которые играют в кости( Cтоять у игрального стола ).\n");
			strcat(str_1,"За каждую проведенную игру в кости, вы будете получать деньги которые установит казино.\n");
			strcat(str_1,"Забрать зарплату вы сможете в специальном месте, не подалеку от раздевалки.\n\n");
			strcat(str_1,"Удачной работы!\n\n");
		}
		case 9:
		{
			strcat(str_1,"{4F943D}Работа 'Инкассатор'{FFFFFF}\n");
			strcat(str_1,"Суть работы заключается в сборе денег из определенных точек.\n");
			strcat(str_1,"Чтобы начать работать переоденьтесь и сядьте в один из грузовиков.\n");
			strcat(str_1,"Далее едьте на маркер обозначеный на карте.\n");
			strcat(str_1,"Заберите деньги и положите их в багажник грузовика.\n");
			strcat(str_1,"Далее едьте на маркер обозначеный на карте (Банк).\n");
			strcat(str_1,"Заберие деньги из багажника и отнесите их на чекпоинт.\n");
			strcat(str_1,"Во время работы на вас могут напасть и убить.\n");
			strcat(str_1,"Если это случится, то убийца сможет забрать деньги.\n\n");
			strcat(str_1,"Удачной работы!");
		}
		case 11:
		{
		    strcat(str_1,"{4F943D}Работа 'Дальнобойщик'{FFFFFF}\n");
		    strcat(str_1,"Суть этой работы заключается в перевозке груза из одной точки в другую.\n");
		    strcat(str_1,"Садьте в 1 из грузовиков и подъедьте задом к 1 из трейлеров.\n");
		    strcat(str_1,"Трейлер прицеплен, направляйтесь в точку указаную на карте.\n");
		    strcat(str_1,"Далее отвозите грузовик назад и получаете деньги.\n\n");
		    strcat(str_1,"Удачной работы!");
		}
		case 12:
		{
		    strcat(str_1,"{4F943D}Работа 'Развозчик пиццы'{FFFFFF}\n");
		    strcat(str_1,"Суть этой работы заключается в перевозке пиццы в жилые дома и другие места.\n");
		    strcat(str_1,"Для начала переоденьтесь, а потом возьмите пиццу в пункте выдачи.\n");
		    strcat(str_1,"После сядьте на мопед, положите пиццу в багажник и следуйте указаниям.\n");
		    strcat(str_1,"За каждую отвезенную пиццу вы будете получать зарплату в размере 550$\n\n");
		    strcat(str_1,"Удачной работы!");
		}
		case 13:
		{
		    strcat(str_1,"{4F943D}Работа 'Развозчик металлолома'{FFFFFF}\n");
		    strcat(str_1,"Суть работы заключается в перевозе спресованного металлолома.\n");
		    strcat(str_1,"Сядьте в 1 из эвакуаторов и подъедте задом к металлолому.\n");
		    strcat(str_1,"Отвезите его на отмеченую на карте точку.\n");
		    strcat(str_1,"Удачной работы!");
		}
		case 14:
		{
		    strcat(str_1,"{4F943D}Работа 'Мусоровозчик'{FFFFFF}\n");
		    strcat(str_1,"Суть работы заключается в собирании мусора с контейнеров.\n");
		    strcat(str_1,"Сядьте в 1 из мусоровозов и подъедте задом к контейнеру.\n");
		    strcat(str_1,"Подождите пока пройдет загрузка мусора.\n");
		    strcat(str_1,"Повторяйте это до тех пор пока мусоровоз не заполнится на 100\%.\n");
		    strcat(str_1,"После загрузки направляйтесь на свалку.\n");
		    strcat(str_1,"Удачной работы!");
		}
		case 15:
		{
		    strcat(str_1,"{4F943D}Работа 'Грузчик'{FFFFFF}\n");
	    	strcat(str_1,"Суть работы заключается в переносе груза с одной точки в другую.\n");
			strcat(str_1,"В этой работе не используются команды, все выполняется по чекпоинтам.\n");
			strcat(str_1,"Чтобы начать работу переоденьтесь в раздевалке и идите к вагонам.\n");
			strcat(str_1,"После станьте на пикап и возьмите мешок, который вы должны отнести на склад.\n");
			strcat(str_1,"Чтобы получить заработанные деньги нужно переодеться.\n\n");
			strcat(str_1,"Удачной работы!");
		}
		case 16:
		{
		    strcat(str_1,"{4F943D}Работа 'Налоговая'{FFFFFF}\n");
		    strcat(str_1,"Суть работы заключается в сборе налогов с \n");
		    strcat(str_1,"Недвижемого имущества , Подписания соответствующих документов\n");
		    strcat(str_1,"и оформления выплат.\n");
		    strcat(str_1,"Для начала направляйтесь в первый офис налоговой(/gps/Важные места)\n");
		    strcat(str_1,"После чего вы сможете выбрать работу для себя\n");
		    strcat(str_1,"Удачной работы!");
		}

		case 17:
		{
		    strcat(str_1,"{4F943D}Работа 'Начинающий фермер'{FFFFFF}\n");
	    	strcat(str_1,"В этой работе не используются команды.\n");
			strcat(str_1,"Все выполняется по чекпоинтам.\n");
			strcat(str_1,"Чтобы начать работу переоденьтесь в раздевалке.\n");
			strcat(str_1,"Далее идите на точку обозначеную на мини-карте.\n");
			strcat(str_1,"Ваша цель переносить обработаные продукты на склад нашей\n");
			strcat(str_1,"фермы, для того чтобы развозчики продуктов могли их закупить.\n");
			strcat(str_1,"Чтобы получить заработанные деньги нужно забрать их в здании фермы.\n\n");
			strcat(str_1,"{99E05A}Обратите внимание! Работая здесь, вы можете развить ветку достижений\n");
			strcat(str_1,"и получить доступ к новой работе, под названием тракторист.\n");
			strcat(str_1,"Для этого необходимо заработать 500 очк. работы начинающего фермера.\n\n\n");
			strcat(str_1,"{4F943D}Удачной работы!");
		}

		case 18:
		{
		    strcat(str_1,"{4F943D}Работа 'Тракторист'{FFFFFF}\n");
	    	strcat(str_1,"Для начала вам надо найти свободный трактор в одном из ангаров фермы.\n");
			strcat(str_1,"После того как вы его найдете ,вам надо будет начать работу и\n");
			strcat(str_1,"передвигатся на показаных вам чекпоинтам на мини-карте.\n");
			strcat(str_1,"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str_1,"вы сможете забрать в здании фермы, при окончании работы.\n\n");
  			strcat(str_1,"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 500 очк.\n");
			strcat(str_1,"работы фермера, работая начинающим фермером. Набрав 3200 очк. роботы вы откроете доступ\n");
			strcat(str_1,"к новому виду работы на ферме, под названием 'Комбайнер'\n\n\n");
			strcat(str_1,"{4F943D}Удачной работы!");
		}

		case 19:
		{
		    strcat(str_1,"{4F943D}Работа 'Комбайнер'{FFFFFF}\n");
	    	strcat(str_1,"Для начала вам надо найти свободный комбайн в одном из ангаров фермы.\n");
			strcat(str_1,"После того как вы его найдете ,вам надо будет начать работу и\n");
			strcat(str_1,"передвигатся на показаных вам чекпоинтам на мини-карте.\n");
			strcat(str_1,"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str_1,"вы сможете забрать в здании фермы, при окончании работы.\n\n");
			strcat(str_1,"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 3200 очк.\n");
			strcat(str_1,"работы фермера, работая начинающим фермером или трактористом. Набрав 7000 очк. роботы вы откроете доступ\n");
			strcat(str_1,"к новому виду работы на ферме, под названием 'Водитель кукурузника'\n\n\n");
			strcat(str_1,"{4F943D}Удачной работы!");
		}

		case 20:
		{
		    strcat(str_1,"{4F943D}Работа 'Водитель кукурузника'{FFFFFF}\n");
	    	strcat(str_1,"Для начала вам надо найти свободный кукурузник в одном из ангаров фермы.\n");
			strcat(str_1,"После того как вы его найдете ,вам надо будет начать работу и\n");
			strcat(str_1,"передвигатся на показаных вам чекпоинтам на мини-карте, латая над фермами всего штата, удобряя их землю.\n");
			strcat(str_1,"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str_1,"вы сможете забрать в здании фермы, при окончании работы.\n\n");
			strcat(str_1,"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 7000 очк.\n");
			strcat(str_1,"работы фермера, работая начинающим фермером или трактористом или комбайнером.\n");
			strcat(str_1,"Эта работа является вершиной ветки, работника фермы, и она является самой оплачеваемой в нашем штате.\n\n\n");
			strcat(str_1,"{4F943D}Удачной работы!");
		}
		case 21:
		{
		    strcat(str_1,"{4F943D}Работа 'Строитель'{FFFFFF}\n");
		    strcat(str_1,"Для начала работы необходимо переодеться в том месте где вы устроились на работу.\n");
	    	strcat(str_1,"Эта работа будет функционировать до тех пор, пока будет идти строительство\n");
			strcat(str_1,"концертного зала. По окончанию его постройки рабочих мест не будет!\n\n");
			strcat(str_1,"Суть вашей работы очень проста, брать материалы и бегать по чекпоинтам,\n");
			strcat(str_1,"если закончились материалы, то вернуться обратно и начать заново.\n");
			strcat(str_1,"Чтобы забрать зарплату, необходимо подойти к месту где вы начинали работу и переодется.\n\n\n");
			strcat(str_1,"{4F943D}Удачной работы!");
		}
		default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы нигде не работаете!");
	}
	return SPD(playerid, 0, 0, "Информация о работе", str_1, !"Дальше", !"");
}
stock TextFind(const text[], const findtext[]) return strfind(text, findtext) != -1;
stock ShowUpdateSettings(playerid)
{
	f(str_1, sizeof(str_1), "Система	Состояние	\n\
	{AFAFAF}Ники:	%s\n\
	{AFAFAF}E-mail:	%s\n\
	{AFAFAF}Сменить пароль	{9ACD32}[ От аккаунта ]{FFFFFF}\n\
	{AFAFAF}Сменить пароль	{9ACD32}[ Банковская карта ]{FFFFFF}\n\
	{AFAFAF}Показывать голод:	%s\n\
	{AFAFAF}Место спавна	{9ACD32}[ Изменить ]{FFFFFF}\n\
	{AFAFAF}Отмена показа документов:	%s\n\
	{AFAFAF}Google Authenticator	%s\n\
	{AFAFAF}Предложения о продаже/обмене	%s\n\
	{AFAFAF}Предложения о игре	%s\n\
	{AFAFAF}Рабочая рация:	%s\n\
	{AFAFAF}Вход через почту:	%s\n\
	{AFAFAF}Язык инвентаря:	[ %s ]\n\
	{AFAFAF}Отображение кейса в руке:	%s\n\
	{AFAFAF}Damage informer:	%s\n\
	{AFAFAF}Темная тема инвентаря:	%s\n\
	{AFAFAF}Стиль походки:	%s\n\
	{AFAFAF}Описание персонажа:	{cccccc}%s\n\
	{FFD700}[NEW] {AFAFAF}Кастомизация интерфейса\n\
	{D8C85E}Сбросить настройки инвентаря",\
	PI[playerid][pShowName] ? ("{008000}[ON]") : ("{FF0000}[OFF]"),\
	PlayerMail[playerid],\
	!PI[playerid][pHungryShow] ? ("{9ACD32}[ON]") : ("{B83434}[OFF]"),\
	PI[playerid][pShowDokument] ? ("{9ACD32}[ON]") : ("{FF0000}[OFF]"),\
	PI[playerid][pGoogle] ? ("{9ACD32}[Включено]") : ("{B83434}[Выключено]"),\
	PI[playerid][pObmen] ? ("{9ACD32}[ВКЛ]") : ("{B83434}[Выключено]"),\
	PI[playerid][pGameRate] ? ("{9ACD32}[ВКЛ]") : ("{B83434}[Выключено]"),\
	PI[playerid][pRabRacia] ? ("{9ACD32}[ВКЛ]") : ("{B83434}[Выключено]"),\
	"{B83434}[Выключено]"/*PI[playerid][pEmailAuth] ? ("{9ACD32}[Включено]") : ("{B83434}[Выключено]")*/,\
	PI[playerid][pInvLang] ? ("русский") : ("английский"),\
	PI[playerid][pShowCase] ? ("{9ACD32}[Включено]") : ("{B83434}[Выключено]"),\
	PI[playerid][pDamageInfo] ? ("{9ACD32}[Включено]") : ("{B83434}[Выключено]"),\
	PI[playerid][pInvBlack] ? ("{9ACD32}[Включено]") : ("{B83434}[Выключено]"),\
	"{9ACD32}Стандартный",\
	PI[playerid][pDescription]);
	return SPD(playerid, 154, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите пункт", str_1, !"Выбор", !"Отмена");
}
stock Show2UpdateSettings(playerid)
{
	f(str_1, sizeof(str_1), "\
	{AFAFAF}Шумахер [3lvl] \t\t\t| %s\n\
	{AFAFAF}Халявщик [4lvl] \t\t| %s\n\
	{AFAFAF}Бизнесмен [1lvl] \t\t| %s\n\
    {AFAFAF}Планшет [1lvl] \t\t\t| %s\n\
    {AFAFAF}Больше недвижимости \t| %s\n\
	{AFAFAF}Помощь",PI[playerid][pFeFinder] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [85000$]"),PI[playerid][pPack] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [100000$]"),PI[playerid][pMore] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [2000 AZ coins`s]"),PI[playerid][pPlanshet] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [2000000$]"),PI[playerid][pMoreHouses] ? ("{9ACD32}Куплено") : ("{FF6347}Не имеется [2000 AZ coins`s]"));
	return SPD(playerid, 799, DIALOG_STYLE_LIST, !"Выберите пункт", str_1, !"Выбор", !"Отмена");
}
stock Show3UpdateSettings(playerid)
{
	f(str_1, sizeof(str_1), "\
	{AFAFAF}Объявления (/ad/благотворительность/Эдвард)\t\t%s\n\
	{AFAFAF}Рация (/r)\t\t\t%s\n\
	{AFAFAF}Департамент (/d)\t\t%s\n\
	{AFAFAF}Действия админов\t\t%s\n\
    {AFAFAF}Сообщения об убийствах\t%s\n\
	{AFAFAF}VIP чат (/vr)\t\t\t%s\n\
	{AFAFAF}Рация семьи\t\t\t%s\n\
	{AFAFAF}Сообщения спавна авто\t\t\t%s",!PI[playerid][pNewsChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pRacia] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pDepChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pAdmAction] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pKillShow] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pVipChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pFamilyChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"),!PI[playerid][pRespawnChat] ? ("{9ACD32} [ON]") : ("{FF6347} [OFF]"));
	return SPD(playerid, 800, 2, !"{BFBBBA}Выберите пункт", str_1, !"Выбор", !"Отмена");
}
stock ResetSpawnInfo(playerid, team)
{
	new skin = GetSkinOfPlayer(playerid);
	SetSpawnInfo( playerid, 255, skin, SpawnInfo[team][0], SpawnInfo[team][1], SpawnInfo[team][2], SpawnInfo[team][3], 0, 0, 0, 0, 0, 0);
	return 1;
}
stock ValidChar(mailchar)
{
	if(
	(mailchar >= 'A' && mailchar <= 'Z') 	||
	(mailchar >= 'a' && mailchar <= 'z') 	||
	(mailchar >= '0' && mailchar <= '9') 	||
	(mailchar == '-') || (mailchar == '_') 	||
	(mailchar == '@') || (mailchar == '.'))return 1;
	return 0;
}
stock IsValidEMail(const email[])
{
	new bool:Succes = true;
	new bool:Good;
	for(new i;i < strlen(email);i ++)
	{
	    if(email[i] == '@')
		{
		    if(!Good) Good = true;
		    else
			{
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
  	return Succes;
}
stock ShowGrandRegiserDialog(playerid)
{
    PlayerPlaySound(playerid, 1062, 0, 0, 0);
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	f(str_1, sizeof(str_1), "{FFFFFF}Добро пожаловать, {205CA2}%s{FFFFFF}\n\nЭтот аккаунт {FF6347}не зарегистрирован {FFFFFF}на нашем сервере.\nДля регистрации введите пароль.\nОн будет использоваться для авторизации на нашем сервере.\n\n{BF2F2F}\tПримечания:\n\t- Длина пароля от 6 до 30 символов\n\t- Пароль должен состоять из букв и цифр\n\t- Пароль чувствителен к регистру\n", PN(playerid));
	return SPD(playerid, 1, DIALOG_STYLE_INPUT, !"{BFBBBA}{E88813}(1/4) Пароль", str_1, !"Принять", !"Выход");
}
stock ShowRegisterDialog(playerid, rstate)
{
	switch(rstate)
	{
	    case 1: ShowGrandRegiserDialog(playerid);
	    case 2: SPD(playerid, 1, DIALOG_STYLE_LIST, !"{E88813}[2/5] Выберите ваш пол","Мужчина\nЖенщина", !"Принять", !"Выход");
		case 3: SPD(playerid, 1, DIALOG_STYLE_LIST, !"{E88813}[3/5] Выберите цвет кожи","{FFCC99}Светлый\n{FFCC99}Тёмный", !"Принять", !"Выход");
		case 4: SPD(playerid, 1, DIALOG_STYLE_LIST, !"[3/4] Откуда вы о нас узнали?","Вкладка 'Hosted'\nОт друзей\nНа порталах/форумах\nВ поисковике\nДругое", !"Принять", !"Выход");
	    case 5: SPD(playerid, 1, DIALOG_STYLE_INPUT, !"{E88813}[5/5] Введите ник пригласившего?","{FFFFFF}Введите ник игрока пригласившего вас.\nПример: {E88813}Carl_Johnson\n", !"Принять", !"Выход");
        default: return 0;
	}
	return 1;
}
stock CheckPassword(const passwd[])
{
	for(new i; i < strlen(passwd); i ++)
	{
	    if( (passwd[i] >= 'a' && passwd[i] <= 'z') ||
		(passwd[i] >= 'A' && passwd[i] <= 'Z') ||
		(passwd[i] >= 'а' && passwd[i] <= 'я') ||
		(passwd[i] >= 'А' && passwd[i] <= 'Я') ||
		(passwd[i] >= '0' && passwd[i] <= '9')  ) continue;
		else return 0;
	}
	return 1;
}
stock IsAGameNick(const name[])
{
	for(new i;i < strlen(name);i ++)
	{
		switch(name[i])
		{
		    case 'a'..'z', 'A'..'Z', '0'..'9', '.', '_', '[', ']', '(', ')', '$', '@', '-': continue;
		}
	}
	return 1;
}
stock UpdateDorm(dormid)
{
	new allzone, narkoz;
	if((dormid>=11 && dormid<=15) || dormid == 25)
	{
        for(new d = 1; d < GANGZONES; d++)
		{
			if(GZInfo[d][gzFracID] == dormid)
			{
				allzone++;
				if (d == 33)narkoz++;
				if (d == 43)narkoz++;
				if (d == 10)narkoz++;
				if (d == 14)narkoz++;
				if (d == 24)narkoz++;
			}
		}
		f(str_1, sizeof(str_1), "Количество\nТерриторий: {FAAC58}%i{FFFFFF}\nНаркопритонов: {FAAC58}%i{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%i г{FFFFFF}\nПатроны: {FAAC58}%i шт{FFFFFF}\nКанистры: {FAAC58}%i шт{FFFFFF}\nИнструменты: {FAAC58}%i шт{FFFFFF}\nМаски: {FAAC58}%i шт{FFFFFF}\n",allzone,narkoz,OrgInfo[dormid][oOb4ak] ? ("{A92424}Закрыт{FFFFFF}") : ("{3FA924}Открыт{FFFFFF}"),OrgInfo[dormid][oName],OrgInfo[dormid][oDrugs],OrgInfo[dormid][oMats],OrgInfo[dormid][oBenz],OrgInfo[dormid][oRemont],OrgInfo[dormid][oMask]);
	}
	else
	{
	    for(new bizid;bizid < OWNABLEBIZES;bizid++)
		{
		    if(BizInfo[bizid][bKrasher] != dormid || strcmp(BizInfo[bizid][bOwner],"The State",true) == 0 ) continue;
			allzone++;
		}
		f(str_1, sizeof(str_1), "Количество\nбизнесов {FAAC58}%i{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%i г{FFFFFF}\nПатроны: {FAAC58}%i шт{FFFFFF}\nКанистры: {FAAC58}%i шт{FFFFFF}\nИнструменты: {FAAC58}%i шт{FFFFFF}\nМаски: {FAAC58}%i шт{FFFFFF}",allzone,OrgInfo[dormid][oOb4ak] ? ("{A92424}Закрыт{FFFFFF}") : ("{3FA924}Открыт{FFFFFF}"),OrgInfo[dormid][oName],OrgInfo[dormid][oDrugs],OrgInfo[dormid][oMats],OrgInfo[dormid][oBenz],OrgInfo[dormid][oRemont],OrgInfo[dormid][oMask]);
	}
	UpdateDynamic3DTextLabelText(DormText[dormid],-1, str_1);
	return 1;
}
stock PlayerUnleader(playerid = INVALID_PLAYER_ID, Name[] = "None")
{
	if(playerid != INVALID_PLAYER_ID)
	{
	    if(IsACop(playerid))
		{
			if(UsingShield[playerid]) RemovePlayerAttachedObject(playerid, 7);
			PI[playerid][pShield] = 0.0;
		}
  		PI[playerid][pLeader] =
	    PI[playerid][pMember] =
	    PI[playerid][pDCTime] = 0;
	    UpdatePlayerDataInt(playerid, "DCTime", 0);
	    UpdatePlayerDataInt(playerid, "Member", 0);
	    UpdatePlayerDataInt(playerid, "Leader", 0);
	    SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	    PI[playerid][pRank] = 0;
	    UpdatePlayerDataInt(playerid, "Rank", 0);
	    SetBumSkin(playerid);
	    PI[playerid][pJob] = JOB_NONE;
	    UpdatePlayerDataInt(playerid, "Job", 0);
	    SetPlayerColor(playerid,TeamColors[0]);
	    ResetSpawnInfo(playerid, 0);
	    SCM(playerid, COLOR_LIGHTBLUE, !"Вы были сняты со своей должности");
	}
	else mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Leader` = '0',`Member` = '0', `Job` = '0',`Rank` = '0' WHERE `NickName` = '%s'", Name);
	return 1;
}
stock IntToStr(value)
{
  	static str[20];
  	valstr(str, value);
  	return str;
}
stock GetPlayerID(const name[])
{
	foreach(new i: Player)
	{
		if(!GetString(PN(i), name)) continue;
		return i;
	}
	return INVALID_PLAYER_ID;
}
stock DestroyPlayerTD(playerid, &PlayerText:td)
{
	if(PlayerText:td != PlayerText:INVALID_TEXT_DRAW)
	{
		PlayerTextDrawDestroy(playerid, td);
		td = PlayerText:INVALID_TEXT_DRAW;
	}
	return 1;
}
stock GetHouseStyle(houseid)
{
	for(new i = 1;i < sizeof(GHSPos);i ++)
	{
	    if(floatcomp(GHSPos[i][0], 0.000000)) continue;
	    if(	floatcomp(HouseInfo[houseid][hExit_X], GHSPos[i][0]) &&
	    	floatcomp(HouseInfo[houseid][hExit_Y], GHSPos[i][1]) &&
	    	floatcomp(HouseInfo[houseid][hExit_Z], GHSPos[i][2])) return i;
	}
	return 0;
	//return -1;
}
stock CheckFuelDraws(playerid)
{
	for(new i; i < 30; i++) TextDrawHideForPlayer(playerid, FillTD[i]);
	PlayerTextDrawHide(playerid, PlayerFuelBar[playerid]);
	PlayerTextDrawHide(playerid, FuelCostDraw[playerid]);
	PlayerTextDrawHide(playerid, KindFuelDraw[playerid]);
	return 1;
}
stock UpdateFuels(biz)
{
	if(BizInfo[biz][bState] == B_GAS)
	{
		for(new i;i < sizeof(GoFuel);i ++)
		{
			if(GoFuel[i][gfBizzID] == biz)
			{
				new benz = BizInfo[biz][bProducts];
				new Float:cost = BizInfo[biz][bEnterPrice];
				f(str_2, 300,"\
				{FAAC58} Заправка \n\n\
				{FFFFFF}Введите {73B461}/fill {FFFFFF}около бензокалонки\n\
				Стоимость 1-го литра: {73B461}$%.1f\n\
				{FFFFFF}Всего топлива: {73B461}%iл.", cost, benz);
				UpdateDynamic3DTextLabelText(FuelText[i],-1, str_2);
			}
		}
	}
	return 1;
}
stock IsAFexistMail(const Mail[])
{
	str_1[0] = EOS;
	mysql_escape_string(Mail, str_1);
    mysql_format(mysql, str_3, 256, "SELECT * FROM `Qelksekm` WHERE `Mail` = '%s' LIMIT 1", str_1);
	new Cache:result = mysql_query(mysql, str_3);
	new num = cache_num_rows();
	cache_delete(result);
	return num;
}
stock IsAArendCar(carid)
{
	if(carid >= ArendCar[0] && carid <= ArendCar[ARENDCARS-1]) return 1;
	return 0;
}
stock GetArendCarID(carid) return carid - ArendCar[0];

stock IsPlayerInIncVehicle(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new carid = GetPlayerVehicleID(playerid);
		if(vTemp[carid][vJob] == 9) return 1;
	}
	return 0;
}
stock ProxDetector(Float:radi, playerid, const string[], color, house = 0)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		new NEAR_HOUSE = InfoHouse[playerid];
		new IN_HOUSE = HouseEntered[playerid];
		new HOUSE = -1;
		if(NEAR_HOUSE != -1 && IsPlayerInDynamicCP(playerid, HouseCP[NEAR_HOUSE])) HOUSE = NEAR_HOUSE;
		else if(IN_HOUSE != -1 && IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[IN_HOUSE][hExit_X], HouseInfo[IN_HOUSE][hExit_Y], HouseInfo[IN_HOUSE][hExit_Z])) HOUSE = IN_HOUSE;
		foreach(new i: Player)
		{
		    if(house && HOUSE != -1)
		    {
		        if(IsPlayerInRangeOfPoint(i, 4.0, HouseInfo[HOUSE][hExit_X], HouseInfo[HOUSE][hExit_Y], HouseInfo[HOUSE][hExit_Z])
				|| IsPlayerInRangeOfPoint(i, 4.0, HouseInfo[HOUSE][hEnter_X], HouseInfo[HOUSE][hEnter_Y], HouseInfo[HOUSE][hEnter_Z])) SCM(i, color, string);
		    }
			else if (IsPlayerInRangeOfPoint(i,radi,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) SCM(i, color, string);
		}
	}
	return 1;
}
stock IsValidPassport(playerid)
{
	static fmt_str[] = "SELECT `Name` FROM `Passports` WHERE `Name` = '%s' LIMIT 1";
    mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, PN(playerid));
	new Cache:result = mysql_query(mysql, str_3);
	new num = cache_num_rows();
	cache_delete(result);
	return num;
}
stock OnRegPass(playerid) mysql_pqueryf(mysql, "INSERT INTO `Passports` (`Name`,`Seria`,`Number`,`Sex`,`D_Day`,`D_Month`,`D_Year`,`DB_Day`,`DB_Month`,`DB_Year`,`McState`) VALUE ('%s','%i','%i','%i','%i','%i','%i','%i','%i','%i','-1')", PN(playerid), PassInfo[playerid][psSeria], PassInfo[playerid][psNumber], PassInfo[playerid][psSex], PassInfo[playerid][psDate][0], PassInfo[playerid][psDate][1], PassInfo[playerid][psDate][2], PassInfo[playerid][psDateBirth][0], PassInfo[playerid][psDateBirth][1], PassInfo[playerid][psDateBirth][2]);
stock OnPlayerRegister(playerid, const password[])
{
	new y, m, d;
	static passwd[100], datereg[12];
	passwd[0] = EOS, datereg[0] = EOS, str_1[0] = EOS, str_2[0] = EOS;
	getdate(y,m,d);
	f(datereg, sizeof(datereg), "%i-%i-%i", y, m, d);
	mysql_escape_string(password, passwd);
	strcat(str_1,"INSERT INTO `Qelksekm` ");
	strcat(str_1,"(`NickName`,`Password`,`RegIP`,`Level`,`Sex`,`Race`,`Referal`,`Mail`,`Money`,`Bank`,`HouseSpawn`,`BankPass`,`SkillLevel`,`VirMoney`,`Merrit`,`datareg`,`HouseSet`)");
	strcat(str_1," VALUE ");
    f(str_2, 500, "('%s', '%s', '%s', '%d', '%i', '%i', '%s', 'No Mail Adress', '%d', '0', '-1', '0', '1', '%d', 'None', '%s', '1')",
	PN(playerid), MD5_Hash(passwd), PlayerIP(playerid), BONUSLVL, RegSex[playerid], RegRace[playerid], RegReferal[playerid], BONUSMONEY, BONUSDONATE, datereg);
	strcat(str_1, str_2);
	return mysql_pquery(mysql, str_1, "OnPlayerRegisterMysql", "d", playerid);
}
stock RenamePlayer(playerid, name[])
{
	static oldname[MAX_PLAYER_NAME];
	oldname[0] = EOS;
	GetPlayerName(playerid, oldname, 25);
	f(str_3, sizeof(str_3), "UPDATE `Qelksekm` SET `NickName` = '%s' WHERE `ID` = '%i'", name, PI[playerid][pID]);
	mysql_query(mysql, str_3, false);
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Referal` = '%s' WHERE `Referal` = '%s'", oldname, name);
	mysql_pqueryf(mysql, "UPDATE `PhoneBook` SET `Name` = '%s' WHERE `Name` = '%s'", oldname, name);
	mysql_pqueryf(mysql, "UPDATE `PhoneBook` SET `Namez` = '%s' WHERE `Namez` = '%s'", oldname, name);
	mysql_pqueryf(mysql, "UPDATE `PhoneMes` SET `Name` = '%s' WHERE `Name` = '%s'", oldname, name);
	mysql_pqueryf(mysql, "UPDATE `PhoneMes` SET `Namez` = '%s' WHERE `Namez` = '%s'", oldname, name);
	mysql_pqueryf(mysql, "INSERT INTO `NameHistory` (`nh_owner`,`nh_oldname`,`nh_date`) VALUES ('%i','%s',NOW())", PI[playerid][pID], oldname);
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}По скольку вы сменили имя, вам необходимо сделать новый паспорт и мед-карту.");
	Kick(playerid);
	return SendAdminsMessagef(COLOR_ACHAT, "[admin] Теперь %s известен как %s.", oldname, name);
}
stock SavePlayer(playerid)
{
	if(!IsPlayerLogged{playerid}) return 0;
	static weapon[400];
	weapon[0] = EOS;
	for(new x; x < 13; x ++)
	{
	    new gun, ammo;
	    GetPlayerWeaponData(playerid, x, gun, ammo);
		f(weapon, sizeof(weapon), "%s%i %i ", weapon, (gun<PI[playerid][pGuns][x])?gun:PI[playerid][pGuns][x], (ammo<PI[playerid][pAmmos][x])?ammo:PI[playerid][pAmmos][x]);
	}
    UpdatePlayerDataStr(playerid, "Weapons", weapon);

	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `MuteTime` = '%i',\
	`FMuteTime` = '%i', `JailTime` = '%i', `Demorgan` = '%i',\
	`PlayedTime` = '%i', `TelBalance` = '%i', `FamilyMute` = '%i',\
	`LastIP` = '%s', `ChestTime` = '%i', `TimeTP` = '%i' WHERE `ID` = '%i' LIMIT 1", \
	PI[playerid][pMuteTime],\
	PI[playerid][pFMuteTime],\
	PI[playerid][pJailTime],\
	PI[playerid][pDemorgan],\
	PI[playerid][pPlayedTime],\
	PI[playerid][pTelBalance],\
	PI[playerid][pFamilyMute],\
	PI[playerid][pLastIP],\
	PI[playerid][pChestTime],\
	PI[playerid][pTimeTP],\
	PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataInt(const playerid, const field[], data)
{
	if(!IsPlayerLogged{playerid}) return 0;
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `%s` = '%i' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataFloat(const playerid, const field[], Float:data, const type[] = "%f")
{
	if(!IsPlayerLogged{playerid}) return 0;
	if(!strcmp(type, "%.2f", true)) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `%s` = '%.2f' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	else mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `%s` = '%f' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return 1;
}
stock UpdatePlayerDataStr(const playerid, const field[], data[])
{
	if(!IsPlayerLogged{playerid}) return 0;
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	//printf("UpdatePlayerDataStr UPDATE `Qelksekm` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1", field, data, PI[playerid][pID]);
	return 1;
}
stock OnPlayerLogin(playerid)
{
    if(IsPlayerLogged{playerid}) return Kick(playerid);
	f(str_query, sizeof(str_query), "SELECT * FROM `Qelksekm` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
    mysql_pquery(mysql, str_query, "OnPlayerLoginMysql", "d", playerid);
    return 1;
}
stock Saveonlineinfo(playerid)
{
	if(!IsPlayerLogged{playerid}) return 0;
	new Day, Month, Year, Second, Minute, Hour;
	mysql_pqueryf(mysql, "DELETE FROM `OnlineInfo` WHERE `Name` = '%s'", PN(playerid));
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	mysql_pqueryf(mysql, "INSERT INTO `OnlineInfo` (`Name`, `IP`, `Second`, `Minute`, `Hour`, `Day`,`Month`,`Year`) VALUE ('%s','%s','%i','%i','%i','%i','%i','%i')", PN(playerid), PlayerIp[playerid], Second, Minute, Hour, Day, Month, Year);
	return 1;
}
stock IsARPPN(const Name[])
{
	if(strlen(Name)>19) return 0;
	if(!strlen(Name)) return 0;
	new simb_, num;
	static RP_Name[2][24];
	for(new i = 0;i < strlen(Name);i ++)
	{
	    if(Name[i] == '_') {simb_ ++; num=i;}
	}
	if(simb_ != 1) return 0;
	strmid(RP_Name[0], Name, 0, num-1);
	strmid(RP_Name[1], Name, num+1, strlen(Name));
	if( !IsAGoodPN(RP_Name[0]) || !IsAGoodPN(RP_Name[1]) ) return 0;
	return 1;
}
stock IsAGoodPN(const Name[])
{
	new NameChars;
	if(strlen(Name) < 2) return 0;
	if(Name[0] < 'A' || Name[0] > 'Z') return 0;
	for(new i = 1;i < strlen(Name);i ++)
	{
	    if(Name[i] < 'a' || Name[i] > 'z')
		{
		    if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
		    else return 0;
		}
	    if(NameChars > 1) return 0;
	}
	return 1;
}
stock IsAFireGun(gunid) return (gunid >= 22 && gunid <= 38);
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z)
{
	gpss[playerid]=1;
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 4.0);
	GameTextForPlayer(playerid, "GPS: ON", 0, 1);
	return 1;
}
stock CheckPointForPlayer(playerid, Float:x, Float:y, Float:z)
{
	gpss[playerid]=1;
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 4.0);
	return 1;
}
stock GetTeamID(playerid)
{
	if(PI[playerid][pMember] > 0) return PI[playerid][pMember];
	if(PI[playerid][pLeader] > 0) return PI[playerid][pLeader];
	return 0;
}
stock SetPlayerVehicleSpeed(vehicleid, mph)
{
	new Float:Vx, Float:Vy, Float:Vz ,Float:speeds, Float:multiple;
	GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
	speeds = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
	if(speeds > 0)
	{
		multiple = (mph / (speeds * 180));
		return SetVehicleVelocity(vehicleid, Vx*multiple, Vy*multiple, Vz*multiple);
	}
	return 1;
}
stock SetVehicleSpeed(vehicleid, speed_kmph)
{
	if(speed_kmph < 1) speed_kmph = 1;
	new Float: v[3], cur_speed_kmph;
	GetVehicleVelocity(vehicleid, v[0], v[1], v[2]);
	cur_speed_kmph = floatround(200.0 * floatsqroot( v[0]*v[0] + v[1]*v[1] + v[2]*v[2]), floatround_floor);
	if(cur_speed_kmph <= 0)
	{
		new Float: zAngle;
		GetVehicleZAngle(vehicleid, zAngle);
		new Float: newVelX = floatcos((zAngle -= 270.0), degrees ) * speed_kmph / 200.0;
		SetVehicleVelocity(vehicleid, newVelX, floattan(zAngle,degrees) * newVelX, 0.0);
		return;
	}
	new Float:vMultiplier = float(speed_kmph) / float(cur_speed_kmph);
	SetVehicleVelocity(vehicleid, v[0] * vMultiplier, v[1] * vMultiplier, v[2] * vMultiplier);
}
stock GetPlayerVehicleSpeedZ(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return 1;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y) * 180.0 );
}
stock GetPlayerVehicleSpeed(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return 1;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 180.0 );
}
stock PlayerSpeed(playerid)
{
    new Float:X, Float:Y, Float:Z;
    if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
    return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}
stock CheckPassengers(vehicleid) for(new i; i < 10; i ++) if(VehicleSeat[vehicleid][i] != INVALID_PLAYER_ID && !IsPlayerInVehicle(VehicleSeat[vehicleid][i], vehicleid)) VehicleSeat[vehicleid][i] = INVALID_PLAYER_ID;
stock GetVehicleState(vehicleid) return VehicleState[vehicleid];
stock GetVehicleModelEx(carid) return vTemp[carid][vModel];
stock AutoCarSpawn()
{
	foreach(new i: Player)
	{
		if(!PI[i][pRespawnChat])
		{
			SCM(i, COLOR_LIGHTRED, !"[Сервер]{FFFFFF} Уважаемые игроки!");
		    SCM(i, COLOR_LIGHTRED, !"[Сервер]{FFFFFF} Через 60 секунд произойдет респаун транспорта!");
		    SCM(i, COLOR_LIGHTRED, !"[Сервер]{FFFFFF} Займите автомобили, чтобы они не пропали");
		    GameTextForPlayer(i, !"RESPAWN CARS 60 SEC", 0, 1);
		}
	}
    return SetTimer("AutoCarSpawnStart", 60000, false);
}
stock SetBumSkin(playerid)
{
	SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
	return TogglePlayerControllable(playerid,true);
}
stock CheckGas(carid)
{
	if(!IsAVelik(carid) && !Isamoped(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetEngineStatus(carid))
	{
		if(vTemp[carid][Fuel] > 0.0)
		{
			vTemp[carid][Fuel] -= 0.1;
			if(vTemp[carid][Fuel] <= 0.0)
			{
				SetEngineStatus(carid, false, -1);
				NoVehicleFuel(carid);
				vTemp[carid][Fuel] = 0.0;
			}
		}
	}
	return 1;
}
stock PayDayer()
{
	new currenttime = GetTickCount();
	new currenttime2 = currenttime;
	for(new i; i < GLS[40]; i++) PlayersSalary();
	printf("PayDayer (PlayersSalary) загрузился за %i ms", GetTickCount() - currenttime);
	currenttime = GetTickCount();
	PayDay();
	printf("PayDayer (PayDay) загрузился за %i ms", GetTickCount() - currenttime);
	currenttime = GetTickCount();
	SaveInforamtion();
	printf("PayDayer (SaveInforamtion) загрузился за %i ms", GetTickCount() - currenttime);
	printf("PayDayer загрузился за %i ms", GetTickCount() - currenttime2);
	return true;
}
stock PlayersSalary()
{
	foreach(new i: Player)
	{
		new currenttime = GetTickCount();
	    if(IsPlayerLogged{i})
	    {
	        if(PI[i][pFamilyMember] >= 0) CheckFamilyHouse(i);
	        printf("PlayersSalary (1) загрузился за %i ms", GetTickCount() - currenttime);
         	if(PI[i][pPlayedTime] >= 1200 || GLS[40] > 1)
			{
	   			new Bank, VIP = PI[i][pVIP];
		        if(GLS[23])
		        {
		        	if(PI[i][pFamilyMember] >= 0)
		        	{
		            	if(FamilyInfo[PI[i][pFamilyMember]][famRespect] == 1) PI[i][pExp] += 3;
		        	}
		            else PI[i][pExp] += 2;
		        }
		        else
		        {
		        	if(PI[i][pFamilyMember] >= 0)
		        	{
		            	if(FamilyInfo[PI[i][pFamilyMember]][famRespect] == 1)PI[i][pExp] += 2;
		        	}
		            else PI[i][pExp] ++;
		        }
		        printf("PlayersSalary (2) загрузился за %i ms", GetTickCount() - currenttime);
	        	if(!PI[i][pCredit])
	        	{
	        	    if((PI[i][pMoney] + PI[i][pBank]) < 5000000)
	        	    {
				        switch(VIP)
				        {
				            case STATUS_NONE: Bank = floatround(float(PI[i][pBank]) / 1200.0);
				            case STATUS_VIP: Bank = floatround(float(PI[i][pBank]) / 900.0);
				            case STATUS_GOLD: Bank = floatround(float(PI[i][pBank]) / 800.0);
				            case 3:
				            {
				                PI[i][pExp] += 1;
								Bank = floatround(float(PI[i][pBank]) / 800.0);
				            }
				            case 4:
				            {
				                PI[i][pExp] += 1;
								Bank = floatround(float(PI[i][pBank]) / 700.0);
				            }
						}
					}
					printf("PlayersSalary (3) загрузился за %i ms", GetTickCount() - currenttime);
			        switch(VIP)
			        {
			            case STATUS_NONE: Bank = floatround(float(PI[i][pBank]) / 1300.0);
			            case STATUS_VIP: Bank = floatround(float(PI[i][pBank]) / 1200.0);
			            case STATUS_GOLD: Bank = floatround(float(PI[i][pBank]) / 1100.0);
			            case 3:
			            {
			                PI[i][pExp] += 1;
							Bank = floatround(float(PI[i][pBank]) / 1050.0);
			            }
			            case 4:
			            {
			                PI[i][pExp] += 1;
							Bank = floatround(float(PI[i][pBank]) / 1000.0);
			            }
					}
					printf("PlayersSalary (4) загрузился за %i ms", GetTickCount() - currenttime);
				}
				else
				{
					if(PI[i][pCredit] > 150000 && PI[i][pWanted] < 6)
					{
						PI[i][pWanted] ++;
						J_SetPlayerWantedLevel(i, PI[i][pWanted]);
						SCM(i, COLOR_RED, !"Вы попали в розыск за неоплату кредита!");
					}
					printf("PlayersSalary (5) загрузился за %i ms", GetTickCount() - currenttime);
			        SCMf(i, -1, "Кредитная ставка %i процент [+%i]", GLS[0], ((PI[i][pCredit] * GLS[0]) / 100) / 25);
			        PI[i][pCredit] += floatround((float(PI[i][pCredit] * GLS[0]) / 100) / 25);
			        UpdatePlayerDataInt(i, "Credit", PI[i][pCredit]);
				}
				printf("PlayersSalary (6) загрузился за %i ms", GetTickCount() - currenttime);
			    if(PI[i][pAdmin] > 0)
			    {
			    	PI[i][pVirMoney] += 1;
			    	UpdatePlayerDataInt(i, "VirMoney", PI[i][pVirMoney]);
			    }
			    printf("PlayersSalary (7) загрузился за %i ms", GetTickCount() - currenttime);
				new money;
				SCM(i, COLOR_VALIK, !"__________Банковский чек__________");
				if(GetTeamID(i) > 0 && TeamDuty{i})
				{
					money += OrgSalary[GetTeamID(i)][PI[i][pRank]];
					SCMf(i, -1, "{9ACD32}Организационная зарплата: $%i", OrgSalary[GetTeamID(i)][PI[i][pRank]]);
				}
				else if(IsAtFrakcia(i) && !TeamDuty{i}) SCM(i, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы не получили зарплату с организации, так как вы сейчас не в рабочей форме!");
	            printf("PlayersSalary (8) загрузился за %i ms", GetTickCount() - currenttime);
	            new deposit;
	            if(PI[i][pVIP] < 4) deposit = floatround(float(PI[i][pDeposit]) * 0.001);
	            else deposit = floatround(float(PI[i][pDeposit]) * 0.0008);
	            printf("PlayersSalary (9) загрузился за %i ms", GetTickCount() - currenttime);
	            if(PI[i][pMember] == TEAM_BIKERS)
	            {
	            	InvAdd(i, Item_Skull, 1, 0);
	            	aml(101, i, "", "PayDay (Байкер)", Item_Skull, 1);
	            }
	            printf("PlayersSalary (10) загрузился за %i ms", GetTickCount() - currenttime);
	            if(PI[i][pDepositChar])
	            {
	            	PI[i][pDepositChar] --;
	            	UpdatePlayerDataInt(i, "DepositChar", PI[i][pDepositChar]);
	            }
	            printf("PlayersSalary (11) загрузился за %i ms", GetTickCount() - currenttime);
	            if(PI[i][pDepositChar2])
	            {
	            	PI[i][pDepositChar2] --;
	            	UpdatePlayerDataInt(i, "DepositChar2", PI[i][pDepositChar2]);
	            }
	            printf("PlayersSalary (12) загрузился за %i ms", GetTickCount() - currenttime);
				SCMf(i, -1, "Депозит в банке: $%i", deposit);
				money += Bank;
				SCMf(i, -1, "Сумма к выплате: $%i", money);
				PI[i][pBank] += money;
				UpdatePlayerDataInt(i, "Bank", PI[i][pBank]);
				SCMf(i, -1, "Текущая сумма в банке: $%i", PI[i][pBank]);
				PI[i][pDeposit] += deposit;
				UpdatePlayerDataInt(i, "Deposit", PI[i][pDeposit]);
				SCMf(i, -1, "Текущая сумма на депозите: $%i", PI[i][pDeposit]);
				printf("PlayersSalary (13) загрузился за %i ms", GetTickCount() - currenttime);
				switch(PI[i][pVIP])
				{
					case 4:
					{
						PI[i][pVirMoney] += 1;
						UpdatePlayerDataInt(i, "VirMoney", PI[i][pVirMoney]);
					}
					case 5: 
					{
						PI[i][pVirMoney] += 1000;
						UpdatePlayerDataInt(i, "VirMoney", PI[i][pVirMoney]);
					}
				}
				printf("PlayersSalary (14) загрузился за %i ms", GetTickCount() - currenttime);
				SCMf(i, -1, "На данный момент у вас %i-й уровень и %i/%i респектов", PI[i][pLevel], PI[i][pExp], (PI[i][pLevel] + 1) * 4);
				if(PI[i][pWanted] > 0)
				{
					PI[i][pWanted] --;
					J_SetPlayerWantedLevel(i, PI[i][pWanted]);
					SCMf(i, -1, "Уровень розыска: -1 (%i)", PI[i][pWanted]);
					printf("PlayersSalary (15) загрузился за %i ms", GetTickCount() - currenttime);
				}
				else
				{
					if(PI[i][pZKP] < 100)
					{
						PI[i][pZKP] ++;
						UpdatePlayerDataInt(i, "ZKP", PI[i][pZKP]);
						SCMf(i, -1, "Законопослушность: +1 (%i)", PI[i][pZKP]);
					}
					printf("PlayersSalary (16) загрузился за %i ms", GetTickCount() - currenttime);
					if(PI[i][pZKP] >= 50)
					{
						if(PI[i][pBL] == 1)
						{
							PI[i][pBL] = 0;
							UpdatePlayerDataInt(i, "BlackList", 0);
							SCM(i, -1, !"Вы набрали 50 очков законопослушности и были автоматически удалены из ЧС");
						}
					}
					printf("PlayersSalary (17) загрузился за %i ms", GetTickCount() - currenttime);
				}
				SCM(i, COLOR_VALIK, !"__________________________________");
				GameTextForPlayer(i, !"~y~PAYDAY", 3000, 1);
				printf("PlayersSalary (18) загрузился за %i ms", GetTickCount() - currenttime);
				if(PI[i][pCredit] > 0 && PI[i][pVIP] > 0) SCM(i, COLOR_RED, !"Приемущества VIP не действуют, так как вы имеете долг в центральном банке!");
				CheckNextLevel(i);
				printf("PlayersSalary (19) загрузился за %i ms", GetTickCount() - currenttime);
			}
			else if(PI[i][pPlayedTime] < 1200)
			{
                SCM(i, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для получения PayDay вы должны отыграть минимум 20 минут.");
				SCMf(i, -1, "Вы отыграли только %i минут без АФК.", floatround(float(PI[i][pPlayedTime]) / 60.0));
				PI[i][pPlayedTime] = 0;
			}
			printf("PlayersSalary (20) загрузился за %i ms", GetTickCount() - currenttime);
			if(Ruslan_Razdasha)
			{
				PI[i][pDonateMoney] += 3;
				PI[i][pVirMoney] += 100000;
				UpdatePlayerDataInt(i, "VirMoney", PI[i][pVirMoney]);
				UpdatePlayerDataInt(i, "DonateMoney", PI[i][pDonateMoney]);
				InvAdd(i, 776, 10000);
			}
			printf("PlayersSalary (21) загрузился за %i ms", GetTickCount() - currenttime);
			SavePlayer(i);
			printf("PlayersSalary (22) загрузился за %i ms", GetTickCount() - currenttime);

			PI[i][pPlayedTime] = 0;
		}
		else SCM(i, -1, !"Вы не авторизированы для получения зарплаты");
	}
}
stock PayDay()
{
	switch(random(2))
	{
		case 0: GLS[68] = GLS[68] - randomEx(1, 2001);
		case 1: GLS[68] = GLS[68] + randomEx(1, 2001);
	}
	if(GLS[68] < 5000) GLS[68] = 10000 + randomEx(1, 2001);
	if(!GLS[69]) GLS[69] = random(1000000);
	AmountMiningVideoCard += 5+random(10);
	f(str_2,sizeof(str_2),"{FFFFFF}\t\tПолучение кредитa\nКредитная ставка {9ACD32}%i{FFFFFF} процента(ов).\nПолучить кредит или начать работу с {9ACD32}депозитом{FFFFFF},\n(Получить/Снять деньги) можно через сотрудника банка!\n\n\tФонд премии инкасаторам: {9ACD32}0${FFFFFF}\nВыделеная премия на одного работника: {9ACD32}0${FFFFFF}\n\n\t\t\t{FFFF00}КУРС ЕВРО: {FFFFFF}%i$",GLS[0],GLS[68]);
	UpdateDynamic3DTextLabelText(cretits,-1,str_2);
	
	new forcount = MuchNumber(OWNABLEHOUSES, OWNABLEBIZES, MAX_TRASH, GANGZONES);
	for(new j;j < forcount;j ++)
	{
		if(j < OWNABLEHOUSES)
		{
			new houseid = j, bool:sell;
			if(!GetString(HouseInfo[houseid][hOwner], "The State"))
			{
				HouseInfo[houseid][hNalog] += GLS[2];
				if(HouseInfo[houseid][hNalog] > 52000)
				{
					new bool: qu = true, bool: bu = true;
					foreach(new p: Player)
					{
						for(new i; i < HouseRooms[GetHouseStyle(houseid)]; i++)
						{
							if(GetString(HRoomOwner[houseid][i], PN(p)))
							{
								PI[p][pDCTime] = 0;
								UpdatePlayerDataInt(p, "DCTime", 0);
								new id = GetPlayerFirstHouse(p);
								PI[p][pHouseSpawn] = id;
								UpdatePlayerDataInt(p, "HouseSpawn", id);
								bu = false;
								SCM(p, COLOR_BLUE, !"За неоплату счетов владельцем дома, вы были с него выселены!");
							}
						}
						if(GetString(HouseInfo[houseid][hOwner], PN(p)))
						{
							SCM(p, COLOR_BLUE, !"За неоплату счетов у вас отобрали дом!");
							new cost = HouseInfo[houseid][hCost]/2;
							GiveMoney(p, cost);
							aml(51, p, "", "неоплату счетов дома", cost);
							DeletePlayerHouse(p, houseid);
							new id = GetPlayerFirstHouse(p);
							PI[p][pHouseSpawn] = id;
							UpdatePlayerDataInt(p, "HouseSpawn", id);
							PI[p][pDCTime] = 0;
							UpdatePlayerDataInt(p, "DCTime", 0);
							qu = false;
						}
					}
		            if(bu)
					{
					    for(new i; i < HouseRooms[GetHouseStyle(houseid)]; i++)
						{
						    if(!GetString(HRoomOwner[houseid][i], "The State")) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `HouseSpawn` = '-1', `DCTime` = '0' WHERE `NickName` = '%s'", HRoomOwner[houseid][i]);
						}
					}
		            for(new i; i < HouseRooms[GetHouseStyle(houseid)]; i++) SetString(HRoomOwner[houseid][i], "The State");
					if(qu)
					{
						if(HouseInfo[houseid][hLevel] == 10) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `VirMoney` = `VirMoney` + '%i' WHERE `NickName` = '%s'", HouseInfo[houseid][hCost], HouseInfo[houseid][hOwner]);
						else mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Money` = `Money` + '%i' WHERE `NickName` = '%s'", HouseInfo[houseid][hCost], HouseInfo[houseid][hOwner]);
					}
					SetString(HouseInfo[houseid][hOwner], "The State");
				    HouseInfo[houseid][hNalog] =
				    HouseInfo[houseid][hNalog2] = 0;
				    sell = true;
		     	}
		     	if(HouseInfo[houseid][hMiningPodval] && sell == false)
        		{
            		for(new i; i < 5; i++)
		            {
		                for(new s; s < 4; s++)
		                {
							new total = GetMiningMenenger(i+1, s);
		                    if(HouseInfo[houseid][hMiningStatus][total] == true && HouseInfo[houseid][hMiningLevel][total] != 0)
							{
								if(HouseInfo[houseid][hMiningState][total] >= 1.0)
								{
		                        	HouseInfo[houseid][hMiningState][total] -= 1.0;
		                        	if(HouseInfo[houseid][hMiningState][total] < 1.0) HouseInfo[houseid][hMiningStatus][total] = false, SaveMining(houseid, 0);
		                        	HouseInfo[houseid][hMiningProfit][total] += 0.029750 * HouseInfo[houseid][hMiningLevel][total];
		                        	SaveMining(houseid, 3), SaveMining(houseid, 1);
								}
							}
		                }
		            }
        		}
		    }
	     	UpdateHouse(houseid);
		}
		if(j < OWNABLEBIZES)
		{
			new bizid = j;
		   	if(!GetString(BizInfo[bizid][bOwner], "The State"))
		   	{
			    BizInfo[bizid][bNalog] += GLS[3];
				BizInfo[bizid][bNum] ++;
				if(BizInfo[bizid][bNum] > 23)
			    {
			        BizInfo[bizid][bNum] =
			        BizInfo[bizid][bVisit] =
			        BizInfo[bizid][bWin] = 0;
			    }
			    if(BizInfo[bizid][bNalog] > 100000)
			    {
			        new bool: qu = true;
			        foreach(new p: Player)
			        {
						if(GetString(BizInfo[bizid][bOwner], PN(p)))
						{
						    SCM(p, COLOR_BLUE, !"За неоплату счетов у вас отобрали бизнес/предприятие!");
						    new cost = BizInfo[bizid][bCost]/2;
						    GiveMoney(p, cost);
						    aml(51, p, "", "неоплату счетов бизнеса", cost);
					        qu = false;
					        break;
						}
					}
					if(qu) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Money` = `Money` + '%i' WHERE `NickName` = '%s'", BizInfo[bizid][bCost], BizInfo[bizid][bOwner]);
					SetString(BizInfo[bizid][bOwner], "The State");
					SetString(BizInfo[bizid][bZam], "The State");
					SetString(BizInfo[bizid][bDescription], "");
				    BizInfo[bizid][bNalog] = 0;
			    }
			    UpdateBiz(bizid);
			}
		}
		if(j < MAX_TRASH)
		{
		    if(MusorCount[j] < 100)
		    {
				MusorCount[j] += 20;
				f(str_1, 50, "Загружено: %i/100%", MusorCount[j]);
				UpdateDynamic3DTextLabelText(MusorText[j], 0xAFAFAFFF, str_1);
			}
		}
		if(j < GANGZONES) if(GZInfo[j][gzFracID] > 0) OrgInfo[GZInfo[j][gzFracID]][oBank] += 650;
	}
	foreach(new number: OWNABLECARS)
	{
		if(GetString(CarInfo[number][cOwner], "The State")) continue;
		SaveOwnableCar(number);
		new playerid = GetPlayerID(CarInfo[number][cOwner]);
		if(!CarInfo[number][cParkedInGarage] && !CarInfo[number][cParkedInParking])
		{
			new nalog = GLS[1];
			if(IsAOwnableInParking(number)) nalog = GLS[1]*3;
			if(!CarInfo[number][cShtraf])
			{
				CarInfo[number][cShtrafer] += nalog;
				SaveOwnableCar(number);
			}
			else
			{
				CarInfo[number][cShtraf] += nalog;
				SaveOwnableCar(number);
			}
		}
		if(CarInfo[number][cShtraf] > 60000 || CarInfo[number][cShtrafer] > 35000)
		{
			SCM(playerid, COLOR_BLUE, !"За неоплату счетов у вас отобрали личный автомобиль!");
			new cost = CarInfo[number][cCost]/2;
			GiveMoney(playerid, cost);
			aml(51, playerid, "", "неоплату счетов Т/С", cost);
			SellCar(number, number, playerid);
		}
	}
	return 1;
}
stock CheckFamilyHouse(playerid)
{
	if(PI[playerid][pFamilyMember] == -1) return false;
    if(FamilyInfo[PI[playerid][pFamilyMember]][famHouse])
    {
        if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] >= 10) FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 5;
        else
        {
		    SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Новости Семьи]{FFFFFF} Из - за маленького количества репутаций, семейная квартира была продана", FamColor);
		    FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus] = 0;
		 	TSave(pFamHouse, "FamilyHouse", "StatusLock", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus], "d");
			strmid(FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhOwner], "The State", 0, strlen("The State"), 15);
			TSave(pFamHouse, "FamilyHouse", "Owner", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhOwner], "s");
			FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth] = 0;
			TSave(pFamHouse, "FamilyHouse", "Health", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth], "d");
			FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour] = 0;
			TSave(pFamHouse, "FamilyHouse", "Armour", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour], "d");
			UpdateFamHouse(FamilyInfo[PI[playerid][pFamilyMember]][famHouse]);
			FamilyInfo[PI[playerid][pFamilyMember]][famHouse] = 0;
			TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "house", FamilyInfo[PI[playerid][pFamilyMember]][famHouse], "d");
        }
    }
    return true;
}
stock CheckNextLevel(playerid)
{
	new expamount = (PI[playerid][pLevel] + 1)*4;
	if(PI[playerid][pExp] >= expamount)
	{
		for(new i = expamount; i <= PI[playerid][pExp]; i++)
		{
			PI[playerid][pLevel] ++;
			PI[playerid][pExp] -= expamount;
			if(PI[playerid][pLevel] == 3)
			{
				static str[79];
			    f(str, sizeof(str), "SELECT `Referal` FROM `Qelksekm` WHERE `NickName` = '%s'", PN(playerid));
			    mysql_pquery(mysql, str, "MysqlReferalCheck", "d", playerid);
			}
		}
		SetPlayerScore(playerid, PI[playerid][pLevel]);
		SCMf(playerid, COLOR_VALIK, "Поздравляю! Вы достигли %i-го уровня!", PI[playerid][pLevel]);
		UpdatePlayerDataInt(playerid, "Level", PI[playerid][pLevel]);
		UpdatePlayerDataInt(playerid, "Exp", PI[playerid][pExp]);
		if(PI[playerid][pFamilyMember] >= 0)
		{
		    FamilyInfo[PI[playerid][pFamilyMember]][famEXP] ++;
		    if(FamilyInfo[PI[playerid][pFamilyMember]][famEXP] == FamilyInfo[PI[playerid][pFamilyMember]][famLevel]*10)
		    {
		        FamilyInfo[PI[playerid][pFamilyMember]][famEXP] = 0;
		        FamilyInfo[PI[playerid][pFamilyMember]][famLevel] ++;//{%s}[Семья (Новости)] %s[%i]:{FFFFFF} выполнил ежедневное задание, семья получила 3EXP и репутацию!
				TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "Level", FamilyInfo[PI[playerid][pFamilyMember]][famLevel], "d");
				SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Новости Семьи]{FFFFFF} Поздравляем! Уровень нашей семьи повышен до {66FF99}%i.", FamColor, FamilyInfo[PI[playerid][pFamilyMember]][famLevel]);
		    }
		    TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "EXP", FamilyInfo[PI[playerid][pFamilyMember]][famEXP], "d");
		    SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Новости Семьи]{FFFFFF} Член семьи: %s[%i] достиг %i уровня. В семью начислен опыт.", FamColor, PN(playerid), playerid, PI[playerid][pLevel]);
		}
		return 1;
	}
	return 0;
}
stock IsVehicleConnected(vehicleid) return (GetVehicleModelEx(vehicleid) != 0);
stock cPN(playerid)
{
 	static name[MAX_PLAYER_NAME] = "Аноним";
	if(!PI[playerid][pMaskON]) return PlayerName[playerid];
	return name;
}
stock SendAdminsMessage(color, const text[]) foreach(new i: Admin) SCM(i, color, text);
stock PlayerIP(playerid) return PlayerIp[playerid];
stock CheckPlayerBanEx(playerid)//бан по железу
{
	static reason[30], admin[MAX_PLAYER_NAME], date[22], GPCI2[100];

	gpci(playerid, GPCI2);

	static fmt_str[] = "SELECT * FROM `BanEx` WHERE `GPCI` = '%s' LIMIT 1";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24 + 100, fmt_str, GPCI2);
	new Cache:result = mysql_query(mysql, str_3);
	new num = cache_num_rows();

	if(num)
	{
	    cache_get_value_name(0, 1, admin, mysql);
	    cache_get_value_name(0, 2, reason, mysql);
		cache_get_value_name(0, 4, date);
	}
	cache_delete(result);
	ac_ShowPlayerDialog(playerid, 0);
	if(num) return ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Вы были занесены в черный список проекта!", !"Ок", !"", "{FFFFFF}Вы в\n{FF0000}черном списке проекта\n{FFFFFF}по причине: %s\nадминистратором: %s\nдата блокировки: %s\nподать заявку можно : "FORUM"/", reason, admin, date);
	return 0;
}
stock CheckPlayerBanIP(playerid)
{
	static fmt_str[] = "SELECT * FROM `BanIP` WHERE `IP` = '%s' LIMIT 1";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 16, fmt_str, PlayerIP(playerid));
	new Cache:result = mysql_query(mysql, str_3);
	new num = cache_num_rows();
	cache_delete(result);
	if(num)
	{
	    SCM(playerid, COLOR_LIGHTRED, !"Данный IP заблокирован на нашем сервере!");
		Kick(playerid);
	}
}
stock BanPlayer(playerid)
{
	BanName(PN(playerid),"который выдал варн в оффлайне",5,"Заблокирован за получение 3-ех варнов");
	return J_Kick(playerid);
}
stock IsBannedName(name[])
{
	static fmt_str[] = "SELECT `Name` FROM `BanNames` WHERE BINARY `Name` = '%s' LIMIT 1";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, name);
	new Cache:result = mysql_query(mysql, str_3);
	new num = cache_num_rows();
	cache_delete(result);
	return num;
}
stock BanName(name[], namez[], days, reason[]) mysql_pqueryf(mysql, "INSERT INTO `BanNames` (`Name`, `BanAdmin`, `BanSeconds`, `BanReason`) VALUE ('%s', '%s', '%i', '%s')",name, namez, gettime()+days*60*60*24, reason);

stock BanNameEx(id, namez[], reason[])
{
	static GPCI[100];
	gpci(id, GPCI);
	mysql_pqueryf(mysql, "INSERT INTO `BanEx` (`GPCI`, `Admin`, `Reason`) VALUE ('%s', '%s', '%s')", GPCI, namez, reason);
}


stock BanIP(IP[]) mysql_pqueryf(mysql, "INSERT INTO `BanIP` (`IP`) VALUE ('%s')", IP);
stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) f(string, 30, "%i:%02i:%02i", hours, mins, secs);
	else f(string, 30, "%i:%02i", mins, secs);
	return string;
}
stock UnBanName(name[])
{
	if(IsBannedName(name)) mysql_pqueryf(mysql, "DELETE FROM `BanNames` WHERE BINARY `Name` = '%s'", name);
	return 1;
}
stock CarryAnim(playerid) return ApplyAnimation(playerid, "CARRY", "CRRY_PRTIAL", 4.1, 0, 1, 1, 1, 1, 1);
stock IsAZavodSkin(playerid)
{
	new skin = GetPlayerSkin(playerid);
	return (skin == 259 || skin == 260);
}
stock PlayerCureSpawn(playerid)
{
	pTemp[playerid][TimeHeal] = 0;
	TimeSelect[playerid] = false;
	TimeSelectDoctor[playerid] = false;
	TimeHealDied[playerid] = false;
	PlayerLieHeal[playerid] = false;
	DestroyDynamic3DTextLabel(DiedText[playerid]);
	if(!PI[playerid][pHeal]) PlayerHospital(playerid);
	return true;
}
stock TimerCarPlayer(playerid)
{
	if(GetPlayerState(playerid) == 2)
	{
		GrandEndOK=6001;
	    new carid = GetPlayerVehicleID(playerid);
	    new speed = GetPlayerVehicleSpeed(playerid);
	    //new model = GetVehicleModelEx(carid);
	    GrandEndOK=6002;
		if(GetVehicleModel(carid) != 494 && GetVehicleModel(carid) != 433 && GetVehicleModel(carid) != 548)
		{
		    new Float:hpveh;
			GetVehicleHealth(carid, hpveh);
		    if(hpveh < 300.0) J_SetVehicleHealth(carid, 350.0);
	    }
	    GrandEndOK=6003;
	    if(pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarCarID] == carid) J_SetVehicleHealth(carid, 1500.0);
		GrandEndOK=6005;
		if(speed > 10)
		{
			GrandEndOK=6006;
			new Float:distance;
			GrandEndOK=6007;
			if(speed < 50) distance = 0.7;
			else
			{
				GrandEndOK=6008;
				distance = speed/50;
				distance += float(GetPlayerPing(playerid)) / 100;
			}
			GrandEndOK=6009;
			new Float:x[2], Float:y[2], Float:z[2], Float:sX[2], model = GetVehicleModel(carid);
			GetVehicleModelInfo(GetVehicleModelBogdan(model), VEHICLE_MODEL_INFO_WHEELSFRONT, x[0], y[0], z[0]);
			GetVehicleModelInfo(GetVehicleModelBogdan(model), VEHICLE_MODEL_INFO_WHEELSREAR, x[1], y[1], z[1]);
			GetVehicleShiftPos(carid, 0, x[0], y[0], z[0], sX[0]);
			GetVehicleShiftPos(carid, 1, x[1], y[1], z[1], sX[1]);
			GrandEndOK=6008;
			z[0] -= 0.5, z[1] -= 0.5;
			new c_panels, c_doors, c_lights, c_tires, set_tires;
			GetVehicleDamageStatus(carid, c_panels, c_doors, c_lights, c_tires);
			GrandEndOK=6009;
			for(new i;i < StripCount;i ++)
			{
				GrandEndOK=6010;
			    if(i != NoStrip[playerid])
			    {
			    	GrandEndOK=6011;
				    if(c_tires < 15)
					{
						GrandEndOK=6012;
						if(PointToPoint(x[0],y[0],z[0],TStripPos[i][0],TStripPos[i][1],TStripPos[i][2]) <= distance)
						{
							GrandEndOK=6013;
						    switch(c_tires)
						    {
						        case 0, 2, 8:	set_tires = 10;
						        case 1, 3, 9: 	set_tires = 11;
                                case 4, 6,12: 	set_tires = 14;
                                case 5, 7,13: 	set_tires = 15;
                                default: continue;
						    }
						    GrandEndOK=6014;
						    if(c_tires != set_tires) UpdateVehicleDamageStatus(carid, c_panels, c_doors, c_lights, set_tires);
							GrandEndOK=6015;
						}
						GrandEndOK=6016;
						if(PointToPoint(x[1],y[1],z[1],TStripPos[i][0],TStripPos[i][1],TStripPos[i][2]) <= distance)
						{
							GrandEndOK=6017;
						    switch(c_tires)
						    {
						        case  0, 1, 4:	set_tires = 5;
						        case  2, 3, 6:	set_tires = 7;
						        case  8, 9,12:	set_tires = 13;
						        case 10,11,14:	set_tires = 15;
						        default: continue;
						    }
						    GrandEndOK=6018;
						    if(c_tires != set_tires) UpdateVehicleDamageStatus(carid, c_panels, c_doors, c_lights, set_tires);
							GrandEndOK=6019;
						}
					}
				}
			}
        }
		if(GetEngineStatus(carid))
		{
			GrandEndOK=6020;
            if(Signal[carid])
			{
				GrandEndOK=6021;
			    new Float:LAngle,Float:a;
		        GetVehicleZAngle(carid, a);
		        GrandEndOK=6022;
				LAngle = jfloatsub(a, SignalAngle[carid]);
				GrandEndOK=6023;
				if(SignalTick[carid][1] >= 0)
				{
					GrandEndOK=6024;
				    SignalTick[carid][1] --;
				    GrandEndOK=6025;
    		 		if(!SignalTick[carid][1])
					{
						GrandEndOK=6026;
						Signal[carid] = 0;
						DestroyDynamicObject(LightsObject[carid][0]);
						DestroyDynamicObject(LightsObject[carid][1]);
						LightsObject[carid][0] = -1;
						LightsObject[carid][1] = -1;
						GrandEndOK=6027;
					}
					GrandEndOK=6028;
				}
				else if( LAngle >= 50.0 ) SignalTick[carid][1] = 20;
				GrandEndOK=6029;
				SignalTick[carid][0] ++;
				if(SignalTick[carid][0] > 17) SignalTick[carid][0] = 0;
				GrandEndOK=6030;
			}
			if(!IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetPVarInt(playerid, !"pSpeed"))
			{
			    GrandEndOK=6047;
			    if(TwinTurbo[carid][Engine])
			    {
			    	GrandEndOK=6048;
                    if(TwinTurbo[carid][cStatus] && pEngine{playerid})
		            {
		            	GrandEndOK=6049;
					    new GetVehSpeed = GetPlayerVehicleSpeedZ(playerid);
					    GrandEndOK=6050;
			    		if(GetVehSpeed-1 < pTemp[playerid][PT_AntiFlood]) pTemp[playerid][PT_AntiFlood] = GetVehSpeed;
			    		GrandEndOK=6051;
		                if(GetVehSpeed > pTemp[playerid][PT_AntiFlood])
		                {
		                	GrandEndOK=6052;
		                    new Float:limit = float(GetVehicleMaxSpeed(carid));
		                    GrandEndOK=6053;
                            if(speed > 61.0 && speed < 89.0) SetVehicleSpeed(carid, GetVehSpeed + random(3)+10);
           	                else if(speed > 90.0 && speed < 120.0) SetVehicleSpeed(carid, GetVehSpeed + random(3)+20);
			                else if(speed > 121.0 && speed < 150.0) SetVehicleSpeed(carid, GetVehSpeed + random(3)+25);
		                 	else if(speed > 160.0 && speed < limit)
				    		{
				    			GrandEndOK=6054;
		                		SetVehicleSpeed(carid, floatround(limit) + random(3)+40);
		                        pTemp[playerid][PT_AntiFlood] = GetVehSpeed+1;
	                		}
	                		GrandEndOK=6055;
        		    	}
        		    	GrandEndOK=6056;
		            }
		            GrandEndOK=6057;
		        }
		        GrandEndOK=6058;
		        new number = GetVehicleID(carid);
		        GrandEndOK=6059;
				if(IsAOwnableCar(number))
				{
					GrandEndOK=6060;
				    vTemp[carid][VehicleMilage] += float(speed)/20.0;
				    GrandEndOK=6061;
				    if(vTemp[carid][VehicleMilage] >= 3000.0)
				    {
				    	GrandEndOK=6062;
				        vTemp[carid][VehicleMilage] = 0.0;
					    CarInfo[number][cMilage] += 1.0;
					    GrandEndOK=6063;
					    f(str_2, 30, "%08.0f", CarInfo[number][cMilage]);
						PlayerTextDrawSetString(playerid, speeddraw[playerid][6], str_2);
						GrandEndOK=6064;
						if(CarInfo[number][cMilage] > 700.0)
					    {
					    	GrandEndOK=6065;
					        switch(random(76))
							{
							    case 0..55: SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Двигатель этой машины необходимо отремонтировать. Возможна поломка машины! ((Используйте /gps важные места - автомастерская))");
								case 56..60:
								{
								    SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас задымился двигатель! Почините двигатель у механика и отремонтируйте двигатель.((Используйте /gps важные места - автомастерская))");
								    J_SetVehicleHealth(carid, 250);
								}
								case 61..75: SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Двигатель этой машины необходимо отремонтировать. Возможна поломка машины! ((Используйте /gps важные места - автомастерская))");
							}
							GrandEndOK=6066;
					    }
					    GrandEndOK=6067;
				    }
				    GrandEndOK=6068;
				}
				GrandEndOK=6069;
			}
			GrandEndOK=6070;
		}
		GrandEndOK=6071;
	}
	return true;
}
forward BogdanTimer(playerid);
public BogdanTimer(playerid)
{
	if(playerid >= MAX_PLAYERS) return 0;
	new currenttime = GetTickCount();
	//CheckWeapons(playerid);
	//Ниже код который будет выполнятся раз в 1000 мс
	if(govtime[playerid] < gettime()) govtime[playerid] = 0;
	if(vadtime[playerid] < gettime()) vadtime[playerid] = 0;
	
	if(VadAdvert[playerid] > 0) VadAdvert[playerid]--;
	else if(VadAdvert[playerid] == 0) {
	    new stringg[256];
        GetPVarString(playerid, "vadtext", stringg, sizeof(stringg));
        if(!PI[playerid][pTelNum]) SendClientMessageToAll(0xFFD700FF, stringg);
        else if(PI[playerid][pTelNum]) {
            SendClientMessageToAll(0xFFD700FF, stringg);
            SendClientMessageToAllf(0xFFD700FF, "Телефонный номер: %d.", PI[playerid][pTelNum]);
		}
        
        VadAdvert[playerid] = -1;
        DeletePVar(playerid, "stringg");
	}
	
	if(PI[playerid][pMuteTime] > 0)
	{
		PI[playerid][pMuteTime] --;
		if(!PI[playerid][pMuteTime])
		{
			GrandEndOK=7193;
			SCM(playerid, COLOR_VALIK, !"Вы были автоматически разглушены сервером.");
			//SvMutePlayerDisable(playerid); //Войс
		}
	}
	if(PI[playerid][pFMuteTime] > 0)
	{
		PI[playerid][pFMuteTime] --;
		if(!PI[playerid][pFMuteTime]) SCM(playerid, COLOR_VALIK, !"Вы были автоматически разглушены сервером.");
	}
	if(PI[playerid][pFamilyMute] > 0)
	{
		GrandEndOK=7197;
		PI[playerid][pFamilyMute] --;
		if(!PI[playerid][pFamilyMute]) SCM(playerid, COLOR_VALIK, !"Вы были автоматически разглушены сервером.");
		GrandEndOK=7198;
	}
	PlayerAFKTime[playerid] ++;
	if(PlayerAFKTime[playerid] >= 3)
	{
	    PlayerAFK[playerid] = 1;
		if(PlayerAFKTime[playerid] >= 3000) SetPlayerChatBubble(playerid, "Вышел на улицу {E66E6E}( 50:00+ )", -1, 30.0, 3000);
		else
		{
			if(PlayerAFKTime[playerid] <= MAX_AFK_TIME) SetPlayerChatBubblef(playerid, -1, 30.0, 3000, "Отошел {73B461}( %s )",Convert(PlayerAFKTime[playerid]));
			else SetPlayerChatBubble(playerid, "Кушает {6495ED}( 5:00+ )", -1, 30.0, 3000);
		}
	}
	if(PI[playerid][pDemorgan] > 0)
	{
		PI[playerid][pDemorgan] --;
		GameTextForPlayerf(playerid, 1000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Jailed %i Sec.", PI[playerid][pDemorgan]);
		if(!IsPlayerInRangeOfPoint(playerid, 50.0, -799.1370, 2831.1130, 1501.9896)) PlayerSpawn(playerid);
		if(!PI[playerid][pDemorgan])
		{
			SCM(playerid, COLOR_LIGHTRED, !"Вы можете выйти из психиатрической больницы!");
			SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
		}
	}
	
	if(GetPlayerState(playerid) == 2)
	{
		new carid = GetPlayerVehicleID(playerid);
		new speed = GetPlayerVehicleSpeed(playerid);
		if(GetEngineStatus(carid))
		{	
			if(!IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid) && GetPVarInt(playerid, !"pSpeed"))
			{
				if(pTemp[playerid][pLimit] > 0)
				{
					if(pTemp[playerid][pLimit] < speed)
					{
						SetPlayerVehicleSpeed(carid,pTemp[playerid][pLimit]);
						f(str_2, sizeof(str_2), "~y~%03d", pTemp[playerid][pLimit]);
						PlayerTextDrawSetString(playerid, speeddraw[playerid][4], str_2);
					}
					else
					{
						f(str_2, sizeof(str_2), "~y~%03d", speed);
						PlayerTextDrawSetString(playerid, speeddraw[playerid][4], str_2);
					}
				}
				else
				{
				    f(str_2, sizeof(str_2), "%03d", speed);
					PlayerTextDrawSetString(playerid, speeddraw[playerid][4], str_2);
				}
			    if(speed > 0)
			    {
			        f(str_2, sizeof(str_2), "");
			        for(new dspeed; dspeed<floatround((16.0/200.0)*float(speed)) && dspeed<13; dspeed++)
			        {
			            switch(dspeed)
			            {
			                case 7:f(str_2, sizeof(str_2), "%s~g~", str_2);
			                case 11:f(str_2, sizeof(str_2), "%s~r~", str_2);
			            }
			            f(str_2, sizeof(str_2), "%sI", str_2);
			        }
			        PlayerTextDrawSetString(playerid, speeddraw[playerid][3], str_2);
			    }
			    else PlayerTextDrawSetString(playerid, speeddraw[playerid][3], "_");
			}
		}
	}
	//
	if(PlayerTimerTick[playerid] == 4)
	{
		if(IsPlayerLogged{playerid})
		{
			if(GrandEndOK) printf("Потерялся конец GrandTimer. Этап: %i", GrandEndOK);
			GrandEndOK=1;
			new target = GetPlayerTargetPlayer(playerid);
			if(target != INVALID_PLAYER_ID && target < MAX_PLAYERS)
			{
				SetPlayerChatBubblef(playerid, COLOR_PURPLE, 15.0, 1000, "Смотрит на{FFFFFF} %s", PN(target));
				new Float:Health, Float:Armour;
				GetPlayerHealth(target, Health);
				GetPlayerArmour(target, Armour);
				PlayerTextDrawSetStringf(playerid, PTarget[playerid][1], "%.2f", Health);
				PlayerTextDrawSetStringf(playerid, PTarget[playerid][2], "%.2f", Armour);
				PlayerTextDrawSetStringf(playerid, PTarget[playerid][0], "%s - %i", PN(target), target);
				for(new i; i < 5; i++)
				{
					TextDrawShowForPlayer(playerid, Target[i]);
					if(i < 3) PlayerTextDrawShow(playerid, PTarget[playerid][i]);
				}
			}
			else if(IsPlayerTextDrawVisible(playerid, PTarget[playerid][0])) deltarget(playerid);
			if(pPickupID[playerid])
			{
				new pickupid = pPickupID[playerid];
				if(!IsValidDynamicPickup(pickupid)) pPickupID[playerid] = 0;
				else
				{
					new Float:pos_x, Float:pos_y, Float:pos_z;
					Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_X, pos_x);
					Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Y, pos_y);
					Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Z, pos_z);
					if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos_x, pos_y, pos_z)) pPickupID[playerid] = 0;
				}
			}
			GrandEndOK=2;
			static str[256];
			str[0] = EOS;
			if(PI[playerid][pHSpectr] != -1 && SERIU[PI[playerid][pHSpectr]]==playerid)
			{
				PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][16], PN(playerid));
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][14], "%d:%d/%d",PI[playerid][pLevel],PI[playerid][pExp],(PI[playerid][pLevel]+1)*4);
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][13], "%d",PI[playerid][pWarns]);
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][12], "%.0f",PI[playerid][pArmour]);
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][11], "%.0f",PI[playerid][pHealth]);
				if(GetPlayerState(playerid) == 1)
				{
					PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][10], "-");
					PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][9], "%d / 257",PlayerSpeed(playerid));
					PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][3], "-");
				}
				if(GetPlayerState(playerid) == 2)
				{
					new Float:HP, carid = GetPlayerVehicleID(playerid);
					GetVehicleHealth(carid,HP);
					PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][10], "%.1f",HP);
					PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][9], "%d", GetVehicleSpeed(carid));
					if(GetEngineStatus(carid))
					{
						if(TwinTurbo[carid][Engine]) PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][3], "On(TT)");
						else PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][3], "On(NO TT)");
					}
					else
					{
						if(TwinTurbo[carid][Engine]) PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][3], "Off(TT)");
						else PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][3], "Off(NO TT)");
					}
				}
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][8], "%d(%.2f)", GetPlayerPing(playerid),NetStats_PacketLossPercent(playerid));
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][7], "%d:%d", GetPlayerWeapon(playerid),GetPlayerAmmo(playerid));
				PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][6], "0/0");
				PlayerTextDrawSetString(PI[playerid][pHSpectr], recon_p[playerid][5], "0/0");
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][4], "%d", PlayerAFKTime[playerid]);
				PlayerTextDrawSetStringf(PI[playerid][pHSpectr], recon_p[playerid][2], "%d",playerid);
			}
			GrandEndOK=5000;
			TimerCarPlayer(playerid);
			GrandEndOK=7000;
			new hour, minuite, second;
			gettime(hour,minuite,second);
			GrandEndOK=7001;
			if(hour == 20 && minuite == 15 && second == 0 && pTemp[playerid][pEvent]) pTemp[playerid][pEvent] = 0;
			GrandEndOK=7002;
			if(second == 00)
			{
				new aslot = PI[playerid][pInvItemAcsEnchant][0], Float:player_health;
				if(aslot >= 4)
				{
					GetPlayerHealth(playerid, player_health);
					if(player_health+EnchantAcs[GetSlotEnchant(1, aslot)][e_number] < 100)
					{
						J_SetPlayerHealth(playerid, player_health+EnchantAcs[GetSlotEnchant(1, aslot)][e_number]);
						f(str_1, sizeof(str_1), "+%i HP", EnchantAcs[GetSlotEnchant(1, aslot)][e_number]);
						GameTextForPlayer(playerid, str_1, 0, 1);
					}
				}
			}
			if(!PlayerAFKTime[playerid] && PI[playerid][pPlayedTime] <= 3600) PI[playerid][pPlayedTime]++;
			GrandEndOK=7003;
			if(GetMoney(playerid) >= 5000000 && !IsPlayerInAnyVehicle(playerid) && !GetPlayerWeapon(playerid))
			{
				if(PI[playerid][pShowCase] && !IsPlayerAttachedObjectSlotUsed(playerid, 8))
				{
					if(!PI[playerid][pInvItemAcs][7]) SetPlayerAttachedObject(playerid, 8, 1210, 5, 0.299999, 0.099999, 0.000000, 0.000000, -83.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					else GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][7]][ItemModel]);
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8), GrandEndOK=7004;
			GrandEndOK=7007;
			if(pTemp[playerid][TimeHeal] > 0)
			{
				new bool:next, bool:next2;
				GrandEndOK=7008;
				pTemp[playerid][TimeHeal] --;
				if(IsPlayerInRangeOfPoint(playerid, 3.0, DiedPos[playerid][0], DiedPos[playerid][1], DiedPos[playerid][2]))
				{
					GrandEndOK=7009;
					if(!pTemp[playerid][TimeHeal] && !TimeSelect[playerid] && !TimeSelectDoctor[playerid])
					{
						pTemp[playerid][TimeHeal] = 10;
						TimeSelect[playerid] = true;
						SPD(playerid, 1599, DIALOG_STYLE_LIST, !"Вы на грани смерти!", !"Сразу отправиться в больницу\nДождаться врачей ({9ACD32}40 000${FFFFFF})", !"Выбрать", !"");
						next = true;
					}
					if(!next)
					{
						GrandEndOK=7010;
						if(TimeSelect[playerid] && !TimeSelectDoctor[playerid] && !pTemp[playerid][TimeHeal])
						{
							SCM(playerid, COLOR_GREY, !"(( Вы не успели сделать выбор за 10 секунд, поэтому автоматически отправлены в больницу ))");
							PlayerCureSpawn(playerid);
							ShowPlayerDialog(playerid, -1, 0, "", "", "", "");
							next2 = true;
						}
						if(!next2)
						{
							GrandEndOK=7011;
							if(!TimeSelectDoctor[playerid]) GameTextForPlayerf(playerid, 1000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~%i SEC", pTemp[playerid][TimeHeal]);
							else GameTextForPlayerf(playerid, 1000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~DOCTORS WAITING:%i SEC", pTemp[playerid][TimeHeal]);
							GrandEndOK=7012;
						}
					}
				}
				else PlayerCureSpawn(playerid);
			}
			GrandEndOK=3;
			if(CreateMats[playerid] == 4) CarryAnim(playerid);
			GrandEndOK=7013;
			if(Cuffed{playerid})
			{
				GrandEndOK=7014;
				if(!CuffedTime[playerid])
				{
					GrandEndOK=7015;
					if(pTemp[playerid][BreakTime] > 0)
					{
						GrandEndOK=7016;
						pTemp[playerid][BreakTime] --;
						if(!pTemp[playerid][BreakTime])
						{
							GrandEndOK=7017;
							if(pTemp[playerid][BreakCount] < 10)
							{
								GrandEndOK=7018;
								SetPlayerRandomKey(playerid, pTemp[playerid][BreakKey], true);
								ShowPlayerActionBand(playerid, pTemp[playerid][BreakCount], 10);
							}
							GrandEndOK=7019;
						}
						GrandEndOK=7020;
					}
					GrandEndOK=7021;
				}
				GrandEndOK=7022;
			}
			else
			{
				GrandEndOK=7023;
				if(TheftCarID[playerid] != 0)
				{
					GrandEndOK=7024;
					new carid = TheftCarID[playerid];
					GrandEndOK=7025;
					if(TheftTime[playerid] > 0)
					{
						GrandEndOK=7026;
						new Float:fX,Float:fY,Float:fZ;
						GetVehiclePos(carid, fX, fY, fZ);
						GrandEndOK=7027;
						if(IsPlayerInRangeOfPoint(playerid, 2.0, fX, fY, fZ))
						{
							GrandEndOK=7028;
							TheftTime[playerid] --;
							if(TheftTime[playerid] <= 0)
							{
								GrandEndOK=7029;
								if(TheftCount[playerid] >= 10)
								{
									GrandEndOK=7030;
									TheftKey[playerid] = 0;
									TheftTime[playerid] = 0;
									TheftCount[playerid] = 0;
									TheftCarID[playerid] = 0;
									new number = GetVehicleID(carid);
									CarInfo[number][cLock] = 0;
									SetDoorsStatus(carid, false);
									SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы успешно взломали транспорт!");
									GameTextForPlayer(playerid, "successful", 0, 1);
									TogglePlayerControllable(playerid, true);
									HidePlayerActionText(playerid);
									HidePlayerActionBand(playerid);
									GrandEndOK=7031;
								}
								else
								{
									GrandEndOK=7032;
									SetPlayerRandomKey(playerid, TheftKey[playerid], true);
									ShowPlayerActionBand(playerid, TheftCount[playerid], 10);
								}
								GrandEndOK=7033;
							}
							GrandEndOK=7034;
						}
						else
						{
							GrandEndOK=7035;
							TheftKey[playerid] = 0;
							TheftTime[playerid] = 0;
							TheftCount[playerid] = 0;
							TheftCarID[playerid] = 0;
							ClearAnims(playerid);
							TogglePlayerControllable(playerid, true);
							HidePlayerActionText(playerid);
							HidePlayerActionBand(playerid);
							GrandEndOK=7036;
						}
						GrandEndOK=7037;
					}
					GrandEndOK=7038;
				}
				GrandEndOK=7039;
				if(TheifTime[playerid] > 0)
				{
					GrandEndOK=7040;
					TheifTime[playerid] --;
					if(!TheifTime[playerid])
					{
						GrandEndOK=7041;
						if(TheifCount[playerid] < 8)
						{
							SetPlayerRandomKey(playerid, TheifKey[playerid], false);
							ShowPlayerActionBand(playerid, TheifCount[playerid], 8);
						}
						GrandEndOK=7042;
					}
					GrandEndOK=7043;
				}
				GrandEndOK=7044;
			}
			GrandEndOK=4;
			if(IsPlayerInAnyVehicle(playerid))
			{
				GrandEndOK=7045;
				new carid = GetPlayerVehicleID(playerid);
				new myseat = GetPlayerVehicleSeat(playerid);
				GrandEndOK=7046;
				if(myseat != 128)if(VehicleSeat[carid][myseat] != playerid) VehicleSeat[carid][myseat] = playerid;
				GrandEndOK=7047;
				if(GetPlayerState(playerid) == 2)
				{
					GrandEndOK=7048;
					CheckEnterCar(playerid, carid);
					GrandEndOK=7049;
					if(!IsAPlane(carid) && !IsAVelik(carid) && !IsARcCar(carid))
					{
						GrandEndOK=7050;
						new Float:VHealth;
						GrandEndOK=7051;
						GetVehicleHealth(carid,VHealth);
						GrandEndOK=7052;
						if(VHealth < 500)
						{
							GrandEndOK=7053;
							if(GetEngineStatus(carid))
							{
								GrandEndOK=7054;
								UnEngine[carid] ++;
								GrandEndOK=7055;
								if(UnEngine[carid] >= random(10))
								{
									GrandEndOK=7056;
									if(GetVehicleModel(carid) != 494)
									{
										GrandEndOK=7057;
										SetEngineStatus(carid, false, playerid);
										f(str_2,sizeof(str_2),"* Двигатель заглох (( %s ))",cPN(playerid));
										ProxDetector(25.0,playerid, str_2,COLOR_PURPLE);
										UnEngine[carid] = 0;
										GrandEndOK=7058;
										if(VHealth < 400)
										{
											SCM(playerid, COLOR_GREY, !"Ваш двигатель сильно поврежден. Для его починки вызовите механика!");
											SCM(playerid, COLOR_GREY, !"Чтобы вызвать механика, используйте телефон");
										}
										for(new i; i < 9; i++)
										{	
											TextDrawHideForPlayer(playerid, launch[i]);
										}
										LauncherSize[playerid] = 0.000000;
										LauncherSize2[playerid] = 0;
										if(launchtimer[playerid] !=-1)
										{
											DestroyPlayerTD(playerid, launchsize[playerid][0]);
											KillTimer(launchtimer[playerid]);
											launchtimer[playerid] =-1;
										}
										skorostb[playerid] = 0;	
										GrandEndOK=7059;
									}
									GrandEndOK=7060;
								}
								GrandEndOK=7061;
							}
							GrandEndOK=7062;
						}
						GrandEndOK=7063;
					}
					GrandEndOK=7064;
				}
				else
				{
					GrandEndOK=7065;
					if(IsATaxi(carid))
					{
						GrandEndOK=7066;
						new id = GetVehicleSeat(carid, 0);
						GrandEndOK=7067;
						if(id != INVALID_PLAYER_ID && PI[id][pJob] == JOB_TAXI)
						{
							GrandEndOK=7068;
							TaxiDistance[playerid] += GetPlayerVehicleSpeed(id);
							GrandEndOK=7069;
							if(TaxiDistance[playerid] >= 650)
							{
								GrandEndOK=7070;
								if(!PlayerAFKTime[playerid] && !PlayerAFKTime[id])
								{
									GrandEndOK=7071;
									if(PI[playerid][pMoney] <= TaxiPrice[playerid])
									{
										GrandEndOK=7072;
										RemovePlayerFromVehicle(playerid);
										SCM(playerid, COLOR_GREY, !"У вас не осталось денег на оплату такси!");
										SetPlayerMoney(playerid,0);
										PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
										PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
										TextDrawHideForPlayer(playerid, BoxTaxi1);
										TextDrawHideForPlayer(playerid, BoxTaxi2);
										TextDrawHideForPlayer(playerid, Taximonitor);
										TextDrawHideForPlayer(playerid, TaxiServ);
										TextDrawHideForPlayer(playerid, TaxiDol);
										TaxiPrice[id] = 0;
										TaxiDistance[id] = 0;
										GrandEndOK=7073;
									}
									GrandEndOK=7074;
									TaxiDistance[playerid] = 0;
									TaxiPrice[playerid] += TaxiTarif[id];
									PlayerTextDrawSetStringf(playerid, TaxiDraw[playerid], "%i", TaxiPrice[playerid]);
									GrandEndOK=7075;
									new money;
									for(new i = 1; i < 4; i ++)
									{
										new seat = GetVehicleSeat(carid, i);
										if(seat != INVALID_PLAYER_ID) money += TaxiPrice[seat];
									}
									GrandEndOK=7076;
									PlayerTextDrawSetStringf(id, TaxiDraw[id], "%i",money);
									GrandEndOK=7077;
								}
								GrandEndOK=7078;
							}
							GrandEndOK=7079;
						}
						GrandEndOK=7080;
					}
					GrandEndOK=7081;
				}
				GrandEndOK=7082;
			}
			GrandEndOK=5;
			if(Smoke[playerid] == 1)
			{
				GrandEndOK=7083;
				if(SmokeTime[playerid] > 0)
				{
					GrandEndOK=7084;
					SmokeTime[playerid] --;
					GrandEndOK=7085;
					if(!SmokeTime[playerid])
					{
						GrandEndOK=7086;
						new Float:Health;
						GetPlayerHealth(playerid, Health);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
						GrandEndOK=7087;
						if(Health+5 < 100.0) J_SetPlayerHealth(playerid,Health+5);
						GrandEndOK=7088;
						if(Smokes[playerid] >= 4)
						{
							GrandEndOK=7089;
							f(str_2,sizeof(str_2),"* %s[%i] докурил(а) сигарету и выбросил(а) окурок",cPN(playerid),playerid);
							ProxDetector(25.0,playerid, str_2,COLOR_PURPLE);
							SmokeTime[playerid] = 0;
							Smokes[playerid] = 0;
							Smoke[playerid] = 0;
							GrandEndOK=7090;
						}
						else
						{
							GrandEndOK=7091;
							Smokes[playerid] ++;
							SmokeTime[playerid] = 10;
							f(str_2,sizeof(str_2),"* %s[%i] стряхнул(а) пепел",cPN(playerid),playerid);
							ProxDetector(25.0,playerid, str_2,COLOR_PURPLE);
							GrandEndOK=7092;
						}
						GrandEndOK=7093;
					}
					GrandEndOK=7094;
				}
				GrandEndOK=7095;
			}
			GrandEndOK=6;
			if(TimeOfCuff[playerid] > 0)
			{
				GrandEndOK=7096;
				if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID)
				{
					GrandEndOK=7097;
					new cuffid = PlayerOfCuff[playerid];
					GrandEndOK=7098;
					if(PlayerOfCuff[cuffid] == playerid)
					{
						GrandEndOK=7099;
						if(!Cuffed{playerid} && !Cuffed{cuffid})
						{
							GrandEndOK=7100;
							if(ProxDetectorS(3.0, playerid, cuffid, 1))
							{
								GrandEndOK=7101;
								TimeOfCuff[playerid] --;
								if(TimeOfCuff[playerid] <= 0)
								{
									GrandEndOK=7102;
									ClearAnims(playerid);
									GrandEndOK=7103;
									PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
									PlayerOfCuff[cuffid] = INVALID_PLAYER_ID;
									f(str_2,sizeof(str_2)," %s сковал %s",cPN(playerid),cPN(cuffid));
									ProxDetector(25,playerid, str_2,COLOR_PURPLE);
									SCM(playerid, -1, !"Чтобы расковать игрока введите {33AA33}/uncuff");
									SCM(playerid, -1, !"Чтобы взять игрока под конвой введите {33AA33}/gotome");
									CuffedPlayer(cuffid, 0);
									Cuffed{cuffid} = true;
									CuffedTime[cuffid] = 30;
									GrandEndOK=7104;
								}
								GrandEndOK=7105;
							}
							else CancelCuff(playerid);
						}
						else CancelCuff(playerid);
					}
					else CancelCuff(playerid);
				}
				GrandEndOK=7106;
			}
			GrandEndOK=7;
			UpdateMap(playerid);
			GrandEndOK=8;
			if(!PI[playerid][pAdmin])
			{
				GrandEndOK=7107;
				new speed = PlayerSpeed(playerid);
				if(!speed) FullnessTick[playerid] ++;
				else FullnessTick[playerid] += speed/4;
				GrandEndOK=7108;
				if(Fullness[playerid] > 0)
				{
					GrandEndOK=7109;
					if(FullnessTick[playerid] >= 250)
					{
						GrandEndOK=7110;
						new Float:Health;
						GetPlayerHealth(playerid,Health);
						GrandEndOK=7111;
						if(PI[playerid][pVIP]>=2)Fullness[playerid]-=1;
						else Fullness[playerid]-=2;
						GrandEndOK=7112;
						FullnessTick[playerid] = 0;
						SetFullness(playerid,Fullness[playerid]);
						GrandEndOK=7113;
						switch(Fullness[playerid])
						{
							case 1..15:
							{
								J_SetPlayerHealth(playerid, Health-10);
								GameTextForPlayer(playerid, "~r~You are very hungry!", 0, 1);
							}
							case 0:
							{
								J_SetPlayerHealth(playerid, Health-15);
								SetFullness(playerid,5);
								SCM(playerid, -1, !"Вы очень хотите есть, посетите закусочную или купите Хот-Дог!");
								if(PI[playerid][pHospital]>0)
								{
									PI[playerid][pHospital]--;
									UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
									SCM(playerid, COLOR_LIGHTBLUE, !"Ваше здоровье понизилось. Если вы долго не будете есть, вам придётся посетить больницу и платить за лечение!");
								}

							}
						}
						GrandEndOK=7114;
					}
					GrandEndOK=7115;
				}
				GrandEndOK=7116;
				if(PI[playerid][pAllRepl]>200 && CuffedTime[playerid] ==0 && !Cuffed{playerid})
				{
					GrandEndOK=7117;
					if(speed)
					{
						GrandEndOK=7118;
						PI[playerid][pOldRepl] += speed/35;
						UpdatePlayerDataInt(playerid, "OldRepl", PI[playerid][pOldRepl]);
						if((PI[playerid][pOldRepl]>=100 && PI[playerid][pOldRepl] <=103) || (PI[playerid][pOldRepl]>=200 && PI[playerid][pOldRepl]<=203) || (PI[playerid][pOldRepl]>=300 && PI[playerid][pOldRepl]<=303) || (PI[playerid][pOldRepl]>=400 && PI[playerid][pOldRepl]<=403) ||
						(PI[playerid][pOldRepl]>=500 && PI[playerid][pOldRepl]<=503) || (PI[playerid][pOldRepl]>=600 && PI[playerid][pOldRepl]<=603) || (PI[playerid][pOldRepl]>=700 && PI[playerid][pOldRepl]<=703) || (PI[playerid][pOldRepl]>=800 && PI[playerid][pOldRepl]<=803)) GameTextForPlayerf(playerid, 3000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~need drugs %i/1000", PI[playerid][pOldRepl]);
					}
					GrandEndOK=7119;
					if(PI[playerid][pOldRepl]>1000 && startlomka[playerid]==0)
					{
						GrandEndOK=7120;
						if(PI[playerid][pAllRepl]>200 && PI[playerid][pAllRepl] <300)
						{
							PI[playerid][pOldRepl] = 200;
							UpdatePlayerDataInt(playerid, "OldRepl", PI[playerid][pOldRepl]);
						}
						GrandEndOK=7121;
						if(PI[playerid][pAllRepl]>=300 && PI[playerid][pAllRepl] <400)
						{
							PI[playerid][pOldRepl] = 350;
							UpdatePlayerDataInt(playerid, "OldRepl", PI[playerid][pOldRepl]);
						}
						GrandEndOK=7122;
						if(PI[playerid][pAllRepl]>=400)
						{
							PI[playerid][pOldRepl] = 500;
							UpdatePlayerDataInt(playerid, "OldRepl", PI[playerid][pOldRepl]);
						}
						GrandEndOK=7123;
						SCM(playerid, COLOR_RED, !"~~~~~~~~ У вас началась ломка ~~~~~~~~");
						SCM(playerid, -1, !"(( Вызовите медика!    ||    Принять наркотик - /usedrugs ))");
						if(IsPlayerInAnyVehicle(playerid))RemovePlayerFromVehicle(playerid);
						ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
						startlomka[playerid]=1;
						GrandEndOK=7124;
					}
					GrandEndOK=7125;
					if(speed && startlomka[playerid]==1) ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
					GrandEndOK=7126;
					if(startlomka[playerid]==1 && IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
					GrandEndOK=7127;
					if(startlomka[playerid]==1)
					{
						GrandEndOK=7128;
						PI[playerid][pOldRepl]--;
						UpdatePlayerDataInt(playerid, "OldRepl", PI[playerid][pOldRepl]);
						SetPlayerChatBubble(playerid, "Страдает от ломки!", COLOR_RED, 10.0, 5000);
						f(str_2,sizeof(str_2),"Wait you breaking : %i",PI[playerid][pOldRepl]);
						GameTextForPlayer(playerid, str_2, 700, 3);
						GrandEndOK=7129;
					}
					GrandEndOK=7130;
					if(PI[playerid][pOldRepl]<=0 && startlomka[playerid]==1)
					{
						GrandEndOK=7131;
						startlomka[playerid]=0;
						PI[playerid][pOldRepl]=0;
						UpdatePlayerDataInt(playerid, "OldRepl", 0);
						Stopenanim(playerid);
						GrandEndOK=7132;
					}
					GrandEndOK=7133;
				}
				GrandEndOK=7134;
				if(UseDrugsTime[playerid] > 0)
				{
					GrandEndOK=7135;
					UseDrugsTime[playerid] --;
					if(UseDrugsTime[playerid]>120) ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
					else if(UseDrugsTime[playerid]>=115 && UseDrugsTime[playerid]<=120)
					{
						GrandEndOK=7136;
						TogglePlayerControllable(playerid,true);
						ClearAnims(playerid);
						UseDrugsTime[playerid]=0;
						GrandEndOK=7137;
					}
					GrandEndOK=7138;
				}
				GrandEndOK=7139;
				if(medlomka[playerid]>0 && IsPlayerInRangeOfPoint(playerid, 100.0,2065.5859,-1374.3174,1001.2960))
				{
					GrandEndOK=7140;
					medlomka[playerid]--;
					f(str_2,sizeof(str_2),"Wait you healing : %i",medlomka[playerid]);
					GameTextForPlayer(playerid, str_2, 700, 3);
					GrandEndOK=7141;
					if(lomanim[playerid]==0)
					{
						ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
						SetPlayerChatBubble(playerid, "Лечится от наркозависимости", COLOR_VALIK, 10.0, 5000);
					}
					GrandEndOK=7142;
					new meda = medlomka[playerid];
					if(meda== 200 || meda== 140 || meda== 100 || meda== 50 ||
					meda== 20)
					{
						GrandEndOK=7143;
						SCM(playerid, COLOR_VALIK, !"Лечениe немного вам помогло. Держитесь!");
						if(PI[playerid][pAllRepl]>=4)
						{
							GrandEndOK=7144;
							PI[playerid][pAllRepl]-=4;
							UpdatePlayerDataInt(playerid, "AllRepl", PI[playerid][pAllRepl]);
						}
						else if(PI[playerid][pAllRepl]>=1)
						{
							GrandEndOK=7145;
							PI[playerid][pAllRepl]-=1;
							UpdatePlayerDataInt(playerid, "AllRepl", PI[playerid][pAllRepl]);
						}
						GrandEndOK=7146;
					}
					GrandEndOK=7147;
					if(medlomka[playerid]==180 || medlomka[playerid]==95) lomanim[playerid]=7;
					GrandEndOK=7148;
					if(lomanim[playerid]>0)
					{
						GrandEndOK=7149;
						if(lomanim[playerid]==7) SeccureAnimation(playerid, "FOOD", "EAT_Vomit_P");//рыгаем
						SetPlayerChatBubble(playerid, "Рвота от лекарства", COLOR_RED, 10.0, 5000);
						lomanim[playerid]--;
						GrandEndOK=7150;
					}
					GrandEndOK=7151;
					if(medlomka[playerid]==0)
					{
						GrandEndOK=7152;
						SCM(playerid, COLOR_VALIK, !"Вы успешно прошли сеанс лечения от наркозависимости.");
						Stopenanim(playerid);
						GrandEndOK=7153;
					}
					GrandEndOK=7154;
				}
				GrandEndOK=7155;
			}
			GrandEndOK=9;
			if(CuffedTime[playerid] > 0)
			{
				GrandEndOK=7156;
				CuffedTime[playerid] --;
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
				GrandEndOK=7157;
				if(CuffedTime[playerid] <= 0)
				{
					GrandEndOK=7158;
					new tazer = TazerPlayer[playerid];
					if(tazer != INVALID_PLAYER_ID)
					{
						GrandEndOK=7159;
						TazerPlayer[playerid] = INVALID_PLAYER_ID;
						TazerPlayer[tazer] = INVALID_PLAYER_ID;
					}
					GrandEndOK=7160;
				}
				GrandEndOK=7161;
			}
			GrandEndOK=10;
			if(NoEnterPickup[playerid] > 0)
			{
				GrandEndOK=7162;
				NoEnterPickup[playerid] --;
				if(NoEnterPickup[playerid] == 0) TogglePlayerControllable(playerid, true);
				GrandEndOK=7163;
			}
			GrandEndOK=11;
			new money;
			GrandEndOK=7164;
			if( ++ PI[playerid][pBeg][4] >= 40 && PI[playerid][pBeg][1])
			{
				GrandEndOK=7165;
				if(!PI[playerid][pBeg][3])
				{
					str_2 = "money + 10";
					money = 10;
				}
				else
				{
					str_2 = "money + 15";
					money = 15;
				}
				GrandEndOK=7166;

				GameTextForPlayer(playerid, str_2, 5000, 1);
				GiveMoney(playerid, money);
				aml(51, playerid, "", "/beg", money);
				PI[playerid][pBeg][4] = 0;
				GrandEndOK=7167;
			}
			GrandEndOK=12;
			if(PI[playerid][pHeal] > 0 && DmZonePlayed[playerid] == false)
			{
				GrandEndOK=7168;
				PI[playerid][pHealTime] ++;
				GrandEndOK=7169;
				if(PI[playerid][pHealTime] >= (8+random(3)))
				{
					GrandEndOK=7170;
					new Float:Health=PI[playerid][pHealth];
					//GetPlayerHealth(playerid,Health);
					if(!PlayerLie[playerid])
					{
						GrandEndOK=7171;
						if(PI[playerid][pVIP]>=2)
						{
							Health += 4;
							GameTextForPlayer(playerid, "+4 HP", 0, 1);
						}
						else
						{
							GameTextForPlayer(playerid, "+2 HP", 0, 1);
							Health += 2;
						}
						J_SetPlayerHealth(playerid,Health);
						GrandEndOK=7172;
					}
					else
					{
						GrandEndOK=7173;
						if(PI[playerid][pVIP]>=2)
						{
							GameTextForPlayer(playerid, "+10 HP", 0, 1);
							Health += 10;
						}
						else
						{
							GameTextForPlayer(playerid, "+5 HP", 0, 1);
							Health += 5;
						}
						J_SetPlayerHealth(playerid,Health);
						GrandEndOK=7174;
					}
					if(PI[playerid][pHealth] >= 100) {
						PlayerEndCure(playerid); 
						if(DmZonePlayed[playerid]) SCM(playerid, -1, "PlayerEndCure сработал для убитого в GrandTimer");
					}
					PI[playerid][pHealTime] = 0;
					GrandEndOK=7178;
				}
				GrandEndOK=7179;
			}
			else
			{
				GrandEndOK=7180;
				if(PI[playerid][pJailTime])
				{
					GrandEndOK=7181;
					PI[playerid][pJailTime] --;
					if(!IsPlayerInRangeOfPoint(playerid, 40.0, 2314.43, 74.15, 1502.00) && !IsPlayerInRangeOfPoint(playerid, 30.0, 325.4229,89.3657,1001.0410)) PlayerSpawn(playerid);
					GrandEndOK=7182;
					if(!PI[playerid][pJailTime])
					{
						GrandEndOK=7183;
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отсидели свой срок и были выпущены.");
						SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						GrandEndOK=7184;
						if(PI[playerid][pPrison]==1)
						{
							J_SetPlayerPos(playerid,611.0152,-585.7537,17.2266);
							SetPlayerFacingAngle(playerid, 270);
						}
						else if(PI[playerid][pPrison]==2)
						{
							J_SetPlayerPos(playerid,2286.7205,2429.0698,10.8203);
							SetPlayerFacingAngle(playerid, 181.2884);
						}
						else
						{
							J_SetPlayerPos(playerid,-1606.1509,713.7501,13.2902);
							SetPlayerFacingAngle(playerid, 359.7803);
						}
						GrandEndOK=7185;
						PI[playerid][pPrison]=0;
						UpdatePlayerDataInt(playerid, "Prison", 0);
						PI[playerid][pBailPrice] = 0;
						UpdatePlayerDataInt(playerid, "BailPrice", 0);
						GrandEndOK=7186;
						new org = GetTeamID(playerid);
						SetCameraBehindPlayer(playerid);
						SetPlayerSkinEx(playerid,GetSkinOfPlayer(playerid));
						ResetSpawnInfo(playerid, org);
						GrandEndOK=7187;
					}
					GrandEndOK=7188;
				}
				GrandEndOK=7191;
			}
			GrandEndOK=13;
			if(PI[playerid][pTimeTP])
			{
				PI[playerid][pTimeTP] --;
				if(!PI[playerid][pTimeTP]) SCM(playerid, COLOR_VALIK, !"Вы можете снова использовать камень телепортации.");
			}
			GrandEndOK=16;
			if(IsPlayerInAnyVehicle(playerid))
			{
				GrandEndOK=7199;
				if(IsACar(GetPlayerVehicleID(playerid)) && PI[playerid][pCarSkill] < 70) SetVehicleSpeed(GetPlayerVehicleID(playerid), GetPlayerVehicleSpeedZ(playerid)-2);
				GrandEndOK=7200;
			}
			GrandEndOK=17;
			if(PI[playerid][pFamilyMember] >= 0)
			{
				//printf("PI[playerid][pFamilyMember](%i)", PI[playerid][pFamilyMember]);
				GrandEndOK=7201;
				if(!UpdatePlayerText[playerid])
				{
					if(FamilyInfo[PI[playerid][pFamilyMember]][famBrand] == 0 && FamilyInfo[PI[playerid][pFamilyMember]][famGalka] == 0)
					{
						GrandEndOK=8003;
						/*printf("PI[playerid][pFamilyMember](%i)", PI[playerid][pFamilyMember]);
						printf("FamColor(%s)", FamColor);
						printf("FamType(%s)", FamType);*/
						f(str_1, sizeof(str_1), "%s{%s}%s {FFFFFF}%s", " ", FamColor, FamilyInfo[PI[playerid][pFamilyMember]][famName], FamType);
						GrandEndOK=8004;
					}
					else if(FamilyInfo[PI[playerid][pFamilyMember]][famGalka] == 1 && FamilyInfo[PI[playerid][pFamilyMember]][famBrand] == 0)
					{	
						GrandEndOK=8005;
						/*printf("PI[playerid][pFamilyMember](%i)", PI[playerid][pFamilyMember]);
						printf("FamColor(%s)", FamColor);
						printf("FamType(%s)", FamType);*/
						f(str_1, sizeof(str_1), "%s{%s}%s {FFFFFF}%s", "[$] ", FamColor, FamilyInfo[PI[playerid][pFamilyMember]][famName], FamType);
						GrandEndOK=8006;
					}
					else if(FamilyInfo[PI[playerid][pFamilyMember]][famBrand] == 1 && FamilyInfo[PI[playerid][pFamilyMember]][famGalka] == 1)
					{	
						GrandEndOK=8007;
						/*printf("PI[playerid][pFamilyMember](%i)", PI[playerid][pFamilyMember]);
						printf("FamColor(%s)", FamColor);
						printf("FamType(%s)", FamType);*/
						f(str_1, sizeof(str_1), "%s{%s}%s {FFFFFF}%s", "© ", FamColor, FamilyInfo[PI[playerid][pFamilyMember]][famName], FamType);
						GrandEndOK=8008;
					}
					//SCM(playerid, -1, str_1);

					if(FPlayerText[playerid] == false)
					{
						GrandEndOK=8010;
						PlayerFamily[playerid] = CreateDynamic3DTextLabel(str_1, 0xFFFFFFFF, 0.000000, 0.000000, 0.050000, 5.000000, playerid, -1, 1, -1, -1, -1);
						GrandEndOK=8011;
						FPlayerText[playerid] = true;
						GrandEndOK=8012;
					}
					else UpdateDynamic3DTextLabelText(PlayerFamily[playerid], 0xFFFFFFFF, str_1);
					GrandEndOK=8013;
					UpdatePlayerText[playerid] = true;
					GrandEndOK=7202;
				}
				GrandEndOK=7203;
			}
			GrandEndOK=18;
			if(PI[playerid][pFamilyMember] == -1)
			{
				if(FPlayerText[playerid])
				{
					GrandEndOK=7204;
					DestroyDynamic3DTextLabel(PlayerFamily[playerid]);
					FPlayerText[playerid] = false;
					GrandEndOK=7205;
				}
			}
			GrandEndOK=19;
			if(PI[playerid][pChestTime] > 0) PI[playerid][pChestTime] --;
			GrandEndOK=20;
			NoRoof(playerid);
			GrandEndOK=21;
			if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
			{
				GrandEndOK=7206;
				new cuffed = GotoInfo[playerid][gtID];
				if(!IsPlayerConnected(cuffed) || !IsPlayerLogged{cuffed})
				{
					GrandEndOK=7207;
					GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
					GotoInfo[playerid][gtTPX] = 0.0;
					GotoInfo[playerid][gtTPY] = 0.0;
					GotoInfo[playerid][gtTPZ] = 0.0;
					GotoInfo[cuffed][gtState] = 0;
					GotoInfo[cuffed][gtStayed] = 0;
					GotoInfo[cuffed][gtGoID] = INVALID_PLAYER_ID;
					GotoInfo[cuffed][gtX] = 0.0;
					GotoInfo[cuffed][gtY] = 0.0;
					GotoInfo[cuffed][gtZ] = 0.0;
					GrandEndOK=7208;
				}
				GrandEndOK=7209;
			}
			GrandEndOK=22;
			if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID)
			{
				GrandEndOK=7210;
				new goid = GotoInfo[playerid][gtGoID];
				if(IsPlayerConnected(goid) && IsPlayerLogged{goid})
				{
					GrandEndOK=7211;
					new Float:xX, Float:xY, Float:xZ,Float:agle;
					GetPlayerPos(goid, xX, xY, xZ);
					GetPlayerFacingAngle(playerid, agle);
					if(!IsPlayerInRangeOfPoint(playerid, 20, xX, xY, xZ))
					{
						SetPlayerInterior(playerid,GetPlayerInterior(goid));
						SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(goid));
						NoEnterPickup[playerid] =2;
						SetPlayerFacingAngle(playerid,agle);
						J_SetPlayerPos(playerid, xX,xY,xZ);
					}
					GrandEndOK=7212;
					if(GetPlayerState(goid)==1)
					{
						GrandEndOK=7213;
						new ANIMATION;
						if(GotoInfo[goid][gtTPX] != 0.0 || GotoInfo[goid][gtTPY] != 0.0)
						{
							SetPlayerFaceToPoint(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY]);
							ANIMATION = GoPlayerAnimation(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY], GotoInfo[goid][gtTPZ]);
						}
						else
						{
							TurnPlayerFaceToPlayer(playerid, goid);
							ANIMATION = GoPlayerAnimation(playerid, xX, xY, xZ);
						}
						GrandEndOK=7214;
						if(ANIMATION != 1)
						{
							if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]))
							{
								GrandEndOK=7215;
								GotoInfo[playerid][gtStayed] ++;
								if(GotoInfo[playerid][gtStayed] >= 10)
								{
									GrandEndOK=7216;
									new Float:xA;
									GetPlayerPos(playerid, xX, xY, xZ);
									GetPlayerFacingAngle(playerid, xA);
									ShiftCords(0, xX, xY, xA, 1.5);
									J_SetPlayerPos(playerid, xX, xY, xZ);
									GotoInfo[playerid][gtStayed] = 0;
								}
								GrandEndOK=7217;
							}
							else GotoInfo[playerid][gtStayed] = 0;
							GetPlayerPos(playerid, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]);
						}
						GrandEndOK=7218;
					}
					GrandEndOK=7219;
				}
				else
				{
					GrandEndOK=7220;
					GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
					GotoInfo[playerid][gtX] = 0.0;
					GotoInfo[playerid][gtY] = 0.0;
					GotoInfo[playerid][gtZ] = 0.0;
				}
				GrandEndOK=7221;
			}
			GrandEndOK=23;
			if(TimetoReturn[playerid] > 0 && pTemp[playerid][pArendaCar] != -1)
			{
				GrandEndOK=7222;
				TimetoReturn[playerid]--;
				GameTextForPlayerf(playerid, 1000, 4, "Return %i/120", TimetoReturn[playerid]);
				if(TimetoReturn[playerid]==0)
				{
					GrandEndOK=7223;
					GetVehicleHealth(pTemp[playerid][pArendaCar],VehicleHealth[pTemp[playerid][pArendaCar]] );
					if(VehicleHealth[pTemp[playerid][pArendaCar]]<700)
					{
						GrandEndOK=7224;
						new moneyki = floatround(1000.0-VehicleHealth[pTemp[playerid][pArendaCar]]);
						if(GetMoney(playerid)>=moneyki)
						{
							GrandEndOK=7225;
							GiveMoney(playerid,-moneyki);
							aml(52, playerid, "", "порча гос имущества (т/с)", moneyki);
							SCMf(playerid, COLOR_LIGHTRED, "Вы заплатили {FFFFFF}%i${FF6347} за порчу государственного имущества! {FFFFFF}(( {FF6347}Вы сильно побили машину{FFFFFF} )).", money);
						}
						else if(PI[playerid][pBank]>=moneyki)
						{
							GrandEndOK=7226;
							PI[playerid][pBank] -= moneyki;
							UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
							aml(62, playerid, "", "порча гос имущества (т/с)", moneyki);
							SCMf(playerid, COLOR_LIGHTRED, "С банковского счета было изьято {FFFFFF}%i${FF6347} за порчу гос. имущества! {FFFFFF}(( {FF6347}Вы сильно побили машину{FFFFFF} )).", money);
						}
						else if(PI[playerid][pZKP]>=10)
						{
							GrandEndOK=7227;
							PI[playerid][pZKP]-=10;
							UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
							SCM(playerid, COLOR_LIGHTRED, !"У вас не достаточно денег чтобы заплатить за разбитое авто. Ваша законопослушность была снижена!");
						}
						GrandEndOK=7228;
					}
					GrandEndOK=7229;

					switch(vTemp[pTemp[playerid][pArendaCar]][vJob])
					{
						case 1: endrabavt(playerid);
						case 11:
						{
							new vehsid = GetVehicleTrailer(pTemp[playerid][pArendaCar]);
							SetVehicleToRespawn(vehsid);
							SetVehicleToRespawn(pTemp[playerid][pArendaCar]);
						}
						default: SetVehicleToRespawn(pTemp[playerid][pArendaCar]);
					}
					SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Ваш рабочий транспорт был отбуксирован на стоянку!");
					GrandEndOK=7230;
				}
				GrandEndOK=7231;
			}
			else if(TimetoReturn[playerid] > 0 && (pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid))
			{
				GrandEndOK=7232;
				TimetoReturn[playerid] --;
				GameTextForPlayerf(playerid, 1000, 4, "Return %i/10", TimetoReturn[playerid]);
				GrandEndOK=7233;
				if(!TimetoReturn[playerid])
				{
					GrandEndOK=7234;
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Транспорт снят с продажи, из-за того что вы или транспорт покинули место!");
					new i = pTemp[playerid][pSellCar];
					autoBazarInfo[i][autoBazar2PosX] =
					autoBazarInfo[i][autoBazar2PosY] =
					autoBazarInfo[i][autoBazar2PosZ] = 0.0;
					autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
					autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;
					autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
					DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
					DestroyAutoBazarTable(i);
					pTemp[playerid][pSellCar] = -1;
					DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
					if(autoBazarInfo[i][autoBazarType] == 1) {
						UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
					}
					else {
						UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
					}
					GrandEndOK=7235;
				}
				GrandEndOK=7236;
			}
			GrandEndOK=24;
			if(TimetoReturn[playerid] > 0 && (pTemp[playerid][pLavka] != -1 && LavkaInfo[pTemp[playerid][pLavka]][lavkaOwnerID] == playerid))
			{
				GrandEndOK=7237;
				TimetoReturn[playerid] --;
				GameTextForPlayerf(playerid, 1000, 4, "Return %i/10", TimetoReturn[playerid]);
				if(!TimetoReturn[playerid])
				{
					GrandEndOK=7238;
					SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Ваша лавка была закрыта, из-за того что вы её покинули!");
					new i = pTemp[playerid][pLavka];
					DestroyDynamicArea(LavkaInfo[i][lavkaArea]);
					DestroyDynamic3DTextLabel(LavkaInfo[i][lavkaLabel]);
					LavkaInfo[pTemp[playerid][pLavka]][lavkaOwnerID] = INVALID_PLAYER_ID;
					f(str, 35, "Номер %i. {30A332}Свободная!", pTemp[playerid][pLavka]);
					SetDynamicObjectMaterialText(Tents[pTemp[playerid][pLavka]], 0, str, 130, "Ariel", 55, 1, 0xFFFFFFFF, 0, 1);
					i = -1;
				}
				GrandEndOK=7239;
			}
			GrandEndOK=25;
			if(IDOFMusic!=-1)
			{
				GrandEndOK=7240;
				if(IsPlayerInRangeOfPoint(playerid,120,-575.7592,2568.7976,1702.5029))
				{
					GrandEndOK=7241;
					if(GetPVarInt(playerid,"music"))
					{
						GrandEndOK=7242;
						if(MusicInfo[IDOFMusic][mNowTime]==MusicInfo[IDOFMusic][mTime])
						{
							StopAudioStreamForPlayer(playerid);
							if(IDOFMusic<24) PlayAudioStreamForPlayer(playerid, MusicInfo[IDOFMusic+1][mAdress],-575.7592,2568.7976,1702.5029,120,true);
							else PlayAudioStreamForPlayer(playerid, MusicInfo[IDOFMusic][mAdress],-575.7592,2568.7976,1702.5029,120,true);
						}
						GrandEndOK=7243;
					}
					else
					{
						GrandEndOK=7244;
						SetPVarInt(playerid,"music",1);
						PlayAudioStreamForPlayer(playerid, MusicInfo[IDOFMusic][mAdress],-575.7592,2568.7976,1702.5029,120,true);
					}
					GrandEndOK=7245;
				}
				else
				{
					GrandEndOK=7246;
					if(GetPVarInt(playerid,"music"))
					{
						DeletePVar(playerid,"music");
						StopAudioStreamForPlayer(playerid);
					}
					GrandEndOK=7247;
				}
				GrandEndOK=7248;
			}
			else
			{
				GrandEndOK=7249;
				if(GetPVarInt(playerid,"music"))
				{
					DeletePVar(playerid,"music");
					StopAudioStreamForPlayer(playerid);
				}
				GrandEndOK=7250;
			}
			GrandEndOK=26;
			if(PI[playerid][pONPhoneTalk]>0)
			{
				GrandEndOK=7251;
				PI[playerid][pONPhoneTalk]++;
				if(pSvon{playerid}) {
					f(str,150,"~l~%s~n~~r~Outcoming~n~~l~(~b~%i ~l~sec.)",PN(PI[playerid][pCalling]), PI[playerid][pONPhoneTalk]);
				}
				else {
					f(str,150,"~l~%s~n~~g~Incoming~n~~l~(~b~%i ~l~sec.)",PN(PI[playerid][pCalling]), PI[playerid][pONPhoneTalk]);
				}
				PlayerTextDrawSetString(playerid,callname[playerid], str);
				GrandEndOK=7252;
			}
			GrandEndOK=27;
			if(Timerak[playerid]>0)
			{
				GrandEndOK=7253;
				Timerak[playerid]--;
				GameTextForPlayerf(playerid, 1000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Wait %i Sec.", Timerak[playerid]);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
				GrandEndOK=7254;
				if(Timerak[playerid]==0)
				{
					GrandEndOK=7255;
					new Float:x, Float:y, Float:z;
					for(new i;i<MAX_NARKO;i++)
					{
						GrandEndOK=7256;
						if(ddrugs[i]!=-1)
						{
							GrandEndOK=7257;
							GetDynamicObjectPos(ddrugs[i],x,y,z);
							if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
							{
								GrandEndOK=7258;
								if(ddTimer[i]==0)
								{
									GrandEndOK=7259;
									DestroyDynamicObject(ddrugs[i]);
									DestroyDynamic3DTextLabel(ddText[i]);
									ddTimer[i]=0;
									ddrugs[i]=-1;

									new u=2+random(12);
									f(str,30,"Выкопал куст конопли +%i",u);
									SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 10.0, 5000);

									f(str,10,"Narko +%i",u);
									GameTextForPlayer(playerid, str, 0, 1);

									InvAdd(playerid, Item_Drugs, u);
									aml(101, playerid, "", "выкопал куст конопли", Item_Drugs, u);
									GrandEndOK=7260;
								}
								else
								{
									GrandEndOK=7261;
									DestroyDynamicObject(ddrugs[i]);
									DestroyDynamic3DTextLabel(ddText[i]);
									ddTimer[i]=0;
									ddrugs[i]=-1;
									SetPlayerChatBubble(playerid, "Вырвал не созревший саженец из земли", COLOR_PURPLE, 10.0, 5000);
									SCM(playerid, COLOR_ORANGE, !"Вы успешно вырвали саженец конопли из земли.");
									GameTextForPlayer(playerid, "torned", 0, 1);
								}
								GrandEndOK=7262;
							}
							GrandEndOK=7263;
						}
						GrandEndOK=7264;
					}
					GrandEndOK=7265;
				}
				GrandEndOK=7266;
			}
			GrandEndOK=28;
			if(PI[playerid][pbydilnik]>0)
			{
				GrandEndOK=7267;
				PI[playerid][pbydilnik]--;
				f(str,5,"%i",PI[playerid][pbydilnik]);
				PlayerTextDrawSetString(playerid,bydilnik[playerid], str);
				if(PI[playerid][pbydilnik]==0)
				{
					f(str,150,"{B03131}Установленый вами таймер закончил работу!\nВремя остановки {73B461}%i:%i:%i\n\n",hour,minuite,second);
					SPD(playerid,0,0,"",str,"Закрыть","");
					TextDrawHideForPlayer(playerid,kryg);
					DestroyPlayerTD(playerid, bydilnik[playerid]);
					PlayAudioStreamForPlayer(playerid, "http://ringtones.mob.org.ru/ringtone/Qwh8nFf4Sqi0EbWL3yOc8w/1426493202/19444_wapres_ru/zvuki-radiotelefon.mp3");
					ClearChatForPlayer(playerid);
					SetPlayerChatBubble(playerid, "Издает звук будильника!", COLOR_PURPLE, 10.0, 5000);
				}
				GrandEndOK=7268;
			}
			else if(PI[playerid][pEventTime] > 0)
			{
				GrandEndOK=7269;
				PI[playerid][pEventTime] --;
				f(str, 50, "Time: %s", ConvertTD(PI[playerid][pEventTime]));
				PlayerTextDrawSetString(playerid, EventTimeTD[playerid][0], str);
				if(PI[playerid][pEventTime] == 0)
				{
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно покинули мероприятие, так-как у вас закончилось время!\n\n", !"Принять", !"");
					DestroyPlayerTD(playerid, EventTimeTD[playerid][0]);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid, 0);
					J_SetPlayerPos(playerid, -2267.3701, 180.6651, 35.3125);
					SetPlayerFacingAngle(playerid, 229.3854);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
				}
				GrandEndOK=7270;
			}
			else if(Fullness[playerid] > 2 && Crack{playerid} && !CuffedTime[playerid] && !Cuffed{playerid})
			{
				GrandEndOK=7271;
				Crack{playerid} = false;
				TogglePlayerControllable(playerid,true);
				ClearAnimations(playerid);
			}
			GrandEndOK=29;
			if(Recuffer[playerid]!=INVALID_PLAYER_ID)
			{
				GrandEndOK=7274;
				new Float:x,Float:y,Float:z;
				GetPlayerPos(Recuffer[playerid],x,y,z);
				if(!IsPlayerInRangeOfPoint(playerid, 50, x, y, z))
				{
					GrandEndOK=7275;
					cuffer[playerid]++;
					GameTextForPlayerf(playerid, 1000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Free %i/10 Sec.", cuffer[playerid]);

					GrandEndOK=7276;
					if(cuffer[playerid]>=10)
					{
						GrandEndOK=7277;
						if(IsPlayerConnected(Recuffer[playerid]))SCM(Recuffer[playerid],COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы отошли слишком далеко от игрока которого сковали!");
						Cuffed{playerid} = false;
						CuffedTime[playerid] = 0;
						TogglePlayerControllable(playerid,true);
						SetPlayerSpecialAction(playerid, 0);
						ClearAnims(playerid);
						SCM(playerid, COLOR_GREY, !"[Информация]{FFFFFF} Вы успешно избавились от наручников.");
						CheckPlayerGoCuff(Recuffer[playerid]);
						CheckPlayerGoCuff(playerid);
						GrandEndOK=7278;
					}
					GrandEndOK=7279;
				}
				else if(cuffer[playerid]>0)cuffer[playerid]--;
				GrandEndOK=7280;
			}
			GrandEndOK=31;
			if(PI[playerid][pMaskON]>0)
			{
				GrandEndOK=7281;
				PI[playerid][pMaskON]--;
				if(PI[playerid][pMaskON]==0)
				{
					if(TeamDuty{playerid}) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					else SetPlayerColor(playerid,0xFFFFFF80);
					SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Время действия маски истекло, вам пришлось ее выбросить.");
					SetPlayerChatBubble(playerid, "Выбросил маску", COLOR_PURPLE, 10.0, 5000);
				}
				GrandEndOK=7282;
			}
			GrandEndOK=32;
			new weapon = GetPlayerWeapon(playerid);
			new ammo = GetPlayerAmmo(playerid);
			new weap = GetPlayerWeapon(playerid);
			new slot = GetWeaponSlot(weap);
			GrandEndOK=7283;
			if(gunmute[playerid]<=gettime())
			{
				GrandEndOK=7284;
				new id = GetWeaponSlot(weapon);
				if(id < 13)
				{
					GrandEndOK=7285;
					if(PI[playerid][pGuns][id] == weapon)
					{
						GrandEndOK=7286;
						if(PI[playerid][pAmmos][slot]==GetPlayerAmmo(playerid))
						{
							GrandEndOK=7287;
							PI[playerid][pLastGun]=weapon;
							PI[playerid][pLastAmmo]= ammo;
						}
						GrandEndOK=7288;
					}
					GrandEndOK=7289;
				}
				GrandEndOK=7290;
			}
			GrandEndOK=33;
			if(kostiKos[playerid]>0)
			{
				GrandEndOK=7291;
				kostiKos[playerid]--;
				CarryAnim(playerid);
				if(kostiKos[playerid]==0)
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid,7)) RemovePlayerAttachedObject(playerid,7);
					ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
					kostiKos[playerid]=0;
				}
				GrandEndOK=7292;
			}
			GrandEndOK=34;
			new job = PI[playerid][pJob];
			if((job == JOB_PORTER || job == 17 || job == JOB_PIZZA || job == 21)&& InJob[playerid]==3) CarryAnim(playerid);
			GrandEndOK=7293;
			if(GetMoney(playerid) < 0)
			{
				GrandEndOK=7294;
				SetPlayerMoney(playerid, 0);
				if(!PI[playerid][pAdmin])
				{
					SCM(playerid, COLOR_RED, !"Были кикнуты за использование багов");
					SendAdminsMessagef(COLOR_RED, "< Money [-] > %s[%i] Подозревается в использовании, багов и был кикнут!", PN(playerid), playerid);
					J_Kick(playerid);
				}

			}
			GrandEndOK=35;
			if(CreteBomb[playerid]>0 && CreteBomb[playerid] < 100 )
			{
				GrandEndOK=7295;
				CreteBomb[playerid]--;
				GameTextForPlayerf(playerid, 1000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Creating %i Sec.", CreteBomb[playerid]);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
				SetPlayerChatBubble(playerid, "Делает подозрительный предмет", COLOR_PURPLE, 10.0, 5000);
				if(CreteBomb[playerid]==0)
				{
					SCM(playerid, COLOR_GREY, !"Вы успешно сделали бомбу, будьте осторожны, не прыгайте!");
					if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 1279, 5, 0.05, 0.24, 0.2, 104, 10, 75);
					CreteBomb[playerid]=250;
					PI[playerid][pBomb]=1;
					CarryAnim(playerid);
				}
				GrandEndOK=7296;
			}
			GrandEndOK=36;
			if(BusTime[playerid] > 0)
			{
				BusTime[playerid]--;
				f(str,10,"~r~%i", BusTime[playerid]);
				GameTextForPlayer(playerid, str,1000,6);
				if(BusTime[playerid] <= 1) endrabavt(playerid);
				GrandEndOK=7297;
			}
			GrandEndOK=37;
			if(TimeBus[playerid] > 0)
			{
				GrandEndOK=7298;
				TimeBus[playerid]--;
				if(TimeBus[playerid] <= 0)
				{
					TimeBus[playerid]=0;
					switch(pTemp[playerid][vReis])
					{
						case 1: SetPlayerRaceCheckpoint(playerid,BusCityLS[pPressed[playerid]][BUSSTATION1],BusCityLS[pPressed[playerid]][BUS_COORD1][0],BusCityLS[pPressed[playerid]][BUS_COORD1][1],BusCityLS[pPressed[playerid]][BUS_COORD1][2],BusCityLS[pPressed[playerid]+1][BUS_COORD1][0],BusCityLS[pPressed[playerid]+1][BUS_COORD1][1],BusCityLS[pPressed[playerid]+1][BUS_COORD1][2],10.0);
						case 2: SetPlayerRaceCheckpoint(playerid,BusFarm[pPressed[playerid]][BUSSTATION2],BusFarm[pPressed[playerid]][BUS_COORD2][0],BusFarm[pPressed[playerid]][BUS_COORD2][1],BusFarm[pPressed[playerid]][BUS_COORD2][2],BusFarm[pPressed[playerid]+1][BUS_COORD2][0],BusFarm[pPressed[playerid]+1][BUS_COORD2][1],BusFarm[pPressed[playerid]+1][BUS_COORD2][2],10.0);
						case 3: SetPlayerRaceCheckpoint(playerid,BusZav[pPressed[playerid]][BUSSTATION3],BusZav[pPressed[playerid]][BUS_COORD3][0],BusZav[pPressed[playerid]][BUS_COORD3][1],BusZav[pPressed[playerid]][BUS_COORD3][2],BusZav[pPressed[playerid]+1][BUS_COORD3][0],BusZav[pPressed[playerid]+1][BUS_COORD3][1],BusZav[pPressed[playerid]+1][BUS_COORD3][2],10.0);
						case 4: SetPlayerRaceCheckpoint(playerid,BusAvto[pPressed[playerid]][BUSSTATION4],BusAvto[pPressed[playerid]][BUS_COORD4][0],BusAvto[pPressed[playerid]][BUS_COORD4][1],BusAvto[pPressed[playerid]][BUS_COORD4][2],BusAvto[pPressed[playerid]+1][BUS_COORD4][0],BusAvto[pPressed[playerid]+1][BUS_COORD4][1],BusAvto[pPressed[playerid]+1][BUS_COORD4][2],10.0);
						case 5: SetPlayerRaceCheckpoint(playerid,BusLv[pPressed[playerid]][BUSSTATION5],BusLv[pPressed[playerid]][BUS_COORD5][0],BusLv[pPressed[playerid]][BUS_COORD5][1],BusLv[pPressed[playerid]][BUS_COORD5][2],BusLv[pPressed[playerid]+1][BUS_COORD5][0],BusLv[pPressed[playerid]+1][BUS_COORD5][1],BusLv[pPressed[playerid]+1][BUS_COORD5][2],10.0);
						case 6: SetPlayerRaceCheckpoint(playerid,BusLvv[pPressed[playerid]][BUSSTATION6],BusLvv[pPressed[playerid]][BUS_COORD6][0],BusLvv[pPressed[playerid]][BUS_COORD6][1],BusLvv[pPressed[playerid]][BUS_COORD6][2],BusLvv[pPressed[playerid]+1][BUS_COORD6][0],BusLvv[pPressed[playerid]+1][BUS_COORD6][1],BusLvv[pPressed[playerid]+1][BUS_COORD6][2],10.0);
						case 7: SetPlayerRaceCheckpoint(playerid,BusLvvv[pPressed[playerid]][BUSSTATION7],BusLvvv[pPressed[playerid]][BUS_COORD7][0],BusLvvv[pPressed[playerid]][BUS_COORD7][1],BusLvvv[pPressed[playerid]][BUS_COORD7][2],BusLvvv[pPressed[playerid]+1][BUS_COORD7][0],BusLvvv[pPressed[playerid]+1][BUS_COORD7][1],BusLvvv[pPressed[playerid]+1][BUS_COORD7][2],10.0);
						case 8: SetPlayerRaceCheckpoint(playerid,bussf[pPressed[playerid]][BUSSTATION8],bussf[pPressed[playerid]][BUS_COORD8][0],bussf[pPressed[playerid]][BUS_COORD8][1],bussf[pPressed[playerid]][BUS_COORD8][2],bussf[pPressed[playerid]+1][BUS_COORD8][0],bussf[pPressed[playerid]+1][BUS_COORD8][1],bussf[pPressed[playerid]+1][BUS_COORD8][2],10.0);
						case 9: SetPlayerRaceCheckpoint(playerid,buslvsf[pPressed[playerid]][BUSSTATION9],buslvsf[pPressed[playerid]][BUS_COORD9][0],buslvsf[pPressed[playerid]][BUS_COORD9][1],buslvsf[pPressed[playerid]][BUS_COORD9][2],buslvsf[pPressed[playerid]+1][BUS_COORD9][0],buslvsf[pPressed[playerid]+1][BUS_COORD9][1],buslvsf[pPressed[playerid]+1][BUS_COORD9][2],10.0);
						case 10: SetPlayerRaceCheckpoint(playerid,bussfsf[pPressed[playerid]][BUSSTATION10],bussfsf[pPressed[playerid]][BUS_COORD10][0],bussfsf[pPressed[playerid]][BUS_COORD10][1],bussfsf[pPressed[playerid]][BUS_COORD10][2],bussfsf[pPressed[playerid]+1][BUS_COORD10][0],bussfsf[pPressed[playerid]+1][BUS_COORD10][1],bussfsf[pPressed[playerid]+1][BUS_COORD10][2],10.0);
						case 11: SetPlayerRaceCheckpoint(playerid,bussffa[pPressed[playerid]][BUSSTATION11],bussffa[pPressed[playerid]][BUS_COORD11][0],bussffa[pPressed[playerid]][BUS_COORD11][1],bussffa[pPressed[playerid]][BUS_COORD11][2],bussffa[pPressed[playerid]+1][BUS_COORD11][0],bussffa[pPressed[playerid]+1][BUS_COORD11][1],bussffa[pPressed[playerid]+1][BUS_COORD11][2],10.0);
					}
				}
				GrandEndOK=7299;
			}
			GrandEndOK=38;
			new carid = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) == 2)
			{
				GrandEndOK=7300;
				if(GetPVarInt(playerid, !"pSpeed"))
				{
					static formatik[11];
					formatik[0] = EOS;
					f(formatik, sizeof(formatik), "fuel: %.0f%", vTemp[carid][Fuel]);
					PlayerTextDrawSetString(playerid, speeddraw[playerid][5], formatik);
				}

				GrandEndOK=7301;
				if(PI[playerid][pJob] == JOB_TRUCKER && vTemp[carid][vJob] == JOB_TRUCKER)
				{
					GrandEndOK=7302;
					if(IsTrailerAttachedToVehicle(carid))
					{
						GrandEndOK=7303;
						if(InJob[playerid] == 0)
						{
							new trailer = GetVehicleTrailer(carid);
							if(GetVehicleModelEx(trailer) == 584)
							{
								InJob[playerid] = 1;
								ShowPlayerAZS(playerid);
							}
							else if(GetVehicleModelEx(trailer) == 591)
							{
								InJob[playerid] = 1;
								ShowPlayerGS(playerid);
							}
						}
						GrandEndOK=7304;
					}
					else
					{
						GrandEndOK=7305;
						if(InJob[playerid] == 1)
						{
							GrandEndOK=7306;
							InJob[playerid] = 0;
							FactoryMats += 500;
							new gopost = PlayerGoPost[playerid];
							if(PlayerGoPost[playerid]!=-1)
							{
								if(PlayerGoPost[playerid]<20)TogglePlayerDynamicCP(playerid, GoFuelCP[gopost], false);
								if(PlayerGoPost[playerid]<11)TogglePlayerDynamicCP(playerid, GoGunShopCP[gopost], false);
							}
							SCM(playerid, COLOR_GREY, !"Груз который вы везете отцепился!");
							f(str, 150, "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
							UpdateDynamic3DTextLabelText(FactoryText[0], -1, str);
							PlayerGoPost[playerid]=-1;
							DetachTrailerFromVehicle(carid);
						}
						GrandEndOK=7307;
					}
					GrandEndOK=7308;
				}
				GrandEndOK=7309;
			}
			GrandEndOK=39;
			if(PI[playerid][pWarns]>0 && PI[playerid][pTimeToLastWarn]+(3600*24*10)<gettime())
			{
				GrandEndOK=7310;
				PI[playerid][pWarns]--;
				UpdatePlayerDataInt(playerid, "Warns", PI[playerid][pWarns]);
				PI[playerid][pTimeToLastWarn]=gettime();
				UpdatePlayerDataInt(playerid, "TimeToLastWarn", PI[playerid][pTimeToLastWarn]);
				SCM(playerid, -1, !"Прошло 10 дней и мы спешим вам сообщить что один варн снят.");
			}
			GrandEndOK=40;
			new tmpcar = GetPlayerVehicleID(playerid);
			GrandEndOK=7311;
			//античит на хп by union
			if(vTemp[tmpcar][vAntiRepair] > 0) vTemp[tmpcar][vAntiRepair]--;
			GrandEndOK=7312;
			new Float:vehhealth; GetVehicleHealth(tmpcar, vehhealth);
			GrandEndOK=7313;
			if(!vTemp[tmpcar][vAntiRepair] && VehicleHealth[tmpcar]<vehhealth)SetVehicleHealth(tmpcar,VehicleHealth[tmpcar]);
			GrandEndOK=7314;
			if(!vTemp[tmpcar][vAntiRepair] && VehicleHealth[tmpcar]>vehhealth) VehicleHealth[tmpcar] = vehhealth;
			GrandEndOK=41;
		}
		else
		{
			GrandEndOK=42;
			if(DRotTick[playerid] && !CodeDostupTimer[playerid])
			{
				GrandEndOK=7315;
				DRotTick[playerid] --;
				if(DRotTick[playerid] == 20) SCM(playerid, COLOR_RED, !"[Предупреждение] {FFFFFF}Через 20 секунд вы будете кикнуты за бездействие.");
				if(!DRotTick[playerid])
				{
					SCM(playerid, COLOR_RED, !"Вы были кикнуты за бездействие при авторизации.");
					Kick(playerid);
				}
				GrandEndOK=7316;
			}
			GrandEndOK=43;
			if(CodeDostupTimer[playerid] && CodeDostup)
			{
				GrandEndOK=7317;
				CodeDostupTimer[playerid] --;
				if(!CodeDostupTimer[playerid])
				{
					SCM(playerid, -1, !"Время на ввод кода доступа вышло.");
					Kick(playerid);
				}
				GrandEndOK=7318;
			}
			GrandEndOK=44;
		}
		PlayerTimerTick[playerid] = 0;
		if(DEBUG_ON)
		{
			SCMf(playerid, -1, "BogdanTimer прокрутился за %i ms", GetTickCount() - currenttime);
			printf("BogdanTimer прокрутился за %i ms", GetTickCount() - currenttime);
		}
	}
	else PlayerTimerTick[playerid] ++;
    GrandEndOK=0;
	return 1;
}
stock PlayerEndCure(playerid)
{
	if(!PI[playerid][pHeal]) return false;
	SCM(playerid, -1, "PlayerEndCure сработал для убитого дальше");
    if(PlayerLie[playerid])
	{
	    new bed = PlayerBed[playerid];
	    ClearAnims(playerid);
	    SetPlayerPos(playerid,HealInfo[bed][hCP][0],HealInfo[bed][hCP][1],HealInfo[bed][hCP][2]);
		CheckBed(playerid);
	}
	PI[playerid][pHeal] = 0;
	UpdatePlayerDataInt(playerid, "Heal", 0);
	PI[playerid][pHospCity] = 0;
	UpdatePlayerDataInt(playerid, "HospCity", 0);
	ResetSpawnInfo(playerid, GetTeamID(playerid));
	TogglePlayerControllable(playerid,true);
	return SCM(playerid, COLOR_LIGHTBLUE, !"Вы закончили свое лечение.");
}
stock SendMuteMessage(playerid) return SCMf(playerid, COLOR_GREY, "Вы заглушены. Оставшееся время заглушки %i секунд.", PI[playerid][pMuteTime]);
stock SendMuteFamilyMessage(playerid) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас бан семейного чата! Осталось %i секунд!", PI[playerid][pFamilyMute]);
stock CancelCuff(playerid)
{
    if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID)
	{
		new targetid = PlayerOfCuff[playerid];
	    PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
	    if(PlayerOfCuff[targetid] == playerid)
		{
	    	TimeOfCuff[targetid] = 0;
	    	PlayerOfCuff[targetid] = INVALID_PLAYER_ID;
		}
		ClearAnims(playerid);
	}
	return 1;
}
stock GetJobName(jobid)
{
	static jobname[50];
	switch(jobid)
	{
	    case 1: jobname = "Водитель автобуса";
	    case 2: jobname = "Детектив";
	    case 3: jobname = "Развозчик продуктов";
	    case 4: jobname = "Механик";
	    case 5: jobname = "Таксист";
	    case 6: jobname = "Адвокат";
	    case 7: jobname = "Фермер";
	    case 8: jobname = "Крупье";
	    case 9: jobname = "Инкассатор";
	    case 10: jobname = "Наркодиллер";
	    case 11: jobname = "Дальнобойщик";
	    case 12: jobname = "Развозчик пиццы";
	    case 13: jobname = "Развозчик металлолома";
	    case 14: jobname = "Мусорщик";
	    case 15: jobname = "Грузчик";
	    case 16: jobname = "Работник Налоговой";
	    case 17: jobname = "Начинающий фермер";
	    case 18: jobname = "Тракторист";
	    case 19: jobname = "Комбайнер";
	    case 20: jobname = "Водитель кукурузника";
	    case 21: jobname = "Строитель";
	    default: jobname = "None";

	}
	return jobname;
}
stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
{
    SetSpawnInfo(playerid, 255, skin, x, y, z-0.2, a, 0, 0, 0, 0, 0, 0);
    TogglePlayerControllable(playerid, false);
    NoEnterPickup[playerid] = 2;
    return true;
}
stock TShowStats(playerid, giveplayerid)
{
	static string_nickname[42];
	str_1 = "{ffcc66}[слот] Название	{ffcc66}Количество";
	static count[32];
	count[0] = EOS;
	f(string_nickname, sizeof(string_nickname), "{BEA555}%s [ID:%i]",PN(giveplayerid), giveplayerid);
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(!PI[giveplayerid][pInvItem][i]) continue;
		if(PI[giveplayerid][pInvItemAmount][i] != 0) f(count, sizeof(count), "{8F8FDC}[%i шт]", PI[giveplayerid][pInvItemAmount][i]);
		f(str_1, sizeof(str_1), "%s\n{FFFFFF}[%i] %s\t%s",str_1, i, ItemsInfo[PI[giveplayerid][pInvItem][i]][ItemName], count);
	}
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, string_nickname, str_1, "Выход", "");
}
stock ShowStats(playerid, giveplayerid)
{
	if(giveplayerid == INVALID_PLAYER_ID) return 0;

	str_2[0] = EOS;

	f(str_1, 350, "Текущее состояние счета: \t\t%i az coins\n", PI[giveplayerid][pVirMoney]);

	strcat(str_1, str_2);

	static const sex_name[][] = {
		"None",
		"Мужчина",
		"Женщина"
	};

	f(str_2, 500, "\n{FFFFFF}Имя: {B83434}[%s] \n{FFFFFF}Пол: {B83434}[%s] \n{FFFFFF}Уровень: {B83434}[%i] \n{FFFFFF}Уважение: {B83434}[%i/%i] \n{FFFFFF}Деньги: {B83434}[$%i] \n{FFFFFF}Евро: {B83434}[%i] \n{FFFFFF}BTC: {B83434}[%i]",
	PN(giveplayerid),
	sex_name[PI[giveplayerid][pSex]],
	PI[giveplayerid][pLevel],
	PI[giveplayerid][pExp],
	(PI[giveplayerid][pLevel] + 1)*4,
	PI[giveplayerid][pMoney],
	GetInvCount(playerid, Item_Euro),
	GetInvCount(playerid, Item_Bitcoin));

	strcat(str_1, str_2);

	static Phone[15];

	if(!PI[giveplayerid][pTelNum]) Phone = "Не имеется";
	else SetString(Phone, IntToStr(PI[giveplayerid][pTelNum]));

	f(str_2, 500, "\n{FFFFFF}Номер телефона: {B83434}[%s] \n{FFFFFF}Деньги в банке: {B83434}[$%i]\n{FFFFFF}Деньги на депозите: {B83434}[$%i]\n{FFFFFF}Работа: {B83434}[%s]\n",
	Phone,
	PI[giveplayerid][pBank],
	PI[giveplayerid][pDeposit],
	GetJobName(PI[giveplayerid][pJob]));

	strcat(str_1, str_2);

	if(PI[giveplayerid][pMember] > 0) f(str_2, 500,"{FFFFFF}Организация: {B83434}[%s]\n{FFFFFF}Должность: {B83434}%s(%i)\n\n",OrgInfo[GetTeamID(giveplayerid)][oName],GetRankName(GetTeamID(giveplayerid),PI[giveplayerid][pRank]),PI[giveplayerid][pRank]);
	else f(str_2, 500, "{FFFFFF}Организация: {B83434}[Не имеется] \n");

	strcat(str_1, str_2);

	f(str_2, 500, "{FFFFFF}Уровень розыска: {B83434}[%i] \n{FFFFFF}Законопослушность: {B83434}%i/100\n\n{FFFFFF}Защита: {B83434}[позже сделаю]\n{FFFFFF}Регенирация: {B83434}[позже сделаю]\n{FFFFFF}Урон: {B83434}[позже сделаю]\n{FFFFFF}Удача: {B83434}[позже сделаю]\n\n",
	PI[giveplayerid][pWanted],
	PI[giveplayerid][pZKP]);

	strcat(str_1, str_2);

	f(str_2, 500, "{FFFFFF}Предупреждения: {B83434}[%i]\n",
	PI[giveplayerid][pWarns]);

	strcat(str_1, str_2);

	static narkostr[50];

	switch(PI[giveplayerid][pAllRepl])
	{
	    case 0..100: f(narkostr,sizeof(narkostr),"\t{529020}[Нет зависимости]");
	    case 101..200: f(narkostr,sizeof(narkostr),"\t{274B09}[Возможна зависимость]");
	    case 201..300: f(narkostr,sizeof(narkostr),"\t{D79B23}[1 lvl]");//1 лвл
	    case 301..400: f(narkostr,sizeof(narkostr),"\t{D76223}[2 lvl]");//2
	    default: f(narkostr,sizeof(narkostr),"\t{961C00}[3 lvl]");//3lvl
	}

	f(str_2, 500, "{FFFFFF}Наркозависимость: {B83434}%i %s\n", PI[giveplayerid][pAllRepl], narkostr);

	strcat(str_1, str_2);

	f(str_2, 500, "{FFFFFF}Банковская карта: {B83434}[ %s ]\n", PI[giveplayerid][pBankCard] ? ("Имеется") : ("Не имеется"));

	strcat(str_1, str_2);

	static const viplevel_name[][] = {
		"Не имеется",
		"Bronze",
		"GOLD",
		"Платина",
		"Titan",
		"PREMIUM"
	};

	if(PI[giveplayerid][pVIP] < 6) f(str_2, 500, "{FFFFFF}Статус: {B83434}[%s]\n",viplevel_name[PI[giveplayerid][pVIP]]);
	else
	{
		str_3 = Mode_City_Caps;
		f(str_2, 500, "{FFFFFF}Статус: {B83434}[%s]\n", str_3);
	}

	strcat(str_1, str_2);

	f(str_2, 500, "{FFFFFF}Телефонная книжка: {B83434}[ %s ]\n", GetInvCount(giveplayerid, Item_PhoneBook) ? ("Имеется") : ("Не имеется"));
	
	strcat(str_1, str_2);
	
	f(str_2, 500, "{FFFFFF}Удочка: {B83434}[ %s ]\n", GetInvCount(giveplayerid, Item_FishingRod) ? ("Имеется") : ("Не имеется"));
	
	strcat(str_1, str_2);

	new house;

	for(new i; i < MAX_PLAYER_HOUSE; i++)
	{
		house = PI[playerid][pHouseKey][i];

		if(house == -1) continue;

	    f(str_2, 500, "{FFFFFF}Номер дома: {B83434}%i\n", house);

		strcat(str_1, str_2);

		f(str_2, 500, "{FFFFFF}Денег в доме: {B83434}%i\n", HouseInfo[house][hMoney]);

		strcat(str_1, str_2);
	}

	f(str_2, 500, "{FFFFFF}Возможность владеть 5-ми бизнесами: %s\n", PI[giveplayerid][pMore] ? ("{529020}[Есть]") : ("{B83434}[НЕТ]"));

	strcat(str_1, str_2);

	f(str_2, 500, "{FFFFFF}Возможность владеть 3-ми домами: %s\n", PI[giveplayerid][pMoreHouses] ? ("{529020}[Есть]") : ("{B83434}[НЕТ]"));

	strcat(str_1, str_2);

	foreach(new i: OWNABLECARS)
	{
	    new carid = OwnableCar[i];

		if(IsPlayerHaveCar(giveplayerid, i))
		{
			f(str_2, 500, "\n{AFAFAF}%s(%i)\nСтатус блокировки: [%s] \nСигнализация: [%s] %s\n",GetNameCar(GetVehicleModelEx(carid)),carid,
			CarInfo[i][cLock] >= 1 ? ("Закрыт"):("Открыт"),CarInfo[i][cAlarmON] >= 1 ? ("Включена"):("Выключена"),CarInfo[i][cShtraf] > 0 ? ("{FF6347}[X]"):(""));
			
			strcat(str_1, str_2);
		}
	}

	if(PI[giveplayerid][pWarns])
	{
	    f(str_2, 500, "\n{E83C3C}До слета варна осталось: \t\t%i часов.\n",floatround((PI[giveplayerid][pTimeToLastWarn]+(3600*24*10)-gettime())/3600,floatround_ceil) );
		
		strcat(str_1, str_2);
	}

	return SPD(playerid, 235, DIALOG_STYLE_MSGBOX, !"Основная статистика", str_1, !"Предметы", !"Закрыть");
}
stock ShowLicenses(playerid, giveplayerid)
{
	static str_car[144], str_bike[144], str_fly[144], str_boat[144], str_fish[144], str_gun[144], str_hunt[144];
	str_car[0] = EOS, str_bike[0] = EOS, str_fly[0] = EOS, str_boat[0] = EOS, str_fish[0] = EOS, str_gun[0] = EOS, str_hunt[0] = EOS;
	if(GetInvCount(giveplayerid, Item_Car_Lic)) f(str_car, sizeof(str_car), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pCarLic]));
	else str_car = "{FF6347}Нет";
	if(GetInvCount(giveplayerid, Item_Bike_Lic)) f(str_bike, sizeof(str_bike), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pBikeLic]));
	else str_bike = "{FF6347}Нет";
	if(GetInvCount(giveplayerid, Item_Fly_Lic)) f(str_fly, sizeof(str_fly), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pFlyLic]));
	else str_fly = "{FF6347}Нет";
	if(GetInvCount(giveplayerid, Item_Boat_Lic)) f(str_boat, sizeof(str_boat), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pBoatLic]));
	else str_boat = "{FF6347}Нет";
	if(GetInvCount(giveplayerid, Item_Fish_Lic)) f(str_fish, sizeof(str_fish), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pFishLic]));
	else str_fish = "{FF6347}Нет";
	if(GetInvCount(giveplayerid, Item_Gun_Lic)) f(str_gun, sizeof(str_gun), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pGunLic]));
	else str_gun = "{FF6347}Нет";
	if(GetInvCount(giveplayerid, Item_Hunt_Lic)) f(str_hunt, sizeof(str_hunt), "{10F441}Есть {AFAFAF}(действует до: %s)", date("%hh:%ii %dd.%mm.%yyyy", PI[giveplayerid][pHuntLic]));
	else str_hunt = "{FF6347}Нет";
	f(str_1, sizeof(str_1), "\
	{FFFFFF}Лицензия на авто:\t\t%s\n\n\
	{FFFFFF}Лицензия на мото:\t\t%s\n\n\
	{FFFFFF}Лицензия на полеты:\t\t%s\n\n\
	{FFFFFF}Лицензия на плавание:\t\t%s\n\n\
	{FFFFFF}Лицензия на ловлю рыбы:\t\t%s\n\n\
	{FFFFFF}Лицензия на оружие:\t\t%s\n\n\
	{FFFFFF}Лицензия на охоту:\t\t%s\n", str_car, str_bike, str_fly, str_boat, str_fish, str_gun, str_hunt);
	return SPD(playerid, 0, 0, !"{BFBBBA}Лицензии", str_1, !"Ок", !"");
}
stock IsANotControllable(playerid) return !(!PlayerLie[playerid] && !PlayerLieHeal[playerid] && !Crack{playerid} && !Cuffed{playerid} && !CuffedTime[playerid] && Controllable{playerid});
stock ShowStyles(playerid, giveplayerid, dialogid = 0)
{
    static Style[20];
    str_1[0] = EOS;
	switch(GetPlayerFightingStyle(giveplayerid))
	{
		case 5: Style = "Boxing";
		case 6: Style = "Kungfu";
		case 7: Style = "Kneehead";
		case 16: Style = "Elbow";
		default: Style = "Standart";
	}
    f(str_2, 100,"{FFFFFF}Boxing: \t\t%s\n",PI[giveplayerid][pBoxing] ? ("{10F441}Обучен") : ("{FF6347}Не обучен"));
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Kungfu: \t\t%s\n",PI[giveplayerid][pKungfu] ? ("{10F441}Обучен") : ("{FF6347}Не обучен"));
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Kneehead: \t\t%s\n",PI[giveplayerid][pKneehead] ? ("{10F441}Обучен") : ("{FF6347}Не обучен"));
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Elbow: \t\t\t%s\n\n",PI[giveplayerid][pElbow] ? ("{10F441}Обучен") : ("{FF6347}Не обучен"));
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Текущий стиль боя: \t{FFFF00}%s\n\n",Style);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Навык боевых искуств: \t{FFFF00}%i",PI[playerid][pSkillLevel]);
	strcat(str_1, str_2);
	return SPD(playerid, dialogid, 0, !"Стили боя", str_1, !"Ок", !"");
}
stock ShowSkills(playerid, giveplayerid, dialogid = 0)
{
	str_1[0] = EOS;
	f(str_2, 100,"{C16060}Навык стрельбы игрока: %s[%i]\n\n\n",PN(giveplayerid),giveplayerid);
	strcat(str_1, str_2);
    f(str_2, 100,"{FFFFFF}Pistol: \t\t\t{10F441}%i/100%%\n",PI[giveplayerid][pPistol_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Desert Eagle: \t\t{10F441}%i/100%%\n",PI[giveplayerid][pEagle_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}ShotGun: \t\t{10F441}%i/100%%\n",PI[giveplayerid][pShotGun_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}MP5: \t\t\t{10F441}%i/100%%\n",PI[giveplayerid][pMP5_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}AK47: \t\t\t{10F441}%i/100%%\n",PI[giveplayerid][pAK47_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}M4A1: \t\t\t{10F441}%i/100%%\n",PI[giveplayerid][pM4_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}Sniper: \t\t\t{10F441}%i/100%%\n",PI[giveplayerid][pSniper_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}SILENCED: \t\t{10F441}%i/100%%\n",PI[giveplayerid][pSDPistol_Skill]/100);
	strcat(str_1, str_2);
	f(str_2, 100,"{FFFFFF}UZI: \t\t\t{10F441}%i/100%%\n",PI[giveplayerid][pUZI_Skill]/100);
	strcat(str_1, str_2);
	return SPD(playerid, dialogid, 0, !"Статистика", str_1, !"Ок", !"");
}
stock IsDropBomb(playerid)
{
	if(CreteBomb[playerid]>200)
	{
		new Float:x,Float: y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
   		CreateExplosion(x,y,z, 7, 20.0);
	    RemovePlayerAttachedObject(playerid, 7);
	    CreteBomb[playerid]=0;
	    J_SetPlayerHealth(playerid, 0);
     	PI[playerid][pBomb]=0;
	    SCM(playerid, COLOR_GREY, !"Вы уронили бомбу и она взорвалась!");
	}
	return 1;
}
stock SetPlayerRandomKey(playerid, &key, action = true)
{
    new randkey;
    if(action) randkey = random(2);
    else randkey = random(2);
	switch(randkey)
	{
		case 0:
		{
			key = KEY_WALK;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~SNEAK_ABOUT~");
		}
		case 1:
		{
			key = KEY_JUMP;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~PED_JUMPING~");
		}
	}
	return 1;
}
stock GiveBizMoney(bizid, money)
{
	if(BizInfo[bizid][bMoney]+money < 0) return 0;
	BizInfo[bizid][bMoney]+=money;
	BizInfo[bizid][bWin]+=money;
	new UTC;
	switch(((gettime()+UTC*3600)/86400)%7)
	{
		case 4: BizInfo[bizid][bDayOfWeak0] +=money;//Понедельник
		case 5: BizInfo[bizid][bDayOfWeak1] +=money;//Вторник
		case 6: BizInfo[bizid][bDayOfWeak2] +=money;//Среда
		case 0: BizInfo[bizid][bDayOfWeak3] +=money;//Четверг
		case 1: BizInfo[bizid][bDayOfWeak4] +=money;//Пятница
		case 2: BizInfo[bizid][bDayOfWeak5] +=money;//Суббота
		case 3: BizInfo[bizid][bDayOfWeak6] +=money;//Воскресенье
	}
	SaveBiz(bizid);
    return 1;
}
stock GiveDonate(playerid, money)
{
	if(playerid == INVALID_PLAYER_ID) return false;
	if(!IsPlayerLogged{playerid}) return false;
	if(PI[playerid][pVirMoney]+money < 0)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы превысили лимит AZ-Coins");
		return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы не можете их получить, иначе они уйдут в минус!");
	}
	PI[playerid][pVirMoney] += money;
	UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
	return GameTextForPlayerf(playerid, 3000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%i AZ", money);
}
stock GiveDonateMoney(playerid, money)
{
	if(playerid == INVALID_PLAYER_ID) return false;
	if(!IsPlayerLogged{playerid}) return false;
	if(PI[playerid][pDonateMoney]+money < 0)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы превысили лимит AZ-RUB!");
		return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы не можете их получить, иначе они уйдут в минус!");
	}
	PI[playerid][pDonateMoney] += money;
	UpdatePlayerDataInt(playerid, "DonateMoney", PI[playerid][pDonateMoney]);
	return GameTextForPlayerf(playerid, 3000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%iAZ-RUB", money);
}
stock GiveMoney(playerid, money)
{
	if(playerid == INVALID_PLAYER_ID) return false;
	if(!IsPlayerLogged{playerid}) return false;
	if(PI[playerid][pMoney]+money < 0)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы превысили лимит денег!");
		return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы не можете их получить, иначе они уйдут в минус!");
	}
	PI[playerid][pMoney] += money;
	SetPlayerMoney(playerid, PI[playerid][pMoney]);
	return GameTextForPlayerf(playerid, 3000, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%i$", money);
}
forward LoadOrgs();
public LoadOrgs()
{
	new currenttime = GetTickCount();
	for(new i; i < 10; i ++) RankName[0][i] = "Гражданин";
	new count = cache_num_rows();
	for(new i = 1;i <= count;i ++)
	{
		cache_get_value_name_int(i-1, "ID", OrgInfo[i][oID]);
		cache_get_value_name(i-1, "Name", OrgInfo[i][oName]);
		cache_get_value_name(i-1, "Leader", OrgInfo[i][oLeader]);
		cache_get_value_name_int(i-1, "Bank", OrgInfo[i][oBank]);
		cache_get_value_name_int(i-1, "Drugs", OrgInfo[i][oDrugs]);
		cache_get_value_name_int(i-1, "Mats", OrgInfo[i][oMats]);
		cache_get_value_name_int(i-1, "Max_Rang", OrgInfo[i][Max_Rang]);
		cache_get_value_name(i-1, "Rank_1", RankName[i][0]);
		cache_get_value_name(i-1, "Rank_2", RankName[i][1]);
		cache_get_value_name(i-1, "Rank_3", RankName[i][2]);
		cache_get_value_name(i-1, "Rank_4", RankName[i][3]);
		cache_get_value_name(i-1, "Rank_5", RankName[i][4]);
		cache_get_value_name(i-1, "Rank_6", RankName[i][5]);
		cache_get_value_name(i-1, "Rank_7", RankName[i][6]);
		cache_get_value_name(i-1, "Rank_8", RankName[i][7]);
		cache_get_value_name(i-1, "Rank_9", RankName[i][8]);
		cache_get_value_name(i-1, "Rank_10", RankName[i][9]);
		cache_get_value_name_int(i-1, "Benz", OrgInfo[i][oBenz]);
		cache_get_value_name_int(i-1, "Remont", OrgInfo[i][oRemont]);
		cache_get_value_name_int(i-1, "Mask", OrgInfo[i][oMask]);
		cache_get_value_name_int(i-1, "Invite", OrgInfo[i][oInvite]);
		cache_get_value_name_int(i-1, "InviteRank", OrgInfo[i][oInviteRank]);
	}
	printf("LoadOrgs(%i) загрузился за %i ms", count, GetTickCount() - currenttime);
	UpdateDorms();
}
stock UpdateDorms()
{
	for(new i;i < sizeof(DormPos);i ++)
	{
		if(DormPos[i][0] + DormPos[i][1] + DormPos[i][2] != 0.0)
		{
		    new allzone = 0,narkoz=0;
			static urik[30];
			static str[150];
			str[0] = EOS;
			OrgInfo[i][oOb4ak] = 1;
			if(OrgInfo[i][oOb4ak] == 1) urik="{A92424}Закрыт{FFFFFF}";
			if(OrgInfo[i][oOb4ak] == 0) urik="{3FA924}Открыт{FFFFFF}";
			Dorm_CP[i] = CreateDynamicCP(DormPos[i][0],DormPos[i][1],DormPos[i][2],1.0,SpawnIntWorld[i][1],SpawnIntWorld[i][0],-1,10.0);
			if((i>=11 && i<=15) || i == 25)
			{
	            for(new d = 1; d < GANGZONES; d++)
				{
					if(GZInfo[d][gzFracID] == i)
					{
						allzone++;
						if (d == 33)narkoz++;
						if (d == 43)narkoz++;
						if (d == 10)narkoz++;
						if (d == 14)narkoz++;
						if (d == 24)narkoz++;
					}
				}
				f(str, 600,"Количество\nТерриторий: {FAAC58}%i{FFFFFF}\nНаркопритонов: {FAAC58}%i{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%i г{FFFFFF}\nПатроны: {FAAC58}%i шт{FFFFFF}\nКанистры: {FAAC58}%i шт{FFFFFF}\nИнструменты: {FAAC58}%i шт{FFFFFF}\nМаски: {FAAC58}%i шт{FFFFFF}\n",allzone,narkoz,urik,OrgInfo[i][oName],OrgInfo[i][oDrugs],OrgInfo[i][oMats],OrgInfo[i][oBenz],OrgInfo[i][oRemont],OrgInfo[i][oMask]);
			}
			else
			{
			    for(new bizid;bizid < OWNABLEBIZES;bizid++)
				{
				    if(BizInfo[bizid][bKrasher] != i || strcmp(BizInfo[bizid][bOwner],"The State",true) == 0 ) continue;
					allzone++;
				}
				f(str, 600,"Количество\nбизнесов {FAAC58}%i{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%i г{FFFFFF}\nПатроны: {FAAC58}%i шт{FFFFFF}\nКанистры: {FAAC58}%i шт{FFFFFF}\nИнструменты: {FAAC58}%i шт{FFFFFF}\nМаски: {FAAC58}%i шт{FFFFFF}",allzone,urik,OrgInfo[i][oName],OrgInfo[i][oDrugs],OrgInfo[i][oMats],OrgInfo[i][oBenz],OrgInfo[i][oRemont],OrgInfo[i][oMask]);
			}
			DormText[i] = CreateDynamic3DTextLabel(str, -1,DormPos[i][0],DormPos[i][1],DormPos[i][2]+1.2, 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, SpawnIntWorld[i][1], SpawnIntWorld[i][0]);
		}
	}
}
stock SaveOrg(orgid) mysql_pqueryf(mysql, "UPDATE `OrgsInfo` SET `Leader` = '%s', `Bank` = '%i', `Drugs` = '%i', `Mats` = '%i', `Benz` = '%i', `Remont` = '%i', `Mask` = '%i', `Invite` = '%i', `InviteRank` = '%i' WHERE `ID` = '%i'",OrgInfo[orgid][oLeader],OrgInfo[orgid][oBank],OrgInfo[orgid][oDrugs],OrgInfo[orgid][oMats],OrgInfo[orgid][oBenz],OrgInfo[orgid][oRemont],OrgInfo[orgid][oMask],OrgInfo[orgid][oInvite],OrgInfo[orgid][oInviteRank], orgid);
stock SaveOrgs()
{
	for(new i = 1; i < sizeof(OrgInfo); i ++) SaveOrg(i);
	return 1;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);
stock GetVehicleKindFuel(carid)
{
    switch(GetVehicleModelEx(carid))
    {
        case 403, 406..408, 414, 416, 422, 423, 427, 428, 431..433, 437, 440, 443, 455, 456, 470, 485, 498, 499, 508, 514, 515, 524, 525, 528, 531, 532, 537, 538, 544, 552, 554, 573, 578, 582, 583, 588, 599, 601, 609: return 0;
        case 400, 401, 404, 410, 412, 413, 418, 419, 420, 421, 424, 438, 439, 442, 448, 459, 462, 463, 466, 467, 474, 475, 478, 479, 482, 483, 489, 490, 491, 492, 500, 505, 517, 518, 526, 534, 536, 542, 543, 549, 566, 567, 575, 576, 579, 598, 600, 604, 605: return 1;
        case 411, 415, 429, 444, 451, 461, 477, 494, 495, 502, 503, 504, 506, 521, 522, 541, 556, 557, 581, 454, 452, 473, 484, 493: return 2;
        case 409, 402, 405, 426, 434, 436, 445, 458, 468, 471, 480, 496, 507, 516, 523, 527, 529, 533, 535, 540, 545, 546, 547, 550, 551, 555, 558, 559, 560, 561, 562, 565, 568, 571, 580, 585, 586, 587, 589, 596, 597, 602, 603: return 3;

		case 3194..3198, 3211, 3210, 3203, 3200, 3974, 4547: return 2; //мото
		case 612, 614, 663, 667, 699, 793, 794, 909, 1196, 1197, 1200, 1201, 1202, 1205, 3155, 3199, 3219, 3218, 3217, 3216, 3215, 3212, 3209, 3208, 3206, 3202, 3201, 3220, 3222, 3223, 4542..4546, 4548: return 3; //легковые
		case 613, 662, 666, 668, 965, 1194, 1195, 1198, 1199, 1203, 1204, 3156, 3157, 3158, 3213, 3207, 3205, 3204: return 1; //внедорожник
		default: return -1;
    }
    return -1;
}
stock GetRankName(org, rank)
{
	if(rank > 0) return RankName[org][(rank-1)];
	else return RankName[org][0];
}
/*stock IsASymbol(const text[], first, End)
{
	if(first < 0) first = 0;
	if(End >= strlen(text)) End = strlen(text) - 1;
	for(new i = first; i <= End; i ++) return 1;
	return 0;
}*/
new Domains[][] =
{
    "павлов",
    "хуй",
    "пиздорасы",
    "пидорасы",
    "ебу",
    "ебал",
    "пизда",
    "стейдж",
    "стрим",
    "заходим на",
    "айпи",
    "ютуб",
    "канал",
    "кладмен",
    "заходите все на",
    "сын",
    "суприм",
    "снаф",
    "кладмэн",
    "арена",
    "бонусник",
    "эндорфин",
    "ендорфин",
    "ерс",
    "сквор",
    "мать",
    "выеп",
    "выеб",
    "arz",
    "стрuм",
    "стримчанский",
    "стримец"
};
IsASymbol(text[], first, end)
{
	if(first < 0) first = 0;
	if(end >= strlen(text)) end = strlen(text) - 1;
	for(new i = first; i <= end; i ++) return true;
	return false;
}
IsADomen(text[])
{
	for(new i; i < sizeof(Domains); i ++)
	{
		new find = strfind(text, Domains[i], true);
		if(find != -1) if(IsASymbol(text, find - 2, find))return true;
	}
	return false;
}
stock TextToSmall(string[], text[])
{
	for(new i; i < 145; i++)
	{
		switch(string[i])
		{
			case 'А': text[i] = 'а';
			case 'Б': text[i] = 'б';
			case 'В': text[i] = 'в';
			case 'Г': text[i] = 'г';
			case 'Д': text[i] = 'д';
			case 'Е': text[i] = 'е';
			case 'Ё': text[i] = 'е';
			case 'Ж': text[i] = 'ж';
			case 'З': text[i] = 'з';
			case 'И': text[i] = 'и';
			case 'Й': text[i] = 'й';
			case 'К': text[i] = 'к';
			case 'Л': text[i] = 'л';
			case 'М': text[i] = 'м';
			case 'Н': text[i] = 'н';
			case 'О': text[i] = 'о';
			case 'П': text[i] = 'п';
			case 'Р': text[i] = 'р';
			case 'С': text[i] = 'с';
			case 'Т': text[i] = 'т';
			case 'У': text[i] = 'у';
			case 'Ф': text[i] = 'ф';
			case 'Х': text[i] = 'х';
			case 'Ц': text[i] = 'ц';
			case 'Ч': text[i] = 'ч';
			case 'Ш': text[i] = 'ш';
			case 'Щ': text[i] = 'щ';
			case 'Ъ': text[i] = 'ъ';
			case 'Ы': text[i] = 'ы';
			case 'Ь': text[i] = 'ь';
			case 'Э': text[i] = 'э';
			case 'Ю': text[i] = 'ю';
			case 'Я': text[i] = 'я';
			case 'є': text[i] = 'є';
			case 'І': text[i] = 'і';
			case 'A': text[i] = 'a';
			case 'B': text[i] = 'b';
			case 'C': text[i] = 'c';
			case 'D': text[i] = 'd';
			case 'E': text[i] = 'e';
			case 'F': text[i] = 'f';
			case 'G': text[i] = 'g';
			case 'H': text[i] = 'h';
			case 'I': text[i] = 'i';
			case 'J': text[i] = 'j';
			case 'K': text[i] = 'k';
			case 'L': text[i] = 'l';
			case 'M': text[i] = 'm';
			case 'N': text[i] = 'n';
			case 'O': text[i] = 'o';
			case 'P': text[i] = 'p';
			case 'Q': text[i] = 'q';
			case 'R': text[i] = 'r';
			case 'S': text[i] = 's';
			case 'T': text[i] = 't';
			case 'U': text[i] = 'u';
			case 'V': text[i] = 'v';
			case 'W': text[i] = 'w';
			case 'X': text[i] = 'x';
			case 'Y': text[i] = 'y';
			case 'Z': text[i] = 'z';
			default: text[i] = string[i];
		}
	}
	return 1;
}
stock IsAIP(playerid, const text[])
{
	if(Osnovat(PN(playerid))) return 0;
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return 1;
	return 0;
}
stock GetGasStation(playerid)
{
	new gasid = -1;
    if(IsPlayerConnected(playerid))
	{
		for(new i;i < sizeof(FuelInfo);i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,20.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		    {
		        gasid = i;
		        break;
		    }
		}
	}
	return gasid;
}
stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return 1;
	return 0;
}
stock IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new bool:Succes = false;
		for(new i;i < sizeof(FuelInfo);i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,25.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		    {
		        Succes = true;
		        break;
		    }
		}
		return Succes;
	}
	return 0;
}
stock IsAtGasStationC(carid)
{
	new bool:Succes = false;
	for(new i;i < sizeof(FuelInfo);i ++)
	{
		if(IsVehicleInRangeOfPoint(carid,10.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		{
			Succes = true;
			break;
		}
	}
	return Succes;
}
forward LoadBiz();
public LoadBiz()
{
	new currenttime = GetTickCount();
	OWNABLEBIZES = cache_num_rows();
	if(OWNABLEBIZES >= MAX_BIZ)
	{
		print("Превышен лимит домов, измените MAX_BIZ! Выключаем сервер...");
		return GameModeExit();
	}
	for(new i; i < OWNABLEBIZES; i++)
	{
		LoadOwnableBiz(i, i);
		UpdateBiz(i, 0, 1);
	}
	return printf("LoadBiz(%i) загрузился за %i ms", OWNABLEBIZES, GetTickCount() - currenttime);
}
stock LoadOwnableBiz(i, id)
{
	cache_get_value_name_int(i, "ID", BizInfo[id][bID]);
	cache_get_value_name_int(i, "State", BizInfo[id][bState]);
	cache_get_value_name(i, "Name", BizInfo[id][bName]);
 	cache_get_value_name(i, "Owner", BizInfo[id][bOwner]);
	cache_get_value_name_float(i, "Enter_X", BizInfo[id][bEnter_X]);
	cache_get_value_name_float(i, "Enter_Y", BizInfo[id][bEnter_Y]);
 	cache_get_value_name_float(i, "Enter_Z", BizInfo[id][bEnter_Z]);
 	cache_get_value_name_float(i, "Exit_X", BizInfo[id][bExit_X]);
 	cache_get_value_name_float(i, "Exit_Y", BizInfo[id][bExit_Y]);
 	cache_get_value_name_float(i, "Exit_Z", BizInfo[id][bExit_Z]);
 	cache_get_value_name_int(i, "Cost", BizInfo[id][bCost]);
 	cache_get_value_name_int(i, "Level", BizInfo[id][bNalog]);
 	cache_get_value_name_int(i, "Interior", BizInfo[id][bInt]);
 	cache_get_value_name_int(i, "Lock", BizInfo[id][bLock]);
 	cache_get_value_name_int(i, "Money", BizInfo[id][bMoney]);
 	cache_get_value_name_float(i, "EnterPrice", BizInfo[id][bEnterPrice]);
	cache_get_value_name_int(i, "Products", BizInfo[id][bProducts]);
 	cache_get_value_name_float(i, "ProdPrice", BizInfo[id][bProdPrice]);
 	cache_get_value_name_int(i, "Krasher", BizInfo[id][bKrasher]);
 	cache_get_value_name_int(i, "BuyCost", BizInfo[id][bBuyCost]);
 	cache_get_value_name_int(i, "NeedItem", BizInfo[id][bNeedItem]);
 	cache_get_value_name(i, "Zam", BizInfo[id][bZam]);
 	cache_get_value_name(i, "Description", BizInfo[id][bDescription]);
 	cache_get_value_name_int(i, "DayOfWeak0", BizInfo[id][bDayOfWeak0]);
 	cache_get_value_name_int(i, "DayOfWeak1", BizInfo[id][bDayOfWeak1]);
 	cache_get_value_name_int(i, "DayOfWeak2", BizInfo[id][bDayOfWeak2]);
 	cache_get_value_name_int(i, "DayOfWeak3", BizInfo[id][bDayOfWeak3]);
 	cache_get_value_name_int(i, "DayOfWeak4", BizInfo[id][bDayOfWeak4]);
 	cache_get_value_name_int(i, "DayOfWeak5", BizInfo[id][bDayOfWeak5]);
 	cache_get_value_name_int(i, "DayOfWeak6", BizInfo[id][bDayOfWeak6]);
	cache_get_value_name(i, "ItemCost", str_1), sscanf(str_1, "p<,>a<i>[20]", BizInfo[id][bItemCost]);
}
stock SaveSletCar(carid) mysql_pqueryf(mysql, "UPDATE `Modellimit` SET `BuyCars`='%i', `SpawnCar`='%i' WHERE `ID` = '%i'", SellInfo[carid][scCount], SellInfo[carid][scSpawn], SellInfo[carid][scID]);
stock SaveBiz(bizid)
{
	mysql_pqueryf(mysql, "UPDATE `Businesses` SET \
	`State` = '%i', `Name` = '%s', `Owner` = '%s', `Enter_X` = '%.4f', `Enter_Y` = '%.4f', `Enter_Z` = '%.4f', \
	`Exit_X` = '%.4f', `Exit_Y` = '%.4f', `Exit_Z` = '%.4f', `Cost` = '%i', `Level` = '%i', \
	`Interior` = '%i', `Lock` = '%i', `Money` = '%i', `EnterPrice` = '%.4f', `Products` = '%i', \
	`ProdPrice` = '%.4f', `Krasher`='%i', `BuyCost`='%i', `NeedItem`='%i', `Zam`='%s', `Description`='%s', \
 	`DayOfWeak0`='%i', `DayOfWeak1`='%i', `DayOfWeak2`='%i', `DayOfWeak3`='%i', `DayOfWeak4`='%i', `DayOfWeak5`='%i', `DayOfWeak6`='%i' WHERE `ID` = '%i'", \
	BizInfo[bizid][bState],\
	BizInfo[bizid][bName],\
	BizInfo[bizid][bOwner],\
 	BizInfo[bizid][bEnter_X],\
	BizInfo[bizid][bEnter_Y],\
	BizInfo[bizid][bEnter_Z],\
	BizInfo[bizid][bExit_X],\
	BizInfo[bizid][bExit_Y],\
	BizInfo[bizid][bExit_Z],\
	BizInfo[bizid][bCost],\
	BizInfo[bizid][bNalog],\
	BizInfo[bizid][bInt],\
	BizInfo[bizid][bLock],\
	BizInfo[bizid][bMoney],\
	BizInfo[bizid][bEnterPrice],\
	BizInfo[bizid][bProducts],\
	BizInfo[bizid][bProdPrice],\
	BizInfo[bizid][bKrasher],\
	BizInfo[bizid][bBuyCost],\
	BizInfo[bizid][bNeedItem],\
	BizInfo[bizid][bZam],\
	BizInfo[bizid][bDescription],\
	BizInfo[bizid][bDayOfWeak0],\
	BizInfo[bizid][bDayOfWeak1],\
	BizInfo[bizid][bDayOfWeak2],\
	BizInfo[bizid][bDayOfWeak3],\
	BizInfo[bizid][bDayOfWeak4],\
	BizInfo[bizid][bDayOfWeak5],\
	BizInfo[bizid][bDayOfWeak6],\
	BizInfo[bizid][bID]);
	return 1;
}
stock CreateOwnableCar(model, Float:X, Float:Y, Float:Z, Float:A, owner[], cost = 0)
{
	if(!cost) cost = GetCarPrice(model);

	static fmt_str[] = "INSERT INTO `Ownable`(`Model`, `Sell_X`, `Sell_Y`, `Sell_Z`, `Sell_A`, `Pos_X`, `Pos_Y`, `Pos_Z`, `Pos_A`, `Owner`, `Keyer`, `Cost`, `Lock`) VALUES ('%i','%.2f','%.2f','%.2f','%.2f','%.2f','%.2f','%.2f','%.2f','%s','%s','%i','0')";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 56 + 148, fmt_str, model, X, Y, Z, A, X, Y, Z, A, owner, owner, cost);
	mysql_query(mysql, str_3, false);

	new Cache:result = mysql_query(mysql, "SELECT * FROM Ownable ORDER BY ID DESC LIMIT 1");
	new id = Iter_Free(OWNABLECARS);
	LoadOwnableCar(0, id);
	cache_delete(result);
	OwnableCar[id] = J_AddStaticVehicleEx(CarInfo[id][cModel], CarInfo[id][cPos_X], CarInfo[id][cPos_Y], CarInfo[id][cPos_Z], CarInfo[id][cPos_A], CarInfo[id][cColor_1], CarInfo[id][cColor_2], 60000, CarInfo[id][cInterior], CarInfo[id][cVirtualWorld]);
	if(CarText[id] == NONE_3D_TEXT) CarText[id] = CreateDynamic3DTextLabel(" ", -1, 0, 0, 0.5, 5.0, INVALID_PLAYER_ID, OwnableCar[id]);
    if(CarTextTrunk[id] == NONE_3D_TEXT && CarInfo[id][cModel] == 487) CarTextTrunk[id] = CreateDynamic3DTextLabel("", 0xFFFFFF34, 0, 0, 0.5, 5.0, INVALID_PLAYER_ID, OwnableCar[id]);
	SetEngineStatus(OwnableCar[id], false, -1);
	vTemp[OwnableCar[id]][Fuel] = 100;
	UpdateCarInfo(OwnableCar[id]);
	mysql_pqueryf(mysql, "UPDATE `Ownable` SET `VehicleID` = '%i' WHERE `ID` = '%i'", OwnableCar[id], CarInfo[id][cID]);
	return OwnableCar[id];
}
stock LoadOwnableCar(i, id)
{
	cache_get_value_name_int(i, "ID", CarInfo[id][cID]);
	cache_get_value_name_int(i, "Model", CarInfo[id][cModel]);
	cache_get_value_name_float(i, "Sell_X", CarInfo[id][cSell_X]);
	cache_get_value_name_float(i, "Sell_Y", CarInfo[id][cSell_Y]);
	cache_get_value_name_float(i, "Sell_Z", CarInfo[id][cSell_Z]);
	cache_get_value_name_float(i, "Sell_A", CarInfo[id][cSell_A]);
	cache_get_value_name_float(i, "Pos_X", CarInfo[id][cPos_X]);
	cache_get_value_name_float(i, "Pos_Y", CarInfo[id][cPos_Y]);
	cache_get_value_name_float(i, "Pos_Z", CarInfo[id][cPos_Z]);
	cache_get_value_name_float(i, "Pos_A", CarInfo[id][cPos_A]);
	cache_get_value_name_int(i, "Interior", CarInfo[id][cInterior]);
	cache_get_value_name_int(i, "VirtualWorld", CarInfo[id][cVirtualWorld]);
	cache_get_value_name_int(i, "Color_1", CarInfo[id][cColor_1]);
	cache_get_value_name_int(i, "Color_2", CarInfo[id][cColor_2]);
	cache_get_value_name(i, "Owner", CarInfo[id][cOwner]);
	cache_get_value_name_int(i, "Shtrafer", CarInfo[id][cShtrafer]);
	cache_get_value_name(i, "Number", CarInfo[id][cNumber]);
	cache_get_value_name(i, "Keyer", CarInfo[id][cKeyer]);
	cache_get_value_name_int(i, "Lock", CarInfo[id][cLock]);
	cache_get_value_name_int(i, "Cost", CarInfo[id][cCost]);
	cache_get_value_name_int(i, "Shtraf", CarInfo[id][cShtraf]);
	cache_get_value_name_int(i, "AlarmON", CarInfo[id][cAlarmON]);
	cache_get_value_name_int(i, "KeyIN", CarInfo[id][cKeyIN]);
	cache_get_value_name_float(i, "Milage", CarInfo[id][cMilage]);
	cache_get_value_name_int(i, "ParkedInGarage", CarInfo[id][cParkedInGarage]);
	cache_get_value_name_int(i, "ParkedInParking", CarInfo[id][cParkedInParking]);
	cache_get_value_name_int(i, "ParkedInStanartParking", CarInfo[id][cParkedInStanartParking]);
	cache_get_value_name(i, "ShtrafName", CarInfo[id][cShtrafName]);
	cache_get_value_name_int(i, "AddCar", CarInfo[id][cAddCar]);
	cache_get_value_name_float(i, "Fuel", CarInfo[id][cFuel]);
	cache_get_value_name(i, "ModelObject", str_1), sscanf(str_1, "p<,>a<i>[6]", CarInfo[id][cModelObject]);
	cache_get_value_name(i, "ObjectPosX", str_1), sscanf(str_1, "p<,>a<f>[6]", CarInfo[id][cObjectPosX]);
	cache_get_value_name(i, "ObjectPosY", str_1), sscanf(str_1, "p<,>a<f>[6]", CarInfo[id][cObjectPosY]);
	cache_get_value_name(i, "ObjectPosZ", str_1), sscanf(str_1, "p<,>a<f>[6]", CarInfo[id][cObjectPosZ]);
	cache_get_value_name(i, "ObjectRotX", str_1), sscanf(str_1, "p<,>a<f>[6]", CarInfo[id][cObjectRotX]);
	cache_get_value_name(i, "ObjectRotY", str_1), sscanf(str_1, "p<,>a<f>[6]", CarInfo[id][cObjectRotY]);
	cache_get_value_name(i, "ObjectRotZ", str_1), sscanf(str_1, "p<,>a<f>[6]", CarInfo[id][cObjectRotZ]);
	cache_get_value_name(i, "ObjectUsed", str_1), sscanf(str_1, "p<,>a<i>[6]", CarInfo[id][cObjectUsed]);
	Iter_Add(OWNABLECARS, id);
	return 1;
}
stock LoadOwnableCarsInv(name[])
{
	foreach(new id: OWNABLECARS)
	{
		if(GetString(CarInfo[id][cOwner], name))
		{
			f(str_query, sizeof(str_query), "SELECT * FROM `inventory_data` WHERE `owner_id` = '%i' AND `type` = '4' ORDER BY `slot_id` ASC;", CarInfo[id][cID]);
			new Cache:result = mysql_query(mysql, str_query);
			new count = cache_num_rows();
			new slot_id;

			if(count)
			{
				for(new n; n < count; n++)
				{
					cache_get_value_name_int(n, "slot_id", slot_id);
					cache_get_value_name_int(n, "item_id", CarInfo[id][cTrunkItem][slot_id]);
					cache_get_value_name_int(n, "amount", CarInfo[id][cTrunkItemAmount][slot_id]);
					cache_get_value_name_int(n, "color_id", CarInfo[id][cTrunkItemColor][slot_id]);
					cache_get_value_name_int(n, "enchanted", CarInfo[id][cTrunkItemEnchant][slot_id]);
					cache_get_value_name_int(n, "mining", CarInfo[id][cTrunkItemMining][slot_id]);
				}
			}
			cache_delete(result);

			f(str_query, sizeof(str_query), "SELECT * FROM `inventory_data` WHERE `owner_id` = '%i' AND `type` = '5' ORDER BY `slot_id` ASC;", CarInfo[id][cID]);
			new Cache:result2 = mysql_query(mysql, str_query);
			count = cache_num_rows();

			if(count)
			{
				for(new j; j < count; j++)
				{
					cache_get_value_name_int(j, "slot_id", slot_id);
					cache_get_value_name_int(j, "item_id", CarInfo[id][cSlotItem][slot_id]);
				}
			}
			cache_delete(result2);
			UpdateOwnableCar(id);
		}
	}
}
stock TotalPlayerVehicle(name[])
{
    new total;
    foreach(new i: OWNABLECARS) if(GetString(CarInfo[i][cOwner], name)) total ++;
    return total;
}
stock LoadOwnableCars(const name[])
{
    mysql_format(mysql, str_query, sizeof(str_query), "SELECT * FROM `Ownable` WHERE `Owner` = '%s'", name);
    mysql_pquery(mysql, str_query, "QueryLoadCar", "s", name);
}
forward QueryLoadCar(name[]);
public QueryLoadCar(name[])
{
    new currenttime = GetTickCount();
    new id, total, vehid, connect;
    for(new i; i < cache_num_rows(); i++)
    {
        id = Iter_Free(OWNABLECARS);
        cache_get_value_name_int(i, "LoadConnect", connect);
        if(!GetString(name, "The State"))
        {
            if(connect == 0 || total >= 2)
            {
            	cache_get_value_name_int(i, "ID", vehid);
                mysql_pqueryf(mysql, "UPDATE `Ownable` SET `VehicleID` = '-1' WHERE `ID` = '%i'", vehid);
                continue;
            }
            total ++;
        }
        LoadOwnableCar(i, id);
        if(IsASellCar(id)) OwnableCar[id] = J_AddStaticVehicleEx(CarInfo[id][cModel], CarInfo[id][cSell_X], CarInfo[id][cSell_Y], CarInfo[id][cSell_Z], CarInfo[id][cSell_A], CarInfo[id][cColor_1], CarInfo[id][cColor_2], 60000, CarInfo[id][cInterior], CarInfo[id][cVirtualWorld]);
        else OwnableCar[id] = J_AddStaticVehicleEx(CarInfo[id][cModel], CarInfo[id][cPos_X], CarInfo[id][cPos_Y], CarInfo[id][cPos_Z], CarInfo[id][cPos_A], CarInfo[id][cColor_1], CarInfo[id][cColor_2], 60000, CarInfo[id][cInterior], CarInfo[id][cVirtualWorld]);
        if(CarText[id] == NONE_3D_TEXT) CarText[id] = CreateDynamic3DTextLabel(" ",-1,0,0,0.5,5.0,INVALID_PLAYER_ID,OwnableCar[id]);
		if(CarTextTrunk[id] == NONE_3D_TEXT && CarInfo[id][cModel] == 487) CarTextTrunk[id] = CreateDynamic3DTextLabel("", 0xFFFFFF34, 0, 0, 0.5, 5.0, INVALID_PLAYER_ID, OwnableCar[id]);
		for(new j; j < 8; j++) if(CarInfo[id][cSlotItem][j] != 0) AttachInstall(id, j);
        if(GetString(name, "The State")) UpdateOwnableCar(id);
		if(CarInfo[id][cParkedInStanartParking]) SetVehiclePosToStandartPark(OwnableCar[id]);
		SetVehicleToRespawn(OwnableCar[id]);
        if(CarInfo[id][cModel] == 487 && CarTextTrunk[id] == NONE_3D_TEXT) CarTextTrunk[id] = CreateDynamic3DTextLabel("", 0xFFFFFF34, 0, 0, 0.5, 5.0, INVALID_PLAYER_ID, OwnableCar[id]);
        mysql_pqueryf(mysql, "UPDATE `Ownable` SET `VehicleID` = '%i' WHERE `ID` = '%i'", OwnableCar[id], CarInfo[id][cID]);
    }
    return printf("LoadOwnableCars загрузился за %i ms", GetTickCount() - currenttime);
}
forward LoadFamily();
public LoadFamily()
{
	new currenttime = GetTickCount();
	new count = cache_num_rows();
    if(count >= MAX_FAMILY)
	{
		print("Превышен лимит семей, измените MAX_FAMILY! Выключаем сервер...");
		return GameModeExit();
	}
    for(new i; i < count; i++) LoadOwnableFamily(i, i);
    return printf("LoadFamily(%i) загрузился за %i ms", count, GetTickCount() - currenttime);
}
stock LoadOwnableFamily(i, id)
{
    cache_get_value_name_int(i, "id", FamilyInfo[id][famID]);
    cache_get_value_name(i, "slogan", FamilyInfo[id][famSlogan]);
    cache_get_value_name(i, "name", FamilyInfo[id][famName]);
    cache_get_value_name_int(i, "memberscount", FamilyInfo[id][famMembersCount]);
    cache_get_value_name(i, "creator", FamilyInfo[id][famCreator]);
    cache_get_value_name(i, "zam", FamilyInfo[id][famZam]);
    cache_get_value_name(i, "zam2", FamilyInfo[id][famZam2]);
    cache_get_value_name_int(i, "chatcolor", FamilyInfo[id][famChatColor]);
    cache_get_value_name_int(i, "galka", FamilyInfo[id][famGalka]);
    cache_get_value_name_int(i, "brand", FamilyInfo[id][famBrand]);
    cache_get_value_name(i, "discord", FamilyInfo[id][famDiscord]);
    cache_get_value_name_int(i, "house", FamilyInfo[id][famHouse]);
    cache_get_value_name_int(i, "rep", FamilyInfo[id][famRep]);
    cache_get_value_name_int(i, "money", FamilyInfo[id][famMoney]);
    cache_get_value_name_int(i, "Respect", FamilyInfo[id][famRespect]);
    cache_get_value_name_int(i, "QuestTalon", FamilyInfo[id][famQuestTalon]);
    cache_get_value_name_int(i, "Bussines", FamilyInfo[id][famBussines]);
    cache_get_value_name_int(i, "Shadow", FamilyInfo[id][famShadow]);
    cache_get_value_name_int(i, "MedicCredit", FamilyInfo[id][famMedicCredit]);
    cache_get_value_name_int(i, "WhiteList", FamilyInfo[id][famWhiteList]);
    cache_get_value_name_int(i, "BankOffer", FamilyInfo[id][famBankOffer]);
    cache_get_value_name_int(i, "Marodery", FamilyInfo[id][famMarodery]);
    cache_get_value_name_int(i, "EatFish", FamilyInfo[id][famEatFish]);
    cache_get_value_name_int(i, "Type", FamilyInfo[id][famType]);
    cache_get_value_name_int(i, "EXP", FamilyInfo[id][famEXP]);
    cache_get_value_name_int(i, "Level", FamilyInfo[id][famLevel]);
	Iter_Add(OWNABLEFAMILYS, id);
	return 1;
}
stock UnLoadOwnableCars(name[])
{
	foreach(new i: OWNABLECARS) if(GetString(CarInfo[i][cOwner], name)) SafeRemoveCar(i, i);
	return 1;
}
stock ResetCarArrays(i)
{
	if(CarText[i] != NONE_3D_TEXT)
	{
		DestroyDynamic3DTextLabel(CarText[i]);
		CarText[i] = NONE_3D_TEXT;
	}
	if(CarTextTrunk[i] != NONE_3D_TEXT)
	{
		DestroyDynamic3DTextLabel(CarTextTrunk[i]);
		CarTextTrunk[i] = NONE_3D_TEXT;
	}
	SetString(CarInfo[i][cOwner], "The State");
	SetString(CarInfo[i][cNumber], ""NAME" ST");
	SetString(CarInfo[i][cKeyer], "The State");
	SetString(CarInfo[i][cShtrafName], "The State");
	CarInfo[i][cID] = INVALID_VEHICLE_ID;
	CarInfo[i][cModel] = 0;
	CarInfo[i][cSell_X] = 0.0;
	CarInfo[i][cSell_Y] = 0.0;
	CarInfo[i][cSell_Z] = 0.0;
	CarInfo[i][cSell_A] = 0.0;
	CarInfo[i][cPos_X] = 0.0;
	CarInfo[i][cPos_Y] = 0.0;
	CarInfo[i][cPos_Z] = 0.0;
	CarInfo[i][cPos_A] = 0.0;
	CarInfo[i][cInterior] = 0;
	CarInfo[i][cVirtualWorld] = 0;
	CarInfo[i][cColor_1] = 0;
	CarInfo[i][cColor_2] = 0;
	CarInfo[i][cShtrafer] = 0;
	CarInfo[i][cLock] = 0;
	CarInfo[i][cCost] = 0;
	CarInfo[i][cShtraf] = 0;
	CarInfo[i][cAlarmON] = 0;
	CarInfo[i][cKeyIN] = 0;
	CarInfo[i][cMilage] = 0;
	CarInfo[i][cParkedInGarage] = 0;
	CarInfo[i][cParkedInParking] = 0;
	CarInfo[i][cParkedInStanartParking] = 0;
	CarInfo[i][cAddCar] = 0;
	CarInfo[i][cFuel] = 0;

	new carid = OwnableCar[i];
	for(new j; j < 30; j++)
	{
		CarInfo[i][cTrunkItem][j] = 0;
		CarInfo[i][cTrunkItemAmount][j] = 0;
		CarInfo[i][cTrunkItemColor][j] = 0;
		CarInfo[i][cTrunkItemEnchant][j] = 0;
		CarInfo[i][cTrunkItemMining][j] = 0;

		TrunkInfo[carid][TrunkItem][j] = 0;
		TrunkInfo[carid][TrunkItemAmount][j] = 0;
		TrunkInfo[carid][TrunkItemColor][j] = 0;
		TrunkInfo[carid][TrunkItemEnchant][j] = 0;
		TrunkInfo[carid][TrunkItemMining][j] = 0;

		if(j < 8) CarInfo[i][cSlotItem][j] = 0;
		if(j < 6)
		{
			CarInfo[i][cObjectPosX][j] = 0;
			CarInfo[i][cObjectPosY][j] = 0;
			CarInfo[i][cObjectPosZ][j] = 0;
			CarInfo[i][cObjectRotX][j] = 0;
			CarInfo[i][cObjectRotY][j] = 0;
			CarInfo[i][cObjectRotZ][j] = 0;
			CarInfo[i][cObjectUsed][j] = 0;
		}
	}
	OwnableCar[i] = INVALID_VEHICLE_ID;
}
forward LoadSletCar();
public LoadSletCar()
{
	new currenttime = GetTickCount();
	SALONOWNABLECARS = cache_num_rows();
	for(new i; i < SALONOWNABLECARS; i++)
	{
		cache_get_value_name_int(i, "ID", SellInfo[i][scID]);
		cache_get_value_name_int(i, "BuyCars", SellInfo[i][scCount]);
		cache_get_value_name_int(i, "SpawnCar", SellInfo[i][scSpawn]);
		cache_get_value_name_int(i, "Model", SellInfo[i][scModel]);
		cache_get_value_name_float(i, "Pos_X", SellInfo[i][sc_Pos_X]);
		cache_get_value_name_float(i, "Pos_Y", SellInfo[i][sc_Pos_Y]);
		cache_get_value_name_float(i, "Pos_Z", SellInfo[i][sc_Pos_Z]);
		cache_get_value_name_float(i, "Pos_A", SellInfo[i][sc_Pos_A]);
	}
	printf("LoadSletCar(%i) загрузился за %i ms", SALONOWNABLECARS, GetTickCount() - currenttime);
}
stock SellCar(number, &next, playerid)
{
	mysql_pqueryf(mysql, "DELETE FROM `Ownable` WHERE `ID` = '%i'", CarInfo[number][cID]);
	mysql_pqueryf(mysql, "DELETE FROM `inventory_data` WHERE `owner_id` = '%i'", CarInfo[number][cID]);
	SafeRemoveCar(number, next);
	if(pTemp[playerid][pSellCar] != -1)
	{
	    if(autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid)
	    {
			new i = pTemp[playerid][pSellCar];
			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
	        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
	        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         	DestroyAutoBazarTable(i);
         	pTemp[playerid][pSellCar] = -1;
	        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
	    	if(autoBazarInfo[i][autoBazarType] == 1) UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	else UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		}
	}
	return 1;
}

stock SaveOwnableCar(number)
{
    mysql_pqueryf(mysql, "UPDATE `Ownable` SET \
	`Model` = '%i', `Sell_X` = '%.4f', `Sell_Y` = '%.4f', `Sell_Z` = '%.4f', `Sell_A` = '%.4f', \
	`Pos_X` = '%.4f', `Pos_Y` = '%.4f', `Pos_Z` = '%.4f', `Pos_A` = '%.4f', `VirtualWorld` = '%i', `Interior`= '%i' ,`Color_1` = '%i', \
	`Color_2` = '%i', `Owner` = '%s', `Keyer` = '%s', `Shtrafer` = '%i', `Number` = '%s', \
	`Cost` = '%i', `Lock` = '%i', `Shtraf` = '%i', `KeyIN` = '%i', \
    `AlarmON` = '%i', `Milage` = '%f', `ParkedInGarage` = '%i', `ParkedInParking` = '%i', `ParkedInStanartParking` = '%i', `ShtrafName` = '%s', \
    `Fuel` = '%f' WHERE `ID` = '%i'", \
   	CarInfo[number][cModel],\
	CarInfo[number][cSell_X],\
	CarInfo[number][cSell_Y],\
	CarInfo[number][cSell_Z],\
	CarInfo[number][cSell_A],\
	CarInfo[number][cPos_X],\
	CarInfo[number][cPos_Y],\
	CarInfo[number][cPos_Z],\
	CarInfo[number][cPos_A],\
	CarInfo[number][cVirtualWorld],\
	CarInfo[number][cInterior],\
	CarInfo[number][cColor_1],\
	CarInfo[number][cColor_2],\
	CarInfo[number][cOwner],\
	CarInfo[number][cKeyer],\
	CarInfo[number][cShtrafer],\
	CarInfo[number][cNumber],\
	CarInfo[number][cCost],\
	CarInfo[number][cLock],\
	CarInfo[number][cShtraf],\
	CarInfo[number][cKeyIN],\
	CarInfo[number][cAlarmON],\
	CarInfo[number][cMilage],\
	CarInfo[number][cParkedInGarage],\
	CarInfo[number][cParkedInParking],\
	CarInfo[number][cParkedInStanartParking],\
	CarInfo[number][cShtrafName],\
	CarInfo[number][cFuel],\
	CarInfo[number][cID]);
    return 1;
}
stock RandomMassive(massive[], size)
{
	for(new i; i < size; i ++)
	{
	    new rand = random(size), mass = massive[i];
	    massive[i] = massive[rand];
	   	massive[rand] = mass;
	}
}
forward LoadItems();
public LoadItems()
{
	new currenttime = GetTickCount();
    OWNABLEITEMS = cache_num_rows();
    new ID_next, ID;
    if(OWNABLEITEMS >= MAX_ITEMS)
	{
		print("Превышен лимит айтемов, измените MAX_ITEMS! Выключаем сервер...");
		return GameModeExit();
	}
	for(new i; i < OWNABLEITEMS; i++)
	{
		cache_get_value_name_int(i, "ID", ID);
		if(i > 0 && ID < OWNABLEITEMS-1)
		{
			cache_get_value_name_int(i+1, "ID", ID_next);
			if(ID+1 != ID_next)
			{
				printf("Нарушена целосность айдишников айтемов в бд(ID:%i ID_next:%i)! Выключаем сервер...", ID, ID_next);
				return GameModeExit();
			}
		}
		cache_get_value_name_int(i, "ItemModel", ItemsInfo[i][ItemModel]);
		cache_get_value_name_float(i, "ItemPosX", ItemsInfo[i][ItemPosX]);
		cache_get_value_name_float(i, "ItemPosY", ItemsInfo[i][ItemPosY]);
		cache_get_value_name_float(i, "ItemPosZ", ItemsInfo[i][ItemPosZ]);
		cache_get_value_name_float(i, "ItemPosC", ItemsInfo[i][ItemPosC]);
		cache_get_value_name_int(i, "MaxItem", ItemsInfo[i][MaxItem]);
		cache_get_value_name(i, "ItemInfo", ItemsInfo[i][ItemInfo]);
		cache_get_value_name(i, "ItemName", ItemsInfo[i][ItemName]);
		cache_get_value_name_int(i, "ItemType", ItemsInfo[i][ItemType]);
		cache_get_value_name(i, "ItemColor", str_1), ItemsInfo[i][ItemColor] = HexStr(str_1);
	}
	return printf("LoadItems(%i) загрузился за %i ms", OWNABLEITEMS, GetTickCount() - currenttime);
}
forward LoadHouses();
public LoadHouses()
{
	new currenttime = GetTickCount();
	OWNABLEHOUSES = cache_num_rows();
    if(OWNABLEHOUSES >= MAX_HOUSES)
	{
		print("Превышен лимит домов, измените MAX_HOUSES! Выключаем сервер...");
		return GameModeExit();
	}
	for(new i; i < OWNABLEHOUSES; i++)
	{
		LoadOwnableHouse(i, i);
		f(str_query, sizeof(str_query), "SELECT * FROM `inventory_data` WHERE `owner_id` = '%i' AND `type` = '3' ORDER BY `slot_id` ASC;", HouseInfo[i][hID]);
		mysql_pquery(mysql, str_query, "LoadOwnableHouseInv", "i", i);
		UpdateLoadHouse(i);
	}
	return printf("LoadHouses(%i) загрузился за %i ms", OWNABLEHOUSES, GetTickCount() - currenttime);
}
stock UpdateLoadHouse(i)
{
	HouseIcon[i] = CreateDynamicMapIcon(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z], 31, 0,500);
	HouseCP[i] = CreateDynamicCP(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z], 2.0, -1, -1, -1, 25.0);
	House3DText[i] = CreateDynamic3DTextLabel(!" Дом ",0xE1AE3CFF,HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y],HouseInfo[i][hEnter_Z],25.0);
    UpdateHouseGarage(i);
	UpdateHouse(i, 0);
}
stock LoadOwnableHouse(i, id)
{
	cache_get_value_name_int(i, "ID", HouseInfo[id][hID]);
	cache_get_value_name_float(i, "Enter_X", HouseInfo[id][hEnter_X]);
	cache_get_value_name_float(i, "Enter_Y", HouseInfo[id][hEnter_Y]);
	cache_get_value_name_float(i, "Enter_Z", HouseInfo[id][hEnter_Z]);
	cache_get_value_name_float(i, "Exit_X", HouseInfo[id][hExit_X]);
	cache_get_value_name_float(i, "Exit_Y", HouseInfo[id][hExit_Y]);
	cache_get_value_name_float(i, "Exit_Z", HouseInfo[id][hExit_Z]);
	cache_get_value_name(i, "Owner", HouseInfo[id][hOwner]);
	cache_get_value_name(i, "Room_Owner_0", HRoomOwner[id][0]);
	cache_get_value_name(i, "Room_Owner_1", HRoomOwner[id][1]);
	cache_get_value_name(i, "Room_Owner_2", HRoomOwner[id][2]);
	cache_get_value_name(i, "Room_Owner_3", HRoomOwner[id][3]);
	cache_get_value_name(i, "Room_Owner_4", HRoomOwner[id][4]);
	cache_get_value_name(i, "Room_Owner_5", HRoomOwner[id][5]);
	cache_get_value_name_int(i, "Level", HouseInfo[id][hLevel]);
	cache_get_value_name_int(i, "Cost", HouseInfo[id][hCost]);
	cache_get_value_name_int(i, "Lock", HouseInfo[id][hLock]);
	cache_get_value_name_int(i, "Int", HouseInfo[id][hInt]);
	cache_get_value_name_int(i, "Money", HouseInfo[id][hMoney]);
	cache_get_value_name_int(i, "Drugs", HouseInfo[id][hDrugs]);
	cache_get_value_name_int(i, "Mats", HouseInfo[id][hMats]);
	cache_get_value_name_int(i, "Bar", HouseInfo[id][hBar]);
	cache_get_value_name_int(i, "Podval", HouseInfo[id][hPodval]);
	cache_get_value_name_int(i, "Products", HouseInfo[id][hProducts]);
	cache_get_value_name_int(i, "Nalog", HouseInfo[id][hNalog]);
	cache_get_value_name_int(i, "Klass", HouseInfo[id][hKlass]);
	cache_get_value_name_int(i, "Med", HouseInfo[id][hMed]);
	cache_get_value_name_int(i, "Garage", HouseInfo[id][hGarage]);
	cache_get_value_name_float(i, "Garage_X", HouseInfo[id][hGarage_X]);
	cache_get_value_name_float(i, "Garage_Y", HouseInfo[id][hGarage_Y]);
	cache_get_value_name_float(i, "Garage_Z", HouseInfo[id][hGarage_Z]);
    cache_get_value_name(i, "Description", HouseInfo[id][hDescription]);
    cache_get_value_name_int(i, "MiningPodval", HouseInfo[id][hMiningPodval]);
    if(HouseInfo[i][hMiningPodval] == 1)
    {
        cache_get_value_name(i, "MiningStatus", str_1), sscanf(str_1, "p<,>a<i>[20]", HouseInfo[i][hMiningStatus]);
        cache_get_value_name(i, "MiningProfit", str_1), sscanf(str_1, "p<,>a<f>[20]", HouseInfo[i][hMiningProfit]);
        cache_get_value_name(i, "MiningLevel", str_1), sscanf(str_1, "p<,>a<i>[20]", HouseInfo[i][hMiningLevel]);
        cache_get_value_name(i, "MiningState", str_1), sscanf(str_1, "p<,>a<f>[20]", HouseInfo[i][hMiningState]);
    }
}
forward LoadOwnableHouseInv(id);
public LoadOwnableHouseInv(id)
{
	new count = cache_num_rows();
	new slot_id;

	if(count)
	{
		for(new j; j < count; j++)
		{
			cache_get_value_name_int(j, "slot_id", slot_id);
			cache_get_value_name_int(j, "item_id", HouseInfo[id][hItem][slot_id]);
			cache_get_value_name_int(j, "amount", HouseInfo[id][hItemAmount][slot_id]);
			cache_get_value_name_int(j, "color_id", HouseInfo[id][hItemColor][slot_id]);
			cache_get_value_name_int(j, "enchanted", HouseInfo[id][hItemEnchant][slot_id]);
			cache_get_value_name_int(j, "mining", HouseInfo[id][hItemMining][slot_id]);
		}
	}
}
stock SaveMining(house, type)
{
    static table[20];
    table[0] = EOS, str_1[0] = EOS;
    for(new i; i < 20; i++)
    {
        switch(type)
        {
            case 0: f(str_1, sizeof(str_1), "%s%i,", str_1, HouseInfo[house][hMiningStatus][i]), table = "MiningStatus";//MiningStatus
            case 1: f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hMiningProfit][i]), table = "MiningProfit";//MiningProfit
            case 2: f(str_1, sizeof(str_1), "%s%i,", str_1, HouseInfo[house][hMiningLevel][i]), table = "MiningLevel";//MiningLevel
            case 3: f(str_1, sizeof(str_1), "%s%f,", str_1, HouseInfo[house][hMiningState][i]), table = "MiningState";//MiningState
        }
    }
    return mysql_pqueryf(mysql, "UPDATE `Houses` SET `%s` = '%s' WHERE `ID` = '%i'", table, str_1, house+1);
}
stock SaveHouse(houseid)
{
    mysql_pqueryf(mysql,\
    "\
	    UPDATE `Houses` SET `Enter_X` = '%.4f',`Enter_Y` = '%.4f',\
	    `Enter_Z` = '%.4f', `Exit_X` = '%.4f', `Exit_Y` = '%.4f', `Exit_Z` = '%.4f',\
	    `Owner` = '%s', `Room_Owner_0` = '%s',`Room_Owner_1` = '%s', `Room_Owner_2` = '%s',\
	   	`Room_Owner_3` = '%s', `Room_Owner_4` = '%s', `Room_Owner_5` = '%s', `Level` = '%i', `Cost` = '%i',\
	    `Lock` = '%i', `Int` = '%i', `Money` = '%i', `Drugs` = '%i',\
	    `Mats` = '%i', `Bar` = '%i', `Podval` = '%i', `Products` = '%i', `Nalog` = '%i',\
	    `Klass` = '%i', `Med` = '%i', `Garage`='%i', `Garage_X`='%.4f', `Garage_Y`='%.4f', `Garage_Z`='%.4f', `Description`='%s', `MiningPodval` = '%i' WHERE `ID` = '%i'\
    ", \
    HouseInfo[houseid][hEnter_X],\
    HouseInfo[houseid][hEnter_Y],\
    HouseInfo[houseid][hEnter_Z],\
    HouseInfo[houseid][hExit_X],\
    HouseInfo[houseid][hExit_Y],\
    HouseInfo[houseid][hExit_Z],\
    HouseInfo[houseid][hOwner],\
    HRoomOwner[houseid][0],\
    HRoomOwner[houseid][1],\
    HRoomOwner[houseid][2],\
    HRoomOwner[houseid][3],\
    HRoomOwner[houseid][4],\
    HRoomOwner[houseid][5],\
    HouseInfo[houseid][hLevel],\
    HouseInfo[houseid][hCost],\
    HouseInfo[houseid][hLock],\
    HouseInfo[houseid][hInt],\
    HouseInfo[houseid][hMoney],\
    HouseInfo[houseid][hDrugs],\
    HouseInfo[houseid][hMats],\
    HouseInfo[houseid][hBar],\
    HouseInfo[houseid][hPodval],\
    HouseInfo[houseid][hProducts],\
    HouseInfo[houseid][hNalog],\
    HouseInfo[houseid][hKlass],\
    HouseInfo[houseid][hMed],\
    HouseInfo[houseid][hGarage],\
    HouseInfo[houseid][hGarage_X],\
    HouseInfo[houseid][hGarage_Y],\
    HouseInfo[houseid][hGarage_Z],\
    HouseInfo[houseid][hDescription],\
    HouseInfo[houseid][hMiningPodval],\
    HouseInfo[houseid][hID]);
    return 1;
}
stock ProxDetectorS(Float:radi, playerid, targetid, spec = 0)
{
    new Float:p[3];
    if(!IsPlayerConnected(playerid)) return 0;
    if(!IsPlayerConnected(targetid)) return 0;
    if(!spec)
    {
	    if(GetPlayerState(playerid) == 9) return 0;
	    if(GetPlayerState(targetid) == 9) return 0;
    }
    if(!GetPlayerPos(targetid, p[0], p[1], p[2])) return 0;
	if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2])) return 0;
	return 1;
}
stock GetMonthDays(year, month)
{
	switch(month)
	{
	    case 0:     return 31;
	    case 1: 	return 31;
	    case 2: 	return februarydays(year);
	    case 3: 	return 31;
	    case 4: 	return 30;
	    case 5: 	return 31;
	    case 6: 	return 30;
	    case 7: 	return 31;
	    case 8: 	return 31;
	    case 9: 	return 30;
	    case 10: 	return 31;
	    case 11: 	return 30;
	    case 12: 	return 31;
	    default: 	return -1;
	}
	return -1;
}
stock februarydays(year)
{
	if(!(year % 4)) return 29;
	else return 28;
}
forward LoadGangZones();
public LoadGangZones()
{
	new currenttime = GetTickCount();
	GANGZONES = cache_num_rows();
	for(new i; i < GANGZONES; i ++)
	{
		cache_get_value_name_int(i, "GangID", GZInfo[i][gzFracID]);
		cache_get_value_name_float(i, "Min_X", GZInfo[i][gzMin_X]);
	 	cache_get_value_name_float(i, "Min_Y", GZInfo[i][gzMin_Y]);
	 	cache_get_value_name_float(i, "Max_X", GZInfo[i][gzMax_X]);
	 	cache_get_value_name_float(i, "Max_Y", GZInfo[i][gzMax_Y]);
		if(i) GangZone[i] = GangZoneCreate(GZInfo[i][gzMin_X],GZInfo[i][gzMin_Y],GZInfo[i][gzMax_X],GZInfo[i][gzMax_Y]);
	}
	printf("LoadGangZones(%i) загрузился за %i ms", GANGZONES, GetTickCount() - currenttime);
}
stock SaveGangZone(zoneid)
{
	mysql_pqueryf(mysql, "UPDATE `ZonesInfo` SET `GangID` = '%i', `Min_X` = '%.4f', `Min_Y` = '%.4f', `Max_X` = '%.4f', `Max_Y` = '%.4f' WHERE `ID` = '%i'", \
	GZInfo[zoneid][gzFracID],\
	GZInfo[zoneid][gzMin_X],\
	GZInfo[zoneid][gzMin_Y],\
	GZInfo[zoneid][gzMax_X],\
	GZInfo[zoneid][gzMax_Y],\
	zoneid + 1);
	return 1;
}
stock NoVehicleFuel(carid)
{
	new playerid = GetVehicleSeat(carid, 0);
	if(playerid != INVALID_PLAYER_ID) SCM(playerid, COLOR_GREY, !"В этом транспорте закончилось топливо.");
	return 1;
}
stock ValidNumberCars(playerid)
{
	new number;
	switch(PI[playerid][pVIP])
	{
	    case 4: number = 2;
		case 5: number = 4;
		case 6: number = 20;
	}
	if(GetPlayerHouse(playerid) != -1) number ++;
	return number;
}
stock IsValidNumberCars(playerid)
{
    GetNumberCars(playerid,PI[playerid][pCars]);
	new cars = PI[playerid][pCars]+1;
	new vc = ValidNumberCars(playerid);
    if(vc >= cars) return 1;
    return 0; 
}
stock DetachMusor(vehicleid)
{
	if(!IsVehicleConnected(vehicleid)) return 1;
	if(vTemp[vehicleid][vJob] != JOB_MUSOR) return 1;
    new musor = NowMusor[vehicleid];
    if(musor != -1)
	{
	    NowMusor[vehicleid] = -1;
	   	MusorCar[musor] = -1;
	   	StopDynamicObject(TempMusorObject[musor]);
	   	TempMusorMusor[TempMusorObject[musor]] = -1;
	   	DestroyDynamicObject(TempMusorObject[musor]), TempMusorObject[musor] = -1;
	   	DestroyDynamicObject(Temp2MusorObject[musor]), Temp2MusorObject[musor] = -1;
	   	DestroyDynamicObject(MusorObject[musor]);
	   	RemoveObject[MusorObject[musor]] = false;
	   	MusorObject[musor] = CreateDynamicObject(RandTrash(), MusorPos[musor][0], MusorPos[musor][1], MusorPos[musor][2], 0, 0, MusorPos[musor][3]);
   	}
   	return 1;
}
stock SetHouseInt( houseid, inte )
{
    HouseInfo[houseid][hExit_X] = GHSPos[inte][0];
    HouseInfo[houseid][hExit_Y] = GHSPos[inte][1];
    HouseInfo[houseid][hExit_Z] = GHSPos[inte][2];
	HouseInfo[houseid][hInt] = IntInfo[inte][iInterior];
	return 1;
}
stock IsAArmy(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_ARMYSF,TEAM_ARMY,TEAM_ARMYLV: return 1;
	}
	return 0;
}
stock IsANews(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV: return 1;
	}
	return 0;
}
stock IsANewsCar(carid)
{
	switch(vTemp[carid][vTeam])
	{
  		case TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV: return 1;
	}
	return 0;
}
stock IsACop(playerid, other = 1)
{
	new team = GetTeamID(playerid);
	if(other)
	{
		switch(team)
		{
		    case TEAM_LSPD..TEAM_LVPD, TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return 1;
		}
	}
	else
	{
	    switch(team)
		{
		    case TEAM_LSPD..TEAM_LVPD, TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return 1;
		}
	}
	return 0;
}
stock IsACopCar(carid, other = 1)
{
	if(other)
	{
		switch(vTemp[carid][vTeam])
		{
      		case TEAM_LSPD..TEAM_LVPD, TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return 1;
		}
	}
	else
	{
	    switch(vTemp[carid][vTeam])
		{
		    case TEAM_LSPD..TEAM_LVPD,TEAM_PDLV: return 1;
		}
	}
	return 0;
}
stock SendCopsMessage(color,const string[])
{
	foreach(new i: Player)
	{
	    if(IsACop(i) && PI[i][pKillShow] == 0) SCM(i, color, string);
	}
	return 1;
}
stock SetFullness(playerid, ammount)
{
    if(ammount > 100) Fullness[playerid] = 100;
    else if(ammount < 0) Fullness[playerid] = 0;
    else Fullness[playerid] = ammount;
    UpdatePlayerDataInt(playerid, "Fullness", Fullness[playerid]);
    if(!PI[playerid][pHungryShow]) Hunger(playerid, 0);
    Interface_Arizona(playerid, Arz_Hunger, Fullness[playerid]);
    return 1;
}
stock GiveFullness(playerid, ammount)
{
    SetFullness(playerid,Fullness[playerid] + ammount);
    if(Fullness[playerid] + ammount > 100) Fullness[playerid] = 100;
    if(!PI[playerid][pHungryShow]) Hunger(playerid, 0);
}
stock ASCMToAll(color,const text[]) foreach(new i: Player) if(!PI[i][pAdmAction]) SCM(i,color,text);
stock SendTeamMessage(team,color,const text[]) foreach(new i: Player) if(PI[i][pRacia] == 0 && GetTeamID(i) == team || Vnedren[i] == team) SCM(i,color,text);
stock SendVIPMessage(color,const text[]) foreach(new i: Player) if(PI[i][pVipChat] == 0 && PI[i][pVIP] >= 4) SCM(i,color,text);
stock SendFamilyMessage(family, color, const text[])
{
	foreach(new i: Family) 
	{
		if(PI[i][pFamilyMember] == -1) continue;
		if(!PI[i][pFamilyChat] && PI[i][pFamilyMember] == family) SCM(i, color, text);
	}
}

stock SendGosMessage(color,const text[])
{
	foreach(new i: Player)
	{
    	if(GetTeamID(i) == TEAM_LSPD	||
		GetTeamID(i) == TEAM_LVPD		||
		GetTeamID(i) == TEAM_FBI		||
		GetTeamID(i) == TEAM_ARMY		||
		GetTeamID(i) == TEAM_ARMYSF		||
		GetTeamID(i) == TEAM_SFPD		||
		GetTeamID(i) == TEAM_LICENSERS	||
        GetTeamID(i) == TEAM_MEDICLS	||
        GetTeamID(i) == TEAM_MEDICLV	||
        GetTeamID(i) == TEAM_MERIALS	||
		GetTeamID(i) == TEAM_ARMYLV		||
		GetTeamID(i) == TEAM_RADIO		||
		GetTeamID(i) == TEAM_RADIOSF	||
		GetTeamID(i) == TEAM_RADIOLV	||
		GetTeamID(i) == TEAM_BANK		||
		GetTeamID(i) == TEAM_MEDICSF	||
		GetTeamID(i) == TEAM_PDLV) if(!PI[i][pDepChat]) SCM(i, color, text);
    }
    return 1;
}
stock SetPlayerCriminal(playerid,forplayerid,wanted,reason[])
{
	if(wanted > 6) PI[forplayerid][pWanted] = 6;
	else PI[forplayerid][pWanted] = wanted;
	if(PI[forplayerid][pZKP] > wanted)
	{
		PI[forplayerid][pZKP] -= wanted;
		UpdatePlayerDataInt(forplayerid, "ZKP", PI[forplayerid][pZKP]);
	}
	J_SetPlayerWantedLevel(forplayerid, PI[playerid][pWanted]);
	f(str_1, sizeof(str_1), "{FFFFFF} Вы были объявлены в розыск!\n Обвинитель: {FF6347}%s[%i].{FFFFFF}\n Причина: {FF6347}%s.", PN(playerid), playerid, reason);
	SPD(forplayerid, 0, 0, !"{BFBBBA}", str_1, !"Понял", !"");
	SCMf(forplayerid, -1, "Ваш текущий уровень розыска: {FF6347}%i",PI[forplayerid][pWanted]);
	f(str_2, 145, "Внимание!{FFFFFF} %s[%i] был(а) объявлен(a) в розыск! Обвинитель: %s[%i] | Причина: {FF6347}%s",PN(forplayerid),forplayerid,PN(playerid),playerid,reason);
	SendCopsMessage(COLOR_LIGHTRED, str_2);
	f(str_2, 145, "Внимание!{FFFFFF} %s[%i] был(а) объявлен(a) в розыск! Обвинитель: %s[%i] | Причина: {FF6347}%s",PN(forplayerid),forplayerid,PN(playerid),playerid,reason);
	SendAdminsMessage(COLOR_LIGHTRED, str_2);
	return aml(27, playerid, PN(forplayerid), reason);
}
stock DelTunCar(carid)
{
	new number = GetVehicleID(carid);
	return number;
}
stock IsPlayerInHisVehicle(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(IsPlayerHaveCar(playerid, GetVehicleID(GetPlayerVehicleID(playerid)))) return 1;
	}
	return 0;
}
stock SendGovMessage(playerid,result[])
{
	if(IsPlayerConnected(playerid))
	{
	    new team = GetTeamID(playerid);
	    switch(team)
	    {
	    	case TEAM_LSPD,TEAM_PDLV,TEAM_LVPD,TEAM_FBI,TEAM_SFPD,TEAM_MEDICLS,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MEDICSF,TEAM_LICENSERS,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMY,TEAM_ARMYLV,TEAM_BANK,TEAM_ARMYSF: SCMAllf(COLOR_GOV, "Гос.Новости: %s[%i]: %s",PN(playerid), playerid, result);
			default: return 0;
		}
	}
	return 1;
}
stock ShowRules(playerid, dialogid = 0)
{
	str_1[0] = EOS;
	strcat(str_1, "{9ACD32}1. Игровой процесс{FFFFFF}");
	strcat(str_1, "\n1.1 Запрещено использовать читы, трейнеры, моды и т.д");
	strcat(str_1, "\n1.2 Запрещено убивать игроков на месте спауна.");
	strcat(str_1, "\n1.3 Запрещено использовать <ESC> в целях 'спасения' от оппонента.");
	strcat(str_1, "\n1.4 Запрещено стоять на паузе в игре длительное время.");
	strcat(str_1, "\n1.5 Запрещено использование багов, ошибок, недоработок мода.");
	strcat(str_1, "\n1.6 Запрещена любая ускоренная прокачка персонажа и навыков.");
	strcat(str_1, "\n1.7 Запрещено заниматься не игровой коммерцией.");
	strcat(str_1, "\n1.8 Запрещено передавать свой пароль на сервере другим лицам.");
	strcat(str_1, "\n\n{9ACD32}2. Процесс общения{FFFFFF}");
	strcat(str_1, "\n2.1 Запрещено проявлять неуважение к серверу и его разработчикам.");
	strcat(str_1, "\n2.2 Запрещены угрозы игрокам (не относящиеся к игровому процессу).");
	strcat(str_1, "\n2.3 Запрещено слишком часто писать заглавными буквами.");
	strcat(str_1, "\n2.4 Запрещено рекламировать что-либо (сайты, форумы, сервера).");
	strcat(str_1, "\n2.5 Запрещено часто повторять одинаковые фразы.");
	strcat(str_1, "\n\n{9ACD32}3. Администрирование сервера{FFFFFF}");
	strcat(str_1, "\n3.1 Запрещено обсуждать/критиковать действия администрации.");
	strcat(str_1, "\n3.2 Запрещено препятствовать администрации в работе.");
	strcat(str_1, "\n3.3 Запрещено оскорблять администрацию сервера.");
	strcat(str_1, "\n\n{9ACD32}4. Помощь по игре{FFFFFF}");
	strcat(str_1, "\n4.1 Основные функции сервера в меню персонажа, нажмите Y");
	strcat(str_1, "\n4.2 Чтобы обратиться за помощью, нажмите ALT+N Report/Support");
	SPD(playerid, dialogid, 0, !"{FFFFFF}Правила сервера", str_1, !"Принять", !"");
	return 1;
}
stock IsGiveWarn(playerid, targetid)
{
	if(PI[playerid][pMember] == PI[targetid][pMember] && PI[playerid][pRank] >= OrgInfo[PI[playerid][pMember]][Max_Rang]-1) return 1;
	return 0;
}
stock IsACopGate(gate)
{
	switch(GateInfo[gate][gOrg])
	{
	    case TEAM_LSPD,TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsACopDoor(door)
{
	switch(DoorInfo[door][dOrg])
	{
	    case TEAM_LSPD,TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsACopBarrier(barrier)
{
	switch(BarrierInfo[barrier][brOrg])
	{
	    case TEAM_LSPD,TEAM_PDLV,TEAM_FBI,TEAM_SFPD: return 1;
	    default: return 0;
	}
	return 0;
}
stock IsPlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if((x <= max_x && x >= min_x) && (y <= max_y && y >= min_y)) return 1;
	return 0;
}
stock FindTheNearestJob(playerid)
{
    JobsInfo[Position][0] = GetPlayerDistanceFromPoint(playerid, JobsPos[0][0], JobsPos[0][1], JobsPos[0][2]);
    for(new i = 1; i < sizeof(JobsInfo); ++i)
    {
        if(JobsInfo[Position][0] <= (JobsInfo[Position][1] = GetPlayerDistanceFromPoint(playerid, JobsPos[i][0], JobsPos[i][1], JobsPos[i][2]))) continue;
        JobsInfo[Position][0] = JobsInfo[Position][1];
        JobsInfo[JobsId] = i;
    }
    EnableGPSForPlayer(playerid, JobsPos[JobsInfo[JobsId]][0], JobsPos[JobsInfo[JobsId]][1], JobsPos[JobsInfo[JobsId]][2]);
    return 0;
}
stock endrabavt(i)
{
	if(pTemp[i][pArendaCar]!=-1)
	{
	    new carsid=GetPlayerVehicleID(i),playerid=i;
	    GetVehicleHealth(carsid,VehicleHealth[carsid] );
	    if(VehicleHealth[carsid]<700.0)
	    {
	        new money = floatround(1000.0-VehicleHealth[carsid]);
			if(GetMoney(playerid)>=money)
			{
				GiveMoney(playerid,-money);
				aml(52, playerid, "", "порча гос имущества (т/с)", money);
				SCMf(playerid,COLOR_LIGHTRED, "Вы заплатили {FFFFFF}%i${FF6347} за порчу государственного имущества! {FFFFFF}(( {FF6347}Вы сильно побили машину{FFFFFF} )).",money);
			}
			else if(PI[playerid][pBank]>=money)
			{
				PI[playerid][pBank] -= money;
				UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
				aml(62, playerid, "", "порча гос имущества (т/с)", money);
				SCMf(playerid,COLOR_LIGHTRED, "С банковского счета было изьято {FFFFFF}%i${FF6347} за порчу гос. имущества! {FFFFFF}(( {FF6347}Вы сильно побили машину{FFFFFF} )).",money);
			}
			else if(PI[playerid][pZKP]>=10)
			{
		 		PI[playerid][pZKP]-=10;
		 		UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
		 		SCM(playerid, COLOR_LIGHTRED, !"У вас не достаточно денег чтобы заплатить за разбитое авто. Ваша законопослушность была снижена!");
			}
	    }
		SCMf(i, COLOR_ACHAT, "Рабочий день завершен. Вами заработано: {FFFFFF}%i$", BusMoney[i]);
		GiveMoney(i,BusMoney[i]);
		aml(51, playerid, "", "работу автобусника", BusMoney[i]);
		UpdateDynamic3DTextLabelText(AutobCarText[pTemp[i][pArendaCar]], 0xFFFFFFFF, "{E06C1F}Автобус\n{73B461}[Для аренды]");
		SetVehicleToRespawn(pTemp[i][pArendaCar]);
		BusTime[i] = 0;
		pTemp[i][pArendaCar] = -1;
		BusMoney[i] = 0;
		pPressed[i] = 0;
		DisablePlayerRaceCheckpoint(i);
		pTemp[i][vReis] = 0;
	}
	return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(gpss[playerid]==1)
	{
		gpss[playerid]=0;
		DisablePlayerRaceCheckpoint(playerid);
	}
    new getcar = GetPlayerVehicleID(playerid);
   	if(PI[playerid][pJob] == 1 && GetVehicleModel(getcar) == 437 && GetPlayerState(playerid)==2)
    {
        DisablePlayerRaceCheckpoint(playerid);
        switch(pTemp[playerid][vReis])
		{
		    case 1:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 36)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusCityLS[0][BUSSTATION1],BusCityLS[0][BUS_COORD1][0],BusCityLS[0][BUS_COORD1][1],BusCityLS[0][BUS_COORD1][2],BusCityLS[1][BUS_COORD1][0],BusCityLS[1][BUS_COORD1][1],BusCityLS[1][BUS_COORD1][2],10.0);
			        return 1;
			    }
			    if(BusCityLS[pPressed[playerid]-1][BUSSTATION1] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( Внутри-городской ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusCityLS[pPressed[playerid]][BUSSTATION1],BusCityLS[pPressed[playerid]][BUS_COORD1][0],BusCityLS[pPressed[playerid]][BUS_COORD1][1],BusCityLS[pPressed[playerid]][BUS_COORD1][2],BusCityLS[pPressed[playerid]+1][BUS_COORD1][0],BusCityLS[pPressed[playerid]+1][BUS_COORD1][1],BusCityLS[pPressed[playerid]+1][BUS_COORD1][2],10.0);
			}
			case 2:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 66)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusFarm[0][BUSSTATION2],BusFarm[0][BUS_COORD2][0],BusFarm[0][BUS_COORD2][1],BusFarm[0][BUS_COORD2][2],BusFarm[1][BUS_COORD2][0],BusFarm[1][BUS_COORD2][1],BusFarm[1][BUS_COORD2][2],10.0);
			        return 1;
			    }
			    if(BusFarm[pPressed[playerid]-1][BUSSTATION2] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛС -> Jefferson -> Ферма -> Завод ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusFarm[pPressed[playerid]][BUSSTATION2],BusFarm[pPressed[playerid]][BUS_COORD2][0],BusFarm[pPressed[playerid]][BUS_COORD2][1],BusFarm[pPressed[playerid]][BUS_COORD2][2],BusFarm[pPressed[playerid]+1][BUS_COORD2][0],BusFarm[pPressed[playerid]+1][BUS_COORD2][1],BusFarm[pPressed[playerid]+1][BUS_COORD2][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusFarm[pPressed[playerid]-1][BUS_COORD2][0],BusFarm[pPressed[playerid]-1][BUS_COORD2][1],BusFarm[pPressed[playerid]-1][BUS_COORD2][2]))return Kick(playerid);
			}
			case 3:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 38)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusZav[0][BUSSTATION3],BusZav[0][BUS_COORD3][0],BusZav[0][BUS_COORD3][1],BusZav[0][BUS_COORD3][2],BusZav[1][BUS_COORD3][0],BusZav[1][BUS_COORD3][1],BusZav[1][BUS_COORD3][2],10.0);
			        return 1;
			    }
			    if(BusZav[pPressed[playerid]-1][BUSSTATION3] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛС -> Завод ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusZav[pPressed[playerid]][BUSSTATION3],BusZav[pPressed[playerid]][BUS_COORD3][0],BusZav[pPressed[playerid]][BUS_COORD3][1],BusZav[pPressed[playerid]][BUS_COORD3][2],BusZav[pPressed[playerid]+1][BUS_COORD3][0],BusZav[pPressed[playerid]+1][BUS_COORD3][1],BusZav[pPressed[playerid]+1][BUS_COORD3][2],10.0);
			}
			case 4:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 27)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusAvto[0][BUSSTATION4],BusAvto[0][BUS_COORD4][0],BusAvto[0][BUS_COORD4][1],BusAvto[0][BUS_COORD4][2],BusAvto[1][BUS_COORD4][0],BusAvto[1][BUS_COORD4][1],BusAvto[1][BUS_COORD4][2],10.0);
			        return 1;
			    }
			    if(BusAvto[pPressed[playerid]-1][BUSSTATION4] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛС -> Лос Сантос -> Грузчики) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusAvto[pPressed[playerid]][BUSSTATION4],BusAvto[pPressed[playerid]][BUS_COORD4][0],BusAvto[pPressed[playerid]][BUS_COORD4][1],BusAvto[pPressed[playerid]][BUS_COORD4][2],BusAvto[pPressed[playerid]+1][BUS_COORD4][0],BusAvto[pPressed[playerid]+1][BUS_COORD4][1],BusAvto[pPressed[playerid]+1][BUS_COORD4][2],10.0);
			}
			case 5:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 50)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusLv[0][BUSSTATION5],BusLv[0][BUS_COORD5][0],BusLv[0][BUS_COORD5][1],BusLv[0][BUS_COORD5][2],BusLv[1][BUS_COORD5][0],BusLv[1][BUS_COORD5][1],BusLv[1][BUS_COORD5][2],10.0);
			        return 1;
			    }
			    if(BusLv[pPressed[playerid]-1][BUSSTATION5] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛС -> ЖД ЛВ -> Авиашкола ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusLv[pPressed[playerid]][BUSSTATION5],BusLv[pPressed[playerid]][BUS_COORD5][0],BusLv[pPressed[playerid]][BUS_COORD5][1],BusLv[pPressed[playerid]][BUS_COORD5][2],BusLv[pPressed[playerid]+1][BUS_COORD5][0],BusLv[pPressed[playerid]+1][BUS_COORD5][1],BusLv[pPressed[playerid]+1][BUS_COORD5][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusLv[pPressed[playerid]-1][BUS_COORD5][0],BusLv[pPressed[playerid]-1][BUS_COORD5][1],BusLv[pPressed[playerid]-1][BUS_COORD5][2]))return Kick(playerid);
			}
			case 6:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 51)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusLvv[0][BUSSTATION6],BusLvv[0][BUS_COORD6][0],BusLvv[0][BUS_COORD6][1],BusLvv[0][BUS_COORD6][2],BusLvv[1][BUS_COORD6][0],BusLvv[1][BUS_COORD6][1],BusLvv[1][BUS_COORD6][2],10.0);
			        return 1;
			    }
			    if(BusLvv[pPressed[playerid]-1][BUSSTATION6] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛВ -> Полиция ЛВ -> Спортзал -> Больница ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusLvv[pPressed[playerid]][BUSSTATION6],BusLvv[pPressed[playerid]][BUS_COORD6][0],BusLvv[pPressed[playerid]][BUS_COORD6][1],BusLvv[pPressed[playerid]][BUS_COORD6][2],BusLvv[pPressed[playerid]+1][BUS_COORD6][0],BusLvv[pPressed[playerid]+1][BUS_COORD6][1],BusLvv[pPressed[playerid]+1][BUS_COORD6][2],10.0);
			}
			case 7:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 53)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusLvvv[0][BUSSTATION7],BusLvvv[0][BUS_COORD7][0],BusLvvv[0][BUS_COORD7][1],BusLvvv[0][BUS_COORD7][2],BusLvvv[1][BUS_COORD7][0],BusLvvv[1][BUS_COORD7][1],BusLvvv[1][BUS_COORD7][2],10.0);
			        return 1;
			    }
			    if(BusLvvv[pPressed[playerid]-1][BUSSTATION7] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛВ -> Army LV -> Fort Carson -> Карьер ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusLvvv[pPressed[playerid]][BUSSTATION7],BusLvvv[pPressed[playerid]][BUS_COORD7][0],BusLvvv[pPressed[playerid]][BUS_COORD7][1],BusLvvv[pPressed[playerid]][BUS_COORD7][2],BusLvvv[pPressed[playerid]+1][BUS_COORD7][0],BusLvvv[pPressed[playerid]+1][BUS_COORD7][1],BusLvvv[pPressed[playerid]+1][BUS_COORD7][2],10.0);
			}
			case 8:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 66)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,bussf[0][BUSSTATION8],bussf[0][BUS_COORD8][0],bussf[0][BUS_COORD8][1],bussf[0][BUS_COORD8][2],bussf[1][BUS_COORD8][0],bussf[1][BUS_COORD8][1],bussf[1][BUS_COORD8][2],10.0);
			        return 1;
			    }
			    if(bussf[pPressed[playerid]-1][BUSSTATION8] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛС -> Jefferson -> ЖД СФ -> Автошкола ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,bussf[pPressed[playerid]][BUSSTATION8],bussf[pPressed[playerid]][BUS_COORD8][0],bussf[pPressed[playerid]][BUS_COORD8][1],bussf[pPressed[playerid]][BUS_COORD8][2],bussf[pPressed[playerid]+1][BUS_COORD8][0],bussf[pPressed[playerid]+1][BUS_COORD8][1],bussf[pPressed[playerid]+1][BUS_COORD8][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,bussf[pPressed[playerid]-1][BUS_COORD8][0],bussf[pPressed[playerid]-1][BUS_COORD8][1],bussf[pPressed[playerid]-1][BUS_COORD8][2]))return Kick(playerid);
			}
			case 9:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 68)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,buslvsf[0][BUSSTATION9],buslvsf[0][BUS_COORD9][0],buslvsf[0][BUS_COORD9][1],buslvsf[0][BUS_COORD9][2],buslvsf[1][BUS_COORD9][0],buslvsf[1][BUS_COORD9][1],buslvsf[1][BUS_COORD9][2],10.0);
			        return 1;
			    }
			    if(buslvsf[pPressed[playerid]-1][BUSSTATION9] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД ЛВ -> Казино -> Fort Carson -> ЖД СФ ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,buslvsf[pPressed[playerid]][BUSSTATION9],buslvsf[pPressed[playerid]][BUS_COORD9][0],buslvsf[pPressed[playerid]][BUS_COORD9][1],buslvsf[pPressed[playerid]][BUS_COORD9][2],buslvsf[pPressed[playerid]+1][BUS_COORD9][0],buslvsf[pPressed[playerid]+1][BUS_COORD9][1],buslvsf[pPressed[playerid]+1][BUS_COORD9][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,buslvsf[pPressed[playerid]-1][BUS_COORD9][0],buslvsf[pPressed[playerid]-1][BUS_COORD9][1],buslvsf[pPressed[playerid]-1][BUS_COORD9][2]))return Kick(playerid);
			}
			case 10:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 54)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,bussfsf[0][BUSSTATION10],bussfsf[0][BUS_COORD10][0],bussfsf[0][BUS_COORD10][1],bussfsf[0][BUS_COORD10][2],bussfsf[1][BUS_COORD10][0],bussfsf[1][BUS_COORD10][1],bussfsf[1][BUS_COORD10][2],10.0);
			        return 1;
			    }
			    if(bussfsf[pPressed[playerid]-1][BUSSTATION10] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( Городской СФ ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,bussfsf[pPressed[playerid]][BUSSTATION10],bussfsf[pPressed[playerid]][BUS_COORD10][0],bussfsf[pPressed[playerid]][BUS_COORD10][1],bussfsf[pPressed[playerid]][BUS_COORD10][2],bussfsf[pPressed[playerid]+1][BUS_COORD10][0],bussfsf[pPressed[playerid]+1][BUS_COORD10][1],bussfsf[pPressed[playerid]+1][BUS_COORD10][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,bussfsf[pPressed[playerid]-1][BUS_COORD10][0],bussfsf[pPressed[playerid]-1][BUS_COORD10][1],bussfsf[pPressed[playerid]-1][BUS_COORD10][2]))return Kick(playerid);
			}
			case 11:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 74)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,bussffa[0][BUSSTATION11],bussffa[0][BUS_COORD11][0],bussffa[0][BUS_COORD11][1],bussffa[0][BUS_COORD11][2],bussffa[1][BUS_COORD11][0],bussffa[1][BUS_COORD11][1],bussffa[1][BUS_COORD11][2],10.0);
			        return 1;
			    }
			    if(bussffa[pPressed[playerid]-1][BUSSTATION11] == 1)
				{
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					SCM(playerid, COLOR_GREY, !"Остановите автобус и подождите пассажиров!");
					ProxDetector(45,playerid,"Автобус по маршруту ( ЖД СФ -> Ферма -> RCPD -> Завод ) отъезжает через 10 секунд.",COLOR_PURPLE);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,bussffa[pPressed[playerid]][BUSSTATION11],bussffa[pPressed[playerid]][BUS_COORD11][0],bussffa[pPressed[playerid]][BUS_COORD11][1],bussffa[pPressed[playerid]][BUS_COORD11][2],bussffa[pPressed[playerid]+1][BUS_COORD11][0],bussffa[pPressed[playerid]+1][BUS_COORD11][1],bussffa[pPressed[playerid]+1][BUS_COORD11][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,bussffa[pPressed[playerid]-1][BUS_COORD11][0],bussffa[pPressed[playerid]-1][BUS_COORD11][1],bussffa[pPressed[playerid]-1][BUS_COORD11][2])) return Kick(playerid);
			}
		}
    }
	return 1;
}
stock Send2BarBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,"Бармен:\n{FFFFFF}Приятного аппетита.");
        case 1: SendBotMessage(playerid,"Бармен:\n{FFFFFF}Как говорится, смотри не переедайся. *Улыбается*");
        case 2: SendBotMessage(playerid,"Бармен:\n{FFFFFF}Запивать чем-то будешь?");
    }
	return 1;
}
stock SendEatBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(4))
    {
		case 0: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Спасибо за покупку. Хорошего дня!");
		case 1: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Недалеко от сюда есть хороший бар, советую заглянуть.");
		case 2: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Без сдачи не найдется? *Улыбается*");
		case 3: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Спасибо за покупку, надеюсь тебе понравилось.");
    }
	return 1;
}
stock SendAmmoBot(playerid)
{
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Спасибо за покупку.");
        case 1: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Ты только эт смотри не балуйся.");
        case 2: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Ладно, держи и заходи еще *Улыбается*.");
    }
	return 1;
}
stock SendBotMessage(playerid,mesage[])
{
	if(!IsPlayerLogged{playerid}) return 0;
	new id;
	if(!IsAtBankomat(playerid,2.0))
	{
	    new Float:x, Float:y, Float:z,Float:x1, Float:y1, Float:z1;
	    new Float: minDist,minA=-1;
	    GetPlayerPos(playerid, x1, y1, z1);
	    foreach(new i: Actor)
		{
			if(!IsActorStreamedIn(i,playerid)) continue;
			if(GetActorVirtualWorld(i)!=GetPlayerVirtualWorld(playerid)) continue;
			GetActorPos(i, x, y, z);
			new Float: Dist=PointToPoint(x,y,z,x1,y1,z1);
			if(Dist<30)
			{
				if (minDist>Dist || minDist==0)
				{
				    minA = i;
				    minDist = Dist;
				}
			}
		}
		if(minA!=-1)
		{
			ApplyActorAnimation(minA,"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
		    Update3DTextLabelText(tActor[minA], COLOR_GREY, mesage);
		    actortime[minA]=10;
		    id =minA;
		}
	}
	if(strfind(mesage, "\n")==-1) SCM(playerid,COLOR_GREY,mesage);
	return id;
}
stock SendPedBot(playerid)
{
    switch(random(4))
    {
        case 0: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Ммм. Хороший выбор. Давно хотел себе такой.");
        case 1: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Этот костюм прям на вас сшитый *Улыбается*");
        case 2: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Такое чувство, что он прям на вас создан *Улыбается*");
        case 3: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Вы просто восхетительны в нем.");
    }
	return 1;
}
stock SendBarBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(3))
    {
        case 0: SendBotMessage(playerid, "Бармен:\n{FFFFFF}Ухх, смотри не напивайся. *Улыбается*");
        case 1: SendBotMessage(playerid, "Бармен:\n{FFFFFF}Хороший выбор.");
        case 2: SendBotMessage(playerid, "Бармен:\n{FFFFFF}Надеюсь тебе понравится.");
    }
	return 1;
}
stock SendBankBot(playerid)
{
	if(!IsAtBankomat(playerid,5))
	{
	    switch(random(4))
	    {
	        case 0: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Спасибо, обращайтесь еще.");
	        case 1: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Все готово, можете все проверить.");
	        case 2: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Хорошо что вы обратились именно ко мне *Улыбается*.");
	        case 3: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Спасибо за обращение. Можете все проверить.");
	    }
	}
	else SendBotMessage(playerid, "Всего доброго.");
	return 1;
}
#if AC_ON
stock ShowPlayer_AntiCheatSettings(playerid)
{
    new triggeredCount = 0, page = pAntiCheatSettingsPage{playerid}, next = 0, index = 0;
    str_2 = "Название\tНаказание\tНаказано\n";
    for(new i; i < AC_MAX_CODES; i++)
    {
        if(i >= (page * AC_MAX_CODES_ON_PAGE) && i < (page * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE) next++;
        if(i >= (page - 1) * AC_MAX_CODES_ON_PAGE && i < ((page - 1) * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE)
        {
            triggeredCount = AC_CODE_TRIGGERED_COUNT[i];
            f(str_2, sizeof(str_2), "%s[%s] %s\t%s\t[%i игроков]\n", str_2, AC_CODE[i], AC_CODE_NAME[i], AC_TRIGGER_TYPE_NAME[AC_CODE_TRIGGER_TYPE[i]], triggeredCount);
            pAntiCheatSettingsMenuListData[playerid][index++] = i;
        }
    }
    if(next) strcat(str_2, ""AC_DIALOG_NEXT_PAGE_TEXT"\n");
    if(page > 1) strcat(str_2, AC_DIALOG_PREVIOUS_PAGE_TEXT);
   	return SPD(playerid, DIALOG_ANTICHEAT_SETTINGS, DIALOG_STYLE_TABLIST_HEADERS, !"SAMP-X-AC "NEX_AC_VERSION" SAMP 0.3.7", str_2, !"Выбрать", !"Отмена");
}
stock ShowPlayer_AntiCheatEditCode(playerid, code)
{
    str_1[0] = EOS;
    f(str_2, sizeof(str_2), "Код: %s | Название: %s", AC_CODE[code], AC_CODE_NAME[code]);
    for(new i; i < AC_MAX_TRIGGER_TYPES; i++)
    {
        strcat(str_1, AC_TRIGGER_TYPE_NAME[i]);
        if(i + 1 != AC_MAX_TRIGGER_TYPES) strcat(str_1, "\n");
    }
    return SPD(playerid, DIALOG_ANTICHEAT_EDIT_CODE, DIALOG_STYLE_LIST, str_2, str_1, !"Выбрать", !"Назад");
}
#endif

stock GetMoney(playerid) return PI[playerid][pMoney];
stock GetBankMoney(playerid) return PI[playerid][pBank];
stock GetDonate(playerid) return PI[playerid][pVirMoney];
stock GetDonateMoney(playerid) return PI[playerid][pDonateMoney];
stock GetPlayerBizes(playerid)
{
	new num, retn;
    for(new i;i < OWNABLEBIZES; i++) if(GetString(BizInfo[i][bOwner], PN(playerid))) num++;
	switch(PI[playerid][pMore])
	{
		case 0:
		{
			if(num < 2) retn = 1;
			switch(PI[playerid][pVIP])
			{
				case 6: if(num < 13) retn = 1;
			}
		}
		default:
		{
			if(num < 5) retn = 1;
			switch(PI[playerid][pVIP])
			{
				case 6: if(num < 15) retn = 1;
			}
		}
	}
	return retn;
}
stock GetPlayerHouses(playerid)
{
	new num, retn;
	for(new i; i < MAX_PLAYER_HOUSE; i++)
	{	
		if(PI[playerid][pHouseKey][i] == -1) continue;
		num ++;
	}
	switch(PI[playerid][pMoreHouses])
	{
		case 0:
		{
			if(num <= 1) retn = 1;
			switch(PI[playerid][pVIP])
			{
				case 5: if(num < 4) retn = 1;
				case 6: if(num < 13) retn = 1;
			}
		}
		default:
		{
			if(num <= 2) retn = 1;
			switch(PI[playerid][pVIP])
			{
				case 5: if(num < 6) retn = 1;
				case 6: if(num < 15) retn = 1;
			}
		}
	}
	return retn;
}
stock GetPlayerBiz(playerid)
{
	new num = -1;
    for(new i; i < OWNABLEBIZES; i++)
    {
    	if(GetString(BizInfo[i][bOwner], PN(playerid)))
    	{
    		num = i;
    		break;
    	}
    }
	return num;
}
stock IsAPlayerHouse(playerid, house)
{
	new retn;
	for(new i; i < MAX_PLAYER_HOUSE; i++)
	{
		if(PI[playerid][pHouseKey][i] != house) continue;
		retn = 1;
		break;
	}
	if(!retn && PI[playerid][pHouseSpawn] == house) retn = 1;
	return retn;
}
stock DeletePlayerHouse(playerid, house)
{
	for(new i; i < MAX_PLAYER_HOUSE; i++)
	{
		if(PI[playerid][pHouseKey][i] != house) continue;
		PI[playerid][pHouseKey][i] = -1;
	    //SaveHouseKey(playerid);
		break;
	}
	return 1;
}
stock SetPlayerHouse(playerid, house)
{
	new free = GetPlayerFreeHouseSlot(playerid);
	if(free == -1)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Напишите администраторам, внутренная ошибка сервера! Заскриньте (f8).");
		printf("У игрока %s pID(%i) GetPlayerFreeHouseSlot получился -1", PN(playerid), PI[playerid][pID]);
		return 0;
	}
	PI[playerid][pHouseKey][free] = house;
	//SaveHouseKey(playerid);
	return 1;
}
stock GetPlayerFreeHouseSlot(playerid)
{
	new num = -1;
	for(new i; i < MAX_PLAYER_HOUSE; i++)
	{
		if(PI[playerid][pHouseKey][i] != -1) continue;
		num = i;
		break;
	}
	return num;
}
stock GetPlayerFirstHouse(playerid)
{
	new num = -1;
	for(new i; i < MAX_PLAYER_HOUSE; i++)
	{
		if(PI[playerid][pHouseKey][i] == -1) continue;
		num = PI[playerid][pHouseKey][i];
		break;
	}
	return num;
}
stock ShowPlayerHome(playerid, dialogid, type = 1)
{
	new home, city; 
	if(type == 1)
	{
		new Float:distance, zona;
		str_1 = "{FFFFFF}Номер дома\t{FFFFFF}Город\t{FFFFFF}Округ\t{FFFFFF}Дистанция\n";
		for(new i;i < OWNABLEHOUSES;i ++)
		{
			if(GetString(HouseInfo[i][hOwner], PN(playerid)) || GetString(HRoomOwner[i][HouseRooms[GetHouseStyle(i)]], PN(playerid)))
			{
				ShowHouse[playerid][home] = i;
				distance = GetPlayerDistanceFromPoint(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
				city = GetCityName(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y]);
				zona = GetZonaName(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y]);
				f(str_1, sizeof(str_1), "%s[%i]Дом №%i\t%s\t%s\t%.0f метров\n", str_1, home, i, gSAZonesCity[city][SAZONE_NAME], gSAZones[zona][SAZONE_NAME], distance);
				home ++;
			}
		}
	}
	else if(type == 2)
	{
		new nalog;
		str_1 = "{FFFFFF}Номер дома\t{FFFFFF}Город\t{FFFFFF}Налог\t{FFFFFF}Коммуналка\n";
		for(new i;i < OWNABLEHOUSES;i ++)
		{
			if(GetString(HouseInfo[i][hOwner], PN(playerid)) || GetString(HRoomOwner[i][HouseRooms[GetHouseStyle(i)]], PN(playerid)))
			{
				if(HouseInfo[i][hNalog])
				{
					ShowHouse[playerid][home] = i;
					if(PI[playerid][pPack]) nalog = HouseInfo[i][hNalog]/2;
					else nalog = HouseInfo[i][hNalog];
					city = GetCityName(HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y]);
					f(str_1, sizeof(str_1), "%s[%i]Дом №%i\t%s\t{FF6347}$%i{FFFFFF}\t%i\n", str_1, home, i, gSAZonesCity[city][SAZONE_NAME], nalog, 0);
					home ++;
				}
			}
		}
	}
	if(home) return SPD(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, "Выбор дома", str_1, !"Выбрать", !"Отмена");
	return 0;
}
stock GetPlayerHouse(playerid)
{
	//new house = -1;
	/*for(new i; i < MAX_PLAYER_HOUSE; i++)
	{
		if(PI[playerid][pHouseKey][i] == -1) continue;
		house = PI[playerid][pHouseKey][i];
		break;
	}*/
	//return house;
	return PI[playerid][pHouseSpawn];
}
stock FindOrgNumbers(playerid,id)
{
    new num=1;
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PI[i][pMember] == id && PI[i][pTelNum]!=0 && TeamDuty{i})
			{
				SCMf(playerid, -1, "{FFFFFF}%i. {C7C4C4}%s %s(%i){FFFFFF} | Номер телефона: {C7C4C4}%i.{FFFFFF}",num,GetRankName(GetTeamID(i),PI[i][pRank]),PN(i),i,PI[i][pTelNum]);
				num++;
			}
		}
	}
	ac_ShowPlayerDialog(playerid, 0);
	ShowPlayerDialogf(playerid, 0, 0, !"{BFBBBA}", !"Принять", !"", "{FFFFFF}\n\nВсего в онлайне %i человек.\n\n", (num-1));
	return 1;
}
stock FindJobNumbers(playerid,id)
{
    new num=1;
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PI[i][pJob] == id && PI[i][pTelNum]!=0)
			{
				SCMf(playerid, -1, "{FFFFFF}%i. {C7C4C4}%s %s(%i){FFFFFF} | Номер телефона: {C7C4C4}%i.{FFFFFF}",num,GetJobName(id),PN(i),i,PI[i][pTelNum]);
				num++;
			}
		}
	}
	ac_ShowPlayerDialog(playerid, 0);
	ShowPlayerDialogf(playerid, 0, 0, !"{BFBBBA}", !"Принять", !"", "{FFFFFF}\n\nВсего в онлайне %i человек.\n\n", (num-1));
	return 1;
}
stock IsBazarVehicle(veh_id)
{
    for(new i = 0; i < MAX_AUTO_BAZAR; i++)
    {
        if(autoBazarInfo[i][autoBazarCarID] != veh_id) continue;
        return 1;
    }
    return 0;
}
stock deltarget(playerid)
{
	for(new i; i < 5; i++)
	{
		TextDrawHideForPlayer(playerid, Target[i]);
		if(i < 3) PlayerTextDrawHide(playerid, PTarget[playerid][i]);
	}
	return 1;
}
stock SeccureAnimation(playerid, animlib[], animname[])
{
	ClearAnimations(playerid);
    ApplyAnimation(playerid, animlib, animname, 4.0, 0, 0, 0, 0, 0, 1);
	return 1;
}
stock J_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,interior = 0,world = 0)
{
	/*switch(model)
	{
		case 615: model = 662; case 616: model = 663; case 617: model = 665; case 618: model = 666; 
		case 619: model = 667; case 620: model = 668; case 621: model = 699; case 622: model = 793; 
		case 623: model = 794; case 624: model = 909; case 625: model = 965; case 626: model = 1194;
		case 627: model = 1195; case 628: model = 1196; case 629: model = 1197;case 630: model = 1198; 
		case 631: model = 1199; case 632: model = 1200; case 633: model = 1201; case 634: model = 1202; 
		case 635: model = 1203; case 636: model = 1204; case 637: model = 1205; case 638: model = 3155;
		case 639: model = 3156; case 640: model = 3157; case 641: model = 3158; case 642: model = 3194; 
		case 643: model = 3195; case 644: model = 3196; case 645: model = 3197; case 646: model = 3198; 
		case 647: model = 3199;
	}*/
	new carid = AddStaticVehicleEx(model, x, y, z, a, color_1, color_2, spawntime);
	vTemp[carid][vAntiRepair]=2;
	vTemp[carid][vLock] = 0;
	vTemp[carid][vModel] = model;
	vTemp[carid][vPos_X] = x;
	vTemp[carid][vPos_Y] = y;
	vTemp[carid][vPos_Z] = z;
	vTemp[carid][vPos_A] = a;
	LinkVehicleToInterior(carid, interior);
	SetVehicleVirtualWorld(carid, world);
	SetEngineStatus(carid, false, -1);
    switch(model)
	{
	    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[carid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[carid] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[carid] = VEHICLE_STATE_CAR;
	}
	return carid;
}
stock J_GetPlayerDrunkLevel(playerid) return PlayerDrunkLevels[playerid];
stock J_SetPlayerVIP(playerid, vip)
{
	PI[playerid][pVIP] = vip;
	UpdatePlayerDataInt(playerid, "VIP", PI[playerid][pVIP]);
}
stock J_SetPlayerWantedLevel(playerid, wanted)
{
	SetPlayerWantedLevel(playerid, wanted);
	UpdatePlayerDataInt(playerid, "Wanted", PI[playerid][pWanted]);
}
stock J_SetPlayerDrunkLevel(playerid, level)
{
	PlayerDrunkLevels[playerid] = level;
    return SetPlayerDrunkLevel(playerid, level);
}
stock J_SetPlayerScore(playerid, score)
{
    PI[playerid][pLevel] = score;
    UpdatePlayerDataInt(playerid, "Level", PI[playerid][pLevel]);
    return SetPlayerScore(playerid, score);
}
stock PlayerHospital(playerid, skip = 0)
{
	if(IsPlayerToKvadrat(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257)) PI[playerid][pHospCity] = 1;
	else if(IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770)) PI[playerid][pHospCity] = 3;
	else PI[playerid][pHospCity] = 2;
	UpdatePlayerDataInt(playerid, "HospCity", PI[playerid][pHospCity]);
    PI[playerid][pHeal] = 1;
    UpdatePlayerDataInt(playerid, "Heal", 1);
    PI[playerid][pHealTime] = 0;
	if(!skip) PlayerSpawn(playerid);
	return 1;
}
stock PlayerCure(playerid, reason = INVALID_PLAYER_ID)
{
	SCM(playerid, -1, "PlayerCure сработал для убитого дальше");
	if(!pTemp[playerid][TimeHeal] && !TimeHealDied[playerid] && !TimeSelect[playerid] && !TimeSelectDoctor[playerid] && !PI[playerid][pHeal] && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
	{
		GetPlayerPos(playerid, DiedPos[playerid][0], DiedPos[playerid][1], DiedPos[playerid][2]);
		DiedText[playerid] = CreateDynamic3DTextLabel(!"(( ТЯЖЕЛО РАНЕН ))\n/cure", COLOR_LIGHTRED, DiedPos[playerid][0], DiedPos[playerid][1], DiedPos[playerid][2], 5.0);
		SCM(playerid, COLOR_GREY, !"(( Через 30 секунд вы сможете сразу отправится в больницу или подождать врачей ))");
		TimeHealDied[playerid] = true;
	}
	if(reason == 50 || reason == 51 || reason == 53 || reason == 54)
	{
		pTemp[playerid][TimeHeal] = 0;
		TimeSelect[playerid] = false;
		TimeSelectDoctor[playerid] = false;
		TimeHealDied[playerid] = false;
		PlayerLieHeal[playerid] = false;
		DestroyDynamic3DTextLabel(DiedText[playerid]);
		PlayerHospital(playerid, 1);
	}
	return 1;
}
stock J_SetPlayerHealth(playerid, Float:hp)
{
	new Float:health;
    GetPlayerHealth(playerid, health);
	PI[playerid][pHealth] = hp;
	if(PI[playerid][pHealth] >= 100) PlayerEndCure(playerid);
	UpdatePlayerDataFloat(playerid, "HP", PI[playerid][pHealth]);
	f(str_2, sizeof(str_2),"+%.0f HP", (health-hp));
	SetPlayerChatBubble(playerid, str_2, COLOR_GREEN, 10.0, 5000);
	if(InventStatus{playerid}) PlayerTextDrawSetStringf(playerid, Invent[playerid][38], "HP: %.0f", hp);
	return SetPlayerHealth(playerid, hp);
}
stock J_SetPlayerArmour(playerid, Float:arm)
{
    new Float:armour;
    static str[10];
    GetPlayerArmour(playerid, armour);
	PI[playerid][pArmour] = arm;
	UpdatePlayerDataFloat(playerid, "ARM", PI[playerid][pArmour]);
	f(str, sizeof(str),"+%.0f ARM", (armour-arm));
	SetPlayerChatBubble(playerid, str, COLOR_GREEN, 10.0, 5000);
	if(InventStatus{playerid})
	{
		f(str, sizeof(str), "ARM: %.0f", arm),
		PlayerTextDrawSetString(playerid, Invent[playerid][37], str);
	}

    if(arm) if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 19142, 1, 0.08, 0.04, 0.00, 0.0, 0.0, -7.4);
    else RemovePlayerAttachedObject(playerid, 8);

	return SetPlayerArmour(playerid, arm);
}
stock J_SetVehicleHealth(carid,Float:health)
{
    vTemp[carid][vAntiRepair]=2;
	VehicleHealth[carid] = health;
	SetVehicleHealth(carid, health);
	return 1;
}
stock J_RepairVehicle(carid)
{
	vTemp[carid][vAntiRepair]=2;
	RepairVehicle(carid);
	VehicleHealth[carid] = 1000;
	return 1;
}
stock J_SetPlayerPos(playerid, Float:X, Float:Y, Float:Z)
{
    SetPlayerPos(playerid, X, Y, Z);
	TogglePlayerControllable(playerid, false);
	NoEnterPickup[playerid] = 2;
	return 1;
}
stock J_Kick(playerid, error = 0)
{
	if(error != 0) return SCMf(playerid, -1, "ОШИБКА %i", error), Kick(playerid);
	if(!Osnovat(PN(playerid))) Kick(playerid);
	return 1;
}
stock SpecPl(playerid,bool:spec)
{
	pTemp[playerid][SPECTPLAYER] = spec;
	SetPlayerSkin(playerid, 18);
	TogglePlayerSpectating(playerid,spec);
	if(IsPlayerLogged{playerid}) SetPlayerSkin(playerid, PI[playerid][pSkin]);
}
stock SpecPlayer(playerid, i)
{
    if(i == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	if(SERIU[playerid] != i && !Osnovat(PN(playerid)))
	{
		f(str_1, 77, "%s[%i] начал следить за %s[%i]", PN(playerid), playerid, PN(i), i);
		SendAdminsMessage(COLOR_GREY, str_1);
	}
	if(pTemp[playerid][SPECTPLAYER] == false) SpecPl(playerid, true);
	if(SERIU[playerid] != INVALID_PLAYER_ID) PI[SERIU[playerid]][pHSpectr] = -1;
	PI[i][pHSpectr] = playerid;
 	SERIU[playerid] = i;
 	SetPlayerInterior(playerid, GetPlayerInterior(i));
 	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(i));
 	if(IsPlayerInAnyVehicle(i)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(i));
 	else PlayerSpectatePlayer(playerid, i);
	return 1;
}
stock Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ, Float:ObjX, Float:ObjY, Float:ObjZ, Float:FrX, Float:FrY, Float:FrZ)
{
	new Float:TGTDistance;
	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));
	new Float:tmpX, Float:tmpY, Float:tmpZ;
	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;
	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}
stock Float:GetPointAngleToPoint(Float:x2, Float:y2, Float:X, Float:Y)
{
  	new Float:DX, Float:DY;
  	new Float:angle;

  	DX = floatabs(floatsub(x2,X));
  	DY = floatabs(floatsub(y2,Y));

  	if (DY == 0.0 || DX == 0.0)
	{
	    if(DY == 0 && DX > 0) angle = 0.0;
	    else if(DY == 0 && DX < 0) angle = 180.0;
	    else if(DY > 0 && DX == 0) angle = 90.0;
	    else if(DY < 0 && DX == 0) angle = 270.0;
	    else if(DY == 0 && DX == 0) angle = 0.0;
  	}
  	else
	{
    	angle = atan(DX/DY);
    	if(X > x2 && Y <= y2) angle += 90.0;
    	else if(X <= x2 && Y < y2) angle = floatsub(90.0, angle);
    	else if(X < x2 && Y >= y2) angle -= 90.0;
    	else if(X >= x2 && Y > y2) angle = floatsub(270.0, angle);
  	}
  	return floatadd(angle, 90.0);
}
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance)
{
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
  	new Float:camera_x,Float:camera_y,Float:camera_z,Float:vector_x,Float:vector_y,Float:vector_z;
  	GetPlayerCameraPos(playerid, camera_x, camera_y, camera_z);
  	GetPlayerCameraFrontVector(playerid, vector_x, vector_y, vector_z);
	new Float:vertical, Float:horizontal;
	switch (GetPlayerWeapon(playerid))
	{
	  	case 34,35,36:
	  	{
	  		if(DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, vector_x, vector_y, vector_z) < radius) return 1;
	  		return 0;
	  	}
	  	case 30,31: {vertical = 4.0; horizontal = -1.6;}
	  	case 33: {vertical = 2.7; horizontal = -1.0;}
	  	default: {vertical = 6.0; horizontal = -2.2;}
	}
  	new Float:angle = GetPointAngleToPoint(0, 0, floatsqroot(vector_x*vector_x+vector_y*vector_y), vector_z) - 270.0;
  	new Float:resize_x, Float:resize_y, Float:resize_z = floatsin(angle+vertical, degrees);
  	GetXYInFrontOfPoint(resize_x, resize_y, GetPointAngleToPoint(0, 0, vector_x, vector_y)+horizontal, floatcos(angle+vertical, degrees));
  	if (DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, resize_x, resize_y, resize_z) < radius) return 1;
  	return 0;
}
stock Text:CreateSprite(Float:X,Float:Y,Name[25],Float:Width,Float:Height)
{
    new Text:RetSprite = Text:INVALID_TEXT_DRAW;
    RetSprite = TextDrawCreate(X, Y, Name);
    TextDrawFont(RetSprite, 4);
    TextDrawColor(RetSprite,0xFFFFFFFF);
    TextDrawTextSize(RetSprite,Width,Height);
    return RetSprite;
}
stock Text:CreateBox(Float:X,Float:Y,Float:Width,Float:Height,color)
{
    str_2[0] = EOS;
    for(new i=floatround(Y); i < floatround(Y+Height);i++) strcat(str_2,"~n~_");
	new Text:RetSprite = Text:INVALID_TEXT_DRAW;
    RetSprite = TextDrawCreate(X, Y, str_2);
    TextDrawFont(RetSprite, 0);
    TextDrawColor(RetSprite,0xFFFFFFFF);
    TextDrawTextSize(RetSprite,Width+X,Height+Y);
    TextDrawUseBox(RetSprite,1);
    TextDrawBoxColor(RetSprite,color);
    TextDrawLetterSize(RetSprite,0.0001,0.1158);
    return RetSprite;
}
stock GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}
stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(GetPlayerAngleToPoint(playerid, x, y));
}
stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return 1;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
    new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
    return 1;
}
stock CheckAdmins(playerid, listitem = -1)
{
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0)
	{
		FirstBL[playerid] = 0;
		return SCM(playerid, COLOR_GREY, !"Больше нет админов");
	}
	return MysqlCheckAdmins(playerid);
}
stock CheckBanned(playerid,listitem)
{
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0)
	{
		FirstBL[playerid] = 0;
		return SCM(playerid, COLOR_GREY, !"Больше нет забаненных");
	}
	mysql_format(mysql, str_3, sizeof(str_3), "SELECT `Name` FROM `BanNames` ORDER BY `ID` DESC LIMIT %i , 20", FirstBL[playerid]);
	mysql_pquery(mysql, str_3, "MysqlCheckBanned", "d", playerid);
	return 1;
}
stock Osnovat(name[])
{
	for(new i; i < sizeof(FullDostupList); i++)
	{
	    if(GetString(name, FullDostupList[i][0])) return 1;
	}
	return 0;
}
//stock SetModOptions() SendRconCommandf("hostname %s", OPT_NAME);
stock GetWeaponModel(weaponid)
{
    switch(weaponid)
    {
        case 1: 		return 331;
        case 2..8: 		return weaponid+331;
        case 9: 		return 341;
        case 10..15: 	return weaponid+311;
        case 16..18: 	return weaponid+326;
        case 22..29: 	return weaponid+324;
        case 30,31: 	return weaponid+325;
        case 32: 		return 372;
        case 33..45: 	return weaponid+324;
        case 46: 		return 371;
        default: return 0;
    }
    return 0;
}
stock NoRoof(playerid)
{
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID )
    {
        new Float:speed = GetVehicleSpeed(carid);
        new cm = GetVehicleModel(carid);
        switch(cm)
        {
            case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
            default:{}
        }
        if(speed > 30)
        {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            SetPlayerPos(playerid, slx, sly, slz+2.5);
			ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        }
    }
    return 1;
}
stock GetVehicleSpeed(vehicleid)
{
    new Float:Px,Float:Py,Float:Pz;
    GetVehicleVelocity(vehicleid,Px,Py,Pz);
    return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}
stock Stopenanim(playerid)
{
 	ClearAnims(playerid);
	TogglePlayerControllable(playerid, true);
	ClearAnims(playerid);
	return 1;
}
stock LoadInformation()
{
	if(!fexist("config.ini")) return print("file 'config.ini' not found");
	new currenttime = GetTickCount();
	new GetFile = ini_openFile("config.ini");
	ini_getInteger(GetFile, "credit", GLS[0]); //кредит ставка
	ini_getInteger(GetFile, "cnalog", GLS[1]); //nalog na car
	ini_getInteger(GetFile, "hnalogi", GLS[2]); //nalog na house
	ini_getInteger(GetFile, "bnalog", GLS[3]); ////nalog na biz
	ini_getInteger(GetFile, "ferma", GLS[4]);
	ini_getInteger(GetFile, "zavod", GLS[5]);
	ini_getInteger(GetFile, "gryz", GLS[6]);
	ini_getInteger(GetFile, "avob", GLS[7]);
	ini_getInteger(GetFile, "mysor", GLS[8]);
	ini_getInteger(GetFile, "daln", GLS[9]);
	ini_getInteger(GetFile, "metal", GLS[10]);
	ini_getInteger(GetFile, "incas", GLS[11]);
	ini_getInteger(GetFile, "naloga", GLS[12]);
	ini_getInteger(GetFile, "GLS[13]", GLS[13]); //получатель налогов
	ini_getInteger(GetFile, "GLS[14]", GLS[14]); //аренда своб машин
	ini_getInteger(GetFile, "GLS[15]", GLS[15]); //аренда автобусов
	ini_getInteger(GetFile, "arest", GLS[16]); //за арест премия
	ini_getInteger(GetFile, "dostav", GLS[17]); //за доставку премия
	ini_getInteger(GetFile, "ybil", GLS[18]); //за убийство премия
	ini_getInteger(GetFile, "redak", GLS[19]); //за обьяві премия
	ini_getInteger(GetFile, "pomol", GLS[20]); //за помолвку премия
	ini_getInteger(GetFile, "bail", GLS[21]); //за тюрьму премия
	ini_getInteger(GetFile, "exp", GLS[23]);
	ini_getInteger(GetFile, "armyls", GLS[25]);
	ini_getInteger(GetFile, "armylv", GLS[26]);
	ini_getInteger(GetFile, "farmsklad", GLS[27]);
	ini_getInteger(GetFile, "GLS[28]", GLS[28]);
	ini_getInteger(GetFile, "GLS[29]", GLS[29]);
	ini_getInteger(GetFile, "GLS[31]", GLS[31]);
	//ini_getInteger(GetFile, "X2PAYDAY", GLS[37]);
	ini_getInteger(GetFile, "XPAYDAY", GLS[40]);
	//ini_getInteger(GetFile, "X5PAYDAY", GLS[41]);
	ini_getInteger(GetFile, "GLS[43]", GLS[43]);

	ini_getInteger(GetFile, "Narko1", GLS[45]);
	ini_getInteger(GetFile, "Narko2", GLS[46]);
	ini_getInteger(GetFile, "Narko3", GLS[47]);
	ini_getInteger(GetFile, "Narko4", GLS[48]);
	ini_getInteger(GetFile, "Narko5", GLS[49]);

	ini_getInteger(GetFile, "buyNarko1", GLS[50]);
	ini_getInteger(GetFile, "buyNarko2", GLS[51]);
	ini_getInteger(GetFile, "buyNarko3", GLS[52]);
	ini_getInteger(GetFile, "buyNarko4", GLS[53]);
	ini_getInteger(GetFile, "buyNarko5", GLS[54]);

	ini_getInteger(GetFile, "sellNarko1", GLS[55]);
	ini_getInteger(GetFile, "sellNarko2", GLS[56]);
	ini_getInteger(GetFile, "sellNarko3", GLS[57]);
	ini_getInteger(GetFile, "sellNarko4", GLS[58]);
	ini_getInteger(GetFile, "sellNarko5", GLS[59]);

	ini_getInteger(GetFile, "bankNarko1", GLS[60]);
	ini_getInteger(GetFile, "bankNarko2", GLS[61]);
	ini_getInteger(GetFile, "bankNarko3", GLS[62]);
	ini_getInteger(GetFile, "bankNarko4", GLS[63]);
	ini_getInteger(GetFile, "bankNarko5", GLS[64]);

	ini_getInteger(GetFile, "adminzona", GLS[65]);
	ini_getInteger(GetFile, "google", GLS[66]);
	ini_getInteger(GetFile, "casinoclose", GLS[67]);
	ini_getInteger(GetFile, "euro", GLS[68]);
	ini_getInteger(GetFile, "bankeuro", GLS[69]);
	ini_getInteger(GetFile, "FactoryFerum", FactoryFerum);
    ini_getInteger(GetFile, "FactoryMats", FactoryMats);
    ini_getInteger(GetFile, "FactoryFuel", FactoryFuel);
    for(new i; i < sizeof(IpForBots); i++)
    {
    	f(str_1, sizeof(str_1), "IpForBots%i", i);
    	ini_getString(GetFile, str_1, IpForBots[i]);
    }
    ini_getInteger(GetFile, "send_query", send_query);
	ini_closeFile(GetFile);
	printf("LoadInformation загрузился за %i ms", GetTickCount() - currenttime);
	return 1;
}
stock SaveInforamtion()
{
	if(!fexist("config.ini")) return print("file 'config.ini' not found");
	new GetFile = ini_openFile("config.ini");
	ini_setInteger(GetFile, "credit", GLS[0]); //кредит ставка
	ini_setInteger(GetFile, "cnalog", GLS[1]); //nalog na car
	ini_setInteger(GetFile, "hnalogi", GLS[2]); //nalog na house
	ini_setInteger(GetFile, "bnalog", GLS[3]); ////nalog na biz
	ini_setInteger(GetFile, "ferma", GLS[4]);
	ini_setInteger(GetFile, "zavod", GLS[5]);
	ini_setInteger(GetFile, "gryz", GLS[6]);
	ini_setInteger(GetFile, "avob", GLS[7]);
	ini_setInteger(GetFile, "mysor", GLS[8]);
	ini_setInteger(GetFile, "daln", GLS[9]);
	ini_setInteger(GetFile, "metal", GLS[10]);
	ini_setInteger(GetFile, "incas", GLS[11]);
	ini_setInteger(GetFile, "naloga", GLS[12]);
	ini_setInteger(GetFile, "GLS[13]", GLS[13]); //получатель налогов
	ini_setInteger(GetFile, "GLS[14]", GLS[14]);//аренда своб машин
	ini_setInteger(GetFile, "GLS[15]", GLS[15]);//аренда автобусов
	ini_setInteger(GetFile, "arest", GLS[16]); //за арест премия
	ini_setInteger(GetFile, "dostav", GLS[17]); //за доставку премия
	ini_setInteger(GetFile, "ybil", GLS[18]); //за убийство премия
	ini_setInteger(GetFile, "redak", GLS[19]); //за обьяві премия
	ini_setInteger(GetFile, "pomol", GLS[20]); //за помолвку премия
	ini_setInteger(GetFile, "bail", GLS[21]); //за тюрьму премия
	ini_setInteger(GetFile, "exp", GLS[23]);
	ini_setInteger(GetFile, "armyls", GLS[25]);
	ini_setInteger(GetFile, "armylv", GLS[26]);
	ini_setInteger(GetFile, "farmsklad", GLS[27]);
	ini_setInteger(GetFile, "GLS[28]", GLS[28]);
	ini_setInteger(GetFile, "GLS[29]", GLS[29]);
	ini_setInteger(GetFile, "GLS[31]", GLS[31]);
	//ini_setInteger(GetFile, "X2PAYDAY", GLS[37]);
	ini_setInteger(GetFile, "XPAYDAY", GLS[40]);
	//ini_setInteger(GetFile, "X5PAYDAY", GLS[41]);
	ini_setInteger(GetFile, "GLS[43]", GLS[43]);

	ini_setInteger(GetFile, "Narko1", GLS[45]);
	ini_setInteger(GetFile, "Narko2", GLS[46]);
	ini_setInteger(GetFile, "Narko3", GLS[47]);
	ini_setInteger(GetFile, "Narko4", GLS[48]);
	ini_setInteger(GetFile, "Narko5", GLS[49]);

	ini_setInteger(GetFile, "buyNarko1", GLS[50]);
	ini_setInteger(GetFile, "buyNarko2", GLS[51]);
	ini_setInteger(GetFile, "buyNarko3", GLS[52]);
	ini_setInteger(GetFile, "buyNarko4", GLS[53]);
	ini_setInteger(GetFile, "buyNarko5", GLS[54]);

	ini_setInteger(GetFile, "sellNarko1", GLS[55]);
	ini_setInteger(GetFile, "sellNarko2", GLS[56]);
	ini_setInteger(GetFile, "sellNarko3", GLS[57]);
	ini_setInteger(GetFile, "sellNarko4", GLS[58]);
	ini_setInteger(GetFile, "sellNarko5", GLS[59]);

	ini_setInteger(GetFile, "bankNarko1", GLS[60]);
	ini_setInteger(GetFile, "bankNarko2", GLS[61]);
	ini_setInteger(GetFile, "bankNarko3", GLS[62]);
	ini_setInteger(GetFile, "bankNarko4", GLS[63]);
	ini_setInteger(GetFile, "bankNarko5", GLS[64]);

	ini_setInteger(GetFile, "adminzona", GLS[65]);
	ini_setInteger(GetFile, "google", GLS[66]);
	ini_setInteger(GetFile, "casinoclose", GLS[67]);
	ini_setInteger(GetFile, "euro", GLS[68]);
 	ini_setInteger(GetFile, "bankeuro", GLS[69]);
	ini_setInteger(GetFile, "FactoryFerum", FactoryFerum);
    ini_setInteger(GetFile, "FactoryMats", FactoryMats);
    ini_setInteger(GetFile, "FactoryFuel", FactoryFuel);
    for(new i; i < sizeof(IpForBots); i++)
    {
    	f(str_1, sizeof(str_1), "IpForBots%i", i);
    	ini_setString(GetFile, str_1, IpForBots[i]);
    }
    ini_setInteger(GetFile, "send_query", send_query);
	ini_closeFile(GetFile);
	return 1;
}
stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	static result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
///////////казино
stock ShowPlayerSlots(playerid,slot1,slot2,slot3)
{
	
	TextDrawHideForPlayer(playerid,Digit1[0]);
    TextDrawHideForPlayer(playerid,Digit2[0]);
    TextDrawHideForPlayer(playerid,Digit3[0]);
    TextDrawHideForPlayer(playerid,Digit1[1]);
    TextDrawHideForPlayer(playerid,Digit2[1]);
    TextDrawHideForPlayer(playerid,Digit3[1]);
    TextDrawHideForPlayer(playerid,Digit1[2]);
    TextDrawHideForPlayer(playerid,Digit2[2]);
    TextDrawHideForPlayer(playerid,Digit3[2]);
    TextDrawHideForPlayer(playerid,Digit1[3]);
    TextDrawHideForPlayer(playerid,Digit2[3]);
    TextDrawHideForPlayer(playerid,Digit3[3]);
    TextDrawHideForPlayer(playerid,Digit1[4]);
    TextDrawHideForPlayer(playerid,Digit2[4]);
    TextDrawHideForPlayer(playerid,Digit3[4]);
    TextDrawHideForPlayer(playerid,Digit1[5]);
    TextDrawHideForPlayer(playerid,Digit2[5]);
    TextDrawHideForPlayer(playerid,Digit3[5]);
    TextDrawShowForPlayer(playerid,Digit1[slot1]);
    TextDrawShowForPlayer(playerid,Digit2[slot2]);
    TextDrawShowForPlayer(playerid,Digit3[slot3]);
    TextDrawShowForPlayer(playerid,Box);
}
stock HideSlotsForPlayer(playerid)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
    TextDrawHideForPlayer(playerid,Digit2[0]);
    TextDrawHideForPlayer(playerid,Digit3[0]);
    TextDrawHideForPlayer(playerid,Digit1[1]);
    TextDrawHideForPlayer(playerid,Digit2[1]);
    TextDrawHideForPlayer(playerid,Digit3[1]);
    TextDrawHideForPlayer(playerid,Digit1[2]);
    TextDrawHideForPlayer(playerid,Digit2[2]);
    TextDrawHideForPlayer(playerid,Digit3[2]);
    TextDrawHideForPlayer(playerid,Digit1[3]);
    TextDrawHideForPlayer(playerid,Digit2[3]);
    TextDrawHideForPlayer(playerid,Digit3[3]);
    TextDrawHideForPlayer(playerid,Digit1[4]);
    TextDrawHideForPlayer(playerid,Digit2[4]);
    TextDrawHideForPlayer(playerid,Digit3[4]);
    TextDrawHideForPlayer(playerid,Digit1[5]);
    TextDrawHideForPlayer(playerid,Digit2[5]);
    TextDrawHideForPlayer(playerid,Digit3[5]);
    TextDrawHideForPlayer(playerid,Box);
}
stock PutPlayerInSlotMachine(playerid, firstBet=MIN_Bet,  startBalance=0)
{
    if(Gambling[playerid] != 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже запустили автомат!");
   	if(kasmenu[playerid]==0)
    {
		if(GetInvCount(playerid, Item_CasinoChips) < startBalance) return SCM(playerid, COLOR_RED, !"У вас недостаточно фишек в инвентаре!");
		InvAdd(playerid, Item_CasinoChips, -startBalance);
		aml(102, playerid, "", "BlackJack", Item_CasinoChips, startBalance);
	    Gambling[playerid] = 1;

	    BetText[playerid] = TextDrawCreate(320.000000, 203.000000, "Bat:200");
		TextDrawAlignment(BetText[playerid], 2);
		TextDrawBackgroundColor(BetText[playerid], 255);
		TextDrawFont(BetText[playerid], 1);
		TextDrawLetterSize(BetText[playerid], 0.519999, 2.200000);
		TextDrawColor(BetText[playerid], -1);
		TextDrawSetOutline(BetText[playerid], 1);
		TextDrawSetProportional(BetText[playerid], 1);
		TextDrawUseBox(BetText[playerid], 1);
		TextDrawBoxColor(BetText[playerid], 64);
		TextDrawTextSize(BetText[playerid], 0.000000, 80.000000);
		TextDrawSetSelectable(BetText[playerid], 0);
		BalanceText[playerid] = TextDrawCreate(320.000000, 233.000000, "Balance:500");
		TextDrawAlignment(BalanceText[playerid], 2);
		TextDrawBackgroundColor(BalanceText[playerid], 255);
		TextDrawFont(BalanceText[playerid], 1);
		TextDrawLetterSize(BalanceText[playerid], 0.310000, 2.500000);
		TextDrawColor(BalanceText[playerid], -1);
		TextDrawSetOutline(BalanceText[playerid], 1);
		TextDrawSetProportional(BalanceText[playerid], 1);
		TextDrawUseBox(BalanceText[playerid], 1);
		TextDrawBoxColor(BalanceText[playerid], 64);
		TextDrawTextSize(BalanceText[playerid], 0.000000, 80.000000);
		TextDrawSetSelectable(BalanceText[playerid], 0);


	    TextDrawShowForPlayer(playerid,BetText[playerid]);
	    TextDrawShowForPlayer(playerid,BalanceText[playerid]);

	    SelectTextDraw(playerid, -16776961);
	    for(new i; i < 10; i++) TextDrawShowForPlayer(playerid,Bandito[i]);
	    Slots[playerid][0] = random(5);
	    Slots[playerid][1] = random(5);
	    Slots[playerid][2] = random(5);
	    ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);
	    Bet[playerid] = firstBet;
	    kasmenu[playerid] = 1;
	    Balance[playerid] = startBalance;
	    UpdateBetText(playerid);
	    TogglePlayerControllable(playerid,0);
	}
    return 1;
}
stock ExitPlayerFromSlotMachine(playerid)
{
    if(Gambling[playerid] == 0) return 0;
    HideSlotsForPlayer(playerid);
    Gambling[playerid] = 0;
    TogglePlayerControllable(playerid,1);
    if(kasmenu[playerid]==1)
    {
	    TextDrawDestroy(BetText[playerid]);
	    TextDrawDestroy(BalanceText[playerid]);
	    kasmenu[playerid]=0;
    }
    //TextDrawHideForPlayer(playerid,BetText[playerid]);
    //TextDrawHideForPlayer(playerid,BalanceText[playerid]);

    for(new i; i < 10; i++) TextDrawHideForPlayer(playerid,Bandito[i]);
	GameTextForPlayerf(playerid, 5000, 4, "~g~Your balance: %i", Balance[playerid]);
   	InvAdd(playerid, Item_CasinoChips, Balance[playerid]);
   	aml(101, playerid, "", "BlackJack", Item_CasinoChips, Balance[playerid]);
    CancelSelectTextDraw(playerid);
    return 1;
}
stock GetNextValidBet(value)
{
    if(value + 5 > MAX_Bet) return MIN_Bet;
    return value + 5;
}
stock GetNextValidMBet(value)
{
    if(value - 5 > MAX_Bet) return MIN_Bet;
    if(value <= 5)return MIN_Bet;
    return value - 5;
}
stock UpdateBetText(playerid)
{
    if(kasmenu[playerid]==1)
    {
	    static prefix[4];
	    if(Balance[playerid] == 0) strcat(prefix,"~r~");
	    if(Balance[playerid]  > 0) strcat(prefix,"~g~");

	    f(str_2,sizeof(str_2),"~w~Bet: ~g~%i",Bet[playerid]);
	    TextDrawSetString(BetText[playerid],str_2);

		f(str_2,sizeof(str_2),"~w~Balance: ~g~%s%i",prefix,Balance[playerid]);
	    TextDrawSetString(BalanceText[playerid],str_2);
	}
}
stock BombTimer(i)
{
	if(BombInfo[i][bbCreated])
    {
		BombInfo[i][bbTime] --;
		if(BombInfo[i][bbTime] <= 0)
		{
			BombInfo[i][bbTime] = 0;
			BombInfo[i][bbCreated] = false;
			BombInfo[i][bbBreak] = false;
			DestroyDynamicObject(BombInfo[i][bbObject]);
			DestroyDynamic3DTextLabel(BombInfo[i][bbText]);
			CreateExplosion(BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2], 7, 20.0);
			foreach(new s : Vehicle)
			{
				new Float: x,Float: y,Float: z;
				GetVehiclePos(s,x,y,z);
				if(IsVehicleInRangeOfPoint(s, 10.0,BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2]))
				{
				    OnVehicleDeath(s, INVALID_PLAYER_ID);
				    SetVehicleToRespawn(s);
				}
			}
			foreach(new p: Player)
			{
			    if(IsPlayerConnected(p))
			    {
			        if(IsPlayerInRangeOfPoint(p, 20.0, BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2]))
			        {
						if(BreakBomb[p] == i)
						{
						    J_SetPlayerHealth(p, 0);
						    SCM(p, COLOR_GREY, "Вы не успели обезвредить бомбу...");
						    BreakBomb[p] = -1;
						}
						else
						{
						    SCM(p, COLOR_GREY, "Рядом взорвалась бомба!");
						}
			        }
			    }
			}
		}
		else
		{
			f(str_2, sizeof(str_2),"{FFFFFF} Бомба *\n{FF9900}%s", Convert(BombInfo[i][bbTime]));
			UpdateDynamic3DTextLabelText(BombInfo[i][bbText], -1, str_2);
		}
	}
	return 1;
}
stock Hunger(playerid, type)
{
    if(PI[playerid][pCustomArizona][0] == 1 && GetLauncher(playerid))
    {
        PlayerTextDrawHide(playerid, HungerProgres[playerid]);
        for(new i; i < 2; i++) TextDrawHideForPlayer(playerid,HungerFon[i]);
        return 0;
    }
    switch(type)
    {
        case 0:
        {
            if(IsPlayerTextDrawVisible(playerid, HungerProgres[playerid])) DestroyPlayerTD(playerid, HungerProgres[playerid]);
            for(new i; i < 2; i++) TextDrawShowForPlayer(playerid,HungerFon[i]);
            HungerProgres[playerid] = CreatePlayerTextDraw(playerid,549.500000, 60.0, "____");
            PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 549.5 + Fullness[playerid] / 100.0 * 54.5, 40.0);
            PlayerTextDrawBackgroundColor(playerid,HungerProgres[playerid], 255);
            PlayerTextDrawFont(playerid,HungerProgres[playerid], 1);
            PlayerTextDrawLetterSize(playerid,HungerProgres[playerid], 0.490000, -0.0);
            PlayerTextDrawColor(playerid,HungerProgres[playerid], -1);
            PlayerTextDrawSetOutline(playerid,HungerProgres[playerid], 0);
            PlayerTextDrawSetProportional(playerid,HungerProgres[playerid], 1);
            PlayerTextDrawSetShadow(playerid,HungerProgres[playerid], 1);
            PlayerTextDrawUseBox(playerid,HungerProgres[playerid], 1);
            PlayerTextDrawBoxColor(playerid,HungerProgres[playerid], 0x7CAC5AAA);
            PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 604.0, 40.0);
            PlayerTextDrawSetSelectable(playerid,HungerProgres[playerid], 0);
            PlayerTextDrawShow(playerid,HungerProgres[playerid]);
        }
        case 1:
        {
            DestroyPlayerTD(playerid, HungerProgres[playerid]);
            for(new i; i < 2; i++) TextDrawHideForPlayer(playerid,HungerFon[i]);
        }
    }
    return 1;
}
stock CheckPlayerGoCuff(playerid)
{
    GotoInfo[playerid][gtX] = 0.0;
    GotoInfo[playerid][gtY] = 0.0;
    GotoInfo[playerid][gtZ] = 0.0;
    GotoInfo[playerid][gtTPX] = 0.0;
    GotoInfo[playerid][gtTPY] = 0.0;
    GotoInfo[playerid][gtTPZ] = 0.0;
    GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
    GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
    GotoInfo[playerid][gtState] = 0;
    GotoInfo[playerid][gtStayed] = 0;
    Recuffer[playerid]=INVALID_PLAYER_ID;
    cuffer[playerid]=0;
    return 1;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);\
	return 1;
}
stock ShowTutorial(playerid)
{
	str_1[0] = EOS;
	switch(TutState[playerid])
	{
	    case -1:
		{
		    ShowRules(playerid);
		    if(PI[playerid][pRace]==0) CheckPointForPlayer(playerid,1773.6903,-1891.7493,13.5504);
			else CheckPointForPlayer(playerid,2211.0706,-1142.9728,25.8084);
	    }
	    case 0:
	    {
	        if(pTemp[playerid][SPECTPLAYER] == false) SpecPl(playerid, true);
	        SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
	        InterpolateCameraPos(playerid, 1836.636962, -1832.987060, 33.972660, 1689.984985, -1846.676147, 15.597705, 10000);
			InterpolateCameraLookAt(playerid, 1833.155517, -1836.299804, 32.592384, 1693.922973, -1849.756713, 15.648486, 10000);
	        f(str_1, 500, "%s\t{9ACD32}Добро пожаловать на "NAME" в город: %s!{FFFFFF}\n\n",str_1, Mode_City);
	        strcat(str_1, !"На нашем сервере вы найдете много интересного для себя.\n");
	        strcat(str_1, !"Увлекательные работы не позволят вам скучать!\n");
	        strcat(str_1, !"Уникальные системы не дадут вам слоняться без дела.\n");
	        strcat(str_1, !"Администрация ответит вам на все интересующие вас вопросы.\n");
	        strcat(str_1, !"Каждый день на сервере производятся обновления.\n\n");
	        strcat(str_1, !"Сайт: {9ACD32}"SITE"{FFFFFF}\n");
	        strcat(str_1, !"Форум: {9ACD32}"FORUM"{FFFFFF}\n");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
 			ClearChatForPlayer(playerid);
	        TutState[playerid] ++;
	    }
	    case 1:
	    {
	        InterpolateCameraPos(playerid, 1432.398559, -1326.801391, 57.777950, 1528.324462, -1308.241577, 15.010397, 10000);
			InterpolateCameraLookAt(playerid, 1435.197387, -1323.272705, 55.606639, 1525.095214, -1304.896240, 16.849029, 10000);
	        strcat(str_1, !"{FFFFFF}Сейчас вам желательно добраться до Мэрии и получить паспорт\n");
	        strcat(str_1, !"{9ACD32}Для получения паспорта необходимо ответить на несколько вопросов\n");
	        strcat(str_1, !"После ответа на них вы получите паспорт\n");
	        strcat(str_1, !"С этого момента вы и начнете свою карьеру на сервере\n\n");
	        strcat(str_1, !"Мэрию можно найти набрав /gps и выбрав пункт 'Важные места'");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 2:
	    {
	        InterpolateCameraPos(playerid, 2224.500488, -1645.615478, 16.708423, 2274.644775, -1656.320068, 30.663936, 10000);
			InterpolateCameraLookAt(playerid, 2227.629150, -1649.505859, 16.431221, 2270.340576, -1657.761108, 28.566806, 10000);
	        strcat(str_1, !"{FFFFFF}Вы можете в любой момент переодеться в магазинах одежды\n\n");
	        strcat(str_1, !"{9ACD32}Купить в нем одежду очень просто:{9ACD32}\n\n");
	        strcat(str_1, !"- Встаем на чекпоинт в раздевалке\n");
	        strcat(str_1, !"- Нажимаем <- или -> для выбора костюма\n");
	        strcat(str_1, !"- Нажимаем Accept чтобы выбрать костюм\n\n");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 3:
	    {
	        InterpolateCameraPos(playerid, -2011.270263, -78.453041, 36.279945, -2092.940917, -66.298538, 67.312026, 10000);
			InterpolateCameraLookAt(playerid, -2014.977050, -81.794746, 35.975444, -2090.361083, -69.931015, 65.042724, 10000);
	        strcat(str_1, !"{FFFFFF}После этого отправляйтесь в автошколу чтобы получить права.\n");
	        strcat(str_1, !"Сдать на права в автошколе не составит особого труда.\n");
	        strcat(str_1, !"Сдача на права в АШ состоит из двух этапов:{9ACD32}\n\n");
	        strcat(str_1, !"- Теория\n");
	        strcat(str_1, !"- Практика\n\n");
	        strcat(str_1, !"{FFFFFF}В теории есть 5 вопросов, ответы на которые вы можете узнать по команде /help.\n\n");
	        strcat(str_1, !"{FFFFFF}Автошколу можно найти набрав /gps и выбрав пункт 'Важные места'.");
	        strcat(str_1, !"{FFFFFF}Платить за сдачу на права, вам не потребуется.");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 4:
	    {
	        InterpolateCameraPos(playerid, 1958.910034, -1989.526367, 15.507305, 1980.450805, -1918.752807, 26.267566, 5000);
			InterpolateCameraLookAt(playerid, 1963.043701, -1986.767578, 14.957636, 1981.637329, -1923.385742, 24.808635, 5000);
	        strcat(str_1, !"{FFFFFF}Вы можете зарабатывать на 1 из 16-и работ:{9ACD32}\n\n");

	        strcat(str_1, !"- Грузчик\n");
	        strcat(str_1, !"- Работник на заводе\n");
	        strcat(str_1, !"- Помощник фермера\n");
	        strcat(str_1, !"- Тракторист\n");
	        strcat(str_1, !"- Комбайнер\n");
	        strcat(str_1, !"- Водитель кукурузника\n");
	        strcat(str_1, !"- Развозчик продуктов\n");
	        strcat(str_1, !"- Водитель автобуса\n");
	        strcat(str_1, !"- Работник налоговой службы\n");
	        strcat(str_1, !"- Развозчик пиццы\n");
	        strcat(str_1, !"- Механик\n");
	        strcat(str_1, !"- Таксист\n");
	        strcat(str_1, !"- Инкассатор\n");
	        strcat(str_1, !"- Дальнобойщик\n");
	        strcat(str_1, !"- Развозчик металлолома\n");
	        strcat(str_1, !"- Мусорщик\n\n");
	        strcat(str_1, !"{FFFFFF}Для каждой работы имеется описание ( /jobhelp )\n");
	        strcat(str_1, !"{FFFFFF}О каждой из систем вы можете узнать с помощью ( /help )");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 5:
	    {
	        SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 10);
	        SetPlayerCameraPos(playerid,2531.3801,-1298.7526,1048.2891);
	        SetPlayerCameraLookAt(playerid,2557.6125,-1289.0206,1044.1250);
	        strcat(str_1, !"{FFFFFF}Пока вы не нашли работу, вы можете работать на заводе.\n\n{9ACD32}");
	        strcat(str_1, !"- За каждый комплект вы получите ту сумму денег, которую установит губернатор,\n");
	        strcat(str_1, !"да-да именно так, у нас на сервере, всей экономикой управляет один человек, и она\n");
	        strcat(str_1, !"может изменится в любой момент, так что думайте перед тем за кого голосовать.\n");
	        strcat(str_1, !"- На эту работу не надо устраиваться.\n");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 6:
	    {
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
	        InterpolateCameraPos(playerid, 1413.258544, -1696.653686, 40.293510, 1555.317382, -1659.082031, 38.163944, 5000);
			InterpolateCameraLookAt(playerid, 1416.476440, -1700.046875, 38.524097, 1552.503540, -1662.852661, 36.471488, 5000);
	        strcat(str_1, !"{FFFFFF}Вы можете вступить в одну из организаций.\n");
	        strcat(str_1, !"Перед вами лишь стоит выбор: в какую.\n");
	        strcat(str_1, !"Выбор ограничен 25-мa организациями.{9ACD32}\n\n");
	        strcat(str_1, !"Любите защищать невиновных и наказывать преступников?\n");
	        strcat(str_1, !"- Тогда вам прямой путь в законники!\n\n");
	        strcat(str_1, !"Наоборот, любите грабить, разбойничать и убивать?\n");
	        strcat(str_1, !"- Тогда ваш выбор банда или мафия!\n\n");
	        strcat(str_1, !"Хотите гонять на крутых байках?\n");
	        strcat(str_1, !"- Тогда вашем выбором будет байкерские клубы!");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 7:
	    {
	        InterpolateCameraPos(playerid, 1346.590087, -2195.770507, 52.085315, 1563.778076, -2203.761230, 17.009384, 15000);
			InterpolateCameraLookAt(playerid, 1350.160034, -2198.987792, 50.705039, 1559.867919, -2206.818359, 16.405395, 15000);
	        strcat(str_1, !"{FFFFFF}На данный момент на нашем сервере 5 авторынков.\n");
	        strcat(str_1, !"Всего на них 1000 едениц транспорта.\n\n");
	        strcat(str_1, !"{9ACD32}Авторынки разделены на классы: A,B,C,D,N\n");
	        strcat(str_1, !"На каждом из них можно купить транспортное средство.\n");
	        strcat(str_1, !"Заработайте себе на любимый транспорт!");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 8:
	    {
	        InterpolateCameraPos(playerid, 1872.667968, -1141.434570, 33.826927, 2065.190673, -1153.683349, 39.335723, 10000);
			InterpolateCameraLookAt(playerid, 1876.249633, -1138.043579, 33.006435, 2061.678955, -1150.350219, 38.087352, 10000);
	        strcat(str_1, !"{FFFFFF}На нашем сервере на данный момент 1000 домов.\n\n");
	        strcat(str_1, !"{9ACD32}Управление домом очень простое (/house).\n");
	        strcat(str_1, !"В свой дом можно поставить шкаф для хранения денег и материалов.\n");
	        strcat(str_1, !"У разных домов разное кол-во комнат.\n");
	        strcat(str_1, !"Чем больше комнат тем лучше ведь тем больше людей могут арендовать их.\n");
	        strcat(str_1, !"Так-же вы можете сделать ремонт для своего дома, изменяя его интерьер.");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 9:
	    {

	        InterpolateCameraPos(playerid, 2509.434570, -1642.991943, 18.626033, 2456.569335, -1652.517700, 29.218315, 15000);
   			InterpolateCameraLookAt(playerid, 2506.896728, -1647.240722, 17.913621, 2460.482666, -1654.861816, 27.170955, 15000);
      		strcat(str_1, !"{FFFFFF}Став бандитом вам придется сделать трудный выбор..\n");
         	strcat(str_1, !"{9ACD32}Вы можете воровать материалы, залезая на базы военных или ограбляя матовозы,\n");
         	strcat(str_1, !"подрывая их самодельной бомбой, чтобы забрать их груз.\n");
         	strcat(str_1, !"Или вы можете без высоких рисков выращивать наркотики, где-то за городом, чтобы\n");
         	strcat(str_1, !"вас никто не заметил.\n");
         	SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, "Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 10:
	    {
	        InterpolateCameraPos(playerid, -2.464246, 141.885116, 8.283523, -135.309448, 108.845436, 26.223825, 5000);
			InterpolateCameraLookAt(playerid, -6.578118, 139.091720, 7.761041, -130.834075, 109.728240, 24.176465, 5000);
	        strcat(str_1,"{FFFFFF}Заработав кругленькую сумму, можно купить бизнес.\n");
	        strcat(str_1,"{9ACD32}Покупайте себе бизнес и зарабатывайте на нем!");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, "Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 11:
	    {
	        InterpolateCameraPos(playerid, 827.735839, -1641.348022, 27.215742, 825.982421, -1593.535644, 16.756334, 10000);
			InterpolateCameraLookAt(playerid, 824.312500, -1638.134155, 25.497585, 822.369628, -1596.976196, 16.424547, 10000);
	        strcat(str_1, !"{FFFFFF}Не забывайте правильно питаться.\n");
	        strcat(str_1, !"{9ACD32}Чем больше вы двигаетесь, тем быстрее становитесь голодным.\n");
	        strcat(str_1, !"Чтобы уталить голод покушайте в закусочный, ресторанах или дома.");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, "Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 12:
	    {
	        InterpolateCameraPos(playerid, 1210.136962, -1395.411010, 35.339664, 1203.120971, -1289.684692, 15.235184, 10000);
			InterpolateCameraLookAt(playerid, 1207.135986, -1391.863281, 33.493770, 1199.246337, -1292.811279, 15.695469, 10000);
	        strcat(str_1, !"{FFFFFF}Будьте осторожны со своим здоровьем.\n");
	        strcat(str_1, !"{9ACD32}При смерти вы попадете в больницу на довольно долгий срок.\n");
	        strcat(str_1, !"Для более быстрого восстановления здоровья ложитесь на койку.\n");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Далее", !"");
	        TutState[playerid] ++;
	    }
	    case 13:
	    {
	        StopAudioStreamForPlayer(playerid);
	        f(str_1, 100, "{FFFFFF}Добро пожаловать "NAME" в город %s!\n", Mode_City);
	        strcat(str_1, !"Поздравляем вы прошли краткий курс обучения.\n\n");
	        strcat(str_1, !"Подробный курс обучения на форуме.\n");
	        strcat(str_1, !"Форум: {9ACD32}"FORUM"{FFFFFF}\n\n");
	        strcat(str_1, !"Желаем удачной игры на нашем сервере!");
	        SPD(playerid, 199, 0, !"{9ACD32}"NAME" Role Play", str_1, !"Спасибо", !"");
	        TutState[playerid] = -1;
	        if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
	    }
	    default: return 0;
	}
	return 1;
}
stock CheckItem(playerid, reset = 0)
{
	//SCMf(playerid, -1, "CheckItem reset(%i)", reset);
	for(new i; i < 8; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	if(!reset)
	{	
		if(PI[playerid][pModSlot]) return GiveItem(playerid, ItemsInfo[PI[playerid][pModSlot]][ItemModel]);
		for(new i; i < 8; i++) if(PI[playerid][pInvItemAcs][i]) GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][i]][ItemModel]);
	}
	return 1;
}
enum akscolor
{
	AksColorDefault,
	AksColorAttach,
	AksColorName[24]
};
new AksColor[][akscolor] =
{
	{0xD73C7EFF, 0xFFD73C7E, "{D73C7E}Розовый"},
	{0xD73CD4FF, 0xFFD73CD4, "{D73CD4}Фиолетовый"},
	{0x3C3ED7FF, 0xFF3C3ED7, "{3C3ED7}Синий"},
	{0x3CD7D7FF, 0xFF3CD7D7, "{3CD7D7}Бирюзовый"},
	{0x3CD740FF, 0xFF3CD740, "{3CD740}Зеленый"},
	{0xD5D73CFF, 0xFFD5D73C, "{D5D73C}Желтый"},
	{0xE6BC1EFF, 0xFFE6BC1E, "{E6BC1E}Темно-Желтый"},
	{0xCC7824FF, 0xFFCC7824, "{CC7824}Темно-Оранжевый"},
	{0xCC2426FF, 0xFFCC2426, "{CC2426}Красный"}
};
stock FindAksColor(color)
{
	new attach_color = -1;
	for(new i; i < sizeof(AksColor); i++)
	{
		if(AksColor[i][AksColorDefault] != color) continue;
		attach_color = AksColor[i][AksColorAttach];
		break;
	}
	return attach_color;
}
stock GiveItem(playerid, item)
{
	//SCM(playerid, -1, "GiveItem");
	//type 96 - 101 свободные
	new all_slots = PI[playerid][pInvItemAcsEnchant][0] + PI[playerid][pInvItemAcsEnchant][1] + PI[playerid][pInvItemAcsEnchant][2] + PI[playerid][pInvItemAcsEnchant][3] + PI[playerid][pInvItemAcsEnchant][4] +PI[playerid][pInvItemAcsEnchant][5];
	if(all_slots >= 50) SetPlayerAttachedObject(playerid, 6, 1276, 1, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.3900, 0, 0);
	new skin = GetPlayerSkin(playerid);
	switch(item)
	{
		case 19346: SetAttachToSkin(playerid, 122, skin, item);
		case 368: SetAttachToSkin(playerid, 123, skin, item);
		case 2805: SetAttachToSkin(playerid, 124, skin, item);
		case 19520: SetAttachToSkin(playerid, 125, skin, item);
		case 19521: SetAttachToSkin(playerid, 126, skin, item);
		case 2469: SetAttachToSkin(playerid, 127, skin, item);
		case 3056: SetAttachToSkin(playerid, 128, skin, item);
		case 1609: SetAttachToSkin(playerid, 129, skin, item);
		case 19581: SetAttachToSkin(playerid, 130, skin, item);
		case 16368: SetAttachToSkin(playerid, 131, skin, item);
		case 19847: SetAttachToSkin(playerid, 132, skin, item);
		case 1254: SetAttachToSkin(playerid, 133, skin, item);
		case 1274: SetAttachToSkin(playerid, 135, skin, item);
		case 6865: SetAttachToSkin(playerid, 136, skin, item);
		case 19515: SetAttachToSkin(playerid, 134, skin, item);
		case 18849: SetAttachToSkin(playerid, 233, skin, item);
		case 18877: SetAttachToSkin(playerid, 234, skin, item);
		case 19893: SetAttachToSkin(playerid, 235, skin, item);
		case 19787: SetAttachToSkin(playerid, 236, skin, item);
		case 19894: SetAttachToSkin(playerid, 237, skin, item);
		case Item_Radio_Vehicle: SetAttachToSkin(playerid, 121, skin, item);//Пульт для ридио каров
   		case 19993: SetAttachToSkin(playerid, 118, skin, item);//Модификация
    	case 19063: SetAttachToSkin(playerid, 117, skin, item);//Модификация
		case 18642: SetAttachToSkin(playerid, 116, skin, item);//Модификация
		case 19202: SetAttachToSkin(playerid, 115, skin, item);//Модификация
		case 18879: SetAttachToSkin(playerid, 114, skin, item);//Модификация
		case 19577: SetAttachToSkin(playerid, 113, skin, item);//Модификация
		case 11700: SetAttachToSkin(playerid, 112, skin, item);//Модификация
  		case 3471: SetAttachToSkin(playerid, 111, skin, item);//Модификация
		case 19339: SetAttachToSkin(playerid, 110, skin, item);//Модификация
		case 3524: SetAttachToSkin(playerid, 109, skin, item);//Модификация
		//case 19581: SetAttachToSkin(playerid, 108, skin, item);//Модификация
		case 1108: SetAttachToSkin(playerid, 107, skin, item);//Модификация
		case 18688: SetAttachToSkin(playerid, 106, skin, item);//Модификация
		case 19527: SetAttachToSkin(playerid, 105, skin, item);//Модификация
		case 19517: SetAttachToSkin(playerid, 104, skin, item);//Модификация
		case 324: SetAttachToSkin(playerid, 103, skin, item);//Модификация
		case 3100: SetAttachToSkin(playerid, 102, skin, item);//Модификация
		case 19590: //Мечи
		{
			new color = FindAksColor(PI[playerid][pInvItemAcsColor][5]);
			SetAttachToSkin(playerid, 120, skin, item, color);
		}
		case 18637: //Щиты
		{
			new color = FindAksColor(PI[playerid][pInvItemAcsColor][5]);
			SetAttachToSkin(playerid, 119, skin, item, color);
			//120-125
		}
		case 11736: //Маски от короновируса
		{
			new color = FindAksColor(PI[playerid][pInvItemAcsColor][5]);
			SetAttachToSkin(playerid, 88, skin, item, color);
			//89-94
		}
		case 339: //Катаны
		{
			new color = FindAksColor(PI[playerid][pInvItemAcsColor][5]);
			SetAttachToSkin(playerid, 95, skin, item, color);
		}
		case 19314: SetAttachToSkin(playerid, 87, skin, item);
		case 1366: SetAttachToSkin(playerid, 86, skin, item);
		case 953: SetAttachToSkin(playerid, 85, skin, item);
		case 2985: SetAttachToSkin(playerid, 84, skin, item);
		case 19332,19333,19334,19335,19336,19337,19338: SetAttachToSkin(playerid, 77, skin, item);//Шары
		case 16776: SetAttachToSkin(playerid, 76, skin, item);
		case 19623: SetAttachToSkin(playerid, 75, skin, item);
		case 19079: SetAttachToSkin(playerid, 74, skin, item);
		case 2590: SetAttachToSkin(playerid, 73, skin, item);
		case 361: SetAttachToSkin(playerid, 72, skin, item);
		case 362: SetAttachToSkin(playerid, 71, skin, item);
		case 18635: SetAttachToSkin(playerid, 70, skin, item);
		case 11745: SetAttachToSkin(playerid, 69, skin, item);
		case 19197: SetAttachToSkin(playerid, 68, skin, item);
		case 19621: SetAttachToSkin(playerid, 67, skin, item);
		case 19042..19053: SetAttachToSkin(playerid, 15, skin, item);
		case 19421..19424: SetAttachToSkin(playerid, 14, skin, item);//Наушники
		case 18911..18920: SetAttachToSkin(playerid, 13, skin, item);//банданы
		case 19011..19019,19024,19027,19028,19029,19022,19035,19031..19033: SetAttachToSkin(playerid, 12, skin, item);//Очки
		case 19069,19068,19067: SetAttachToSkin(playerid, 1, skin, item);//Шапки
		case 19554,19528: SetAttachToSkin(playerid, 3, skin, item);//Шапка баллас,ведьмы,петуха
		case 18953,18954: SetAttachToSkin(playerid, 2, skin, item);//Тёплые шапки
		case 18968,18967,18969: SetAttachToSkin(playerid, 4, skin, item);//Панамки
		case 18955,18956,18957,18959: SetAttachToSkin(playerid, 5, skin, item);//Кепки на зад
		case 18926,18927,18928,18929,18930,18931,18932,18933: SetAttachToSkin(playerid, 6, skin, item);//Кепки наперёд
		case 19104,19105,19106,19107,19108,19109: SetAttachToSkin(playerid, 9, skin, item); //Каски,военный шлем
		case 19519: SetAttachToSkin(playerid, 10, skin, item); //Парики 1
		case 19274: SetAttachToSkin(playerid, 11, skin, item);//Парики 2
		case 18925,18922,18923,18924,18921: SetAttachToSkin(playerid, 8, skin, item);//Береты
		case 18947,18948,18949,18950,18951: SetAttachToSkin(playerid, 7, skin, item);//Шляпы
		case 3026: SetAttachToSkin(playerid, 16, skin, item);//Рюкзаки
		case 371: SetAttachToSkin(playerid, 17, skin, item);
		case 19559: SetAttachToSkin(playerid, 18, skin, item);
		case 18970, 18973, 18972, 18971: SetAttachToSkin(playerid, 19, skin, item);//Шляпы 1	
		case 19487, 19352: SetAttachToSkin(playerid, 20, skin, item);//Шляпы 2
		case 18910, 18909, 18908, 18907, 18906: SetAttachToSkin(playerid, 21, skin, item);//Банданы на голову		
		case 19351: SetAttachToSkin(playerid, 22, skin, item);//Усы
		case 19350: SetAttachToSkin(playerid, 24, skin, item);//Усы
		case 19319, 19318, 19317: SetAttachToSkin(playerid, 23, skin, item);//Гитары, рога
		case 19064..19066: SetAttachToSkin(playerid, 25, skin, item);//шапки новогоднии
		case 19085: SetAttachToSkin(playerid, 26, skin, item);//повязка
		case 19054..19058: SetAttachToSkin(playerid, 27, skin, item);//новогодний рюкзак
		case 881: SetAttachToSkin(playerid, 28, skin, item);//Ёлка
		case 19624: SetAttachToSkin(playerid, 29, skin, item);//Чемодан
	    case 2226: SetAttachToSkin(playerid, 30, skin, item);//Бумбокс
	    case 19472: SetAttachToSkin(playerid, 31, skin, item);//Респиратор
	    case 2908: SetAttachToSkin(playerid, 32, skin, item);
	    case 11704: SetAttachToSkin(playerid, 34, skin, item);
	    case 18645: SetAttachToSkin(playerid, 35, skin, item);//шлем
	    case 336: SetAttachToSkin(playerid, 37, skin, item);//Бита на спину
		case 19921: SetAttachToSkin(playerid, 38, skin, item);//Красный чемодан
		case 19038: SetAttachToSkin(playerid, 39, skin, item);//Зелёная Маска
		case 19037: SetAttachToSkin(playerid, 40, skin, item);//Красная Маска
		case 19036: SetAttachToSkin(playerid, 41, skin, item);//Белая Маска
		case 18952: SetAttachToSkin(playerid, 42, skin, item);//Маска Ring Master
		case 18963: SetAttachToSkin(playerid, 43, skin, item);//Маска CJ
		case 2404..2406: SetAttachToSkin(playerid, 44, skin, item);//Доска для серфинга
		case 19878:  SetAttachToSkin(playerid, 45, skin, item);
		case 2045: SetAttachToSkin(playerid, 46, skin, item);
		case 19320: SetAttachToSkin(playerid, 47, skin, item);
		case 19200: SetAttachToSkin(playerid, 49, skin, item);//Шлем
		case 19626: SetAttachToSkin(playerid, 50, skin, item);//Лопата
		case 19904: SetAttachToSkin(playerid, 51, skin, item);
		case 2102: SetAttachToSkin(playerid, 52, skin, item);
		case 2690: SetAttachToSkin(playerid, 53, skin, item);
		case 333: SetAttachToSkin(playerid, 54, skin, item);
		case 1276: SetAttachToSkin(playerid, 55, skin, item);
		case 19078: SetAttachToSkin(playerid, 56, skin, item);
		case 8492: SetAttachToSkin(playerid, 57, skin, item);
		case 11712: SetAttachToSkin(playerid, 58, skin, item);
		case 19136: SetAttachToSkin(playerid, 59, skin, item);
		//case 3056: SetAttachToSkin(playerid, 60, skin, item);
		case 19349: SetAttachToSkin(playerid, 61, skin, item);
		case 2511: SetAttachToSkin(playerid, 62, skin, item);
		case 2712: SetAttachToSkin(playerid, 63, skin, item);
		case 341: SetAttachToSkin(playerid, 64, skin, item);
		//case 19521: SetAttachToSkin(playerid, 65, skin, item);
		case 1212: SetAttachToSkin(playerid, 66, skin, item);
		case 19631: SetAttachToSkin(playerid, 96, skin, item);
		case 18890: SetAttachToSkin(playerid, 97, skin, item);
		case 19094: SetAttachToSkin(playerid, 98, skin, item);
		case 2782:  SetAttachToSkin(playerid, 99, skin, item);
	}
	return 1;
}
stock SetPlayerSkinEx(playerid,skin)
{
	SetPlayerSkin(playerid, skin);
	if(InventStatus{playerid} && !InvCarOpen{playerid})
	{
		if(skin == 18 || skin == 139)
		{
			PlayerTextDrawSetString(playerid, Invent[playerid][49], "_");
			PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], skin);
			PlayerTextDrawShow(playerid, Invent[playerid][47]);
			PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 1649);
			PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 0.000000, 0.000000, 90.000000, 2.000000);
		}
		else
		{
			if(!IsPlayerLauncher(playerid)) if(skin > 311) f(str_2, 10, "ID:%i", GetItemNewSkin(skin)+312);
			else f(str_2, 10, "ID:%i", skin);
			PlayerTextDrawSetString(playerid, Invent[playerid][49], str_2);
			PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], skin);
			PlayerTextDrawShow(playerid, Invent[playerid][47]);
			PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 2386);
			PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 346.000000, 0.000000, 129.000000, 0.900000);
		}
		SetSelectableSkin(playerid);
		CheckModPlayer(playerid);
	}
	CheckItem(playerid);
	if(UsingShield[playerid])
	{
		J_SetPlayerArmour(playerid, 0);
		PI[playerid][pShield] = 0.0;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid, 7);
		ResetGun(playerid);
		SCM(playerid,COLOR_GREY, !"[Информация] {FFFFFF}У вас отобрали служебные предметы, так-как в них запрещено работать!");
	}
	SetPlayerChatBubble(playerid, "Переоделся", COLOR_GREEN, 10.0, 5000);
	return 1;
}
#include ../library/SetAttachToSkin
stock TogglePlayerMap(playerid, toggle)
{
	if(toggle)
	{
		if(!ShowMap[playerid])
		{
			TextDrawShowForPlayer(playerid, Map[0]);
			TextDrawShowForPlayer(playerid, Map[1]);
			TextDrawShowForPlayer(playerid, Map[2]);
			TextDrawShowForPlayer(playerid, Map[3]);
			ShowMap[playerid] = true;
			foreach(new i: Player)
			{
				if(!IsPlayerConnected(i)) continue;
				TextDrawShowForPlayer(playerid, PlayerDraw[i]);
				TextDrawHideForPlayer(playerid, StatsDraw[i]);
			}
			SCM(playerid, COLOR_LIME, !"Вы открыли карту штата San Andreas. Чтобы закрыть её нажмите {FF9900}ESC");
			SelectTextDraw(playerid, 0xFFFFFFAA);
		}
	}
	else
	{
	    foreach(new i: Player)
		{
			TextDrawHideForPlayer(playerid, PlayerDraw[i]);
			TextDrawHideForPlayer(playerid, StatsDraw[i]);
	   	}
  		TextDrawHideForPlayer(playerid, Map[0]);
		TextDrawHideForPlayer(playerid, Map[1]);
		TextDrawHideForPlayer(playerid, Map[2]);
		TextDrawHideForPlayer(playerid, Map[3]);
		ShowMap[playerid] = false;
	}
	return 1;
}
stock CheckMapCords(Float:x, Float:y, &Float:X, &Float:Y)
{
    if(y < -3000) y = -3000;
	else if(y > 3000) y = 3000;
	if(x < -3000) x = -3000;
	else if(x > 3000) x = 3000;
	if(y > -3000 && y < 3000 && x > -3000 && x < 3000)
	{
		if(y < 0) Y = 207 + 224 * -y / 3000;
		else if(y >= 0) Y = 207 - 224 * y / 3000;
		if(x < 0) X = 318 - -x * 320 / 3000;
		else if(x >= 0) X = 318 + x * 320 / 3000;
	}
	return 1;
}
stock CreatePlayerMapDraws(playerid)
{
    if(NeedDell[playerid]==false)
    {
        if(IsACop(playerid) || IsAArmy(playerid))
        {
			new Float:x, Float:y, Float:z, Float:Pos_X, Float:Pos_Y;
   			GetPlayerPos(playerid, x, y, z);
			CheckMapCords(x, y, Pos_X, Pos_Y);

			new ss=0;
			foreach(new i: Player)
			{
				if(!IsPlayerConnected(i)) continue;
				if(ShowMap[i])
				{
				    if(PI[playerid][pMember]==PI[i][pMember])
				    {
				        if(ss==0)
				        {
					        new team = GetTeamID(playerid);
						 	PlayerDraw[playerid] = TextDrawCreate(Pos_X, Pos_Y, "-");
							TextDrawFont(PlayerDraw[playerid], 1);
							TextDrawLetterSize(PlayerDraw[playerid], 0.49, 2.9);
							TextDrawColor(PlayerDraw[playerid], TeamColors[team]);
							TextDrawSetOutline(PlayerDraw[playerid], 1);

							f(str_2, sizeof(str_2), "ID: %i ~y~ %s", playerid, PN(playerid));
							StatsDraw[playerid] = TextDrawCreate(Pos_X+10, Pos_Y+8, str_2);
							TextDrawFont(StatsDraw[playerid], 1);
							TextDrawLetterSize(StatsDraw[playerid], 0.16, 0.6);
							TextDrawColor(StatsDraw[playerid], 0xFFFFFFFF);
							TextDrawSetOutline(StatsDraw[playerid], 1);
							ss++;
						}
						TextDrawShowForPlayer(i, PlayerDraw[playerid]);
						TextDrawShowForPlayer(i, StatsDraw[playerid]);
						NeedDell[playerid]=true;
					}
				}
			}
		}
	}
	return 1;
}
stock DestroyPlayerMapDraws(playerid)
{
	if(NeedDell[playerid]==true)
	{
	    TextDrawHideForAll(PlayerDraw[playerid]);
		TextDrawDestroy(PlayerDraw[playerid]);
		TextDrawHideForAll(StatsDraw[playerid]);
		TextDrawDestroy(StatsDraw[playerid]);
		NeedDell[playerid]=false;
	}
	return 1;
}
stock UpdateMap(playerid)
{
	if(IsPlayerLogged{playerid})
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
		{
		    if(GetPlayerInterior(playerid)==0 && GetPlayerVirtualWorld(playerid)==0)
			{
			    DestroyPlayerMapDraws(playerid);
				CreatePlayerMapDraws(playerid);
			}
		}
	}
	return 1;
}
stock UpdateDonate(playerid)
{
	if(GetPVarInt(playerid, !"reloader") > gettime()) return false;
	mysql_format(mysql, str_3, 256, "SELECT `DonateMoney` FROM `Qelksekm` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
	new Cache:result = mysql_query(mysql, str_3);
	new DonateMoney;
	cache_get_value_name_int(0, "DonateMoney", DonateMoney);
	cache_delete(result);
	if(DonateMoney != PI[playerid][pDonateMoney])
	{
		SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вам было зачислено %i AZ-RUB!", DonateMoney - PI[playerid][pDonateMoney]);
		PI[playerid][pDonateMoney] = DonateMoney;
	}
	else SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Зачислений не поступало!");
	SetPVarInt(playerid, !"reloader", gettime() + 5);
	ShowADonate(playerid);
	return 1;
}
stock ShowADonate(playerid)
{
	static header[50];
	f(header, sizeof(header), "{FFFFFF}На счету: {73B461}%i AZ-RUB", PI[playerid][pDonateMoney]);

	str_1 = "Услуга\tЦена\n";
	strcat(str_1, "{FFD700}Проверить зачисления\n");
	strcat(str_1, "{FFFFFF}1. Приобрести Права-Администратора\t{FFD700}<<<\n");
	strcat(str_1, "{FFFFFF}2. Конвертация донат-рублей в AZ-монеты\t{FFD700}<<<\n");
	strcat(str_1, "{FFFFFF}3. Дополнительно\t{FFD700}<<<\n");
	strcat(str_1, "{FFFFFF}4. Платные Сертификаты\t{FFD700}<<<\n");
	str_2 = Mode_City_Caps;
	f(str_1, sizeof(str_1), "%s{FFFFFF}5. Приобрести %s VIP\t{FFD700}<<<\n", str_1, str_2);
	strcat(str_1, "{FFFFFF}6. Приобрести уникальные аксессуары\t{FFD700}<<<\n");
	strcat(str_1, "{FFFFFF}7. Приобрести предметы для крафта\t{FFD700}<<<\n");
	if(PI[playerid][pAdmin]) strcat(str_1, "\n{FFFFFF}8. Приобрести Команды-Администратора\t{FFD700}<<<\n");
	strcat(str_1, "{FFFFFF}————————————————————————————————\n");
	strcat(str_1, "{FFFFFF}Пополнить счет: "SITE"");

	return SPD(playerid, 7772, DIALOG_STYLE_TABLIST_HEADERS, header, str_1, !"»", !"x");
}
stock ShowDonate(playerid)
{
	str_1[0] = EOS;
    strcat(str_1,"{FFFFFF}На данной странице вы можете узнать номер своего\n");
    strcat(str_1,"аккаунта, текущее состояние счета, сумму последнего\n");
    strcat(str_1,"пополнения и общую сумму пополнений счета.\n\n");
    strcat(str_1,"Чтобы воспользоваться счетом нажмите {B83434}'Заказать'{FFFFFF}.\n");
	strcat(str_1,"Для пополнения счета посетите сайт: "SITE"/donate\n\n");
	strcat(str_1,"Курс пополнения счета можно посмотреть на сайте "SITE"/donate\n\n");
    strcat(str_1,"{B83434}Информация:{FFFFFF}\n");
    f(str_2,100,"Номер аккаунта: \t\t\t%i\n",PI[playerid][pID]);
	strcat(str_1,str_2);
	f(str_2,100,"Текущее состояние счета: \t\t%i az coins\n",PI[playerid][pVirMoney]);
	strcat(str_2,"{AFAFAF}\nОстальную информацию можно узнать пополнив счет.\n\n");
	strcat(str_1,str_2);

	if(PI[playerid][pVIP]>0)
	{
		new esc = floatround( (PI[playerid][pVipTime]-gettime())/3600/24, floatround_ceil );
		if(esc>=1)
		{
			f(str_2, 100,"{EB912A}VIP Статус будет понижен/снят через: %i дней. Транспорт останется.\n",esc);
			strcat(str_1, str_2);
		}
		else strcat(str_1, "{E93124}VIP Статус: Необходимо продлить.\n");
	}
	SPD(playerid, 222, DIALOG_STYLE_MSGBOX, !"Платные услуги", str_1, !"Заказать", !"Отмена");
	return 1;
}
stock ActualVIP(playerid)
{
	if(floatround( (PI[playerid][pVipTime]-gettime())/3600/24, floatround_ceil )>=1) return 1;
	else return 0;
}
#if AC_ON
stock ToCheat(code, playerid)
{
	new days, year, month, hour, minutes;
	getdate(year, month, days);
	gettime(hour,minutes);
	f(str_1, 50, "%02i:%02i %02i.%02i.%i", hour, minutes, days, month, year);
	f(str_2, 300, "\n\n{FF6347}Вы были кикнуты за подозрение в читерстве\n\
	Чтобы избежать подобных ситуаций в будущем\n\
	удалите все клео и другие модификации для игры.\n\n\
	{FFFFFF}Аккаунт: %s\n\
	Код причины: %s(%i / 1)\n\
	NetStat: %i(%.2f%)\n\n\
	Для выхода из игры используйте /q(uit)\n", PN(playerid), AC_CODE_NAME[code], code+1000, GetPlayerPing(playerid), NetStats_PacketLossPercent(playerid));
	SPD(playerid, 0, 0, str_1, str_2, !"X", !"");
	Kick(playerid);
	return true;
}
#endif
#include ../library/SetAttachToVehicle
stock IsASuccesIP(const ip[], const original[])
{
	static IP[4][16], Or[4][16];
	sscanf(ip, "p<.>s[16]s[16]", IP[0], IP[1]);
	sscanf(original, "p<.>s[16]s[16]", Or[0], Or[1]);
	for(new i; i < 4; i ++)
	{
	    if(Or[i][0] == '*') continue;
	    if(strval(IP[i]) != strval(Or[i])) return 0;
	}
	return 1;
}
stock UpdateFamily(ID)
{
	mysql_pqueryf(mysql, \
	"\
		UPDATE `Family` SET `slogan` = '%s', `name` = '%s', `memberscount` = '%i', `creator` = '%s', `zam` = '%s', `zam2` = '%s',\
		`chatcolor` = '%i', `galka` = '%i', `brand` = '%i', `discord` = '%s', `house` = '%i', `rep` = '%i', `money` = '%i',\
		`Respect` = '%i', `QuestTalon` = '%i', `Bussines` = '%i', `Shadow` = '%i', `MedicCredit` = '%i', `WhiteList` = '%i',\
		`BankOffer` = '%i', `Marodery` = '%i', `EatFish` = '%i', `Type` = '%i', `EXP` = '%i', `Level` = '%i' WHERE `ID` = '%i'\
	",\
	FamilyInfo[ID][famSlogan],\
	FamilyInfo[ID][famName],\
	FamilyInfo[ID][famMembersCount],\
	FamilyInfo[ID][famCreator],\
	FamilyInfo[ID][famZam],\
	FamilyInfo[ID][famZam2],\
	FamilyInfo[ID][famChatColor],\
	FamilyInfo[ID][famGalka],\
	FamilyInfo[ID][famBrand],\
	FamilyInfo[ID][famDiscord],\
	FamilyInfo[ID][famHouse],\
	FamilyInfo[ID][famRep],\
	FamilyInfo[ID][famMoney],\
	FamilyInfo[ID][famRespect],\
	FamilyInfo[ID][famQuestTalon],\
	FamilyInfo[ID][famBussines],\
	FamilyInfo[ID][famShadow],\
	FamilyInfo[ID][famMedicCredit],\
	FamilyInfo[ID][famWhiteList],\
	FamilyInfo[ID][famBankOffer],\
	FamilyInfo[ID][famMarodery],\
	FamilyInfo[ID][famEatFish],\
	FamilyInfo[ID][famType],\
	FamilyInfo[ID][famEXP],\
	FamilyInfo[ID][famLevel],\
	FamilyInfo[ID][famID]);

	return true;
}
forward LoadFamilyHouse();
public LoadFamilyHouse()
{
	new currenttime = GetTickCount();
	FamilyHouses = cache_num_rows();
	for(new i; i < FamilyHouses; i++) LoadOwnableFamilyHouse(i, i);
	printf("LoadFamilyHouse(%i) загрузился за %i ms", FamilyHouses, GetTickCount() - currenttime);
	return true;
}
stock LoadOwnableFamilyHouse(i, id)
{
    cache_get_value_name_int(i, "ID", FamilyHouse[id][fhID]);
    cache_get_value_name_int(i, "Cost", FamilyHouse[id][fhCost]);
    cache_get_value_name(i, "Owner", FamilyHouse[id][fhOwner]);
    cache_get_value_name_int(i, "Health", FamilyHouse[id][fhHealth]);
    cache_get_value_name_int(i, "Armour", FamilyHouse[id][fhArmour]);
    cache_get_value_name_int(i, "StatusLock", FamilyHouse[id][fhStatus]);
    cache_get_value_name_int(i, "World", FamilyHouse[id][fhWorld]);
    cache_get_value_name_float(i, "Exit_X", FamilyHouse[id][fh_Exit_X]);
    cache_get_value_name_float(i, "Exit_Y", FamilyHouse[id][fh_Exit_Y]);
    cache_get_value_name_float(i, "Exit_Z", FamilyHouse[id][fh_Exit_Z]);
    cache_get_value_name_float(i, "Enter_X", FamilyHouse[id][fh_Enter_X]);
    cache_get_value_name_float(i, "Enter_Y", FamilyHouse[id][fh_Enter_Y]);
    cache_get_value_name_float(i, "Enter_Z", FamilyHouse[id][fh_Enter_Z]);

    if(GetString(FamilyHouse[id][fhOwner], "The State"))
    {
        static fmt_str[] =
		"\
			Семейная квартира\n\
			Стоимость: {87EB7F}%i репутации\n\
			{FFFFFF}Статус: %s\
		";

        f(str_2, 300, fmt_str, FamilyHouse[id][fhCost], (FamilyHouse[id][fhStatus] == 0) ? ("{87EB7F}[Открыта]") : ("{FF5E5E}[Закрыта]"));
        FamHouseText[id] = CreateDynamic3DTextLabel(str_2, -1, FamilyHouse[id][fh_Enter_X], FamilyHouse[id][fh_Enter_Y], FamilyHouse[id][fh_Enter_Z], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
    }
	else
	{
	    static fmt_str[] =
		"\
			Семейная квартира\n\
			Владелец: {56A351}%s\n\
			{FFFFFF}Статус: %s\
		";

        f(str_2, 300, fmt_str, FamilyHouse[id][fhOwner], (FamilyHouse[id][fhStatus] == 0) ? ("{87EB7F}[Открыта]") : ("{FF5E5E}[Закрыта]"));
        FamHouseText[id] = CreateDynamic3DTextLabel(str_2, -1, FamilyHouse[id][fh_Enter_X], FamilyHouse[id][fh_Enter_Y], FamilyHouse[id][fh_Enter_Z], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	}
	famHousePickUp[id][0] = CreateDynamicPickup(19132, 23, FamilyHouse[id][fh_Enter_X], FamilyHouse[id][fh_Enter_Y], FamilyHouse[id][fh_Enter_Z], -1);
 	famHousePickUp[id][1] = CreateDynamicPickup(19132, 23, FamilyHouse[id][fh_Exit_X], FamilyHouse[id][fh_Exit_Y], FamilyHouse[id][fh_Exit_Z], (FamilyHouse[id][fhID]+50), 1);
 	famHousePickUp[id][2] = CreateDynamicPickup(1242, 23, -1507.6268, 2707.4971, 1500.9808, (FamilyHouse[id][fhID]+50), 1);//Бронежилет
 	famHousePickUp[id][3] = CreateDynamicPickup(1240, 23, -1505.0406, 2714.4133, 1500.9674, (FamilyHouse[id][fhID]+50), 1);//Хилка
 	CreateDynamic3DTextLabel("{3EA629}Семейные\n{FFFFFF}бронежилеты", -1, -1507.6268, 2707.4971, 1500.9808, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, (FamilyHouse[id][fhID]+50), 1);//Бронежилет
 	CreateDynamic3DTextLabel("{3EA629}Семейные\n{FFFFFF}аптечки", -1, -1505.0406, 2714.4133, 1500.9674, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, (FamilyHouse[id][fhID]+50), 1);//Хилка
 	CreateDynamic3DTextLabel("Холодильник{9ED300} Штаб-квартиры {FFFFFF}семьи.\nНажмите: ALT!", -1, -1505.3370, 2718.0195, 1500.9674, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, (FamilyHouse[id][fhID]+50), 1);//Холодильник
 	famDynamicZone[id] = CreateDynamicSphere(FamilyHouse[id][fh_Enter_X], FamilyHouse[id][fh_Enter_Y], FamilyHouse[id][fh_Enter_Z], 1.0, -1, -1, -1);
}
stock SaveFamily(playerid, inputtext[])
{
	static fmt_str[] =
	"\
	    INSERT INTO `Family` (`slogan`, `name`, `creator`)\
	    VALUES ('%s', '%s', '%s')\
	";
	mysql_format(mysql, str_2, 256, fmt_str, inputtext, PI[playerid][pNameFamily2], PN(playerid));
	mysql_pquery(mysql, str_2, "@_FamilyID", "is", playerid, inputtext);
	return true;
}
/*stock SaveHouseKey(playerid)
{
	if(!IsPlayerLogged{playerid}) return 0;
	str_1[0] = EOS;
	for(new i ; i < MAX_PLAYER_HOUSE; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pHouseKey][i]);
	UpdatePlayerDataStr(playerid, "HouseKey", str_1);
}*/
stock GiveFam(playerid)
{
    Iter_Add(Family, playerid);
	static fmt_str[] = "SELECT * FROM `Family` WHERE `ID` = '%i' LIMIT 1";
	mysql_format(mysql, str_2, 256, fmt_str, PI[playerid][pFamilyMemberID]);
	mysql_pquery(mysql, str_2, "@_ConnectFam", "d", playerid);
	return true;
}
stock IsNums(const string[])
{
    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] > '9' || string[i] < '0') return 0;
    return 1;
}
stock StopAudioStreamForPlayerFix(playerid)
{
	if(!bumreader{playerid}) return 1;
	StopAudioStreamForPlayer(playerid);
	bumreader{playerid} = false;
	return 1;
}
stock PlayAudioStreamForPlayerFix(playerid, url[], Float: posX = 0.0, Float: posY = 0.0, Float: posZ = 0.0, Float: distance = 50.0, usepos = 0)
{
	if(bumreader{playerid}) return 1;
	PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
	bumreader{playerid} = true;
	return 1;
}
stock GetXYInFrontOfPlayer(playerid, &Float:q, &Float:w, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, q, w, a);
    GetPlayerFacingAngle(playerid, a);
    q += (distance * floatsin(-a, degrees));
    w += (distance * floatcos(-a, degrees));
    return 1;
}
stock PreloadAnimLib(playerid, animlib[]) return ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
stock LoadVehicles()
{
	new currenttime = GetTickCount();
	J_AddStaticVehicleEx(473, -733.0216, -2033.5288, 5.2137, 114.0388, -1, -1, 100);
	J_AddStaticVehicleEx(473, -731.3942, -2020.5775, 5.2138, 60.6919, -1, -1, 100);
	//Мопеды
	AddFreeFaggio(2229.9092, -1162.8600, 25.2544, 90.0000, -1, -1, 100);
	AddFreeFaggio(2229.9680, -1166.4493, 25.2544, 90.0000, -1, -1, 100);
	AddFreeFaggio(2230.0039, -1170.1107, 25.2544, 90.0000, -1, -1, 100);
	AddFreeFaggio(2230.0129, -1173.5667, 25.2544, 90.0000, -1, -1, 100);
	AddFreeFaggio(-65.5372,180.3578,2.7914,151.5640,-1, -1, 100);
	AddFreeFaggio(-62.7703,178.6715,2.7919,150.7218,-1, -1, 100);
	AddFreeFaggio(-59.9803,177.0867,2.7924,149.4475,-1, -1, 100);
	AddFreeFaggio(-57.3355,175.5419,2.7928,151.5186,-1, -1, 100);
	AddFreeFaggio(-54.5681,173.8783,2.7931,150.4021,-1, -1, 100);
	AddFreeFaggio(-51.9701,172.1236,2.7936,152.6581,-1, -1, 100);
	AddFreeFaggio(-49.2016,170.6800,2.7939,152.4701,-1, -1, 100);
	AddFreeFaggio(-46.4403,169.1648,2.7942,151.9280,-1, -1, 100);
	AddFreeFaggio(-43.6433,167.5364,2.7944,153.2448,-1, -1, 100);
	AddFreeFaggio(-40.9221,165.9719,2.7946,151.3950,-1, -1, 100);
	AddFreeFaggio(-38.0611,164.4731,2.7947,152.4842,-1, -1, 100);
	AddFreeFaggio(-43.5738,154.7764,2.7957,329.5657,-1, -1, 100);
	AddFreeFaggio(-46.0988,156.2726,2.7958,331.8217,-1, -1, 100);
	AddFreeFaggio(-48.7693,157.8368,2.7959,331.5321,-1, -1, 100);
	AddFreeFaggio(-51.4755,159.3690,2.7960,330.2161,-1, -1, 100);
	AddFreeFaggio(-54.2625,160.9640,2.7961,330.7792,-1, -1, 100);
	AddFreeFaggio(-57.1369,162.7042,2.7963,330.2003,-1, -1, 100);
    AddFreeFaggio(1803.8282,-1934.2018,12.9542,1.7186,-1, -1, 100);
    AddFreeFaggio(1802.2841,-1934.1504,13.0682,359.6014,-1, -1, 100);
    AddFreeFaggio(1800.6324,-1934.0597,13.0696,2.1734,-1, -1, 100);
    AddFreeFaggio(1798.8317,-1934.0714,13.0696,2.8633,-1, -1, 100);
    AddFreeFaggio(1797.2307,-1934.1251,13.0696,2.4654,-1, -1, 100);
    AddFreeFaggio(1795.5244,-1934.1205,13.0696,0.5121,-1, -1, 100);
    AddFreeFaggio(1793.8413,-1934.1031,13.0619,358.8370,-1, -1, 100);
    AddFreeFaggio(1792.1859,-1934.0808,13.0590,0.5123,-1, -1, 100);
    AddFreeFaggio(1790.4281,-1934.0317,13.0590,359.4833,-1, -1, 100);
    AddFreeFaggio(1788.7545,-1934.0898,13.0642,359.6060,-1, -1, 100);
    AddFreeFaggio(1787.0288,-1934.0867,13.0642,359.6532,-1, -1, 100);
    AddFreeFaggio(1785.3582,-1934.0718,13.0597,1.3784,-1, -1, 100);
    AddFreeFaggio(1783.7209,-1934.0820,13.0572,1.2028,-1, -1, 100);
    AddFreeFaggio(1782.0222,-1934.0836,13.0572,358.9787,-1, -1, 100);
    AddFreeFaggio(1780.3329,-1934.0671,13.0572,1.4227,-1, -1, 100);
    AddFreeFaggio(1778.6277,-1933.9487,13.0572,359.8616,-1, -1, 100);
    AddFreeFaggio(1777.1250,-1933.9397,13.0572,359.0246,-1, -1, 100);
	AddFreeFaggio(185.7913, -86.8502, 1.0242, 179.3730, -1, -1, 100);
	AddFreeFaggio(187.2928, -86.8041, 1.0242, 179.3730, -1, -1, 100);
	AddFreeFaggio(188.9126, -86.7857, 1.0242, 179.3730, -1, -1, 100);
	AddFreeFaggio(-85.2464, -313.4781, 0.9261, 89.0466, -1, -1, 200);
	AddFreeFaggio(-85.2508, -314.6550, 0.9261, 89.0466, -1, -1, 200);
	AddFreeFaggio(-85.2205, -315.8159, 0.9261, 89.0466, -1, -1, 200);
	AddFreeFaggio(1348.5857,287.1873,19.1417,155.5508, -1, -1, 100);
	AddFreeFaggio(1346.9385,287.8734,19.1410,148.9387, -1, -1, 100);
	AddFreeFaggio(1345.3339,288.7947,19.1238,155.1355, -1, -1, 100);
	AddFreeFaggio(1343.8882,289.4364,19.1251,149.5628, -1, -1, 100);
	AddFreeFaggio(1342.1022,290.2208,19.1264,149.7179, -1, -1, 100);

    CreateJobVehicle(JOB_PIZZA,448, 686.0101,-1567.8412,13.8424,179.3411, 44, 44, 100);
	CreateJobVehicle(JOB_PIZZA,448, 687.9260,-1568.1115,13.8423,187.1912, 44, 44, 100);
	CreateJobVehicle(JOB_PIZZA,448, 690.6421,-1567.9688,13.8416,174.7638, 44, 44, 100);
	CreateJobVehicle(JOB_PIZZA,448, 694.3134,-1567.9852,13.8404,173.1375, 44, 44, 100);
	CreateJobVehicle(JOB_PIZZA,448, 695.6133,-1568.0505,13.8410,179.2073, 44, 44, 100);
	CreateJobVehicle(JOB_PIZZA,448, 696.9920,-1567.8237,13.8421,176.1919, 44, 44, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1471,2242.9351,10.4204,94.2715, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1877,2241.4224,10.4204,92.1274, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1769,2240.3376,10.4192,91.8053, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1233,2236.6389,10.4198,88.3445, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1876,2235.4705,10.4207,92.8598, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1750.6255,2233.9568,10.4141,87.8024, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1750.7683,2227.1809,10.4182,93.9982, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.1205,2225.6960,10.4197,91.3303, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.2262,2224.5493,10.4200,87.7106, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.2468,2220.2297,10.4206,90.0917, 3, 3, 100);
	CreateJobVehicle(JOB_PIZZA,448, 1751.6473,2218.6179,10.4188,93.0859, 3, 3, 100);

	CreateJobVehicle(JOB_NALOG,498, 1520.5752, -1044.9807, 23.6544, 245.0000, 6,1,RES_CAR_TIME);
	CreateJobVehicle(JOB_NALOG,498, 1508.4005, -1041.8052, 23.4839, 263.8714, 6,1,RES_CAR_TIME);

	CreateJobVehicle(JOB_SCRAPER,443, 2463.4534, -2627.4004, 13.9394, 269.3257,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_SCRAPER,443, 2463.4180, -2617.3396, 13.9394, 269.3257,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_SCRAPER,443, 2463.4636, -2606.5388, 13.9394, 269.3257,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_SCRAPER,443, 2463.4990, -2596.2339, 13.9394, 269.3257,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_SCRAPER,443, 2463.5344, -2586.1101, 13.9394, 269.3257,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_SCRAPER,443, 2463.4807, -2565.0964, 13.9394, 269.3257,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_SCRAPER,443, 2463.4768, -2575.5710, 13.9394, 269.3257,0,0,RES_CAR_TIME);
    CreateJobVehicle(JOB_SCRAPER,443, 1052.9906, 1920.8795, 11.3154, 360.0000,0,0,RES_CAR_TIME);
    CreateJobVehicle(JOB_SCRAPER,443, 1060.4225, 1920.7687, 11.3154, 360.0000,0,0,RES_CAR_TIME);
    CreateJobVehicle(JOB_SCRAPER,443, 1067.7998, 1920.8162, 11.3154, 360.0000,0,0,RES_CAR_TIME);
    CreateJobVehicle(JOB_SCRAPER,443, 1076.7444, 1921.1068, 11.3154, 360.0000,0,0,RES_CAR_TIME);
    CreateJobVehicle(JOB_SCRAPER,443, 1082.6561, 1920.6902, 11.3154, 360.0000,0,0,RES_CAR_TIME);
    CreateJobVehicle(JOB_SCRAPER,443, 1091.5621, 1920.9321, 11.3154, 360.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.7135, -1635.4933, 13.3804, 270.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.9839, -1643.3324, 13.3804, 270.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.9490, -1651.0912, 13.3804, 270.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.8265, -1658.9108, 13.3804, 270.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.0967, 2315.1018, 10.7409, 270.0538,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.1970, 2319.7830, 10.7409, 270.0538,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.2061, 2324.8198, 10.7409, 270.0538,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.3059, 2329.8906, 10.7409, 270.0538,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.2432, 2335.1106, 10.7409, 270.0538,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, -1707.7457,750.2225,24.7211,0.3466,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, -1707.7557,762.7996,24.8649,1.7362,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_COLLECTOR,428, -1708.4148,799.6246,24.8614,359.9829,0,0,RES_CAR_TIME);

	new meccar = CreateJobVehicle(JOB_MECHANIC,525, 1132.5924, -1671.2059, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.6256, -1675.8069, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5924, -1680.9872, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5658, -1686.3081, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5170, -1691.8745, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5253, -1696.5049, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.6002, 2170.7954, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.5939, 2162.4075, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.7297, 2154.1882, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.7506, 2145.8806, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 195.1307, -251.7032, 1.3935, 180.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 199.8307, -251.6695, 1.3935, 180.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 204.5920, -251.6786, 1.3935, 180.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 209.5022, -251.6661, 1.3935, 180.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525,  2115.7346, 920.3560, 10.5940, 360.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 2112.1680, 920.3069, 10.5940, 360.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 2122.3782, 920.3223, 10.5940, 360.0000,0,0,RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.8577, 185.1595, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.7842, 188.8805, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.6499, 192.6978, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.5996, 204.5557, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.6047, 196.6815, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.6130, 212.5199, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	new meccar2 = CreateJobVehicle(JOB_MECHANIC,525, 2105.6604, 920.3301, 10.5940, 360.0000,0,0,RES_CAR_TIME);

	for(new i = meccar; i <= meccar2; i ++)
	{
		f(str_2, 100, "{57B22C}Заправка %.1f$\n{FFFFFF}Бензина: %i/1000",BenzinCena[i],BenzinCount[i]);
		Benzin[i] = CreateDynamic3DTextLabel(str_2, 0xFFFFFFFF, 0, 0, 0+2, 15.0, INVALID_PLAYER_ID, i);
	}

	new taxicar1 = CreateJobVehicle(JOB_TAXI, 420, 1063.50, -1763.90, 13.19, 270, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.6467, -1157.3550, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.5330, -1161.6392, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.4675, -1166.2587, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.4338, -1170.8635, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.4719, -1175.7715, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.4368, -1180.2921, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2147.3428, -1184.9250, 23.4894, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 1063.59997559,-1775.69995117,13.19999981,270.00000000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 1063.59997559,-1769.69995117,13.19999981,270.00000000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 1063.59997559,-1758.00000000,13.30000019,270.00000000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 1063.59997559,-1752.00000000,13.30000019,270.00000000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 1063.59997559,-1746.09997559,13.30000019,270.00000000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 1063.50000000,-1740.19995117,13.30000019,270.00000000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 159.5747, -163.4501, 1.3221, 90.4101, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 159.5734, -166.6906, 1.3221, 90.4101, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 159.5098, -171.8708, 1.3221, 90.4101, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 159.5204, -175.7410, 1.3221, 90.4101, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2805.2815, 1326.1350, 10.3866, 270.4524, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2805.2175, 1332.6567, 10.3866, 270.4524, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2805.1868, 1345.3809, 10.3866, 270.4524, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2805.1108, 1351.7854, 10.3866, 270.4524, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2804.9702, 1364.3650, 10.3866, 270.4524, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2804.9580, 1370.8323, 10.3866, 270.4524, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2813.5513, 1375.0787, 10.3866, 180.6553, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2157.8330, 987.9869, 10.4502, 360.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2151.2722, 987.9686, 10.4502, 360.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2144.9858, 987.9401, 10.4502, 360.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2138.5859, 987.9042, 10.4502, 360.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2132.1841, 988.0284, 10.4502, 360.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2132.1846, 1006.5904, 10.4502, 90.1051, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2132.1926, 1012.9504, 10.4502, 90.1051, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2132.3030, 1019.2924, 10.4502, 90.1051, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, 2132.3093, 1025.6713, 10.4502, 90.1051, 6, 6, RES_CAR_TIME);

	CreateJobVehicle(JOB_TAXI, 420, -1964.7651, 105.5459, 27.4084, 90.2113, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1964.7872, 100.6797, 27.4084, 90.2113, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1964.7867, 98.1396, 27.4084, 90.2113, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1964.7623, 93.2782, 27.4084, 90.2113, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1964.7936, 90.6587, 27.4084, 90.2113, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1964.7448, 85.6379, 27.4084, 90.2113, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1975.9830, 83.7797, 27.4084, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1976.0020, 86.2425, 27.4084, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI, 420, -1976.0045, 96.2337, 27.4084, 270.0000, 6, 6, RES_CAR_TIME);

	new taxicar2 = CreateJobVehicle(JOB_TAXI,420,1099.00000000,-1769.69995117,13.50000000,90.00000000,66,66,RES_CAR_TIME);
	for(new i = taxicar1; i <= taxicar2; i ++)
	{
		TaxiText[i] = CreateDynamic3DTextLabel("<< Такси для аренды >>",COLOR_GOLD,0,0,1.4,20.0,INVALID_PLAYER_ID,i);
		CreateTaxiAttach(i);
	}

	CreateJobVehicle(JOB_TRUCKER,514,-243.60000610352,-214.39999389648,2.0999999046326,250.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,-242.10000610352,-210.5,2.0999999046326,250.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,-240.60000610352,-206.39999389648,2.0999999046326,250.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,-239,-202.19999694824,2.0999999046326,250.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,-237.39999389648,-198,2.0999999046326,250.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,-235.80000305176,-193.80000305176,2.0999999046326,250.0,-1,-1,RES_CAR_TIME);

	new avtobcar = CreateJobVehicle(1,437, 1277.0647, -1805.6693, 13.3232, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(1,437, 1277.0647, -1796.3993, 13.3332, 90.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1277.0647, -1810.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1277.0647, -1815.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1277.0647, -1825.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1277.0647, -1830.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1277.0647, -18356692.0000, 13.3332, 90.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1200.7920, -1829.0747, 13.3332, 270.0000,43,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 1200.7728, -1834.2271, 13.3332, 270.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(1,437, 2794.7163, 1292.5970, 10.7482, 180.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2788.2739, 1292.6022, 10.7482, 180.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2785.1704, 1292.6265, 10.7482, 180.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2778.5483, 1292.5355, 10.7482, 180.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2775.5710, 1292.6011, 10.7482, 180.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2767.6765, 1281.5607, 10.7482, 270.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2767.6912, 1278.4785, 10.7482, 270.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, 2767.7268, 1271.9985, 10.7482, 270.0000,6,1,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2159.3274, 303.4340, 35.0653, 180.1683,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2167.1770, 303.3369, 35.0653, 180.1683,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2163.0901, 303.3921, 35.0653, 180.1683,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2175.4285, 303.3306, 35.0653, 180.1683,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2179.9001, 303.2414, 35.0653, 180.1683,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2210.0623, 296.2733, 35.0653, 360.0000,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2214.1479, 296.2141, 35.0653, 360.0000,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2222.5984, 296.1785, 35.0653, 360.0000,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2226.8101, 296.1526, 35.0653, 360.0000,1,6,RES_CAR_TIME);
    CreateJobVehicle(1,437, -2235.4680, 296.1688, 35.0653, 360.0000,1,6,RES_CAR_TIME);

	new avtobcar2 = CreateJobVehicle(1,437, 2767.7498, 1268.8586, 10.7482, 270.0000,6,1,RES_CAR_TIME);
	for(new i = avtobcar; i <= avtobcar2; i ++) AutobCarText[i] = CreateDynamic3DTextLabel("{E06C1F}Автобус\n{73B461}[Для аренды]", 0xFFFFFFFF, 0, 0, 0+2, 15.0, INVALID_PLAYER_ID, i);

	CreateJobVehicle(18,531, -270.2865, -112.2759, 3.0328, 73.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -272.4866, -119.7816, 3.0328, 73.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -273.5097, -123.8623, 3.0328, 73.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -274.8136, -127.9387, 3.0328, 73.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -286.9964, -111.2960, 2.1032, 254.6761,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -288.0367, -115.3296, 2.1032, 254.6761,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -290.2695, -123.6411, 2.1032, 254.6761,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -240.4103, -133.0202, 3.0328, 71.6191,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -239.2496, -128.9333, 3.0328, 71.6191,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -236.7027, -121.6897, 3.0328, 71.6191,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -253.8011, -120.8019, 3.0964, 255.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -254.9627, -124.7728, 3.0964, 255.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(18,531, -257.4177, -132.8690, 3.0964, 255.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, -142.8849, -141.7535, 4.1843, 350.0000,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, -152.1641, -140.0825, 4.1843, 350.0000,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, -176.1418, -135.8917, 4.1843, 350.0000,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, -185.0528, -134.2568, 4.1843, 350.0000,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, 68.1860, -172.3685, 2.2343, 358.1570,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, 58.8262, -172.0788, 2.2343, 358.1570,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, 33.7615, -170.2010, 2.2343, 358.1570,6,1,RES_CAR_TIME);
	CreateJobVehicle(19,532, 24.5828, -169.8550, 2.2343, 358.1570,6,1,RES_CAR_TIME);
	CreateJobVehicle(20,512, 127.0399, -6.0957, 1.7356, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(20,512, 127.0399, -19.1657, 1.7356, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(20,512, 127.0399, -33.1657, 1.7356, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(20,512, 126.7599, -46.1657, 1.7356, 86.1029,43,1,RES_CAR_TIME);

	new prodcar = CreateJobVehicle(3,456, 901.3243, -1207.0145, 16.9306, 180.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 867.2712, -1207.0145, 16.9306, 180.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 830.9780, -1207.0145, 16.9306, 180.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 866.5544, -1245.3495, 14.9935, 270.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 866.2090, -1255.6030, 14.9935, 270.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 850.6572, -1293.2709, 13.6845, 270.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 1635.6804, 2303.1755, 10.6776, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 1635.6804, 2312.7637, 10.6776, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 1635.6804, 2340.8357, 10.6776, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 1638.8076, 2358.9194, 10.8176, 90.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 1593.5557, 2286.7019, 10.8176, 270.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, 1593.5557, 2294.4829, 10.8176, 270.0000,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, -28.2736, 47.2231, 3.0746, 250.2569,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, -30.8920, 39.9784, 3.0746, 250.2569,43,1,RES_CAR_TIME);
	CreateJobVehicle(3,456, -33.3566, 33.0568, 3.0746, 250.2569,43,1,RES_CAR_TIME);

	new prodcar2 = CreateJobVehicle(3,456, -35.9212, 25.8792, 3.0746, 250.2569,43,1,RES_CAR_TIME);
	for(new i = prodcar; i <= prodcar2; i ++)
	{
	    CarproductType[i] = 0;
	    CarproductCount[i]=0;
		f(str_2, 100, "{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[i]);
		Product[i] = CreateDynamic3DTextLabel(str_2, 0xFFFFFFFF, 0, 0, 0+3, 15.0, INVALID_PLAYER_ID, i);
	}

	CreateJobVehicle(JOB_TRUCKER,591,-221.10000610352,-192.89999389648,2.0999999046326,165.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,-216.89999389648,-193.89999389648,2.0999999046326,165.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,-212.60000610352,-195.00000000000,2.0999999046326,165.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,-208.30000305176,-196.10000610352,2.0999999046326,165.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,-203.89999389648,-197.19999694824,2.0999999046326,165.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,-199.19999694824,-198.39999389648,2.0999999046326,165.0,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2283.7920, -2361.7754, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2345.8572, -2340.9146, 14.6157, 45.6939,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2349.1504, -2337.4753, 14.6157, 45.2318,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2352.7537, -2333.7805, 14.6157, 45.2318,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2356.8618, -2329.6274, 14.6157, 45.2318,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2361.9436, -2324.5420, 14.6157, 45.2318,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2365.4797, -2320.8169, 14.6157, 45.2318,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,584, 2369.2466, -2317.1560, 14.6157, 45.2318,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2281.1604, -2359.0247, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2278.2554, -2356.1472, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2275.0803, -2352.8027, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2271.9958, -2349.7327, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2269.0525, -2346.7141, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2266.0740, -2343.7979, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2262.9104, -2340.6689, 13.7764, 315.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 283.2295, 1438.1410, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 283.1770, 1443.2140, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 283.1367, 1448.1686, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 283.2121, 1453.6683, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 283.0680, 1458.7559, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 283.0476, 1463.7240, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 282.9244, 1468.6151, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 282.6463, 1473.5391, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,403, 282.6335, 1478.9354, 11.0016, 90.2786,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.4396, 1388.0272, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.5101, 1381.8278, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.5234, 1376.4355, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.6128, 1370.9796, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.6699, 1365.1796, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.6070, 1359.5594, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.4159, 1353.5386, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
    CreateJobVehicle(JOB_TRUCKER,584, 283.4125, 1347.8372, 11.5307, 90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2818.0342, 898.4192, 11.0842, 360.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2827.2937, 898.4471, 11.0842, 359.3848,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2855.2280, 898.3457, 11.0842, 359.3848,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2801.5776, 968.6064, 11.0842, 180.9509,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2822.7566, 968.4808, 11.0842, 180.9509,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2828.0725, 968.5270, 11.0842, 180.9509,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514, 2807.1160, 968.5431, 11.0842, 180.9509,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2875.9521, 937.7621, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1030, 932.4043, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1101, 926.7573, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1948, 921.3900, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1301, 916.0045, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1934, 910.3636, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591, 2876.2161, 905.1071, 11.2442, 91.0000,-1,-1,RES_CAR_TIME);

	new jobcar1 = CreateJobVehicle(JOB_MUSOR,408, 2229.1875, -2254.4700, 13.9927, 44.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2221.9580, -2261.9353, 13.9927, 44.6070,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2214.5637, -2269.2820, 13.9927, 44.6070,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2207.1277, -2276.6458, 13.9927, 44.6070,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2201.8547, -2212.2295, 13.9927, 225.9129,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2194.7913, -2219.2048, 13.9927, 225.9129,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2187.3237, -2226.6399, 13.9927, 225.9129,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2204.7839, -2209.3281, 13.9927, 225.9129,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2313.1040, 2738.2644, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2261.0630, 2747.8459, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2261.0830, 2754.3857, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2261.3125, 2763.8857, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2261.2068, 2770.6584, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2261.1924, 2779.9573, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2261.4448, 2738.2727, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2313.1741, 2747.8047, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2313.0730, 2754.6177, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2312.9021, 2764.0999, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2500.2610, 354.2332, 35.6264, 64.7550,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2503.3643, 347.4843, 35.6264, 64.7550,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2504.9944, 343.8470, 35.6264, 64.7550,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2508.0747, 336.7984, 35.6264, 64.7550,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2510.9172, 329.2991, 35.6264, 64.7550,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2526.2654, 325.6854, 35.6264, 251.9357,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2527.4797, 322.0103, 35.6264, 251.9357,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2528.6089, 318.2935, 35.6264, 251.9357,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, -2530.7307, 310.9182, 35.6264, 251.9357,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2312.7605, 2770.5984, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_MUSOR,408, 2312.4712, 2780.1621, 11.1918, 90.1548,-1,-1,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMY,1, 433, 2779.2498, -2424.0659, 13.9536, 0.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433, 2787.6499, -2424.0659, 13.9536, 0.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433, 2779.3679, -2411.7988, 13.9536, 180.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433, 2787.8879, -2411.7988, 13.9536, 180.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 548, 2778.1492, -2351.3198, 15.4136, 90.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYLV,1, 548, 308.8837, 2049.4634, 19.2729, 125.2743, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYLV,1, 433, 331.5056, 1838.1539, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433, 331.6322, 1833.2600, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433, 331.6710, 1828.2039, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433, 329.1975, 1956.5177, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433, 329.2752, 1951.6531, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433, 329.3937, 1946.5551, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 433, -1301.7191, 450.2716, 7.6070, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 433, -1306.0233, 450.4437, 7.6070, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 433, -1310.2528, 450.4818, 7.6070, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 433, -1314.5728, 450.4818, 7.6070, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 433, -1267.0791, 450.2716, 7.6070, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 433, -1271.0791, 450.2716, 7.6070, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 548, -1278.4851, 502.1362, 20.0314, 45.4174, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 548, -1305.7130, 501.4666, 20.0314, 45.4174, 44, 1, RES_CAR_TIME);

	new jobcar2 = CreateJobVehicle(JOB_MUSOR,408, 2190.3232, -2223.6926, 13.9927, 225.9129,-1,-1,RES_CAR_TIME);
	for(new i = jobcar1; i <= jobcar2; i ++) MusorCarText[i] = CreateDynamic3DTextLabel("Загружено: 0%/100%", 0xFFFFFFFF, 0, 0, 0, 15.0, INVALID_PLAYER_ID, i);

	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5748, -1693.0895, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5333, -1696.9873, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.4792, -1704.1243, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5447, -1700.5864, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.4730, -1708.0327, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,488, 1668.1779, -1714.1947, 20.5305, 24.2905, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,445, 1646.1866, -1709.1534, 20.3465, 269.8665, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,445, 1646.2244, -1705.6493, 20.3519, 271.5544, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,426, 1646.2777, -1702.4156, 20.2413, 269.6584, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1959.5035, 584.8771, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1953.4304, 584.8774, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1950.3208, 584.8360, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1947.2937, 584.8109, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1941.2451, 584.8881, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1938.3971, 584.8671, 35.0797, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,585, -1932.2831, 585.4850, 34.6767, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,585, -1929.3038, 585.4374, 34.6767, 180.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,488, -1904.0132, 437.0794, 35.7320, 358.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2674.3630, 1167.9310, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2669.0906, 1167.9784, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2664.0469, 1168.0015, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2659.0396, 1168.0638, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2653.9482, 1168.0232, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2643.9392, 1167.9216, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,488, 2645.1099, 1210.6233, 27.2443, 19.5005, 17,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2544.0093, 586.9008, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2543.9749, 592.9135, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2543.9980, 598.9249, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2543.9631, 604.8779, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,416, -2544.0520, 610.7438, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.4500, 627.6297, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.5378, 632.8685, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.7861, 647.4091, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICSF,1,426, -2572.7981, 658.3743, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1593.6510, 1840.2689, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1597.9547, 1840.3273, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1602.2014, 1840.3251, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1606.3016, 1840.2615, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1610.6777, 1840.2601, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,426, 1620.2689, 1850.2357, 10.4923, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,426, 1616.0072, 1850.2614, 10.4923, 180.0000, 7,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_BANK,1,428, 1407.0927, -1804.5696, 13.5566, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,428, 1407.0927, -1801.4896, 13.5566, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,428, 1407.0927, -1798.4095, 13.5566, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,533, 1407.4656, -1783.6151, 13.2766, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,533, 1407.4656, -1786.7612, 13.2766, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,580, 1407.1735, -1792.4543, 13.2166, 90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,487, 1535.4736,-1788.3174,33.6588,180.8290, 36,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1124.1484, -1328.4871, 13.6256, 360.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1110.8409, -1328.4871, 13.6256, 360.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1097.7611, -1328.4871, 13.6256, 360.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1136.3181, -1344.0048, 13.8266, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,416, 1136.3181, -1338.6698, 13.8266, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLS,1,426, 1178.1130,-1339.1445,13.6469,270.4954, 3,1,RES_CAR_TIME);

	RMCars[0] = CreateTeamVehicle(TEAM_RM,1,579, 984.4582, 1747.0344, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	RMCars[1] = CreateTeamVehicle(TEAM_RM,1,579, 984.4969, 1742.9897, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	RMCars[2] = CreateTeamVehicle(TEAM_RM,1,579, 984.4497, 1738.9713, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	RMCars[3] = CreateTeamVehicle(TEAM_RM,1,409, 950.2493, 1743.6547, 8.2832, 179.4013, 0,0,RES_CAR_TIME);
	RMCars[4] = CreateTeamVehicle(TEAM_RM,1,580, 984.4694, 1719.4099, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	RMCars[5] = CreateTeamVehicle(TEAM_RM,1,580, 984.3997, 1723.1316, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	RMCars[6] = CreateTeamVehicle(TEAM_RM,1,580, 984.5228, 1727.1056, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	RMCars[7] = CreateTeamVehicle(TEAM_RM,1,468, 947.9976, 1724.3361, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	RMCars[8] = CreateTeamVehicle(TEAM_RM,1,468, 948.0338, 1725.7334, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	RMCars[9] = CreateTeamVehicle(TEAM_RM,1,468, 947.8561, 1722.8571, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	RMCars[10] = CreateTeamVehicle(TEAM_RM,1,421, 971.9404, 1769.3865, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	RMCars[11] = CreateTeamVehicle(TEAM_RM,1,421, 971.8877, 1778.1040, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	RMCars[12] = CreateTeamVehicle(TEAM_RM,1,421, 971.9247, 1787.2513, 8.5141, 180.0000, 0,0,RES_CAR_TIME);

	YakuzaCars[0] = CreateTeamVehicle(TEAM_YAKUZA,1,409, -2446.0315,133.0861,34.7638,272.9593, 0,0,RES_CAR_TIME);
	YakuzaCars[1] = CreateTeamVehicle(TEAM_YAKUZA,1,405, -2442.7847,141.9793,34.8783,269.9984, 0,0,RES_CAR_TIME);
	YakuzaCars[2] = CreateTeamVehicle(TEAM_YAKUZA,1,405, -2434.5728,141.2890,34.8992,269.8872, 0,0,RES_CAR_TIME);
	YakuzaCars[3] = CreateTeamVehicle(TEAM_YAKUZA,1,405, -2452.3250,149.9029,34.9176,0.0004, 0,0,RES_CAR_TIME);
	YakuzaCars[4] = CreateTeamVehicle(TEAM_YAKUZA,1,505, -2462.1074,154.1508,35.0971,0.0017, 0,0,RES_CAR_TIME);
	YakuzaCars[5] = CreateTeamVehicle(TEAM_YAKUZA,1,505, -2461.9407,164.1662,35.1050,0.1147, 0,0,RES_CAR_TIME);
	YakuzaCars[6] = CreateTeamVehicle(TEAM_YAKUZA,1,550, -2452.7681,167.5494,34.8352,359.5991, 0,0,RES_CAR_TIME);
	YakuzaCars[7] = CreateTeamVehicle(TEAM_YAKUZA,1,550, -2452.8779,158.3322,34.8348,359.5431, 0,0,RES_CAR_TIME);
	YakuzaCars[8] = CreateTeamVehicle(TEAM_YAKUZA,1,530, -2465.9961,174.6347,34.8529,229.8133, 0,0,RES_CAR_TIME);

	LCNCars[0] = CreateTeamVehicle(TEAM_LCN,1,409, 1472.1443, 2778.5149, 10.2784, 0.7317, 72,0,RES_CAR_TIME);
	LCNCars[1] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2818.3545, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	LCNCars[2] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2822.7544, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	LCNCars[3] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2827.2556, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	LCNCars[4] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2831.7986, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	LCNCars[5] = CreateTeamVehicle(TEAM_LCN,1,445, 1495.9521, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	LCNCars[6] = CreateTeamVehicle(TEAM_LCN,1,445, 1500.3752, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	LCNCars[7] = CreateTeamVehicle(TEAM_LCN,1,445, 1504.7489, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	LCNCars[8] = CreateTeamVehicle(TEAM_LCN,1,445, 1509.1300, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	LCNCars[9] = CreateTeamVehicle(TEAM_LCN,1,445, 1513.6281, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	LCNCars[10] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2830.3674, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	LCNCars[11] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2834.5801, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	LCNCars[12] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2838.8606, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	LCNCars[13] = CreateTeamVehicle(TEAM_LCN,1,468, 1459.1582, 2761.9631, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	LCNCars[14] = CreateTeamVehicle(TEAM_LCN,1,468, 1459.3872, 2760.5962, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	LCNCars[15] = CreateTeamVehicle(TEAM_LCN,1,468, 1459.5973, 2759.4551, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
    LCNCars[16] = CreateTeamVehicle(TEAM_LCN,1,545, 1491.3921, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
    LCNCars[17] = CreateTeamVehicle(TEAM_LCN,1,545, 1486.9521, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
    LCNCars[18] = CreateTeamVehicle(TEAM_LCN,1,545, 1482.4321, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);

    CreateTeamVehicle(TEAM_LICENSERS,1,426, -2064.3135, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2068.5571, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2072.8169, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2068.5403, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2072.6775, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2076.7915, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2080.7405, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2084.6289, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2088.6370, -127.1712, 36.0,0.0, 3,3,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2091.8801, -116.5041, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2088.5317, -116.5175, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2084.4055, -116.4782, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2080.4607, -116.4310, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2076.8699, -116.4680, 35.1,180.0, 3,3,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2076.9592, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2081.2605, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LICENSERS,1,586, -2085.4004, -84.3098, 35.1,180.0, 3,3,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LICENSERS,1,512, 387.7626, 2539.7524, 17.5, 180.0000, 8,1,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LICENSERS,1,512, 372.6773, 2539.7314, 17.5, 180.0000, 8,1,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LICENSERS,1,512, 357.7071, 2539.8103, 17.5, 180.0000, 8,1,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LICENSERS,1,512, 342.7742, 2540.0371, 17.5, 180.0000, 8,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_MERIALS,1,409, 1493.5521, -1232.6840, 14.2253, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1488.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1492.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,421, 1496.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,421, 1500.0406, -1241.9492, 14.5053, 0.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,487, 1496.0646,-1319.2361,23.8105,271.1159, 36,0,RES_CAR_TIME);

    CreateTeamVehicle(TEAM_ARMY,1, 470, 2779.0759, -2463.3748, 13.3413, 0.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470, 2787.8296, -2463.3748, 13.4013, 0.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470, 2795.2532, -2463.3748, 13.3413, 0.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470, 2779.4382, -2448.4253, 13.3413, 180.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470, 2787.9714, -2448.4253, 13.3413, 180.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 500, 2779.2996, -2501.5625, 13.4800, 0.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 500, 2788.1150, -2501.4795, 13.4800, 0.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 500, 2779.2424, -2487.2236, 13.4800, 180.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 500, 2787.9414, -2487.4436, 13.4800, 180.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 500, 2782.7405, -2385.8730, 13.4846, 180.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 500, 2786.9634, -2385.8938, 13.4846, 180.000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 431, 2781.6443, -2508.8384, 13.6213, 90.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMY,1, 430, 2773.2017, -2586.2375, 1.5086, 181.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 430, 2766.3704, -2586.1531, 1.5086, 181.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 430, 2759.5679, -2586.1812, 1.5086, 181.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 430, 2752.3958, -2586.2485, 1.5086, 181.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMY,1, 568, 2766.5215, -2380.0383, 13.2892, 180.000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMY,1, 487, 2738.7603, -2532.1113, 30.0991, 270.000, 44, 1, RES_CAR_TIME);

    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 193.3046, 1920.6039, 17.3633, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 202.4676, 1920.6276, 17.3633, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 211.5237, 1920.5947, 17.3633, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 220.3487, 1920.5957, 17.3633, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 325.7481, 1907.8159, 17.3533, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500, 327.8415, 1891.3217, 17.5553, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 330.5184, 1907.8237, 17.3533, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 335.8974, 1907.7181, 17.3533, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500, 332.4980, 1890.9884, 17.5553, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500, 336.6355, 1890.6882, 17.5553, 360.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 431, 333.2228, 1873.4254, 17.6633, 90.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 431, 333.2157, 1867.7251, 17.6633, 88.7890, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 326.9826, 1991.7665, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 327.0089, 1987.2225, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 327.0025, 1982.8601, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470, 327.0410, 1978.4329, 18.0673, 90.0372, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 568, 270.1578, 1864.1943, 17.4931, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 568, 274.5790, 1864.2783, 17.4931, 180.0000, 44, 1, RES_CAR_TIME);

	CreateTeamVehicle(TEAM_ARMYSF,1, 430, -1443.9133, 492.8510, 0.3511, 88.6191 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 430, -1443.8811, 497.5771, 0.3511, 88.6191 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 430, -1439.1451, 505.3068, 0.3511, 88.6191 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 430, -1439.0535, 509.9458, 0.3511, 88.6191 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 470, -1275.2776, 451.8010, 7.0000, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 470, -1278.7659, 451.7856, 7.0000, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 470, -1282.1783, 451.7706, 7.0000, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 470, -1246.0464, 449.7414, 7.0000, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 470, -1242.1191, 449.9071, 7.0000, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 500, -1238.8083, 449.7130, 7.1600, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 500, -1235.8488, 449.7003, 7.1600, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 500, -1232.7705, 449.8040, 7.1600, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 431, -1328.6001, 445.7708, 7.2284, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 431, -1332.8990, 445.7443, 7.2284, 360.0000 , 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1, 568, -1307.3472, 479.7873, 6.8884, 180.0000 , 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYSF,1, 568, -1304.1819, 479.7729, 6.8884, 180.0000 , 44, 1, RES_CAR_TIME);

	CreateTeamVehicle(TEAM_SFPD,1,597, -1572.4406, 726.4545, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,597, -1572.4470, 730.6609, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,597, -1572.3829, 738.8925, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,597, -1572.3927, 743.1780, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,597, -1572.3944, 722.4703, -5.5320, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1600.0791, 695.4734, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1608.4055, 695.5201, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1612.2900, 695.5635, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,523, -1616.7273, 695.5120, -5.7520, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,599, -1621.0616, 694.3557, -5.1920, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,599, -1628.7274, 694.2426, -5.1920, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,599, -1632.6772, 694.2825, -5.1920, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.1775, 682.1177, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.4412, 678.0385, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.4945, 673.9135, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,525, -1640.5835, 669.6574, -5.3920, 270.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,601, -1584.3610, 750.1661, -5.5720, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,601, -1588.7886, 750.3608, -5.5720, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,1,497, -1679.8936, 705.5067, 30.7259, 47.0480, 1,15,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_FBI,1,415, -2439.8962,501.1184,29.6982,212.9155, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,415, -2444.0156,510.2275,29.6827,190.2442, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,415, -2429.8555,515.0704,29.6838,213.7434, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2425.9792,518.5383,30.0720,221.8816, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2422.3567,521.5685,30.0282,224.3069, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2419.1121,524.8293,30.0198,228.8295, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,490, -2416.6768,528.4944,30.0656,238.0834, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,560, -2415.0549,531.9811,29.6054,247.5954, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,560, -2413.6753,535.8023,29.5869,257.3448, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,560, -2413.4897,539.7662,29.6041,268.3483, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,1,497, -2479.0791,522.6041,51.2348,90.5490, 0,0,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_PDLV,1,525, 2256.0334, 2444.7419, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,525, 2260.3821, 2444.7588, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,598, 2251.8115, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,598, 2260.4568, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,598, 2269.1169, 2460.4917, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,598, 2273.6724, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,598, 2277.9561, 2460.4656, 10.6057, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,601, 2269.1628, 2445.0547, 10.4757, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,601, 2273.4543, 2445.2400, 10.4757, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,523, 2251.5850, 2475.3740, 10.2757, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,523, 2256.1052, 2475.3740, 10.2757, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,523, 2269.0781, 2475.3740, 10.2635, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,523, 2273.1946, 2475.3740, 10.2635, 180.2271, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,1,497, 2342.6707, 2472.6902, 39.0477, 176.9832, 7,1,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LSPD,1,596, 1574.3335, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,596, 1578.5250, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,596, 1583.3390, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,596, 1587.3566, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,596, 1591.5785, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,596, 1595.4098, -1711.3812, 6.0469, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1672.7449, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1675.3800, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1676.9354, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1679.3687, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,523, 1546.8660, -1680.9663, 5.4869, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,599, 1528.5093, -1687.8639, 6.4869, -90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,599, 1528.5093, -1683.7883, 6.4869, -90.5400, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,497, 1552.8477, -1610.5408, 14.0469, 90.0000, 0,1,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LSPD,1,525,1526.6047,-1643.5181,5.6177,179.7686, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,525,1530.5017,-1643.5320,5.6177,181.1458, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,427,1534.7737,-1643.4572,5.6181,180.4515, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,1,427,1538.6315,-1643.4637,5.6177,181.2151, 1,16,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_LVPD,1,596,614.4224,-596.8713,16.9544,270.9448, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,596,613.7486,-601.6826,16.9514,270.0360, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,596,615.7883,-591.2003,16.9545,269.4611, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,596,616.6922,-584.9808,16.9492,269.8435, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,599,621.4668,-605.8457,17.3525,270.5647, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,599,621.4632,-610.5536,17.3580,270.5844, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523,636.0141,-611.2366,15.9026,358.7955, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523,633.9724,-611.4705,15.9080,0.4383, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,523,631.4586,-611.6922,15.9061,359.6254, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LVPD,1,599,637.3110,-542.4899,17.3446,179.4867, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LVPD,1,599,637.2239,-559.2595,17.3484,179.3916, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LVPD,1,523,638.1916,-611.2606,15.8589,3.0959, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LVPD,1,497,  614.5333, -549.9294, 23.1049, 215.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LVPD,1,525, 669.0193, -620.7942, 16.1555, 360.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_LVPD,1,525, 665.1553, -620.8279, 16.1555, 360.0000, 1,16,RES_CAR_TIME);

	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2188.4895, -2348.0159, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 482, -2190.0908, -2321.6782, 30.6460, 51.1400, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 413, -2192.9907, -2325.3586, 30.5650, 51.1400, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2187.4729, -2346.7527, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2186.4050, -2345.5525, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2208.3918, -2322.3496, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2212.6418, -2318.9141, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, -2210.6152, -2320.5139, 30.0650, 200.0000, 0, 3,RES_CAR_TIME);

	GroveCar[0] = CreateTeamVehicle(TEAM_GROOVE,1, 600, 2485.0903, -1680.8488, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
	GroveCar[1] = CreateTeamVehicle(TEAM_GROOVE,1, 600, 2488.3083, -1680.7385, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
	GroveCar[2] = CreateTeamVehicle(TEAM_GROOVE,1, 492, 2506.0962, -1676.6655, 13.2813, -35.0400, 86, 86,RES_CAR_TIME);
	GroveCar[3] = CreateTeamVehicle(TEAM_GROOVE,1, 492, 2508.0857, -1666.6547, 13.2813, 11.1000, 86, 86,RES_CAR_TIME);
	GroveCar[4] = CreateTeamVehicle(TEAM_GROOVE,1, 492, 2501.6204, -1657.3187, 13.2813, 54.4800, 86, 86,RES_CAR_TIME);
	GroveCar[5] = CreateTeamVehicle(TEAM_GROOVE,1, 478, 2498.6013, -1684.0957, 13.2813, 13.5600, 86, 86,RES_CAR_TIME);
	GroveCar[6] = CreateTeamVehicle(TEAM_GROOVE,1, 482, 2505.4092, -1694.1656, 14.2813, 0.0000, 86, 86,RES_CAR_TIME);

	VagosCar[0] = CreateTeamVehicle(TEAM_VAGOS,1, 467, 2771.5327, -1623.8390, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	VagosCar[1] = CreateTeamVehicle(TEAM_VAGOS,1, 467, 2776.0544, -1623.9009, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	VagosCar[2] = CreateTeamVehicle(TEAM_VAGOS,1, 467, 2780.4949, -1623.8438, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	VagosCar[3] = CreateTeamVehicle(TEAM_VAGOS,1, 474, 2779.6228, -1603.3281, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
	VagosCar[4] = CreateTeamVehicle(TEAM_VAGOS,1, 474, 2785.9009, -1603.1583, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
	VagosCar[5] = CreateTeamVehicle(TEAM_VAGOS,1, 478, 2769.9705, -1615.0035, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);
	VagosCar[6] = CreateTeamVehicle(TEAM_VAGOS,1, 482, 2769.9705, -1606.8324, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);

	BallasCar[0] = CreateTeamVehicle(TEAM_BALLAS,1, 566, 2011.8759,-1113.9398,25.9790,183.0003, 179, 179,RES_CAR_TIME);
	BallasCar[1] = CreateTeamVehicle(TEAM_BALLAS,1, 566, 2008.8434, -1129.2593, 25.0132, 90.0000, 179, 179,RES_CAR_TIME);
	BallasCar[2] = CreateTeamVehicle(TEAM_BALLAS,1, 566, 1985.5564, -1141.6482, 25.5184, 270.8255, 179, 179,RES_CAR_TIME);
	BallasCar[3] = CreateTeamVehicle(TEAM_BALLAS,1, 419, 1993.8208, -1141.5947, 25.3474, 270.0000, 179, 179,RES_CAR_TIME);
	BallasCar[4] = CreateTeamVehicle(TEAM_BALLAS,1, 419, 2001.6429, -1141.5061, 25.1574, 270.8112, 179, 179,RES_CAR_TIME);
	BallasCar[5] = CreateTeamVehicle(TEAM_BALLAS,1, 478, 1994.4465, -1095.7386, 24.9574, 344.2161, 179, 179,RES_CAR_TIME);
	BallasCar[6] = CreateTeamVehicle(TEAM_BALLAS,1, 478, 1998.7805, -1096.9128, 24.9574, 346.3077, 179, 179,RES_CAR_TIME);
	BallasCar[7] = CreateTeamVehicle(TEAM_BALLAS,1, 482, 2002.2770, -1097.8044, 24.9574, 345.6925, 179, 179,RES_CAR_TIME);

	CoronosCar[0] = CreateTeamVehicle(TEAM_CORONOS,1, 567, 2516.9424, -2005.0195, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CoronosCar[1] = CreateTeamVehicle(TEAM_CORONOS,1, 567, 2512.8218, -2004.6410, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CoronosCar[2] = CreateTeamVehicle(TEAM_CORONOS,1, 567, 2508.7004, -2004.2294, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CoronosCar[3] = CreateTeamVehicle(TEAM_CORONOS,1, 535, 2514.5210, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
	CoronosCar[4] = CreateTeamVehicle(TEAM_CORONOS,1, 535, 2506.8916, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
	CoronosCar[5] = CreateTeamVehicle(TEAM_CORONOS,1, 478, 2530.8352, -2007.6204, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);
	CoronosCar[6] = CreateTeamVehicle(TEAM_CORONOS,1, 482, 2530.8257, -2011.7937, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);

	RifaCar[0] = CreateTeamVehicle(TEAM_RIFA,1, 529, 2177.5630, -1808.2943, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	RifaCar[1] = CreateTeamVehicle(TEAM_RIFA,1, 529, 2173.5139, -1808.3468, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	RifaCar[2] = CreateTeamVehicle(TEAM_RIFA,1, 529, 2169.4451, -1808.4357, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	RifaCar[3] = CreateTeamVehicle(TEAM_RIFA,1, 439, 2172.6543, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
	RifaCar[4] = CreateTeamVehicle(TEAM_RIFA,1, 439, 2165.4509, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
	RifaCar[5] = CreateTeamVehicle(TEAM_RIFA,1, 478, 2190.1111, -1796.2930, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);
	RifaCar[6] = CreateTeamVehicle(TEAM_RIFA,1, 482, 2190.1111, -1804.5145, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);

	CarWolfs[0] = CreateTeamVehicle(TEAM_WOLFS,1, 475, 2461.7173, -1424.3177, 23.5287, 90.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[1] = CreateTeamVehicle(TEAM_WOLFS,1, 475, 2461.7173, -1413.2618, 23.5287, 90.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[2] = CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.4966, -1424.3262, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[3] = CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.6265, -1416.9812, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[4] = CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.7156, -1409.9048, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[5] = CreateTeamVehicle(TEAM_WOLFS,1, 518, 2518.3918, -1419.1108, 28.1375, 360.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[6] = CreateTeamVehicle(TEAM_WOLFS,1, 518, 2518.4070, -1411.1537, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[7] = CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6436, -1402.2551, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[8] = CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6597, -1400.8583, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[9] = CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6648, -1399.6414, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[10] = CreateTeamVehicle(TEAM_WOLFS,1, 478, 2458.3862, -1407.9395, 23.7760, 90.0000, 37, 0,RES_CAR_TIME);
    CarWolfs[11] = CreateTeamVehicle(TEAM_WOLFS,1, 478, 2458.3862, -1419.0396, 23.7760, 90.0000, 37, 0,RES_CAR_TIME);
    printf("LoadVehicles загрузился за %i ms", GetTickCount() - currenttime);
}
stock LoadOther()
{
	new currenttime = GetTickCount();
    CreateDynamicPickup(1318, 23,649.3248,-1353.8834,13.5470,-1);
   	Create3DTextLabel("Лифт {A2EB53}мерии{FFFFFF}\nНажмите: {A2EB53}ALT", 0xFFFFFFFF, 1489.7209,-1259.7783,113.8044, 7.0, 3, 0);
    Create3DTextLabel("Лифт {A2EB53}мерии{FFFFFF}\nНажмите: {A2EB53}ALT", 0xFFFFFFFF, 1509.3090,1088.1893,1033.8420, 7.0, 2, 2);
    Create3DTextLabel("Лифт {A2EB53}мерии{FFFFFF}\nНажмите: {A2EB53}ALT", 0xFFFFFFFF, 1999.9298,1121.5593,1038.6824, 7.0, 2, 2);
    CreateDynamicPickup(1318, 23,-575.709, 2594.2, 1705.09,-1);
	BuildsInfo[0][blBuildText] = CreateDynamic3DTextLabel("{23BA8F}Концертный зал{FFFFFF}\nВход: ALT\nЗдание: {EBA22D}Не арендовано", -1, 649.3248,-1353.8834,13.5470, 15.0);
	CreateDynamic3DTextLabel("Выход: ALT", -1, -575.709, 2594.2, 1705.09, 15.0);
	CreateDynamicMapIcon(649.3248,-1353.8834,13.5470, 12, 0, -1, -1, -1, 300.0);
	SetString(BuildsInfo[0][blArenderID],"The State");
	CreateDynamic3DTextLabel("Топ Благотворителей", -1, -2682.5276,796.4670,1501.0259, 5.0);
    CreateDynamic3DTextLabel("Шлагбаум.\nСтоимость проезда: {9ACD32}100$\n{FFFFFF}Открыть: {9ACD32}H",-1,58.2267,-1536.8701,5.0642,5.0);
	CreateDynamic3DTextLabel("Шлагбаум.\nСтоимость проезда: {9ACD32}100$\n{FFFFFF}Открыть: {9ACD32}H",-1,60.3254,-1521.5333,5.0907,5.0);
    CreateDynamic3DTextLabel("Шлагбаум.\nСтоимость проезда: {9ACD32}100$\n{FFFFFF}Открыть: {9ACD32}H",-1,1792.4559,811.2030,10.9180,5.0);
    CreateDynamic3DTextLabel("Шлагбаум.\nСтоимость проезда: {9ACD32}100$\n{FFFFFF}Открыть: {9ACD32}H",-1,1808.1421,811.2032,10.9128,5.0);
    CreateDynamic3DTextLabel("Центральный рынок Los Santos\n/trade - Продать/обменять.",-1,1129.0319, -1469.6064, 15.7481, 20.00000);
	Create3DTextLabel("Открыть услуги мастеркой\n\n[ALT]", 0xFFFFFFFFAFAFAFFF, 1541.3546, 1644.3098, 11.4203, 3.0000, 295, 0);
	CreatePickup(1314, 23, 1541.3546, 1644.3098, 10.8203, -1);
	for(new i; i < MAX_PARKING; i++)
	{
	    CreateDynamic3DTextLabel("Подземный паркинг\nВойти: {F7E352}ALT{FFFFFF}\nЗаехать: {F7E352}H", -1, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z] + 1.4, 20.0);
		CreateDynamicPickup(19134, 1, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z], -1);
		Create3DTextLabel("Ворота\nВыход: {F7AA5A}ALT{FFFFFF}\nВыезд: {F7AA5A}H{FFFFFF}\n\nЛичные авто, которые припаркованы\n\
								 с помощью /park в этом месте, автоматически\nуклоняются от налога на транспорт!\n\n\
								 Любые автомобили, которые находятся на этой парковке,\n\
								 не исчезают при серверном или администрационном респавне.", -1, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z] + 2.0, 10.0, parking[i][pVWorld], 0);
		CreateDynamicPickup(19134, 1, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z], parking[i][pVWorld]);
		//Второй этаж паркинг
		Create3DTextLabel("Ворота\nВыход: {F7AA5A}ALT{FFFFFF}\nВыезд: {F7AA5A}H{FFFFFF}\n\nЛичные авто, которые припаркованы\n\
								 с помощью /park в этом месте, автоматически\nуклоняются от налога на транспорт!\n\n\
								 Любые автомобили, которые находятся на этой парковке,\n\
								 не исчезают при серверном или администрационном респавне.", -1, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z] + 2.0, 10.0, parking[i][pVWorld], 0);
		CreateDynamicPickup(19134, 1, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z], parking[i][pVWorld]);
	}
	CreateDynamic3DTextLabel("Мастерская по установке номеров\nСтоимость установки номера: {26A6D0}5000$ .\nЕсли вы получили разрешение на установку, тогда:\n{26A6D0}Посигнальте для продолжения.", -1, 217.2211, -228.2586, 1.7786, 3.0);
	CreateDynamic3DTextLabel("Чтобы разгрузить ящики:\n{FFFFFF}Посигнальте", COLOR_GREEN, 1830.3701, 416.7932, 20.1436, 5.0);
	//CreateDynamic3DTextLabel("Чтобы загрузить ящики с провизией:\n{FFFFFF}Посигнальте", COLOR_GREEN, -1733.3938, 187.7363, 3.5547, 5.0);
	CreateDynamic3DTextLabel("Больница LS\n\n{FFFFFF}Встаньте на пикап чтобы войти/выйти", COLOR_ORANGE, 1172.6415, -1323.3395, 15.4030, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel("Больница SF\n\n{FFFFFF}Встаньте на пикап чтобы войти/выйти", COLOR_ORANGE, 1607.4197, 1815.2408, 10.8203, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel("Больница LV\n\n{FFFFFF}Встаньте на пикап чтобы войти/выйти", COLOR_ORANGE, -2668.8684, 640.1640, 14.4531, 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	CreateDynamic3DTextLabel("Чтобы открыть {9ACD32}шлагбаум\n{FFFFFF}Посигнальте!",-1,1812.2621,-1886.2706,13.4141, 5.0);
	for(new i; i < sizeof(GaragesInteriors); i++) CreateDynamic3DTextLabel("Ворота\nВыезд: {FAAC58}H\n{FFFFFF}Выход: {FAAC58}ALT", -1, GaragesInteriors[i][e_GARAGE_INTERIOR_X], GaragesInteriors[i][e_GARAGE_INTERIOR_Y], GaragesInteriors[i][e_GARAGE_INTERIOR_Z]+2.0, 10.0);
	bolka[0] = CreatePickup(19132, 1, 1172.6415, -1323.3395, 15.4030, 0);
	bolka[1] = CreatePickup(19132, 1, 1607.4197, 1815.2408, 10.8203, 0);
	bolka[2] = CreatePickup(19132, 1, -2668.8684, 640.1640, 14.4531, 0);

	CreatePickup(19131, 23, 1777.3013,-1890.8912,13.3873, 0);
	CreateDynamic3DTextLabel("{FFFFFF}Нажмите л.Alt\n{AAFFAA}Для получения велосипеда и пакета документов!", COLOR_GREY, 1777.3013,-1890.8912,13.6873, 3.0);
	//demorgan
    demorgan[0] = CreatePickup(19132, 1, -809.5127, 2799.1362, 1501.9896, -1);
    CreateDynamic3DTextLabel("{FFFFFF}Встаньте на пикап чтобы войти/выйти", COLOR_GREY, -809.5127, 2799.1362, 1501.9896, 3.0);
	//

	CreatePickup(1559, 1,-2052.71, -106.53, 35.06, -1); //Автошкола
    CreateDynamic3DTextLabel("Улица\n{9EFA93}Посигнальте чтобы открыть ворота",-1,-2052.71, -106.53, 36.00,4.0);
    CreatePickup(1559, 1,-2052.90, -98.77, 34.90, -1); //Автошкола
    CreateDynamic3DTextLabel("Двор автошколы\n{9EFA93}Посигнальте чтобы открыть ворота",-1,-2052.90, -98.77, 36.00,4.0);

	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Ford Mustang {ffffff}]", 0xFFFFFFFFFFFFFFFF, -509.0140, 2606.0950, 53.4954, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Volvo XC90 {ffffff}]", 0xFFFFFFFFFFFFFFFF, -508.9871, 2611.0120, 53.4961, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Jaguar F-pace {ffffff}]", 0xFFFFFFFFFFFFFFFF, -508.7735, 2615.8220, 53.4965, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Kia Optima {ffffff}]", 0xFFFFFFFFFFFFFFFF, -508.6442, 2625.5542, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Mercedes Maybach S 650 {ffffff}]", 0xFFFFFFFFFFFFFFFF, -508.6533, 2630.4246, 53.0565, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Mercedes-Benz AMG GT {ffffff}]", 0xFFFFFFFFFFFFFFFF, -508.2568, 2635.2566, 53.1593, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Mercedes GT63s AMG {ffffff}]", 0xFFFFFFFFFFFFFFFF, -518.7996, 2627.7917, 53.1905, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Mercedes G63 AMG {ffffff}]", 0xFFFFFFFFFFFFFFFF, -519.2958, 2622.6946, 52.8678, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Audi RS6 {ffffff}]", 0xFFFFFFFFFFFFFFFF, -519.4901, 2617.6099, 53.2568, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}BMW X5 {ffffff}]", 0xFFFFFFFFFFFFFFFF, -519.2571, 2612.4426, 53.4970, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Chevrolet Corvette {ffffff}]", 0xFFFFFFFF, -519.4117, 2607.4075, 53.4962, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Auri R8 {ffffff}]", 0xFFFFFFFF, -527.8890, 2606.7390, 53.0178, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Porsche Cayenne {ffffff}]", 0xFFFFFFFF, -528.0361, 2611.9873, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Porsche 911 {ffffff}]", 0xFFFFFFFF, -527.8905, 2617.0945, 53.4954, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Lexus LX {ffffff}]", 0xFFFFFFFF, -527.7982, 2622.3313, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Chevrolet Cruze {ffffff}]", 0xFFFFFFFF, -527.6416, 2627.4417, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Lexus Sport-S {ffffff}]", 0xFFFFFFFF, -528.5093, 2579.0454, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Honda Civic Type-R {ffffff}]", 0xFFFFFFFF, -528.6756, 2573.9739, 53.4961, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Range Rover {ffffff}]", 0xFFFFFFFF, -528.8456, 2568.9373, 53.4952, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Volvo V60 {ffffff}]", 0xFFFFFFFF, -528.8167, 2563.8367, 53.4954, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Acura NSX {ffffff}]", 0xFFFFFFFF, -528.9564, 2558.6682, 53.4954, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Dodge Challenger {ffffff}]", 0xFFFFFFFF, -520.4387, 2561.6235, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Audi Q8 {ffffff}]", 0xFFFFFFFF, -520.2122, 2566.7837, 53.4954, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Lamborghini Urus {ffffff}]", 0xFFFFFFFF, -519.9877, 2571.9153, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Volkswagen Touareg {ffffff}]", 0xFFFFFFFF, -519.8986, 2577.0737, 53.4955, 6.0000, 0, 0);
	Create3DTextLabel("{ffffff}Место для автомобиля\n[ {FA5858}Mercedes S63 Coupe AMG {ffffff}]", 0xFFFFFFFF, -519.8388, 2582.2017, 53.4954, 6.0000, 0, 0);


	Create3DTextLabel("Автосалон {FA5858}Luxe-класса\n\n{ffffff}Информация\n{cccccc}[ нажмите ALT ]", 0xFFFFFFFF, -505.0940, 2597.6277, 53.5557, 5.0000, 0, 0);
	CreatePickup(1239, 23, -505.0940, 2597.6277, 53.5557, -1);


	CreatePickup(19132, 1, 286.17, -30.55, 1001.52, -1); //tir
	CreatePickup(19132, 1, 286.08, -29.09, 1001.52, -1); //tir
	CreatePickup(19422, 1, 286.1845, -24.4473, 1001.5156, -1); //tir
	CreateDynamic3DTextLabel("Наушники, необходимо надеть перед стрельбой!\n{4DB33D}Нажмите: {FFFFFF}ALT", COLOR_GREY, 286.1845, -24.4473, 1001.5156, 3.0);
	CreateDynamic3DTextLabel("Выход из Тира\n{D0C857}Нажмите: ALT", -1, 286.08, -29.09, 1001.52, 3.0);
	CreateDynamic3DTextLabel("ТИР\nСтоимость входа без пропуска в тир: {4DB33D}500${FFFFFF}\n[{D0C857}Оружие можно купить внутри!{FFFFFF}]\n{4DB33D}Нажмите: {FFFFFF}ALT", -1, 286.17, -30.55, 1001.52, 3.0);
	CreatePickup(1581, 1, -955.6700, -2353.1899, 1701.0869, -1);
	CreateDynamic3DTextLabel("Получение номеров\nНажмите: ALT.\nСтоимость: {DA5D40}от 10 000$.", -1, -955.6700, -2353.1899, 1701.0869, 3.0);

	CreateDynamic3DTextLabel("Отдел коммерции\n{FFFFFF}ALT",COLOR_GREEN,363.6908,153.9987,1025.7964,3.0);
	CreateDynamic3DTextLabel("Отдел недвижимости\n{FFFFFF}ALT",COLOR_GREEN,354.0459,170.0928,1025.7964,3.0);

    CreatePickup(1248, 23, -569.7514,2567.4849,1702.5029,-1);
    CreateDynamic3DTextLabel("Управление мероприятием\n{FFFFFF}ALT",COLOR_GREEN,-569.7514,2567.4849,1702.5029,3.0);
	CreatePickup(1274, 23, -398.3770,2229.9397,1801.0859,-1);
	CreateDynamic3DTextLabel("Магазин аксессуаров\n{FFFFFF}ALT",COLOR_GREEN,-398.3770,2229.9397,1801.0859,3.0);
	CreateDynamic3DTextLabel("Автомат с бесплатной едой\n{FFFFFF}ALT",COLOR_GREEN,-1349.3528,493.8062,11.1953,3.0);

	GetPizza[0] = CreatePickup(1318, 1,670.8947,-1575.9595,14.2514,-1);
	GetPizza[1] = CreatePickup(1318, 1,1752.4005,2214.5081,10.8203,-1);
	CreatePickup(1279, 1,-1691.2605,867.8833,1005.0170,-1);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,1764.0288,-1949.8785,14.1096,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,1735.7333,-1949.3246,14.1172,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,1706.7789,-1949.6328,14.1172,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,2860.3655,1319.2699,11.4040,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,2860.4666,1287.9838,11.4040,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,2860.2236,1256.3748,11.4040,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,-1951.4111,107.9894,26.2813,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,-1950.6516,134.5126,26.2813,20.0);
    CreateDynamic3DTextLabel("Железнодорожная платформа\n{FFFFFF}Чтобы сесть в поезд нажмите 'G'",COLOR_RED,-1949.6737,165.9387,26.2813,20.0);

	CreateDynamic3DTextLabel("{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,1041.3918,-1028.2256,32.1016,8.0);
	CreateDynamic3DTextLabel("{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,2645.0007,-2037.3738,13.5540,8.0);
	CreateDynamic3DTextLabel("{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,-1935.7690,235.5206,34.3125,8.0);
	CreateDynamic3DTextLabel("{D64444}Автомастерская{BC7272}\n\nЕсли транспорт не тюнингуется, отправляйтесь в другой салон.\nИспользуйте GPS чтобы найти его.",COLOR_RED,-2714.4827,217.3856,4.2921,8.0);

	healthpd[0] = CreatePickup(1240, 1,-948.6804,-2351.4839,1701.0869, -1);
	healthpd[1] = CreatePickup(1240, 1,-2521.3796,-641.3273,1327.9659, -1);
	healthpd[2] = CreatePickup(1240, 1,2352.32, 83.59, 1501.99, -1);
	healthpd[3] = CreatePickup(1240, 1,-2589.78, -1393.19, 1500.76, -1);
	healthpd[5] = CreatePickup(1240, 1,-2056.1763,2709.4063,1500.9766, -1);
	healthpd[6] = CreatePickup(1240, 1,-172.5682,1314.9355,1500.9888, -1);
	healthpd[7] = CreatePickup(1240, 1,-2665.65796,818.17340,1500.71143, -1);

	//for(new i; i < sizeof(PodarokInfo);i ++) PodarokInfo[i][porCreat] = CreateDynamicPickup(19056,1,PodarokInfo[i][porPos][0], PodarokInfo[i][porPos][1], PodarokInfo[i][porPos][2],-1);

	CreateDynamic3DTextLabel("ДЕМОРГАН: - Тюрьма для читеров и нарушителей рп процесса.\nДля того чтобы с нее выйти , дождитесь окончания времени.\nПри следующих нарушениях, вас могут забанить.\n{E66E6E}В вашем паспорте, добавлено новое примечание.", COLOR_GREY, -803.2662, 2833.1062, 1501.9896, 25.0);
	CreateDynamic3DTextLabel("Джереми\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}Квестовый персонаж",COLOR_VALIK,1773.6903,-1891.7493,13.5504,15.0);
	CreateDynamic3DTextLabel("Федерико\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}Квестовый персонаж",COLOR_VALIK,2211.0706,-1142.9728,25.8084,15.0);
	CreateDynamic3DTextLabel("Получение паспорта\n{FFFFFF}Нажмите ALT",COLOR_VALIK,1537.1251, 1112.4895, 1033.8420, 5.0);

	CreatePickup(2358,23,154.3891,1903.3417,18.7570, -1);
    CreatePickup(2358,23,141.1707,1875.4081,17.8434, -1);
    CreatePickup(2358,23,115.3891,1875.2244,17.8359, -1);
    CreatePickup(2358,23,117.9125,1871.2745,17.8359, -1);
    CreatePickup(2358,23,141.1704,1875.4607,17.8434, -1);
    CreatePickup(2358,23,137.3782,1879.5315,17.8359, -1);
    CreatePickup(2358,23,202.5459,1861.9189,13.1406, -1);
    CreatePickup(2358,23,193.3672,1931.5112,17.6406, -1);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,154.3891,1903.3417,18.7570,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,141.1707,1875.4081,17.8434,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,115.3891,1875.2244,17.8359,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,117.9125,1871.2745,17.8359,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,137.3782,1879.5315,17.8359,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,202.5459,1861.9189,13.1406,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,193.3672,1931.5112,17.6406,3.0);
    CreateDynamic3DTextLabel("Бесплатная лицензия",COLOR_GREY,-2034.2344,-114.1020,1035.1719,4.0);


 	CreatePickup(2358,23,2798.11, -2393.91, 13.96, -1);
    CreatePickup(2358,23,2743.82, -2453.84, 13.86, -1);
    CreatePickup(2358,23,2782.68, -2372.74, 13.63, -1);
    CreatePickup(2358,23,-1325.6866,476.3579,7.8498, -1);
    CreatePickup(2358,23,-1294.9114,491.5177,11.1953, -1);
    CreatePickup(2358,23,-1291.1442,501.8154,11.1953, -1);
    CreatePickup(2358,23,-1397.9807,502.8033,11.3047, -1);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,-1325.6866,476.3579,7.8498,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,-1294.9114,491.5177,11.1953,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,-1291.1442,501.8154,11.1953,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,-1397.9807,502.8033,11.3047,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,2798.11, -2393.91, 13.96,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,2743.82, -2453.84, 13.86,3.0);
    CreateDynamic3DTextLabel("Склад ингредиентов\n[ALT]",COLOR_GREY,2782.68, -2372.74, 13.63,3.0);

	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-166.9772,1347.3783,1500.9888,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-208.6039,1323.4382,1500.9888,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-208.6047,1327.2102,1500.9888,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-210.7849,1329.7562,1500.9888,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-212.6879,1334.1384,1500.9888,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-208.9196,1334.1351,1500.9888,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-187.4157,1305.7438,1507.6416,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-194.7263,1305.7531,1507.6416,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-180.6385,1299.5883,1507.6770,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-183.1053,1299.8328,1507.6770,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-186.0829,1297.2595,1507.6692,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-190.7337,1296.8057,1507.6692,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-193.2607,1298.5358,1507.6692,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-194.5027,1296.8018,1507.6692,2.0);
	CreateDynamic3DTextLabel("Компьютер для редакции объявлений\n{73B461}[ALT]",-1,-197.0397,1298.5365,1507.6692,2.0);
	CreateDynamic3DTextLabel("INFO",-1,-38.9923,173.5192,2.4297,7.0);
	CreateDynamic3DTextLabel("INFO",-1,-83.2843,-302.1633,2.7646,7.0);
	CreateDynamic3DTextLabel("INFO",-1,1969.3076,-1981.4128,13.5469,7.0);
	CreateDynamic3DTextLabel("INFO",-1,1460.8505,-1743.3596,13.5469,7.0);
	CreatePickup(1277,1,494.7682,1318.9098,774.4839,-1);
	CreateDynamic3DTextLabel("Получение банковской карты\n{B03131}Необходимо иметь 1 000$",-1,494.7682,1318.9098,774.4839,4.0);
	CreatePickup(1277,1,951.6823,2451.9871,1601.9871,-1);
	CreateDynamic3DTextLabel("Получение банковской карты\n{B03131}Необходимо иметь 1 500$",-1,951.6823,2451.9871,1601.9871,4.0);
	CreateDynamic3DTextLabel("Стол для игры в кости\n{B03131}/dice",-1,2238.0413,1443.3271,1008.8525,3.0);
	for(new i; i < sizeof(bandos); i++) CreateDynamic3DTextLabel("Однорукий бандит\n{FFFFFF}Чтобы начать игру,\nиспользуйте: ALT",COLOR_ORANGE,bandos[i][0],bandos[i][1],bandos[i][2],1.0);
    CreatePickup(1239, 23,1288.3657,-1267.7411,20.6199, -1);
    CreatePickup(1239, 1,-2657.75, 808.67, 1500.97, -1);
    CreateDynamic3DTextLabel("Должники",-1,-2657.75, 808.67, 1500.97,7.0);

	CreateDynamic3DTextLabel("Начать сдачу на права\n{F9AD43}ALT",-1,-2575.90, -1364.63, 1500.76,4.0);
	CreateDynamic3DTextLabel("Начать сдачу на права\n{F9AD43}ALT",-1,-2573.83, -1361.87, 1500.76,4.0);
	CreateDynamic3DTextLabel("Начать сдачу на права\n{F9AD43}ALT",-1,-2575.87, -1358.94, 1500.76,4.0);
	CreateDynamic3DTextLabel("Начать сдачу на права\n{F9AD43}ALT",-1,-2579.94, -1358.94, 1500.76,4.0);

    CreateDynamic3DTextLabel("Благотворительный фонд\n[ALT]",COLOR_GOLD,1288.3657,-1267.7411,20.6199,4.0);
	CreateDynamic3DTextLabel("Пройти собеседование\n[ALT]",COLOR_GOLD,-2033.4341,-117.5292,1035.1719,4.0);
	CreateDynamic3DTextLabel("Сломанный телевизор.\nЕсли бы он работал вы могли б прочитать основную теорию для пилота.",COLOR_GREY,-2026.7957,-114.3428,1035.1719,4.0);
	CreatePickup(1314, 23,-2033.4341,-117.5292,1035.1719, -1);
 	CreateDynamic3DTextLabel("{FF0000}Сломанная дверь",COLOR_BLUENEW,610.8489,-1220.5266,1001.3849,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,2719.6982,-2405.0554,13.4609,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,2719.8486,-2504.0205,13.4937,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,286.3304,1821.4232,17.6406,10.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,135.0717,1941.9005,19.3203,10.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H\nВне машины",COLOR_BLUENEW,-1631.3796,687.7377,7.1875,15.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,454.9670,872.7173,1500.9648,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,465.7021,871.5269,1500.9648,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,465.6787,857.2242,1500.9648,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,474.4485,859.8665,1500.9648,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2582.5913,-1384.5138,1500.7570,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-1786.3673,-1998.2512,1500.7853,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-1772.5034,-1995.5537,1500.7853,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-1758.3375,-1998.2037,1500.7853,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2067.2576,2693.9587,1501.0243,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2062.6360,2693.8945,1500.9766,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2067.2607,2705.4763,1500.9766,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2062.6340,2705.4880,1500.9766,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2690.0815,807.0168,1500.9688,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2325.9783,78.6801,1501.9962,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2325.9753,81.0722,1501.9962,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2364.5027,96.0364,1502.0103,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1588.5164,-1637.7506,13.4311,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2330.9561,67.0544,1501.9962,5.0);
	CreateDynamic3DTextLabel("Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1354.1853, -0.5061, 1601.0859, 5.0);
	CreateDynamic3DTextLabel("Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1354.1929, 24.6202, 1601.0859, 5.0);
	CreateDynamic3DTextLabel("Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1320.5623, 22.9350, 1601.0859, 5.0);
	CreateDynamic3DTextLabel("Открыть\n\n{FFFFFF}H", COLOR_ORANGE, -1320.5485, 1.3281, 1601.0859, 5.0);

	CreatePickup(1314, 1, -2512.0083,-649.9902,1331.6420,-1);
	CreateDynamic3DTextLabel("Press Alt",COLOR_BLUENEW,-2512.0083,-649.9902,1331.6420,2.0);

	f(str_2,sizeof(str_2),"{FFFFFF}\t\tПолучение кредитa\nКредитная ставка {9ACD32}%i{FFFFFF} процента(ов).\nПолучить кредит или начать работу с {9ACD32}депозитом{FFFFFF},\n(Получить/Снять деньги) можно через сотрудника банка!\n\n\tФонд премии инкасаторам: {9ACD32}0${FFFFFF}\nВыделеная премия на одного работника: {9ACD32}0${FFFFFF}\n\n\t\t\t{FFFF00}КУРС ЕВРО: {FFFFFF}%i$",GLS[0],GLS[68]);
	cretits = CreateDynamic3DTextLabel(str_2,-1,-2679.9082,807.1680,1502.3593,7.0);

	EnterSklad[0] = CreatePickup(1318,1,2729.3306,-2451.4917,17.5937,-1);
    EnterSklad[1] = CreatePickup(1318,1,455.93, 864.44, 1500.96,-1);
    EnterSklad[2] = CreatePickup(1318,1,251.3932,1838.8508,17.6562,-1);
    EnterSklad[3] = CreatePickup(1318,1,594.3306,1455.2648,1900.7979,-1);
    EnterSklad[4] = CreatePickup(1318,1,-1373.0448,499.0130,11.1953,-1);
    EnterSklad[5] = CreatePickup(1318,1,-1613.2837,-126.1334,1501.0859,-1);

    CreatePickup(1240,1,2363.9543,-1958.5900,1601.0859,-1);
    CreateDynamic3DTextLabel("Церковь\nДля того чтобы пожениться вам нужен сотрудник мэрии\nНеобходимо приобрести кольца /gps - Важные места - Покупка колец\nДля развода введите [/unwedding (4 000$!)]",COLOR_GOLD,2363.9543,-1958.5900,1601.0859,10.0);
    CreatePickup(1274,23,1979.9426,-1971.1410,13.5825, -1);
    nalogoffise[0] = CreatePickup(19132,23,1530.7826,-1074.1027,25.0625,-1);
    CreateDynamic3DTextLabel("Генеральный офис\nНалоговой службы",COLOR_BLUENEW,1530.7826,-1074.1027,25.0625,10.0);
    nalogoffise[1] = CreatePickup(19132,23,1494.4149,1304.1705,1093.2891,1);

    CreatePickup(1275,23,195.1261,-228.0334,1.7749, -1);
    CreateDynamic3DTextLabel("Раздевалка\nALT",COLOR_BLUENEW,195.1261,-228.0334,1.7749,8.0);
    CreatePickup(1275,23,2126.2717,896.7686,10.9149, -1);
    CreateDynamic3DTextLabel("Раздевалка\nALT",COLOR_BLUENEW,2126.2717,896.7686,10.9149,8.0);
	CreatePickup(1275,23,2271.7771,1438.6256,1008.8250,-1);
    CreateDynamic3DTextLabel("Раздевалка\n{FFFFFF}ALT",COLOR_ORANGE,2271.7771,1438.6256,1008.8250,8.0);
    EventLeave = CreatePickup(1318, 1, -2263.2837,192.0340,35.1641, 1);

    CreatePickup(1550,23,2271.7996,1440.5249,1008.8320,-1);
    CreateDynamic3DTextLabel("Зарплата\n{FFFFFF}ALT",COLOR_ORANGE,2271.7996,1440.5249,1008.8320,8.0);

	CreatePickup(1274,23,2250.7593,1466.8921,1008.8050,-1);
    CreateDynamic3DTextLabel("Обменник.\nПокупка игровых фишек (для игры в костях и автоматах)\n\nНажмите: {FFFFFF}ALT",COLOR_VALIK,2250.7593,1466.8921,1008.8050,8.0);

    CreateDynamic3DTextLabel("Выбор работы",COLOR_BLUENEW,208.4846,-225.6056,1.7749,8.0);
    CreatePickup(1239,23,208.4846,-225.6056,1.7749,-1);

    CreateDynamic3DTextLabel("Выбор работы",COLOR_BLUENEW,2111.5618,894.6057,10.9149,8.0);
    CreatePickup(1239,23,2111.5618,894.6057,10.9149,-1);

	CreatePickup(1275,23,770.8220,-77.3209,1000.6563,-1);
	CreatePickup(1275,23,681.4680,-1652.4188,871.2896,-1);
	CreateDynamic3DTextLabel("Раздевалка\nALT",COLOR_BLUENEW,770.8220,-77.3209,1000.6563,8.0);
	CreateDynamic3DTextLabel("Раздевалка\nALT",COLOR_BLUENEW,681.4680,-1652.4188,871.2896,8.0);

	portpick[0] = CreatePickup(1559,1,2042.6489,-1958.4153,14.3989,-1);
    portpick[1] = CreatePickup(1559,1,2033.5723,-1958.2524,14.3989,-1);
    portpick[2] = CreatePickup(1559,1,2051.4802,-1958.2751,14.3989,-1);
    portpick[3] = CreatePickup(1559,1,2024.5681,-1958.1749,14.3989,-1);
    portpick[4] = CreatePickup(1559,1,2015.6310,-1958.1852,14.3989,-1);

	CreateDynamic3DTextLabel("Нажмите N",COLOR_BLUENEW,2042.6489,-1958.4153,14.3989,2.0);
	CreateDynamic3DTextLabel("Нажмите N",COLOR_BLUENEW,2033.5723,-1958.2524,14.3989,2.0);

	CreatePickup(1239,23,-2576.86, -1356.78, 1500.76,-1);
    CreateDynamic3DTextLabel("ПДД\n{73B461}Нажмите ALT чтобы прочитать.",-1,-2576.86, -1356.78, 1500.76,5.0);
	shopeat[0] = CreatePickup(2663,2,1771.0034,-1902.5177,13.5557,-1);
	shopeat[1] = CreatePickup(2663,2,2405.9805,-1933.0472,13.5538,-1);
	shopeat[2] = CreatePickup(2663,2,-103.7395,-310.0467,1.4297,-1);
	shopeat[3] = CreatePickup(2663,2,1502.1321,-1279.6311,14.5651,-1);
	shopeat[4] = CreatePickup(2663,2,1433.6545,-1738.7367,13.5469,-1);
	shopeat[5] = CreatePickup(2663,2,1184.5985,-1315.1580,13.5720,-1);
	shopeat[6] = CreatePickup(2663,2,1748.5256,-1922.6953,2001.0000,-1);
	shopeat[7] = CreatePickup(2663,2,195.4181,-115.9060,1.5500,-1);
	shopeat[8] = CreatePickup(2663,2,214.4591,-247.0783,1.9079,-1);
	shopeat[9] = CreatePickup(2663,2,-2022.6366,460.3604,35.1723,-1);
	shopeat[10] = CreatePickup(2663,2,1105.0247,1379.9026,10.8203,-1);
	shopeat[11] = CreatePickup(2663,2,1574.4995,1844.3917,10.8203,-1);
	shopeat[12] = CreatePickup(2663,2,2030.1499,987.5954,10.8203,-1);
	shopeat[13] = CreatePickup(2663,2,2327.8806,2420.2002,10.8203,-1);
	shopeat[14] = CreatePickup(2663,2,2351.5396,2406.6335,10.8203,-1);
	shopeat[15] = CreatePickup(2663,2,2536.7700,2137.0681,10.8203,-1);
	shopeat[16] = CreatePickup(2663,2,2600.4695,1060.3147,10.8125,-1);
	shopeat[17] = CreatePickup(2663,2,2244.9023,570.9419,7.7802,-1);
	shopeat[18] = CreatePickup(2663,2,157.5782,-1812.6079,3.7416,-1);
	shopeat[19] = CreatePickup(2663,2,2221.0222,-1149.9821,25.7730,-1);
	shopeat[20] = CreatePickup(2663,2,1382.1482,-1804.9459,13.5469,-1);
	shopeat[21] = CreatePickup(2663,2,-87.3811,100.6966,3.1172,-1);
	shopeat[22] = CreatePickup(2663,2,-1290.5806,2366.1538,865.3589,-1);
	shopeat[23] = CreatePickup(2663,2,-2399.1362,336.8928,35.1719,-1);
	shopeat[24] = CreatePickup(2663,2,-2681.2913,584.9332,14.4531,-1);
	shopeat[26] = CreatePickup(2663,2,-1984.5005,127.6157,27.6875,-1);
	shopeat[27] = CreatePickup(2663,2,-1982.6625,174.4855,27.6799,-1);
	shopeat[28] = CreatePickup(2663,2,-1549.8600,673.9366,7.1875,-1);
	shopeat[29] = CreatePickup(2663,2,-1825.6996,-567.4372,16.4844,-1);
	shopeat[30] = CreatePickup(2663,2,1135.8530,-1456.5402,15.7969,-1);
	shopeat[31] = CreatePickup(2663,2,1143.7935,-1472.9805,15.7969,-1);
	shopeat[32] = CreatePickup(2663,2,1123.9476,-1467.5033,15.7572,-1);

	RingCP = CreateDynamicCP(2520.0012,918.5114,11.0234, 1.0, -1, -1, -1,  5.0);
	CreateDynamic3DTextLabel("Покупка обручальных\nКолец",COLOR_GOLD,2520.0012,918.5114,11.0234,5.0);

	HealSG[0] = CreatePickup(1241, 23, -1773.9685, -2012.7522, 1500.7853, -1);
	CreateDynamic3DTextLabel("Подать объявление\n{73B461}Используйте: /ad", -1, -190.1970,1338.4086,1500.9823, 3.0);
	CreateDynamic3DTextLabel("Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT", -1, -1773.9685,-2012.7522,1501.3956, 3.0);
	HealSG[1] = CreatePickup(1318, 23, -1768.1641, -1992.0632, 1500.7856, -1);
	HealSG[2] = CreatePickup(1318, 23, 1147.9972,-1343.0070,13.6483, -1);
	HealSG[3] = CreatePickup(1241, 23, 1169.6074,-1333.3698,-0.8618, -1);
	HealSG[4] = CreatePickup(1239, 23, 1490.3748,1305.7142,1093.2964, 2);
	HealSG[5] = CreatePickup(1274, 23,1492.7451,1308.4236,1093.2927, 1);
	HealSG[6] = CreatePickup(1318, 23,-618.6426,-679.4822,1001.0859, -1);
	HealSG[7] = CreatePickup(1318, 23,279.5766,-1619.0736,114.6778, -1);
	HealSG[8] = CreatePickup(1274, 23,-190.1970,1338.4086,1500.9823, -1);
	HealSG[9] = CreatePickup(1318, 23,2847.9468,-2519.4592,11.9786, -1);
	HealSG[10] = CreatePickup(1318, 23,2842.3452,-2523.9382,17.7489, -1);
	HealSG[11] = CreatePickup(1241, 23,462.35, 874.83, 1500.96, -1);
	HealSG[12] = CreatePickup(1318,23,1583.3033,-1637.5920,13.3905,-1);
	HealSG[13] = CreatePickup(1318,23,1583.3656,-1638.4817,13.3333,-1);
	HealSG[14] = CreatePickup(1318,23,216.7613,-247.8414,1.9079,-1);
	HealSG[15] = CreatePickup(1318,23,1289.0641,-1271.5160,13.5400,-1);
	HealSG[16] = CreatePickup(1318,23,1285.9365,-1270.2250,13.5939,-1);
	HealSG[17] = CreatePickup(1318,23,1287.2783,-1261.7417,20.6199,-1);
	HealSG[18] = CreatePickup(1239,23,-38.9923,173.5192,2.4297,-1);
	HealSG[19] = CreatePickup(1239,23,-83.2843,-302.1633,2.7646,-1);
	HealSG[20] = CreatePickup(1239,23,1969.3076,-1981.4128,13.5469,-1);
	HealSG[21] = CreatePickup(1239,23,1460.8505,-1743.3596,13.5469,-1);
	HealSG[22] = CreatePickup(1318,23,1165.4773,1346.2273,10.9219,-1);
	HealSG[23] = CreatePickup(1318,23,1165.4714,1344.7832,10.8125,-1);
	HealSG[24] = CreatePickup(1241, 23, 550.3827,1472.2921,1900.7980, -1);
	HealSG[25] = CreatePickup(1318,23,592.9380,1428.2743,1900.7980,-1);
	HealSG[26] = CreatePickup(1318,23,592.8829,1426.6675,1900.7980,-1);
	HealSG[27] = CreatePickup(1239, 1,2570.1045,-1281.3558,1044.1250, 11);
	HealSG[28] = CreatePickup(1239, 1,2570.1045,-1281.3558,1044.1250, 12);
	HealSG[29] = CreatePickup(1318,23,483.0550,246.8815,3197.7139,-1);
	HealSG[30] = CreatePickup(1318,23,474.5011,216.2406,3194.6360,-1);
	HealSG[31] = CreatePickup(1318,23,481.3205,216.2760,3194.6360,-1);
	HealSG[32] = CreatePickup(1318,23,461.6805,223.6825,3197.7139,-1);
	HealSG[33] = CreatePickup(1318,23,1593.2783,1724.0553,10.8203,-1);
	HealSG[34] = CreatePickup(2228,23,-77.9217,90.3327,3.1172,-1);
	CreateDynamic3DTextLabel("Трудоустройство\nна работу\n{FF6347}Фермера!", -1, -77.9217,90.3327,3.1172+0.5, 3.0);
	HealSG[35] = CreatePickup(1274,23,-80.5815,82.6753,3.1096,-1);
	HealSG[36] = CreatePickup(954,23,-2034.3145,-114.1021,1035.1719,-1);
	HealSG[37] = CreatePickup(1318, 23 , 1547.6816,-1623.1069,13.3725,-1);
	HealSG[38] = CreatePickup(1318, 23 , 1547.7014,-1622.3954,13.5366,-1);
	HealSG[39] = CreatePickup(1318, 23 , 618.9825,-568.0446,26.1432,-1);
	HealSG[40] = CreatePickup(1239, 23 , 2365.59, 72.03, 1502.01,11);
	HealSG[41] = CreatePickup(1239, 1,-2066.45044, 2663.85303, 1498.62634,-1);
	//painball HealSG[42] = CreatePickup(1318, 1, 1310.0968,-1367.2446,13.5254,-1);
	HealSG[43] = CreatePickup(1239, 1, 1313.7603,-1383.4368,13.7675,-1);
	HealSG[44] = CreatePickup(1318, 1, -2514.1074,-634.8470,1327.9960,-1);
	HealSG[45] = CreatePickup(1318, 1, -2467.6902,529.4441,51.0896,-1);
	HealSG[46] = CreatePickup(1318, 23, -2594.7959,642.3338,14.4531, -1);
	HealSG[47] = CreatePickup(1239, 1,2570.1045,-1281.3558,1044.1250, 13);
	HealSG[48] = CreatePickup(1241, 23, -1609.7928,-110.7104,1501.0859, -1);
	HealSG[49] = CreatePickup(1247, 1, 2361.3875,91.0118,1502.0103, -1);
	HealSG[50] = CreatePickup(1239, 23,-954.5001,-2350.5596,1701.0869, -1);
	HealSG[51] = CreatePickup(1239, 23,2327.74, 70.09, 1502.00, -1);
	HealSG[52] = CreatePickup(1239, 23,-2502.4258,-650.1299,1331.6520, -1);
	HealSG[53] = CreatePickup(1239, 23,583.2088,1433.3907,1904.2689, -1);
	HealSG[54] = CreatePickup(1239, 23,485.16, 849.70, 1500.96, -1);
	HealSG[55] = CreatePickup(1239, 23,-1587.6157,-121.8007,1501.0859, -1);
	HealSG[56] = CreatePickup(1239, 23,363.6908,153.9987,1025.7964, -1);
	HealSG[57] = CreatePickup(1239, 23,354.0459,170.0928,1025.7964, -1);
	HealSG[58] = CreatePickup(1318, 23,2761.0051, -2565.0754, 13.6281, -1);
	HealSG[59] = CreatePickup(1318, 23,2760.6651, -2566.2554, 13.6281, -1);
	HealSG[60] = CreatePickup(1318, 23,2755.5088, -2515.5393, 13.6281, -1);
	HealSG[61] = CreatePickup(1318, 23,2726.0520, -2521.9421, 29.8281, -1);
	HealSG[62] = CreatePickup(1239, 1, 1773.2142, -1888.9938, 13.5513, -1);
	CreateDynamic3DTextLabel("Курс обучения\n{FFFFFF}ALT",COLOR_GREEN,1773.2142, -1888.9938, 13.5513,3.0);
	CreateDynamic3DTextLabel("Курс обучения\n{FFFFFF}ALT",COLOR_GREEN,2210.1968,-1149.0828,25.7458, 3.0);
	HealSG[63] = CreatePickup(1241, 23, -1324.4010, 9.3590, 1601.0859, -1);
	CreateDynamic3DTextLabel("Начать {99CC00}бесплатное {FFFFFF}лечение.\nНажмите: ALT!", -1, -1324.4010, 9.3590, 1601.0859 + 0.7, 3.0);
	HealSG[64] = CreatePickup(19133, 23, -1769.3776, -2019.0920, 1500.7853, -1);
	CreateDynamic3DTextLabel("Подняться на 2 этаж\n{73B461}Используйте: {FFFFFF}ALT", -1, -1769.3776, -2019.0920, 1500.7853 + 1.0, 3.0);
	HealSG[65] = CreatePickup(19133, 23, -1312.6182, 20.8936, 1597.6073, -1);
	CreateDynamic3DTextLabel("Спуститься на 1 этаж\n{73B461}Используйте: {FFFFFF}ALT", -1, -1312.6182, 20.8936, 1597.6073 + 1.0, 3.0);
	CreateDynamic3DTextLabel("Лестница на {99CC00}1 {FFFFFF}этаж.", -1, -1317.3761, 12.1050, 1601.0859 + 2.2, 3.0);
	HealSG[66] = CreatePickup(1239, 23, -2083.3413, 2675.4199, 1500.9647, -1);
	HealSG[67] = CreatePickup(1239, 1, -1771.6855, -2012.7522, 1500.7853, -1);
	CreateDynamic3DTextLabel("Информация для {99CC00}посетителей {FFFFFF}больницы.\nНажмите: ALT", -1, -1771.6565,-2012.5947,1501.3956, 3.0);
	HealSG[68] = CreatePickup(1310, 1, 1451.6128, -2285.0105, 13.5469, -1);
	CreateDynamic3DTextLabel("Прыжки с парашютом\n{FFFFFF}ALT", COLOR_GREY, 1451.6128, -2285.0105, 13.5469, 5.0);
	HealSG[69] = CreatePickup(1310, 1, 1673.0103, 1447.5935, 10.7867, -1);
	CreateDynamic3DTextLabel("Прыжки с парашютом\n{FFFFFF}ALT", COLOR_GREY, 1673.0103, 1447.5935, 10.7867, 5.0);
	HealSG[70] = CreatePickup(1310, 1, -1409.4084, -298.2005, 14.1484, -1);
	CreateDynamic3DTextLabel("Прыжки с парашютом\n{FFFFFF}ALT", COLOR_GREY, -1409.4084, -298.2005, 14.1484, 5.0);
	HealSG[71] = CreatePickup(1254, 1, 3.0257, 32.9454, 1199.5938, -1);
	HealSG[72] = CreatePickup(1318, 1, 2154.7354, 1493.4109, 10.8203, -1);
	CreateDynamic3DTextLabel("Студия: '"NAME" SHOW'\n{FFFFFF}ALT", COLOR_GREY, 2154.7354, 1493.4109, 10.8203, 5.0);
	HealSG[73] = CreatePickup(1318, 1, 2351.2886, 720.3787, 1500.9688, -1);
	HealSG[74] = CreatePickup(1242, 1, 295.20001220703, -38.299999237061, 1001.5, -1);
	CreateDynamic3DTextLabel("Амуниция\nИспользуйте: ALT", -1, 295.20001220703, -38.299999237061, 1001.5, 10.0);
	HealSG[75] = CreatePickup(19133, 1, -1415.0663, 2081.2036, 1502.0225, -1);
	HealSG[76] = CreatePickup(19133, 1, -1426.0897, 2091.5784, 1508.2068, -1);
	HealSG[77] = CreatePickup(1272, 1, 544.7178, -587.9365, 23.0899, -1);
	HealSG[78] = CreatePickup(1318, 1, -2661.8655,785.9218,1500.9688, -1);
	HealSG[79] = CreatePickup(1318, 1, 1518.4906,-1777.8580,33.4269, -1);
	HealSG[80] = CreatePickup(19132, 1, -212.8785,1310.3716,1507.6592,-1);
	HealSG[81] = CreatePickup(19132, 1, -203.7812,1314.2445,1500.9788,-1);
	HealSG[82] = CreatePickup(1247, 1, -955.6700,-2358.0708,1701.0859, -1);
	HealSG[83] = CreatePickup(1239, 1, 1773.2142, -1888.9938, 13.5513, -1);
	HealSG[84] = CreatePickup(325, 1, 2350.7820,-1961.5228,1601.0859, 0);
	CreateDynamic3DTextLabel("Покупка {99CC00}цветов\n{FFFFFF}Стоимость: {99CC00}1200$", -1, 2350.7820,-1961.5228,1601.0859, 10.0);
	HealSG[85] = CreatePickup(1239, 1, -2682.5276,796.4670,1501.0259, -1);
	//Пикапы без GameTextForPlayer
	HealSG[86] = CreatePickup(1314, 1, 1542.0613,1112.3258,1033.8420, -1);
	CreateDynamic3DTextLabel("Создать семью\n\n[ALT]", COLOR_GREY, 1542.0613,1112.3258,1033.8420, 5.0);
	HealSG[87] = CreatePickup(1274, 1, 665.9590, -567.7969, 1700.7394,-1);
	CreateDynamic3DTextLabel("Касса\n{FFFFFF}N", COLOR_VALIK, 665.9590, -567.7969, 1700.7394, 10.0);
	HealSG[88] = CreatePickup(19133, 1, 1079.0709, 937.4053, 1604.8663, -1);
	CreateDynamic3DTextLabel("Войти в дом\n{FFFFFF}ALT", COLOR_GREY, 1079.0709, 937.4053, 1604.8663, 5.0);
	CreateDynamic3DTextLabel("Чтобы воспользоваться верстаком\n{FFFFFF}Нажмите ALT", COLOR_VALIK, 1089.8771, 950.7534, 1601.9364, 10.0);
	HealSG[89] = CreatePickup(1239, 1, -2053.2688,2697.6201,1500.9766, -1);
	CreateDynamic3DTextLabel("Управление экономикой.\n{FFFFFF}ALT", COLOR_GREEN, -2053.2688,2697.6201,1500.9766, 5.0);
	HealSG[90] = CreatePickup(1318, 1, -2064.8579,2709.9797,1500.9766, -1);
	CreateDynamic3DTextLabel("Черный выход\n{FFFFFF}ALT", COLOR_GREY, -2064.8579,2709.9797,1500.9766+1.0, 5.0);
	HealSG[91] = CreatePickup(1318, 1, 1473.2888,-1262.4442,14.5625, -1);
	HealSG[92] = CreatePickup(19132, 1, -1662.1874, -246.4930, 14.1484, -1);
	CreateDynamic3DTextLabel("Черный вход\n{FFFFFF}ALT", COLOR_GREY, 1473.2888,-1262.4442,14.5625+1.0, 5.0);
	amybank = CreatePickup(1239, 2, -2687.7393,818.1758,1500.9707, -1);
    CreateDynamic3DTextLabel("Центральный рынок\n{9CCF00}Парковать {FFFFFF}авто на улице, запрещено!\nВо избежания нежелательных штрафов, используйте\nПодземный паркинг!", -1, 1113.5651, -1412.7012, 13.5743 + 1.2, 10.0);
    CreatePickup(1239, 1, 1113.5651, -1412.7012, 13.5743, -1);
	CreatePickup(1239, 23, -505.0940, 2597.6277, 53.5557, -1);
	//-505.0940, 2597.6277, 53.5557
	Create3DTextLabel("Купить видеокарту\n\n{cccccc}Нажмите ALT", 0xFFFFFFFFFFFF00FF, 1384.2760, -21.8199, 1000.9229, 10.0000, 0, 0);
	CreatePickup(1239, 23, 1384.2760, -21.8199, 1000.9229, -1);
	CreateDynamic3DTextLabel("[ Обзор всех видеокарт ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1649.3934, -246.4758, 14.1484, 5.0);

	CreateDynamic3DTextLabel("[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1650.4478, -244.2418, 14.1484, 2.0);
	CreateDynamic3DTextLabel("[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1652.4283, -244.2435, 14.1484, 2.0);
	CreateDynamic3DTextLabel("Чтобы улучшить видеокарту,\nиспользуйте её у стола\nчерез инвентарь", 0xFFFFFFFFAFAFAFFF, -1653.0421, -249.0098, 14.1484, 5.0000);
	CreateDynamic3DTextLabel("[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1654.4594, -244.2415, 14.1484, 2.0);
	CreateDynamic3DTextLabel("[ Управление видеокартами ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1656.4078, -244.2418, 14.1484, 2.0);
	CreateDynamic3DTextLabel("[ Выход ]\nНажмите ALT", 0xFFFFFFFFAFAFAFFF, -1662.1874, -246.4930, 14.1484, 20.0);
	CreateDynamic3DTextLabel("[ Управление видеокартами ]\nНажмите ALT",0xFFFFFFFFAFAFAFFF,-1658.4623, -244.2459, 14.14845, 2.0);
	
	Bar_CP[0] = CreatePickup(1274,23,497.4280,-75.7883,998.7578,-1);
	CreateDynamic3DTextLabel("Бар",-1,497.4280,-75.7883,998.7578,20.0);
	Bar_CP[1] = CreatePickup(1274,23,499.7772,-20.6834,1000.6797,-1);
	CreateDynamic3DTextLabel("Бар",-1,499.7772,-20.6834,1000.6797,20.0);
	Bar_CP[2] = CreatePickup(1274,23,-2653.8188,1407.3539,906.2734,-1);
	CreateDynamic3DTextLabel("Бар",-1,-2653.8188,1407.3539,906.2734,20.0);
	Bar_CP[3] = CreatePickup(1274,23,784.6830, 2514.6926, 1501.9751,-1);
	CreateDynamic3DTextLabel(" Бар",-1,784.6830, 2514.6926, 1501.9751,7.0);
	Bar_CP[5] = CreatePickup(1274,23,461.3756,209.5736,3194.6460,-1);
	CreateDynamic3DTextLabel(" Бар",-1,461.3756,209.5736,3194.6460,7.0);
	Bar_CP[6] = CreatePickup(1274,23,2270.3950,1444.5238,1008.8250,-1);
	CreateDynamic3DTextLabel(" Бар",-1,2270.3950,1444.5238,1008.8250,7.0);

	CreateDynamic3DTextLabel("{F5DEB3}[{FFFFFF} Орёл и Решка {F5DEB3}]{FFFFFF}\n{AFAFAF}/orel [ид] [сумма]\n\t{FFFFFF}или\n{AFAFAF}/reshka [ид] [сумма]{FFFFFF}",-1,506.2321,-69.8461,999.6721,6.0);
	CreateDynamic3DTextLabel("{F5DEB3}[{FFFFFF} Орёл и Решка {F5DEB3}]{FFFFFF}\n{AFAFAF}/orel [ид] [сумма]\n\t{FFFFFF}или\n{AFAFAF}/reshka [ид] [сумма]{FFFFFF}",-1,-2654.4612,1427.0135,907.3604,6.0);
	CreateDynamic3DTextLabel("{F5DEB3}[{FFFFFF} Орёл и Решка {F5DEB3}]{FFFFFF}\n{AFAFAF}/orel [ид] [сумма]\n\t{FFFFFF}или\n{AFAFAF}/reshka [ид] [сумма]{FFFFFF}",-1,496.5649,-16.8896,1001.1519,6.0);

	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2683.9232, 807.4161, 1500.9094,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2676.5600, 807.4161, 1500.9094,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2669.0400, 807.4161, 1500.9094,5);
    CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2666.4729, 805.8691, 1500.9094,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2666.4665, 799.2879, 1500.9094,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,-2666.4139, 792.5835, 1500.9094,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,495.2409,1305.6490,774.4839,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,495.2459,1307.4744,774.4839,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,495.2454,1309.2797,774.4839,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,495.2461,1311.0074,774.4839,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,495.2460,1312.8225,774.4839,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,951.8005,2458.6746,1601.9771,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,954.9710,2463.5288,1601.9771,5);
	CreateDynamic3DTextLabel("{73B461}Касса\n{FFFFFF}N",COLOR_GREY,946.6893,2456.3723,1601.9771,5);

	Eatery_CP[0] = CreateDynamicCP(1082.0736, 992.7753, 1600.9989, 1.0, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel(" Закусочная \n\n{9ACD32}Встаньте на чекпоинт чтобы перекусить", -1, 1082.0736, 992.7753, 1600.9989, 20.0);
	Eatery_CP[1] = CreateDynamicCP(-1772.7180, -2005.6545, 1500.0656, 1.0, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel("Буфет", -1, -1772.6299, -2005.3392, 1500.9670, 20.0);
	Eatery_CP[3] = CreateDynamicCP(-2039.4631,2673.7061,1500.0656,1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel("Буфет", -1, -2039.4053,2673.7039,1500.9670,20.0);
	Eatery_CP[3] = CreateDynamicCP(-2581.7578, -1370.5360, 1499.9574, 1.0, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel("Автомат с едой", -1, -2581.7578, -1370.5360, 1501, 20.0);
	Eatery_CP[4] = CreateDynamicCP(-1322.6569, 20.1318, 1601.0859, 1.0, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel("Автомат с едой", -1, -1322.6569, 20.1318, 1601.0859, 20.0);
	CreateDynamic3DTextLabel("Автомат с едой",-1,1484.8135,-1771.4929,18.7929,20.0);
	Eatery_CP[5] = CreateDynamicCP(1484.8135,-1771.4929,18.7929,1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel("Автомат с едой",-1,1484.8135,-1771.4929,18.7929,20.0);
	Eatery_CP[6] = CreateDynamicCP(-171.1462,1334.3427,1500.0656,1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel("Автомат с едой",-1,-171.1462,1334.3427,1500.9788,20.0);


	Binko_CP = CreateDynamicCP(199.1063, -128.3574, 1003.5152, 1.0, -1, -1, -1, 10.0);

	HealExitPickup = CreatePickup(19132, 1, -1772.3956, -2019.0917, 1500.7856, -1);
	EnterBankPickup = CreatePickup(1318,23,1481.055,-1772.040,18.796,-1);
	CreateDynamic3DTextLabel("Банк Los Santos {33AA33}[Открыт]\n{FFFFFF}Встаньте на пикап чтобы войти в банк",-1,1481.055,-1772.040,18.796, 5.0);
	ExitBankPickup = CreatePickup(1318, 1, -2693.5984, 796.5676, 1500.9659,-1);

	CreateDynamic3DTextLabel("Встаньте на пикап чтобы выйти из банка", -1, -2168.3958,-928.2313,1701.0859, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1);

	CreateDynamic3DTextLabel(" Пункт выдачи пиццы ",0xD05050FF,670.8947,-1575.9595,14.2514,4.0);
	CreateDynamic3DTextLabel(" Пункт выдачи пиццы ",0xD05050FF,1752.4005,2214.5081,10.8203,4.0);

	CreateDynamic3DTextLabel(" Трудоустройство \n Работа: Развозчик Пиццы\n[ALT] ",-1,1746.6765,2246.2012,10.8203,4.0);
	CreateDynamic3DTextLabel(" Трудоустройство \n Работа: Развозчик Пиццы\n[ALT] ",-1,665.9875,-1576.6426,14.4777,4.0);

	CreateDynamic3DTextLabel(" Раздевалка \n Работа: Развозчик Пиццы\n[ALT] ",-1,1749.0339,2246.2012,10.8203,4.0);
	CreateDynamic3DTextLabel(" Раздевалка \n Работа: Развозчик Пиццы\n[ALT] ",-1,668.0192,-1576.7659,14.4074,4.0);

	CreatePickup(1274,23,665.9875,-1576.6426,14.4777,-1);
	CreatePickup(1274,23,1746.6765,2246.2012,10.8203,-1);

	CreatePickup(1275, 23, 668.0192,-1576.7659,14.4074, -1);
	CreatePickup(1275, 23, 1749.0339,2246.2012,10.8203, -1);
	CreateDynamic3DTextLabel(" Раздевалка \n\n{FFFFFF}Встаньте на пикап чтобы переодеться", COLOR_LIME, 2568.0,-1281.5,1044.12, 7.0);
	FactoryClothes = CreatePickup(1275, 23, 2568.0, -1281.5, 1044.12, -1);
	CreatePickup(2663, 1, 589.6020,1420.4148,1900.7980,-1);
	CreateDynamic3DTextLabel("Столовая\nALT",-1,589.6020,1420.4148,1900.7980,4.0);
	CreatePickup(2663, 1, 485.50, 867.03, 1500.96,-1);
	CreatePickup(2663, 1, -1349.3669,493.8840,11.1953,-1);
	Inc_CP[0] = CreatePickup(1275, 2, -2678.46851, 796.50763, 1501.0,-1);
	Inc_CP[1] = CreatePickup(1275, 2, 498.1447,1318.5439,774.4839,-1);
	Inc_CP[2] = CreatePickup(1275, 2, 948.5161,2447.8325,1601.9871,-1);
	Yakydzapick = CreatePickup(11722, 1 , -1417.99, 2085.67, 1502.04,-1);
	CreateDynamic3DTextLabel(" Раздевалка \n\n{FFFFFF}Работа инкассатора",COLOR_LIME,-2678.46851, 796.50763, 1501.0,7.0);
	CreateDynamic3DTextLabel(" Раздевалка \n\n{FFFFFF}Работа инкассатора",COLOR_LIME,498.1447,1318.5439,774.4839,3.0);
	CreateDynamic3DTextLabel(" Раздевалка \n\n{FFFFFF}Работа инкассатора",COLOR_LIME,948.5161,2447.8325,1601.9871,3.0);
	CreatePickup(1581, 23, 1537.1251, 1112.4895, 1033.8420,-1);
	Zek_CP = CreateDynamicCP(1550.7634,-1681.3251,13.5540, 1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel("Список заключенных",-1,1550.7634,-1681.3251,13.5540,5.0);
 	MatsDel_CP = CreateDynamicCP(-117.0112,-313.7268,2.7646, 1.0, -1, -1, -1, 25.0);

	f(str_2, 400, "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
	FactoryText[0] = CreateDynamic3DTextLabel(str_2, -1, -117.0112,-313.7268,2.7646, 10.0);
	f(str_2, 400, "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[27],GLS[31]);
	FactoryText[1] = CreateDynamic3DTextLabel(str_2, -1, -48.8906,26.7353,3.1172, 25.0);
	f(str_2, 400, "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[28],GLS[29]);
	FactoryText[2] = CreateDynamic3DTextLabel(str_2, -1, 1976.6340,-2029.4700,13.5469, 25.0);

	f(str_2, 400, "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
	NarkoText[0] = CreateDynamic3DTextLabel(str_2, -1,331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 5);

	f(str_2, 400, "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
	NarkoText[1] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 2, 5);

	f(str_2, 400, "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
	NarkoText[2] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 3, 5);

	f(str_2, 400, "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
	NarkoText[3] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 4, 5);

	f(str_2, 40, "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
	NarkoText[4] = CreateDynamic3DTextLabel(str_2, -1, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 5, 5);

	for(new i=1;i<6;i++) CreateDynamic3DTextLabel("Для подробного изучения системы:\n{FFFFFF}/help - Наркопритоны",COLOR_VALIK, 321.3961,1123.5383,1083.8828,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, i, 5);

	CreateDynamic3DTextLabel("Трудоустройство\n{FFFFFF}Нажмите: ALT",COLOR_VALIK, 1297.1311,-1263.8613,13.5939,5.0);
	CreatePickup(1581, 1,1297.1311,-1263.8613,13.5939,-1);
	static tstring[50];
	f(tstring, sizeof(tstring), " {AFAFAF}Спресованый транспорт\nПосигнальте для загрузки метaла!");
	CreateDynamic3DTextLabel(tstring, -1, 2224.5222, -2461.0154, 13.4466, 20.0);
	CreateDynamic3DTextLabel("Спресованый транспорт\nПосигнальте для загрузки метaла!", -1, 1124.2776,1962.4742,10.8203, 20.0);
	ScrapCP = CreateDynamicCP(-117.00000000,-326.89999390,1.10000002, 3.0, -1, -1, -1, 10000.0);

	CreateDynamic3DTextLabel(" Раздевалка \n[ALT] ",-1,1907.0087,153.0604,17.5156,10.0);
	CreatePickup(1275, 23, 1907.0087,153.0604,17.5156,-1);
	CreateDynamic3DTextLabel(" Раздевалка \n[ALT] ",-1,1980.1283,-1968.4868,13.5825,4.0);
	CreatePickup(1275, 23, 1980.1283,-1968.4868,13.5825,-1);
    CreateDynamic3DTextLabel(" Трудоустройство \n Работа: Грузчик\n[ALT] ",-1,1979.9426,-1971.1410,13.5825,4.0);
	MeriaGun = CreatePickup(334, 23,-2068.57202, 2701.80762, 1500.43555,-1);//Jekazzz
	prost = CreatePickup(1239, 1, 2356.92, 76.57, 1502.01, -1);
	CreateDynamic3DTextLabel("Сдача с повинной",-1,2361.3875,91.0118,1502.0103,5.0);
	CreateDynamic3DTextLabel("Сдача с повинной",-1, -955.6700,-2358.0708,1701.0859, 5.0);
	FerumEndCP = CreateDynamicCP(2565.5493,-1292.9424,1044.0,2.5);
	MinerDownCP = CreateDynamicCP(-49.0173,26.4144,3.1172, 2.0, -1, -1, -1, 180.0);
	PorterDownCP = CreateDynamicCP(2012.1073,-1989.7375,13.5469, 2.0, -1, -1, -1, 180.0);
	BankCP[0] = CreateDynamicCP(1482.7710,-1738.1262,13.5469, 3.0, -1, -1, -1, 10000.0);
	BankCP[1] = CreateDynamicCP(1481.1355,-1769.7352,18.7958, 1.0, -1, -1, -1, 10000.0);
	BankCP[2] = CreateDynamicCP(2419.6230,2342.5767,10.8203, 3.0, -1, -1, -1, 10000.0);
	BankCP[3] = CreateDynamicCP(2375.5564,2308.2996,8.1406, 1.0, -1, -1, -1, 10000.0);

	SvalkaCP[0] = CreateDynamicCP(2180.7395,-1990.5044,13.5469, 5.0);
	SvalkaCP[1] = CreateDynamicCP(111.0156,1073.1621,13.6094, 5.0);
	SvalkaCP[2] = CreateDynamicCP(-1867.2306,-1669.6919,21.7500, 5.0);

	CreateDynamic3DTextLabel("Свалка Las-Venturas", COLOR_GREY,111.0156,1073.1621,13.6094, 20.0);
	CreateDynamic3DTextLabel("Свалка Лос-Сантос", COLOR_GREY,2180.7395,-1990.5044,13.5469, 20.0);
	CreateDynamic3DTextLabel("Свалка San Fierro", COLOR_GREY,-1867.2306,-1669.6919,21.7500, 20.0);

	ZavodPutCP[0] = CreatePickup(1559, 1, 886.7524, 2132.6951, 1000.9016, 1);
	ZavodPutCP[1] = CreatePickup(1559, 1, 892.1548, 2132.6113, 1000.9016, 1);
	ZavodPutCP[2] = CreatePickup(1559, 1, 897.7520, 2132.6035, 1000.9016, 1);
	ZavodPutCP[3] = CreatePickup(1559, 1, 897.8268, 2112.9709, 1000.9016, 1);
	ZavodPutCP[4] = CreatePickup(1559, 1, 892.1816, 2113.1179, 1000.9084, 1);
	ZavodPutCP[5] = CreatePickup(1559, 1, 886.8200, 2113.1309, 1000.9016, 1);
	ZavodPutCP[6] = CreatePickup(1559, 1, 904.3490, 2115.0618, 1000.9016, 1);
	ZavodPutCP[7] = CreatePickup(1559, 1, 905.8527, 2113.6179, 1000.9016, 1);
	ZavodClotherCP[0] = CreatePickup(1275, 2, 909.7632, 2158.9688, 1000.9084, 1);
	ZavodClotherCP[1] = CreatePickup(1275, 2, 908.6809, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[2] = CreatePickup(1275, 2, 907.5459, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[3] = CreatePickup(1275, 2, 906.4932, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[4] = CreatePickup(1275, 2, 905.3242, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[5] = CreatePickup(1275, 2, 904.2687, 2158.9688, 1000.9016, 1);
	CreateDynamic3DTextLabel("Охранник\nНажмите: {FFFFFF}ALT",COLOR_VALIK,644.0786,-1365.4963,13.6142,10.0);
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=MAP ICONS-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	CreateDynamicMapIcon(2497.0403,-1670.8518,12.9654, 62, 0, -1, -1, -1, 300.0);//Grove street
	CreateDynamicMapIcon(2786.0085,-1616.5608,10.5467, 60, 0, -1, -1, -1, 300.0);//Los Santos Vagos
	CreateDynamicMapIcon(2181.1194,-1799.4424,12.9900, 58, 0, -1, -1, -1, 300.0);//Varrios Los Aztecas
	CreateDynamicMapIcon(2520.6709,-2010.6217,13.1715, 61, 0, -1, -1, -1, 300.0);//Rifa
	CreateDynamicMapIcon(2352.7537, -2333.7805, 14.6157, 51, 0, -1, -1, -1, 300.0);//Truck
	CreateDynamicMapIcon(1533.7008,-1014.1130,24.0538, 55, 0, -1, -1, -1, 300.0);//Аренда транспорта
	CreateDynamicMapIcon(1199.32, -918.586, 43.1194, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(810.979, -1616.12, 13.5466, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1567.9766,-1897.5547,13.5608, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1367.5504,248.2412,19.5669, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(928.2542,-1352.9023,13.3438, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(611.0340,-585.7634,17.2266, 30, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2103.7222,-1804.7616,13.5547, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1038.2175,-1340.7327,13.7420, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2045.0459,-1908.0321,13.5469, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2456.1079,503.9311,30.0781, 30, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1592.1372,715.8721,-5.2422, 30, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2447.9407,-1962.9333,13.5469, 37, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1177.9343,-1323.6394,14.0952, 22, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1530.7826,-1074.1027,25.0625, 25, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(875.805541, -1565.014892, 13.533462, 6, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(875.805541, -1565.014892, 13.533462, 6, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1495.4197,-1282.6329,14.5525, 19, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2309.7900,-1643.6821,14.8270, 49, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(385.8913,-1817.8950,7.8410, 49, 0, -1, -1, -1, 300.0);//
    CreateDynamicMapIcon(1119.98, -1492.96, 15.80, 56, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2240.7681,577.8632,35.1719, 37, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1879.1533,-860.3239,32.0234, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2143.0383,-930.0509,32.0234, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1545.2085,451.3773,7.0315, 46, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1814.4722,-1995.8588,13.5544, 23, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2286.6912,-2012.8440,13.5447, 23, 0, -1, -1, -1, 300.0);//
 	CreateDynamicMapIcon(2333.4478,-1922.6251,12.2991, 23, 0, -1, -1, -1, 300.0);//
 	CreateDynamicMapIcon(2175.9934,-1503.9364,23.9520, 23, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1967.2424,296.3922,35.2325, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2579.4302,310.0845,5.1797, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2455.7710,799.5222,35.1797, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1757.8055,964.1265,24.8906, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2487.1482,369.5434,35.1219, 16, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1941.4008,459.7771,35.1719, 12, 0, -1, -1, -1, 300.0);//
    CreateDynamicMapIcon(2473.1699,-1422.2638,28.8397, 39, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2335.8118,-166.6666,35.5547, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1816.6819,617.5771,35.1719, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1721.5256,1359.8145,7.1853, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2356.4548,1008.1873,50.8984, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2443.8538,755.4180,35.1719, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2767.5112,788.7203,52.7813, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2672.2603,258.4307,4.6328, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1808.6821,945.9444,24.8906, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2155.2847,-2460.1235,30.8516, 10, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1694.5833,951.9144,24.8906, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2718.4712,50.4521,4.3359, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2241.7515,123.0408,35.3203, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1309.8182,-1371.0112,13.5826, 18, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(667.8604, -1571.3179, 15.2623, 29, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1746.7703, 2227.1057, 11.2029, 29, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-88.7419,1378.2703,10.4698, 49, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(693.6755,1967.5216,5.5391, 49, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-36.0986,2349.6462,24.3026, 49, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2186.9092,1113.3481,12.6538, 48, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1951.4368,1342.9297,15.3746, 48, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2506.9543,2120.2803,10.8398, 48, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1966.1985,1623.1367,12.8626, 48, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2102.4863,2257.4006,11.0234, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2802.8872,2430.6565,11.0625, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(172.3484,1177.6282,14.7578, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2884.5476,2454.0398,11.0690, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2638.3013,1671.8616,11.0234, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2101.8923,2228.8093,11.0234, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1879.1917,2339.5007,10.9799, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1872.2565,2071.7385,11.0625, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-858.0142,1535.3987,22.5870, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1213.7981,1830.3331,41.9297, 14, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2200.9714,1393.5470,10.8203, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2049.5845,2486.0862,11.0781, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1731.8141,1888.1255,10.8203, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2240.7698,2047.4966,11.0625, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-35.9494,1172.1107,19.4280, 55	, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-69.1524,92.9972,3.1172, 11, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2478.1455,-1476.8624,23.7989, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(906.2801,-1221.0192,16.9766, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1614.1479,2320.8289,10.8203, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1976.6429,-2029.5635,13.5469, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1054.8196,2134.8713,10.8203, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1708.7831,1606.9760,9.8767, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(150.9107,-1812.6412,3.7416, 9, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(387.7626, 2539.7524, 16.9433, 36, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2427.6968,1662.9028,10.8203, 36, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2485.4040527344,2506.73046875,10.8203125, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2375.5674,2306.3022,8.1406, 52, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(253.2157,1838.9449,17.6568, 46, 0, -1, -1, -1, 600.0);//
	CreateDynamicMapIcon(2637.8018,1185.2871,10.8203, 12, 0, -1, -1, -1, 600.0);//
	CreateDynamicMapIcon(2287.0254,2432.3618,10.8203, 30, 0, -1, -1, -1, 600.0);//
	CreateDynamicMapIcon(2735.6653,-2448.3457,13.6432, 46, 0, -1, -1, -1, 600.0);//
	CreateDynamicMapIcon(2092.6499,2493.1968,14.8390, 54, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1168.6149,1364.8787,10.8125, 19, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1839.62, 138.98, 15.20, 19, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1607.4197,1815.2408,10.8203, 22, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2111.5618,894.6057,10.9149, 27, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(178.4099,1101.4073,16.4498, 11, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(276.6597,1396.0018,10.4786, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2823.4900,914.6848,10.6434, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2258.0461,2765.0706,10.7141, 16, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2201.7358,-2226.7476,13.4103, 16, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2861.2329,1279.8409,11.4040, 38, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1762.3525,-1898.5516,13.4879, 38, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2229.3896,-1159.9827,25.8025, 38, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1971.0687,140.6956,27.6873, 38, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(180.7734, -108.8047, 0.6484, 38, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(206.5538,-231.0065,1.7749, 27, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2225.6599,-1724.1580,13.5621, 54, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(321.3462,-29.1380,1.5781, 19, 0, -1, -1, -1, 300.0);//
  	CreateDynamicMapIcon(2180.7395,-1990.5044,13.5469, 11, 0, -1, -1, -1, 300.0);//
    CreateDynamicMapIcon(-1864.7662,-1668.6857,21.7500, 11, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1481.1355,-1769.7352,18.7958, 52, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1542.5132,-1675.6295,13.5546, 30, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(876.8422,-1567.4388,13.5391, 18, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2169.4517,-1675.1003,15.0859, 23, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2245.0801,-1662.6428,15.4690, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2040.3796,-114.5223,35.2579, 36, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2668.8684,640.1640,14.4531, 22, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2756.1284,375.9151,4.3338, 19, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-220.9060,-234.7779,1.4219, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2136.0205,-77.7463,35.3203, 40, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1289.0641,-1271.5160,13.5400, 19, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1988.3429,-1984.5186,13.6663, 11, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1830.3513,-1678.9181,13.2740, 48, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(457.6003,-1501.4500,31.0383, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(694.5242,-498.0038,16.3359, 45, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1654.3445,-1657.2205,22.5156, 12, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1041.3918,-1028.2256,32.1016, 27, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2645.0007,-2037.3738,13.5540, 27, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1935.7690,235.5206,34.3125, 27, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2714.4827,217.3856,4.2921, 27, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1802.6573, 407.1559, 20.2294, 12, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-256.7696, -1362.8536, 9.4421, 56, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(523.8312, 848.2282, -42.9189, 56, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2192.7070, 993.6327, 80.0000, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2154.3425,644.6054,52.3672, 37, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1449.6135, -2284.7063, 13.5469, 5, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1409.4084, -298.2005, 14.1484, 5, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1673.0103, 1447.5935, 10.7867, 5, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(1866.0593, -1394.1477, 13.4955, 55, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2154.7354, 1493.4109, 10.8203, 33, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2956.5833, -1971.8005, 3.5868, 9, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-91.2817, 1188.43, 19.7422, 49, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-71.1408, 1223.8297, 19.6863, 38, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2463.4805, 131.7678, 35.1719, 43, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(2491.4995,918.3869,11.0234, 21, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-2071.5891,-2445.5686,30.7183, 51, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-1703.9647,785.6906,25.7360, 52, 0, -1, -1, -1, 300.0);//
	CreateDynamicMapIcon(-515.6501,2597.1763,53.4141, 55, 0, -1, -1, -1, 300.0);// люкс автосалон

    for(new i; i != MAX_EGGS; i++) Eggs[i][eCreate] = -1;
    new Float:Y = 350.0;
    Box = CreateBox(194.0,Y-20,3*64.0 + 3*20,84,-1961026049);
    Digit1[0] = CreateSprite(214.0,Y,"LD_SLOT:cherry",64,64);
    Digit2[0] = CreateSprite(288.0,Y,"LD_SLOT:cherry",64,64);
    Digit3[0] = CreateSprite(362.0,Y,"LD_SLOT:cherry",64,64);
    Digit1[1] = CreateSprite(214.0,Y,"LD_SLOT:grapes",64,64);
    Digit2[1] = CreateSprite(288.0,Y,"LD_SLOT:grapes",64,64);
    Digit3[1] = CreateSprite(362.0,Y,"LD_SLOT:grapes",64,64);
    Digit1[2] = CreateSprite(214.0,Y,"LD_SLOT:r_69",64,64);
    Digit2[2] = CreateSprite(288.0,Y,"LD_SLOT:r_69",64,64);
    Digit3[2] = CreateSprite(362.0,Y,"LD_SLOT:r_69",64,64);
    Digit1[3] = CreateSprite(214.0,Y,"LD_SLOT:bell",64,64);
    Digit2[3] = CreateSprite(288.0,Y,"LD_SLOT:bell",64,64);
    Digit3[3] = CreateSprite(362.0,Y,"LD_SLOT:bell",64,64);
    Digit1[4] = CreateSprite(214.0,Y,"LD_SLOT:bar1_o",64,64);
    Digit2[4] = CreateSprite(288.0,Y,"LD_SLOT:bar1_o",64,64);
    Digit3[4] = CreateSprite(362.0,Y,"LD_SLOT:bar1_o",64,64);
    Digit1[5] = CreateSprite(214.0,Y,"LD_SLOT:bar2_o",64,64);
    Digit2[5] = CreateSprite(288.0,Y,"LD_SLOT:bar2_o",64,64);
    Digit3[5] = CreateSprite(362.0,Y,"LD_SLOT:bar2_o",64,64);
    printf("LoadOther загрузился за %i ms", GetTickCount() - currenttime);
}
stock LoadActors()
{
	new currenttime = GetTickCount();
    actor[0] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[0], 106);
	actor[1] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[1], 107);
	actor[2] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[2], 108);
	actor[3] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[3], 109);
	actor[4] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[4], 110);
	actor[5] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[5], 111);
	actor[6] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[6], 143);
	actor[7] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[7], 144);
	actor[8] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[8], 145);
	actor[9] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[9], 146);
	actor[10] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[10], 147);
	actor[11] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[11], 148);
	actor[12] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[12], 100);
	actor[13] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[13], 101);
	actor[14] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[14], 102);
    actor[15] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[15], 149);
	actor[16] = CreateActor(155, 69.7852,-4.4927,1001.8589,180.8942);
	SetActorVirtualWorld(actor[16], 137);
	actor[17] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[17], 138);
	actor[18] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[18], 134);
	actor[19] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[19], 150);
	actor[20] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[20], 136);
	actor[21] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[21], 135);
	actor[22] = CreateActor(12, 497.6714,-77.4644,998.7651,356.6964);
	SetActorVirtualWorld(actor[22], 105);
	actor[23] = CreateActor(12, -2655.5076,1406.6876,906.2734,268.9621);
	SetActorVirtualWorld(actor[23], 103);
	actor[24] = CreateActor(12, 497.6714,-77.4644,998.7651,356.6964);
	SetActorVirtualWorld(actor[24], 151);
    actor[25] = CreateActor(12, 501.7258,-19.8993,1000.6797,93.3506);
	SetActorVirtualWorld(actor[25], 104);
	actor[26] = CreateActor(233, 1390.4113,-1690.0563,18.7249,268.5292);
	SetActorVirtualWorld(actor[26], 0);
    actor[27] = CreateActor(164, -2067.4932,2659.2976,1498.7765,316.9863);
	SetActorVirtualWorld(actor[27], 2);
	actor[28] = CreateActor(57, 1235.5612,-1263.2316,2054.1240,182.3360);
	SetActorVirtualWorld(actor[28], 1);
	actor[29] = CreateActor(141, 1232.0344,-1263.2639,2054.1250,181.7093);
	SetActorVirtualWorld(actor[29], 1);
	actor[30] = CreateActor(148, -2157.4912,-925.6529,1701.0859,91.2393);
	SetActorVirtualWorld(actor[30], 1);
	actor[31] = CreateActor(150, -2157.4922,-920.6929,1701.0859,88.7326);
	SetActorVirtualWorld(actor[31], 1);
	actor[32] = CreateActor(20, 496.6649,1305.1852,774.4839,93.0393);
	SetActorVirtualWorld(actor[32], 2);
	actor[33] = CreateActor(57, 496.6649,1306.9811,774.4839,104.0060);
	SetActorVirtualWorld(actor[33], 2);
	actor[34] = CreateActor(141, 496.6650,1308.7821,774.4839,96.7993);
	SetActorVirtualWorld(actor[34], 2);
	actor[36] = CreateActor(148, 496.6652,1310.6189,774.4839,91.7859);
	SetActorVirtualWorld(actor[35], 2);
	actor[37] = CreateActor(150, 496.6651,1312.3998,774.4839,88.0259);
	SetActorVirtualWorld(actor[37], 2);
	actor[38] = CreateActor(14, 496.4996,1318.7137,774.4839,125.3129);
	SetActorVirtualWorld(actor[38], 2);
	actor[39] = CreateActor(306, 252.0909,68.4061,1003.6406,96.1218);
	SetActorVirtualWorld(actor[39], 12);
	actor[40] = CreateActor(307, 252.0909,68.4061,1003.6406,96.1218);
	SetActorVirtualWorld(actor[40], 11);
	actor[41] = CreateActor(227, -2063.57349, 2665.31738, 1498.70740,181.5760);
	SetActorVirtualWorld(actor[41], 2);
	actor[42] = CreateActor(209, 1501.9723,-1277.5680,14.5625,180.6366);
	actor[43] = CreateActor(209, 196.7574,-117.5487,1.5503,35.9374);
	actor[44] = CreateActor(209, 1433.8011,-1740.7983,13.5469,3.2460);
	actor[45] = CreateActor(209, 1182.1571,-1314.9563,13.5716,268.2516);
	actor[46] = CreateActor(209, 2327.6658,2422.2625,10.8203,178.0226);
	actor[47] = CreateActor(209, 2351.6204,2404.5659,10.8203,356.9377);
	actor[48] = CreateActor(209, -2022.6364,458.2961,35.1723,357.3295);
	actor[49] = CreateActor(209, 1772.6434,-1903.8330,13.5525,36.4124);
	actor[50] = CreateActor(209, 2219.7568,-1151.6548,25.7504,313.2577);
	actor[51] = CreateActor(209, 2404.4722,-1934.8497,13.5538,316.9001);
	actor[52] = CreateActor(209, -89.4332,101.0922,3.1172,253.9693);
	actor[53] = CreateActor(209, 159.6426,-1812.3201,3.7413,87.9031);
	actor[54] = CreateActor(209, 1104.3633,1381.8967,10.8203,189.9294);
	actor[55] = CreateActor(209, 2999.9612,530.3032,-3.3559,155.2348);
	actor[56] = CreateActor(209, 1576.5154,1843.9366,10.8203,75.3274);
	actor[57] = CreateActor(209, 2598.4092,1060.1460,10.8125,269.1349);
	actor[58] = CreateActor(209, 2538.8323,2137.2725,10.8203,93.7216);
	actor[59] = CreateActor(209, 2029.4380,985.6383,10.8203,330.9406);
	actor[60] = CreateActor(209, 2243.4553,572.4129,7.7802,227.5396);
	actor[61] = CreateActor(209, -105.8033,-310.1197,1.4297,271.2830);
	actor[62] = CreateActor(12, 501.7258,-19.8993,1000.6797,93.3506);
	SetActorVirtualWorld(actor[62], 191);
	actor[63] = CreateActor(12, 501.7258,-19.8993,1000.6797,93.3506);
	SetActorVirtualWorld(actor[63], 192);
	actor[64] = CreateActor(12, 501.7258,-19.8993,1000.6797,93.3506);
	SetActorVirtualWorld(actor[64], 193);
	actor[65] = CreateActor(12, 501.7258,-19.8993,1000.6797,93.3506);
	SetActorVirtualWorld(actor[65], 194);
	actor[66] = CreateActor(12, 497.6714,-77.4644,998.7651,356.6964);
	SetActorVirtualWorld(actor[66], 186);
	actor[67] = CreateActor(12, 497.6714,-77.4644,998.7651,356.6964);
	SetActorVirtualWorld(actor[67], 187);
	actor[68] = CreateActor(12, 497.6714,-77.4644,998.7651,356.6964);
	SetActorVirtualWorld(actor[68], 188);
	actor[69] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[69],178 );
	actor[70] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[70],179 );
	actor[71] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[71],180 );
	actor[72] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[72],181 );
	actor[73] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[73],182 );
	actor[74] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[74],183 );
	actor[75] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[75],184 );
	actor[76] = CreateActor(155, 1081.6743,991.1944,1600.9989,357.7499);
	SetActorVirtualWorld(actor[76],185 );
	actor[77] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[77], 169);
	actor[78] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[78], 170);
	actor[79] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[79], 171);
	actor[80] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[80], 172);
	actor[81] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[81], 173);
	actor[82] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[82], 174);
	actor[83] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[83], 175);
	actor[84] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[84], 176);
	actor[85] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[85], 177);
	actor[86] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[86], 165);
	actor[87] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[87], 166);
	actor[88] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[88], 167);
	actor[89] = CreateActor(179, 295.2432,-40.5504,1001.5156,1.7996);
	SetActorVirtualWorld(actor[89], 168);
	actor[90] = CreateActor(37, 199.9442,-131.6396,1003.5078,27.3593);
	SetActorVirtualWorld(actor[90], 112);
	actor[91] = CreateActor(37, 199.9442,-131.6396,1003.5078,27.3593);
	SetActorVirtualWorld(actor[91],113);
	actor[92] = CreateActor(37, 199.9442,-131.6396,1003.5078,27.3593);
	SetActorVirtualWorld(actor[92], 114);
	actor[93] = CreateActor(37, 199.9442,-131.6396,1003.5078,27.3593);
	SetActorVirtualWorld(actor[93], 189);
	actor[94] = CreateActor(37, 199.9442,-131.6396,1003.5078,27.3593);
	SetActorVirtualWorld(actor[94], 190);
	actor[95] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[95], 1);
	ApplyActorAnimation(actor[98],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[96] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[96], 2);
	ApplyActorAnimation(actor[99],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[97] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[97], 3);
	ApplyActorAnimation(actor[97],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[98] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[98], 5);
	ApplyActorAnimation(actor[101],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[99] = CreateActor(11, 201.7949,196.0949,1001.0859,75.2512);
	SetActorVirtualWorld(actor[99], 6);
	actor[100] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[100], 7);
	ApplyActorAnimation(actor[100],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[101] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[101], 8);
	ApplyActorAnimation(actor[101],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[102] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[102], 9);
	ApplyActorAnimation(actor[102],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[103] = CreateActor(11, 2217.3264,-1145.0546,1025.9768,182.6772);
	SetActorVirtualWorld(actor[103], 10);
	ApplyActorAnimation(actor[103],"PED","SEAT_down",4.1,0,0,0,1,1);
    actor[104] = CreateActor(11, 1121.2966,-2598.1846,1221.5060,6.5566);
	SetActorVirtualWorld(actor[104], 11);
	ApplyActorAnimation(actor[104],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[105] = CreateActor(11, 1121.2966,-2598.1846,1221.5060,6.5566);
	SetActorVirtualWorld(actor[105], 12);
	ApplyActorAnimation(actor[105],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[106] = CreateActor(11, 1121.2966,-2598.1846,1221.5060,6.5566);
	SetActorVirtualWorld(actor[106], 13);
	ApplyActorAnimation(actor[106],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[107] = CreateActor(11, 1121.2966,-2598.1846,1221.5060,6.5566);
	SetActorVirtualWorld(actor[107], 14);
	ApplyActorAnimation(actor[107],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[108] = CreateActor(11, 1121.2966,-2598.1846,1221.5060,6.5566);
	SetActorVirtualWorld(actor[108], 15);
	ApplyActorAnimation(actor[108],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[109] = CreateActor(11, 1121.2966,-2598.1846,1221.5060,6.5566);
	SetActorVirtualWorld(actor[109], 16);
	ApplyActorAnimation(actor[109],"PED","SEAT_down",4.1,0,0,0,1,1);
	actor[110] = CreateActor(93 , 485.2755,-11.3690,1000.6797,219.6015);
	SetActorVirtualWorld(actor[110], 191);
	ApplyActorAnimation(actor[110], "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0,0);
	actor[111] = CreateActor(140, 485.9483,-16.4064,1000.6797,289.1622);
	SetActorVirtualWorld(actor[111], 191);
  	ApplyActorAnimation(actor[111], "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0,0);
	actor[112] = CreateActor(93, 485.2755,-11.3690,1000.6797,219.6015);
	SetActorVirtualWorld(actor[112], 192);
    ApplyActorAnimation(actor[112], "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0,0);
	actor[113] = CreateActor(140, 485.9483,-16.4064,1000.6797,289.1622);
	SetActorVirtualWorld(actor[113], 192);
 	ApplyActorAnimation(actor[113], "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0,0);
	actor[114] = CreateActor(93, 485.2755,-11.3690,1000.6797,219.6015);
	SetActorVirtualWorld(actor[114], 193);
    ApplyActorAnimation(actor[114], "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0,0);
	actor[115] = CreateActor(140, 485.9483,-16.4064,1000.6797,289.1622);
	SetActorVirtualWorld(actor[115], 193);
    ApplyActorAnimation(actor[115], "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0,0);
	actor[116] = CreateActor(93, 485.2755,-11.3690,1000.6797,219.6015);
	SetActorVirtualWorld(actor[116], 194);
	ApplyActorAnimation(actor[116], "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0,0);
	actor[117] = CreateActor(140, 485.9483,-16.4064,1000.6797,289.1622);
	SetActorVirtualWorld(actor[117], 194);
    ApplyActorAnimation(actor[117], "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0,0);
	actor[118] = CreateActor(140, 485.9483,-16.4064,1000.6797,289.1622);
	SetActorVirtualWorld(actor[118], 104);
    ApplyActorAnimation(actor[118], "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0,0);
    actor[119] = CreateActor(93, 485.2755,-11.3690,1000.6797,219.6015);
	SetActorVirtualWorld(actor[119], 104);
	ApplyActorAnimation(actor[119], "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0,0);
	actor[120] = CreateActor(140 , -2666.5313,1401.4785,906.2734,285.0108);
	SetActorVirtualWorld(actor[120], 103);
	ApplyActorAnimation(actor[120], "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0,0);
	actor[121] = CreateActor(83  , -2671.7742,1411.0079,907.5703,262.7639);
	SetActorVirtualWorld(actor[121], 103);
	ApplyActorAnimation(actor[121], "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0,0);
	actor[122] = CreateActor(63, -2656.9053,1419.5349,906.2734,231.7436);
	SetActorVirtualWorld(actor[122], 103);
	ApplyActorAnimation(actor[122], "DANCING", "dnce_M_d", 4.0, 1, 0, 0, 0,0);
	actor[123] = CreateActor(72, 1773.6903,-1891.7493,13.5504,139.4896);
	actor[124] = CreateActor(48, 2211.0706,-1142.9728,25.8084,265.1614);
	actor[125] = CreateActor(6, 1420.4176,-1685.8624,13.5469,245.4521);
    CreateDynamic3DTextLabel("Эдвард ( Торговец подарками )\n{FFFFFF}Чтобы поговорить нажми ALT",COLOR_VALIK,1420.4176,-1685.8624,13.5469,15.0);
    actor[126] = CreateActor(169, -1418.8385,2084.1316,1502.0374,1.0850);
	actor[127] = CreateActor(209, 1380.0839,-1804.9448,13.5469,274.1391);
	actor[128] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[128], 118);
	actor[129] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[129], 119);
	actor[130] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[130], 120);
	actor[131] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[131], 121);
	actor[132] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[132], 122);
	actor[133] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[133], 123);
	actor[134] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[134], 124);
	actor[135] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[135], 125);
	actor[136] =CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[136], 126);
	actor[137] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[137], 127);
	actor[138] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[138], 128);
	actor[139] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[139], 129);
	actor[140] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[140], 130);
	actor[141] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[141], 131);
	actor[142] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[142], 158);
	actor[143] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[143], 159);
	actor[144] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[144], 160);
	actor[145] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[145], 161);
	actor[146] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[146], 162);
	actor[147] = CreateActor(24, 666.1187,-566.1037,1700.7394,177.4561);
	SetActorVirtualWorld(actor[147], 163);
	actor[148] = CreateActor(20, 828.1813,860.8412,1005.0040,271.9525);
	SetActorVirtualWorld(actor[148], 1);
	actor[149] = CreateActor(76, -2061.84082, 2670.67676, 1500.96741, 90.00000);
	SetActorVirtualWorld(actor[149], 2);
	actor[150] = CreateActor(76, -1025.1711,1823.1455,1101.0859,352.5338);
	actor[151] = CreateActor(261, -2066.51343, 2665.37744, 1498.70740,180.0000);
	SetActorVirtualWorld(actor[151], 2);
	actor[152] = CreateActor(20,-1025.5941,1818.6888,1101.0859,280.7565);
	actor[153] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[153], 117);
	actor[154] = CreateActor(36, 2580.3503,1426.5663,1800.9688,179.0684);
	SetActorVirtualWorld(actor[154], 116);
	actor[155] = CreateActor(242, 782.6096, 2514.4624, 1501.9790,270.0);
	SetActorVirtualWorld(actor[155], 1);
	actor[156] = CreateActor(91, -398.2892,2232.0200,1801.0859,175.2628);
	SetActorVirtualWorld(actor[156], 195);
	actor[157] = CreateActor(91, -398.2892,2232.0200,1801.0859,175.2628);
	SetActorVirtualWorld(actor[157], 196);
	actor[158] = CreateActor(91, -398.2892,2232.0200,1801.0859,175.2628);
	SetActorVirtualWorld(actor[158], 197);
	actor[159] = CreateActor(91, -398.2892,2232.0200,1801.0859,175.2628);
	SetActorVirtualWorld(actor[159], 198);
	actor[160] = CreateActor(91, -398.2892,2232.0200,1801.0859,175.2628);
	SetActorVirtualWorld(actor[160], 199);
	actor[161] = CreateActor(91, -398.2892,2232.0200,1801.0859,175.2628);
	SetActorVirtualWorld(actor[161], 200);
	actor[162] = CreateActor(209, -1982.4241,127.5627,27.6875,87.1428);
	actor[163] = CreateActor(209, -1980.6304,174.8663,27.6875,105.3163);
	actor[164] = CreateActor(209, -1547.7957,673.8372,7.1875,87.4328);
	actor[165] = CreateActor(209, -2682.0137,582.9930,14.4531,339.0652);
	actor[166] = CreateActor(209, -2400.9304,337.9206,35.1719,240.9909);
	actor[167] = CreateActor(209, -1827.1926,-566.0032,16.4918,227.8308);
	actor[168] = CreateActor(24, -82.4707,1241.2787,1070.7109,91.2161);
	SetActorVirtualWorld(actor[168], 123);
	actor[169] = CreateActor(71,1298.6902,-1263.8916,13.5939,89.9531);
	actor[170] = CreateActor(36, 1162.9773,-618.3384,1105.0439,264.6517);
	SetActorVirtualWorld(actor[170], 202-1);
	actor[171] = CreateActor(36, 1162.9773,-618.3384,1105.0439,264.6517);
	SetActorVirtualWorld(actor[171], 203-1);
	actor[172] = CreateActor(36, 1162.9773,-618.3384,1105.0439,264.6517);
	SetActorVirtualWorld(actor[172], 204-1);
	actor[173] = CreateActor(36, 1162.9773,-618.3384,1105.0439,264.6517);
	SetActorVirtualWorld(actor[173], 205-1);
	actor[174] = CreateActor(36, 1162.9773,-618.3384,1105.0439,264.6517);
	SetActorVirtualWorld(actor[174], 206-1);
	actor[175] = CreateActor(24, 295.3193,-40.2163,1001.5156,4.5358);
	SetActorVirtualWorld(actor[175], 216-1);
	actor[176] = CreateActor(24, 295.3193,-40.2163,1001.5156,4.5358);
	SetActorVirtualWorld(actor[176], 217-1);
	actor[177] = CreateActor(24, 295.3193,-40.2163,1001.5156,4.5358);
	SetActorVirtualWorld(actor[177], 218-1);
	actor[178] = CreateActor(24, 295.3193,-40.2163,1001.5156,4.5358);
	SetActorVirtualWorld(actor[178], 219-1);
	actor[179] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[179], 207-1);
	actor[180] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[180], 208-1);
	actor[181] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[181], 209-1);
	actor[182] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[182], 210-1);
	actor[183] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[183], 211-1);
	actor[184] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[184], 212-1);
	actor[185] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[185], 213-1);
	actor[186] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[186], 214-1);
	actor[187] = CreateActor(155, 369.7600,-4.4928,1001.8589,182.9411);
	SetActorVirtualWorld(actor[187], 215-1);
	actor[188] = CreateActor(36, 200.2618,-131.5370,1003.5078,55.9463);
	SetActorVirtualWorld(actor[188], 220-1);
	actor[189] = CreateActor(36, 200.2618,-131.5370,1003.5078,55.9463);
	SetActorVirtualWorld(actor[189], 221-1);
	actor[190] = CreateActor(36, 200.2618,-131.5370,1003.5078,55.9463);
	SetActorVirtualWorld(actor[190], 222-1);
	actor[191] = CreateActor(155, -1772.6572,-2007.1797,1500.7853,358.7656);
	SetActorVirtualWorld(actor[191], 1);
	actor[192] = CreateActor(155, -1772.6572,-2007.1797,1500.7853,358.7656);
	SetActorVirtualWorld(actor[192], 2);
	actor[193] = CreateActor(155, -1772.6572,-2007.1797,1500.7853,358.7656);
	SetActorVirtualWorld(actor[193], 3);
	actor[194] = CreateActor(155, 369.8214,-4.4905,1001.8589,172.9549);
	SetActorVirtualWorld(actor[194], 133);
	actor[195] = CreateActor(155, 592.0477,1420.4325,1900.7980,88.0147);
	SetActorVirtualWorld(actor[195], 1);
	actor[196] = CreateActor(19, 332.5625,1119.6376,1083.8903,57.0707);
	SetActorVirtualWorld(actor[196], 1);
	actor[197] = CreateActor(19, 332.5625,1119.6376,1083.8903,57.0707);
	SetActorVirtualWorld(actor[197], 2);
	actor[198] = CreateActor(19, 332.5625,1119.6376,1083.8903,57.0707);
	SetActorVirtualWorld(actor[198], 3);
	actor[199] = CreateActor(19, 332.5625,1119.6376,1083.8903,57.0707);
	SetActorVirtualWorld(actor[199], 4);
	actor[200] = CreateActor(19, 332.5625,1119.6376,1083.8903,57.0707);
	SetActorVirtualWorld(actor[200], 5);
	actor[201] = CreateActor(59, -2576.62, -1386.25, 1500.76,0.00);
    SetActorVirtualWorld(actor[201], 5);
	actor[202] = CreateActor(59, -2034.6788,-118.0272,1035.1719,266.0949);
	SetActorVirtualWorld(actor[202], 1);
	actor[203] = CreateActor(265, 253.7958,117.4302,1003.4188,90.9143);
	actor[204] = CreateActor(266, 238.9685,112.8455,1003.4188,267.0093);
	actor[205] = CreateActor(261,1716.9583,-1671.1514,20.2242,58.3387);
	SetActorVirtualWorld(actor[205], 1);
	actor[206] = CreateActor(261,1716.9583,-1671.1514,20.2242,58.3387);
	SetActorVirtualWorld(actor[206], 2);
	actor[207] = CreateActor(261,1716.9583,-1671.1514,20.2242,58.3387);
	SetActorVirtualWorld(actor[207], 3);
	CreateDynamic3DTextLabel("Микрофон\n{FFFFFF}[Включен]",COLOR_VALIK,-575.7592,2568.7976,1702.5029,5.0);
	actor[208] = CreateActor(3,1324.0098,287.2829,20.0452,269.6259);
	CreateDynamic3DTextLabel("Майкл\n{FFFFFF}Чтобы поговорить нажми ALT\n\n{94B0C1}Квестовый персонаж",COLOR_VALIK,1324.0098,287.2829,20.0452,10.0);
	actor[209] = CreateActor(8,1972.5740,-1981.1592,13.5469,339.4531);
	actor[210] = CreateActor(6,644.0786,-1365.4963,13.6142,338.0643);
	actor[211] = CreateActor(164, 26.1174,2256.5720,1500.7679,297.1455);
	SetActorVirtualWorld(actor[211], 2);
	/*actor[212] = CreateActor(23, 1116.3888,-1429.3850,15.7969,338.4690);
	CreateDynamic3DTextLabel("Василий\nНажмите: {FFFFFF}ALT\nПродавец аксессуаров",COLOR_VALIK,1116.3888,-1429.3850,15.7969,5.0);
	actor[213] = CreateActor(294, 1141.0889,-1428.4669,15.7969,57.1163);
	CreateDynamic3DTextLabel("Иван\nНажмите: {FFFFFF}ALT\nПродавец аксессуаров",COLOR_VALIK,1141.0889,-1428.4669,15.7969,5.0);*/
	actor[214] = CreateActor(71, -1771.8763,-2011.2230,1500.7853,174.2801);
	SetActorVirtualWorld(actor[214], 1);
	actor[215] = CreateActor(71, -1771.8763,-2011.2230,1500.7853,174.2801);
	SetActorVirtualWorld(actor[215], 3);
	actor[216] = CreateActor(71, -1771.8763,-2011.2230,1500.7853,174.2801);
	SetActorVirtualWorld(actor[216], 2);
	actor[217] = CreateActor(185, 1800.4841, 409.9243, 20.2294, 177.3050);
	CreateDynamic3DTextLabel("Нейтон\n{73B461}Нажмите: {FFFFFF}ALT\nСемейный гид", -1, 1800.4841, 409.9243, 20.2294, 5.0);
	actor[218] = CreateActor(132, -256.7696, -1362.8536, 9.4421, 215.7267);
    CreateDynamic3DTextLabel("Эмилио\n{73B461}Поговорить: {FFFFFF}ALT", -1, -256.7696, -1362.8536, 9.4421, 5.0);
    actor[219] = CreateActor(35, 523.8312, 848.2282, -42.9189, 5.9560);
    CreateDynamic3DTextLabel("Лари\n{73B461}Поговорить: {FFFFFF}ALT", -1, 523.8312, 848.2282, -42.9189, 5.0);
	actor[220] = CreateActor(164, -2572.0220,-1374.5316,1500.7570,122.2902);
	CreateDynamic3DTextLabel("Игорь ( помощник )\n{FFFFFF}Чтобы поговорить нажми ALT",COLOR_VALIK,-2572.6401,-1374.8634,1500.7570,10.0);
	//Банк лс актеры
	actor[221] = CreateActor(153, -2670.0698,808.9360,1500.9688,189.1366);
 	SetActorVirtualWorld(actor[221], 1);
	actor[222] = CreateActor(187, -2665.1348,806.7042,1500.9688,93.2557);
	SetActorVirtualWorld(actor[222], 1);
	actor[223] = CreateActor(227, -2665.1348,800.0263,1500.9688,98.8957);
	SetActorVirtualWorld(actor[223], 1);
	actor[224] = CreateActor(228, -2665.1335,793.3651,1500.9688,93.8823);
	SetActorVirtualWorld(actor[224], 1);
	actor[225] = CreateActor(148, -2684.8027,808.9371,1500.9688,181.3030);
	SetActorVirtualWorld(actor[225], 1);
	actor[226] = CreateActor(150, -2677.3047,808.9442,1500.9688,180.6763);
	SetActorVirtualWorld(actor[226], 1);
	//Охранник в банке
	actor[227] = CreateActor(164, -2693.3257,792.3634,1500.9688,329.4222);
	SetActorVirtualWorld(actor[227], 1);
	actor[228] = CreateActor(267, -952.9456,-2356.5405,1701.0859,180.2763);
	SetActorVirtualWorld(actor[228], 2);
	actor[229] = CreateActor(307, 2359.9019,91.5077,1501.9902,265.4025);
	SetActorVirtualWorld(actor[229], 11);
	actor[230] = CreateActor(307, 2359.9019,91.5077,1501.9902,265.4025);
	SetActorVirtualWorld(actor[230], 10);
	actor[231] = CreateActor(307, 2359.9019,91.5077,1501.9902,265.4025);
	SetActorVirtualWorld(actor[231], 12);
	actor[232] = CreateActor(155, 1122.8033,-1465.7811,15.7834,213.1764);
	actor[233] = CreateActor(155, 1142.4574,-1474.5808,15.7969,317.5174);
	actor[234] = CreateActor(155, 1138.0466,-1456.4396,15.7969,90.3720);
	actor[235] = CreateActor(59, 1090.1139, 1525.7634, 1716.0868, 270.0000);
	CreateDynamic3DTextLabel("Прораб Руслан ( Авто-принятие во фракцию )\n{FFFFFF}Чтобы поговорить нажми ALT", 0x73B461FF, 1773.797363, -1899.465942, 13.548067, 5.0000, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	CreateActor(120, 1773.797363, -1899.465942, 13.548067, 35.770824);
	CreateDynamic3DTextLabel("Богдан ( Продавец деталей для тюнинга )\n{FFFFFF}Чтобы посмотреть товар нажми ALT", 0x73B461FF, 1090.1139, 1525.7634, 1717.0868, 5.0000, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 16);
	CreateActor(16, 1772.0677, 428.9174, 20.1436, 130.5293);
	CreateDynamic3DTextLabel("Максим ( Продавец деталей для тюнинга )\n{FFFFFF}Чтобы посмотреть товар нажми ALT", 0x73B461FF, 1772.0677, 428.9174, 20.1436, 3.0000, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	actor[236] = CreateActor(142, -2263.4514, 177.9965, 35.3056, 109.1910);
	CreateDynamic3DTextLabel("Мартин\n( Мероприятие: Собиратели )\nНажмите: {FFFFFF}ALT",COLOR_VALIK,-2263.4514,177.9965,35.3056,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, -1);
	actor[237] = CreateActor(11, 2250.6604,1464.8469,1008.8050,350.3705);
	SetActorVirtualWorld(actor[237], 2);
	actor[238] = CreateActor(12, 2240.2773,1443.1298,1008.7850,89.0118);
	SetActorVirtualWorld(actor[238], 2);
	CreateDynamic3DTextLabel("Оливия ({f7d83f}1001{FFFFFF})\n\n\n\nХочет играть в кости:\n{f7d83f}/dice 1001 ставка",-1,2240.2773,1443.1298,1008.7850,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 2, -1, -1);
	actor[239] = CreateActor(150, -2680.2732,795.8896,1501.0259,270.3133);
	SetActorVirtualWorld(actor[239], 1);
	actor[240] = CreateActor(148, -2680.9580,797.1705,1501.0259,88.5783);
	SetActorVirtualWorld(actor[240], 1);
	actor[241] = CreateActor(8, 949.9467,2451.9934,1601.9871,266.0435);
	SetActorVirtualWorld(actor[241], 2);
	actor[242] = CreateActor(141, 950.3532,2460.3127,1601.9800,219.3799);
	SetActorVirtualWorld(actor[242], 2);
	actor[243] = CreateActor(57, 952.9460,2464.3809,1601.9790,251.0268);
	SetActorVirtualWorld(actor[243], 2);
	actor[244] = CreateActor(227, 946.3777,2458.5283,1601.9790,184.3746);
	SetActorVirtualWorld(actor[244], 2);
	actor[245] = CreateActor(79, 2169.2637,-1053.1842,71.9548,132.8570);
	ApplyActorAnimation(actor[245], !"CRACK", !"BBALBAT_IDLE_02", 4.1, 1, 1, 1, 1, 1);
	SetActorVirtualWorld(actor[245], 1228);
	actor[246] = CreateActor(221, 2164.0886,-1046.4413,71.9966,192.7009);
	ApplyActorAnimation(actor[246], !"PED", !"PHONE_TALK", 4.1, 1, 1, 1, 1, 1);
	SetActorVirtualWorld(actor[246], 1228);
	actor[247] = CreateActor(77, 2168.1323,-1051.1493,71.9546,44.1829);
	ApplyActorAnimation(actor[247], !"CRACK", !"CRCKIDLE1", 4.1, 1, 1, 1, 1, 1);
	SetActorVirtualWorld(actor[247], 1228);
	actor[248] = CreateActor(91, 2161.3301,-1050.7638,71.9536,140.8112);
	ApplyActorAnimation(actor[248], !"BAR", !"BARSERVE_LOOP", 4.1, 0, 1, 1, 1, 1);
	SetActorVirtualWorld(actor[248], 1228);
	actor[249] = CreateActor(76, 2271.8701,1444.4349,1008.8320,91.6250);
	SetActorVirtualWorld(actor[249], 2);
	printf("LoadActors загрузился за %i ms", GetTickCount() - currenttime);
}
stock LoadGlobalTextDraws()
{
	new currenttime = GetTickCount();
	#include ../library/TEXTDRAWS/global
	printf("LoadGlobalTextDraws загрузился за %i ms", GetTickCount() - currenttime);
}
stock ShowInviteDLG(playerid)
{
	str_1 = "{FFFFFF}Фракция\t{FFFFFF}Статус набора\n";
	for(new i = 1; i < MAX_ORGS; i++) f(str_1, sizeof(str_1), "%s%s\t%s\n", str_1, OrgInfo[i][oName], OrgInfo[i][oInvite] ? ("{73B461}Доступно для вступления") : ("{BE2D2D}Закрыто"));
	return SPD(playerid, 8998, DIALOG_STYLE_TABLIST_HEADERS, !"{73B461}Авто-инвайт | {FFFFFF}Принятие во фракцию", str_1, !"Выбрать", !"Отмена");
}
stock LoadCity()
{
	new currenttime = GetTickCount();
	for(new i; i < MAX_LAVKA; i++)
	{
	    LavkaInfo[i][lavkaOwnerID] = INVALID_PLAYER_ID;
	    CreateDynamic3DTextLabel("Лавка:\n{ffc33f}ALT", -1, LavkaInfo[i][lavkaPosX], LavkaInfo[i][lavkaPosY], LavkaInfo[i][lavkaPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
	    CreateDynamic3DTextLabel("Используйте: ALT\nДля управления товарами.", -1, LavkaInfo[i][lavkaPosXOwner], LavkaInfo[i][lavkaPosYOwner], LavkaInfo[i][lavkaPosZOwner], 2.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
	}
    for(new i; i < MAX_ZONE; i++) nzone[i][zArea] = CreateDynamicSphere(nzone[i][zEnter_x], nzone[i][zEnter_y], nzone[i][zEnter_z], nzone[i][zDistance], 0, 0, -1);
    for(new i; i != MAX_AUTO_BAZAR; i++)
    {
    	autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;//65535
    	autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;//65535
    	autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;//65535
    	if(autoBazarInfo[i][autoBazarType] == 1) autoBazarInfo[i][autoBazarLabel] = CreateDynamic3DTextLabel("Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять", -1, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ], 3.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    	else autoBazarInfo[i][autoBazarLabel] = CreateDynamic3DTextLabel("Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять", -1, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ], 3.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
    for(new i; i != sizeof(KladeInfo); i++)
	{
		KladeInfo[i][kladStatus] = 1;
		DestroyDynamicObject(KladObject[i][0]);
   		DestroyDynamicObject(KladObject[i][1]);
   		DestroyDynamicObject(KladObject[i][2]);
    	KladObject[i][0] = CreateDynamicObject(2680, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y], KladeInfo[i][Klad_Z]-0.9, 0.0, -89.100021, 0.5, -1, -1, -1, 300.0, 300.0);
		KladObject[i][1] = CreateDynamicObject(16302, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y]-1.8, KladeInfo[i][Klad_Z]-5.800000, 0.0, 0.0, 0.0, -1, -1, -1, 300.00, 300.00);
        SetDynamicObjectMaterial(KladObject[i][1], 0, 18065, "ab_sfammumain", "plywood_gym", 0x00000000);
		KladObject[i][2] = CreateDynamicObject(1271, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y]-1.8, KladeInfo[i][Klad_Z]-1.100000, 0.800000, -90.600044, -3.900000, -1, -1, -1, 300.00, 300.00);
        SetDynamicObjectMaterial(KladObject[i][2], 0, 16037, "des_nbridge", "girder2_red_64HV", 0x00000000);
	}
    for(new i; i != MAX_COTTON_OBJECT; i++)
    {
        CottonInfo[i][cottonScore] = 10;
        CottonInfo[i][cottonStatus] = true;
        CottonInfo[i][cottonObject] = CreateDynamicObject(819, CottonInfo[i][cottonPosX], CottonInfo[i][cottonPosY], CottonInfo[i][cottonPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
        SetDynamicObjectMaterial(CottonInfo[i][cottonObject], 0, 817, "gta_procflowers", "gras07Si", 0);

        f(str_2, 300, "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[i][cottonScore]);
        CottonInfo[i][cottonLabel] = CreateDynamic3DTextLabel(str_2, -1, CottonInfo[i][cottonPosX], CottonInfo[i][cottonPosY], CottonInfo[i][cottonPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
    for(new i; i != MAX_LINEN_OBJECT; i++)
    {
        LinenInfo[i][linenScore] = 10;
        LinenInfo[i][linenStatus] = true;
        LinenInfo[i][linenObject] = CreateDynamicObject(865, LinenInfo[i][linenPosX], LinenInfo[i][linenPosY], LinenInfo[i][linenPosZ] - 1.2, 0.000000, 0.000000, 90.000000, -1, -1, -1, STREAMER_OBJECT_SD, 150.0);
        SetDynamicObjectMaterial(LinenInfo[i][linenObject], 0, 817, "gta_procflowers", "gras07Si", 0);

        f(str_2, 300, "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[i][linenScore]);
        LinenInfo[i][linenLabel] = CreateDynamic3DTextLabel(str_2, -1, LinenInfo[i][linenPosX], LinenInfo[i][linenPosY], LinenInfo[i][linenPosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
    for(new i; i != MAX_MINE_OBJECT; i++)
    {
        MineInfo[i][mineStatus] = true;
		MineInfo[i][mineObject] = CreateDynamicObject(3930, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ] - 1.2, -5.499997, 0.000000, -26.200012, -1, -1);
		SetDynamicObjectMaterial(MineInfo[i][mineObject], 0, 12871, "ce_ground01", "cs_rockdetail2", 0);
		switch(random(50))
		{
		    case 0..15: MineInfo[i][minePoroda] = 5;
		    case 16..25: MineInfo[i][minePoroda] = 4;
		    case 26..35: MineInfo[i][minePoroda] = 3;
		    case 36..45: MineInfo[i][minePoroda] = 2;
		    case 46..49: MineInfo[i][minePoroda] = 1;
		}


        f(str_2, 300, "Месторождение %s\n{73B461}Для добычи ископаемого\n{FFFFFF}нажмите 'ПРОБЕЛ'", MinePoroda[MineInfo[i][minePoroda] - 1]);
        MineInfo[i][mineLabel] = CreateDynamic3DTextLabel(str_2, -1, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ], 15.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
    }
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
    for(new i; i < sizeof(Tir); i++)
	{
		TirObj[i] = CreateObject(1586, Tir[i][ftirPosX],Tir[i][ftirPosY],Tir[i][ftirPosZ], 0, 0, 0);
	    CreateDynamic3DTextLabel("{AFAFAF}ТИР{FFFFFF}\nЗаймите кабинку и стреляйте по\nмишени для улучшения\nнавыка стрельбы",-1,Tir[i][tirPosX],Tir[i][tirPosY],Tir[i][tirPosZ], 3);
	}
    for(new i;i < sizeof(GateInfo);i ++) CreateGate(i);
	for(new i;i < sizeof(DoorInfo);i ++) CreateDoor(i);
	for(new i;i < sizeof(BarrierInfo);i ++)
	{
	    new
			Float:X = BarrierInfo[i][brPos_X],
			Float:Y = BarrierInfo[i][brPos_Y];
		ShiftCords(0, X, Y, BarrierInfo[i][brPos_A]+90.0, 3.5);
     	CreateDynamicObject(966,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z],0.00000000,0.00000000,BarrierInfo[i][brPos_A]);
     	if(!BarrierInfo[i][brOpen])
     	{
			gBarrier[i] = CreateDynamicObject(968,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.8,0.00000000,90.00000000,BarrierInfo[i][brPos_A]+180);
			MoveObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
			MoveObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[i][brPos_A]+180);
		}
		else gBarrier[i] = CreateDynamicObject(968,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.8,0.00000000,20.00000000,BarrierInfo[i][brPos_A]+180);
	}
	for(new i; i < sizeof(TeleportInfo);i ++)
    {
        static str[150];
        str[0] = EOS;
        strcat(str, TeleportInfo[i][tpName]), strcat(str,"\n\n{FFFFFF}Встаньте на пикап чтобы войти/выйти");
		CreateDynamic3DTextLabel(str, COLOR_ORANGE, TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], 2.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, TeleportInfo[i][tpEnterWorld], TeleportInfo[i][tpEnterInt]);
		TeleportPickup[i] = CreatePickup(19132, 1, TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], TeleportInfo[i][tpEnterWorld]);
    }
	for(new i;i<sizeof(phonepos);i++) CreateDynamic3DTextLabel("Телефонная будка\n{FFFFFF}Нажмите: ALT, чтобы вызвать такси.",COLOR_GREEN,phonepos[i][0],phonepos[i][1],phonepos[i][2],20.0);
	for(new i; i < sizeof(FerumCPPos); i ++)FerumCP[i] = CreateDynamicCP(FerumCPPos[i][0], FerumCPPos[i][1], FerumCPPos[i][2], 0.5);
	for(new i; i < sizeof(FerumPickupPos); i ++) FerumPickup[i] = CreatePickup(1559, 1, FerumPickupPos[i][0], FerumPickupPos[i][1], FerumPickupPos[i][2], -1);
	for(new i; i < sizeof(MinPos); i ++) MinerCP[i] = CreateDynamicCP(MinPos[i][0], MinPos[i][1], MinPos[i][2], 2.0);
	for(new i;i < sizeof(TestCP);i ++)
	{
	    if(i < sizeof(TestCP)-1) Test_CP[i] = CreateDynamicRaceCP(0,TestCP[i][0],TestCP[i][1],TestCP[i][2],TestCP[i+1][0],TestCP[i+1][1],TestCP[i+1][2],2.0,-1,-1,-1,1000.0);
	    else Test_CP[i] = CreateDynamicRaceCP(1,TestCP[i][0],TestCP[i][1],TestCP[i][2],TestCP[i][0],TestCP[i][1],TestCP[i][2],2.0,-1,-1,-1,1000.0);
	}
	for(new i;i < sizeof(MotoCP);i ++)
	{
	    if(i < sizeof(MotoCP)-1) MTest_CP[i] = CreateDynamicRaceCP(0,MotoCP[i][0],MotoCP[i][1],MotoCP[i][2],MotoCP[i+1][0],MotoCP[i+1][1],MotoCP[i+1][2],2.0,-1,-1,-1,1000.0);
	    else MTest_CP[i] = CreateDynamicRaceCP(1,MotoCP[i][0],MotoCP[i][1],MotoCP[i][2],MotoCP[i][0],MotoCP[i][1],MotoCP[i][2],2.0,-1,-1,-1,1000.0);
	}
    for(new i;i < sizeof(ZfarmCP);i ++)
	{
	    if(i < sizeof(ZfarmCP)-1) Zfarm_CP[i] = CreateDynamicRaceCP(3,ZfarmCP[i][0],ZfarmCP[i][1],ZfarmCP[i][2],ZfarmCP[i+1][0],ZfarmCP[i+1][1],ZfarmCP[i+1][2],7.0,-1,-1,-1,1000.0);
	    else Zfarm_CP[i] = CreateDynamicRaceCP(4,ZfarmCP[i][0],ZfarmCP[i][1],ZfarmCP[i][2],ZfarmCP[i][0],ZfarmCP[i][1],ZfarmCP[i][2],7.0,-1,-1,-1,1000.0);
	}
    for(new i;i < sizeof(KfarmCP);i ++)
	{
	    if(i < sizeof(KfarmCP)-1) Kfarm_CP[i] = CreateDynamicRaceCP(0,KfarmCP[i][0],KfarmCP[i][1],KfarmCP[i][2],KfarmCP[i+1][0],KfarmCP[i+1][1],KfarmCP[i+1][2],7.0,-1,-1,-1,1000.0);
	    else Kfarm_CP[i] = CreateDynamicRaceCP(1,KfarmCP[i][0],KfarmCP[i][1],KfarmCP[i][2],KfarmCP[i][0],KfarmCP[i][1],KfarmCP[i][2],7.0,-1,-1,-1,1000.0);
	}
    for(new i;i < sizeof(TfarmCP);i ++)
	{
	    if(i < sizeof(TfarmCP)-1) Tfarm_CP[i] = CreateDynamicRaceCP(0,TfarmCP[i][0],TfarmCP[i][1],TfarmCP[i][2],TfarmCP[i+1][0],TfarmCP[i+1][1],TfarmCP[i+1][2],3.0,-1,-1,-1,1000.0);
	    else Tfarm_CP[i] = CreateDynamicRaceCP(1,TfarmCP[i][0],TfarmCP[i][1],TfarmCP[i][2],TfarmCP[i][0],TfarmCP[i][1],TfarmCP[i][2],3.0,-1,-1,-1,1000.0);
	}
	for(new i;i < sizeof(FTestCP);i ++)
	{
	    if(i < sizeof(FTestCP)-1) FTest_CP[i] = CreateDynamicRaceCP(3,FTestCP[i][0],FTestCP[i][1],FTestCP[i][2],FTestCP[i+1][0],FTestCP[i+1][1],FTestCP[i+1][2],15.0,-1,-1,-1,1000.0);
	    else FTest_CP[i] = CreateDynamicRaceCP(4,FTestCP[i][0],FTestCP[i][1],FTestCP[i][2],FTestCP[i][0],FTestCP[i][1],FTestCP[i][2],12.0,-1,-1,-1,1000.0);
	}
	for(new i;i < sizeof(GoFuel);i ++) GoFuelCP[i] = CreateDynamicCP(GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z],6.0, -1, -1, -1, 10000.0);
	for(new i; i < sizeof(GoGunShop); i ++) GoGunShopCP[i] = CreateDynamicCP(GoGunShop[i][gsPosX], GoGunShop[i][gsPosY], GoGunShop[i][gsPosZ], 12.0, -1, -1, -1, 10000.0);
	for(new i;i < sizeof(PrisonPos);i ++) JailCP[i] = CreateDynamicCP(PrisonPos[i][0],PrisonPos[i][1],PrisonPos[i][2],3.0, -1, -1, -1, 3000.0);
	for(new i; i < sizeof(DutyPos); i++) TeamDutyCP[i] = CreatePickup(1275, 1, DutyPos[i][dutyposX], DutyPos[i][dutyposY], DutyPos[i][dutyposZ], DutyPos[i][dutyposWorld]);
	for(new i;i < sizeof(IncCP);i ++)
	{
	    IncCP[i][0] = CreateDynamicCP(IncCPPos[i][0], IncCPPos[i][1], IncCPPos[i][2], 3.0, -1, -1, -1, 10000.0);
	    IncCP[i][1] = CreateDynamicCP(IncCPPos[i][3], IncCPPos[i][4], IncCPPos[i][5], 1.0, -1, -1, -1, 10000.0);
	}
	for(new i;i < sizeof(PizzCP);i ++)
	{
	    PizzCP[i][0] = CreateDynamicCP(PizzaCPPos[i][0], PizzaCPPos[i][1], PizzaCPPos[i][2], 3.0, -1, -1, -1, 10000.0);
	    PizzCP[i][1] = CreateDynamicCP(PizzaCPPos[i][3], PizzaCPPos[i][4], PizzaCPPos[i][5], 1.0, -1, -1, -1, 10000.0);
	}
	for(new i;i < sizeof(HealInfo);i ++)
	{
	    f(str_2,sizeof(str_2),"Койка {33AA33}[Свободна]\n{AFAFAF}Нажмите N чтобы занять.\nНеобходимо начать лечение!");
	    HealText[i] = CreateDynamic3DTextLabel(str_2,-1,HealInfo[i][hCP][0],HealInfo[i][hCP][1],HealInfo[i][hCP][2], 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HealInfo[i][hWorld], HealInfo[i][hInt]);
	}
	CreateDynamic3DTextLabel("{958989}Магазин 24/7\n{FFFFFF}Нажми: N для покупок",-1,2580.1340,1424.8770,1800.9688, 10.0);
	CreatePickup(1274, 1, 2580.1340,1424.8770,1800.9688,-1);
    for(new i;i < sizeof(FishZone);i ++)
	{
	    Fish_CP[i] = CreateDynamicCP(FishZone[i][0], FishZone[i][1], FishZone[i][2], 0.7, -1, -1, -1, 5.0);
	    CreateDynamic3DTextLabel(" Место для рыбалки ",-1,FishZone[i][0], FishZone[i][1], FishZone[i][2], 10.0);
	}
    CreateDynamic3DTextLabel("Казино: {73B461}4 Dragons\n{FFFFFF}Для входа необходимо 500$\nНажмите:{73B461} ALT",-1,2019.32,1007.7,10.8203,9.0);
    CreateDynamicPickup(19132,1,2019.32,1007.7,10.8203,-1);
    CreateDynamicPickup(19132,1,2190.8975,1465.6576,1008.7850,-1);
    CreateDynamic3DTextLabel("Выход\nНажмите:{FFFFFF} ALT",COLOR_VALIK,2190.8975,1465.6576,1008.7850,9.0);
    CreateDynamicMapIcon(2019.32,1007.7,10.8203, 44, 0, -1, -1, -1, 300.0);
	for(new i;i < sizeof(Bankomats);i ++)
	{
 		SetDynamicObjectMaterialText(CreateDynamicObject(2754,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],0.0,0.0,Bankomats[i][3]), 2,"\n\n        \n        \n        \n        \n        ",OBJECT_MATERIAL_SIZE_256x256,"Tahoma", 48, 1, 0xFF000000,0xFFCD5C5C, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		CreateDynamic3DTextLabel("{A19D9D}Банкомат\n{FFFFFF}Нажмите: N",-1,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2]+1,5.0);
	}
	for(new i;i < sizeof(GoFuel);i ++)
	{
	    new bizid = GoFuel[i][gfBizzID];
	    new Float:cost = BizInfo[bizid][bEnterPrice];
	    new benz = BizInfo[bizid][bProducts];
		f(str_2,500,"\
		{FAAC58} Заправка \n\n\
		{FFFFFF}Введите {73B461}[/fill] {FFFFFF}около бензокалонки\n\
		Стоимость 1-го литра: {73B461}$%.1f\n\
		{FFFFFF}Всего топлива: {73B461}%iл.",cost,benz);
		CreatePickup(1274, 1,GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z], -1);
	    FuelText[i] = CreateDynamic3DTextLabel(str_2,-1,GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z],30.0);
	    CreateDynamicMapIcon(GoFuel[i][gfPos_X], GoFuel[i][gfPos_Y], GoFuel[i][gfPos_Z], 47, 0, -1, -1, -1, 300.0);
	}
	for(new i = 0;i < sizeof(ArendInfo);i ++)
	{
	    ArendCar[i] = J_AddStaticVehicleEx(ArendInfo[i][aID], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000);
		ARENDCARS ++;
	}
	for(new i; i < MAX_TRASH; i ++)
	{
	    MusorObject[i] = CreateDynamicObjectEx(RandTrash(), MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 0.0, 0.0, MusorPos[i][3]+180,150.00,150.00);
	    MusorCP[i] = CreateDynamicCP(MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 8.0, -1, -1, -1, 20);
        MusorText[i] = CreateDynamic3DTextLabel("Мусора: 100%/100%", 0xAFAFAFFF, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 20.0);
	}
	foreach(new i: Actor)
	{
	    new Float: x,Float:y,Float:z;
	    GetActorPos(i,x,y,z);
	    tActor[i] = Create3DTextLabel("",COLOR_GREY,x, y, z+1,10.0,GetActorVirtualWorld(i));
	}
	for(new i; i < sizeof(GribInfo);i ++) GribInfo[i][gribCreat] = CreatePickup(859,1,GribInfo[i][gribPos][0], GribInfo[i][gribPos][1], GribInfo[i][gribPos][2],-1);
	for(new i = 1;i < MAX_VEHICLES; i++)
	{
	    vTemp[i][Fuel] = 100.00;
	    vTemp[i][vAntiRepair]=2;
	    VehicleHealth[i] = 1000;
     	vTemp[i][StripObject] = -1;
	    SignalTick[i][1] = -1;
	    if(IsAVelik(i)) SetEngineStatus(i, true, -1);
	    for(new d; d < 10; d++) VehicleSeat[i][d] = INVALID_PLAYER_ID;
	    LightsObject[i][0] = -1;
	    LightsObject[i][1] = -1;
        SetVehicleToRespawn(i);
	}
	printf("LoadCity загрузился за %i ms", GetTickCount() - currenttime);
}
stock RandTrash()
{
	new trash;
	switch(random(3))
   	{
   		case 0: trash = 1332;
   		case 1: trash = 1333;
   		case 2: trash = 1334;
   	}
	return trash;
}
stock ConvertTD(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) f(string, 30, "%i:%02i:%02i", hours, mins, secs);
	else f(string, 30, "%02i:%02i", mins, secs);
	return string;
}
forward LoadAntiDM();
public LoadAntiDM()
{
	new currenttime = GetTickCount();
    ANDZONS = cache_num_rows();
    for(new i; i < ANDZONS; i++)
	{
	    cache_get_value_name_int(i, "id", AntiDm[i][zID]);
	    cache_get_value_name_int(i, "status", AntiDm[i][zStatus]);
	    cache_get_value_name_float(i, "x", AntiDm[i][zX]);
	    cache_get_value_name_float(i, "y", AntiDm[i][zY]);
	    cache_get_value_name_float(i, "z", AntiDm[i][zZ]);
	    cache_get_value_name(i, "name", AntiDm[i][zName]);
	}
	printf("LoadAntiDM(%i) загрузился за %i ms", ANDZONS, GetTickCount() - currenttime);
}
stock AddFreeFaggio(Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300)
{
	new vehicleid = AddStaticVehicleEx(462, x, y, z, a, color_1, color_2, spawntime);

	new FreeFaggio;

	FreeFaggio = CreateDynamicObject(18644, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 10765, "airportgnd_sfse", "black64", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.000000, -0.870000, 0.200000, 0.000000, 180.000000, 0.000000);

	FreeFaggio = CreateDynamicObject(19475, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(FreeFaggio, 0, "Free", 140, "Segoe Print", 199, 1, 0xFFFFFFFF, 0, 1);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.003000, -1.080000, 0.442000, 0.000000, 0.000000, 360.000000);

	FreeFaggio = CreateDynamicObject(19475, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(FreeFaggio, 0, "Eco", 140, "Segoe Print", 170, 1, 0xFFFFFFFF, 0, 1);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.000000, 0.581000, 0.260000, 0.000000, 0.000000, 90.000000);

	FreeFaggio = CreateDynamicObject(11740, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 19574, "sampfruits", "apple2", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.000000, 0.500000, 0.260000, 0.000000, 90.000000, 90.000000);

	FreeFaggio = CreateDynamicObject(2685, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 19574, "sampfruits", "apple2", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, -0.020000, -1.050000, 0.439000, 0.000000, 90.000000, 270.000000);

	FreeFaggio = CreateDynamicObject(2685, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterial(FreeFaggio, 0, 19574, "sampfruits", "apple2", 0);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, 0.019000, -1.085000, 0.449000, 360.000000, 90.000000, 450.000000);

	FreeFaggio = CreateDynamicObject(19475, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 300.0); // 1
	SetDynamicObjectMaterialText(FreeFaggio, 0, "Free", 140, "Segoe Print", 199, 1, 0xFFFFFFFF, 0, 1);
	AttachDynamicObjectToVehicle(FreeFaggio, vehicleid, -0.003000, -1.061000, 0.436000, 0.000000, 0.000000, 180.000000);
}
stock CreateTaxiAttach(vehicleid)
{
	if(GetVehicleModel(vehicleid) == 415)
	{
		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, ""NAME" TAXI\nЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 15, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -1.044000, 0.445000, -23.599001, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "- 913 -", 130, "Ariel", 22, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -1.091000, 0.335000, -23.799000, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19308, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 0
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -0.460000, 0.699000, 0.000000, 0.000000, 90.000000);
	}
	if(GetVehicleModel(vehicleid) == 420)
	{
		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, ""NAME" TAXI", 130, "Ariel", 40, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, -0.030000, -1.526000, 0.641000, -57.199001, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "ЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 25, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, -0.020000, -1.639000, 0.569000, -58.598999, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "- 913 -", 130, "Ariel", 80, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, -0.020000, -1.810000, 0.459000, -57.500000, 0.000000, 0.000000);
	}
	if(GetVehicleModel(vehicleid) == 579)
	{
		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, ""NAME" TAXI", 130, "Ariel", 34, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -2.596000, 0.903000, -27.600000, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "ЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 20, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -2.642000, 0.814000, -23.799999, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "- 913 -", 130, "Ariel", 47, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -2.717000, 0.672000, -26.698999, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19308, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 0
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -1.029000, 1.319000, 0.000000, 0.000000, 0.000000);
	}
	if(GetVehicleModel(vehicleid) == 580)
	{
		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, ""NAME" TAXI", 130, "Ariel", 34, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -1.634000, 0.802000, -39.599998, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "ЗВОНИТЕ ПО НОМЕРУ", 130, "Ariel", 20, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -1.693000, 0.725000, -37.999001, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19327, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 1
		SetDynamicObjectMaterialText(TaxiAttach[vehicleid], 0, "- 913 -", 130, "Ariel", 42, 1, 0xFFFFFFFF, 0, 1);
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -1.783000, 0.631000, -35.799999, 0.000000, 0.000000);

		TaxiAttach[vehicleid] = CreateDynamicObject(19308, 0.000000, 0.000000, -1000.000000, 0.000000, 0.000000, 0.000000, 0, 0, -1, STREAMER_OBJECT_SD, 150.0); // 0
		AttachDynamicObjectToVehicle(TaxiAttach[vehicleid], vehicleid, 0.000000, -0.410000, 1.129000, 0.000000, 0.000000, 0.000000);
	}
}
stock CheckMySQLReferal(playerid, nickname[])
{
	if(strlen(nickname)==0) return SPD(playerid, 13301, DIALOG_STYLE_INPUT, "{FFFFFF}Мой Реферал | {ae433d}Реферал", "\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", "»", "«");
	static Name[24], Referal[24];
	new Level;
	new bool:cont=false;
	mysql_format(mysql, str_2, 256, "SELECT * FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", nickname);
	new Cache:result = mysql_query(mysql, str_2);
	if(cache_num_rows() > 0)
	{
		cache_get_value_name(0, "NickName", Name);
		cache_get_value_name(0, "Referal", Referal);
		cache_get_value_name_int(0, "Level", Level);
	}
	if(strlen(Name)==0) cont=false;
	else if(GetString(Referal, PN(playerid))) cont=true;
	if(!cont) return SCMf(playerid, -1, "{73B461}[Referal-System]{FFFFFF} %s не указывал Вас в качестве реферала!",nickname);
	static color[24];
	if(Level < 5) color = "FF0000";
	else color = "85bb65";
	f(str_2,256,"\n\n{FFFFFF}Реферал: {85bb65}%s\n{FFFFFF}Уровень: {%s}%i{FFFFFF}\n\n",Name, color, Level);
	SPD(playerid,13302, 0, !"{FFFFFF}Ваш реферал | {ae433d}Реферал", str_2, !"«", !"");
	cache_delete(result);
	return true;
}
stock ShowMySQLReferals(playerid)
{
	new Ref5LVL, Ref1LVL, Level;
	static Name[24], str2[50], str[70];

	static fmt_str[] = "SELECT `NickName`, `Level` FROM `Qelksekm` WHERE `Referal` = '%s' LIMIT 10";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, PN(playerid));
	new Cache:result = mysql_query(mysql, str_3);
	new accounts = cache_num_rows();

	str_2[0] = EOS;
	if(!accounts)
	{	
		cache_delete(result);
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Больше вас никто не указывал как реферала");
	}
    f(str_1, 36, "{FFFFFF}Псевдоним	{FFFFFF}Уровень\n");
	for(new i; i < accounts; i ++)
	{
		cache_get_value_name(i, "NickName", Name);
		cache_get_value_name_int(i, "Level", Level);
		if(Level > 5)
		{
			f(str2, sizeof(str2), "%s\t{85bb65}%i{FFFFFF}\n", Name, Level);
			Ref5LVL++;
		}
		else
		{
			f(str2, sizeof(str2), "%s\t{FF0000}%i{FFFFFF}\n", Name, Level);
			Ref1LVL++;
		}
		strcat(str_1, str2);
	}
	cache_delete(result);
	f(str, sizeof(str), "{85bb65}%i {FFFFFF}/ {FF0000}%i{FFFFFF} | {ae433d}Мои рефералы", Ref5LVL, Ref1LVL);
	SPD(playerid, 13303, DIALOG_STYLE_TABLIST_HEADERS, str, str_1, !"»", !"«");
	return true;
}
stock CreateAutoBazarTable(id)
{
	static color[30];
	new Float:X, Float:Y, Float:Z, Float:A;
	new Float:X_1, Float:Y_1, Float:Z_1, Float:X_2, Float:Z_2, Float:X_3, Float:A_1;
	new carid = autoBazarInfo[id][autoBazarCarID];
	new number = GetVehicleID(carid);
	X = autoBazarInfo[id][autoBazarPosX];
	Y = autoBazarInfo[id][autoBazarPosY];
	Z = autoBazarInfo[id][autoBazarPosZ];
	A = autoBazarInfo[id][autoBazarZAngle];
	if(A == 90)
	{
	    X_1 = X-4.288819;
	    Y_1 = Y-0.024048;
	    Z_1 = Z-0.122114;

	    X_2 = X-5.368897;
	    Z_2 = Z-2.509254;

	    X_3 = X-2.808838;

	    A_1 = 0;
	}
	else if(A == 270)
	{
	    X_1 = X+4.288819;
	    Y_1 = Y+0.024048;
	    Z_1 = Z-0.122114;

	    X_2 = X+5.368897;
	    Z_2 = Z-2.509254;

	    X_3 = X+2.808838;

	    A_1 = 180;
	}

	static twinturbo[18];
	static launchs[10];
	static supreme[8];
	twinturbo[0] = EOS;
	supreme[0] = EOS;
	launchs[0] = EOS;
	if(CarInfo[number][cSlotItem][6] == Item_TwinTurbo) twinturbo = "TWINTURBO PACKAGE";
	if(CarInfo[number][cSlotItem][6] == Item_Launch) launchs = "LAUNCH";
	if(CarInfo[number][cSlotItem][7] == Item_Supreme) supreme = "SUPREME";

	switch(random(5))
	{
	    case 0: color = "bluedirt1";
	    case 1: color = "greendirt1";
	    case 2: color = "purpledirt1";
	    case 3: color = "reddirt1";
	    case 4: color = "yellowdirt1";
	}

	f(str_2, sizeof(str_2), "%s\n{5FC470}$%i\n\n\n \n", GetNameCar(GetVehicleModel(carid)), autoBazarInfo[id][autoBazarCost]);
	autoBazarInfo[id][autoBazarObject][0] = CreateDynamicObject(18663, X_1, Y_1, Z_1, 0.000000, 25.000000, A_1, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 0
	SetDynamicObjectMaterialText(autoBazarInfo[id][autoBazarObject][0], 0, str_2, 140, "Ariel", 40, 1, 0xFFFFFFFF, 0, 1);

	f(str_2, sizeof(str_2), "\n\n\n{FFFF00}%s%s\n%s{FFFFFF}\nВладелец: %s\n{999999}id: %i", twinturbo, launchs, supreme, PN(autoBazarInfo[id][autoBazarplayerid]), carid);
	autoBazarInfo[id][autoBazarObject][1] = CreateDynamicObject(18663, X_1, Y_1, Z_1, 0.000000, 25.000000, A_1, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 0
	SetDynamicObjectMaterialText(autoBazarInfo[id][autoBazarObject][1], 0, str_2, 140, "Ariel", 30, 1, 0xFFFFFFFF, 0, 1);

	autoBazarInfo[id][autoBazarObject][2] = CreateDynamicObject(19980, X_2, Y_1, Z_2, -25.000000, 0.000000, A-180, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 3
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][2], 2, 19655, "mattubes", color, 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][2], 1, 16640, "a51", "banding9_64HV", 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][2], 0, 16640, "a51", "banding9_64HV", 0);

	autoBazarInfo[id][autoBazarObject][3] = CreateDynamicObject(19980, X_3, Y_1, Z_2, -25.000000, 0.000000, A, -1, -1, -1, STREAMER_OBJECT_SD, 150.0); // 3
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][3], 2, 16640, "a51", "banding9_64HV", 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][3], 1, 16640, "a51", "banding9_64HV", 0);
	SetDynamicObjectMaterial(autoBazarInfo[id][autoBazarObject][3], 0, 16640, "a51", "banding9_64HV", 0);

}
stock DestroyAutoBazarTable(id) for(new i; i < 4; i++) DestroyDynamicObject(autoBazarInfo[id][autoBazarObject][i]);

stock IsAOwnableInParking(number)
{
	for(new i; i < sizeof(StandartCarParking); i++)
    {
        if(StandartCarParking[i][CarParking_Number] == number) return 1;
    }
    return 0;
}
stock DeleteFromParking(number)
{
	for(new i; i < sizeof(StandartCarParking); i++)
	{
		if(StandartCarParking[i][CarParking_Number] != number) continue;
		StandartCarParking[i][CarParking_Number] = INVALID_VEHICLE_ID;
		StandartCarParking[i][CarParking_Free] = 1;
		break;
	}
	return 1;
}
stock GetFreeParkingSlot(number)
{
	new free = -1;
	for(new i; i < sizeof(StandartCarParking); i++)
	{
		if(StandartCarParking[i][CarParking_Free])
		{
			free = i;
			StandartCarParking[i][CarParking_Free] = 0;
			StandartCarParking[i][CarParking_Number] = number;
			break;
		}
	}
	return free;
}
stock SetVehiclePosToStandartPark(carid)
{
	new number = GetVehicleID(carid);
	DeleteFromParking(number);
	new i = GetFreeParkingSlot(number);
	if(i != -1)
	{
		CarInfo[number][cPos_X] = StandartCarParking[i][CarParking_X];
		CarInfo[number][cPos_Y] = StandartCarParking[i][CarParking_Y];
		CarInfo[number][cPos_Z] = StandartCarParking[i][CarParking_Z];
		CarInfo[number][cPos_A] = StandartCarParking[i][CarParking_A];
	}
	else
	{
		CarInfo[number][cPos_X] = -180.8518+random(1000);
		CarInfo[number][cPos_Y] = 2135.6711;
		CarInfo[number][cPos_Z] = 17.4974;
		CarInfo[number][cPos_A] = 230.5764;
	}
	return SetVehicleSpawnInfo(carid, GetVehicleModel(carid), CarInfo[number][cPos_X], CarInfo[number][cPos_Y], CarInfo[number][cPos_Z], CarInfo[number][cPos_A], CarInfo[number][cColor_1], CarInfo[number][cColor_2], 1000000, 0);
}
stock RespawnOwnableCar(playerid, carid, put = 0)
{
	new panels, doors_, lights_, tires, Float: vhealth;
	new number = GetVehicleID(carid);
	new Float: X, Float:Y, Float:Z, Float:A;
	X = CarInfo[number][cPos_X];
	Y = CarInfo[number][cPos_Y];
	Z = CarInfo[number][cPos_Z];
	A = CarInfo[number][cPos_A];
	GetVehicleDamageStatus(carid, panels, doors_, lights_, tires);
	GetVehicleHealth(carid, vhealth);
	for(new i; i < 8; i++) if(CarInfo[number][cSlotItem][i]) AttachDestroy(number, i);
	UpdateOwnableCar(number, 0);
	ExitCar(playerid);
	if(CarText[number] != NONE_3D_TEXT)
	{
		DestroyDynamic3DTextLabel(CarText[number]);
		CarText[number] = NONE_3D_TEXT;
	}
	if(CarTextTrunk[number] != NONE_3D_TEXT)
	{
		DestroyDynamic3DTextLabel(CarTextTrunk[number]);
		CarTextTrunk[number] = NONE_3D_TEXT;
	}
	DestroyVehicleEx(carid);
	OwnableCar[number] = J_AddStaticVehicleEx(CarInfo[number][cModel],X,Y,Z,A,CarInfo[number][cColor_1],CarInfo[number][cColor_2],1000000,CarInfo[number][cInterior],CarInfo[number][cVirtualWorld]);
	if(CarText[number] == NONE_3D_TEXT) CarText[number] = CreateDynamic3DTextLabel(" ",-1,0,0,0.5,5.0,INVALID_PLAYER_ID,OwnableCar[number]);
	if(CarTextTrunk[number] == NONE_3D_TEXT && CarInfo[number][cModel] == 487) CarTextTrunk[number] = CreateDynamic3DTextLabel("", 0xFFFFFF34, 0, 0, 0.5, 5.0, INVALID_PLAYER_ID, OwnableCar[number]);
	UpdateCarInfo(number);
	for(new i; i < 8; i++) if(CarInfo[number][cSlotItem][i]) AttachInstall(number, i);
	UpdateOwnableCar(number);
	J_SetVehicleHealth(OwnableCar[number], vhealth);
	UpdateVehicleDamageStatus(OwnableCar[number], panels, doors_, lights_, tires);
	if(!IsAVelik(OwnableCar[number])) SetEngineStatus(OwnableCar[number], false, playerid);
	else SetEngineStatus(OwnableCar[number], true, playerid);
	if(put) PutPlayerInVehicle(playerid, OwnableCar[number], 0);
	mysql_pqueryf(mysql, "UPDATE `Ownable` SET `VehicleID` = '%i' WHERE `ID` = '%i'", OwnableCar[number], CarInfo[number][cID]);
	return 1;
}
stock HideInvPage(playerid)
{
	HideInventMenu(playerid);
	switch(InventPage[playerid])
	{
        case 1:
        {
            for(new i; i < 36; i++)
            {
                DestroyPlayerTD(playerid,InventSlot[playerid][i]);
                DestroyPlayerTD(playerid,InventSlotAmount[playerid][i]);
                DestroyPlayerTD(playerid, InventSlotEnchant[playerid][i]);
            }
            PlayerTextDrawSetSelectable(playerid, Invent[playerid][13], 1);
            PlayerTextDrawColor(playerid, Invent[playerid][13], 0x333333FF);
            PlayerTextDrawHide(playerid, Invent[playerid][13]);
            PlayerTextDrawShow(playerid, Invent[playerid][13]);
        }
        case 2:
        {
            for(new i = 36; i < 72; i++)
            {
                DestroyPlayerTD(playerid,InventSlot[playerid][i]);
                DestroyPlayerTD(playerid,InventSlotAmount[playerid][i]);
                DestroyPlayerTD(playerid, InventSlotEnchant[playerid][i]);
            }
            PlayerTextDrawSetSelectable(playerid, Invent[playerid][14], 1);
            PlayerTextDrawColor(playerid, Invent[playerid][14], 0x333333FF);
            PlayerTextDrawHide(playerid, Invent[playerid][14]);
            PlayerTextDrawShow(playerid, Invent[playerid][14]);
        }
        case 3:
        {
            for(new i = 72; i < MAX_SLOT_INV; i++)
            {
                DestroyPlayerTD(playerid,InventSlot[playerid][i]);
                DestroyPlayerTD(playerid,InventSlotAmount[playerid][i]);
                DestroyPlayerTD(playerid, InventSlotEnchant[playerid][i]);
            }
            PlayerTextDrawSetSelectable(playerid, Invent[playerid][15], 1);
            PlayerTextDrawColor(playerid, Invent[playerid][15], 0x333333FF);
            PlayerTextDrawHide(playerid, Invent[playerid][15]);
            PlayerTextDrawShow(playerid, Invent[playerid][15]);
        }
	}
	InventPage[playerid] = 0;
	return true;
}
forward ArzSpeedNew(playerid);
public ArzSpeedNew(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	new benzin = floatround(vTemp[vehicleid][Fuel], floatround_round);
    Interface_Arizona(playerid, Arz_Fuel, benzin);
	return 1;
}
stock ShowSpeedometr(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	if(PI[playerid][pCustomArizona][0] != 0)
	{
 		NewSpeed[playerid] = SetPlayerTimer(playerid, "ArzSpeedNew", 1500, true);
        return 0;
	}
	if(!GetPVarInt(playerid, !"pSpeed") && GetPlayerState(playerid) == 2 && !IsAPlane(carid) && !IsAVelik(carid) && !IsARcCar(carid))
	{
		HideTextDraws(playerid, 6);
		#include ../library/TEXTDRAWS/speed/old
		SetPVarInt(playerid, !"pSpeed", 1);
		if(InNZone{playerid}) ShowNoParkZone(playerid);
	}
	return true;
}
stock HideSpeedometr(playerid)
{
	if(GetPVarInt(playerid, !"pSpeed"))
	{
		for(new i; i < 7; i++) DestroyPlayerTD(playerid, speeddraw[playerid][i]);
		for(new i; i < 4; i++) TextDrawHideForPlayer(playerid, speedbox[i]);
		SetPVarInt(playerid, !"pSpeed", 0);
		if(InNZone{playerid}) HideNoParkZone(playerid);
	}
	return true;
}
stock ShowNoParkZone(playerid)
{
	if(GetPVarInt(playerid, !"pNoParkZone")) return false;
	TextDrawShowForPlayer(playerid, noparkzone[2]);
	TextDrawShowForPlayer(playerid, noparkzone[1]);
	TextDrawShowForPlayer(playerid, noparkzone[0]);
	SetPVarInt(playerid, !"pNoParkZone", 1);
	return true;
}
stock HideNoParkZone(playerid)
{
	if(!GetPVarInt(playerid, !"pNoParkZone")) return false;
	TextDrawHideForPlayer(playerid, noparkzone[2]);
	TextDrawHideForPlayer(playerid, noparkzone[1]);
	TextDrawHideForPlayer(playerid, noparkzone[0]);
	SetPVarInt(playerid, !"pNoParkZone", 0);
	return true;
}
stock CreateInvPage(playerid, id, id2)
{
	//SCM(playerid, -1, "CreateInvPage 1");
	new Float:Y = PI[playerid][pInvPos_Y], Float:X = PI[playerid][pInvPos_X];
	if(MenuStatus{playerid} || TradeOpen{playerid})
	{
		//SCM(playerid, -1, "CreateInvPage для меню или трейда");
		InventSlot[playerid][id] = CreatePlayerTextDraw(playerid, 323.000000, 164.742859, "LD_SPAC:white");
		InventSlot[playerid][id+1] = CreatePlayerTextDraw(playerid, 349.500000, 164.742859, "LD_SPAC:white");
		InventSlot[playerid][id+2] = CreatePlayerTextDraw(playerid, 376.000000, 164.742859, "LD_SPAC:white");
		InventSlot[playerid][id+3] = CreatePlayerTextDraw(playerid, 402.500000, 164.742859, "LD_SPAC:white");
		InventSlot[playerid][id+4] = CreatePlayerTextDraw(playerid, 429.000000, 164.742859, "LD_SPAC:white");
		InventSlot[playerid][id+5] = CreatePlayerTextDraw(playerid, 455.500000, 164.742859, "LD_SPAC:white");
		InventSlot[playerid][id+6] = CreatePlayerTextDraw(playerid, 323.000000, 195.242859, "LD_SPAC:white");
		InventSlot[playerid][id+7] = CreatePlayerTextDraw(playerid, 349.500000, 195.242859, "LD_SPAC:white");
		InventSlot[playerid][id+8] = CreatePlayerTextDraw(playerid, 376.000000, 195.242859, "LD_SPAC:white");
		InventSlot[playerid][id+9] = CreatePlayerTextDraw(playerid, 402.500000, 195.242859, "LD_SPAC:white");
		InventSlot[playerid][id+10] = CreatePlayerTextDraw(playerid, 429.000000, 195.242859, "LD_SPAC:white");
		InventSlot[playerid][id+11] = CreatePlayerTextDraw(playerid, 455.500000, 195.242859, "LD_SPAC:white");
		InventSlot[playerid][id+12] = CreatePlayerTextDraw(playerid, 323.000000, 225.742859, "LD_SPAC:white");
		InventSlot[playerid][id+13] = CreatePlayerTextDraw(playerid, 349.500000, 225.742859, "LD_SPAC:white");
		InventSlot[playerid][id+14] = CreatePlayerTextDraw(playerid, 376.000000, 225.742859, "LD_SPAC:white");
		InventSlot[playerid][id+15] = CreatePlayerTextDraw(playerid, 402.500000, 225.742859, "LD_SPAC:white");
		InventSlot[playerid][id+16] = CreatePlayerTextDraw(playerid, 429.000000, 225.742859, "LD_SPAC:white");
		InventSlot[playerid][id+17] = CreatePlayerTextDraw(playerid, 455.500000, 225.742859, "LD_SPAC:white");
		InventSlot[playerid][id+18] = CreatePlayerTextDraw(playerid, 323.000000, 256.242859, "LD_SPAC:white");
		InventSlot[playerid][id+19] = CreatePlayerTextDraw(playerid, 349.500000, 256.242859, "LD_SPAC:white");
		InventSlot[playerid][id+20] = CreatePlayerTextDraw(playerid, 376.000000, 256.242859, "LD_SPAC:white");
		InventSlot[playerid][id+21] = CreatePlayerTextDraw(playerid, 402.500000, 256.242859, "LD_SPAC:white");
		InventSlot[playerid][id+22] = CreatePlayerTextDraw(playerid, 429.000000, 256.242859, "LD_SPAC:white");
		InventSlot[playerid][id+23] = CreatePlayerTextDraw(playerid, 455.500000, 256.242859, "LD_SPAC:white");
		InventSlot[playerid][id+24] = CreatePlayerTextDraw(playerid, 323.000000, 286.742859, "LD_SPAC:white");
		InventSlot[playerid][id+25] = CreatePlayerTextDraw(playerid, 349.500000, 286.742859, "LD_SPAC:white");
		InventSlot[playerid][id+26] = CreatePlayerTextDraw(playerid, 376.000000, 286.742859, "LD_SPAC:white");
		InventSlot[playerid][id+27] = CreatePlayerTextDraw(playerid, 402.500000, 286.742859, "LD_SPAC:white");
		InventSlot[playerid][id+28] = CreatePlayerTextDraw(playerid, 429.000000, 286.742859, "LD_SPAC:white");
		InventSlot[playerid][id+29] = CreatePlayerTextDraw(playerid, 455.500000, 286.742859, "LD_SPAC:white");
		InventSlot[playerid][id+30] = CreatePlayerTextDraw(playerid, 323.000000, 317.242859, "LD_SPAC:white");
		InventSlot[playerid][id+31] = CreatePlayerTextDraw(playerid, 349.500000, 317.242859, "LD_SPAC:white");
		InventSlot[playerid][id+32] = CreatePlayerTextDraw(playerid, 376.000000, 317.242859, "LD_SPAC:white");
		InventSlot[playerid][id+33] = CreatePlayerTextDraw(playerid, 402.500000, 317.242859, "LD_SPAC:white");
		InventSlot[playerid][id+34] = CreatePlayerTextDraw(playerid, 429.000000, 317.242859, "LD_SPAC:white");
		InventSlot[playerid][id+35] = CreatePlayerTextDraw(playerid, 455.500000, 317.242859, "LD_SPAC:white");

		InventSlotAmount[playerid][id] = CreatePlayerTextDraw(playerid, 347.500000, 187.826187, "_");
		InventSlotAmount[playerid][id+1] = CreatePlayerTextDraw(playerid, 374.000000, 187.826187, "_");
		InventSlotAmount[playerid][id+2] = CreatePlayerTextDraw(playerid, 400.500000, 187.826187, "_");
		InventSlotAmount[playerid][id+3] = CreatePlayerTextDraw(playerid, 427.000000, 187.826187, "_");
		InventSlotAmount[playerid][id+4] = CreatePlayerTextDraw(playerid, 453.500000, 187.826187, "_");
		InventSlotAmount[playerid][id+5] = CreatePlayerTextDraw(playerid, 480.000000, 187.826187, "_");
		InventSlotAmount[playerid][id+6] = CreatePlayerTextDraw(playerid, 347.500000, 218.326187, "_");
		InventSlotAmount[playerid][id+7] = CreatePlayerTextDraw(playerid, 374.000000, 218.326187, "_");
		InventSlotAmount[playerid][id+8] = CreatePlayerTextDraw(playerid, 400.500000, 218.326187, "_");
		InventSlotAmount[playerid][id+9] = CreatePlayerTextDraw(playerid, 427.000000, 218.326187, "_");
		InventSlotAmount[playerid][id+10] = CreatePlayerTextDraw(playerid, 453.500000, 218.326187, "_");
		InventSlotAmount[playerid][id+11] = CreatePlayerTextDraw(playerid, 480.000000, 218.326187, "_");
		InventSlotAmount[playerid][id+12] = CreatePlayerTextDraw(playerid, 347.500000, 248.826187, "_");
		InventSlotAmount[playerid][id+13] = CreatePlayerTextDraw(playerid, 374.000000, 248.826187, "_");
		InventSlotAmount[playerid][id+14] = CreatePlayerTextDraw(playerid, 400.500000, 248.826187, "_");
		InventSlotAmount[playerid][id+15] = CreatePlayerTextDraw(playerid, 427.000000, 248.826187, "_");
		InventSlotAmount[playerid][id+16] = CreatePlayerTextDraw(playerid, 453.500000, 248.826187, "_");
		InventSlotAmount[playerid][id+17] = CreatePlayerTextDraw(playerid, 480.000000, 248.826187, "_");
		InventSlotAmount[playerid][id+18] = CreatePlayerTextDraw(playerid, 347.500000, 279.326202, "_");
		InventSlotAmount[playerid][id+19] = CreatePlayerTextDraw(playerid, 374.000000, 279.326202, "_");
		InventSlotAmount[playerid][id+20] = CreatePlayerTextDraw(playerid, 400.500000, 279.326202, "_");
		InventSlotAmount[playerid][id+21] = CreatePlayerTextDraw(playerid, 427.000000, 279.326202, "_");
		InventSlotAmount[playerid][id+22] = CreatePlayerTextDraw(playerid, 453.500000, 279.326202, "_");
		InventSlotAmount[playerid][id+23] = CreatePlayerTextDraw(playerid, 480.000000, 279.326202, "_");
		InventSlotAmount[playerid][id+24] = CreatePlayerTextDraw(playerid, 347.500000, 309.826202, "_");
		InventSlotAmount[playerid][id+25] = CreatePlayerTextDraw(playerid, 374.000000, 309.826202, "_");
		InventSlotAmount[playerid][id+26] = CreatePlayerTextDraw(playerid, 400.500000, 309.826202, "_");
		InventSlotAmount[playerid][id+27] = CreatePlayerTextDraw(playerid, 427.000000, 309.826202, "_");
		InventSlotAmount[playerid][id+28] = CreatePlayerTextDraw(playerid, 453.500000, 309.826202, "_");
		InventSlotAmount[playerid][id+29] = CreatePlayerTextDraw(playerid, 480.000000, 309.826202, "_");
		InventSlotAmount[playerid][id+30] = CreatePlayerTextDraw(playerid, 347.500000, 340.326202, "_");
		InventSlotAmount[playerid][id+31] = CreatePlayerTextDraw(playerid, 374.000000, 340.326202, "_");
		InventSlotAmount[playerid][id+32] = CreatePlayerTextDraw(playerid, 400.500000, 340.326202, "_");
		InventSlotAmount[playerid][id+33] = CreatePlayerTextDraw(playerid, 427.000000, 340.326202, "_");
		InventSlotAmount[playerid][id+34] = CreatePlayerTextDraw(playerid, 453.500000, 340.326202, "_");
		InventSlotAmount[playerid][id+35] = CreatePlayerTextDraw(playerid, 480.000000, 340.326202, "_");
		
		InventSlotEnchant[playerid][id] = CreatePlayerTextDraw(playerid, 347.500000, 187.826187, "_");
        InventSlotEnchant[playerid][id+1] = CreatePlayerTextDraw(playerid, 374.0, 187.826187, "_");
        InventSlotEnchant[playerid][id+2] = CreatePlayerTextDraw(playerid, 400.500000, 187.826187, "_");
        InventSlotEnchant[playerid][id+3] = CreatePlayerTextDraw(playerid, 427.0, 187.826187, "_");
        InventSlotEnchant[playerid][id+4] = CreatePlayerTextDraw(playerid, 453.500000, 187.826187, "_");
        InventSlotEnchant[playerid][id+5] = CreatePlayerTextDraw(playerid, 480.0, 187.826187, "_");
        InventSlotEnchant[playerid][id+6] = CreatePlayerTextDraw(playerid, 347.500000, 218.326187, "_");
        InventSlotEnchant[playerid][id+7] = CreatePlayerTextDraw(playerid, 374.0, 218.326187, "_");
        InventSlotEnchant[playerid][id+8] = CreatePlayerTextDraw(playerid, 400.500000, 218.326187, "_");
        InventSlotEnchant[playerid][id+9] = CreatePlayerTextDraw(playerid, 427.0, 218.326187, "_");
        InventSlotEnchant[playerid][id+10] = CreatePlayerTextDraw(playerid, 453.500000, 218.326187, "_");
        InventSlotEnchant[playerid][id+11] = CreatePlayerTextDraw(playerid, 480.0, 218.326187, "_");
        InventSlotEnchant[playerid][id+12] = CreatePlayerTextDraw(playerid, 347.500000, 248.826187, "_");
        InventSlotEnchant[playerid][id+13] = CreatePlayerTextDraw(playerid, 374.0, 248.826187, "_");
        InventSlotEnchant[playerid][id+14] = CreatePlayerTextDraw(playerid, 400.500000, 248.826187, "_");
        InventSlotEnchant[playerid][id+15] = CreatePlayerTextDraw(playerid, 427.0, 248.826187, "_");
        InventSlotEnchant[playerid][id+16] = CreatePlayerTextDraw(playerid, 453.500000, 248.826187, "_");
        InventSlotEnchant[playerid][id+17] = CreatePlayerTextDraw(playerid, 480.0, 248.826187, "_");
        InventSlotEnchant[playerid][id+18] = CreatePlayerTextDraw(playerid, 347.500000, 279.326202, "_");
        InventSlotEnchant[playerid][id+19] = CreatePlayerTextDraw(playerid, 374.0, 279.326202, "_");
        InventSlotEnchant[playerid][id+20] = CreatePlayerTextDraw(playerid, 400.500000, 279.326202, "_");
        InventSlotEnchant[playerid][id+21] = CreatePlayerTextDraw(playerid, 427.0, 279.326202, "_");
        InventSlotEnchant[playerid][id+22] = CreatePlayerTextDraw(playerid, 453.500000, 279.326202, "_");
        InventSlotEnchant[playerid][id+23] = CreatePlayerTextDraw(playerid, 480.0, 279.326202, "_");
        InventSlotEnchant[playerid][id+24] = CreatePlayerTextDraw(playerid, 347.500000, 309.826202, "_");
        InventSlotEnchant[playerid][id+25] = CreatePlayerTextDraw(playerid, 374.0, 309.826202, "_");
        InventSlotEnchant[playerid][id+26] = CreatePlayerTextDraw(playerid, 400.500000, 309.826202, "_");
        InventSlotEnchant[playerid][id+27] = CreatePlayerTextDraw(playerid, 427.0, 309.826202, "_");
        InventSlotEnchant[playerid][id+28] = CreatePlayerTextDraw(playerid, 453.500000, 309.826202, "_");
        InventSlotEnchant[playerid][id+29] = CreatePlayerTextDraw(playerid, 480.0, 309.826202, "_");
        InventSlotEnchant[playerid][id+30] = CreatePlayerTextDraw(playerid, 347.500000, 340.326202, "_");
        InventSlotEnchant[playerid][id+31] = CreatePlayerTextDraw(playerid, 374.0, 340.326202, "_");
        InventSlotEnchant[playerid][id+32] = CreatePlayerTextDraw(playerid, 400.500000, 340.326202, "_");
        InventSlotEnchant[playerid][id+33] = CreatePlayerTextDraw(playerid, 427.0, 340.326202, "_");
        InventSlotEnchant[playerid][id+34] = CreatePlayerTextDraw(playerid, 453.500000, 340.326202, "_");
        InventSlotEnchant[playerid][id+35] = CreatePlayerTextDraw(playerid, 480.0, 340.326202, "_");
	}
	else if(InventStatus{playerid})
	{
		//SCM(playerid, -1, "CreateInvPage для инвентаря");
		InventSlot[playerid][id] = CreatePlayerTextDraw(playerid, 465.101715+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][id+1] = CreatePlayerTextDraw(playerid, 491.601715+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][id+2] = CreatePlayerTextDraw(playerid, 518.101685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][id+3] = CreatePlayerTextDraw(playerid, 544.601685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][id+4] = CreatePlayerTextDraw(playerid, 571.101685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][id+5] = CreatePlayerTextDraw(playerid, 597.601685+X, 127.599998+Y, "LD_SPAC:white");
		InventSlot[playerid][id+6] = CreatePlayerTextDraw(playerid, 465.101715+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+7] = CreatePlayerTextDraw(playerid, 491.601715+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+8] = CreatePlayerTextDraw(playerid, 518.101685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+9] = CreatePlayerTextDraw(playerid, 544.601685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+10] = CreatePlayerTextDraw(playerid, 571.101685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+11] = CreatePlayerTextDraw(playerid, 597.601685+X, 158.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+12] = CreatePlayerTextDraw(playerid, 465.101715+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+13] = CreatePlayerTextDraw(playerid, 491.601715+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+14] = CreatePlayerTextDraw(playerid, 518.101685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+15] = CreatePlayerTextDraw(playerid, 544.601685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+16] = CreatePlayerTextDraw(playerid, 571.101685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+17] = CreatePlayerTextDraw(playerid, 597.601685+X, 188.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+18] = CreatePlayerTextDraw(playerid, 465.101715+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+19] = CreatePlayerTextDraw(playerid, 491.601715+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+20] = CreatePlayerTextDraw(playerid, 518.101685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+21] = CreatePlayerTextDraw(playerid, 544.601685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+22] = CreatePlayerTextDraw(playerid, 571.101685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+23] = CreatePlayerTextDraw(playerid, 597.601685+X, 219.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+24] = CreatePlayerTextDraw(playerid, 465.101715+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+25] = CreatePlayerTextDraw(playerid, 491.601715+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+26] = CreatePlayerTextDraw(playerid, 518.101685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+27] = CreatePlayerTextDraw(playerid, 544.601685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+28] = CreatePlayerTextDraw(playerid, 571.101685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+29] = CreatePlayerTextDraw(playerid, 597.601685+X, 249.600006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+30] = CreatePlayerTextDraw(playerid, 465.101715+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+31] = CreatePlayerTextDraw(playerid, 491.601715+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+32] = CreatePlayerTextDraw(playerid, 518.101685+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+33] = CreatePlayerTextDraw(playerid, 544.601685+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+34] = CreatePlayerTextDraw(playerid, 571.101685+X, 280.100006+Y, "LD_SPAC:white");
		InventSlot[playerid][id+35] = CreatePlayerTextDraw(playerid, 597.601685+X, 280.100006+Y, "LD_SPAC:white");

	    InventSlotAmount[playerid][id] = CreatePlayerTextDraw(playerid, 489.601715+X, 150.683334+Y, "_");
		InventSlotAmount[playerid][id+1] = CreatePlayerTextDraw(playerid, 516.101685+X, 150.683334+Y, "_");
		InventSlotAmount[playerid][id+2] = CreatePlayerTextDraw(playerid, 542.601685+X, 150.683334+Y, "_");
		InventSlotAmount[playerid][id+3] = CreatePlayerTextDraw(playerid, 569.101685+X, 150.683334+Y, "_");
		InventSlotAmount[playerid][id+4] = CreatePlayerTextDraw(playerid, 595.601685+X, 150.683334+Y, "_");
		InventSlotAmount[playerid][id+5] = CreatePlayerTextDraw(playerid, 622.101685+X, 150.683334+Y, "_");
		InventSlotAmount[playerid][id+6] = CreatePlayerTextDraw(playerid, 489.601715+X, 181.183334+Y, "_");
		InventSlotAmount[playerid][id+7] = CreatePlayerTextDraw(playerid, 516.101685+X, 181.183334+Y, "_");
		InventSlotAmount[playerid][id+8] = CreatePlayerTextDraw(playerid, 542.601685+X, 181.183334+Y, "_");
		InventSlotAmount[playerid][id+9] = CreatePlayerTextDraw(playerid, 569.101685+X, 181.183334+Y, "_");
		InventSlotAmount[playerid][id+10] = CreatePlayerTextDraw(playerid, 595.601685+X, 181.183334+Y, "_");
		InventSlotAmount[playerid][id+11] = CreatePlayerTextDraw(playerid, 622.101685+X, 181.183334+Y, "_");
		InventSlotAmount[playerid][id+12] = CreatePlayerTextDraw(playerid, 489.601715+X, 211.683334+Y, "_");
		InventSlotAmount[playerid][id+13] = CreatePlayerTextDraw(playerid, 516.101685+X, 211.683334+Y, "_");
		InventSlotAmount[playerid][id+14] = CreatePlayerTextDraw(playerid, 542.601685+X, 211.683334+Y, "_");
		InventSlotAmount[playerid][id+15] = CreatePlayerTextDraw(playerid, 569.101685+X, 211.683334+Y, "_");
		InventSlotAmount[playerid][id+16] = CreatePlayerTextDraw(playerid, 595.601685+X, 211.683334+Y, "_");
		InventSlotAmount[playerid][id+17] = CreatePlayerTextDraw(playerid, 622.101685+X, 211.683334+Y, "_");
		InventSlotAmount[playerid][id+18] = CreatePlayerTextDraw(playerid, 489.601715+X, 242.183334+Y, "_");
		InventSlotAmount[playerid][id+19] = CreatePlayerTextDraw(playerid, 516.101685+X, 242.183334+Y, "_");
		InventSlotAmount[playerid][id+20] = CreatePlayerTextDraw(playerid, 542.601685+X, 242.183334+Y, "_");
		InventSlotAmount[playerid][id+21] = CreatePlayerTextDraw(playerid, 569.101685+X, 242.183334+Y, "_");
		InventSlotAmount[playerid][id+22] = CreatePlayerTextDraw(playerid, 595.601685+X, 242.183334+Y, "_");
		InventSlotAmount[playerid][id+23] = CreatePlayerTextDraw(playerid, 622.101685+X, 242.183334+Y, "_");
		InventSlotAmount[playerid][id+24] = CreatePlayerTextDraw(playerid, 489.601715+X, 272.683350+Y, "_");
		InventSlotAmount[playerid][id+25] = CreatePlayerTextDraw(playerid, 516.101685+X, 272.683350+Y, "_");
		InventSlotAmount[playerid][id+26] = CreatePlayerTextDraw(playerid, 542.601685+X, 272.683350+Y, "_");
		InventSlotAmount[playerid][id+27] = CreatePlayerTextDraw(playerid, 569.101685+X, 272.683350+Y, "_");
		InventSlotAmount[playerid][id+28] = CreatePlayerTextDraw(playerid, 595.601685+X, 272.683350+Y, "_");
		InventSlotAmount[playerid][id+29] = CreatePlayerTextDraw(playerid, 622.101685+X, 272.683350+Y, "_");
		InventSlotAmount[playerid][id+30] = CreatePlayerTextDraw(playerid, 489.601715+X, 303.183350+Y, "_");
		InventSlotAmount[playerid][id+31] = CreatePlayerTextDraw(playerid, 516.101685+X, 303.183350+Y, "_");
		InventSlotAmount[playerid][id+32] = CreatePlayerTextDraw(playerid, 542.601685+X, 303.183350+Y, "_");
		InventSlotAmount[playerid][id+33] = CreatePlayerTextDraw(playerid, 569.101685+X, 303.183350+Y, "_");
		InventSlotAmount[playerid][id+34] = CreatePlayerTextDraw(playerid, 595.601685+X, 303.183350+Y, "_");
		InventSlotAmount[playerid][id+35] = CreatePlayerTextDraw(playerid, 622.101685+X, 303.183350+Y, "_");
		
		InventSlotEnchant[playerid][id] = CreatePlayerTextDraw(playerid, 489.601715+X, 150.683334+Y, "_");
        InventSlotEnchant[playerid][id+1] = CreatePlayerTextDraw(playerid, 516.101685+X, 150.683334+Y, "_");
        InventSlotEnchant[playerid][id+2] = CreatePlayerTextDraw(playerid, 542.601685+X, 150.683334+Y, "_");
        InventSlotEnchant[playerid][id+3] = CreatePlayerTextDraw(playerid, 569.101685+X, 150.683334+Y, "_");
        InventSlotEnchant[playerid][id+4] = CreatePlayerTextDraw(playerid, 595.601685+X, 150.683334+Y, "_");
        InventSlotEnchant[playerid][id+5] = CreatePlayerTextDraw(playerid, 622.101685+X, 150.683334+Y, "_");
        InventSlotEnchant[playerid][id+6] = CreatePlayerTextDraw(playerid, 489.601715+X, 181.183334+Y, "_");
        InventSlotEnchant[playerid][id+7] = CreatePlayerTextDraw(playerid, 516.101685+X, 181.183334+Y, "_");
        InventSlotEnchant[playerid][id+8] = CreatePlayerTextDraw(playerid, 542.601685+X, 181.183334+Y, "_");
        InventSlotEnchant[playerid][id+9] = CreatePlayerTextDraw(playerid, 569.101685+X, 181.183334+Y, "_");
        InventSlotEnchant[playerid][id+10] = CreatePlayerTextDraw(playerid, 595.601685+X, 181.183334+Y, "_");
        InventSlotEnchant[playerid][id+11] = CreatePlayerTextDraw(playerid, 622.101685+X, 181.183334+Y, "_");
        InventSlotEnchant[playerid][id+12] = CreatePlayerTextDraw(playerid, 489.601715+X, 211.683334+Y, "_");
        InventSlotEnchant[playerid][id+13] = CreatePlayerTextDraw(playerid, 516.101685+X, 211.683334+Y, "_");
        InventSlotEnchant[playerid][id+14] = CreatePlayerTextDraw(playerid, 542.601685+X, 211.683334+Y, "_");
        InventSlotEnchant[playerid][id+15] = CreatePlayerTextDraw(playerid, 569.101685+X, 211.683334+Y, "_");
        InventSlotEnchant[playerid][id+16] = CreatePlayerTextDraw(playerid, 595.601685+X, 211.683334+Y, "_");
        InventSlotEnchant[playerid][id+17] = CreatePlayerTextDraw(playerid, 622.101685+X, 211.683334+Y, "_");
        InventSlotEnchant[playerid][id+18] = CreatePlayerTextDraw(playerid, 489.601715+X, 242.183334+Y, "_");
        InventSlotEnchant[playerid][id+19] = CreatePlayerTextDraw(playerid, 516.101685+X, 242.183334+Y, "_");
        InventSlotEnchant[playerid][id+20] = CreatePlayerTextDraw(playerid, 542.601685+X, 242.183334+Y, "_");
        InventSlotEnchant[playerid][id+21] = CreatePlayerTextDraw(playerid, 569.101685+X, 242.183334+Y, "_");
        InventSlotEnchant[playerid][id+22] = CreatePlayerTextDraw(playerid, 595.601685+X, 242.183334+Y, "_");
        InventSlotEnchant[playerid][id+23] = CreatePlayerTextDraw(playerid, 622.101685+X, 242.183334+Y, "_");
        InventSlotEnchant[playerid][id+24] = CreatePlayerTextDraw(playerid, 489.601715+X, 272.683350+Y, "_");
        InventSlotEnchant[playerid][id+25] = CreatePlayerTextDraw(playerid, 516.101685+X, 272.683350+Y, "_");
        InventSlotEnchant[playerid][id+26] = CreatePlayerTextDraw(playerid, 542.601685+X, 272.683350+Y, "_");
        InventSlotEnchant[playerid][id+27] = CreatePlayerTextDraw(playerid, 569.101685+X, 272.683350+Y, "_");
        InventSlotEnchant[playerid][id+28] = CreatePlayerTextDraw(playerid, 595.601685+X, 272.683350+Y, "_");
        InventSlotEnchant[playerid][id+29] = CreatePlayerTextDraw(playerid, 622.101685+X, 272.683350+Y, "_");
        InventSlotEnchant[playerid][id+30] = CreatePlayerTextDraw(playerid, 489.601715+X, 303.183350+Y, "_");
        InventSlotEnchant[playerid][id+31] = CreatePlayerTextDraw(playerid, 516.101685+X, 303.183350+Y, "_");
        InventSlotEnchant[playerid][id+32] = CreatePlayerTextDraw(playerid, 542.601685+X, 303.183350+Y, "_");
        InventSlotEnchant[playerid][id+33] = CreatePlayerTextDraw(playerid, 569.101685+X, 303.183350+Y, "_");
        InventSlotEnchant[playerid][id+34] = CreatePlayerTextDraw(playerid, 595.601685+X, 303.183350+Y, "_");
        InventSlotEnchant[playerid][id+35] = CreatePlayerTextDraw(playerid, 622.101685+X, 303.183350+Y, "_");
	}
	//SCM(playerid, -1, "CreateInvPage 2");
	for(new i = id; i < id2; i++)
	{
		PlayerTextDrawLetterSize(playerid, InventSlot[playerid][i], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InventSlot[playerid][i], 25.500000, 29.500000);
		PlayerTextDrawAlignment(playerid, InventSlot[playerid][i], 1);
		PlayerTextDrawColor(playerid, InventSlot[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, InventSlot[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, InventSlot[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventSlot[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, InventSlot[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, InventSlot[playerid][i], 0x333333FF);
		PlayerTextDrawFont(playerid, InventSlot[playerid][i], 5);
		PlayerTextDrawSetProportional(playerid, InventSlot[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, InventSlot[playerid][i], 1);
		PlayerTextDrawSetPreviewModel(playerid, InventSlot[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, InventSlot[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);

        PlayerTextDrawLetterSize(playerid, InventSlotAmount[playerid][i], 0.126499, 0.625000);
		PlayerTextDrawTextSize(playerid, InventSlotAmount[playerid][i], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, InventSlotAmount[playerid][i], 3);
		PlayerTextDrawColor(playerid, InventSlotAmount[playerid][i], 0xAAAAAAFF);
		PlayerTextDrawUseBox(playerid, InventSlotAmount[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, InventSlotAmount[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventSlotAmount[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, InventSlotAmount[playerid][i], 1);
		PlayerTextDrawBackgroundColor(playerid, InventSlotAmount[playerid][i], 0x00000000);
		PlayerTextDrawFont(playerid, InventSlotAmount[playerid][i], 2);
		PlayerTextDrawSetProportional(playerid, InventSlotAmount[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, InventSlotAmount[playerid][i], 0);
		
		PlayerTextDrawLetterSize(playerid, InventSlotEnchant[playerid][i], 0.126499, 0.625000);
        PlayerTextDrawTextSize(playerid, InventSlotEnchant[playerid][i], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, InventSlotEnchant[playerid][i], 3);
        PlayerTextDrawColor(playerid, InventSlotEnchant[playerid][i], 0xAAAAAAFF);
        PlayerTextDrawUseBox(playerid, InventSlotEnchant[playerid][i], 0);
        PlayerTextDrawBoxColor(playerid, InventSlotEnchant[playerid][i], 0x80808080);
        PlayerTextDrawSetShadow(playerid, InventSlotEnchant[playerid][i], 0);
        PlayerTextDrawSetOutline(playerid, InventSlotEnchant[playerid][i], 1);
        PlayerTextDrawBackgroundColor(playerid, InventSlotEnchant[playerid][i], 0x00000000);
        PlayerTextDrawFont(playerid, InventSlotEnchant[playerid][i], 2);
        PlayerTextDrawSetProportional(playerid, InventSlotEnchant[playerid][i], 1);
        PlayerTextDrawSetSelectable(playerid, InventSlotEnchant[playerid][i], 0);
		InvSlotUpdate(playerid, i, 1, 1, 1);
	}
	return true;
}
stock ShowInvPage(playerid, page)
{
	//SCM(playerid, -1, "ShowInvPage 1");
	if(InventPage[playerid] == page) return true;
	//SCM(playerid, -1, "ShowInvPage 2");
	new color = InvColor[PI[playerid][pInvColor]][1];
	HideInvPage(playerid);
	InventPage[playerid] = page;
	switch(page)
	{
		case 1:
		{
			CreateInvPage(playerid, 0, 36);
			PlayerTextDrawSetSelectable(playerid, Invent[playerid][13], 0);
			PlayerTextDrawColor(playerid, Invent[playerid][13], color);
	        PlayerTextDrawHide(playerid, Invent[playerid][13]);
	        PlayerTextDrawShow(playerid, Invent[playerid][13]);
		}
		case 2:
		{
			CreateInvPage(playerid, 36, 72);
			PlayerTextDrawSetSelectable(playerid, Invent[playerid][14], 0);
			PlayerTextDrawColor(playerid, Invent[playerid][14], color);
	        PlayerTextDrawHide(playerid, Invent[playerid][14]);
	        PlayerTextDrawShow(playerid, Invent[playerid][14]);
		}
		case 3:
		{
			CreateInvPage(playerid, 72, 108);
			PlayerTextDrawSetSelectable(playerid, Invent[playerid][15], 0);
			PlayerTextDrawColor(playerid, Invent[playerid][15], color);
	        PlayerTextDrawHide(playerid, Invent[playerid][15]);
	        PlayerTextDrawShow(playerid, Invent[playerid][15]);
		}
	}
	return true;
}
stock ShowLogo(playerid)
{
	if(LogoStatus{playerid}) return false;
	for(new i; i < sizeof(URL); i++) TextDrawShowForPlayer(playerid, URL[i]);
	LogoStatus{playerid} = true;
	return true;
}
stock HideLogo(playerid)
{
	if(!LogoStatus{playerid}) return false;
	for(new i; i < sizeof(URL); i++) TextDrawHideForPlayer(playerid, URL[i]);
	LogoStatus{playerid} = false;
	return true;
}
stock CreateButtonInv(playerid)
{
	new bool:yes;
	for(new i; i < MAX_TRASH; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, MusorPos[i][0],  MusorPos[i][1],  MusorPos[i][2]))
		{
			TrashID[playerid] = i;
			yes = true;
			SetPVarInt(playerid, !"InvType", 1);
			break;
		}
	}
	if(HouseEntered[playerid] != -1)
	{
		HouseID[playerid] = HouseEntered[playerid];
		yes = true;
		SetPVarInt(playerid, !"InvType", 2);
	}
	foreach(new i: Vehicle)
	{
		if(IsACar(i))
		{
    		new Float:X,Float:Y,Float:Z;
			GetVehicleShiftPos(i, 1, X, Y, Z, 2.0);
			if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			{
				idaofcar[playerid] = i;
				yes = true;
				SetPVarInt(playerid, !"InvType", 3);
				break;
			}
		}
	}
	if(yes)
	{
		new Float:X = PI[playerid][pInvPos_X], Float:Y = PI[playerid][pInvPos_Y];

		InventButton[playerid][0] = CreatePlayerTextDraw(playerid, 465.101715+X, 326.933350+Y, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, InventButton[playerid][0], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, InventButton[playerid][0], 42.500000, 19.666666);
		PlayerTextDrawAlignment(playerid, InventButton[playerid][0], 1);
		PlayerTextDrawColor(playerid, InventButton[playerid][0], InvColor[PI[playerid][pInvColor]][1]);
		PlayerTextDrawUseBox(playerid, InventButton[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, InventButton[playerid][0], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventButton[playerid][0], 2);
		PlayerTextDrawSetOutline(playerid, InventButton[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, InventButton[playerid][0], 0x000000FF);
		PlayerTextDrawFont(playerid, InventButton[playerid][0], 4);
		PlayerTextDrawSetProportional(playerid, InventButton[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, InventButton[playerid][0], 1);

		InventButton[playerid][1] = CreatePlayerTextDraw(playerid, 486.351715+X, 332.540314+Y, "_");
		PlayerTextDrawLetterSize(playerid, InventButton[playerid][1], 0.150666, 0.845274);
		PlayerTextDrawTextSize(playerid, InventButton[playerid][1], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, InventButton[playerid][1], 2);
		PlayerTextDrawColor(playerid, InventButton[playerid][1], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, InventButton[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, InventButton[playerid][1], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventButton[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, InventButton[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, InventButton[playerid][1], 0x00000000);
		PlayerTextDrawFont(playerid, InventButton[playerid][1], 2);
		PlayerTextDrawSetProportional(playerid, InventButton[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, InventButton[playerid][1], 0);
		/////////////////////////////////////////////////////////////////////////////////////////////////
		switch(GetPVarInt(playerid, !"InvType"))
		{
			case 1:
			{
				if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRASH");
				else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("МУСОРКА"));
			}
			case 2:
			{
				if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "WAREHOUSE");
				else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("ШКАФ"));
			}
			case 3:
			{
				if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRUNK");
				else PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("БАГАЖНИК"));
			}
		}
		/////////////////////////////////////////////////////////////////////////////////////////////////
		for(new i; i < 2; i++) PlayerTextDrawShow(playerid, InventButton[playerid][i]);
	}
	return 1;
}
stock HideMenuPage(playerid)
{
	if(!MenuPage[playerid]) return true;
	new page = MenuPage[playerid];
	MenuPage[playerid] = 0;
	if(BuyStatus{playerid})
	{
        for(new i; i < 30; i++)
        {
            DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
			DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
			//DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
        }
		return 1;
	}
	switch(page)
	{
        case 1:
        {
            for(new i; i < 30; i++)
            {
                DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
				DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
				DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
            }
        }
        case 2:
        {
            for(new i = 30; i < 60; i++)
            {
                DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
            }
        }
        case 3:
        {
            for(new i = 60; i < 90; i++)
            {
                DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
            }
        }
        case 4:
        {
            for(new i = 90; i < 120; i++)
            {
                DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
            }
        }
        case 5:
        {
            for(new i = 120; i < 150; i++)
            {
                DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
                DestroyPlayerTD(playerid,Invent_Menu_PageEnchant[playerid][i]);
            }
        }
	}
	return true;
}
stock HideBuyPage(playerid, type)
{
	if(!MenuPage[playerid]) return true;
	new page = MenuPage[playerid], maxpage;

    if(page <= 1) BuyPageSelectTable[playerid][0] = false;
    switch(type)
    {
        case 1,2: maxpage = 4;
    }
    if(page >= maxpage) BuyPageSelectTable[playerid][1] = false;

    for(new i; i < 30; i++)
    {
        DestroyPlayerTD(playerid,Invent_Menu_Page[playerid][i]);
        DestroyPlayerTD(playerid,Invent_Menu_PageAmount[playerid][i]);
    }
	return MenuPage[playerid] = 0;
}
stock ShowBuyPage(playerid, page, type)
{
	if(MenuPage[playerid] == page) return true;
	HideBuyPage(playerid, type);
	MenuPage[playerid] = page;
	PlayerTextDrawSetStringf(playerid, Item_Menu_Shop[playerid][0], "%i", page);
	if(page <= 1) BuyPageSelectTable[playerid][0] = true;
    new maxpage;
    switch(type)
    {
        case 1,2: maxpage = 4;
    }
    if(page >= maxpage) BuyPageSelectTable[playerid][1] = true;
	return CreateBuyPage(playerid, type);
}
stock CreateBuyPage(playerid, type)
{
	Invent_Menu_Page[playerid][0] = CreatePlayerTextDraw(playerid, 184.500000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][1] = CreatePlayerTextDraw(playerid, 211.000000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][2] = CreatePlayerTextDraw(playerid, 237.500000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][3] = CreatePlayerTextDraw(playerid, 264.000000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][4] = CreatePlayerTextDraw(playerid, 290.500000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][5] = CreatePlayerTextDraw(playerid, 184.500000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][6] = CreatePlayerTextDraw(playerid, 211.000000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][7] = CreatePlayerTextDraw(playerid, 237.500000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][8] = CreatePlayerTextDraw(playerid, 264.000000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][9] = CreatePlayerTextDraw(playerid, 290.500000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][10] = CreatePlayerTextDraw(playerid, 184.500000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][11] = CreatePlayerTextDraw(playerid, 211.000000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][12] = CreatePlayerTextDraw(playerid, 237.500000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][13] = CreatePlayerTextDraw(playerid, 264.000000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][14] = CreatePlayerTextDraw(playerid, 290.500000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][15] = CreatePlayerTextDraw(playerid, 184.500000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][16] = CreatePlayerTextDraw(playerid, 211.000000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][17] = CreatePlayerTextDraw(playerid, 237.500000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][18] = CreatePlayerTextDraw(playerid, 264.000000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][19] = CreatePlayerTextDraw(playerid, 290.500000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][20] = CreatePlayerTextDraw(playerid, 184.500000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][21] = CreatePlayerTextDraw(playerid, 211.000000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][22] = CreatePlayerTextDraw(playerid, 237.500000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][23] = CreatePlayerTextDraw(playerid, 264.000000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][24] = CreatePlayerTextDraw(playerid, 290.500000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][25] = CreatePlayerTextDraw(playerid, 184.500000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][26] = CreatePlayerTextDraw(playerid, 211.000000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][27] = CreatePlayerTextDraw(playerid, 237.500000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][28] = CreatePlayerTextDraw(playerid, 264.000000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][29] = CreatePlayerTextDraw(playerid, 290.500000, 317.242859, "LD_SPAC:white");

	Invent_Menu_PageAmount[playerid][0] = CreatePlayerTextDraw(playerid, 209.000000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][1] = CreatePlayerTextDraw(playerid, 235.500000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][2] = CreatePlayerTextDraw(playerid, 262.000000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][3] = CreatePlayerTextDraw(playerid, 288.500000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][4] = CreatePlayerTextDraw(playerid, 315.000000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][5] = CreatePlayerTextDraw(playerid, 209.000000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][6] = CreatePlayerTextDraw(playerid, 235.500000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][7] = CreatePlayerTextDraw(playerid, 262.000000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][8] = CreatePlayerTextDraw(playerid, 288.500000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][9] = CreatePlayerTextDraw(playerid, 315.000000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][10] = CreatePlayerTextDraw(playerid, 209.000000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][11] = CreatePlayerTextDraw(playerid, 235.500000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][12] = CreatePlayerTextDraw(playerid, 262.000000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][13] = CreatePlayerTextDraw(playerid, 288.500000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][14] = CreatePlayerTextDraw(playerid, 315.000000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][15] = CreatePlayerTextDraw(playerid, 209.000000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][16] = CreatePlayerTextDraw(playerid, 235.500000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][17] = CreatePlayerTextDraw(playerid, 262.000000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][18] = CreatePlayerTextDraw(playerid, 288.500000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][19] = CreatePlayerTextDraw(playerid, 315.000000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][20] = CreatePlayerTextDraw(playerid, 209.000000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][21] = CreatePlayerTextDraw(playerid, 235.500000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][22] = CreatePlayerTextDraw(playerid, 262.000000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][23] = CreatePlayerTextDraw(playerid, 288.500000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][24] = CreatePlayerTextDraw(playerid, 315.000000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][25] = CreatePlayerTextDraw(playerid, 209.000000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][26] = CreatePlayerTextDraw(playerid, 235.500000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][27] = CreatePlayerTextDraw(playerid, 262.000000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][28] = CreatePlayerTextDraw(playerid, 288.500000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][29] = CreatePlayerTextDraw(playerid, 315.000000, 340.326202, "_");

	for(new i; i < 30; i++)
	{
		PlayerTextDrawLetterSize(playerid, Invent_Menu_Page[playerid][i], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, Invent_Menu_Page[playerid][i], 25.500000, 29.500000);
		PlayerTextDrawAlignment(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Invent_Menu_Page[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, Invent_Menu_Page[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Invent_Menu_Page[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, Invent_Menu_Page[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][i], 0x333333FF);
		PlayerTextDrawFont(playerid, Invent_Menu_Page[playerid][i], 5);
		PlayerTextDrawSetProportional(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);

		PlayerTextDrawLetterSize(playerid, Invent_Menu_PageAmount[playerid][i], 0.101199, 0.500000);
		PlayerTextDrawTextSize(playerid, Invent_Menu_PageAmount[playerid][i], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Invent_Menu_PageAmount[playerid][i], 3);
		PlayerTextDrawColor(playerid, Invent_Menu_PageAmount[playerid][i], 0xAAAAAAFF);
		PlayerTextDrawUseBox(playerid, Invent_Menu_PageAmount[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, Invent_Menu_PageAmount[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Invent_Menu_PageAmount[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, Invent_Menu_PageAmount[playerid][i], 1);
		PlayerTextDrawBackgroundColor(playerid, Invent_Menu_PageAmount[playerid][i], 0x00000000);
		PlayerTextDrawFont(playerid, Invent_Menu_PageAmount[playerid][i], 2);
		PlayerTextDrawSetProportional(playerid, Invent_Menu_PageAmount[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, Invent_Menu_PageAmount[playerid][i], 0);

		switch(type)
		{
			case 1,2: if(i < 30) BuySlotUpdate(playerid, i, type);
		}
	}
	return true;
}
new ScoreInfo[][] =
{
    {329, 330, 331, 318, 332, 333, 319, 1082, 368, Item_SimCard, 321, 322, 339, 340, 334, 338, 336, 337, 1084}// 24/
};
stock BuySlotUpdate(playerid, td, type)
{
	if(!BuyStatus{playerid}) return false;
	new Float:X, Float:Y;
	PlayerTextDrawGetPos(playerid, Invent_Menu_Page[playerid][td], X, Y);
	PlayerTextDrawSetPos(playerid, Invent_Menu_PageAmount[playerid][td], 24.5+X, 23.083336+Y);
	new page = MenuPage[playerid], ID, td2, cell = (30 * page), cost, biz;
	switch(MenuPage[playerid])
	{
		case 1: td2 = td;
		default: td2 = td + (cell - 30)-1;
	}
	//SCMf(playerid, -1, "%i", cell - 30);
	switch(type)
	{
		case 1://Магаз автозамчастей
		{
			ID = 849 + td2;
			if(ID >= 957) ID = 0;
			if(ID)
			{
				cost = GetCostID(ID);
				PlayerTextDrawSetStringf(playerid, Invent_Menu_PageAmount[playerid][td], "%i", cost);
			}
			else
			{
				PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][td], 0x666666FF);
				PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][td], false);
			}
		}
		case 2://Жк Ксиома
		{
			ID = 957 + td2;
			if(ID >= 1075) ID = 0;
			if(ID)
			{
				cost = GetCostID(ID);
				PlayerTextDrawSetStringf(playerid, Invent_Menu_PageAmount[playerid][td], "$%i", cost);
			}
			else
			{
				PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][td], 0x666666FF);
				PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][td], false);
			}
		}
		case 3:
		{
			biz = BizEntered[playerid];
            if(td < sizeof(ScoreInfo)) ID = ScoreInfo[0][td];
            if(ID) cost = BizInfo[biz][bItemCost][td];
		}
	}
	if(ID)
	{
		PI[playerid][pBuyItem][td] = ID;
		PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][td], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
		PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][td], ItemsInfo[ID][ItemModel]);
	}
	PlayerTextDrawShow(playerid, Invent_Menu_Page[playerid][td]);
	return PlayerTextDrawShow(playerid, Invent_Menu_PageAmount[playerid][td]);
}
stock ShowMenuPage(playerid, page, type)
{
	if(MenuPage[playerid] == page) return true;
	new color = InvColor[PI[playerid][pInvColor]][1];
	HideMenuPage(playerid);
	MenuPage[playerid] = page;
	switch(page)
	{
		case 1:
		{
			CreateMenuPage(playerid, 0, 30, type);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][2], color);
	        PlayerTextDrawShow(playerid, Invent_Menu[playerid][2]);
		}
		case 2:
		{
			CreateMenuPage(playerid, 30, 60, type);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][3], 0);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][3], color);
	        PlayerTextDrawShow(playerid, Invent_Menu[playerid][3]);
		}
		case 3:
		{
			CreateMenuPage(playerid, 60, 90, type);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][4], 0);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][4], color);
	        PlayerTextDrawShow(playerid, Invent_Menu[playerid][4]);
		}
		case 4:
		{
			CreateMenuPage(playerid, 90, 120, type);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][5], 0);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][5], color);
	        PlayerTextDrawShow(playerid, Invent_Menu[playerid][5]);
		}
		case 5:
		{
			CreateMenuPage(playerid, 120, 150, type);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][6], 0);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][6], color);
	        PlayerTextDrawShow(playerid, Invent_Menu[playerid][6]);
		}
	}
	return true;
}
stock CreateMenuPage(playerid, id, id2, type)
{
	//SCMf(playerid, -1, "%i", type);
	Invent_Menu_Page[playerid][id] = CreatePlayerTextDraw(playerid, 184.500000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+1] = CreatePlayerTextDraw(playerid, 211.000000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+2] = CreatePlayerTextDraw(playerid, 237.500000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+3] = CreatePlayerTextDraw(playerid, 264.000000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+4] = CreatePlayerTextDraw(playerid, 290.500000, 164.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+5] = CreatePlayerTextDraw(playerid, 184.500000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+6] = CreatePlayerTextDraw(playerid, 211.000000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+7] = CreatePlayerTextDraw(playerid, 237.500000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+8] = CreatePlayerTextDraw(playerid, 264.000000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+9] = CreatePlayerTextDraw(playerid, 290.500000, 195.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+10] = CreatePlayerTextDraw(playerid, 184.500000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+11] = CreatePlayerTextDraw(playerid, 211.000000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+12] = CreatePlayerTextDraw(playerid, 237.500000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+13] = CreatePlayerTextDraw(playerid, 264.000000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+14] = CreatePlayerTextDraw(playerid, 290.500000, 225.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+15] = CreatePlayerTextDraw(playerid, 184.500000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+16] = CreatePlayerTextDraw(playerid, 211.000000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+17] = CreatePlayerTextDraw(playerid, 237.500000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+18] = CreatePlayerTextDraw(playerid, 264.000000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+19] = CreatePlayerTextDraw(playerid, 290.500000, 256.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+20] = CreatePlayerTextDraw(playerid, 184.500000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+21] = CreatePlayerTextDraw(playerid, 211.000000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+22] = CreatePlayerTextDraw(playerid, 237.500000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+23] = CreatePlayerTextDraw(playerid, 264.000000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+24] = CreatePlayerTextDraw(playerid, 290.500000, 286.742859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+25] = CreatePlayerTextDraw(playerid, 184.500000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+26] = CreatePlayerTextDraw(playerid, 211.000000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+27] = CreatePlayerTextDraw(playerid, 237.500000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+28] = CreatePlayerTextDraw(playerid, 264.000000, 317.242859, "LD_SPAC:white");
	Invent_Menu_Page[playerid][id+29] = CreatePlayerTextDraw(playerid, 290.500000, 317.242859, "LD_SPAC:white");

	Invent_Menu_PageAmount[playerid][id] = CreatePlayerTextDraw(playerid, 209.000000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][id+1] = CreatePlayerTextDraw(playerid, 235.500000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][id+2] = CreatePlayerTextDraw(playerid, 262.000000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][id+3] = CreatePlayerTextDraw(playerid, 288.500000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][id+4] = CreatePlayerTextDraw(playerid, 315.000000, 187.826187, "_");
	Invent_Menu_PageAmount[playerid][id+5] = CreatePlayerTextDraw(playerid, 209.000000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][id+6] = CreatePlayerTextDraw(playerid, 235.500000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][id+7] = CreatePlayerTextDraw(playerid, 262.000000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][id+8] = CreatePlayerTextDraw(playerid, 288.500000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][id+9] = CreatePlayerTextDraw(playerid, 315.000000, 218.326187, "_");
	Invent_Menu_PageAmount[playerid][id+10] = CreatePlayerTextDraw(playerid, 209.000000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][id+11] = CreatePlayerTextDraw(playerid, 235.500000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][id+12] = CreatePlayerTextDraw(playerid, 262.000000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][id+13] = CreatePlayerTextDraw(playerid, 288.500000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][id+14] = CreatePlayerTextDraw(playerid, 315.000000, 248.826187, "_");
	Invent_Menu_PageAmount[playerid][id+15] = CreatePlayerTextDraw(playerid, 209.000000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][id+16] = CreatePlayerTextDraw(playerid, 235.500000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][id+17] = CreatePlayerTextDraw(playerid, 262.000000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][id+18] = CreatePlayerTextDraw(playerid, 288.500000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][id+19] = CreatePlayerTextDraw(playerid, 315.000000, 279.326202, "_");
	Invent_Menu_PageAmount[playerid][id+20] = CreatePlayerTextDraw(playerid, 209.000000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][id+21] = CreatePlayerTextDraw(playerid, 235.500000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][id+22] = CreatePlayerTextDraw(playerid, 262.000000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][id+23] = CreatePlayerTextDraw(playerid, 288.500000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][id+24] = CreatePlayerTextDraw(playerid, 315.000000, 309.826202, "_");
	Invent_Menu_PageAmount[playerid][id+25] = CreatePlayerTextDraw(playerid, 209.000000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][id+26] = CreatePlayerTextDraw(playerid, 235.500000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][id+27] = CreatePlayerTextDraw(playerid, 262.000000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][id+28] = CreatePlayerTextDraw(playerid, 288.500000, 340.326202, "_");
	Invent_Menu_PageAmount[playerid][id+29] = CreatePlayerTextDraw(playerid, 315.000000, 340.326202, "_");

	for(new i = id; i < id2; i++)
	{
		PlayerTextDrawLetterSize(playerid, Invent_Menu_Page[playerid][i], 0.480000, 1.120000);
		PlayerTextDrawTextSize(playerid, Invent_Menu_Page[playerid][i], 25.500000, 29.500000);
		PlayerTextDrawAlignment(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, Invent_Menu_Page[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, Invent_Menu_Page[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Invent_Menu_Page[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, Invent_Menu_Page[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][i], 0x333333FF);
		PlayerTextDrawFont(playerid, Invent_Menu_Page[playerid][i], 5);
		PlayerTextDrawSetProportional(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], 1);
		PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][i], 1649);
		PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);

		PlayerTextDrawLetterSize(playerid, Invent_Menu_PageAmount[playerid][i], 0.126499, 0.625000);
		PlayerTextDrawTextSize(playerid, Invent_Menu_PageAmount[playerid][i], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Invent_Menu_PageAmount[playerid][i], 3);
		PlayerTextDrawColor(playerid, Invent_Menu_PageAmount[playerid][i], 0xAAAAAAFF);
		PlayerTextDrawUseBox(playerid, Invent_Menu_PageAmount[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, Invent_Menu_PageAmount[playerid][i], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Invent_Menu_PageAmount[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, Invent_Menu_PageAmount[playerid][i], 1);
		PlayerTextDrawBackgroundColor(playerid, Invent_Menu_PageAmount[playerid][i], 0x00000000);
		PlayerTextDrawFont(playerid, Invent_Menu_PageAmount[playerid][i], 2);
		PlayerTextDrawSetProportional(playerid, Invent_Menu_PageAmount[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, Invent_Menu_PageAmount[playerid][i], 0);
		
		new Float:PosEnchantX, Float:PosEnchantY;
        PlayerTextDrawGetPos(playerid, Invent_Menu_PageAmount[playerid][i], PosEnchantX, PosEnchantY);
        Invent_Menu_PageEnchant[playerid][i] = CreatePlayerTextDraw(playerid, PosEnchantX, PosEnchantY, "_");
        PlayerTextDrawLetterSize(playerid, Invent_Menu_PageEnchant[playerid][i], 0.126499, 0.625000);
        PlayerTextDrawTextSize(playerid, Invent_Menu_PageEnchant[playerid][i], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, Invent_Menu_PageEnchant[playerid][i], 3);
        PlayerTextDrawColor(playerid, Invent_Menu_PageEnchant[playerid][i], 0xAAAAAAFF);
        PlayerTextDrawUseBox(playerid, Invent_Menu_PageEnchant[playerid][i], 0);
        PlayerTextDrawBoxColor(playerid, Invent_Menu_PageEnchant[playerid][i], 0x80808080);
        PlayerTextDrawSetShadow(playerid, Invent_Menu_PageEnchant[playerid][i], 0);
        PlayerTextDrawSetOutline(playerid, Invent_Menu_PageEnchant[playerid][i], 1);
        PlayerTextDrawBackgroundColor(playerid, Invent_Menu_PageEnchant[playerid][i], 0x00000000);
        PlayerTextDrawFont(playerid, Invent_Menu_PageEnchant[playerid][i], 2);
        PlayerTextDrawSetProportional(playerid, Invent_Menu_PageEnchant[playerid][i], 1);
        PlayerTextDrawSetSelectable(playerid, Invent_Menu_PageEnchant[playerid][i], 0);
        
		MenuSlotUpdate(playerid, i, type);
	}
	switch(type)
	{
		case 1://Мусорка (5 стр)
		{
			for(new i = 2; i < 7; i++) if(IsPlayerTextDrawVisible(playerid, Invent_Menu[playerid][i])) DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
			//=============================[ Стр меню 1 ]=============================//
			Invent_Menu[playerid][2] = CreatePlayerTextDraw(playerid, 231.250000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][2], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][2], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][2], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][2], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][2], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][2], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][2], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][2], 1);
			//=============================[ Стр меню 2 ]=============================//
			Invent_Menu[playerid][3] = CreatePlayerTextDraw(playerid, 240.750000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][3], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][3], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][3], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][3], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][3], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][3], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][3], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][3], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][3], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][3], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][3], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][3], 1);
			//=============================[ Стр меню 3 ]=============================//
			Invent_Menu[playerid][4] = CreatePlayerTextDraw(playerid, 250.250000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][4], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][4], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][4], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][4], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][4], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][4], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][4], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][4], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][4], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][4], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][4], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][4], 1);
			//=============================[ Стр меню 4 ]=============================//
			Invent_Menu[playerid][5] = CreatePlayerTextDraw(playerid, 259.750000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][5], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][5], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][5], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][5], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][5], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][5], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][5], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][5], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][5], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][5], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][5], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][5], 1);
			//=============================[ Стр меню 5 ]=============================//
			Invent_Menu[playerid][6] = CreatePlayerTextDraw(playerid, 269.250000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][6], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][6], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][6], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][6], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][6], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][6], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][6], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][6], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][6], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][6], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][6], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][6], 1);
			for(new i = 2; i < 7; i++) PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
		}
		case 2://Шкаф (3 стр)
		{
			for(new i = 2; i < 5; i++) if(IsPlayerTextDrawVisible(playerid, Invent_Menu[playerid][i])) DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
			//=============================[ Стр меню 1 ]=============================//
			Invent_Menu[playerid][2] = CreatePlayerTextDraw(playerid, 231.250000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][2], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][2], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][2], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][2], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][2], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][2], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][2], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][2], 1);
			//=============================[ Стр меню 2 ]=============================//
			Invent_Menu[playerid][3] = CreatePlayerTextDraw(playerid, 240.750000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][3], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][3], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][3], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][3], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][3], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][3], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][3], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][3], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][3], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][3], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][3], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][3], 1);
			//=============================[ Стр меню 3 ]=============================//
			Invent_Menu[playerid][4] = CreatePlayerTextDraw(playerid, 250.250000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][4], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][4], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][4], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][4], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][4], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][4], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][4], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][4], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][4], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][4], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][4], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][4], 1);
			for(new i = 2; i < 5; i++) PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
		}
		case 3://Багажник (1 стр)
		{
			if(IsPlayerTextDrawVisible(playerid, Invent_Menu[playerid][2])) DestroyPlayerTD(playerid, Invent_Menu[playerid][2]);
			//=============================[ Стр меню 1 ]=============================//
			Invent_Menu[playerid][2] = CreatePlayerTextDraw(playerid, 231.250000, 351.242859, "LD_BEAT:chit");
			PlayerTextDrawLetterSize(playerid, Invent_Menu[playerid][2], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu[playerid][2], 8.500000, 9.833333);
			PlayerTextDrawAlignment(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawColor(playerid, Invent_Menu[playerid][2], 0x333333FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu[playerid][2], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu[playerid][2], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu[playerid][2], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu[playerid][2], 0x000000FF);
			PlayerTextDrawFont(playerid, Invent_Menu[playerid][2], 4);
			PlayerTextDrawSetProportional(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][2], 1);
			PlayerTextDrawShow(playerid, Invent_Menu[playerid][2]);
		}
	}
	return true;
}
stock ShowInvMenu(playerid, type)
{
	if(MenuStatus{playerid}) return false;
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideInv(playerid, 0, 1);
	HideTextDraws(playerid, 7);
	HideLogo(playerid);
	#include ../library/TEXTDRAWS/inv/inv_menu
	switch(type)
	{
		case 1://Мусорка
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "TRASH");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("МУСОРКА"));
		}
		case 2://Шкаф
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "WAREHOUSE");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("ШКАФ"));
			PlayerTextDrawSetSelectable(playerid, Invent_Menu[playerid][1], 1);
			PlayerTextDrawSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", HouseInfo[HouseID[playerid]][hMoney]);
		}
		case 3://Багажник
		{
			if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "TRUNK");
			else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("БАГАЖНИК"));
		}
	}
	for(new i; i < 18; i++)
	{
		PlayerTextDrawShow(playerid, Invent[playerid][i]);
		if(i < 2)
		{
			PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			PlayerTextDrawShow(playerid, InventButton[playerid][i]);
		}
	}
	MenuStatus{playerid} = true;
	ShowMenuPage(playerid, 1, type);
	ShowInvPage(playerid, page);
	return true;
}
stock HideInvMenu(playerid)
{
	if(!MenuStatus{playerid}) return false;
	switch(GetPVarInt(playerid, !"InvType"))
	{
		case 1: for(new i = 2; i < 7; i++) DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
		case 2: for(new i = 2; i < 5; i++) DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
		case 3: DestroyPlayerTD(playerid, Invent_Menu[playerid][2]);
	}
	if(BuyStatus{playerid})
	{
		for(new i; i < 7; i++) DestroyPlayerTD(playerid, Item_Menu_Shop[playerid][i]);
		DeletePVar(playerid, !"BuyMenuType");
	}
	//SCMf(playerid, -1, "%i", GetPVarInt(playerid, !"InvType"));
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItemLock][i]) PI[playerid][pInvItemLock][i] = 0;
		if(i < 18) DestroyPlayerTD(playerid, Invent[playerid][i]);
		if(i < 2)
		{
			DestroyPlayerTD(playerid, Invent_Menu[playerid][i]);
			DestroyPlayerTD(playerid, InventButton[playerid][i]);
			if(i < 1)
			{
				DeletePVar(playerid, "InvType");
				if(HouseID[playerid] != -1) HouseID[playerid] = -1;
				if(TrashID[playerid] != -1) TrashID[playerid] = -1;
				if(idaofcar[playerid]) idaofcar[playerid] = 0;
			}
		}
	}
	HideInvPage(playerid);
	HideMenuPage(playerid);
	if(BuyStatus{playerid}) BuyStatus{playerid} = false;
	MenuStatus{playerid} = false;
	if(InvLockItem{playerid}) InvLockItem{playerid} = false;
	return true;
}
stock CheckLic(playerid)
{
	if(gettime() >= PI[playerid][pCarLic]) ResetLiccenses(playerid, Item_Car_Lic, -1);
	if(gettime() >= PI[playerid][pBikeLic]) ResetLiccenses(playerid, Item_Bike_Lic, -1);
	if(gettime() >= PI[playerid][pFlyLic]) ResetLiccenses(playerid, Item_Fly_Lic, -1);
	if(gettime() >= PI[playerid][pBoatLic]) ResetLiccenses(playerid, Item_Boat_Lic, -1);
	if(gettime() >= PI[playerid][pFishLic]) ResetLiccenses(playerid, Item_Fish_Lic, -1);
	if(gettime() >= PI[playerid][pGunLic]) ResetLiccenses(playerid, Item_Gun_Lic, -1);
	if(gettime() >= PI[playerid][pHuntLic]) ResetLiccenses(playerid, Item_Hunt_Lic, -1);
	return 1;
}
stock SetSelectableSkin(playerid)
{
	new skin = GetPlayerSkin(playerid), selectable;
	if(skin != 18 && skin != 139) selectable = 1;
	if(PI[playerid][pModSlot]) selectable = 1;
	return PlayerTextDrawSetSelectable(playerid, Invent[playerid][48], selectable);
}
stock SetPreviewSkin(playerid, ID = 0)
{
	new skin = GetPlayerSkin(playerid);
	if(PI[playerid][pModSlot])
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], ItemsInfo[ID][ItemModel]);
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	}
	else if(skin != 18 && skin != 139)
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 2386);
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 346.000000, 0.000000, 129.000000, 0.900000);
	}
	else
	{
		PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 1649);
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 0.000000, 0.000000, 90.000000, 2.000000);
	}
	return 1;
}
stock CheckModPlayer(playerid)
{
	if(PI[playerid][pModSlot])
	{
		new ID = PI[playerid][pModSlot];
		PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0x333333FF);
		SetPreviewSkin(playerid, ID);
		SetSelectableSkin(playerid);
	}
	else
	{
		SetSelectableSkin(playerid);
		PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0x333333FF);
		SetPreviewSkin(playerid);
	}
	PlayerTextDrawShow(playerid, Invent[playerid][48]);
	return 1;
}
stock ShowBuyMenu(playerid, type)
{
	if(BuyStatus{playerid}) return false;
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideTextDraws(playerid, 7);
	HideLogo(playerid);
	#include ../library/TEXTDRAWS/inv/inv_menu
	CreatePageButton(playerid);
	if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], "SHOP");
	else PlayerTextDrawSetString(playerid, Invent_Menu[playerid][0], FixText("МАГАЗИН"));
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		PI[playerid][pInvItemLock][i] = 1;
		if(i < 18) PlayerTextDrawShow(playerid, Invent[playerid][i]);
		if(i < 7) PlayerTextDrawShow(playerid, Item_Menu_Shop[playerid][i]);
		if(i < 2)
		{
			PlayerTextDrawShow(playerid, Invent_Menu[playerid][i]);
			PlayerTextDrawShow(playerid, InventButton[playerid][i]);
		}
	}
	if(InvLockItem{playerid}) InvLockItem{playerid} = false;
	MenuStatus{playerid} = true;
	BuyStatus{playerid} = true;
	SetPVarInt(playerid, !"BuyMenuType", type);
	ShowBuyPage(playerid, 1, type);
	ShowInvPage(playerid, page);
	return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
}
stock ShowInv(playerid, cursor = 1, page = 1)
{
	if(pTemp[playerid][pKladProgress]) return false;
	if(InventStatus{playerid}) return false;
	if(PlayerLieHeal[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете в таком состоянии использовать инвентарь.");
    HideTextDraws(playerid, 1);
    HideLogo(playerid);
    CheckLic(playerid);
    #include ../library/TEXTDRAWS/inv/inv
    for(new i; i < 8; i++) InventAksSlot[playerid][i] = CreatePlayerTextDraw(playerid, 0.0, 0.0, "");
    CreateButtonInv(playerid);
    InventStatus{playerid} = true;
    if(InvLockItem{playerid}) InvLockItem{playerid} = false;
    ShowInvPage(playerid, page);
	SetPlayerChatBubble(playerid, !"Заглянул(а) в карман", COLOR_PURPLE, 10.0, 1500);
	SetInvLang(playerid);
	new carid = GetPlayerVehicleID(playerid);
	new number = GetVehicleID(carid);
	if(IsPlayerInHisVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		#include ../library/TEXTDRAWS/inv/inv_car
		InvCarOpen{playerid} = true;
		new Float:health;
	    GetVehicleHealth(carid, health);
	    PlayerTextDrawSetStringf(playerid, Invent[playerid][38], "HP: %.0f", health);
	    if(GetVehicleModel(carid) > 611 && !IsPlayerLauncher(playerid)) PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], NewCar[GetItemNewCar(GetVehicleModel(carid))][NewCarClient]);
	    else PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], GetVehicleModel(carid));
		PlayerTextDrawSetPreviewVehCol(playerid, Invent[playerid][47], CarInfo[number][cColor_1], CarInfo[number][cColor_2]);
		PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][47], 352.000000, 345.000000, 20.000000, 1.032325);
	}
	if(!InvCarOpen{playerid})
	{
		new skin = GetPlayerSkin(playerid);
	    new Float:health;
	    GetPlayerHealth(playerid, health);
	    PlayerTextDrawSetStringf(playerid, Invent[playerid][38], "HP: %.0f", health);
	    new Float:armour;
	    GetPlayerArmour(playerid, armour);
	    PlayerTextDrawSetStringf(playerid, Invent[playerid][37], "ARM: %.0f", armour);
		if(skin > 311 && !IsPlayerLauncher(playerid)) PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], NewSkin[GetItemNewSkin(skin)][NewSkinClient]);
		else PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][47], skin);
		if(skin != 18 && skin != 139)
		{
			PlayerTextDrawSetStringf(playerid, Invent[playerid][49], "ID:%i", GetItemNewSkin(skin)+312);
			PlayerTextDrawSetPreviewModel(playerid, Invent[playerid][48], 2386);
			PlayerTextDrawSetPreviewRot(playerid, Invent[playerid][48], 346.000000, 0.000000, 129.000000, 0.900000);
			SetSelectableSkin(playerid);
		}
		CheckModPlayer(playerid);
	}
    for(new i; i < 51; i++)
    {
        if(InvCarOpen{playerid})
        {
            if(i < 17) PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
            if(i < 8) UpdateSlotModCar(playerid, i, number);
            switch(i)
            {
           		case 37,49,48,50: continue;
            }
        }
        else if(i < 8 && !InvCarOpen{playerid}) UpdateSlotAcs(playerid, i);
    	PlayerTextDrawShow(playerid, Invent[playerid][i]);
    }
    if(cursor) SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	return true;
}
stock HideInv(playerid, change = 0, menu = 0)
{
	if(!InventStatus{playerid}) return false;
	for(new i; i < 51; i++)
	{
		if(IsPlayerTextDrawVisible(playerid, Invent[playerid][i])) DestroyPlayerTD(playerid, Invent[playerid][i]);
		if(i < 17 && IsPlayerTextDrawVisible(playerid, InvOwnableCar[playerid][i])) DestroyPlayerTD(playerid, InvOwnableCar[playerid][i]);
		if(i < 8 && IsPlayerTextDrawVisible(playerid, InventAks[playerid][i])) DestroyPlayerTD(playerid, InventAks[playerid][i]);
		if(i < 2 && IsPlayerTextDrawVisible(playerid, InventButton[playerid][i])) DestroyPlayerTD(playerid, InventButton[playerid][i]);
		if(i < 8 && IsPlayerTextDrawVisible(playerid, InventAksEnchant[playerid][i])) DestroyPlayerTD(playerid, InventAksEnchant[playerid][i]);
		if(i < 1 && !menu)
		{
			DeletePVar(playerid, "InvType");
			if(HouseID[playerid] != -1) HouseID[playerid] = -1;
			if(TrashID[playerid] != -1) TrashID[playerid] = -1;
			if(idaofcar[playerid]) idaofcar[playerid] = 0;
		}
	}
	for(new i; i < 8; i++) DestroyPlayerTD(playerid, InventAksSlot[playerid][i]);
    HideInvPage(playerid);
    HideInventMenu(playerid);
    if(InvLockItem{playerid}) InvLockItem{playerid} = false;
    if(InvCarOpen{playerid}) InvCarOpen{playerid} = false;
	if(InvTimer[playerid] && !change)
	{
		KillTimer(InvTimer[playerid]);
		InvTimer[playerid] = 0;
		SaveChangeInv(playerid);
	}
    InventClick{playerid} = 255;
    InventStatus{playerid} = false;
    return 1;
}
stock UpdateSlotAcs(playerid, slot)
{
	if(IsPlayerTextDrawVisible(playerid, InventAksSlot[playerid][slot])) PlayerTextDrawHide(playerid, InventAksSlot[playerid][slot]);
	if(IsPlayerTextDrawVisible(playerid, InventAksEnchant[playerid][slot])) DestroyPlayerTD(playerid, InventAksEnchant[playerid][slot]);
	if(!PI[playerid][pInvItemAcs][slot])
	{
		PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], 1649);
		PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], 0.000000, 0.000000, 90.000000, 2.000000);
		SetColorUseAcs(playerid, 0, slot);
		return true;
	}
	new ID = PI[playerid][pInvItemAcs][slot], Float:X, Float:Y;
	if(PI[playerid][pInvItemAcsEnchant][slot])
	{
		PlayerTextDrawGetPos(playerid, InventAks[playerid][slot], X, Y);
		InventAksEnchant[playerid][slot] = CreatePlayerTextDraw(playerid, X+21.0, Y+19.0, "_");
		PlayerTextDrawLetterSize(playerid, InventAksEnchant[playerid][slot], 0.126499, 0.625000);
		PlayerTextDrawTextSize(playerid, InventAksEnchant[playerid][slot], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, InventAksEnchant[playerid][slot], 3);
		PlayerTextDrawColor(playerid, InventAksEnchant[playerid][slot], 0xAAAAAAFF);
		PlayerTextDrawUseBox(playerid, InventAksEnchant[playerid][slot], 0);
		PlayerTextDrawBoxColor(playerid, InventAksEnchant[playerid][slot], 0x80808080);
		PlayerTextDrawSetShadow(playerid, InventAksEnchant[playerid][slot], 0);
		PlayerTextDrawSetOutline(playerid, InventAksEnchant[playerid][slot], 1);
		PlayerTextDrawBackgroundColor(playerid, InventAksEnchant[playerid][slot], 0x00000000);
		PlayerTextDrawFont(playerid, InventAksEnchant[playerid][slot], 2);
		PlayerTextDrawSetProportional(playerid, InventAksEnchant[playerid][slot], 1);
		PlayerTextDrawSetSelectable(playerid, InventAksEnchant[playerid][slot], 0);
		PlayerTextDrawSetStringf(playerid, InventAksEnchant[playerid][slot], "+%i", PI[playerid][pInvItemAcsEnchant][slot]);
		PlayerTextDrawShow(playerid, InventAksEnchant[playerid][slot]);
	}
	PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], ItemsInfo[PI[playerid][pInvItemAcs][slot]][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	ShowAksSlotColor(playerid, slot);
	SetColorUseAcs(playerid, ID, slot);
	return true;
}
stock ShowAksSlotColor(playerid, slot)
{
	if(!PI[playerid][pInvItemAcsColor][slot]) return false;
	new Float:X, Float:Y;

	PlayerTextDrawGetPos(playerid, InventAks[playerid][slot], X, Y);
	PlayerTextDrawSetPos(playerid, InventAksSlot[playerid][slot], X+18.5, Y+2.5);
	PlayerTextDrawSetString(playerid, InventAksSlot[playerid][slot], "Box");
	PlayerTextDrawLetterSize(playerid, InventAksSlot[playerid][slot], 0.000000, 0.107900);
	PlayerTextDrawTextSize(playerid, InventAksSlot[playerid][slot], X+19.8125, 0.000000);
	PlayerTextDrawAlignment(playerid, InventAksSlot[playerid][slot], 1);
	PlayerTextDrawColor(playerid, InventAksSlot[playerid][slot], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, InventAksSlot[playerid][slot], 1);
	PlayerTextDrawBoxColor(playerid, InventAksSlot[playerid][slot], PI[playerid][pInvItemAcsColor][slot]);
	PlayerTextDrawSetShadow(playerid, InventAksSlot[playerid][slot], 2);
	PlayerTextDrawSetOutline(playerid, InventAksSlot[playerid][slot], 0);
	PlayerTextDrawBackgroundColor(playerid, InventAksSlot[playerid][slot], 0x000000FF);
	PlayerTextDrawFont(playerid, InventAksSlot[playerid][slot], 0);
	PlayerTextDrawSetProportional(playerid, InventAksSlot[playerid][slot], 1);
	PlayerTextDrawShow(playerid, InventAksSlot[playerid][slot]);
	return 1;
}
stock SetColorUseAcs(playerid, ID, slot)
{
	switch(ID)
	{
		case AcsMenuUse: PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0xAB9154FF);
		default: PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
	}
	PlayerTextDrawColor(playerid, InventAks[playerid][slot], PI[playerid][pAcsCellLock][slot] ? 0x999999FF : 0xFFFFFFFF);
	PlayerTextDrawSetSelectable(playerid, InventAks[playerid][slot], PI[playerid][pAcsCellLock][slot] ? false : true);
	return PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
}
stock HideInventMenu(playerid)
{
	if(InventCreatedMenu[playerid] == -1) return 1;
	for(new i; i < InventCreatedMenu[playerid]; i++) DestroyPlayerTD(playerid, InventMenu[playerid][i]);
	for(new i; i < 6; i ++) InventMenuButton[playerid][i] = -1;
    InventCreatedMenu[playerid] = -1;
    return 1;
}
stock HideTextDraws(playerid, next = 0)
{
	if(DEBUG_ON) SCMf(playerid, -1, "HideTextDraws(playerid, next = %i)", next);
	if(next != 1 && InventStatus{playerid}) HideInv(playerid);
	if(next != 2 && donateopen{playerid}) HideDonateTD(playerid);
	if(next != 3 && bumboxopen{playerid} ) HideBoom(playerid);
	if(next != 4 && RouletteOpen{playerid}) HideRoulette(playerid);
	if(next != 5) HidePhone(playerid);
	if(next != 6 && GetPVarInt(playerid, !"pSpeed")) HideSpeedometr(playerid);
	if(next != 7 && MenuStatus{playerid} && !ProccesEnchant[playerid]) HideInvMenu(playerid);
	if(next != 8 && TradeOpen{playerid})
	{
		HideTrade(playerid);
		HideTrade(TradeID[playerid]);
		CancelTrade(playerid);
	}
	//if(next != 9 && ContainerTDOpen{playerid}) HideContainerTD(playerid);
	if(next != 10 && CraftOpened{playerid}) HideCraft(playerid);
	if(next != 11 && EnchantOpen{playerid}) HideEnchant(playerid);
	if(next != 12 && ContainerTakeOpen{playerid}) ContainerCloseTake(playerid);
	if(next != 13 && StallOpen{playerid}) HideStall(playerid);
	return 1;
}
stock ShowDonateTD(playerid)
{
	if(donateopen{playerid}) return false;
	if(DEBUG_ON) SCM(playerid, -1, "ShowDonateTD(playerid)");
	#include ../library/TEXTDRAWS/donate
	for(new i; i < 88; i++)
	{
	    TextDrawShowForPlayer(playerid, Donate_Global[i]);
	    if(i < 42) PlayerTextDrawShow(playerid, Donate_Player[playerid][i]);
	}
	SCM(playerid, COLOR_LIGHTRED, !"Чтобы закрыть донат меню, используйте: {FFFFFF}'ESC'");
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	donateopen{playerid} = true;
	return 1;
}
stock HideDonateTD(playerid)
{
	if(!donateopen{playerid}) return false;
	if(DEBUG_ON) SCM(playerid, -1, "HideDonateTD(playerid)");
    for(new i; i < 88; i++)
    {
        TextDrawHideForPlayer(playerid, Donate_Global[i]);
        if(i < 42) DestroyPlayerTD(playerid, Donate_Player[playerid][i]);
        if(i < 3) DestroyPlayerTD(playerid, Donate_Text[playerid][i]);
    }
    donateopen{playerid} = false;
    Donate_Select[playerid] = -1;
	return 1;
}
stock RefreshInv(playerid, i, update = 1, save = 1)
{
    PI[playerid][pInvItem][i] = 0;
    PI[playerid][pInvItemAmount][i] = 0;
    PI[playerid][pInvItemColor][i] = 0;
    PI[playerid][pInvItemEnchant][i] = 0;
    PI[playerid][pInvItemMining][i] = 1;
    if(update) InvSlotUpdate(playerid, i);
    if(SAVE_PLAYER_INV && save) SaveInv(playerid, 1, i);
    return 1;
}
stock CheckInvItem(playerid, type)
{
	if(!InventStatus{playerid} || InventClick{playerid} == 255) return false;
	new 
		itemID = PI[playerid][pInvItem][InventClick{playerid}],
		itemColor = PI[playerid][pInvItemColor][InventClick{playerid}],
		itemEnchant = PI[playerid][pInvItemEnchant][InventClick{playerid}];
	//SCMf(playerid, -1, "CheckInvItem type - %i itemID - %i", type, itemID);
	switch(type)
	{
		case 0:
		{
			switch(itemID)
			{
				case 1..311,801..818,1101..1171:
				{
					if(InvCarOpen{playerid}) return 1;
	                PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0x333333FF);
	                SetSelectableSkin(playerid);
	                CheckModPlayer(playerid);
				}
				case AcsSlot1://1-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][0], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][0]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot2://2-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][1], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][1]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot3://3-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][2], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][2]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot4://4-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][3], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][3]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot5://5-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][4], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][4]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot6://6-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][5], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][5]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot7://7-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][6], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][6]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case AcsSlot8://8-ый слот аксы
				{
					if(InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][7], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][7]);
	                UseAcsID[playerid] = 0;
	                UseAcsColor[playerid] = 0;
	                UseAcsEnchant[playerid] = 0;
				}
				case Item_Aksioma,IventCarSlot:
                {
                    if(!InvCarOpen{playerid}) return 1;
                    new slot = SearchSlotCar(playerid);
                    new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
                    {
                        if(!CarInfo[number][cSlotItem][slot])
                        {
                            UseModCar[playerid][slot] = 0;
                            PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
                            return PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
                        }
                    }
                }
				case CarSlot7: //7-ый слот аксы для авто
				{
					if(!InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][6], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][6]);
	                UseModCar[playerid][6] = 0;
				}
				case CarSlot8: //8-ый слот аксы для авто
				{
					if(!InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][7], 0x333333FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][7]);
	                UseModCar[playerid][7] = 0;
				}
			}
		}
		case 1:
		{
			switch(itemID)
			{
				case 1..311,801..818,1101..1171:
				{
					if(InvCarOpen{playerid}) return 1;
		            PlayerTextDrawBackgroundColor(playerid, Invent[playerid][48], 0xD57272FF);
		            PlayerTextDrawSetSelectable(playerid, Invent[playerid][48], 1);
		            PlayerTextDrawShow(playerid, Invent[playerid][48]);
				}
				case AcsSlot1://1-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][0], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][0]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot2://2-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][1], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][1]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot3://3-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][2], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][2]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot4://4-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][3], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][3]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot5://5-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][4], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][4]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot6://6-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][5], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][5]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot7://7-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][6], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][6]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
				case AcsSlot8://8-ый слот аксы
				{
					if(InvCarOpen{playerid} || PI[playerid][pModSlot]) return 1;
	                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][7], 0xD57272FF);
	                PlayerTextDrawShow(playerid, InventAks[playerid][7]);
	                UseAcsID[playerid] = itemID;
	                UseAcsColor[playerid] = itemColor;
	                UseAcsEnchant[playerid] = itemEnchant;
				}
                case Item_Aksioma,IventCarSlot:
                {
                    if(!InvCarOpen{playerid}) return 1;
                    new slot = SearchSlotCar(playerid);
                    new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
                    {
                        if(!CarInfo[number][cSlotItem][slot])
                        {
                            UseModCar[playerid][slot] = itemID;
                            PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0xD57272FF);
                            return PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
                        }
                    }
                }
				case CarSlot7: //7-ый слот аксы для авто
				{
					if(!InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][6], 0xD57272FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][6]);
	                UseModCar[playerid][6] = itemID;
				}
				case CarSlot8: //8-ый слот аксы для авто
				{
					if(!InvCarOpen{playerid}) return 1;
					PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][7], 0xD57272FF);
					PlayerTextDrawShow(playerid, InventAks[playerid][7]);
	                UseModCar[playerid][7] = itemID;
				}
			}
		}
	}
	return 1;
}
stock MenuCellUpdate(playerid, td, ID, Color, Amount, Enchant, Mining)
{
	new Float:X, Float:Y;
	PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][td], ItemsInfo[ID][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][td], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	if(ID >= 400 || ID <= 610) PlayerTextDrawSetPreviewVehCol(playerid, Invent_Menu_Page[playerid][td], 0, 0);
	PlayerTextDrawGetPos(playerid, Invent_Menu_Page[playerid][td], X, Y);
	PlayerTextDrawSetPos(playerid, Invent_Menu_PageAmount[playerid][td], 24.5+X, 23.083336+Y);
	PlayerTextDrawSetPos(playerid, Invent_Menu_PageEnchant[playerid][td], 24.5+X, 23.083336+Y);
	PlayerTextDrawLetterSize(playerid, Invent_Menu_PageAmount[playerid][td], 0.126499, 0.625000);
	PlayerTextDrawAlignment(playerid, Invent_Menu_PageAmount[playerid][td], 3);
	PlayerTextDrawColor(playerid, Invent_Menu_PageAmount[playerid][td], 0xAAAAAAFF);
	PlayerTextDrawUseBox(playerid, Invent_Menu_PageAmount[playerid][td], 0);
	PlayerTextDrawBoxColor(playerid, Invent_Menu_PageAmount[playerid][td], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Invent_Menu_PageAmount[playerid][td], 0);
	PlayerTextDrawSetOutline(playerid, Invent_Menu_PageAmount[playerid][td], 1);
	PlayerTextDrawBackgroundColor(playerid, Invent_Menu_PageAmount[playerid][td], 0x00000000);
	PlayerTextDrawFont(playerid, Invent_Menu_PageAmount[playerid][td], 2);
	PlayerTextDrawSetProportional(playerid, Invent_Menu_PageAmount[playerid][td], 1);
	PlayerTextDrawSetSelectable(playerid, Invent_Menu_PageAmount[playerid][td], 0);

	UpdateCell(playerid, Invent_Menu_Page[playerid][td], Invent_Menu_PageAmount[playerid][td], ID, Amount, Enchant, Mining, Invent_Menu_PageEnchant[playerid][td]);

	if(!Color) PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][td], 0x333333FF);
	else PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][td], Color);
	PlayerTextDrawShow(playerid, Invent_Menu_Page[playerid][td]);
	return 1;
}
stock MenuSlotUpdate(playerid, td, type)
{
	if(!MenuStatus{playerid} && !TradeOpen{playerid}) return false;
	switch(MenuPage[playerid])
	{
		case 1:
		{
			switch(td)
			{
				case 30..149: return false;
			}
		}
		case 2:
		{
			switch(td)
			{
				case 0..29,60..149: return false;
			}
		}
		case 3:
		{
			switch(td)
			{
				case 0..59,90..149: return false;
			}
		}
		case 4:
		{
			switch(td)
			{
				case 0..89,120..149: return false;
			}
		}
		case 5:
		{
			switch(td)
			{
				case 0..119: return false;
			}
		}
	}
	new ID, Amount, Color, Enchant, mining;
	switch(type)
	{
		case 1://мусорка
		{
			ID = TrashInfo[TrashID[playerid]][TrashItem][td];
    		Amount = TrashInfo[TrashID[playerid]][TrashItemAmount][td];
    		Color = TrashInfo[TrashID[playerid]][TrashItemColor][td];
    		Enchant = TrashInfo[TrashID[playerid]][TrashItemEnchant][td];
            mining = TrashInfo[TrashID[playerid]][TrashItemMining][td];
		}
		case 2://шкаф
		{
			ID = HouseInfo[HouseID[playerid]][hItem][td];
    		Amount = HouseInfo[HouseID[playerid]][hItemAmount][td];
    		Color = HouseInfo[HouseID[playerid]][hItemColor][td];
    		Enchant = HouseInfo[HouseID[playerid]][hItemEnchant][td];
    		mining = HouseInfo[HouseID[playerid]][hItemMining][td];
		}
		case 3://багажник
		{
			new idofcar=idaofcar[playerid];
			ID = TrunkInfo[idofcar][TrunkItem][td];
    		Amount = TrunkInfo[idofcar][TrunkItemAmount][td];
    		Color = TrunkInfo[idofcar][TrunkItemColor][td];
    		Enchant = TrunkInfo[idofcar][TrunkItemEnchant][td];
    		mining = TrunkInfo[idofcar][TrunkItemMining][td];
		}
		case 4://трейд
		{
			ID = PI[playerid][pTradeItem][td];
    		Amount = PI[playerid][pTradeItemAmount][td];
    		Color = PI[playerid][pTradeItemColor][td];
    		Enchant = PI[playerid][pTradeItemEnchant][td];
    		mining = PI[playerid][pTradeItemMining][td];
		}
	}
	if(type == 4)
	{
		MenuCellUpdate(TradeID[playerid], td+10, ID, ItemsInfo[ID][ItemColor], Amount, Enchant, mining);
		PlayerTextDrawColor(TradeID[playerid], Invent_Menu_Page[TradeID[playerid]][td+10], ID ? 0xFFFFFFFF : 0x999999FF);
        PlayerTextDrawShow(TradeID[playerid], Invent_Menu_Page[TradeID[playerid]][td+10]);
		if(ID)
		{	
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][td], true);
			PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][td], 0xFFFFFFFF);
		}
		else
		{
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][td], false);
			PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][td], 0x999999FF);
		}
	}
	MenuCellUpdate(playerid, td, ID, ItemsInfo[ID][ItemColor], Amount, Enchant, mining);

	UpdateCellColor(playerid, Invent_Menu_Page[playerid][td], Invent_Menu_PageAmount[playerid][td], Color);
	return true;
}
stock UpdateCellColor(playerid, PlayerText:text, PlayerText:text2, Color)
{
	if(Color)
	{
		new Float:X, Float:Y;
		PlayerTextDrawGetPos(playerid, text, X, Y);

		PlayerTextDrawSetPos(playerid, text2, X+25.799987, Y+2.5);
		PlayerTextDrawSetString(playerid, text2, "Box");
		PlayerTextDrawLetterSize(playerid, text2, 0.000000, 0.083759);
		PlayerTextDrawTextSize(playerid, text2, X+19.8125, 0.000000);
		PlayerTextDrawAlignment(playerid, text2, 1);
		PlayerTextDrawColor(playerid, text2, 0xFFFFFFFF);
		PlayerTextDrawUseBox(playerid, text2, 1);
		PlayerTextDrawBoxColor(playerid, text2, Color);
		PlayerTextDrawSetShadow(playerid, text2, 2);
		PlayerTextDrawSetOutline(playerid, text2, 0);
		PlayerTextDrawBackgroundColor(playerid, text2, 0x000000FF);
		PlayerTextDrawFont(playerid, text2, 0);
		PlayerTextDrawSetProportional(playerid, text2, 0);
		PlayerTextDrawShow(playerid, text2);
	}

}
stock InvSlotUpdate(playerid, td, next = 1, create = 0, selectable = 0)
{
	if(!InventStatus{playerid} && !MenuStatus{playerid} && !TradeOpen{playerid}) return false;
	if(!create && !IsPlayerTextDrawVisible(playerid, InventSlot[playerid][td])) return false;
	switch(InventPage[playerid])
	{
		case 1:
		{
			switch(td)
			{
				case 36..107: return false;
			}
		}
		case 2:
		{
			switch(td)
			{
				case 0..35,72..107: return false;
			}
		}
		case 3:
		{
			switch(td)
			{
				case 0..71: return false;
			}
		}
	}
    new ID = PI[playerid][pInvItem][td];
    new Amount = PI[playerid][pInvItemAmount][td];
    new Color = PI[playerid][pInvItemColor][td];
    new Enchant = PI[playerid][pInvItemEnchant][td];
    new Mining = PI[playerid][pInvItemMining][td];

	PlayerTextDrawSetPreviewModel(playerid, InventSlot[playerid][td], ItemsInfo[ID][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, InventSlot[playerid][td], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
	if(ID >= 400 || ID <= 610) PlayerTextDrawSetPreviewVehCol(playerid, InventSlot[playerid][td], 0, 0);
    PlayerTextDrawSetString(playerid, InventSlotEnchant[playerid][td], "");
    PlayerTextDrawSetString(playerid, InventSlotAmount[playerid][td], "");
    PlayerTextDrawLetterSize(playerid, InventSlotAmount[playerid][td], 0.126499, 0.625000);
    PlayerTextDrawTextSize(playerid, InventSlotAmount[playerid][td], 1280.000000, 1280.000000);
    PlayerTextDrawAlignment(playerid, InventSlotAmount[playerid][td], 3);
    PlayerTextDrawColor(playerid, InventSlotAmount[playerid][td], 0xAAAAAAFF);
    PlayerTextDrawUseBox(playerid, InventSlotAmount[playerid][td], 0);
    PlayerTextDrawBoxColor(playerid, InventSlotAmount[playerid][td], 0x80808080);
    PlayerTextDrawSetShadow(playerid, InventSlotAmount[playerid][td], 0);
    PlayerTextDrawSetOutline(playerid, InventSlotAmount[playerid][td], 1);
    PlayerTextDrawBackgroundColor(playerid, InventSlotAmount[playerid][td], 0x00000000);
    PlayerTextDrawFont(playerid, InventSlotAmount[playerid][td], 2);
    PlayerTextDrawSetProportional(playerid, InventSlotAmount[playerid][td], 1);
    PlayerTextDrawSetSelectable(playerid, InventSlotAmount[playerid][td], 0);

	UpdateCell(playerid, InventSlot[playerid][td], InventSlotAmount[playerid][td], ID, Amount, Enchant, Mining, InventSlotEnchant[playerid][td]);
	UpdateCellColor(playerid, InventSlot[playerid][td], InventSlotAmount[playerid][td], Color);

	if(next)
	{
		if(td < PI[playerid][pInvCell])
		{
			if(!ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, InventSlot[playerid][td], 0x333333FF);
			else PlayerTextDrawBackgroundColor(playerid, InventSlot[playerid][td], ItemsInfo[ID][ItemColor]);
		}
		else
		{
			PlayerTextDrawBackgroundColor(playerid, InventSlot[playerid][td], 0x1A1A1AFF);
			PlayerTextDrawSetSelectable(playerid, InventSlot[playerid][td], false);
		}
	}
	if(!selectable || TradeOpen{playerid} || BuyStatus{playerid} || EnchantOpen{playerid})
	{
		if(PI[playerid][pInvItemLock][td] == 3) PlayerTextDrawColor(playerid, InventSlot[playerid][td], PI[playerid][pInvItemLock][td] ? 0x666666FF : 0xFFFFFFFF);
		if(PI[playerid][pInvItemLock][td] == 4) PlayerTextDrawColor(playerid, InventSlot[playerid][td], PI[playerid][pInvItemLock][td] ? 0x666666FF : 0xFFFFFFFF);
		else PlayerTextDrawColor(playerid, InventSlot[playerid][td], PI[playerid][pInvItemLock][td] ? 0x666666FF : 0xFFFFFFFF);
		if(!BuyStatus{playerid}) PlayerTextDrawSetSelectable(playerid, InventSlot[playerid][td], PI[playerid][pInvItemLock][td] ? false : true);
	}
	PlayerTextDrawShow(playerid, InventSlot[playerid][td]);
	return 1;
}
stock UpdateCell(playerid, PlayerText:text, PlayerText:text2, ID, Amount, Enchant, Mining, PlayerText:text3)
{
	new Float:X, Float:Y;
	PlayerTextDrawGetPos(playerid, text, X, Y);
	switch(ID)
	{
	    case 1..311:
	    {
		    PlayerTextDrawSetStringf(playerid, text2, "ID:%i", ItemsInfo[ID][ItemModel]);
			PlayerTextDrawColor(playerid, text2, 0xFFFFFFFF);
			PlayerTextDrawShow(playerid, text2);
	    }
		case 1101..1171:
		{
		    PlayerTextDrawSetStringf(playerid, text2, "ID:%i", GetItemNewSkin(ItemsInfo[ID][ItemModel])+312);
			PlayerTextDrawColor(playerid, text2, 0xFFFFFFFF);
			PlayerTextDrawShow(playerid, text2);
		}
	    case Item_Liccenses:
	    {
	    	//SCM(playerid, -1, "Licenses");
	    	CheckLic(playerid);
    		new times = gettime(), tima[20], dima, seconds;
    		if(ID == Item_Car_Lic) seconds = PI[playerid][pCarLic];
    		if(ID == Item_Bike_Lic) seconds = PI[playerid][pBikeLic];
    		if(ID == Item_Fly_Lic) seconds = PI[playerid][pFlyLic];
    		if(ID == Item_Boat_Lic) seconds = PI[playerid][pBoatLic];
    		if(ID == Item_Fish_Lic) seconds = PI[playerid][pFishLic];
    		if(ID == Item_Gun_Lic) seconds = PI[playerid][pGunLic];
    		if(ID == Item_Hunt_Lic) seconds = PI[playerid][pHuntLic];
			if(floatround((seconds-times) / 60 / 60 / 24) > 1)
			{
				tima = "DAY";
				dima = floatround((seconds-times) / 60 / 60 / 24, floatround_ceil);
			}
			else if(floatround((seconds-times) / 60 / 60) > 1)
	 	    {
		 		tima = "HOUR";
		 		dima = floatround((seconds-times) / 60 / 60, floatround_ceil);
			}
			else if(floatround((seconds-times) / 60) > 1)
			{
		 		tima = "MIN";
		 		dima = floatround((seconds-times) / 60, floatround_ceil);
			}
			else 
	 	    {
		 		tima = "SEC";
		 		dima = floatround((seconds-times), floatround_ceil);
			}
			PlayerTextDrawSetStringf(playerid, text2, "%i %s", dima, tima);
		    PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Chest:
	    {
	    	//SCM(playerid, -1, "Chest");
	    	if(PI[playerid][pChestTime] < 60)
	    	{
	    		if(PI[playerid][pChestTime])
	    		{
		    		PlayerTextDrawSetStringf(playerid, text2, "%i SEC", PI[playerid][pChestTime]);
		    		PlayerTextDrawShow(playerid, text2);
				}
	    	}
			else
			{
				PlayerTextDrawSetStringf(playerid, text2, "%i MIN", PI[playerid][pChestTime]/60);
				PlayerTextDrawShow(playerid, text2);
			}
			if(IsPlayerTextDrawVisible(playerid, text2 ) && !PI[playerid][pChestTime]) PlayerTextDrawHide(playerid, text2);
	    }
	    case AcsSlot1,AcsSlot2,AcsSlot3,AcsSlot4,AcsSlot5,AcsSlot6:
	    {
	    	if(Enchant)
	    	{
	    		PlayerTextDrawSetStringf(playerid, text3, "+%i", Enchant);
				PlayerTextDrawShow(playerid, text3);
			}
			else if(IsPlayerTextDrawVisible(playerid, text2)) PlayerTextDrawHide(playerid, text2);
	    }
		case 1248:
		{
		  	if(Mining)
            {
                PlayerTextDrawSetStringf(playerid, text2, "%i LVL", Mining);
                PlayerTextDrawShow(playerid, text2);
            }
		}
	    case Item_TwinTurbo:
	    {
	    	//SCM(playerid, -1, "TT");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~r~Twin~n~Turbo");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Supreme:
	    {
	    	//SCM(playerid, -1, "Supreme");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 11.5+Y);
	    	PlayerTextDrawSetString(playerid, text2, "SUPREME");
	        PlayerTextDrawColor(playerid, text2, 0xAAAAAAFF);
        	PlayerTextDrawBackgroundColor(playerid, text2, 0x00000000);
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 0);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
	    	PlayerTextDrawFont(playerid, text2, 1);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Mod_Halloween:
	    {
	    	//SCM(playerid, -1, "Hallowen");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~r~HALLOWEEN");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Mod_Classic:
	    {
	    	//SCM(playerid, -1, "Classic");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~y~CLASSIC");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Mod_Futuristic:
	    {
	    	//SCM(playerid, -1, "Future");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~y~FUTURE");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);	
	    }
	    case Item_Mod_Cyberpunk:
	    {
	    	//SCM(playerid, -1, "CyberPunk");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~y~CyberPunk");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Mod_FutureTaxi:
	    {
	    	//SCM(playerid, -1, "FUTURETAXI");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~y~Future~n~TAXI");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Launch:
	    {
	    	//SCM(playerid, -1, "Launch");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~y~LAUNCH");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Premium:
	    {
	    	//SCM(playerid, -1, "Premium");
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 9.625+Y);
	    	PlayerTextDrawSetString(playerid, text2, "~p~PREMIUM");
	    	PlayerTextDrawAlignment(playerid, text2, 2);
	    	PlayerTextDrawSetShadow(playerid, text2, 1);
	    	PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawShow(playerid, text2);
	    }
	    case Item_Aksioma,IventCarSlot:
	    {
	    	PlayerTextDrawSetPos(playerid, text2, 12.75+X, 0.525+Y);
	    	PlayerTextDrawColor(playerid, text2, 0x000000FF);
			PlayerTextDrawSetString(playerid, text2, "TUNING");
			PlayerTextDrawAlignment(playerid, text2, 2);
			PlayerTextDrawSetShadow(playerid, text2, 0);
			PlayerTextDrawSetOutline(playerid, text2, 0);
			PlayerTextDrawFont(playerid, text2, 1);
			PlayerTextDrawShow(playerid, text2);
	    }
	    default:
	    {
		    if(Amount > 1)
		    {
		    	//CreateAmountInv(playerid, td);
		    	PlayerTextDrawSetStringf(playerid, text2, "%i", Amount);
				PlayerTextDrawShow(playerid, text2);
		    }
		    else if(Amount <= 1 && IsPlayerTextDrawVisible(playerid, text2)) PlayerTextDrawHide(playerid, text2);
		}
	}
	return 1;
}
stock InvText(const string[])
{
	static result[16];
	result[0] = EOS;
	for(new i=0; i < 16; i++)
	{
		switch(string[i])
		{
			case 'а', 'А': result[i] = 'A';
			case 'б', 'Б': result[i] = 'Ђ';
			case 'в', 'В': result[i] = 'B';
			case 'г', 'Г': result[i] = '‚';
			case 'д', 'Д': result[i] = 'ѓ';
			case 'е', 'Е': result[i] = 'E';
			case 'ё', 'Ё': result[i] = 'E';
			case 'ж', 'Ж': result[i] = '„';
			case 'з', 'З': result[i] = '3';
			case 'и', 'И': result[i] = '…';
			case 'й', 'Й': result[i] = '†';
			case 'к', 'К': result[i] = 'K';
			case 'л', 'Л': result[i] = '‡';
			case 'м', 'М': result[i] = 'M';
			case 'н', 'Н': result[i] = 'H';
			case 'о', 'О': result[i] = 'O';
			case 'п', 'П': result[i] = 'Њ';
			case 'р', 'Р': result[i] = 'P';
			case 'с', 'С': result[i] = 'C';
			case 'т', 'Т': result[i] = 'T';
			case 'у', 'У': result[i] = 'Y';
			case 'ф', 'Ф': result[i] = 'Ѓ';
			case 'х', 'Х': result[i] = 'X';
			case 'ц', 'Ц': result[i] = '‰';
			case 'ч', 'Ч': result[i] = 'Ќ';
			case 'ш', 'Ш': result[i] = 'Ћ';
			case 'щ', 'Щ': result[i] = 'Љ';
			case 'ъ', 'Ъ': result[i] = 'ђ';
			case 'ы', 'Ы': result[i] = '‘';
			case 'ь', 'Ь': result[i] = '’';
			case 'э', 'Э': result[i] = '“';
			case 'ю', 'Ю': result[i] = '”';
			case 'я', 'Я': result[i] = '•';
			default: result[i] = string[i];
		}
	}
	return result;
}
stock CreateAcsMenu(playerid, i)
{
	Valik(playerid);
	new Float:X, Float:Y;
	PlayerTextDrawGetPos(playerid, InventAks[playerid][i], X, Y);

	static Button1[16], Button2[16], Button3[16], Button4[16];
	Button1[0] = EOS, Button2[0] = EOS, Button3[0] = EOS, Button4[0] = EOS;

	if(!PI[playerid][pInvLang])
	{
		if(InvCarOpen{playerid})
	    {
	    	new number = GetVehicleID(GetPlayerVehicleID(playerid));
		    if(!CarInfo[number][cObjectUsed][i]) Button1 = "INSTALL";
			else Button1 = "EDIT";
  		}
		else Button1 = "USE";
	    Button2 = "TAKE";
	    Button3 = "INFO";
	    Button4 = "CLOSE";
	}
	else
	{
		if(InvCarOpen{playerid})
	    {
	    	new number = GetVehicleID(GetPlayerVehicleID(playerid));
		    if(!CarInfo[number][cObjectUsed][i]) Button1 = InvText("УСТАНОВИТЬ");
			else Button1 = InvText("РЕДАКТИРОВАТЬ");
		}
		else Button1 = InvText("ИСПОЛЬЗОВАТЬ");
	    Button2 = InvText("СНЯТЬ");
	    Button3 = InvText("ИНФОРМАЦИЯ");
	    Button4 = InvText("ЗАКРЫТЬ");
	}

	InventMenuButton[playerid][0] = 7; //Use
	InventMenuButton[playerid][5] = 5; //TAKE
	InventMenuButton[playerid][3] = 3; //Info
	InventMenuButton[playerid][4] = 1; //Close

	InventClick{playerid} = i+108;

			#include ../library/TEXTDRAWS/inv/inv_menu_1
			for(new j; j < InventCreatedMenu[playerid]; j ++) PlayerTextDrawShow(playerid, InventMenu[playerid][j]);
			return 1;
}
stock Bogdan(playerid, i)
{
	switch(i)
	{
		case 0: UseItem(playerid, InventClick{playerid}), Valik(playerid);
		case 1: DropItem(playerid, InventClick{playerid});
		case 2: SplitItem(playerid, InventClick{playerid});
		case 3: InfoItem(playerid, InventClick{playerid}), Valik(playerid);
		case 4: Valik(playerid);
		case 5: TakeAcs(playerid, InventClick{playerid}-108), Valik(playerid);
	}
	return 1;
}
stock Valik(playerid)
{
	new slot = InventClick{playerid};
	if(slot == 255) return false;
    if(slot < 108) CheckInvItem(playerid, 0);
    if(slot < 108) SetSelectableForItem(playerid, slot, 1);
    HideInventMenu(playerid);
    InventClick{playerid} = 255;
    return true;
}
stock CreateInvMenu(playerid, td, type)
{
	Valik(playerid);
	new Float:X, Float:Y;
	PlayerTextDrawGetPos(playerid, InventSlot[playerid][td], X, Y);

	new Amount = PI[playerid][pInvItemAmount][td];

	static Button1[16], Button2[16], Button3[16], Button4[16], Button5[16];
	Button1[0] = EOS, Button2[0] = EOS, Button3[0] = EOS, Button4[0] = EOS, Button5[0] = EOS;

	switch(PI[playerid][pInvItem][td])
	{
		case CarSlot1,CarSlot2,CarSlot3,CarSlot4,CarSlot5,CarSlot6,CarSlot7,CarSlot8,Item_Mod_Vehicle:
		{
			if(!InvCarOpen{playerid}) type = 4;
		}
		case AcsSlot1,AcsSlot2,AcsSlot3,AcsSlot4,AcsSlot5,AcsSlot6,AcsSlot7,AcsSlot8:
		{
			if(InvCarOpen{playerid} || PI[playerid][pModSlot]) type = 4;
		}
	}

	switch(type)
	{
	    case 1:
	    {
 			if(!PI[playerid][pInvLang])
 			{
			    Button1 = "PUT";
			    Button2 = "DROP";
			    Button3 = "INFO";
			    Button4 = "CLOSE";
			}
			else
			{
			    Button1 = InvText("НАДЕТЬ");
			    Button2 = InvText("ВЫБРОСИТЬ");
			    Button3 = InvText("ИНФОРМАЦИЯ");
			    Button4 = InvText("ЗАКРЫТЬ");
			}
		    InventMenuButton[playerid][0] = 7; //Use
		    InventMenuButton[playerid][1] = 5; //Drop
		    InventMenuButton[playerid][3] = 3; //Info
			InventMenuButton[playerid][4] = 1; //Close
	    }
	    case 2:
	    {
 			if(!PI[playerid][pInvLang])
 			{
			    Button1 = "USE";
			    Button2 = "INFO";
			    Button3 = "CLOSE";
			}
			else
			{
			    Button1 = InvText("ИСПОЛЬЗОВАТЬ");
			    Button2 = InvText("ИНФОРМАЦИЯ");
			    Button3 = InvText("ЗАКРЫТЬ");
			}
		    InventMenuButton[playerid][0] = 5; //Use
		    InventMenuButton[playerid][3] = 3; //Drop
			InventMenuButton[playerid][4] = 1; //Close
	    }
	    case 3:
	    {
	        if(Amount == 1)
	        {
	 			if(!PI[playerid][pInvLang])
	 			{
				    Button1 = "USE";
				    Button2 = "DROP";
				    Button3 = "INFO";
				    Button4 = "CLOSE";
				}
				else
				{
				    Button1 = InvText("ИСПОЛЬЗОВАТЬ");
				    Button2 = InvText("ВЫБРОСИТЬ");
				    Button3 = InvText("ИНФОРМАЦИЯ");
				    Button4 = InvText("ЗАКРЫТЬ");
				}
			    InventMenuButton[playerid][0] = 7; //Use
			    InventMenuButton[playerid][1] = 5; //Drop
			    InventMenuButton[playerid][3] = 3; //Info
				InventMenuButton[playerid][4] = 1; //Close
			}
			else if(Amount > 1)
			{
	 			if(!PI[playerid][pInvLang])
	 			{
				    Button1 = "USE";
				    Button2 = "DROP";
				    Button3 = "SPLIT";
				    Button4 = "INFO";
				    Button5 = "CLOSE";
				}
				else
				{
				    Button1 = InvText("ИСПОЛЬЗОВАТЬ");
				    Button2 = InvText("ВЫБРОСИТЬ");
				    Button3 = InvText("РАЗДЕЛИТЬ");
				    Button4 = InvText("ИНФОРМАЦИЯ");
				    Button5 = InvText("ЗАКРЫТЬ");
				}
			    InventMenuButton[playerid][0] = 9; //Use
			    InventMenuButton[playerid][1] = 7; //Drop
			    InventMenuButton[playerid][2] = 5; //Split
			    InventMenuButton[playerid][3] = 3; //Info
				InventMenuButton[playerid][4] = 1; //Close
			}
	    }
	    case 4:
	    {
	        if(Amount == 1)
	        {
	 			if(!PI[playerid][pInvLang])
	 			{
				    Button1 = "DROP";
				    Button2 = "INFO";
				    Button3 = "CLOSE";
				}
				else
				{
				    Button1 = InvText("ВЫБРОСИТЬ");
				    Button2 = InvText("ИНФОРМАЦИЯ");
				    Button3 = InvText("ЗАКРЫТЬ");
				}
			    InventMenuButton[playerid][1] = 5; //Drop
			    InventMenuButton[playerid][3] = 3; //Info
				InventMenuButton[playerid][4] = 1; //Close
	        }
			else if(Amount > 1)
			{
	 			if(!PI[playerid][pInvLang])
	 			{
				    Button1 = "DROP";
				    Button2 = "SPLIT";
				    Button3 = "INFO";
				    Button4 = "CLOSE";
				}
				else
				{
				    Button1 = InvText("ВЫБРОСИТЬ");
				    Button2 = InvText("РАЗДЕЛИТЬ");
				    Button3 = InvText("ИНФОРМАЦИЯ");
				    Button4 = InvText("ЗАКРЫТЬ");
				}
			    InventMenuButton[playerid][1] = 7; //Drop
			    InventMenuButton[playerid][2] = 5; //Split
			    InventMenuButton[playerid][3] = 3; //Info
				InventMenuButton[playerid][4] = 1; //Close
			}
	    }
	}
	if(type == 1 || type == 3)
	{
	    if(Amount == 1) {
			#include ../library/TEXTDRAWS/inv/inv_menu_1
		}
		else if(Amount > 1) {
			#include ../library/TEXTDRAWS/inv/inv_menu_2
		}
	}
	else if(type == 2 || type == 4)
	{
	    if(Amount == 1) {
			#include ../library/TEXTDRAWS/inv/inv_menu_3
		}
		else if(Amount > 1) {
			#include ../library/TEXTDRAWS/inv/inv_menu_4
		}
	}
	for(new i; i < InventCreatedMenu[playerid]; i ++) PlayerTextDrawShow(playerid, InventMenu[playerid][i]);
	return true;
}
stock SetSelectableForItem(playerid, i, selectable)
{
	/*if(selectable && IsPlayerTextDrawVisible(playerid, InventSlot[playerid][i]))
	{
		if(PlayerTextDrawIsSelectable(playerid, InventSlot[playerid][i])) return false;
	}*/
	PlayerTextDrawSetSelectable(playerid, InventSlot[playerid][i], selectable);
	InvSlotUpdate(playerid, i, 0, 0, 1);
	if(i < PI[playerid][pInvCell]-6)
	{
		PlayerTextDrawSetSelectable(playerid, InventSlot[playerid][i+6], selectable);
		InvSlotUpdate(playerid, i+6, 0, 0, 1);
	}
	return 1;
}
stock InventorySorting(playerid)
{
	if(GetPVarInt(playerid, !"reloader") > gettime()) return 1;
    SetPVarInt(playerid, !"reloader", gettime() + 5);
    //SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Сортировка времено отключена!");
	static item[MAX_SLOT_INV], count[MAX_SLOT_INV], items, color[MAX_SLOT_INV], enchant[MAX_SLOT_INV], mining[MAX_SLOT_INV];
	for(new i; i < MAX_SLOT_INV; i++)
	{
        item[i] = 0;
        count[i] = 0;
        color[i] = 0;
        enchant[i] = 0;
        mining[i] = 0;
		if(i < 1) items = 0;
		if(i < PI[playerid][pInvCell])
		{
		    if(PI[playerid][pInvItem][i] != 0)
		    {
		        item[i] = PI[playerid][pInvItem][i];
		        count[i] = PI[playerid][pInvItemAmount][i];
		        color[i] = PI[playerid][pInvItemColor][i];
		        enchant[i] = PI[playerid][pInvItemEnchant][i];
		        mining[i] = PI[playerid][pInvItemMining][i];
				PI[playerid][pInvItem][i] = 0;
				PI[playerid][pInvItemAmount][i] = 0;
				PI[playerid][pInvItemColor][i] = 0;
				PI[playerid][pInvItemEnchant][i] = 0;
                PI[playerid][pInvItemMining][i] = 1;
				InvSlotUpdate(playerid, i);
				items++;
		    }
		}
	}
	if(!items) return 1;
	//Цикл от первого предмета после скина до последнего перед авто
	for(new i = 312; i < 400; i++)
	{
		for(new d; d < PI[playerid][pInvCell]; d++)
		{
			if(item[d] != i) continue;
			InvAddExSave(playerid, item[d], count[d], color[d], enchant[d], mining[d]);
		}
	}
	//Цикл от первого предмета после авто до последнего предмета инвентаря
	for(new i = 612; i < OWNABLEITEMS; i++)
	{
		for(new d; d < PI[playerid][pInvCell]; d++)
		{
			if(item[d] != i) continue;
			InvAddExSave(playerid, item[d], count[d], color[d], enchant[d], mining[d]);
		}
	}
	//Скины
	for(new i = 1; i <= 311; i++)
	{
		for(new d; d < PI[playerid][pInvCell]; d++)
		{
			if(item[d] != i) continue;
			InvAddExSave(playerid, item[d], count[d], color[d], enchant[d], mining[d]);
		}
	}
	//Авто
	for(new i = 400; i <= 611; i++)
	{
		for(new d; d < PI[playerid][pInvCell]; d++)
		{
			if(item[d] != i) continue;
			InvAddExSave(playerid, item[d], count[d], color[d], enchant[d], mining[d]);
		}
	}
	if(SAVE_PLAYER_INV) for(new i; i < PI[playerid][pInvCell]; i++) SaveInv(playerid, 1, i);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	Valik(playerid);
    return 1;
}
stock UseSkin(playerid)
{
	new click = InventClick{playerid};
	new item_skin = GetItemSkin(GetPlayerSkin(playerid));
	if(!item_skin) return false;
    CheckInvItem(playerid, 0);
	if(click == 255)
	{
		if(PI[playerid][pModSlot])//Снятие модификации
		{
			if(!GetInvSlot(playerid, PI[playerid][pModSlot])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять модификацию.");
			CheckItem(playerid, 1);
			InvAdd(playerid, PI[playerid][pModSlot], 1, 0);
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			PI[playerid][pModSlot] = 0;
			UpdatePlayerDataInt(playerid, "ModSlot", PI[playerid][pModSlot]);
			CheckModPlayer(playerid);
			SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
			for(new i; i < 6; i++)
			{
				PI[playerid][pAcsCellLock][i] = 0;
				UpdateSlotAcs(playerid, i);
			}
			return 1;
		}
		if(!GetInvSlot(playerid, item_skin)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять одежду.");
		if(PI[playerid][pSkin] != 18 && PI[playerid][pSkin] != 139)//Снятие скина
		{
		    if(TeamDuty{playerid}) return true;
		    if(InJob[playerid]) return true;
		    if(PI[playerid][pSkin] != GetPlayerSkin(playerid)) return false;
		    InvAdd(playerid, item_skin, 1, 0);
    		if(PI[playerid][pSex])
    		{
    			PI[playerid][pSkin] = 18;
	            SetPlayerSkinEx(playerid, 18);
    		}
    		else
    		{
    			PI[playerid][pSkin] = 139;
	            SetPlayerSkinEx(playerid, 139);
    		}
    		UpdatePlayerDataInt(playerid, "Skin", PI[playerid][pSkin]);
    	}
	}
	else
	{
		if(click >= 108) return false;
		new item = PI[playerid][pInvItem][click];
        switch(item)
		{
			case 1..311,1101..1171,1289..1312://Надевание скина
			{
			    if(TeamDuty{playerid}) return true;
			    if(InJob[playerid]) return true;
			    if(PI[playerid][pSkin] != GetPlayerSkin(playerid)) return false;
				if(PI[playerid][pSkin] != 18 && PI[playerid][pSkin] != 139)//Замена скина
				{
					PI[playerid][pInvItem][click] = item_skin;
                    PI[playerid][pInvItemAmount][click] = 1;
                    PI[playerid][pInvItemLock][click] = 0;
            	}
            	else//Надевание
            	{
					PI[playerid][pInvItem][click] = 0;
                    PI[playerid][pInvItemAmount][click] = 0;
                    PI[playerid][pInvItemLock][click] = 0;
            	}
            	if(SAVE_PLAYER_INV) SaveInv(playerid, 1, click);

				PI[playerid][pSkin] = ItemsInfo[item][ItemModel];
				UpdatePlayerDataInt(playerid, "Skin", ItemsInfo[item][ItemModel]);
                SetPlayerSkinEx(playerid, ItemsInfo[item][ItemModel]);
                TogglePlayerControllable(playerid, true);
			}
			case 801..818://Надевание модификации
			{
				new skin = GetPlayerSkin(playerid);
				switch(item)
				{
					case 801: skin = 163;
					case 802,808: skin = 68;
					case 803: skin = 214;
					case 804: skin = 154;
					case 805,814: skin = 206;
					case 806: skin = 125;
					case 807: skin = 98;
					case 809,816: skin = 200;
					case 810: skin = 120;
					case 812: skin = 42;
					case 815: skin = 162;
				}
				if(PI[playerid][pModSlot])//замена модификации
				{
					PI[playerid][pInvItem][click] = PI[playerid][pModSlot];
					PI[playerid][pInvItemAmount][click] = 1;
					if(SAVE_PLAYER_INV) SaveInv(playerid, 1, click);

					PI[playerid][pModSlot] = item;
					UpdatePlayerDataInt(playerid, "ModSlot", PI[playerid][pModSlot]);
					SetPlayerSkinEx(playerid, skin);
					//GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][i]][ItemModel]);
					CheckModPlayer(playerid);
					PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					return 1;
				}
				PI[playerid][pModSlot] = item;
				UpdatePlayerDataInt(playerid, "ModSlot", PI[playerid][pModSlot]);
				SetPlayerSkinEx(playerid, skin);
				//GiveItem(playerid, ItemsInfo[item][ItemModel]);
				RefreshInv(playerid, click);
				CheckModPlayer(playerid);
				PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			}
		}
	}
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	return true;
}
stock UseSert(playerid)
{
	new bool:Launch;
	new bool:Premium;
	new model;
	new item = PI[playerid][pInvItem][InventClick{playerid}];
	switch(item)
    {
    	case 441,464,465,501,564,594,1283: return false;
    	case Item_Premium_Maverick:
    	{
    		Premium = true;
    		model = 487;
    	}
    	case 342..356: 
    	{
    		Launch = true;
    		switch(item)
    		{
				case 342: model = 411;
				case 343: model = 415;
				case 344: model = 402;
				case 345: model = 429;
				case 346: model = 541;
				case 347: model = 480;
				case 348: model = 506;
				case 349: model = 579;
				case 350: model = 451;
				case 351: model = 555;
				case 352: model = 559;
				case 353: model = 560;
				case 354: model = 562;
				case 355: model = 603;
				case 356: model = 438;
    		}
    	}
    	case 1172..1207,1251..1279: model = ItemsInfo[item][ItemModel];
    	default: model = item;
    }
	if(!IsPlayerInRangeOfPoint(playerid, 250, -2123.6548,-854.3079,32.0939)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Активировать сертификат можно только на Автобазаре!");
	if(IsValidNumberCars(playerid))
	{
		printf("Создался сертификат с моделью %i", model);
	    new Float:X, Float:Y, Float:Z, Float:A;
	    GetPlayerPos(playerid,X,Y,Z);
	    GetPlayerFacingAngle(playerid,A);
	    SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Транспорт создан не забывайте /park для парковки транспорта.");
	   	if(TotalPlayerVehicle(PN(playerid)) >= 2)
        {
            foreach(new i: OWNABLECARS)
            {
                if(GetString(CarInfo[i][cOwner], PN(playerid)))
                {
                    SafeRemoveCar(i, i);
                    break;
                }
            }
        }
	    new carid = CreateOwnableCar(model, X+2, Y, Z, A, PN(playerid), 0);  
	    if(Launch) LaunchInstall(carid);
	    if(Premium) PremiumInstall(carid);
	    new number = GetVehicleID(carid);
	    SetVehiclePosToStandartPark(carid);
	    CarInfo[number][cParkedInStanartParking] = 1;
	    SaveOwnableCar(number);
		InvAdd(playerid, item, -1);
		aml(102, playerid, "", "юзание сертификата", item, 1);
	}
	else
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
	}
	return 1;
}
stock UseChest(playerid, type)
{
	switch(type)
	{
		case 1:
		{
			if(PI[playerid][pChestTime]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Время после прошлого использования ещё не прошло!");
			if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Открывать этот сундук можно только с 3 уровня!");
			if(!GetInvSlot(playerid, Item_BronzeRoulette) && !GetInvSlot(playerid, Item_SilverRoulette) && !GetInvSlot(playerid, Item_GoldRoulette)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
			new roulette;
			switch(random(101))
			{
				case 0..69:
				{
					roulette = Item_BronzeRoulette;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили бронзовую рулетку!");
				}
				case 70..90:
				{
					roulette = Item_SilverRoulette;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили серебряную рулетку!");
				}
				case 91..100:
				{
					roulette = Item_GoldRoulette;
					SCM(playerid, COLOR_GREEN, !"Вы использовали сундук с рулетками и получили золотую рулетку!");
				}
			}
			InvAdd(playerid, roulette, 1, 0);
			aml(101, playerid, "", "открытие сундука с рулетками", roulette, 1);
			PI[playerid][pChestTime] = 7200;
		}
	}
	return 1;
}
stock Eat(playerid, eat)
{
	switch(eat)
	{
	    case 0:
		{
	        if(!GetInvCount(playerid, Item_Chips)) return SCM(playerid, COLOR_RED, !"У тебя нет чипсов!");
			InvAdd(playerid, Item_Chips, -1);
			aml(102, playerid, "", "схавал", Item_Chips, 1);
			f(str_1, 48, "%s скушал(а) пачку чипсов", cPN(playerid));
	        ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	        if(Fullness[playerid] <= 75) GiveFullness(playerid, 25);
	        else SetFullness(playerid, 100);
		}
	    case 1:
		{
	        if(!GetInvCount(playerid, Item_FriedFish)) return SCM(playerid, COLOR_RED, !"У тебя нет жаренной рыбы!");
			InvAdd(playerid, Item_FriedFish, -1);
			aml(102, playerid, "", "схавал", Item_FriedFish, 1);
			f(str_1, 49, "%s скушал(а) жаренную рыбу", cPN(playerid));
	        ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	        if(Fullness[playerid] <= 75) GiveFullness(playerid, 25);
	        else SetFullness(playerid, 100);

		}
	}
	return 1;
}
stock GetWeaponItem(item)
{
	new weapon;
	switch(item)
	{
		case Item_Deagle: weapon = 24;
		case Item_Pistols: weapon = 22;
		case Item_ShotGun: weapon = 25;
		case Item_MP5: weapon = 29;
		case Item_AK47: weapon = 30;
		case Item_M4: weapon = 32;
		case Item_Country_Rifle: weapon = 33;
	}
	return weapon;
}
/*stock GetWeaponItemReverse(weapon)
{
	new item;
	switch(weapon)
	{
		case 24: item = Item_Deagle;
		case 22: item = Item_Pistols;
		case 25: item = Item_ShotGun;
		case 29: item = Item_MP5;
		case 30: item = Item_AK47;
		case 32: item = Item_M4;
		case 33: item = Item_Country_Rifle;
	}
	return item;
}*/
stock UsePhoto(playerid)
{
	return playerid;
}
stock UseSkate(playerid)
{
    if(PI[playerid][pInvItemAcs][5] != Item_Skate) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На вас должен быть надет скейт!");
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Можно использовать только на ногах!");
    ApplyAnimation(playerid, "CARRY","null",0,0,0,0,0,0,0);
    ApplyAnimation(playerid, "SKATE","null",0,0,0,0,0,0,0);
    ApplyAnimation(playerid, "CARRY","crry_prtial",4.0,0,0,0,0,0);
    SetPlayerArmedWeapon(playerid, 0);
    if(!InfoSkate[playerid][sActive])
    {
        InfoSkate[playerid][sActive] = true;
        RemovePlayerAttachedObject(playerid, 5);
        SetPlayerAttachedObject(playerid,6,ItemsInfo[PI[playerid][pInvItemAcs][5]][ItemModel],6,-0.055999,0.013000,0.000000,-84.099983,0.000000,-106.099998,1.000000,1.000000,1.000000);
        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы использовали скейт");
    }
	else DestroySkate(playerid);
	return 1;
}
stock DestroySkate(playerid)
{
	if(!InfoSkate[playerid][sActive]) return false;
    DestroyDynamicObject(InfoSkate[playerid][sSkate]);
    RemovePlayerAttachedObject(playerid, 6);
    SetPlayerAttachedObject(playerid,5,19878,1,0.146999,-0.155000,-0.012000,-88.499992,-4.499999,-42.999996,0.607999,0.582000,1.000000);
    InfoSkate[playerid][sActive] = false;
    InfoSkate[playerid][sSkate] = 0;
    return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы убрали скейт");
}
stock UseWeapon(playerid)
{
	new ID = InventClick{playerid}, item = PI[playerid][pInvItem][ID], amount = PI[playerid][pInvItemAmount][ID], weaponid = GetWeaponItem(item);
	if(amount > 1)
	{
		SetPVarInt(playerid, !"Slot_Weapon", ID);
		InvLockItem{playerid} = true;
		return SPD(playerid, 12219, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите использовать", !"Выбрать", !"Отмена");
	}
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы достали из кармана '%s' с боеприпасами %i", WeaponNames[weaponid], amount);
	InvAdd(playerid, item, -amount);
	aml(102, playerid, "", "UseWeapon", item, amount);
	return GiveGun(playerid, weaponid, amount);
}
stock UseRadioVehicle(playerid, model)
{
	if(PI[playerid][pRCTime] <= gettime())
	{
		PI[playerid][pRCTime] = 0;
		UpdatePlayerDataInt(playerid, "RCTime", PI[playerid][pRCTime]);
	}
	if(PI[playerid][pRCTime] > gettime()) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вам заблокирован доступ к радио-технике, осталось ждать: %i секунд!", PI[playerid][pRCTime] - gettime());
	if(RCVehicle[playerid]) return DestroyRadioVehicle(playerid);
	if(GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
	{
	    if(GetPlayerState(playerid) != 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже находитесь в транспорте!");
		new Float: A;
	    GetPlayerPos(playerid, rcX[playerid], rcY[playerid], rcZ[playerid]);
	 	GetPlayerFacingAngle(playerid, A);
	    RCVehicle[playerid] = J_AddStaticVehicleEx(model, rcX[playerid], rcY[playerid], rcZ[playerid], A, 1, 1);
		PutPlayerInVehicle(playerid, RCVehicle[playerid], 0);
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Правила использования радио управляемой техники:\n\
		{CD5C5C}- Запрещено наносить урон игрокам (любыми способами)\n\
		- Запрещено покидать размеченные границы (на карте)\n\n\
		{FFD700}Для выхода используйте 'F' или 'ENTER'", !"Принять", !"");
	}
	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сдесь нельзя использовать этот предмет!");
	return 1;
}
stock DestroyRadioVehicle(playerid)
{
	if(!RCVehicle[playerid]) return false;
	DestroyVehicle(RCVehicle[playerid]);
	return RCVehicle[playerid] = 0;
}
stock UseItem(playerid, slot)
{
	new item, number = GetVehicleID(GetPlayerVehicleID(playerid));
	if(slot < 108) item = PI[playerid][pInvItem][slot];
    //SCMf(playerid, -1, "%i", slot);
    else if(slot >= 108)//ДЛЯ ЮЗАНИЯ СО СЛОТА АКСА
    {	
    	if(InvCarOpen{playerid})
    	{
    		item = CarInfo[number][cSlotItem][slot-108];
    	}
    	else item = PI[playerid][pInvItemAcs][slot-108];
	    switch(item)
		{
			case Item_Chest_Camera: UsePhoto(playerid);
			case Item_Canister_Thigh: callcmd::leyka(playerid);
			case Item_Hammer: callcmd::remkey(playerid);
			case Item_Column..Item_Boombox_Red: callcmd::boom(playerid);
			case Item_Balloons: UseBalloons(playerid, ItemsInfo[item][ItemModel]);
			case Item_Skate: UseSkate(playerid);
			case Item_Radio_Vehicle: UseRadioVehicle(playerid, ItemsInfo[item][ItemModel]);
			case Item_Aksioma,IventCarSlot:
			{
				//SCM(playerid, -1, "case Item_Aksioma,IventCarSlot:");
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 0;
				new click = InventClick{playerid}-108;
				UseRedactor(playerid, number, click, ItemsInfo[CarInfo[number][cSlotItem][click]][ItemModel]);
   			}
		}
		return 1;
	}
	switch(item)//ДЛЯ ЮЗАНИЯ С ИНВЕНТАРЯ
	{
	   case 1248:
        {
            new house = HouseEntered[playerid];
            if(house == -1) return Valik(playerid);
            if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_RED ,!"[Ошибка] {FFFFFF}Вы не у своего дома!");
            SetPVarInt(playerid, "VideoCardSlot", slot);
            if(IsPlayerInRangeOfPoint(playerid, 1.3, -1653.0421, -249.0098, 14.1484))
            {
                str_2[0] = EOS;
                for(new i; i < sizeof(MaxVideoCart); i++) f(str_2, sizeof(str_2), "%s\nНа %i-м уровне - %i%%", str_2, i+1, MaxVideoCart[i][0]);
                f(str_1, sizeof(str_1), "\
                {FFFF00}Сейчас уровень производительности видеокарты: %i из 10.\n\
                {FFFF00}За один час работы майнит %f BTC.\n\n\
                {FFFFFF}Чем больше увровень производительства, тем больше криптовалюты может намайнить видеокарта.\n\
                {FFFFFF}Что бы её улутшить до следующего уровня, необходима смазка для видеокарты,\n\
                {FFFFFF}её можна купить в /adonate » other или купить на центральном рынке.\n\n\
                {a9a0a3}Шанс вероятности улутшение видеокарты:\n\
                {a9a0a3}%s\n\
                {FFFFFF}Что бы её улутшить до следующего уровня, необходима смазка для видеокарты,\n\
                {FFFFFF}её можна купить в /adonate » other или купить на центральном рынке.\n\n\n\
                {FFFFFF}Вы хотите улутшить выбраную видео карту?", PI[playerid][pInvItemMining][slot], 0.029750*PI[playerid][pInvItemMining][slot], str_2);
                return SPD(playerid, 1024, DIALOG_STYLE_MSGBOX, "Улутшения видеокарты", str_1, "Улучшить", "Зкрыть");
            }
            else Valik(playerid);
            new cart = GetVideoCardManagement(playerid);
            if(cart == -1) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Вы должни находиться возле полки видеокарт или же возле стола улутшений!");
            str_1[0] = EOS;
            for(new i; i < 4; i++) f(str_1, sizeof(str_1), "%s{FFFFFF}Полка №%i | {FFFFFF}%s\n", str_1, i+1, HouseInfo[house][hMiningLevel][GetMiningMenenger(GetVideoCardManagement(playerid)+1, i)] == 0 ? "Свободна" : "Занято");
            SPD(playerid, 1020, DIALOG_STYLE_TABLIST, "На какую полку установить видеокарту?", str_1, "Выбрать", "Зкрыть");
        }
        case Item_SimCard: UseSimCard(playerid);
        case Item_BronzeRoulette: OpenRoullete(playerid, 0);
        case Item_SilverRoulette: OpenRoullete(playerid, 1);
        case Item_GoldRoulette: OpenRoullete(playerid, 2);
        case Item_PlatinumRoullete: OpenRoullete(playerid, 3);

		case 1..311,801..818,1101..1171,1289..1312: UseSkin(playerid);
		case Item_Premium_Maverick,342..356,400..440,442..463,466..500,502..563,565..611, 1172..1207, 1251..1279: UseSert(playerid);
		case Item_Chest: UseChest(playerid, 1);
		case Item_BreakCar: callcmd::breakcar(playerid);
		case Item_PhoneBook: ShowPlayerDialog(playerid, 8254, DIALOG_STYLE_INPUT, !"Телефонная книга", !"{FFFFFF}Введите ID игрока чтобы узнать его номер", !"Выбрать", !"Отмена");
		case Item_Radio: callcmd::radio(playerid);
		case Item_Cigarettes: callcmd::smoke(playerid);
		case Item_Canister: callcmd::fillcar(playerid);
		case Item_Repair: callcmd::repcar(playerid);
		case Item_Xiaomi_Blue..Item_iPhone_DarkRed: UsePhone(playerid, item);
		//case Item_Spray:
		case Item_DrugSeeds: callcmd::drug(playerid);
		case Item_Drugs: callcmd::usedrugs(playerid, "1");
		case Item_Chips: Eat(playerid, 0);
		case Item_Sprunk: callcmd::sprunk(playerid);
		case Item_Beer: callcmd::beer(playerid);
		case Item_Clips: callcmd::break(playerid);
		case Item_Mask: callcmd::mask(playerid);
		case Item_Armour: callcmd::armour(playerid);
		case Item_MedKit: callcmd::usemed(playerid);
		case Item_DrugPills: callcmd::usebad(playerid);
		case Item_Syringe: callcmd::killme(playerid);
		case Item_FishingRod: callcmd::go_fished(playerid);
		case Item_DonateChest: UseChest(playerid, 2);
		case Item_FriedFish: Eat(playerid, 1);
		case Item_Firewood: callcmd::firewood(playerid);
		case Item_Weapons: UseWeapon(playerid);
		case Item_YellowBox: GiveItemBox(playerid, 0);
		case Item_BlueBox: GiveItemBox(playerid, 1);
		case Item_RedBox: GiveItemBox(playerid, 2);
		case Item_AcsessoryBox: GiveItemBox(playerid, 3);
		case Item_Shovel:
		{
			InvAdd(playerid, Item_Shovel, -1);
			aml(102, playerid, "", "UseWeapon", Item_Shovel, 1);
			GiveGun(playerid, 6, 1);
		}
		case Item_Ticket_AZ: SPD(playerid, 6701, DIALOG_STYLE_INPUT, !"Талон AZ Coins", !"{FFFFFF}Вы обмениваете Талоны AZ Coins на AZ Coins\nВведите количество которое хотите обменять (от 1 до 10000)", !"Обменять", !"Отмена");
		case Item_Ticket_EXP: SPD(playerid, 6702, DIALOG_STYLE_INPUT, !"Талон EXP", !"{FFFFFF}Вы обмениваете Талоны EXP на EXP\nВведите количество которое хотите обменять (от 1 до 500)", !"Обменять", !"Отмена");
		//case Item_Ticket_Donate: SPD(playerid, 6703, DIALOG_STYLE_INPUT, !"Талон AZ Rub", !"{FFFFFF}Вы обмениваете Талоны AZ Rub на Донат Рубли\nВведите количество которое хотите обменять (от 1 до 500)", !"Обменять", !"Отмена");
		case AcsSlot1: if(slot < 108) UseAks(playerid, 1);//1-ый слот
		case AcsSlot2: if(slot < 108) UseAks(playerid, 2);//2-ый слот
		case AcsSlot3: if(slot < 108) UseAks(playerid, 3);//3-ый слот
		case AcsSlot4: if(slot < 108) UseAks(playerid, 4);//4-ый слот
		case AcsSlot5: if(slot < 108) UseAks(playerid, 5);//5-ый слот
		case AcsSlot6: if(slot < 108) UseAks(playerid, 6);//6-ый слот
		case AcsSlot7: if(slot < 108) UseAks(playerid, 7);//7-ый слот
		case AcsSlot8: if(slot < 108) UseAks(playerid, 8);//8-ый слот
		case CarSlot1: UseCarMod(playerid, 1);
		case CarSlot2: UseCarMod(playerid, 2);
		case CarSlot3: UseCarMod(playerid, 3);
		case CarSlot4: UseCarMod(playerid, 4);
		case CarSlot5: UseCarMod(playerid, 5);
		case CarSlot6: UseCarMod(playerid, 6);
		case CarSlot7: UseCarMod(playerid, 7);
		case CarSlot8: UseCarMod(playerid, 8);
		case Item_Aksioma,IventCarSlot: SearchSlotCar(playerid, 1);
		case Item_Casket: DollarsOtchisl(playerid);
	}
	return true;
}
stock UseBalloons(playerid, model)
{
	if(BalloonVehicle[playerid]) return DestroyBalloon(playerid);
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}С транспорта нельзя!");
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Использовать в здании запрещено!");
	new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	BalloonVehicle[playerid] = J_AddStaticVehicleEx(487, X, Y, Z, A, 1, 1);
	SetEngineStatus(BalloonVehicle[playerid], true, playerid);
	LinkVehicleToInterior(BalloonVehicle[playerid], 69);
	BalloonInstall(BalloonVehicle[playerid], model);
	BalloonText[playerid] = CreateDynamic3DTextLabel("{F79E45}[ Воздушный Шар ]\n\n{F5CC02}Для управления нажмите 'F'\nЧтобы занять пассажрское место нажмите `G`\n{FF6347}Управлене доступно только для владельца{FFFFFF}", -1, 0, 0, 2, 4, INVALID_PLAYER_ID, BalloonVehicle[playerid]);
	return PutPlayerInVehicle(playerid, BalloonVehicle[playerid], 0);
}
stock DestroyBalloon(playerid)
{
	if(!BalloonVehicle[playerid]) return false;
	DestroyDynamic3DTextLabel(BalloonText[playerid]);
	Borisov(BalloonVehicle[playerid], 12);
	Borisov(BalloonVehicle[playerid], 13);
	Borisov(BalloonVehicle[playerid], 14);
	Borisov(BalloonVehicle[playerid], 15);
	Borisov(BalloonVehicle[playerid], 16);
	Borisov(BalloonVehicle[playerid], 17);
	DestroyVehicle(BalloonVehicle[playerid]);
	BalloonVehicle[playerid] = 0;
	return 1;
}
stock UseCarMod(playerid, i) PutModCar(playerid, i-1);
stock UseAks(playerid, i) PutAcs(playerid, i-1);
stock CheckMenuItem(playerid, Item)
{
	switch(Item)
	{
		case Item_Chest,Item_CasinoChips,Item_Liccenses,Item_Ticket_EXP,Item_Ticket_AZ,Item_Ticket_Donate,1090..1093:
		{
			SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот предмет нельзя передавать!");
			return 1;
		}
	}
	return 0;
}
stock DropItem(playerid, slot)
{
	new id = TrashID[playerid];
	if(id == -1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Выкинуть предмет можно только рядом с мусоркой!"), Valik(playerid);
	
	new 
		Item = PI[playerid][pInvItem][slot], 
		Amount = PI[playerid][pInvItemAmount][slot], 
		Color = PI[playerid][pInvItemColor][slot],
		Enchant = PI[playerid][pInvItemEnchant][slot],
		Mining = PI[playerid][pInvItemMining][slot];

	if(CheckMenuItem(playerid, Item)) return Valik(playerid);
	if(Amount == 1)
	{
		if(!TrashAdd(playerid, id, Item, Amount, Color, Enchant, Mining)) return Valik(playerid);
		CheckInvItem(playerid, 0);
		PI[playerid][pInvItem][slot] = 0;
		PI[playerid][pInvItemAmount][slot] = 0;
		PI[playerid][pInvItemColor][slot] = 0;
		PI[playerid][pInvItemEnchant][slot] = 0;
		PI[playerid][pInvItemMining][slot] = 1;
		InvSlotUpdate(playerid, slot);
		Valik(playerid);
		if(SAVE_PLAYER_INV) SaveInv(playerid, 1, slot);
	}
	else if(Amount > 1)
	{
		InvLockItem{playerid} = true;
		SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
		Valik(playerid);
		InventClick{playerid} = slot;
	}
	return true;
}
stock SplitItem(playerid, slot)
{
	SetSelectableForItem(playerid, slot, 1);
	HideInventMenu(playerid);
    InventClick{playerid} = 255;
	if(!GetInvSlot(playerid, 0)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
    new amount = PI[playerid][pInvItemAmount][slot];
    if(PI[playerid][pInvItemAmount][slot] % 2 == 0) PI[playerid][pInvItemAmount][slot] /= 2;
    else
    {
        PI[playerid][pInvItemAmount][slot] ++;
        PI[playerid][pInvItemAmount][slot] /= 2;
    }
    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
    SCM(playerid, COLOR_YELLOW, !"Вы успешно разделили предмет.");
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != 0) continue;
        PI[playerid][pInvItem][i] = PI[playerid][pInvItem][slot];
        PI[playerid][pInvItemAmount][i] += PI[playerid][pInvItemAmount][slot];
        if(amount % 2 != 0) PI[playerid][pInvItemAmount][i] -= 1;

        InvSlotUpdate(playerid, slot);
        InvSlotUpdate(playerid, i);

        if(SAVE_PLAYER_INV) SaveInv(playerid, 1, slot);
        if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
        return true;
    }
    return true;
}
stock InfoItem(playerid, slot)
{
	new item, skin, color, Enchant, acs, btcinv, bool:Mining;
	static info_enchant[144]; info_enchant[0] = EOS;
	if(slot < 108)
	{
		item = PI[playerid][pInvItem][slot];
		color = PI[playerid][pInvItemColor][slot];
		Enchant = PI[playerid][pInvItemEnchant][slot];
	 	btcinv = PI[playerid][pInvItemMining][slot];
	}
    else if(slot >= 108) 
    {
    	if(InvCarOpen{playerid})
    	{
    		new number = GetVehicleID(GetPlayerVehicleID(playerid));
    		item = CarInfo[number][cSlotItem][slot-108];
    	}
    	else
    	{
    		item = PI[playerid][pInvItemAcs][slot-108];
    		color = PI[playerid][pInvItemAcsColor][slot-108];
    		Enchant = PI[playerid][pInvItemAcsEnchant][slot-108];
    	}
    }
	if(!strlen(ItemsInfo[item][ItemInfo])) SPD(playerid, 8236, 0, !"Информация о предмете", !"{FFFFFF}Информация по этому предмету отсутствует.", !"Выход", !"");
	else
	{
		switch(item)
		{
			//case AcsSlot1,AcsSlot2,AcsSlot3,AcsSlot4,AcsSlot5,AcsSlot6,AcsSlot7,AcsSlot8: acs = 1;
			case 1248: Mining = true;
			case AcsSlot1: acs = 1;
			case AcsSlot2: acs = 2;
			case AcsSlot3: acs = 3;
			case AcsSlot4: acs = 4;
			case AcsSlot5: acs = 5;
			case AcsSlot6: acs = 6;
			case AcsSlot7: acs = 7;
			case AcsSlot8: acs = 8;
			case 801: skin = 163;
			case 802: skin = 68;
			case 803: skin = 214;
			case 804: skin = 154;
			case 805: skin = 206;
			case 806: skin = 125;
			case 807: skin = 98;
			case 808: skin = 68;
			case 809: skin = 200;
			case 810: skin = 120;
			case 811: skin = 400;
			case 812: skin = 42;
			case 813: skin = 400;
			case 814: skin = 206;
			case 815: skin = 162;
			case 816: skin = 200;
		}
		if(skin)
		{
			if(skin == 400) str_2 = "На все виды";
			else f(str_2, sizeof(str_2), "%s", ItemsInfo[skin][ItemName]);
			f(str_1, sizeof(str_1), "%s\n\nПодходит на одежду:\n{73B461}- %s", ItemsInfo[item][ItemInfo], str_2);
			SPD(playerid, 8236, 0, !"Информация о предмете", str_1, !"Выход", !"");
		}
		else if(acs)
		{
		    str_2 = "Отсутствует";
			for(new i; i < sizeof(AksColor); i++)
			{
				if(AksColor[i][AksColorDefault] != color) continue;
				SetString(str_2, AksColor[i][AksColorName]);
				break;
			}
		    if(Enchant >= 4) f(info_enchant, sizeof(info_enchant), "{FFFFFF}- Бонус от улучшения: {A48686}[%s]\n", EnchantAcs[GetSlotEnchant(acs, Enchant)][e_text]);
			f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Характеристики:\n\
			- Цвет: %s{FFFFFF}\n\
			- Улучшения: {FDCF28}%i/12\n\
			%s\
			{FFFFFF}- Прочность: {73B461}100/100", ItemsInfo[item][ItemInfo], str_2, Enchant, info_enchant);
			SPD(playerid, 8236, 0, !"Информация о предмете", str_1, !"Выход", !"");
		}
		else if(Mining)
		{
	        new Float:btc = 0.029750 * btcinv;
	        f(str_1, sizeof(str_1), "%s\n\n\
	        {FFFF00}Уровень производительности: %i из 10\n\
	        За один час работы майнит: %f BTC.", ItemsInfo[item][ItemInfo], btcinv, btc);
	        SPD(playerid, 8236, 0, !"Информация о предмете", str_1, !"Выход", !"");
		}
		else SPD(playerid, 8236, 0, !"Информация о предмете", ItemsInfo[item][ItemInfo], !"Выход", !"");
	}
	return InvLockItem{playerid} = true;
}
stock GetSlotEnchant(slot, enchant)
{
	new echantslot;
	for(new i ; i < sizeof(EnchantAcs); i++)
	{
		if(EnchantAcs[i][e_slot] == slot && EnchantAcs[i][e_enchant] == enchant) 
		{
			echantslot = i;
			break;
		}
	}
	return echantslot;
}
stock SetItem(playerid, item, amount = 0)
{
	new count = GetInvCount(playerid, item);
	if(count)
	{
		InvAdd(playerid, item, -count);
		aml(102, playerid, "", "SetItem", item, count);
	}
	if(amount)
	{
		InvAdd(playerid, item, amount, 0);
		aml(101, playerid, "", "SetItem", item, amount);
	}
	return true;
}
stock SetItemShkaf(id, item, amount = 0)
{
	new count = GetShkafCount(id, item);
	if(count) ShkafAdd(0, id, item, -count);
	if(amount) ShkafAdd(0, id, item, amount);
}
stock SetItemTrunk(id, item, amount = 0)
{
	new count = GetTrunkCount(id, item);
	if(count) TrunkAdd(0, id, item, -count);
	if(amount) TrunkAdd(0, id, item, amount);
}
stock ShkafRemove(playerid, id, itemid, amount, slot)
{
	if(slot != 255)
	{
        if(HouseInfo[id][hItem][slot] != itemid) return 0;
        new amounts = amount - HouseInfo[id][hItemAmount][slot];
        HouseInfo[id][hItemAmount][slot] -= amount;
        if(HouseInfo[id][hItemAmount][slot] <= 0)
        {
            HouseInfo[id][hItemAmount][slot] = 0;
            HouseInfo[id][hItem][slot] = 0;
            HouseInfo[id][hItemColor][slot] = 0;
            HouseInfo[id][hItemEnchant][slot] = 0;
            HouseInfo[id][hItemMining][slot] = 1;
			if(amounts) ShkafRemove(playerid, id, itemid, amounts, slot);
        }
        MenuSlotsUpdate(HouseID[playerid], slot, 2);
        SaveInv(id, 3, slot);
        return true;
	}
    for(new i; i < 90; i++)
    {
        if(HouseInfo[id][hItem][i] != itemid) continue;
        new amounts = amount - HouseInfo[id][hItemAmount][i];
        HouseInfo[id][hItemAmount][i] -= amount;
        if(HouseInfo[id][hItemAmount][i] <= 0)
        {
            HouseInfo[id][hItemAmount][i] = 0;
            HouseInfo[id][hItem][i] = 0;
            HouseInfo[id][hItemColor][i] = 0;
            HouseInfo[id][hItemEnchant][i] = 0;
            HouseInfo[id][hItemMining][i] = 1;
            if(amounts) ShkafRemove(playerid, id, itemid, amounts, i);
        }
        MenuSlotsUpdate(HouseID[playerid], i, 2);
        SaveInv(id, 3, i);
        return true;
    }
    return true;
}
stock ShkafAdd(playerid, id, item, amount, color = 0, Enchant = 0, Mining = 1)
{
	if(amount < 0) return ShkafRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetShkafSlot(id, item))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В шкафу нету места!");
		return 0;
	}
    for(new i; i < 90; i++)
    {
        if(HouseInfo[id][hItem][i] != item) continue;
        if(!AddShkafItem(playerid, id, i, item, amount, color, Enchant, Mining)) continue;
        else SaveInv(id, 3, i);
        return true;
    }
    for(new i; i < 90; i++)
    {
        if(HouseInfo[id][hItem][i] != 0) continue;
        if(!SetShkafItem(playerid, id, i, item, amount, color, Enchant, Mining)) continue;
        else SaveInv(id, 3, i);
        return true;
    }
    return true;
}
stock AddShkafItem(playerid, id, slot, item, amount, color, Enchant, Mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem], amounts = HouseInfo[id][hItemAmount][slot] + amount;
    if(HouseInfo[id][hItemAmount][slot] >= Max_Item) return false;
    if(amounts > Max_Item) Amount = amounts - Max_Item, HouseInfo[id][hItemAmount][slot] = Max_Item;
    else HouseInfo[id][hItemAmount][slot] += amount;
    MenuSlotsUpdate(HouseID[playerid], slot, 2);
    if(Amount) ShkafAdd(playerid, id, item, Amount, color, Enchant, Mining);
    return true;
}
stock SetShkafItem(playerid, id, slot, item, amount, color, Enchant, Mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem];
    if(HouseInfo[id][hItemAmount][slot] >= Max_Item) return false;
    if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    HouseInfo[id][hItem][slot] = item;
    HouseInfo[id][hItemAmount][slot] = amount;
    HouseInfo[id][hItemColor][slot] = color;
    HouseInfo[id][hItemEnchant][slot] = Enchant;
    HouseInfo[id][hItemMining][slot] = Mining;
    MenuSlotsUpdate(HouseID[playerid], slot, 2);
    if(Amount) ShkafAdd(playerid, id, item, Amount, color, Enchant, Mining);
    return true;
}
stock TrunkRemove(playerid, id, itemid, amount, slot)
{
	new number = GetVehicleID(id);
	if(slot != 255)
	{
        if(TrunkInfo[id][TrunkItem][slot] != itemid) return 0;
        new amounts = amount - TrunkInfo[id][TrunkItemAmount][slot];
        TrunkInfo[id][TrunkItemAmount][slot] -= amount;
        if(TrunkInfo[id][TrunkItemAmount][slot] <= 0)
        {
            TrunkInfo[id][TrunkItemAmount][slot] = 0;
            TrunkInfo[id][TrunkItem][slot] = 0;
            TrunkInfo[id][TrunkItemColor][slot] = 0;
            TrunkInfo[id][TrunkItemEnchant][slot] = 0;
            TrunkInfo[id][TrunkItemMining][slot] = 1;
            if(amounts) TrunkRemove(playerid, id, itemid, amounts, slot);
        }
        MenuSlotsUpdate(idaofcar[playerid], slot, 3);
        if(number != INVALID_VEHICLE_ID) SaveInv(number, 4, slot);
        return true;
	}
    for(new i; i < 30; i++)
    {
        if(TrunkInfo[id][TrunkItem][i] != itemid) continue;
        new amounts = amount - TrunkInfo[id][TrunkItemAmount][i];
        TrunkInfo[id][TrunkItemAmount][i] -= amount;
        if(TrunkInfo[id][TrunkItemAmount][i] <= 0)
        {
            TrunkInfo[id][TrunkItemAmount][i] = 0;
            TrunkInfo[id][TrunkItem][i] = 0;
            TrunkInfo[id][TrunkItemColor][i] = 0;
            TrunkInfo[id][TrunkItemEnchant][i] = 0;
            TrunkInfo[id][TrunkItemMining][i] = 1;
            if(amounts) TrunkRemove(playerid, id, itemid, amounts, i);
        }
        MenuSlotsUpdate(idaofcar[playerid], i, 3);
        if(number != INVALID_VEHICLE_ID) SaveInv(number, 4, i);
        return true;
    }
    return true;
}
stock TrunkAdd(playerid, id, item, amount, color = 0, Enchant = 0, Mining = 1)
{
	if(amount < 0) return TrunkRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetTrunkSlot(id, item))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В багажнику нету места!");
		return 0;
	}
	new number = GetVehicleID(id);
    for(new i; i < 30; i++)
    {
        if(TrunkInfo[id][TrunkItem][i] != item) continue;
        if(!AddTrunkItem(playerid, id, i, item, amount, color, Enchant, Mining)) continue;
        else if(number != INVALID_VEHICLE_ID) SaveInv(number, 4, i);
        return true;
    }
    for(new i; i < 30; i++)
    {
        if(TrunkInfo[id][TrunkItem][i] != 0) continue;
        if(!SetTrunkItem(playerid, id, i, item, amount, color, Enchant, Mining)) continue;
        else if(number != INVALID_VEHICLE_ID) SaveInv(number, 4, i);
        return true;
    }
    return true;
}
stock AddTrunkItem(playerid, id, slot, item, amount, color, Enchant, Mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem], amounts = TrunkInfo[id][TrunkItemAmount][slot] + amount;
    if(TrunkInfo[id][TrunkItemAmount][slot] >= Max_Item) return false;
    if(amounts > Max_Item) Amount = amounts - Max_Item, TrunkInfo[id][TrunkItemAmount][slot] = Max_Item;
    else TrunkInfo[id][TrunkItemAmount][slot] += amount;
    MenuSlotsUpdate(idaofcar[playerid], slot, 3);
    if(Amount) TrunkAdd(playerid, id, item, Amount, color, Enchant, Mining);
    return true;
}
stock SetTrunkItem(playerid, id, slot, item, amount, color, Enchant, Mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem];
    if(TrunkInfo[id][TrunkItemAmount][slot] >= Max_Item) return false;
    if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    TrunkInfo[id][TrunkItem][slot] = item;
    TrunkInfo[id][TrunkItemAmount][slot] = amount;
    TrunkInfo[id][TrunkItemColor][slot] = color;
    TrunkInfo[id][TrunkItemEnchant][slot] = Enchant;
    TrunkInfo[id][TrunkItemMining][slot] = Mining;
    MenuSlotsUpdate(idaofcar[playerid], slot, 3);
    if(Amount) TrunkAdd(playerid, id, item, Amount, color, Enchant, Mining);
    return true;
}
stock TrashRemove(playerid, id, itemid, amount, slot)
{
	if(slot != 255)
	{
        if(TrashInfo[id][TrashItem][slot] != itemid) return 0;
        new amounts = amount - TrashInfo[id][TrashItemAmount][slot];
        TrashInfo[id][TrashItemAmount][slot] -= amount;
        if(TrashInfo[id][TrashItemAmount][slot] <= 0)
        {
            TrashInfo[id][TrashItemAmount][slot] = 0;
            TrashInfo[id][TrashItem][slot] = 0;
            TrashInfo[id][TrashItemColor][slot] = 0;
            TrashInfo[id][TrashItemEnchant][slot] = 0;
            TrashInfo[id][TrashItemMining][slot] = 1;
            if(amounts) TrashRemove(playerid, id, itemid, amounts, slot);
        }
        MenuSlotsUpdate(TrashID[playerid], slot, 1);
        return true;
	}
    for(new i; i < 150; i++)
    {
        if(TrashInfo[id][TrashItem][i] != itemid) continue;
        new amounts = amount - TrashInfo[id][TrashItemAmount][i];
        TrashInfo[id][TrashItemAmount][i] -= amount;
        if(TrashInfo[id][TrashItemAmount][i] <= 0)
        {
            TrashInfo[id][TrashItemAmount][i] = 0;
            TrashInfo[id][TrashItem][i] = 0;
            TrashInfo[id][TrashItemColor][i] = 0;
            TrashInfo[id][TrashItemEnchant][i] = 0;
            TrashInfo[id][TrashItemMining][i] = 1;
            if(amounts) TrashRemove(playerid, id, itemid, amounts, i);
        }
        MenuSlotsUpdate(TrashID[playerid], i, 1);
        return true;
    }
    return true;
}
stock TrashAdd(playerid, id, item, amount, color = 0, Enchant = 0, Mining = 1)
{
	if(amount < 0) return TrashRemove(playerid, id, item, amount-amount*2, InventClick{playerid});
	if(amount > GetTrashSlot(id, item))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В мусорки нету места!");
		return 0;
	}
    for(new i; i < 150; i++)
    {
        if(TrashInfo[id][TrashItem][i] != item) continue;
        if(!AddTrashItem(playerid, id, i, item, amount, color, Enchant, Mining)) continue;
        return true;
    }
    for(new i; i < 150; i++)
    {
        if(TrashInfo[id][TrashItem][i] != 0) continue;
        if(!SetTrashItem(playerid, id, i, item, amount, color, Enchant, Mining)) continue;
        return true;
    }
    return true;
}
stock AddTrashItem(playerid, id, slot, item, amount, color, Enchant, Mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem], amounts = TrashInfo[id][TrashItemAmount][slot] + amount;
    if(TrashInfo[id][TrashItemAmount][slot] >= Max_Item) return false;
    if(amounts > Max_Item) Amount = amounts - Max_Item, TrashInfo[id][TrashItemAmount][slot] = Max_Item;
    else TrashInfo[id][TrashItemAmount][slot] += amount;
    MenuSlotsUpdate(TrashID[playerid], slot, 1);
    if(Amount) TrashAdd(playerid, id, item, Amount, color, Enchant, Mining);
    return true;
}
stock SetTrashItem(playerid, id, slot, item, amount, color, Enchant, Mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem];
    if(TrashInfo[id][TrashItemAmount][slot] >= Max_Item) return false;
    if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    TrashInfo[id][TrashItem][slot] = item;
    TrashInfo[id][TrashItemAmount][slot] = amount;
    TrashInfo[id][TrashItemColor][slot] = color;
    TrashInfo[id][TrashItemEnchant][slot] = Enchant;
    TrashInfo[id][TrashItemMining][slot] = Mining;
    MenuSlotsUpdate(TrashID[playerid], slot, 1);
    if(Amount) TrashAdd(playerid, id, item, Amount, color, Enchant, Mining);
    return true;
}
stock TradeAdd(playerid, item, amount, color, Enchant, Mining)
{
	if(!GetTradeSlot(playerid))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В трейде недостаточно места!");
		return 0;
	}
    for(new i; i < 10; i++)
    {
        if(PI[playerid][pTradeItem][i] != 0) continue;
        if(!SetTradeItem(playerid, i, item, amount, color, Enchant, Mining)) continue;
        return true;
    }
    return true;
}
stock SetTradeItem(playerid, slot, item, amount, color, Enchant, Mining)
{
    new Max_Item = ItemsInfo[item][MaxItem];
    if(PI[playerid][pTradeItemAmount][slot] >= Max_Item) return false;
    if(amount > Max_Item) amount = Max_Item;
    PI[playerid][pTradeItem][slot] = item;
    PI[playerid][pTradeItemAmount][slot] = amount;
    PI[playerid][pTradeItemColor][slot] = color;
    PI[playerid][pTradeItemEnchant][slot] = Enchant;
    PI[playerid][pTradeItemMining][slot] = Mining;
    MenuSlotUpdate(playerid, slot, 4);
    SetPVarInt(playerid, !"InvItemLock", slot);
    return true;
}
stock InvAddExSave(playerid, item, amount, color = 0, enchant = 0, mining = 1)
{
	if(!IsPlayerLogged{playerid}) return 0;
	for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != item) continue;
        if(!AddInvItem(playerid, i, item, amount, color, enchant, mining)) continue;
        return true;
    }
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != 0) continue;
        if(!SetInvItem(playerid, i, item, amount, color, enchant, mining)) continue;
        return true;
    }
	return 1;
}
stock InvAdd(playerid, item, amount, send = 1, color = 0, enchant = 0, mining = 1)
{
	if(!IsPlayerLogged{playerid}) return 0;
	switch(item)
	{
		case 435,449,450,532,537,538,569,570,584,590,591,594,606..608,610: return 1;
	}
	if(amount < 0) return InvRemoveEx(playerid, item, amount-amount*2);
	if(amount > GetInvSlot(playerid, item))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет места или ваш инвентарь заблокирован!");
		return 0;
	}
    //if(amount <= 0 || amount >= 100000) return false;
	if(send)
	{
		if(amount > 1) SCMf(playerid, COLOR_YELLOW, "Вам был добавлен предмет '%s' (%i шт). Чтобы открыть инвентарь используйте клавишу 'Y' или /invent", ItemsInfo[item][ItemName], amount);
		else SCMf(playerid, COLOR_YELLOW, "Вам был добавлен предмет '%s'. Чтобы открыть инвентарь используйте клавишу 'Y' или /invent", ItemsInfo[item][ItemName]);
	}
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != item) continue;
        if(!AddInvItem(playerid, i, item, amount, color, enchant, mining)) continue;
        else if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
        return true;
    }
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != 0) continue;
        if(!SetInvItem(playerid, i, item, amount, color, enchant, mining)) continue;
        else if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
        return true;
    }
    return true;
}
stock AddInvItem(playerid, slot, item, amount, color, enchant, mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem], amounts = PI[playerid][pInvItemAmount][slot] + amount;
    if(PI[playerid][pInvItemAmount][slot] >= Max_Item) return false;
    if(amounts > Max_Item) Amount = amounts - Max_Item, PI[playerid][pInvItemAmount][slot] = Max_Item;
    else PI[playerid][pInvItemAmount][slot] += amount;
    InvSlotUpdate(playerid, slot);
    if(Amount) InvAdd(playerid, item, Amount, 0, color, enchant, mining);
    return true;
}
stock SetInvItem(playerid, slot, item, amount, color, enchant, mining)
{
    new Amount, Max_Item = ItemsInfo[item][MaxItem];
    if(PI[playerid][pInvItemAmount][slot] >= Max_Item) return false;
    if(amount > Max_Item) Amount = amount - Max_Item, amount = Max_Item;
    PI[playerid][pInvItem][slot] = item;
    PI[playerid][pInvItemAmount][slot] = amount;
    PI[playerid][pInvItemColor][slot] = color;
    PI[playerid][pInvItemEnchant][slot] = enchant;
    if(mining == 0) mining = 1;
    PI[playerid][pInvItemMining][slot] = mining;
    InvSlotUpdate(playerid, slot);
    if(Amount) InvAdd(playerid, item, Amount, 0, color, enchant, mining);
    return true;
}
stock InvRemoveEx(playerid, itemid, amount)
{
	if(InventClick{playerid} == 255) InvRemove(playerid, itemid, amount);
	else if(InventClick{playerid} != 255)
	{	
		if(PI[playerid][pInvItem][InventClick{playerid}] == itemid) InvRemove_(playerid, itemid, amount);
		else InvRemove(playerid, itemid, amount);
	}	
	return 1;
}
stock InvRemove_(playerid, itemid, amount)
{
	new slot = InventClick{playerid};
    if(PI[playerid][pInvItem][slot] != itemid) return 0;
    new amounts = amount - PI[playerid][pInvItemAmount][slot];
    PI[playerid][pInvItemAmount][slot] -= amount;
    if(PI[playerid][pInvItemAmount][slot] <= 0)
    {
        PI[playerid][pInvItemAmount][slot] = 0;
        PI[playerid][pInvItem][slot] = 0;
        PI[playerid][pInvItemColor][slot] = 0;
        PI[playerid][pInvItemEnchant][slot] = 0;
    	PI[playerid][pInvItemMining][slot] = 1;
        if(amounts) InvRemove_(playerid, itemid, amounts);
    }
    InvSlotUpdate(playerid, slot);
    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, slot);
    return 1;
}
stock InvRemove(playerid, itemid, amount)
{
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        if(PI[playerid][pInvItem][i] != itemid) continue;
        new amounts = amount - PI[playerid][pInvItemAmount][i];
        PI[playerid][pInvItemAmount][i] -= amount;
        if(PI[playerid][pInvItemAmount][i] <= 0)
        {
            PI[playerid][pInvItemAmount][i] = 0;
            PI[playerid][pInvItem][i] = 0;
            PI[playerid][pInvItemColor][i] = 0;
            PI[playerid][pInvItemEnchant][i] = 0;
            PI[playerid][pInvItemMining][i] = 1;
            if(amounts) InvRemove(playerid, itemid, amounts);
        }
        InvSlotUpdate(playerid, i);
        if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
        return true;
    }
    return true;
}
stock ChangeInvColor(playerid, color)
{
	new color_1 = InvColor[color][0], color_2 = InvColor[color][1], bool:yes;
    PlayerTextDrawColor(playerid, Invent[playerid][25], color_1); //Кнопка Menu
    PlayerTextDrawColor(playerid, Invent[playerid][29], color_1); //Кнопка Cars
    PlayerTextDrawColor(playerid, Invent[playerid][27], color_1); //Кнопка Settings
    PlayerTextDrawColor(playerid, Invent[playerid][31], color_1); //Кнопка Business

    PlayerTextDrawColor(playerid, Invent[playerid][3], color_2); //Кнопка Close
    PlayerTextDrawColor(playerid, Invent[playerid][35], color_2); //Кнопка Family
    PlayerTextDrawColor(playerid, Invent[playerid][33], color_2); //Кнопка Donate
    PlayerTextDrawColor(playerid, Invent[playerid][22], color_2); //Кнопка GPS
    PlayerTextDrawColor(playerid, Invent[playerid][20], color_2); //Кнопка Report
    PlayerTextDrawColor(playerid, Invent[playerid][18], color_2); //Кнопка Help
    PlayerTextDrawColor(playerid, Invent[playerid][41], color_2); //Кнопка Quest
    PlayerTextDrawColor(playerid, Invent[playerid][44], color_2); //Кнопка Rewards
    PlayerTextDrawBoxColor(playerid, Invent[playerid][17], color_2); //Полоска сверху слева
    PlayerTextDrawBoxColor(playerid, Invent[playerid][2], color_2); //Полоска сверху справа
    if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][0]))
    {
    	PlayerTextDrawColor(playerid, InventButton[playerid][0], color_2);
		yes = true;
    }
    switch(InventPage[playerid])
	{
		case 1: PlayerTextDrawColor(playerid, Invent[playerid][13], color_2);
		case 2: PlayerTextDrawColor(playerid, Invent[playerid][14], color_2);
		case 3: PlayerTextDrawColor(playerid, Invent[playerid][15], color_2);
	}
	if(yes) PlayerTextDrawHide(playerid, InventButton[playerid][0]);
    PlayerTextDrawHide(playerid, Invent[playerid][25]); //Кнопка Menu
    PlayerTextDrawHide(playerid, Invent[playerid][29]); //Кнопка Cars
    PlayerTextDrawHide(playerid, Invent[playerid][27]); //Кнопка Settings
    PlayerTextDrawHide(playerid, Invent[playerid][31]); //Кнопка Business
    PlayerTextDrawHide(playerid, Invent[playerid][3]); //Кнопка Close
    PlayerTextDrawHide(playerid, Invent[playerid][35]); //Кнопка Family
    PlayerTextDrawHide(playerid, Invent[playerid][33]); //Кнопка Donate
    PlayerTextDrawHide(playerid, Invent[playerid][22]); //Кнопка GPS
    PlayerTextDrawHide(playerid, Invent[playerid][20]); //Кнопка Report
    PlayerTextDrawHide(playerid, Invent[playerid][18]); //Кнопка Help
    PlayerTextDrawHide(playerid, Invent[playerid][41]); //Кнопка Quest
    PlayerTextDrawHide(playerid, Invent[playerid][44]); //Кнопка Rewards
    PlayerTextDrawHide(playerid, Invent[playerid][17]); //Полоска сверху слева
    PlayerTextDrawHide(playerid, Invent[playerid][2]); //Полоска сверху справа
    if(InventPage[playerid] == 1) PlayerTextDrawHide(playerid, Invent[playerid][13]); //Кнопка выбора страницы инвентаря
    else if(InventPage[playerid] == 2) PlayerTextDrawHide(playerid, Invent[playerid][14]); //Кнопка выбора страницы инвентаря
    else if(InventPage[playerid] == 3) PlayerTextDrawHide(playerid, Invent[playerid][15]); //Кнопка выбора страницы инвентаря
    ////////////////////////////////////////////////////////////////////////////////////////////
    if(yes) PlayerTextDrawShow(playerid, InventButton[playerid][0]);
    PlayerTextDrawShow(playerid, Invent[playerid][25]); //Кнопка Menu
    PlayerTextDrawShow(playerid, Invent[playerid][29]); //Кнопка Cars
    PlayerTextDrawShow(playerid, Invent[playerid][27]); //Кнопка Settings
    PlayerTextDrawShow(playerid, Invent[playerid][31]); //Кнопка Business
    PlayerTextDrawShow(playerid, Invent[playerid][3]); //Кнопка Close
    PlayerTextDrawShow(playerid, Invent[playerid][35]); //Кнопка Family
    PlayerTextDrawShow(playerid, Invent[playerid][33]); //Кнопка Donate
    PlayerTextDrawShow(playerid, Invent[playerid][22]); //Кнопка GPS
    PlayerTextDrawShow(playerid, Invent[playerid][20]); //Кнопка Report
    PlayerTextDrawShow(playerid, Invent[playerid][18]); //Кнопка Help
    PlayerTextDrawShow(playerid, Invent[playerid][41]); //Кнопка Quest
    PlayerTextDrawShow(playerid, Invent[playerid][44]); //Кнопка Rewards
    PlayerTextDrawShow(playerid, Invent[playerid][17]); //Полоска сверху слева
    PlayerTextDrawShow(playerid, Invent[playerid][2]); //Полоска сверху справа
    if(InventPage[playerid] == 1) PlayerTextDrawShow(playerid, Invent[playerid][13]); //Кнопка выбора страницы инвентаря
    else if(InventPage[playerid] == 2) PlayerTextDrawShow(playerid, Invent[playerid][14]); //Кнопка выбора страницы инвентаря
    else if(InventPage[playerid] == 3) PlayerTextDrawShow(playerid, Invent[playerid][15]); //Кнопка выбора страницы инвентаря
}
stock GetInvCount(playerid, item)
{
    new Total;
    for(new i; i < PI[playerid][pInvCell]; i++) if(PI[playerid][pInvItem][i] == item) Total = Total + PI[playerid][pInvItemAmount][i];
    return Total;
}
stock GetShkafCount(id, item)
{
    new Total;
    for(new i; i < 90; i++) if(HouseInfo[id][hItem][i] == item) Total = Total + HouseInfo[id][hItemAmount][i];
    return Total;
}
stock GetTrunkCount(id, item)
{
    new Total;
    for(new i; i < 30; i++) if(TrunkInfo[id][TrunkItem][i] == item) Total = Total + TrunkInfo[id][TrunkItemAmount][i];
    return Total;
}
stock GetInvEnchantAcs(playerid)
{
	new total;
	for(new i; i < PI[playerid][pInvCell]; i++) if(PI[playerid][pInvItemEnchant][i] >= 4) total++;
	return total;
}
stock GetInvSlot(playerid, item)
{
	new total;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(!PI[playerid][pInvItem][i]) total += ItemsInfo[item][MaxItem];
		if(PI[playerid][pInvItem][i] == item && PI[playerid][pInvItemAmount][i] < ItemsInfo[item][MaxItem]) total += ItemsInfo[item][MaxItem] - PI[playerid][pInvItemAmount][i];
	}
	return total;
}
stock GetTradeSlot(playerid)
{
	new total;
	for(new i; i < 10; i++)
	{
		if(!PI[playerid][pTradeItem][i]) total ++;
	}
	return total;
}
stock GetTrashSlot(id, item)
{
	new total;
	for(new i; i < 150; i++)
	{
		if(!TrashInfo[id][TrashItem][i]) total += ItemsInfo[item][MaxItem];
		if(TrashInfo[id][TrashItem][i] == item && TrashInfo[id][TrashItemAmount][i] < ItemsInfo[item][MaxItem]) total += ItemsInfo[item][MaxItem] - TrashInfo[id][TrashItemAmount][i];
	}
	return total;
}
stock GetShkafSlot(id, item)
{
	new total;
	for(new i; i < 90; i++)
	{
		if(!HouseInfo[id][hItem][i]) total += ItemsInfo[item][MaxItem];
		if(HouseInfo[id][hItem][i] == item && HouseInfo[id][hItemAmount][i] < ItemsInfo[item][MaxItem]) total += ItemsInfo[item][MaxItem] - HouseInfo[id][hItemAmount][i];
	}
	return total;
}
stock GetTrunkSlot(id, item)
{
	new total;
	for(new i; i < 30; i++)
	{
		if(!TrunkInfo[id][TrunkItem][i]) total += ItemsInfo[item][MaxItem];
		if(TrunkInfo[id][TrunkItem][i] == item && TrunkInfo[id][TrunkItemAmount][i] < ItemsInfo[item][MaxItem]) total += ItemsInfo[item][MaxItem] - TrunkInfo[id][TrunkItemAmount][i];
	}
	return total;
}
stock SaveObjectVehicle(number)
{
	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%i,", str_2, CarInfo[number][cModelObject][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ModelObject` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%f,", str_2, CarInfo[number][cObjectPosX][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectPosX` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%f,", str_2, CarInfo[number][cObjectPosY][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectPosY` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%f,", str_2, CarInfo[number][cObjectPosZ][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectPosZ` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%f,", str_2, CarInfo[number][cObjectRotX][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectRotX` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%f,", str_2, CarInfo[number][cObjectRotY][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectRotY` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%f,", str_2, CarInfo[number][cObjectRotZ][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectRotZ` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);

	str_1[0] = EOS, str_2[0] = EOS;

	for(new i; i < 6; i++) f(str_2, 150, "%s%i,", str_2, CarInfo[number][cObjectUsed][i]);
	f(str_1, sizeof(str_1), "UPDATE `Ownable` SET `ObjectUsed` = '%s' WHERE `ID` = '%i'", str_2, CarInfo[number][cID]);
	mysql_pquery(mysql, str_1);
	return 1;
}
stock SaveInv(id, type, slot_id)
{
	new owner_id, item_id, amount, color_id, enchanted, mining;

	switch(type)
	{
		case 1://инв игрока
		{
			if(!IsPlayerLogged{id}) return 0;
			owner_id = PI[id][pID];
			item_id = PI[id][pInvItem][slot_id];
			amount = PI[id][pInvItemAmount][slot_id];
			color_id = PI[id][pInvItemColor][slot_id];
			enchanted = PI[id][pInvItemEnchant][slot_id];
			mining = PI[id][pInvItemMining][slot_id];
		}
		case 2://инв аксов игрока
		{
			if(!IsPlayerLogged{id}) return 0;
			owner_id = PI[id][pID];
			item_id = PI[id][pInvItemAcs][slot_id];
			amount = 1;
			color_id = PI[id][pInvItemAcsColor][slot_id];
			enchanted = PI[id][pInvItemAcsEnchant][slot_id];
		}
		case 3://шкаф
		{
			owner_id = HouseInfo[id][hID];
			item_id = HouseInfo[id][hItem][slot_id];
			amount = HouseInfo[id][hItemAmount][slot_id];
			color_id = HouseInfo[id][hItemColor][slot_id];
			enchanted = HouseInfo[id][hItemEnchant][slot_id];
			mining = HouseInfo[id][hItemMining][slot_id];
		}
		case 4://инв багажника
		{
			if(id == INVALID_VEHICLE_ID) return 0;
			owner_id = CarInfo[id][cID];
			item_id = TrunkInfo[OwnableCar[id]][TrunkItem][slot_id];
			amount = TrunkInfo[OwnableCar[id]][TrunkItemAmount][slot_id];
			color_id = TrunkInfo[OwnableCar[id]][TrunkItemColor][slot_id];
			enchanted = TrunkInfo[OwnableCar[id]][TrunkItemEnchant][slot_id];
			mining = TrunkInfo[OwnableCar[id]][TrunkItemMining][slot_id];
		}
		case 5:
		{
			owner_id = CarInfo[id][cID];
			item_id = CarInfo[id][cSlotItem][slot_id];
			amount = 1;
		}
		default: return printf("SaveInv вызвался с типом %i которого нету", type); 
	}

	f(str_query, sizeof(str_query), "SELECT * FROM `inventory_data` WHERE `slot_id` = '%i' AND `owner_id` = '%i' AND `type` = '%i';", slot_id, owner_id, type);
	mysql_pquery(mysql, str_query, "SuperFastSaveByBogdan", "iiiiiiii", slot_id, owner_id, type, item_id, amount, color_id, enchanted, mining);
	
	//SCMAllf(-1, "SaveInv(id %i, type %i, slot_id %i item_id %i amount %i color_id %i enchanted %i str_1(%s))", id, type, slot_id, item_id, amount, color_id, enchanted, str_1);
    return 1;
}
forward SuperFastSaveByBogdan(slot_id, owner_id, type, item_id, amount, color_id, enchanted, mining);
public SuperFastSaveByBogdan(slot_id, owner_id, type, item_id, amount, color_id, enchanted, mining)
{
	if(item_id)
	{
		if(cache_num_rows()) f(str_query, sizeof(str_query), "UPDATE `inventory_data` SET `item_id`='%i', `amount`='%i', `color_id`='%i', `enchanted`='%i', `strength`='0', `mining` = '%i' WHERE `slot_id` = '%i' AND `owner_id` = '%i' AND `type` = '%i';", item_id, amount, color_id, enchanted, mining, slot_id, owner_id, type);
		else f(str_query, sizeof(str_query), "INSERT INTO `inventory_data`(`slot_id`, `owner_id`, `type`, `item_id`, `amount`, `color_id`, `enchanted`, `strength`, `mining`) VALUES ('%i','%i','%i','%i','%i','%i','%i','0','%i');", slot_id, owner_id, type, item_id, amount, color_id, enchanted, mining);
	}
	else f(str_query, sizeof(str_query), "DELETE FROM `inventory_data` WHERE `slot_id` = '%i' AND `owner_id` = '%i' AND `type` = '%i';", slot_id, owner_id, type);
	mysql_query(mysql, str_query, false);
}
stock LoadInv(playerid)
{
	f(str_query, sizeof(str_query), "SELECT * FROM `inventory_data` WHERE `owner_id` = '%i' AND `type` = '1' ORDER BY `slot_id` ASC;", PI[playerid][pID]);
	new Cache:result = mysql_query(mysql, str_query);
	new count = cache_num_rows();
	new slot_id;

	if(count)
	{
		for(new i; i < count; i++)
		{
			cache_get_value_name_int(i, "slot_id", slot_id);
			cache_get_value_name_int(i, "item_id", PI[playerid][pInvItem][slot_id]);
			cache_get_value_name_int(i, "amount", PI[playerid][pInvItemAmount][slot_id]);
			cache_get_value_name_int(i, "color_id", PI[playerid][pInvItemColor][slot_id]);
			cache_get_value_name_int(i, "enchanted", PI[playerid][pInvItemEnchant][slot_id]);
			cache_get_value_name_int(i, "mining", PI[playerid][pInvItemMining][slot_id]);
		}
	}
	cache_delete(result);

	f(str_query, sizeof(str_query), "SELECT * FROM `inventory_data` WHERE `owner_id` = '%i' AND `type` = '2' ORDER BY `slot_id` ASC;", PI[playerid][pID]);
	new Cache:result2 = mysql_query(mysql, str_query);
	count = cache_num_rows();

	if(count)
	{
		for(new i; i < count; i++)
		{
			cache_get_value_name_int(i, "slot_id", slot_id);
			cache_get_value_name_int(i, "item_id", PI[playerid][pInvItemAcs][slot_id]);
			cache_get_value_name_int(i, "color_id", PI[playerid][pInvItemAcsColor][slot_id]);
			cache_get_value_name_int(i, "enchanted", PI[playerid][pInvItemAcsEnchant][slot_id]);
		}
	}
	cache_delete(result2);
}
stock SetInvLang(playerid)
{
 	if(!PI[playerid][pInvLang])
	{
		PlayerTextDrawSetString(playerid, Invent[playerid][42], "QUEST");
		PlayerTextDrawSetString(playerid, Invent[playerid][45], "REWARDS");
		PlayerTextDrawSetString(playerid, Invent[playerid][19], "HELP");
		PlayerTextDrawSetString(playerid, Invent[playerid][21], "REPORT");
		PlayerTextDrawSetString(playerid, Invent[playerid][26], "MENU");
		PlayerTextDrawSetString(playerid, Invent[playerid][28], "SETTINGS");
		PlayerTextDrawSetString(playerid, Invent[playerid][30], "CARS");
		PlayerTextDrawSetString(playerid, Invent[playerid][32], "BUSINESS");
		PlayerTextDrawSetString(playerid, Invent[playerid][34], "DONATE");
		PlayerTextDrawSetString(playerid, Invent[playerid][36], "FAMILY");
		PlayerTextDrawSetString(playerid, Invent[playerid][1], "INVENTORY");
		PlayerTextDrawSetString(playerid, Invent[playerid][4], "CLOSE");
		if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][1]))
		{
			switch(GetPVarInt(playerid, !"InvType"))
			{
				case 1: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRASH");
				case 2: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "WAREHOUSE");
				case 3: PlayerTextDrawSetString(playerid, InventButton[playerid][1], "TRUNK");
			}
		}
	}
	else
	{
		PlayerTextDrawSetString(playerid, Invent[playerid][42], FixText("КВЕСТЫ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][45], FixText("ДОСТИЖЕНИЯ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][19], FixText("ПОМОЩЬ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][21], FixText("РЕПОРТ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][26], FixText("МЕНЮ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][28], FixText("НАСТРОЙКИ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][30], FixText("ТРАНСПОРТ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][32], FixText("БИЗНЕС"));
		PlayerTextDrawSetString(playerid, Invent[playerid][34], FixText("ДОНАТ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][36], FixText("СЕМЬЯ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][1], FixText("ИНВЕНТАРЬ"));
		PlayerTextDrawSetString(playerid, Invent[playerid][4], FixText("ЗАКРЫТЬ"));
		if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][1]))
		{
			switch(GetPVarInt(playerid, !"InvType"))
			{
				case 1: PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("МУСОРКА"));
				case 2: PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("ШКАФ"));
				case 3: PlayerTextDrawSetString(playerid, InventButton[playerid][1], FixText("БАГАЖНИК"));
			}
		}
	}
}
forward InvChangeSize(playerid);
public InvChangeSize(playerid)
{
	new Keys, UPDOWN, RIGHTANDLEFT;
	GetPlayerKeys(playerid, Keys, UPDOWN, RIGHTANDLEFT);
	if(RIGHTANDLEFT == KEY_LEFT) InvSizeChange(playerid, 0);
	else if(RIGHTANDLEFT == KEY_RIGHT) InvSizeChange(playerid, 1);
	if(UPDOWN == KEY_UP) InvSizeChange(playerid, 2);
	else if(UPDOWN == KEY_DOWN) InvSizeChange(playerid, 3);
}
forward InvChangePos(playerid);
public InvChangePos(playerid)
{
	new Keys, UPDOWN, RIGHTANDLEFT;
	GetPlayerKeys(playerid, Keys, UPDOWN, RIGHTANDLEFT);
	if(RIGHTANDLEFT == KEY_LEFT) InvPosChange(playerid, 0);
	else if(RIGHTANDLEFT == KEY_RIGHT) InvPosChange(playerid, 1);
	if(UPDOWN == KEY_UP) InvPosChange(playerid, 2);
	else if(UPDOWN == KEY_DOWN) InvPosChange(playerid, 3);
}
forward InvChangeColor(playerid);
public InvChangeColor(playerid)
{
	new Keys, UPDOWN, RIGHTANDLEFT;
	GetPlayerKeys(playerid, Keys, UPDOWN, RIGHTANDLEFT);
	if(RIGHTANDLEFT == KEY_LEFT)
	{
	    if(PI[playerid][pInvColor] == 0) PI[playerid][pInvColor] = sizeof(InvColor) - 1;
		PI[playerid][pInvColor] -= 1;
		ChangeInvColor(playerid, PI[playerid][pInvColor]);
	}
	else if(RIGHTANDLEFT == KEY_RIGHT)
	{
	    if(PI[playerid][pInvColor] == sizeof(InvColor) - 1) PI[playerid][pInvColor] = 0;
		PI[playerid][pInvColor] += 1;
		ChangeInvColor(playerid, PI[playerid][pInvColor]);
	}
}
stock InvSizeChange(playerid, id)
{
	new Float:speed = 1.00;
	switch(id)
	{
		case 0://KEY_LEFT
		{
			PI[playerid][pInvSize_X] -= speed;
			if(PI[playerid][pInvSize_X] < -5.00) PI[playerid][pInvSize_X] = -5.00;
		}
		case 1://KEY_RIGHT
		{
			PI[playerid][pInvSize_X] += speed;
			if(PI[playerid][pInvSize_X] > 5.00) PI[playerid][pInvSize_X] = 5.00;
		}
		case 2://KEY_UP
	    {
			PI[playerid][pInvSize_Y] -= speed;
			if(PI[playerid][pInvSize_Y] < -5.00) PI[playerid][pInvSize_Y] = -5.00;
		}
		case 3://KEY_DOWN
	    {
			PI[playerid][pInvSize_Y] += speed;
			if(PI[playerid][pInvSize_Y] > 5.00) PI[playerid][pInvSize_Y] = 5.00;
		}
	}
	HideInv(playerid, 1);
	ShowInv(playerid, 0, GetPVarInt(playerid, !"InvPage"));
	return GameTextForPlayerf(playerid, 200, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~POSITION: ~y~%.2f, %.2f~n~~w~SIZE: ~y~%.2f, %.2f", PI[playerid][pInvPos_X], PI[playerid][pInvPos_Y], PI[playerid][pInvSize_X], PI[playerid][pInvSize_Y]);
}
stock InvPosChange(playerid, id)
{
	new Float:speed = 2.5;
	if(GetPVarInt(playerid, !"SpeedInv") == 1) speed += 2.5;
	else if(GetPVarInt(playerid, !"SpeedInv") == 2) speed -= 1.0;
	new Float:X, Float:Y, Float:X2, Float:Y2, Float:SizeX, Float:SizeY;
	switch(id)
	{
		case 0://KEY_LEFT
		{
			PI[playerid][pInvPos_X] -= speed;
			if(PI[playerid][pInvPos_X] < -335.00) PI[playerid][pInvPos_X] = -335.00;
			X2 = -speed;
		}
		case 1://KEY_RIGHT
		{
			PI[playerid][pInvPos_X] += speed;
			if(PI[playerid][pInvPos_X] > 14.00) PI[playerid][pInvPos_X] = 14.00;
			X2 = speed;
		}
		case 2://KEY_UP
	    {
			PI[playerid][pInvPos_Y] -= speed;
			if(PI[playerid][pInvPos_Y] < -100.00) PI[playerid][pInvPos_Y] = -100.00;
			Y2 = -speed;
		}
		case 3://KEY_DOWN
	    {
			PI[playerid][pInvPos_Y] += speed;
			if(PI[playerid][pInvPos_Y] > 130.00) PI[playerid][pInvPos_Y] = 130.00;
			Y2 = speed;
		}
	}
	/*HideInv(playerid, 1);
	ShowInv(playerid, 0, GetPVarInt(playerid, !"InvPage"));*/
	new idd, id2;
	switch(GetPVarInt(playerid, !"InvPage"))
	{
		case 1:
		{
			idd = 0;
			id2 = 36;
		}
		case 2:
		{
			idd = 36;
			id2 = 72;
		}
		case 3:
		{
			idd = 72;
			id2 = 108;
		}
	}
	for(new i; i < 51; i++)
	{
		if(IsPlayerTextDrawVisible(playerid, Invent[playerid][i]))
		{
			PlayerTextDrawGetPos(playerid, Invent[playerid][i], X, Y);
			PlayerTextDrawSetPos(playerid, Invent[playerid][i], X+X2, Y+Y2);
			switch(i)
			{
				case 0,2,16,17,24,43,46:
				{
					PlayerTextDrawGetTextSize(playerid, Invent[playerid][i], SizeX, SizeY);
					PlayerTextDrawTextSize(playerid, Invent[playerid][i], SizeX+X2, SizeY);
				}
			}
		}
		if(i < 17)
		{
			if(IsPlayerTextDrawVisible(playerid, InvOwnableCar[playerid][i]))
			{
				PlayerTextDrawGetPos(playerid, InvOwnableCar[playerid][i], X, Y);
				PlayerTextDrawSetPos(playerid, InvOwnableCar[playerid][i], X+X2, Y+Y2);
			}
		}
		if(i < 13)
		{
			if(IsPlayerTextDrawVisible(playerid, InventMenu[playerid][i]))
			{
				PlayerTextDrawGetPos(playerid, InventMenu[playerid][i], X, Y);
				PlayerTextDrawSetPos(playerid, InventMenu[playerid][i], X+X2, Y+Y2);
			}
		}
		if(i < 2)
		{
			if(IsPlayerTextDrawVisible(playerid, InventButton[playerid][i]))
			{
				PlayerTextDrawGetPos(playerid, InventButton[playerid][i], X, Y);
				PlayerTextDrawSetPos(playerid, InventButton[playerid][i], X+X2, Y+Y2);
			}
		}
		if(i < 8)
		{
		    if(IsPlayerTextDrawVisible(playerid, InventAksEnchant[playerid][i]))
			{
				PlayerTextDrawGetPos(playerid, InventAksEnchant[playerid][i], X, Y);
				PlayerTextDrawSetPos(playerid, InventAksEnchant[playerid][i], X+X2, Y+Y2);
			}
			if(IsPlayerTextDrawVisible(playerid, InventAks[playerid][i]))
			{
				PlayerTextDrawGetPos(playerid, InventAks[playerid][i], X, Y);
				PlayerTextDrawSetPos(playerid, InventAks[playerid][i], X+X2, Y+Y2);
			}
			if(IsPlayerTextDrawVisible(playerid, InventAksSlot[playerid][i]))
			{
				PlayerTextDrawGetPos(playerid, InventAksSlot[playerid][i], X, Y);
				PlayerTextDrawSetPos(playerid, InventAksSlot[playerid][i], X+X2, Y+Y2);
				PlayerTextDrawGetTextSize(playerid, InventAksSlot[playerid][i], SizeX, SizeY);
				PlayerTextDrawTextSize(playerid, InventAksSlot[playerid][i], SizeX+X2, SizeY);
			}
		}
		if(IsPlayerTextDrawVisible(playerid, Invent[playerid][i])) PlayerTextDrawShow(playerid, Invent[playerid][i]);
		if(i < 17 && IsPlayerTextDrawVisible(playerid, InvOwnableCar[playerid][i])) PlayerTextDrawShow(playerid, InvOwnableCar[playerid][i]);
		if(i < 13 && IsPlayerTextDrawVisible(playerid, InventMenu[playerid][i])) PlayerTextDrawShow(playerid, InventMenu[playerid][i]);
		if(i < 2 && IsPlayerTextDrawVisible(playerid, InventButton[playerid][i])) PlayerTextDrawShow(playerid, InventButton[playerid][i]);
		if(i < 8)
		{
			if(IsPlayerTextDrawVisible(playerid, InventAksEnchant[playerid][i])) PlayerTextDrawShow(playerid, InventAksEnchant[playerid][i]);
			if(IsPlayerTextDrawVisible(playerid, InventAks[playerid][i])) PlayerTextDrawShow(playerid, InventAks[playerid][i]);
			if(IsPlayerTextDrawVisible(playerid, InventAksSlot[playerid][i])) PlayerTextDrawShow(playerid, InventAksSlot[playerid][i]);
		}
	}

	for(new i = idd; i < id2; i++)
	{
		if(IsPlayerTextDrawVisible(playerid, InventSlot[playerid][i]))
		{
			PlayerTextDrawGetPos(playerid, InventSlot[playerid][i], X, Y);
			PlayerTextDrawSetPos(playerid, InventSlot[playerid][i], X+X2, Y+Y2);
			PlayerTextDrawShow(playerid, InventSlot[playerid][i]);
		}
		if(IsPlayerTextDrawVisible(playerid, InventSlotAmount[playerid][i]))
		{
			PlayerTextDrawGetPos(playerid, InventSlotAmount[playerid][i], X, Y);
			PlayerTextDrawSetPos(playerid, InventSlotAmount[playerid][i], X+X2, Y+Y2);
			if(PI[playerid][pInvItemColor][i])
			{
				PlayerTextDrawGetTextSize(playerid, InventSlotAmount[playerid][i], SizeX, SizeY);
				PlayerTextDrawTextSize(playerid, InventSlotAmount[playerid][i], SizeX+X2, SizeY);
			}
			PlayerTextDrawShow(playerid, InventSlotAmount[playerid][i]);
		}
		if(PlayerText:InventSlotEnchant[playerid][i] != PlayerText:INVALID_TEXT_DRAW) 
		{
			PlayerTextDrawGetPos(playerid, InventSlotEnchant[playerid][i], X, Y);
			PlayerTextDrawSetPos(playerid, InventSlotEnchant[playerid][i], X+X2, Y+Y2);
			PlayerTextDrawShow(playerid, InventSlotEnchant[playerid][i]);
		}
	}
	return GameTextForPlayerf(playerid, 200, 3, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~POSITION: ~y~%.2f, %.2f~n~~w~SIZE: ~y~%.2f, %.2f", PI[playerid][pInvPos_X], PI[playerid][pInvPos_Y], PI[playerid][pInvSize_X], PI[playerid][pInvSize_Y]);
}
stock SaveChangeInv(playerid)
{
	UpdatePlayerDataFloat(playerid, "InvPos_X", PI[playerid][pInvPos_X], "%.2f");
	UpdatePlayerDataFloat(playerid, "InvPos_Y", PI[playerid][pInvPos_Y], "%.2f");
	UpdatePlayerDataFloat(playerid, "InvSize_X", PI[playerid][pInvSize_X], "%.2f");
	UpdatePlayerDataFloat(playerid, "InvSize_Y", PI[playerid][pInvSize_Y], "%.2f");
	UpdatePlayerDataInt(playerid, "InvColor", PI[playerid][pInvColor]);
	return true;
}
stock ShowDonateSelect(playerid, ID)
{
    new previous = DonateInfo[ID][Item_Previous];
    new next = DonateInfo[ID][Item_Next];

    ShowDonatePreview(playerid, ID, previous, next);

	Donate_Select[playerid] = ID;
	return 1;
}
stock SelectDonateItem(playerid, ID, item, info = 0)
{
	new previous = DonateInfo[ID][Item_Previous];
    new next = DonateInfo[ID][Item_Next];

	if(item == 1) Donate_Select[playerid] = next;
	else Donate_Select[playerid] = previous;

    ID = Donate_Select[playerid];
	previous = DonateInfo[ID][Item_Previous];
    next = DonateInfo[ID][Item_Next];

    ShowDonatePreview(playerid, ID, previous, next);

	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

	if(info)
	{
		new InvID = DonateInfo[ID][Item_InvID];
		new cost = DonateInfo[ID][Item_Cost], value[6] = "Coins";
		switch(InvID)
		{
			case Item_Balloons:
			{
				cost = 49;
				value = "Rub";
			}
			case Item_YellowBox:
			{
			    cost = 20;
			    value = "Rub";
			}
			case Item_BlueBox:
			{
			    cost = 30;
			    value = "Rub";
			}
			case Item_RedBox:
			{
			    cost = 40;
			    value = "Rub";
			}
			case Item_AcsessoryBox:
			{
			    cost = 55;
			    value = "Rub";
			}
			case 1172..1207:
			{
			    cost = 444;
			    value = "Rub";
			}
		}
	    f(str_1, sizeof(str_1), "%s\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ %s",ItemsInfo[InvID][ItemInfo], cost, value);
	    SPD(playerid, 0, 0, !"Информация о предмете", str_1, !"Выход", !"");
	}
}
stock ShowDonatePreview(playerid, ID, previous, next)
{
    new ID_Select = DonateInfo[ID][Item_InvID];
    new ID_Previous = DonateInfo[previous][Item_InvID];
    new ID_Next = DonateInfo[next][Item_InvID];

	PlayerTextDrawSetPreviewModel(playerid, Donate_Player[playerid][7], ItemsInfo[ID_Previous][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, Donate_Player[playerid][7], ItemsInfo[ID_Previous][ItemPosX], ItemsInfo[ID_Previous][ItemPosY], ItemsInfo[ID_Previous][ItemPosZ], ItemsInfo[ID_Previous][ItemPosC]);
	PlayerTextDrawSetSelectable(playerid, Donate_Player[playerid][7], 1);
	if(IsPlayerTextDrawVisible(playerid, Donate_Text[playerid][1])) PlayerTextDrawHide(playerid, Donate_Text[playerid][1]);
	if(DonateInfo[previous][Item_Text])
	{	
		PlayerTextDrawSetString(playerid, Donate_Text[playerid][1], DonateInfo[previous][Item_Text]);
		PlayerTextDrawShow(playerid, Donate_Text[playerid][1]);
	}	

	PlayerTextDrawSetPreviewModel(playerid, Donate_Player[playerid][6], ItemsInfo[ID_Select][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, Donate_Player[playerid][6], ItemsInfo[ID_Select][ItemPosX], ItemsInfo[ID_Select][ItemPosY], ItemsInfo[ID_Select][ItemPosZ], ItemsInfo[ID_Select][ItemPosC]);
	PlayerTextDrawSetSelectable(playerid, Donate_Player[playerid][6], 1);
	if(IsPlayerTextDrawVisible(playerid, Donate_Text[playerid][0])) PlayerTextDrawHide(playerid, Donate_Text[playerid][0]);
	if(DonateInfo[ID][Item_Text])
	{	
		PlayerTextDrawSetString(playerid, Donate_Text[playerid][0], DonateInfo[ID][Item_Text]);
		PlayerTextDrawShow(playerid, Donate_Text[playerid][0]);
	}	

	PlayerTextDrawSetPreviewModel(playerid, Donate_Player[playerid][5], ItemsInfo[ID_Next][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, Donate_Player[playerid][5], ItemsInfo[ID_Next][ItemPosX], ItemsInfo[ID_Next][ItemPosY], ItemsInfo[ID_Next][ItemPosZ], ItemsInfo[ID_Next][ItemPosC]);
	PlayerTextDrawSetSelectable(playerid, Donate_Player[playerid][5], 1);
	if(IsPlayerTextDrawVisible(playerid, Donate_Text[playerid][2])) PlayerTextDrawHide(playerid, Donate_Text[playerid][2]);
	if(DonateInfo[next][Item_Text])
	{
		PlayerTextDrawSetString(playerid, Donate_Text[playerid][2], DonateInfo[next][Item_Text]);
		PlayerTextDrawShow(playerid, Donate_Text[playerid][2]);
	}
	if(PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Donate_Player[playerid][0], FixText(DonateInfo[ID][Item_Name_Rus]));
	else PlayerTextDrawSetString(playerid, Donate_Player[playerid][0], DonateInfo[ID][Item_Name_Eng]);

	PlayerTextDrawShow(playerid, Donate_Player[playerid][7]);
	PlayerTextDrawShow(playerid, Donate_Player[playerid][6]);
	PlayerTextDrawShow(playerid, Donate_Player[playerid][5]);
}
stock BuyDonateItem(playerid, ID)
{
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	new InvID = DonateInfo[ID][Item_InvID];
	static str[850];
	new cost = DonateInfo[ID][Item_Cost], value[6] = "Coins";
	switch(InvID)
	{
		case Item_Balloons:
		{
			cost = 49;
			value = "Rub";
		}
		case Item_YellowBox:
		{
		    cost = 20;
		    value = "Rub";
		}
		case Item_BlueBox:
		{
		    cost = 30;
		    value = "Rub";
		}
		case Item_RedBox:
		{
		    cost = 40;
		    value = "Rub";
		}
		case Item_AcsessoryBox:
		{
		    cost = 55;
		    value = "Rub";
		}
		case 1172..1207:
		{
			cost = 444;
			value = "Rub";
		}
	}
    f(str, 850, "%s\n\n{FFFFFF}Стоимость: {6BC02E}%i{FFFFFF} AZ %s\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести",ItemsInfo[InvID][ItemInfo], cost, value);
    SPD(playerid, 8105, 0, !"", str, !"Обмен", !"Отмена");
}
stock TSave(id, const TableName[], const FieldName[], const set[], const type[])
{
	if(!strcmp(type, "d", true)) mysql_format(mysql, str_3, 256, "UPDATE `%s` SET `%s` = '%i' WHERE `ID` = '%i' LIMIT 1", TableName, FieldName, set, id);
	else if(!strcmp(type, "s", true)) mysql_format(mysql, str_3, 256, "UPDATE `%s` SET `%s` = '%s' WHERE `ID` = '%i' LIMIT 1", TableName, FieldName, set, id);
	mysql_pquery(mysql, str_3);
}
stock FamRedacType(playerid)
{
	static str[300], str2[500];
	str[0] = EOS;
	str2[0] = EOS;
	for(new i; i < sizeof(fType);i ++)
	{
		if(FamilyInfo[PI[playerid][pFamilyMember]][famLevel] >= fType[i][typeLevel]) f(str, sizeof(str), "%s %s %s\n", (FamilyInfo[PI[playerid][pFamilyMember]][famLevel] >= fType[i][typeLevel]) ? ("{FFFFFF}[{A4E45A}+{FFFFFF}]") : ("{FFFFFF}[{C97783}-{FFFFFF}]"), fType[i][typeName], fType[i][typeNameRus]);
		else f(str, sizeof(str), "%s %s\n", (FamilyInfo[PI[playerid][pFamilyMember]][famLevel] >= fType[i][typeLevel]) ? ("{FFFFFF}[{A4E45A}+{FFFFFF}]") : ("{FFFFFF}[{C97783}-{FFFFFF}]"), fType[i][typeName]);
		strcat(str2, str);
	}
	return SPD(playerid, 5009, DIALOG_STYLE_LIST, !"", str2, !"»", !"«");
}
stock GetModelMaxSpeed(const modelid)
{
	if(IsValidVehicleModel(modelid)) return uf_VehicleSpeeds[modelid - 400];
	return 0;
}
stock IsValidVehicleModel(const modelid) return (399 < modelid < 648);
stock GetZonaName(Float: x, Float: y)
{
    for(new i; i != sizeof (gSAZones); i++)
    {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) return i;
    }
    return 1;
}
stock GetCityName(Float: x,  Float: y)
{
    for(new i; i != sizeof (gSAZonesCity); i++)
    {
        if(x >= gSAZonesCity[i][SAZONE_AREA][0] && x <= gSAZonesCity[i][SAZONE_AREA][3] && y >= gSAZonesCity[i][SAZONE_AREA][1] && y <= gSAZonesCity[i][SAZONE_AREA][4] ) return i;
    }
    return 1;
}
stock CheckIsADomen(playerid, str[])
{
	if(Osnovat(PN(playerid))) return 0;
	SetString(str_1, str);
	if(IsADomen(str_1))
    {
		SendAdminsMessagef(COLOR_RED, "%s[%i] подозревается в попытке слива! - - - %s", PN(playerid), playerid, str_1);
		SCM(playerid, COLOR_RED, !"В таких сообщениях запрещается использовать английские символы");
    	SCM(playerid, -1, !"Не повторяйте это действие во избежание наказания.");
    	return 1;
    }
    return 0;
}
stock CheckIsASuccesIP(playerid)
{
    if(!IsASuccesIP(PlayerRegIP[playerid], PlayerIp[playerid]) && !Osnovat(PN(playerid)))
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Наблюдается попытка взлома!");
		SendAdminsMessagef(COLOR_RED, "%s[%i] подозревается во взломе, проверьте его и авторизируйте /acceptadmin [6+ lvl]", PN(playerid), playerid);
		return 1;
 	}
 	return 0;
}
stock Captch_IsValid(playerid, const str[]) return GetString(str, captch_code[playerid]);
stock Captch_CloseForPlayer(playerid)
{
	if(!captch_opened[playerid]) return false;

	Captch_DestroyTextdraws(playerid);

	captch_opened[playerid] = false;
	return 1;
}

stock Captch_OpenForPlayer(playerid, CaptchaID)
{
	if(captch_opened[playerid])return 1;

	Captch_CreateTextdaws(playerid);

	PlayerTextDrawShow(playerid, captch_PTD[playerid][0]);
	PlayerTextDrawShow(playerid, captch_PTD[playerid][1]);

	static c_code[5];

	c_code[0] = random(10);
	c_code[1] = random(10);
	c_code[2] = random(10);
	c_code[3] = random(10);
	c_code[4] = random(10);

	captch_code[playerid][0] = 0;

	for(new i; i < 5; i ++)
	{
		switch(c_code[i])
		{
			case 0: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][0]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][3]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][5]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
			}
			case 7: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
			}
			case 2: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][5]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][3]);
			}
			case 3:
			{
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][3]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
			}
			case 4: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][0]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
			}
			case 5: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][0]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][3]);
			}
			case 6: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][0]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][5]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][3]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
			}
			case 8: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][0]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][3]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][5]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);
			}
			default: {
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][2]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][0]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][1]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][4]);
				PlayerTextDrawShow(playerid, captch_code_PTD[playerid][i][6]);

				c_code[i] = 9;
			}
		}
		f(captch_code[playerid], 7, "%s%i", captch_code[playerid], c_code[i]);
	}
	captch_opened[playerid] = true;
	captch_idbuy[playerid] = CaptchaID;
	buytime[playerid] = GetTickCount();
	return SPD(playerid, 23045, DIALOG_STYLE_INPUT, !"{F89168}Проверка на робота", !"{FFFFFF}Введите {C6FB4A}5{FFFFFF} символов, которые\nвидно на {C6FB4A}вашем{FFFFFF} экране.", !"Принять", !"Отмена");
}

stock Captch_DestroyTextdraws(playerid)
{
	DestroyPlayerTD(playerid, captch_PTD[playerid][0]);
	DestroyPlayerTD(playerid, captch_PTD[playerid][1]);

	for(new i; i < 7; i ++) {
		DestroyPlayerTD(playerid, captch_code_PTD[playerid][0][i]);
		DestroyPlayerTD(playerid, captch_code_PTD[playerid][1][i]);
		DestroyPlayerTD(playerid, captch_code_PTD[playerid][2][i]);
		DestroyPlayerTD(playerid, captch_code_PTD[playerid][3][i]);
		DestroyPlayerTD(playerid, captch_code_PTD[playerid][4][i]);
	}
	return 1;
}
stock Captch_CreateTextdaws(playerid)
{
    new captch_x = ConvertToNegativeNumber(randomEx(9, 11)), captch_y = ConvertToNegativeNumber(randomEx(95, 110));
    new Float:X = randomEx(2, 4);

    captch_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 234.9998 + captch_x, 201.0442 + captch_y, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_PTD[playerid][0], 173.0000, 74.0000);
    PlayerTextDrawAlignment(playerid, captch_PTD[playerid][0], 1);
    PlayerTextDrawColor(playerid, captch_PTD[playerid][0], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_PTD[playerid][0], 255);
    PlayerTextDrawFont(playerid, captch_PTD[playerid][0], 4);
    PlayerTextDrawSetProportional(playerid, captch_PTD[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, captch_PTD[playerid][0], 1);

    captch_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 237.9998 + captch_x, 205.1923 + captch_y, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_PTD[playerid][1], 167.0000, 66.0000);
    PlayerTextDrawAlignment(playerid, captch_PTD[playerid][1], 1);
    PlayerTextDrawColor(playerid, captch_PTD[playerid][1], 0x759DA3FF);
    PlayerTextDrawBackgroundColor(playerid, captch_PTD[playerid][1], 255);
    PlayerTextDrawFont(playerid, captch_PTD[playerid][1], 4);
    PlayerTextDrawSetProportional(playerid, captch_PTD[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, captch_PTD[playerid][1], 1);

    captch_code_PTD[playerid][0][0] = CreatePlayerTextDraw(playerid, 246.6666 + captch_x+X-8.0, 209.0815 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][0], 5.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][0], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][0], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][0], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][0], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][0], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][0], 1);

    captch_code_PTD[playerid][0][1] = CreatePlayerTextDraw(playerid, 269.4012 + captch_x+X-8.0, 208.5110 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][1], 5.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][1], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][1], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][0][1], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][1], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][1], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][1], 1);

    captch_code_PTD[playerid][0][2] = CreatePlayerTextDraw(playerid, 246.5346 + captch_x+X-8.0, 208.5110 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][2], 27.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][2], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][2], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][0][2], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][2], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][2], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][2], 1);

    captch_code_PTD[playerid][0][3] = CreatePlayerTextDraw(playerid, 246.5346 + captch_x+X-8.0, 256.6484 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][3], 25.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][3], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][3], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][0][3], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][3], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][3], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][3], 1);

    captch_code_PTD[playerid][0][4] = CreatePlayerTextDraw(playerid, 246.4346 + captch_x+X-8.0, 233.0471 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][4], 27.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][4], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][4], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][0][4], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][4], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][4], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][4], 1);

    captch_code_PTD[playerid][0][5] = CreatePlayerTextDraw(playerid, 246.6666 + captch_x+X-8.0, 232.4681 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][5], 5.0000+X, 24.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][5], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][5], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][0][5], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][5], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][5], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][5], 1);

    captch_code_PTD[playerid][0][6] = CreatePlayerTextDraw(playerid, 269.4012 + captch_x+X-8.0, 232.9273 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][0][6], 5.0000+X, 27.8000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][0][6], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][0][6], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][0][6], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][0][6], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][0][6], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][0][6], 1);

    captch_code_PTD[playerid][1][0] = CreatePlayerTextDraw(playerid, 277.6015 + captch_x+X-6.0, 209.0815 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][0], 5.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][0], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][0], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][0], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][0], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][0], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][0], 1);

    captch_code_PTD[playerid][1][1] = CreatePlayerTextDraw(playerid, 300.3363 + captch_x+X-12.0, 208.5110 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][1], 5.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][1], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][1], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][1], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][1], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][1], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][1], 1);

    captch_code_PTD[playerid][1][2] = CreatePlayerTextDraw(playerid, 277.8030 + captch_x+X-6.0, 208.5110 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][2], 20.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][2], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][2], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][2], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][2], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][2], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][2], 1);

    captch_code_PTD[playerid][1][3] = CreatePlayerTextDraw(playerid, 277.4696 + captch_x+X-6.0, 256.6484 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][3], 22.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][3], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][3], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][3], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][3], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][3], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][3], 1);

    captch_code_PTD[playerid][1][4] = CreatePlayerTextDraw(playerid, 277.3695 + captch_x+X-6.0, 233.0471 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][4], 23.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][4], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][4], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][4], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][4], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][4], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][4], 1);

    captch_code_PTD[playerid][1][5] = CreatePlayerTextDraw(playerid, 277.6016 + captch_x+X-6.0, 232.4681 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][5], 5.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][5], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][5], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][5], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][5], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][5], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][5], 1);

    captch_code_PTD[playerid][1][6] = CreatePlayerTextDraw(playerid, 300.3363 + captch_x+X-12.0, 232.9273 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][1][6], 5.0000+X, 27.6500+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][1][6], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][1][6], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][1][6], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][1][6], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][1][6], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][1][6], 1);

    captch_code_PTD[playerid][2][0] = CreatePlayerTextDraw(playerid, 305.2366 + captch_x+X-6.0, 208.6667 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][0], 5.0000+X, 26.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][0], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][0], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][0], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][0], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][0], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][0], 1);

    captch_code_PTD[playerid][2][1] = CreatePlayerTextDraw(playerid, 328.6380 + captch_x+X-6.0, 208.5110 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][1], 5.0000+X, 26.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][1], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][1], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][1], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][1], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][1], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][1], 1);

    captch_code_PTD[playerid][2][2] = CreatePlayerTextDraw(playerid, 305.1047 + captch_x+X-6.0, 208.5110 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][2], 26.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][2], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][2], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][2], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][2], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][2], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][2], 1);

    captch_code_PTD[playerid][2][3] = CreatePlayerTextDraw(playerid, 305.7713 + captch_x+X-6.0, 256.6484 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][3], 26.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][3], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][3], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][3], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][3], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][3], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][3], 1);

    captch_code_PTD[playerid][2][4] = CreatePlayerTextDraw(playerid, 305.6712 + captch_x+X-6.0, 233.0471 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][4], 26.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][4], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][4], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][4], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][4], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][4], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][4], 1);

    captch_code_PTD[playerid][2][5] = CreatePlayerTextDraw(playerid, 305.2366 + captch_x+X-6.0, 233.7126 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][5], 5.0000+X, 26.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][5], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][5], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][5], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][5], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][5], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][5], 1);

    captch_code_PTD[playerid][2][6] = CreatePlayerTextDraw(playerid, 328.6380 + captch_x+X-6.0, 232.5124 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][2][6], 5.0000+X, 28.5000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][2][6], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][2][6], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][2][6], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][2][6], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][2][6], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][2][6], 1);

    captch_code_PTD[playerid][3][0] = CreatePlayerTextDraw(playerid, 334.8500 + captch_x+X, 209.4963 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][0], 4.0000+X, 26.2000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][0], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][0], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][0], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][0], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][0], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][0], 1);

    captch_code_PTD[playerid][3][1] = CreatePlayerTextDraw(playerid, 358.5731 + captch_x+X, 209.3407 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][1], 4.0000+X, 26.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][1], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][1], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][1], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][1], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][1], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][1], 1);

    captch_code_PTD[playerid][3][2] = CreatePlayerTextDraw(playerid, 334.7064 + captch_x+X, 209.3406 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][2], 25.0000+X, 4.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][2], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][2], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][2], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][2], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][2], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][2], 1);

    captch_code_PTD[playerid][3][3] = CreatePlayerTextDraw(playerid, 335.3730 + captch_x+X, 255.4040 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][3], 25.0000+X, 4.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][3], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][3], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][3], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][3], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][3], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][3], 1);

    captch_code_PTD[playerid][3][4] = CreatePlayerTextDraw(playerid, 336.6063 + captch_x+X, 232.6323 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][4], 26.0000+X, 4.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][4], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][4], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][4], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][4], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][4], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][4], 1);

    captch_code_PTD[playerid][3][5] = CreatePlayerTextDraw(playerid, 334.5049 + captch_x+X, 232.4681 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][5], 4.0000+X, 27.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][5], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][5], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][5], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][5], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][5], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][5], 1);

    captch_code_PTD[playerid][3][6] = CreatePlayerTextDraw(playerid, 358.5731 + captch_x+X, 234.5865 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][3][6], 4.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][3][6], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][3][6], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][3][6], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][3][6], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][3][6], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][3][6], 1);

    captch_code_PTD[playerid][4][0] = CreatePlayerTextDraw(playerid, 365.6401 + captch_x+X+1.0, 209.4963 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][0], 4.0000+X, 27.8500+1.5);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][0], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][0], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][0], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][0], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][0], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][0], 1);

    captch_code_PTD[playerid][4][1] = CreatePlayerTextDraw(playerid, 391.0414 + captch_x+X+1.0, 209.3407 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][1], 4.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][1], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][1], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][1], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][1], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][1], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][1], 1);

    captch_code_PTD[playerid][4][2] = CreatePlayerTextDraw(playerid, 367.1748 + captch_x+X+1.0, 209.3406 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][2], 27.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][2], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][2], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][2], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][2], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][2], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][2], 1);

    captch_code_PTD[playerid][4][3] = CreatePlayerTextDraw(playerid, 367.1748 + captch_x+X+1.0, 255.4040 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][3], 26.0000+X, 3.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][3], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][3], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][3], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][3], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][3], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][3], 1);

    captch_code_PTD[playerid][4][4] = CreatePlayerTextDraw(playerid, 367.1748 + captch_x+X+1.0, 232.6323 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][4], 25.0000+X, 5.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][4], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][4], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][4], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][4], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][4], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][4], 1);

    captch_code_PTD[playerid][4][5] = CreatePlayerTextDraw(playerid, 365.6400 + captch_x+X+1.0, 232.4681 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][5], 4.0000+X, 25.0000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][5], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][5], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][5], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][5], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][5], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][5], 1);

    captch_code_PTD[playerid][4][6] = CreatePlayerTextDraw(playerid, 391.0414 + captch_x+X+1.0, 234.5865 + captch_y+X, "LD_SPAC:white");
    PlayerTextDrawTextSize(playerid, captch_code_PTD[playerid][4][6], 4.0000+X, 24.9000+X);
    PlayerTextDrawAlignment(playerid, captch_code_PTD[playerid][4][6], 1);
    PlayerTextDrawColor(playerid, captch_code_PTD[playerid][4][6], 0x1A2432FF);
    PlayerTextDrawBackgroundColor(playerid, captch_code_PTD[playerid][4][6], 255);
    PlayerTextDrawFont(playerid, captch_code_PTD[playerid][4][6], 4);
    PlayerTextDrawSetProportional(playerid, captch_code_PTD[playerid][4][6], 0);
    PlayerTextDrawSetShadow(playerid, captch_code_PTD[playerid][4][6], 1);
    return 1;
}
stock SetAdminLevel(playerid, level, reason[])
{
	if(!PI[playerid][pAdmin] && level > 0) Iter_Add(Admin, playerid);
	if(PI[playerid][pAdmin] && level == 0) Iter_Remove(Admin, playerid);
	PI[playerid][pAdmin] = level;
	UpdatePlayerDataInt(playerid, "Admin", PI[playerid][pAdmin]);
	f(str_1, sizeof(str_1), "SetAdminLevel level(%i) reason(%s)", level, reason);
	aml(18, playerid, "", str_1, 2);
	return true;
}
stock GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z, Float:distance, Float:angle = 65535.0)
{
    new
        Float:dis;

    dis = dis/2 + distance;
    GetVehiclePos(vehicleid, x, y, z);
    if(angle == 65535.0)
        GetVehicleZAngle(vehicleid, angle);
    x -= (dis * floatsin(-angle+180, degrees));
    y -= (dis * floatcos(-angle+180, degrees));
    return 1;
}
stock FixText(const string[])
{
	static result[100];
	result[0] = EOS;
	for(new i; i < 100; i++)
	{
		switch(string[i])
		{
			case 'а': result[i] = 'a';
			case 'А': result[i] = 'A';
			case 'б': result[i] = '—';
			case 'Б': result[i] = 'Ђ';
			case 'в': result[i] = 'ў';
			case 'В': result[i] = '‹';
			case 'г': result[i] = '™';
			case 'Г': result[i] = '‚';
			case 'д': result[i] = 'љ';
			case 'Д': result[i] = 'ѓ';
			case 'е': result[i] = 'e';
			case 'Е': result[i] = 'E';
			case 'ё': result[i] = 'e';
			case 'Ё': result[i] = 'E';
			case 'ж': result[i] = '›';
			case 'Ж': result[i] = '„';
			case 'з': result[i] = 'џ';
			case 'З': result[i] = '€';
			case 'и': result[i] = 'њ';
			case 'И': result[i] = '…';
			case 'й': result[i] = 'ќ';
			case 'Й': result[i] = '…';
			case 'к': result[i] = 'k';
			case 'К': result[i] = 'K';
			case 'л': result[i] = 'ћ';
			case 'Л': result[i] = '‡';
			case 'м': result[i] = 'Ї';
			case 'М': result[i] = 'M';
			case 'н': result[i] = '®';
			case 'Н': result[i] = 'H';
			case 'о': result[i] = 'o';
			case 'О': result[i] = 'O';
			case 'п': result[i] = 'Ј';
			case 'П': result[i] = 'Њ';
			case 'р': result[i] = 'p';
			case 'Р': result[i] = 'P';
			case 'с': result[i] = 'c';
			case 'С': result[i] = 'C';
			case 'т': result[i] = '¦';
			case 'Т': result[i] = 'Џ';
			case 'у': result[i] = 'y';
			case 'У': result[i] = 'Y';
			case 'ф','Ф': result[i] = 'Ѓ';
			case 'х': result[i] = 'x';
			case 'Х': result[i] = 'X';
			case 'ц','Ц': result[i] = '‰';
			case 'ч': result[i] = '¤';
			case 'Ч': result[i] = 'Ќ';
			case 'ш': result[i] = 'Ґ';
			case 'Ш': result[i] = 'Ћ';
			case 'щ': result[i] = 'Ў';
			case 'Щ': result[i] = 'Љ';
			case 'ь': result[i] = '©';
			case 'Ь': result[i] = '’';
			case 'ъ': result[i] = 'ђ';
			case 'Ъ': result[i] = '§';
			case 'ы': result[i] = 'Ё';
			case 'Ы': result[i] = '‘';
			case 'э': result[i] = 'Є';
			case 'Э': result[i] = '“';
			case 'ю': result[i] = '«';
			case 'Ю': result[i] = '”';
			case 'я': result[i] = '¬';
			case 'Я': result[i] = '•';
			default: result[i] = string[i];
		}
	}
	return result;
}

stock ShowReportDialog(playerid) return SPD(playerid, 32, DIALOG_STYLE_INPUT, !"{E88813}Репорт", !"{FFFFFF}Вы собираетесь написать сообщение Администрации.\n{FFFFFF}Перед тем как отправить сообщение убедитесь,\n{FFFFFF}что не один из пунктов помощи не дал вам ответа на ваш вопрос.\n\n{AA3333}Запрещено:\n{AA3333}1. Флуд,оскорбления,оффтоп\n{AA3333}2. Просьбы (Дайте денег, дайте лидерку, дайте  дайте..)\n{AA3333}3. Ложные сообщения\n\n{DF4F4F}За нарушение правил администрация может: \n{DF4F4F}1. Предупредить (Warn)\n{DF4F4F}2. Кикнуть с сервера\n{DF4F4F}3. Заблокировать аккаунт (Ban)\n{DF4F4F}4. Удалить аккаунт (Dell) \n\n{65C360}Помните!\n{65C360}Мы всегда готовы помочь если вы соблюдаете правила.\n{65C360}Данные правила установлены для всех игроков "NAME" RP\n\n{FFFFFF}Если вам долго не отвечают, подождите пару минут\n{FFFFFF}Вы не один на сервере.\n{E91BE9}Прежде чем задавать вопрос в репорт, попробуйте найти решение с помощью /help.\n{FFFFFF}Спасибо за понимание, с уважением Администрация State-"NAME"\n\n", !"Отправить", !"Отмена");

stock RandomSletCar()
{
	new rand_car = randomEx(70,86);
	scSpawnTime = rand_car;
	scSpawnTimer = 10800;
	printf("[Server-log] Сработал рандом на люкс автомобиль #%i", rand_car);
}
public OnGameModeInit()
{
	//mysql_log(LOG_ALL);
	//SetMaxPlayers(MAX_PLAYERS);
	new currenttime = GetTickCount();
	DisableCrashDetectLongCall();
	RandomSletCar();
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
   	Iter_Clear(Family);
	Iter_Clear(Admin);
	Iter_Clear(OWNABLECARS);
	Iter_Clear(OWNABLEFAMILYS);
	//Iter_Clear(SLETCAR);
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	LoadInformation();
	ConnectMySQL();
	BonusLoad();
	//SetModOptions();
	////Получение из MySQL-а/////
	//LoadRadars();
	mysql_pquery(mysql, "SELECT * FROM `Houses` ORDER BY `ID`", "LoadHouses");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `Businesses` ORDER BY `ID`", "LoadBiz");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `ItemsInfo` ORDER BY `ID`", "LoadItems");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `ZonesInfo` ORDER BY `ID`", "LoadGangZones");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `OrgsInfo` ORDER BY `ID`", "LoadOrgs");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `Modellimit` ORDER BY `ID`", "LoadSletCar");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `AntiDM` ORDER BY `id`", "LoadAntiDM");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `Objects` ORDER BY `ID`", "LoadObjects");//Оптимизация Димона
	#if AC_ON
	mysql_pquery(mysql, "SELECT * FROM "AC_TABLE_SETTINGS" ORDER BY "AC_TABLE_FIELD_CODE"", "LoadAC");//Оптимизация Димона
	#endif
    LoadVehicles();
    LoadOther();
    LoadActors();
	LoadGlobalTextDraws();
	LoadOwnableCars("The State");
	LoadCity();
	LoadContainer();
	mysql_pquery(mysql, "SELECT * FROM `FamilyHouse` ORDER BY `ID`", "LoadFamilyHouse");//Оптимизация Димона
	mysql_pquery(mysql, "SELECT * FROM `Family` ORDER BY `id`", "LoadFamily");//Оптимизация Димона
    //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
    #include ..\library\MAP\tents
    LimitPlayerMarkerRadius(70.0);
    ManualVehicleEngineAndLights();
   	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	SetNameTagDrawDistance(30.0);
   	ShowPlayerMarkers(2);
   	SetGravity(0.008);
   	AddServerRule("developer", "Mr_Wolf");
   	Weather = 2;
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	HideMapZone = GangZoneCreate(-3000,-3000,3000,3000);
    CaptureDef = -1;
    CaptureAtac = -1;
	SendRconCommand("ackslimit 100000");
	SendRconCommand("messageholelimit 100000");
	SendRconCommand("mapname San Andreas");
	SendRconCommand("language Russian");
	//SetGameModeText(""NAME"-rp Russian");
	SetTimer("GrandTimer", 1000, true);
	new hour;
	gettime(hour, _, _);
	SetWorldTime(hour);
    ServerInfo();
    printf("OnGameModeInit загрузился за %i ms", GetTickCount() - currenttime);
    printf("MAX_PLAYERS - %i", MAX_PLAYERS);

	/*new item = 1211;
	for(new i; i < sizeof(NewCar); i++)
	{
		if(NewCar[i][NewCarLauncher] >= 3200)
		{
			f(str_1, sizeof(str_1), \
			"INSERT INTO `ItemsInfo`(`ID`, `ItemModel`, `ItemPosX`, `ItemPosY`, `ItemPosZ`, `ItemPosC`, `MaxItem`, `ItemInfo`, `ItemName`, `ItemType`, `ItemColor`) VALUES \
			('%i','%i','352','345','20','0.832','1','{FFFFFF}Сертификат: {FDCF28}%s\n{FFFFFF}Можно получить с {FDCF28}игрового магазина{FFFFFF}.\nИспользуется для получения авто марки {FDCF28}%s{FFFFFF}.\nНеобходимо находиться на автобазаре ({FDCF28}/GPS{FFFFFF}','Сертификат: %s','2','')", \
			item, NewCar[i][NewCarLauncher], NewCar[i][NewCarName], NewCar[i][NewCarName], NewCar[i][NewCarName]);
			mysql_query(mysql, str_1, false);
			item ++;
		}
	}*/

    /*mysql_query(mysql, "SELECT `ID`,`InvItemAcs`,`InvItemAcsColor`,`InvItemAcsEnchant` FROM `Qelksekm` ORDER BY `ID` ASC;");
    new ID,InvItemAcs[8],InvItemAcsColor[8],InvItemAcsEnchant[8];
    new str1[512];
    new str2[512];
    new str3[512];
    for(new i; i < cache_num_rows(); i++)
    {
    	ID = cache_get_value_name_int(i, "ID", mysql);

		cache_get_value_name(i, "InvItemAcs", str1), sscanf(str1, "p<,>a<i>[8]", InvItemAcs);
		cache_get_value_name(i, "InvItemAcsColor", str2), sscanf(str2, "p<,>a<i>[8]", InvItemAcsColor);
		cache_get_value_name(i, "InvItemAcsEnchant", str3), sscanf(str3, "p<,>a<i>[8]", InvItemAcsEnchant);
		
		for(new j; j < 8; j++)
		{
			if(InvItemAcs[j])
			{
				f(str_query, sizeof(str_query),"INSERT INTO `inventory_data`(`slot_id`, `owner_id`, `type`, `item_id`, `amount`, `color_id`, `enchanted`, `strength`) VALUES ('%i','%i','2','%i','1','%i','%i','0');", j, ID, InvItemAcs[j], InvItemAcsColor[j], InvItemAcsEnchant[j]);
				mysql_query(mysql, str_query, false);
			}
		}
    }
	*/

	/*mysql_query(mysql, "SELECT `ID`,`SlotItem` FROM `Ownable` ORDER BY `ID` ASC;");
    new ID,Item[8];
    new str1[512];
    for(new i; i < cache_num_rows(); i++)
    {
    	ID = cache_get_value_name_int(i, "ID", mysql);

		cache_get_value_name(i, "SlotItem", str1), sscanf(str1, "p<,>a<i>[8]", Item);
		
		for(new j; j < 8; j++)
		{
			if(Item[j])
			{
				f(str_query, sizeof(str_query),"INSERT INTO `inventory_data`(`slot_id`, `owner_id`, `type`, `item_id`, `amount`, `color_id`, `enchanted`, `strength`) VALUES ('%i','%i','5','%i','1','0','0','0');", j, ID, Item[j]);
				mysql_query(mysql, str_query, false);
			}
		}
    }*/

	return 1;
}
public OnGameModeExit()
{
	SaveServer();
	DisconnectMySQL();
	return 1;
}
stock DisconnectMySQL()
{
    mysql_close(mysql);
    //if(mysql_logs) mysql_close(mysql_logs);
}
stock ShowPassport(playerid, id)
{
	static str[500], str2[300];
	str[0] = EOS, str2[0] = EOS;
    if(PI[playerid][pWanted] > 0)
    {
		f(str2, sizeof(str2), "{FFFFFF}Имя: {FFD700}%s [ {FCAB48}В розыске {FFD700}]\n", PN(playerid));
		strcat(str, str2);
	}
	else
	{
		f(str2, sizeof(str2), "{FFFFFF}Имя: {FFD700}%s\n", PN(playerid));
		strcat(str, str2);
	}
	f(str2, sizeof(str2), "{FFFFFF}Лет в штате: {FFD700}%i\n", PI[playerid][pLevel]);
	strcat(str, str2);
	f(str2, sizeof(str2), "{FFFFFF}Серия: {FFD700}%i\n", PassInfo[playerid][psSeria]);
	strcat(str, str2);
	f(str2, sizeof(str2), "{FFFFFF}Номер: {FFD700}%i\n", PassInfo[playerid][psNumber]);
	strcat(str, str2);
	f(str2, sizeof(str2), "{FFFFFF}Законопослушность: {FFD700}%i/100\n", PI[playerid][pZKP]);
	strcat(str, str2);
	if(!strcmp(PI[playerid][pMerrit], "None")) strcat(str,"{FFFFFF}Семейное положение: {FFD700}[ Не женат(а) ]\n");
	else
	{
        f(str2, sizeof(str2), "{FFFFFF}Семейное положение: {FFD700}[ %s ]\n", PI[playerid][pMerrit]);
	    strcat(str, str2);
	}
	if(PI[playerid][pMember] != 0)
	{
	    if(!IsAtGang(playerid) && !IsAtMafia(playerid))
	    {
			f(str2, sizeof(str2), "{FFFFFF}Организация: {FFD700}%s\n", OrgInfo[GetTeamID(playerid)][oName]);
			strcat(str, str2);
			f(str2, sizeof(str2),"{FFFFFF}Должность: {FFD700}%s\n", GetRankName(GetTeamID(playerid), PI[playerid][pRank]));
			strcat(str, str2);
		}
	}
	f(str2, sizeof(str2), "{FFFFFF}Работа: {FFD700}%s", GetJobName(PI[playerid][pJob]));
	strcat(str, str2);
	if(PI[playerid][pPcix] > 0)
	{
		f(str2, sizeof(str2), "\n\n{FF6200}Лечился в Психиатрической больнице: %i раз (Необходимо обновить мед. карту)", PI[playerid][pPcix]);
		strcat(str, str2);
	}
	SPD(id, 0, 0, !"Паспорт", str, !"Ок", !"");
	return true;
}
stock ShowAntiDmSettings(playerid)
{
	f(str_1, sizeof(str_1), "Название\tСостояние\n");
	for(new i; i < MAX_DMZONE; i++)
	{
	    f(str_2, sizeof(str_2), "{FFFFFF}%s\t%s{FFFFFF}\n", AntiDm[i][zName], AntiDm[i][zStatus] ? ("{9ACD32}[Вкл]") : ("{FF6347}[Выкл]"));
	    strcat(str_1, str_2);
	}
	SPD(playerid, 255, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Принять", !"Отмена");
	return 1;
}
public OnPlayerRequestSpawn(playerid)
{
	if(!IsPlayerLogged{playerid}) AC_Bogdan(playerid, 53);
	return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
	//SCM(playerid, -1, !"OnPlayerRequestClass");
    SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
	if(IsPlayerLogged{playerid})
	{
		PlayerSpawn(playerid);
		GetSkinOfPlayer(playerid);
	}
	return 0;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(PlayerAFKTime[hitid] > 3) return 1;
    if(PI[playerid][pTir] == 1)
    {
        for(new i; i < 8; i++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 1.0, Tir[i][tirPosX], Tir[i][tirPosY], Tir[i][tirPosZ]))
            {
                if(hittype == BULLET_HIT_TYPE_OBJECT && hitid == TirObj[i])
                {
	                switch(weaponid)
	                {
                        case 22:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pPistol_Skill] <= 9900) PI[playerid][pPistol_Skill] += 100;
				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pPistol_Skill] <= 9950) PI[playerid][pPistol_Skill] = 50;
								if(PI[playerid][pVIP] >= 4) SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");
								else SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");
								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "Pistol_Skill", PI[playerid][pPistol_Skill]);
							}
						}
						case 23:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pSDPistol_Skill] <= 9900)
									PI[playerid][pSDPistol_Skill] += 100;

				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pSDPistol_Skill] <= 9950)
									PI[playerid][pSDPistol_Skill] = 50;

				                if(PI[playerid][pVIP] >= 4)
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");

								else
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");

								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "SDPistol_Skill", PI[playerid][pSDPistol_Skill]);
							}
						}
						case 24:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pEagle_Skill] <= 9900)
									PI[playerid][pEagle_Skill] += 100;

				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pEagle_Skill] <= 9950)
									PI[playerid][pEagle_Skill] = 50;

				                if(PI[playerid][pVIP] >= 4)
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");

								else
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");

								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "Eagle_Skill", PI[playerid][pEagle_Skill]);
							}
						}
						case 25:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pShotGun_Skill] <= 9900)
									PI[playerid][pShotGun_Skill] += 100;

				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pShotGun_Skill] <= 9950)
									PI[playerid][pShotGun_Skill] = 50;

				                if(PI[playerid][pVIP] >= 4)
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");

								else
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");

								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
 								UpdatePlayerDataInt(playerid, "ShotGun_Skill", PI[playerid][pShotGun_Skill]);
							}
						}
						case 28:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pUZI_Skill] <= 9900)
									PI[playerid][pUZI_Skill] += 100;

				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pUZI_Skill] <= 9950)
									PI[playerid][pUZI_Skill] = 50;

				                if(PI[playerid][pVIP] >= 4)
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");

								else
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");

								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "UZI_Skill", PI[playerid][pUZI_Skill]);
		 					}
						}
						case 29:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pMP5_Skill] <= 9900)
									PI[playerid][pMP5_Skill] += 100;

				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pMP5_Skill] <= 9950)
									PI[playerid][pMP5_Skill] = 50;

				                if(PI[playerid][pVIP] >= 4)
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");

								else
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");

								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "MP5_Skill", PI[playerid][pMP5_Skill]);
							}
						}
						case 30:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pAK47_Skill] <= 9900)
									PI[playerid][pAK47_Skill] += 100;

				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pAK47_Skill] <= 9950)
									PI[playerid][pAK47_Skill] = 50;

				                if(PI[playerid][pVIP] >= 4)
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");

								else
									SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");

								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "AK47_Skill", PI[playerid][pAK47_Skill]);
							}
						}
						case 31:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
                                if(PI[playerid][pVIP] >= 4 && PI[playerid][pM4_Skill] <= 9900) PI[playerid][pM4_Skill] += 100;
                                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pM4_Skill] <= 9950) PI[playerid][pM4_Skill] += 50;
				                if(PI[playerid][pVIP] >= 4) SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");
								else SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");
								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "M4_Skill", PI[playerid][pM4_Skill]);
							}
						}
						case 34:
		    			{
							PI[playerid][pTirUp] ++;
							static string[10];
							f(string, sizeof(string), "%i/10", PI[playerid][pTirUp]);
						    GameTextForPlayer(playerid, string, 1000, 4);
						    if(PI[playerid][pTirUp] == 10)
						    {
                                PI[playerid][pTirUp] = 0;
			                    if(PI[playerid][pVIP] >= 4 && PI[playerid][pSniper_Skill] <= 9900) PI[playerid][pSniper_Skill] += 100;
				                else if(PI[playerid][pVIP] <= 4 && PI[playerid][pSniper_Skill] <= 9950) PI[playerid][pSniper_Skill] = 50;
				                if(PI[playerid][pVIP] >= 4) SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}1.0%.");
								else SCM(playerid, COLOR_GOLD, !"Вы прокачали скилл оружия на {FFFFFF}0.5%.");
								GameTextForPlayer(playerid, !"Gun skill++", 0, 1);
								UpdatePlayerDataInt(playerid, "Sniper_Skill", PI[playerid][pSniper_Skill]);
							}
						}
	                }
	                if(!PlayerPlayed{playerid})
	                {
	                    SCM(playerid, COLOR_RED, !"Для безопасной стрельбе в тире нужно надеть наушники! Вы можете умереть!");
	                    new Float:Health;
	                    GetPlayerHealth(playerid, Health);
	                    J_SetPlayerHealth(playerid, Health - 2);
	                }
	                if(QuestProgress[playerid][10] < 30 && AcceptQuest[playerid][10] != 0) QuestProgress[playerid][10] ++;
                    else if(QuestProgress[playerid][10] == 30 && AcceptQuest[playerid][10] != 0)
                    {
                        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно выполнили квест по обучению стрельбы.\nВозращайтесь обратно, чтобы получить награду за выполненое задание.", !"Принять", !"");
                        NextStapQI(playerid, 10);
                    }
		    	}
	    	}
    	}
	}
	return 1;
}
public OnPlayerConnect(playerid)
{
	static version[24];
	GetPlayerVersion(playerid, version, sizeof(version));
	if(GetString(version, ""NAME" PC")) SetLauncherStatus(playerid, true);
	else SetLauncherStatus(playerid, false);
	
 	SetPlayerVirtualWorld(playerid, 1228);
	SetPlayerWeather(playerid, Weather);
	GetSkinOfPlayer(playerid);
	GetPlayerIp(playerid, PlayerIp[playerid], 16);
	GetPlayerName(playerid, PlayerName[playerid], MAX_PLAYER_NAME);
	mysql_escape_string(PlayerName[playerid], PlayerName[playerid]);
	//if(CheckPlayerBanEx(playerid)) return Kick(playerid);
	CheckPlayerBanIP(playerid);
	if(GetNumberOfPlayersOnThisIP(PlayerIp[playerid]) > 3 && !IsPlayerPBot(playerid))
	{
	    printf("Игрок попытался запустить на сервер ботов и был наказан");
	    SCM(playerid, COLOR_RED, !"<Warning>{FFFFFF} Вы превысили максимальное число подключений с 1 IP-адреса");
 		BanEx(playerid, "Ботовод");
		SendAdminsMessagef(COLOR_RED, "<Warning>{FFFFFF} %s[%i] был кикнут по подозрению в использовании рак-бота IP: %s [code: 1337].", PN(playerid), PlayerIP(playerid));
 		return 1;
	}
	if(!CodeDostup)
	{
		f(str_3, 82, "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", PN(playerid));
		mysql_pquery(mysql, str_3, "MysqlLoadingIDAccount", "ds", playerid, PN(playerid));
   	}
   	else SetTimerEx("LoginCodeDostup", 1000, false, "d", playerid);
   	#include ../library/MAP/removeobject
    //=============================================================================
	CreateAllTextDraws(playerid);
 	SCM(playerid, COLOR_LIGHTRED, !"Добро пожаловать на "NAME" Role Play!");
	PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
	ResetArrays(playerid);
	for(new i = 1; i < GANGZONES; i++) GangZoneShowForPlayer(playerid, GangZone[i], TeamColors[GZInfo[i][gzFracID]]);
	HungerProgres[playerid] = CreatePlayerTextDraw(playerid,549.500000, 60.000000, "____");
	PlayerTextDrawBackgroundColor(playerid,HungerProgres[playerid], 255);
	PlayerTextDrawFont(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawLetterSize(playerid,HungerProgres[playerid], 0.490000, -0.000000);
	PlayerTextDrawColor(playerid,HungerProgres[playerid], -1);
	PlayerTextDrawSetOutline(playerid,HungerProgres[playerid], 0);
	PlayerTextDrawSetProportional(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawSetShadow(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawUseBox(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawBoxColor(playerid,HungerProgres[playerid], 0x7CAC5AAA);
	PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 604.000000, 40.000000);
	PlayerTextDrawSetSelectable(playerid,HungerProgres[playerid], 0);
	DisablePlayerRaceCheckpoint(playerid);
	PlayerTimerID[playerid] = SetTimerEx("BogdanTimer", 1000, true, "d", playerid);
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    return true;
}
stock SavePlayerInv(playerid)
{
	new currenttime = GetTickCount();
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		SaveInv(playerid, 1, i);
		if(i < 8) SaveInv(playerid, 2, i);
	}
	printf("SavePlayerInv загрузился за %i ms", GetTickCount() - currenttime);
}
public OnPlayerDisconnect(playerid, reason)
{
	SavePlayer(playerid);
	if(!SAVE_PLAYER_INV) SavePlayerInv(playerid);
	static str[15];
	switch(reason)
	{
		case 0: str = "Тайм-аут/Вылет";
		case 1:	str = "Выход";
		default: str = "Кик/Бан";
	}
	if(NewSpeed[playerid])
	{
		KillTimer(NewSpeed[playerid]);
		NewSpeed[playerid] = 0;
	}
	
	if(DmZonePlayed[playerid] == true) {
		UpdatePlayerDataInt(playerid, "DmKill", PI[playerid][pDmZoneKill]);
		UpdatePlayerDataInt(playerid, "DmDeath", PI[playerid][pDmZoneDeath]);
		DmZonePlayed[playerid] = false;
		DmZonePlayers -= 1;
	}

	if(IsPlayerLogged{playerid}) aml(-2, playerid, str, PlayerIp[playerid]);
	else aml(-4, playerid, str, PlayerIp[playerid]);
	if(InvTimer[playerid])
	{
		KillTimer(InvTimer[playerid]);
		InvTimer[playerid] = 0;
	}
	if(DescriptionTextCreate{playerid})
	{
		DestroyDynamic3DTextLabel(DescriptionText[playerid]);
		DescriptionTextCreate{playerid} = false;
	}
	if(VoiceTextCreate{playerid})
	{
		DestroyDynamic3DTextLabel(VoiceText[playerid]);
		VoiceTextCreate{playerid} = false;
	}
	if(BalloonVehicle[playerid]) DestroyBalloon(playerid);
	if(RCVehicle[playerid]) DestroyRadioVehicle(playerid);
	if(InfoSkate[playerid][sActive]) DestroySkate(playerid);
	KillTimer(PlayerTimerID[playerid]);
	foreach(new i: Vehicle)
	{
		if(v_Vehicle_LabelID[i][playerid] != Text3D:-1)
		{
            DestroyDynamic3DTextLabel(v_Vehicle_LabelID[i][playerid]);
            v_Vehicle_LabelID[i][playerid] = Text3D:-1;
        }
	}
	if(TradeOpen{playerid} || TradeTime[playerid][0])
	{
		if(TradeTime[playerid][0])
		{	
			KillTimer(TradeTime[playerid][0]);
			TradeTime[playerid][0] = 0;
		}
		if(TradeOpen{playerid})
		{
			HideTrade(playerid);
			HideTrade(TradeID[playerid]);
		}
		CancelTrade(playerid);
	}
	//Войс
	/*if(BogdanVoice[playerid])
	{
		SvDeleteStream(BogdanVoice[playerid]);
		BogdanVoice[playerid] = SV_NULL;
	}*/
	//Войс
	if(pTemp[playerid][NumReports] != -1)
	{
		Reports[pTemp[playerid][NumReports]] = -1;
		pTemp[playerid][NumReports]	= -1;
	}
	if(DiedText[playerid]) DestroyDynamic3DTextLabel(DiedText[playerid]);
	if(pTemp[playerid][pSellCar] != -1)
	{
	    if(autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid)
	    {
			new i = pTemp[playerid][pSellCar];
			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
	        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
	        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         	DestroyAutoBazarTable(i);
         	pTemp[playerid][pSellCar] = -1;
	        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
	    	if(autoBazarInfo[i][autoBazarType] == 1) UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	else UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		}
	}
	if(PI[playerid][pFamilyMember] != -1) Iter_Remove(Family, playerid);
	if(PI[playerid][pAdmin]) Iter_Remove(Admin, playerid);
    if(PI[playerid][pBeg][1])
    {
        PI[playerid][pBeg][1] = 0;
        DestroyDynamicObject(PI[playerid][pBeg][2]);
        DestroyDynamicObject(PI[playerid][pBeg][2] + 1);
    }
    if(FPlayerText[playerid] == true)
	{
		DestroyDynamic3DTextLabel(PlayerFamily[playerid]);
		FPlayerText[playerid] = false;
	}
	if(bumboxobject[playerid] != 0)
	{
		DestroyDynamicObject(bumboxobject[playerid]);
		bumboxobject[playerid] = 0;
		DestroyDynamic3DTextLabel(b_box3D[playerid]);
		DestroyDynamicArea(area_boombox[playerid]);
		foreach(new i: Player)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
	}
	if(IsValidDynamicArea(area_boombox[playerid])) DestroyDynamicArea(area_boombox[playerid]);
	if(PI[playerid][plveh] != -1)
	{
		Borisov(PI[playerid][plveh], 0);
		Borisov(PI[playerid][plveh], 1);
		DestroyVehicle(PI[playerid][plveh]);
		TwinTurbo[PI[playerid][plveh]][Engine] = false;
		TwinTurbo[PI[playerid][plveh]][cStatus] = false;
		PI[playerid][plveh] = -1;
	}
	DestroyPlayerMapDraws(playerid);
	UnLoadOwnableCars(PN(playerid));
    if(avir[playerid] != -1)
 	{
 	    PI[playerid][pMember] = PI[playerid][preOrg];
 	    UpdatePlayerDataInt(playerid, "Member", PI[playerid][preOrg]);
	    PI[playerid][pRank] = PI[playerid][preOrgg];
	    UpdatePlayerDataInt(playerid, "Rank", PI[playerid][preOrgg]);
	    avir[playerid] =
	    SERIU[playerid] = -1;
	    PI[playerid][preOrg] =
	    PI[playerid][preOrgg] = 0;
 	}
  	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
	{
	    Cuffed{GotoInfo[playerid][gtID]} = false;
		CuffedTime[GotoInfo[playerid][gtID]] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID], true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SCM(GotoInfo[playerid][gtID], COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы были выпущены с конвоя.");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	if(PI[playerid][pScutes] != -1)
	{
		f(str_2, sizeof(str_2), "[ЖУЧЕК]: Игрок %s покинул сервер и жучек был удален.", PN(playerid));
		SCM(PI[playerid][pScutes], COLOR_BLUE, str_2);
		PI[PI[playerid][pMScutes]][pScutes] =
		PI[playerid][pMScutes] = -1;
	}
	if(PI[playerid][pMScutes] != -1)
	{
		PI[PI[playerid][pMScutes]][pScutes] =
		PI[playerid][pMScutes] = -1;
	}
    KillTimer(besttime[playerid]);
	if(KostiName[playerid] != INVALID_PLAYER_ID) Predlog{KostiName[playerid]} = false;
	ExitPlayerFromSlotMachine(playerid);
	TextDrawHideForPlayer(playerid, Digit1[0]);
    TextDrawHideForPlayer(playerid, Digit2[0]);
    TextDrawHideForPlayer(playerid, Digit3[0]);
    TextDrawHideForPlayer(playerid, Digit1[1]);
    TextDrawHideForPlayer(playerid, Digit2[1]);
    TextDrawHideForPlayer(playerid, Digit3[1]);
    TextDrawHideForPlayer(playerid, Digit1[2]);
    TextDrawHideForPlayer(playerid, Digit2[2]);
    TextDrawHideForPlayer(playerid, Digit3[2]);
    TextDrawHideForPlayer(playerid, Digit1[3]);
    TextDrawHideForPlayer(playerid, Digit2[3]);
    TextDrawHideForPlayer(playerid, Digit3[3]);
    TextDrawHideForPlayer(playerid, Digit1[4]);
    TextDrawHideForPlayer(playerid, Digit2[4]);
    TextDrawHideForPlayer(playerid, Digit3[4]);
    TextDrawHideForPlayer(playerid, Digit1[5]);
    TextDrawHideForPlayer(playerid, Digit2[5]);
    TextDrawHideForPlayer(playerid, Digit3[5]);
    TextDrawHideForPlayer(playerid, Box);
    if(SlotTimer[playerid] != -1) KillTimer(SlotTimer[playerid]);
	if(GetPlayerState(playerid) == 2 && vTemp[GetPlayerVehicleID(playerid)][vTeam] == TEAM_LICENSERS && vTemp[GetPlayerVehicleID(playerid)][vPlayer] != -1) vTemp[GetPlayerVehicleID(playerid)][vPlayer] = -1;

	if(IsPlayerLogged{playerid})
	{
	    if(PI[playerid][pWanted] > 1)
		{
			new cops;
			foreach(new id: Player)
			{
				if((ProxDetectorS(10.0, playerid, id, 1) && IsACop(id) && IsPlayerLogged{id} && TeamDuty{id})) cops ++;
			}
			if((cops > 0 && (GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID || Cuffed{playerid} || CuffedTime[playerid] != 0)))
			{
				if(!PI[playerid][pHeal])
				{
					PI[playerid][pJailTime] += (PI[playerid][pWanted] + 1) * 600;
					PI[playerid][pWanted] = 0;
					J_SetPlayerWantedLevel(playerid, 0);
					SetItem(playerid, Item_Drugs);
					SetItem(playerid, Item_Mats);
					if(PI[playerid][pZKP] > 1)
					{
						PI[playerid][pZKP] --;
						UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
					}
					f(str_2, sizeof(str_2), "> Игрок %s(%i) вышел при попытке избежать ареста и был наказан!", PN(playerid), playerid);
					SCMAll(COLOR_RED, str_2);
				}
			}
		}
		if(startlomka[playerid] == 1)
		{
			PI[playerid][pOldRepl] = 1001;
			UpdatePlayerDataInt(playerid, "OldRepl", PI[playerid][pOldRepl]);
		}
		pSportZal[playerid] =
		PI[playerid][pAdmin] =
		AddTimeMessages[playerid] = 0;
		if(KostiName[playerid] != INVALID_PLAYER_ID)
		{
			SCM(KostiName[playerid], COLOR_RED, !"[Информация] {FFFFFF}Кости: Ваш оппонент вышел из игры");
			KostiMoney[KostiName[playerid]] =
			ZapretDice[KostiName[playerid]] = 0;
	  		KostiName[KostiName[playerid]] =
			KostiName[playerid] = INVALID_PLAYER_ID;
		}
		mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Online_status` = '-1' WHERE `ID` = '%i'", PI[playerid][pID]);
		if(PlayerCar[playerid] != INVALID_VEHICLE_ID && IsPlayerInVehicle(playerid, PlayerCar[playerid])) VehicleSeat[PlayerCar[playerid]][PlayerSeat[playerid]] = INVALID_PLAYER_ID;
		PlayerSeat[playerid] = -1;
		PlayerCar[playerid] = INVALID_VEHICLE_ID;
		new NearCops;
		if(!IsAIP(playerid, PN(playerid)))
		{
			foreach(new i: Player)
			{
				if(ArrestID[i] == playerid) ArrestID[i] = INVALID_PLAYER_ID;
				if( IsACop(i) && ProxDetectorS(25.0, playerid, i, 1) ) NearCops ++;
			}
		}
		DestroyAllTextDraws(playerid);
		DisablePlayerRaceCheckpoint(playerid);
		HouseNalog[playerid] = -1;
		HouseNalogState2[playerid] = 0;
		if(ArendKey[playerid] != INVALID_VEHICLE_ID)
		{
			new car = ArendKey[playerid];
			if(ArendInfo[car][aRentID] == playerid)
			{
				ArendInfo[car][aRentID] = INVALID_PLAYER_ID;
				SetVehicleToRespawn(ArendCar[0] + car);
			}
			ArendKey[playerid] = INVALID_VEHICLE_ID;
		}
		CheckBed(playerid);
		if(TazerPlayer[playerid] != INVALID_PLAYER_ID)
		{
		    new id = TazerPlayer[playerid];
		    if(TazerPlayer[id] == playerid) TazerPlayer[id] = INVALID_PLAYER_ID;
		    TazerPlayer[playerid] = INVALID_PLAYER_ID;
		}
		if(LiveOffer[playerid] != INVALID_PLAYER_ID)
		{
			new id = LiveOffer[playerid];
			LiveOffer[playerid] = INVALID_PLAYER_ID;
			if(LiveOffer[id] == playerid)
			{
				LiveOffer[id] = INVALID_PLAYER_ID;
				SCM(id, COLOR_GREY, !"[Подсказка] {FFFFFF}Интервью окончено т.к ваш собеседник покинул сервер");
				TogglePlayerControllable(id, true);
			}
		}
		if(TimetoReturn[playerid] > 0 && pTemp[playerid][pArendaCar] != -1)
		{
			new carsid = pTemp[playerid][pArendaCar];
		    if(carsid != 0)
		    {
		        GetVehicleHealth(carsid, VehicleHealth[carsid]);
			    if(VehicleHealth[carsid] < 700)
			    {
			        new money = floatround(1000 - VehicleHealth[carsid]);
					if(GetMoney(playerid) >= money)
					{
						GiveMoney(playerid, -money);
						aml(52, playerid, "", "порча гос имущества (т/с)", money);
					}
					else if(PI[playerid][pBank] >= money)
					{
						PI[playerid][pBank] -= money;
						UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
						aml(62, playerid, "", "порча гос имущества (т/с)", money);
					}
					else if(PI[playerid][pZKP] >= 10)
					{
						PI[playerid][pZKP] -= 10;
						UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
					}
			    }
			    switch(vTemp[carsid][vJob])
			    {
			        case 1: endrabavt(playerid);
					case 11:
					{
					    new vehsid = GetVehicleTrailer(carsid);
					    SetVehicleToRespawn(vehsid);
					    SetVehicleToRespawn(carsid);
					}
			        default: SetVehicleToRespawn(carsid);
			    }
			    TimetoReturn[playerid] = 0;
			    pTemp[playerid][pArendaCar] = -1;
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(IsATaxi(vehicleid))
			{
			    new PLAYER_SEAT = GetPlayerVehicleSeat(playerid);
				if(!PLAYER_SEAT)
				{
					if(PI[playerid][pJob] == JOB_TAXI)
					{
						if(TaxiTarif[playerid] > 0)
						{
							TaxiTarif[playerid] = 0;
							PlayerTextDrawHide(playerid, TaxiDraw[playerid]);
                            TextDrawShowForPlayer(playerid, BoxTaxi1);
                            TextDrawShowForPlayer(playerid, BoxTaxi2);
                            TextDrawShowForPlayer(playerid, TaxiDol);
                            TextDrawShowForPlayer(playerid, Taximonitor);
                            TextDrawShowForPlayer(playerid, TaxiServ);

							UpdateDynamic3DTextLabelText(TaxiText[vehicleid], COLOR_GOLD, "<< Такси для аренды >>");
							for(new i; i < 4; i++)
							{
							    new player = GetVehicleSeat(vehicleid, i);
							    if(player != INVALID_PLAYER_ID)
								{
								    SCM(player, COLOR_GREY, !"[Подсказка] {FFFFFF}Таксист, который вез вас теперь не на службе");
								    if(PI[player][pMoney] > TaxiPrice[player]) GiveMoney(playerid, TaxiPrice[player]);
									GiveMoney(player, -TaxiPrice[player]);
									aml(50, player, PN(playerid), "Оплата такси", TaxiPrice[player]);

									PlayerTextDrawHide(player,TaxiDraw[player]);
									PlayerTextDrawSetString(player, TaxiDraw[player], "0");
									PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
									PlayerTextDrawSetString(playerid, TaxiDraw[playerid], "0");
	          						TextDrawHideForPlayer(playerid, BoxTaxi1);
		                            TextDrawHideForPlayer(playerid, BoxTaxi2);
		                            TextDrawHideForPlayer(playerid, Taximonitor);
		                            TextDrawHideForPlayer(playerid, TaxiServ);
		                            TextDrawHideForPlayer(playerid, TaxiDol);
	          						TextDrawHideForPlayer(player, BoxTaxi1);
		                            TextDrawHideForPlayer(player, BoxTaxi2);
		                            TextDrawHideForPlayer(player, Taximonitor);
		                            TextDrawHideForPlayer(player, TaxiServ);
		                            TextDrawHideForPlayer(player, TaxiDol);
									TaxiPrice[player] =
									TaxiDistance[player] = 0;
								}
							}
						}
					}
				}
				else
				{
					new id = GetVehicleSeat(vehicleid, 0);
					if(id != INVALID_PLAYER_ID)
					{
						if(GetMoney(playerid) > TaxiPrice[playerid]) GiveMoney(id, TaxiPrice[playerid]);
						SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}Вы взяли $%i с игрока %s за поездку", TaxiPrice[playerid], PN(playerid));
						GiveMoney(playerid, -TaxiPrice[playerid]);
						aml(50, playerid, PN(id), "Оплата такси", TaxiPrice[playerid]);
						new money;
						for(new i = 1; i < 4; i ++)
						{
							new seat = GetVehicleSeat(vehicleid, i);
							if(seat != INVALID_PLAYER_ID) money += TaxiPrice[seat];
						}
						PlayerTextDrawSetStringf(id, TaxiDraw[id], "%i", money);
						PlayerTextDrawHide(playerid, TaxiDraw[playerid]);
					  	TextDrawHideForPlayer(playerid, BoxTaxi1);
				      	TextDrawHideForPlayer(playerid, BoxTaxi2);
				      	TextDrawHideForPlayer(playerid, Taximonitor);
				      	TextDrawHideForPlayer(playerid, TaxiServ);
  					  	TextDrawHideForPlayer(playerid, TaxiDol);
						PlayerTextDrawSetString(playerid, TaxiDraw[playerid], "0");
						SCMf(playerid, COLOR_GREY, "[Информация] {FFFFFF}Вы отдали $%i таксисту %s за поездку", TaxiPrice[playerid], PN(id));
						TaxiPrice[playerid] = 0;
					}
				}
				VehicleSeat[vehicleid][PLAYER_SEAT] = INVALID_PLAYER_ID;
				PlayerSeat[playerid] = -1;
				PlayerCar[playerid] = INVALID_VEHICLE_ID;
			}
		}
		Saveonlineinfo(playerid);
	}
	if(Merrit[0] != 0 && (Merrit[1] == playerid || Merrit[2] == playerid || Merrit[3] == playerid))
	{
		Merrit[0] =
		Merrit[1] =
		Merrit[2] =
		Merrit[3] = 0;
		ProxDetector(25, playerid, "Свадьба была сорвана!", COLOR_ME);
	}
	if(PI[playerid][pCalling] != -1)
	{
		if(PI[playerid][pONPhoneTalk] > 0)
		{
			f(str_2, sizeof(str_2), "[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%i секунд.", PI[playerid][pONPhoneTalk]);
			SCM(playerid, COLOR_GREY, str_2);

            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);

			f(str_2, sizeof(str_2), "[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%i секунд.", PI[PI[playerid][pCalling]][pONPhoneTalk]);
			SCM(PI[playerid][pCalling], COLOR_GREY, str_2);

			SetPlayerSpecialAction(PI[playerid][pCalling], SPECIAL_ACTION_STOPUSECELLPHONE);
		}
		if(!PI[PI[playerid][pCalling]][pONPhoneTalk]) mysql_pqueryf(mysql, "UPDATE `PhoneBook` SET `num` = `num` + 1 WHERE `Namez` = '%s' AND `Name` = '%s'", PN(playerid), PN(PI[playerid][pCalling]));
		DestroyPlayerTD(PI[playerid][pCalling], callname[PI[playerid][pCalling]]);
		DestroyPlayerTD(playerid, callname[playerid]);
		PI[PI[playerid][pCalling]][pONPhoneTalk] =
		PI[playerid][pONPhoneTalk] = 0;
		//SetPVarInt(playerid,"telephone", 1);//ксиоми 1, айфон 2, самсинг 3
		for(new i; i < 15; i++) TextDrawHideForPlayer(playerid, Calling[i]);
		if(GetPVarInt(PI[playerid][pCalling], !"telephone") == 1)
		{
			for(new i = 2; i < 25; i++) TextDrawShowForPlayer(PI[playerid][pCalling], telephonexiaomi[i]);
			TextDrawShowForPlayer(PI[playerid][pCalling], telephonexiaomi[57]);
			TextDrawShowForPlayer(PI[playerid][pCalling], telephonexiaomi[56]);
		}
	    if(GetPVarInt(PI[playerid][pCalling], !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawShowForPlayer(PI[playerid][pCalling], telephoneiphone[i]);
		if(GetPVarInt(PI[playerid][pCalling], !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawShowForPlayer(PI[playerid][pCalling], telephoneSamsung[i]);
		if(pSvon{playerid}) pSvon{playerid} = false;
		if(pSvon{PI[playerid][pCalling]}) pSvon{PI[playerid][pCalling]} = false;
		telephoneon{PI[playerid][pCalling]} = true;
		SelectTextDraw(PI[playerid][pCalling], -16776961);
		telephoneon{playerid} = true;
		SelectTextDraw(playerid, -16776961);
		PI[playerid][pCalling] =
		PI[PI[playerid][pCalling]][pCalling] = -1;
	}
 	if(PI[playerid][pHSpectr] != -1 && SERIU[PI[playerid][pHSpectr]] == playerid)
	{
	 	callcmd::reoff(PI[playerid][pHSpectr]);
	 	GameTextForPlayer(PI[playerid][pHSpectr], !"Player Disconected", 700, 3);
	}
	for(new i; i < sizeof(QI); i++)
	{
		AcceptQuest[playerid][i] =
		QuestShow[playerid][i] =
		QuestProgress[playerid][i] = 0;
	}
	IsPlayerLogged{playerid} = false;
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
    for(new i = 0; i <FamilyHouses; i++)
	{
	    if(areaid == famDynamicZone[i]) FamEntered[playerid] = i;
	}
	for(new i; i < MAX_LAVKA; i++) {
	    if(LavkaInfo[i][lavkaOwnerID] == playerid) {
	        if(areaid == LavkaInfo[i][lavkaArea]) {
	            TimetoReturn[playerid] = 0;
	        }
	    }
	}
	for(new i; i != MAX_AUTO_BAZAR; i++)
 	{
 	    if(autoBazarInfo[i][autoBazarplayerid] == playerid)
 	    {
 	        if(areaid == autoBazarInfo[i][autoBazarArea])
 	        {
 	            if (!IsPlayerInAnyVehicle(playerid)) {
	 	          	TimetoReturn[playerid] = 0;
 	          	}
 	        }
 	    }
	}
	if(areaid >= nzone[0][zArea] && areaid <= nzone[MAX_ZONE - 1][zArea])
	{
		InNZone{playerid} = true;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ShowNoParkZone(playerid);
	}
	foreach(new i: OWNABLERADAR)
	{
	    if(areaid >= RadarInfo[i][radArea] && areaid <= RadarInfo[i][radArea])
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) RadarEntered[playerid] = i;
	    }
	}
	foreach(new i: OWNABLERADAR)
	{
	    if(areaid >= RadarInfo[i][radArea])
	    {
		    new speed = GetPlayerVehicleSpeed(playerid), shtraf;
		    if(PI[playerid][pFamilyMember] != -1)
		    {
			    if(FamilyInfo[PI[playerid][pFamilyMember]][famWhiteList]) shtraf = 500;
			    else shtraf = 1500;
			}
			else shtraf = 1500;
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    {
		        if(!IsACop(playerid))
		        {
	                if(speed > 120)
	                {
	                    if(GetMoney(playerid) >= shtraf)
	                    {
	                        GiveMoney(playerid, -shtraf);
	                        aml(52, playerid, "", "оплата штраф", shtraf);
	                        SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы были оштрафованы за нарушение максимальной допустимой скорости");
	                        SCMf(playerid, -1, "С вас взяли %i$. Постарайтесь не нарушать в дальнейшем.", shtraf);
	                        GameTextForPlayerf(playerid, 3000, 5, "~w~SPEED: %i/120 MAX.~n~FINED %i$.", speed, shtraf);
	                    }
	                    else
	                    {
							PI[playerid][pWanted] += 1;
							J_SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
	                        SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы были объявлены в розыск! Причина: {FF6347}Превышение скорости");
	                        SCMf(playerid, -1, "Ваш текущий уровень розыска: {FF6347}%i", PI[playerid][pWanted]);
	                    }
	                }
	            }
		    }
		    return true;
	    }
	}
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
    for(new i = 0; i <FamilyHouses; i++)
	{
	    if(areaid == famDynamicZone[i]) FamEntered[playerid] = -1;
	}
	for(new i; i < MAX_LAVKA; i++) {
	    if(LavkaInfo[i][lavkaOwnerID] == playerid) {
	        if(areaid == LavkaInfo[i][lavkaArea]) {
	            TimetoReturn[playerid] = 15;
	        }
	    }
	}
	for(new i; i != MAX_AUTO_BAZAR; i++)
 	{
 	    if(autoBazarInfo[i][autoBazarplayerid] == playerid)
 	    {
 	        if(areaid == autoBazarInfo[i][autoBazarArea])
 	        {
 	            if (!IsPlayerInAnyVehicle(playerid)) {
	 	            TimetoReturn[playerid] = 10;
 	            }
 	        }
 	    }
	}
    if(areaid >= nzone[0][zArea] && areaid <= nzone[MAX_ZONE - 1][zArea])
    {
		InNZone{playerid} = false;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) HideNoParkZone(playerid);
    }
	if(areaid == area_boombox[playerid])
	{
	    DestroyDynamicObject(bumboxobject[playerid]);
	    bumboxobject[playerid] = 0;
	    GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][5]][ItemModel]);
	    if(bumboxopen{playerid}) HideBoom(playerid);
		NumMusic[playerid] = 0;
		BoomUse[playerid] = 0;
		Music[playerid] = 0;
		StopAudioStreamForPlayer(playerid);
	    DestroyDynamic3DTextLabel(b_box3D[playerid]);
	    //DestroyDynamicArea(area_boombox[playerid]);
		foreach(new i: Player)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
	    return 1;
	}
	foreach(new i: OWNABLERADAR) if(areaid >= RadarInfo[i][radArea] && areaid <= RadarInfo[i][radArea]) RadarEntered[playerid] = -1;
	return 1;
}
public OnPlayerSpawn(playerid)
{
	//SCM(playerid, -1, !"OnPlayerSpawn");
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(InventStatus{playerid} || MenuStatus{playerid} || TradeOpen{playerid} || EnchantOpen{playerid}) CancelSelectTextDraw(playerid);
    if(!animloading{playerid})
    {
        PreloadAnimLib(playerid, !"BOMBER");
        PreloadAnimLib(playerid, !"RAPPING");
        PreloadAnimLib(playerid, !"SHOP");
        PreloadAnimLib(playerid, !"BEACH");
        PreloadAnimLib(playerid, !"SMOKING");
        PreloadAnimLib(playerid, !"FOOD");
        PreloadAnimLib(playerid, !"ON_LOOKERS");
        PreloadAnimLib(playerid, !"DEALER");
        PreloadAnimLib(playerid, !"CRACK");
        PreloadAnimLib(playerid, !"CARRY");
        PreloadAnimLib(playerid, !"COP_AMBIENT");
        PreloadAnimLib(playerid, !"PARK");
        PreloadAnimLib(playerid, !"INT_HOUSE");
        PreloadAnimLib(playerid, !"FOOD");
        PreloadAnimLib(playerid, !"CRIB");
        PreloadAnimLib(playerid, !"ROB_BANK");
        PreloadAnimLib(playerid, !"JST_BUISNESS");
        PreloadAnimLib(playerid, !"PED");
        PreloadAnimLib(playerid, !"OTB");
        PreloadAnimLib(playerid, !"SCRATCHING");
        PreloadAnimLib(playerid, !"BSKTBALL");
        PreloadAnimLib(playerid, !"CASINO");
        animloading{playerid} = true;
    }
    if(PI[playerid][pLevel] < 4)
    {
        PI[playerid][pBeg][0] = 0;
        SCM(playerid, -1, !"{DFCFCF}>>>{DC4747} Пока вы малоимущий {DFCFCF}(до 4-го уровня){DC4747}, на улице вы можете попрошайничать деньги.");
        SCM(playerid, -1, !"{DC4747}Используйте команду {DFCFCF}/beg{DC4747}, чтобы поставить табличку и банку для денег!");
    }
    if(TimeHealDied[playerid])
    {
    	J_SetPlayerHealth(playerid, 50);
		ApplyAnimation(playerid, "PED", "floor_hit_f", 4.1, 0, 1, 1, 1, 0, 1);
		PlayerLieHeal[playerid] = true;
		pTemp[playerid][TimeHeal] = 30;
		TimeHealDied[playerid] = false;
		Streamer_Update(playerid);
		return 1;
	}
	if(IsValidDynamicArea(area_boombox[playerid])) DestroyDynamicArea(area_boombox[playerid]);
	new hour, minute;
	gettime(hour, minute, _);
	SetPlayerTime(playerid, hour, minute);

	for(new x; x < 13; x ++) _SetGun(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
	PI[playerid][pLastGun] =
	PI[playerid][pLastAmmo] = 0;
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
  	SetPlayerWeather(playerid, Weather);
	StopAudioStreamForPlayer(playerid);

	RemovePlayerAttachedObject(playerid, 9);

    gunmute[playerid] = gettime() + 5;
 	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
	{
	    Cuffed{GotoInfo[playerid][gtID]} = false;
		CuffedTime[GotoInfo[playerid][gtID]] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID], true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SCM(GotoInfo[playerid][gtID], COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы были выпущены с конвоя.");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	callcmd::no(playerid);
	SpectatePlayer[playerid] = INVALID_PLAYER_ID;
	if(TempBGObject[playerid] != -1)
	{
	    DestroyPlayerObject(playerid, TempBGObject[playerid]);
	    TempBGObject[playerid] = -1;
	}
	SetPlayerWantedLevel(playerid, PI[playerid][pWanted]);
	GangZoneHideForPlayer(playerid, HideMapZone);
	PlayerTextDrawHide(playerid, InfoText[playerid]);
	J_SetPlayerDrunkLevel(playerid, 0);
	SetPlayerSkills(playerid);
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	CheckPlayerGoCuff(playerid);
	CheckFuelDraws(playerid);
	PI[playerid][pShowName]     = 1;
	KindFuel[playerid]          = -1;
	CountFuel[playerid]         = 0.0;
	BuyGuns[playerid] 			=
    HouseEntered[playerid]      =
    BizEntered[playerid] 		= -1;
    Controllable{playerid} 		= true;
    Clother[playerid] 			=
    Buyitem[playerid]=-1;
	BuyInt[playerid] 			= -1;
	InJob[playerid] 			=
	PI[playerid][pBomb] = 0;
    CreateMats[playerid] 		= 0;
    Cuffed{playerid} 			= false;
    CuffedTime[playerid] 		= 0;
    CheckTheftCar(playerid);
    CheckMiner(playerid);
    CheckPorter(playerid);
    CheckBreakCuff(playerid);

    SetFullness(playerid, Fullness[playerid]);
    if(PI[playerid][pSkin] == 0)
	{
     	SetPlayerBuySkin(playerid);
	    return 1;
	}
	else
	{
	    SetCameraBehindPlayer(playerid);
	    SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
	}
	if(TeamDuty{playerid}) SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
	else SetPlayerColor(playerid, 0xFDFCFC15);
	if(IsAtGang(playerid) || IsAtMafia(playerid))
	{
		SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
		TeamDuty{playerid} = true;
	}
	if (!PI[playerid][pDemorgan]) {
		SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
	}
	else {
	    PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	}
	SettingSpawn(playerid);
	if(SERIU[playerid] != INVALID_PLAYER_ID && PI[playerid][pAdmin])
	{
	    if(pTemp[playerid][SPECTPLAYER] == true) SpecPl(playerid, false);
	    HideRecon(playerid);
		CancelSelectTextDraw(playerid);

		PI[SERIU[playerid]][pHSpectr] = -1;
		SERIU[playerid] = INVALID_PLAYER_ID;
		TogglePlayerControllable(playerid, true);
	}
	UsingShield[playerid] = false;
 	if(avir[playerid] != -1)
 	{
 	    PI[playerid][pMember] = PI[playerid][preOrg];
 	    UpdatePlayerDataInt(playerid, "Member", PI[playerid][preOrg]);
	    PI[playerid][pRank] = PI[playerid][preOrgg];
	    UpdatePlayerDataInt(playerid, "Rank", PI[playerid][preOrgg]);
	    SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
	    SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
	    SetPlayerVirtualWorld(playerid, avir[playerid]);
		SetPlayerInterior(playerid, aint[playerid]);
	    J_SetPlayerPos(playerid, PI[playerid][Admin_X], PI[playerid][Admin_Y], PI[playerid][Admin_Z]);
	    avir[playerid] = -1;
	    SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
		TogglePlayerControllable(playerid, true);//lika
		PI[playerid][preOrg] = 0;
	    PI[playerid][preOrgg] = 0;
 	}
 	if(PI[playerid][pArmour]) J_SetPlayerArmour(playerid, PI[playerid][pArmour]);
	else J_SetPlayerArmour(playerid, 0);
 	if(IsANews(playerid)) GiveGun(playerid, 43, 200);
    IsPlayerSpawn{playerid} = true;
    
    //снег
	if(PI[playerid][pCustomArizona][7] == 0) Interface_Arizona(playerid, Arz_Snow, 0);
	else if(PI[playerid][pCustomArizona][7] == 1) Interface_Arizona(playerid, Arz_Snow, 1);
    
	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	//SCMf(playerid, -1, "OnPlayerDeath - killerid: %i - reason: %i", killerid, reason);
    if(IsValidDynamicArea(area_boombox[playerid])) DestroyDynamicArea(area_boombox[playerid]);
    if(IsPlayerLogged{playerid})
    {
        if(!IsPlayerSpawn{playerid}) return 0;

		if(DmZonePlayed[playerid] == true)
		{
			foreach(new i: Player) SendDeathMessageToPlayer(i, killerid, playerid, reason);
			DmZoneKilled(playerid, killerid);
			DmZoneSendToPlace(playerid);
			return 1;
		}
    	/*if(!pTemp[playerid][TimeHeal] && !TimeHealDied[playerid] && !TimeSelect[playerid] && !TimeSelectDoctor[playerid] && !PI[playerid][pHeal] && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0) return PlayerCure(playerid, reason);
    	else if(TimeHealDied[playerid]) return PlayerCureSpawn(playerid);*/
        deltarget(playerid);
		if(animan{playerid})
		{
		    animan{playerid} = false;
            TextDrawHideForPlayer(playerid, StopAnimation);
		}
		if(selfi{playerid})
		{
		    selfi{playerid} = false;
		    TextDrawHideForPlayer(playerid, StopAnimation);
		}
		IsPlayerSpawn{playerid} = false;
		if(PI[playerid][pArmour]) J_SetPlayerArmour(playerid, 0);
		if(PI[playerid][pLastGun] > 0)
		{
		    if(!IsPlayerInAnyVehicle(playerid))
		    {
			    new Float:x, Float:y, Float:z, Float:eagle;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFAngle(playerid, eagle);
		        new idgun;
		        switch(PI[playerid][pLastGun])
		        {
		            case 3: idgun = 334;
		            case 4: idgun = 335;
		            case 5: idgun = 336;
					case 6: idgun = 337;
					case 8: idgun = 339;
					case 17: idgun = 343;
					case 22: idgun = 346;
					case 23: idgun = 347;
					case 24: idgun = 348;
					case 25: idgun = 349;
					case 28: idgun = 352;
					case 29: idgun = 353;
					case 30: idgun = 355;
					case 31: idgun = 356;
					case 32: idgun = 372;
					case 33: idgun = 357;
					case 34: idgun = 358;
					case 42: idgun = 366;
					case 43: idgun = 367;
					case 46: idgun = 371;
					default:
					{
					    PI[playerid][pLastGun] =
		 				PI[playerid][pLastAmmo] = 0;
					}
		        }
		        if(idgun > 0)
		        {
			        new idobject = -1;
			        for(new i; i < MAX_DGUNS; i++)
				    {
				        if(dguns[i] == -1)
						{
				 			idobject = i;
					 		break;
						}
				    }
			        if(idobject == -1)
				    {
				        new min1 = gettime();
				        for(new i; i < MAX_DGUNS; i++)
				        {
				            if(dguntime[i] < min1)
				            {
				                min1 = dguntime[i];
				                idobject = i;
				            }
				        }
				        DestroyDynamicObject(dguns[idobject]);
				    }
		            dguntime[idobject] = gettime();
		            dpatrons[idobject] = PI[playerid][pLastAmmo];
			        dgunn[idobject] = PI[playerid][pLastGun];
			        dguns[idobject] = CreateDynamicObject(idgun, x, y, z - 0.97, 96, 110, eagle, GetPlayerVirtualWorld(playerid));
					PI[playerid][pLastGun] =
					PI[playerid][pLastAmmo] = 0;
				}
			}
		}
		ResetGun(playerid);
  		if(pTemp[playerid][pDeathCar] != INVALID_VEHICLE_ID && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
		{
	 		pTemp[playerid][pDeathCar] = INVALID_VEHICLE_ID;
    		ExitCar(playerid);
    		new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z);
		    SetTimerEx("PlayerSpawn", 2000, false, "i", playerid);
		}
		StopAudioStreamForPlayer(playerid);
	    Smoke[playerid] =
	    pSportZal[playerid] =
	    SellGzone[playerid] =
	    SellPGzone[playerid] = 0;
	    SetFullness(playerid, 40);
		new job = PI[playerid][pJob];
		new injob = InJob[playerid];
		if((job == 17 || job == 18 || job == 19 || job == 20) && (injob == 1 || injob == 3))
		{
		    InJob[playerid] = 0;
		    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы забыли забрать свою зарплату, не забудьте вернутся что бы забрать ее!");
		}
		InJob[playerid] =
		Vnedren[playerid] = 0;
		if(job == JOB_PIZZA)
		{
			InJobs[playerid] = 0;
			NumInc_CP[playerid] = -1;
		}
		//J_SetPlayerHealth(playerid, 50);
	 	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
		if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)
		{
		    Cuffed{GotoInfo[playerid][gtID]} = false;
			CuffedTime[GotoInfo[playerid][gtID]] = 0;
			TogglePlayerControllable(GotoInfo[playerid][gtID], true);
			SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
		    ClearAnims(GotoInfo[playerid][gtID]);
	     	SCM(GotoInfo[playerid][gtID], COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы были выпущены с конвоя.");
	        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
	        CheckPlayerGoCuff(playerid);
		}
		if(PI[playerid][pMaskON] > 0)
		{
		    PI[playerid][pMaskON] = 0;
	        if(TeamDuty{playerid}) SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
			else SetPlayerColor(playerid, 0xFFFFFF80);
		}
		gunmute[playerid] = gettime() + 5;
		TextDrawHideForPlayer(playerid, Boxmenu0);
		TextDrawHideForPlayer(playerid, Boxmenu1);
		TextDrawHideForPlayer(playerid, Boxmenu2);
		TextDrawHideForPlayer(playerid, Boxmenu3);
		TextDrawHideForPlayer(playerid, ButtonLeft);
		TextDrawHideForPlayer(playerid, ButtonRight);
		TextDrawHideForPlayer(playerid, ButtonCancel);
		TextDrawHideForPlayer(playerid, ButtonSelect);
		TextDrawHideForPlayer(playerid, boxaccept);
		TextDrawHideForPlayer(playerid, boxcancel);
	    PlayerTextDrawHide(playerid, TaxiDraw[playerid]);
		TextDrawHideForPlayer(playerid, BoxTaxi1);
	    TextDrawHideForPlayer(playerid, BoxTaxi2);
	    TextDrawHideForPlayer(playerid, Taximonitor);
	    TextDrawHideForPlayer(playerid, TaxiServ);
	    TextDrawHideForPlayer(playerid, TaxiDol);
		PlayerTextDrawHide(playerid, InfoText[playerid]);
		CheckBed(playerid);

		if(!PI[playerid][pJailTime] && !PI[playerid][pDemorgan] && DmZonePlayed[playerid] == false)
		{
	        if(IsAArmy(playerid))
		    {
		    	SetPlayerVirtualWorld(playerid, 1);
				SetPlayerInterior(playerid, 2);
			}
			else PlayerHospital(playerid);
		    TogglePlayerControllable(playerid, true);
		}
		if(Merrit[0] != 0 && (Merrit[1] == playerid || Merrit[2] == playerid || Merrit[3] == playerid))
		{
			Merrit[0] =
			Merrit[1] =
			Merrit[2] =
			Merrit[3] = 0;
			ProxDetector(25, playerid, !"Свадьба была сорвана!", COLOR_ME);
		}
		if(killerid != INVALID_PLAYER_ID)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 110.0, 2760.7742, -2447.1958, 13.5360) && IsPlayerInRangeOfPoint(killerid, 110.0, 2760.7742, -2447.1958, 13.5360) ||
				IsPlayerInRangeOfPoint(playerid, 190.0, 255.7347, 1837.5056, 17.6991) && IsPlayerInRangeOfPoint(killerid, 190.0, 255.7347, 1837.5056, 17.6991) ||
				IsPlayerInRangeOfPoint(playerid, 250.0, -1368.9514, 499.1776, 11.1953) && IsPlayerInRangeOfPoint(killerid, 250.0, -1368.9514, 499.1776, 11.1953) ) if(IsAtGang(playerid) && IsAArmy(killerid))
			{
		 		GiveMoney(killerid, GLS[18]);
		 		if(GetMoney(playerid) > GLS[18]) GiveMoney(playerid, -GLS[18]);
		 		aml(50, playerid, PN(killerid), "Попался бандит", GLS[18]);
		 		SCM(killerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы получили премию за пойманого бандита!");
			}
			if(IsACop(killerid) && PI[playerid][pWanted] > 0)
			{
			    if(ProxDetectorS(30.0, playerid, killerid, 1))
	            {
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					if(PI[playerid][pMember] != 3) PI[playerid][pJailTime] = PI[playerid][pWanted] * 300;
					else PI[playerid][pJailTime] = PI[playerid][pWanted] * 800;
					PI[playerid][pBailPrice] = PI[playerid][pWanted] * 300;
					UpdatePlayerDataInt(playerid, "BailPrice", PI[playerid][pWanted] * 300);
					if(GetInvCount(playerid, Item_Drugs) > 0 || GetInvCount(playerid, Item_Mats) > 0) SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас отобрали наркотики и патроны!");
                    if(!IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770))
                    {
						new jrand = random(2);
						SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[jrand][0], JailPos[jrand][1], JailPos[jrand][2], 180.0);
					}
					else SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[2][0], JailPos[2][1], JailPos[2][2], 180.0);

					ResetGun(playerid);
					PI[playerid][pWanted] = 0;
					SetItem(playerid, Item_Drugs);
					SetItem(playerid, Item_Mats);
					J_SetPlayerWantedLevel(playerid, 0);
					PlayerSpawn(playerid);
					f(str_2, sizeof(str_2), ">> Вы были посажены в тюрьму на %i минут.", (PI[playerid][pJailTime] / 60));
					SCM(playerid, COLOR_LIGHTRED, str_2);
					if(IsPlayerToKvadrat(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257))
					{
						PI[playerid][pPrison] = 1;
						SetPlayerVirtualWorld(playerid, 11);
					}
					else if(IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770))
					{
						PI[playerid][pPrison] = 3;
						SetPlayerVirtualWorld(playerid, 13);
					}
					else
					{
						PI[playerid][pPrison] = 2;
						SetPlayerVirtualWorld(playerid, 12);
					}
					UpdatePlayerDataInt(playerid, "Prison", PI[playerid][pPrison]);
					SetPlayerInterior(playerid, 6);
					TogglePlayerControllable(playerid, true);
				}
			}
			if((CaptureTime[0] > 0 || CaptureTime[1] > 0) && ((GetTeamID(playerid) == CaptureAtac && GetTeamID(killerid) == CaptureDef) || (GetTeamID(playerid) == CaptureDef && GetTeamID(killerid) == CaptureAtac)))
		    {
				if(GetTeamID(playerid) == CaptureAtac && GetTeamID(killerid) == CaptureDef) CaptureDefKill ++;
				if(GetTeamID(playerid) == CaptureDef && GetTeamID(killerid) == CaptureAtac) CaptureAtacKill ++;
				foreach(new i: Player)
				{
					if(GetTeamID(i) == CaptureDef || GetTeamID(i) == CaptureAtac) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
			}
			if(BizWarState == 2 && ((GetTeamID(playerid) == BizAtack && GetTeamID(killerid) == BizDeff) || (GetTeamID(playerid) == BizDeff && GetTeamID(killerid) == BizAtack)))
		    {
				if(GetTeamID(playerid) == BizAtack && GetTeamID(killerid) == BizDeff) BizDeffkill ++;
				if(GetTeamID(playerid) == BizDeff && GetTeamID(killerid) == BizAtack) BizAtakkill ++;
				foreach(new i: Player)
				{
					if(GetTeamID(i) == BizDeff || GetTeamID(i) == BizAtack) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
			}
			if(!IsACop(killerid) && !IsAArmy(killerid))
		    {
                if(!IsPlayerInRangeOfPoint(playerid, 100, -518.5075, -92.3690, 62.2983) && !IsPlayerInRangeOfPoint(playerid, r_wanted, position_unjail[0], position_unjail[1], position_unjail[2]))
                {
			        if(GetPlayerGangZone(killerid) > 0) return 1;
			        if(PI[killerid][pZKP] > 1)
			        {
			        	PI[killerid][pZKP] --;
			        	UpdatePlayerDataInt(killerid, "ZKP", PI[killerid][pZKP]);
			        }
					if(PI[killerid][pWanted] < 6) {
						PI[killerid][pWanted] += 1;
						J_SetPlayerWantedLevel(killerid, PI[killerid][pWanted]);
				    }

					SCM(killerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы были объявлены в розыск! Причина: {FF6347}нападение/убийство");
					f(str_2, sizeof(str_2), "Ваш текущий уровень розыска: {FF6347}%i", PI[killerid][pWanted]);
					SCM(killerid, -1, str_2);
				    f(str_2, sizeof(str_2), "Внимание! {FFFFFF}%s[%i] {FF6347}был(а) объявлен(a) в розыск! Причина: {FFFFFF}убийство{FF6347} | Уровень розыска: {FFFFFF}%i.", PN(killerid), killerid, PI[killerid][pWanted]);
		            SendCopsMessage(COLOR_LIGHTRED, str_2);
				}
			}
		}
		foreach(new i: Admin) if(KillList{i}) SendDeathMessageToPlayer(i, killerid, playerid, reason);
	}
	return 1;
}
public OnVehicleSpawn(vehicleid)
{
	if(GetVehicleModel(vehicleid)==426 && vTemp[vehicleid][vTeam]==TEAM_LICENSERS)
	{
		new LicAttach;
		LicAttach = CreateDynamicObject(19309,0.0, 0.0, 0, 0.0, 0.0, 0.0, -1,  -1, -1,100.0);
		SetDynamicObjectMaterialText(LicAttach, 0, "Учебная",50, "Tahoma", 27, 1, -1, -65536, 1);
		AttachDynamicObjectToVehicle(LicAttach, vehicleid, 0.0, -0.5, 0.9, 0.0, 0.0, 0.0);
	}
	if(GetVehicleModel(vehicleid) == 512 && vTemp[vehicleid][vTeam] == TEAM_LICENSERS && vTemp[vehicleid][vPlayer] !=-1)
	{
	    SCM(vTemp[vehicleid][vPlayer],COLOR_RED,"[Подсказка]{FFFFFF}Вы сломали транспорт, который принадлежит министерству транспорта.");
	    SCM(vTemp[vehicleid][vPlayer],COLOR_RED,"[Подсказка]{FFFFFF}Работники этой организации выписали вам счет на оплату ущерба");
	    SCM(vTemp[vehicleid][vPlayer],COLOR_RED,"[Подсказка]{FFFFFF}Ваш кредитный счет пополнен на 5 000$. Оплатить его можно в банке.");
		PI[vTemp[vehicleid][vPlayer]][pCredit]+=5000;
		UpdatePlayerDataInt(vTemp[vehicleid][vPlayer], "Credit", PI[vTemp[vehicleid][vPlayer]][pCredit]);
		FlyivingTest[vTemp[vehicleid][vPlayer]] = 0;
		CarTest[vTemp[vehicleid][vPlayer]] = -1;
		MotoTest[vTemp[vehicleid][vPlayer]] = -1;
	}
	vTemp[vehicleid][vPlayer] = -1;
 	if(vTemp[vehicleid][vJob] > 0)
	{
		foreach(new i: Player)
		{
		    if(pTemp[i][pArendaCar] == vehicleid)
			{
				pTemp[i][pArendaCar] = -1;
				TimetoReturn[i] = 0;
				DisablePlayerRaceCheckpoint(i);
		    	break;
			}
		}
		if(vTemp[vehicleid][vJob] == 12 || (vTemp[vehicleid][vJob]>=17 && vTemp[vehicleid][vJob]<=20)) vTemp[vehicleid][Fuel] = 100.0;
		if(vTemp[vehicleid][vJob]==1) UpdateDynamic3DTextLabelText(AutobCarText[vehicleid], 0xFFFFFFFF, "{E06C1F}Автобус\n{73B461}[Для аренды]");
	}
	if(IsACopCar(vehicleid) || GetVehicleModelEx(vehicleid) == 432 || GetVehicleModelEx(vehicleid) == 433 || GetVehicleModelEx(vehicleid) == 427 || GetVehicleModelEx(vehicleid) == 528) J_SetVehicleHealth(vehicleid,5000);
	else J_SetVehicleHealth(vehicleid,1500);

	if(IsAArendCar(vehicleid) || Isamoped(vehicleid)) vTemp[vehicleid][Fuel] = 100.0;
	if(vTemp[vehicleid][vJob]==JOB_MECHANIC)
	{
		BenzinCena[vehicleid]=0.0;
		if(BenzinCount[vehicleid]>0)
		{
		    BizInfo[Contracter[vehicleid]][bProducts]+=BenzinCount[vehicleid];
		    UpdateFuels(Contracter[vehicleid]);
		    BenzinCount[vehicleid] =0;
		}
		Contracter[vehicleid]=-1;
		UpdateDynamic3DTextLabelText(Benzin[vehicleid], 0xFFFFFFFF, "{57B22C}Заправка 0$\n{FFFFFF}Бензина: 0/1000");
	}
	if((vTemp[vehicleid][vTeam] >=1 && vTemp[vehicleid][vTeam]<11) || vTemp[vehicleid][vTeam]>19) vTemp[vehicleid][Fuel] = 100.0;
	if(IsAStripCar(vehicleid)) vTemp[vehicleid][CarStrips] = 10;

	if(IsAVelik(vehicleid) || GetVehicleVirtualWorld(vehicleid) == 1228 || GetVehicleInterior(vehicleid) == 69 || IsARcCar(vehicleid)) SetEngineStatus(vehicleid,true, -1);
	else SetEngineStatus(vehicleid,false, -1);

	new number = GetVehicleID(vehicleid);
    if(IsAOwnableCar(number))
	{
		UpdateCarInfo(vehicleid);
		ChangeVehicleColor(vehicleid, CarInfo[number][cColor_1], CarInfo[number][cColor_2]);
		SetDoorsStatus(vehicleid, CarInfo[number][cLock]);
	}
	else
	{
		if(vTemp[vehicleid][vJob] != 0)
		{
			SetDoorsStatus(vehicleid, vTemp[vehicleid][vLock]);
			vTemp[vehicleid][vLock] = 0;
		}	
	}
	
    if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1)
  	{
		DestroyDynamicObject(LightsObject[vehicleid][0]);
		DestroyDynamicObject(LightsObject[vehicleid][1]);
		LightsObject[vehicleid][0] = -1;
		LightsObject[vehicleid][1] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	if(CarScrap[vehicleid] != -1)
	{
	    DestroyDynamicObject(CarScrap[vehicleid]);
	    CarScrap[vehicleid] = -1;
	}
	if(IsAArendCar(vehicleid))
	{
		if(ArendInfo[vehicleid-ArendCar[0]][aRentID] != INVALID_PLAYER_ID) ArendKey[ArendInfo[vehicleid-ArendCar[0]][aRentID]] = INVALID_PLAYER_ID;
		ArendInfo[vehicleid-ArendCar[0]][aRentID] = INVALID_PLAYER_ID;
	}
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
	if(GetVehicleModel(vehicleid)==433 && CarMusorCount[vehicleid]>20)
	{
	    new Float:x, Float:y, Float:z;
	    UpdateDynamic3DTextLabelText(MusorCarText[vehicleid], 0xFFFFFFFF, "Загружено: 0%/100%");
		CarMusorCount[vehicleid] = 0;
		GetVehiclePos(vehicleid, x, y, z);
		new idobject;
        for(idobject = 0;idobject<MAX_DMATS;idobject++)
        {
            if(dmats[idobject]==-1) break;
        }
		dmats[idobject] = CreateDynamicObject(1279, x+2.4, y, z-1.3, 0, 0, 0);
		for(idobject = 0;idobject<MAX_DMATS;idobject++)
        {
            if(dmats[idobject]==-1) break;
        }
		dmats[idobject] = CreateDynamicObject(1279, x-2.4, y, z-1.3, 0, 0, 0);
		for(idobject = 0;idobject<MAX_DMATS;idobject++)
        {
            if(dmats[idobject]==-1) break;
        }
		dmats[idobject] = CreateDynamicObject(1279, x-2.4, y+1.2, z-1.3, 0, 0, 0);
		for(idobject = 0;idobject<MAX_DMATS;idobject++)
        {
            if(dmats[idobject]==-1) break;
        }
		dmats[idobject] = CreateDynamicObject(1279, x-2.4, y-2.2, z-1.3, 0, 0, 0);
		for(idobject = 0;idobject<MAX_DMATS;idobject++)
        {
            if(dmats[idobject]==-1) break;
        }
		dmats[idobject] = CreateDynamicObject(1279, x-3.4, y-2.2, z-1.3, 0, 0, 0);
	    return 1;
	}
    if(CarScrap[vehicleid] != -1)
	{
	    DestroyDynamicObject(CarScrap[vehicleid]);
	    CarScrap[vehicleid] = -1;
	}
	return 1;
}
public OnPlayerText(playerid, text[])
{
	if(!IsPlayerLogged{playerid}) return 0;
    if(GetPVarInt(playerid,"AnFlood") > gettime()) return !SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    if(PI[playerid][pMuteTime])
	{
		SetPlayerChatBubble(playerid, !"Пытается что-то сказать.", COLOR_RED, 10.0, 5000);
		SendMuteMessage(playerid);
		return 0;
	}
	SetPVarInt(playerid,"AnFlood",gettime() + 1);
	if(IsAIP(playerid, text))
	{
		SendAdminsMessagef(COLOR_RED, "[Подозрение на рекламу] %s[%i]: [%s]", PN(playerid), playerid, text);
		return 0;
	}
	if(PI[playerid][pONPhoneTalk] > 0)
	{
	    if(PI[playerid][pCalling] != -1 && IsPlayerLogged{PI[playerid][pCalling]})
	    {
	    	SCMf(playerid, -1, "{73B461}[Тел]:{FFFFFF} %s - %s", cPN(playerid), text);
			SCMf(PI[playerid][pCalling], -1, "{73B461}[Тел]:{FFFFFF} %s - %s", cPN(playerid), text);
			SetPlayerChatBubblef(playerid, -1, 10.0, 10000, "{73B461}[Тел]:{FFFFFF} %s - %s", cPN(playerid), text);
			if(PI[playerid][pScutes] != -1) SCMf(PI[playerid][pScutes], COLOR_BLUE, "[ЖУЧЕК]: %s говорит по телефону:  %s", PN(playerid), text);
			if(PI[PI[playerid][pCalling]][pScutes] != -1) SCMf(PI[PI[playerid][pCalling]][pScutes], COLOR_BLUE, "[ЖУЧЕК]: %s говорит по телефону:  %s", PN(playerid), text);
			PI[playerid][pTelBalance] --;
		}
		return 0;
	}
	if(Merrit[0] == 1 && Merrit[2] == playerid)
	{
		if(!IsPlayerInRangeOfPoint(Merrit[3], 10.0, 2363.9543,-1958.5900,1601.0859 ) || !IsPlayerInRangeOfPoint(Merrit[2], 10.0, 2363.9543,-1958.5900,1601.0859)) return 0;
		static str[165];
		str[0] = EOS;
		f(str, sizeof(str), " - %s (%s) [%i]", text, cPN(playerid), playerid);
		ProxDetector(25.0, playerid, str, COLOR_CHAT, 1);
		if(GetString(text, "да"))
		{
		    Merrit[0] = 2;
			f(str, sizeof(str), "%s: Невеста %s согласны ли вы стать женой %s?", PN(Merrit[1]), PN(Merrit[3]), PN(Merrit[2]));
			ProxDetector(20, playerid, str, COLOR_SCHAT,1);
			SCM(Merrit[3], COLOR_GREY, !"[Подсказка] {FFFFFF}Для того чтобы сделать свой выбор напиши в игровой чат да/нет");
		}
		if(GetString(text, "нет"))
		{
		    SCM(Merrit[3], COLOR_VALIK, !"[Информация] {FFFFFF}Ваш жених отклонил предложение пожениться!");
		    f(str, sizeof(str), "%s тихо передал пистолет невесте", PN(Merrit[1]));
			ProxDetector(25, playerid, str, COLOR_ME);
		    GiveGun(Merrit[3], 24, 10);
		    Merrit[0] = 0;
		}
		return 0;
	}
	else if(Merrit[0] == 2 && Merrit[3] == playerid)
	{
		if(!IsPlayerInRangeOfPoint(Merrit[3], 10.0, 2363.9543,-1958.5900,1601.0859 )) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Жених не в церкови!");
		if(!IsPlayerInRangeOfPoint(Merrit[2], 10.0, 2363.9543,-1958.5900,1601.0859 )) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Невеста не в церкови!");
		static str[165];
		str[0] = EOS;
		f(str, sizeof(str), " - %s (%s) [%i]", text, cPN(playerid), playerid);
		ProxDetector(25.0, playerid, str, COLOR_CHAT, 1);
		if(GetString(text, "да"))
		{
		    SCM(Merrit[2], COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно приняли помолвку , теперь вы можете поцеловатся");
		    SCM(Merrit[3], COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно приняли помолвку , теперь вы можете поцеловатся");
			strmid(PI[playerid][pMerrit], PN(Merrit[2]), 0, MAX_PLAYER_NAME);
			strmid(PI[Merrit[2]][pMerrit], PN(Merrit[3]), 0, MAX_PLAYER_NAME);
			UpdatePlayerDataStr(playerid, "Merrit", PI[playerid][pMerrit]);
			UpdatePlayerDataStr(Merrit[2], "Merrit", PI[Merrit[2]][pMerrit]);
		    Merrit[0] = 0;
		    SCMAllf(COLOR_GOLD, "Поздравляем: %s[%i] и %s[%i] теперь они муж и жена!", PN(Merrit[2]), Merrit[2], PN(Merrit[3]), Merrit[3]);
		    GiveMoney(Merrit[1], GLS[20]);
		    aml(51, Merrit[1], "", "проведение свадьбы", GLS[20]);
		    SCMf(Merrit[1], COLOR_VALIK, "[Информация] {FFFFFF}Вы получили %i$ за проведение свадьбы", GLS[20]);
		}
		else if(GetString(text, "нет"))
		{
		    SCM(Merrit[2], COLOR_VALIK, !"[Информация] {FFFFFF}Ваша жена отклонила предложение пожениться!");
		    Merrit[0] = 0;
			ProxDetector(25, playerid, "[Информация] {FFFFFF}Свадьба была сорвана!", COLOR_ME);
		}
		return 0;
	}
	if(GetString(text, ")"))
	{
		static str[41];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] улыбается", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "))"))
	{
		static str[39];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] смеется", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "("))
	{
		static str[39];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] грустит", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "(("))
	{
		static str[50];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] сильно расстроился", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "xD"))
	{
		static str[49];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] валяется от смеха", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, ":D"))
	{
		static str[53];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] хохочет во весь голос", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "O_o"))
	{
		static str[45];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] очень удивлен", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, ">_<"))
	{
		static str[51];
		str[0] = EOS;
	    f(str_2, sizeof(str_2), " %s[%i] сморщился от злости", cPN(playerid), playerid);
		ProxDetector(25, playerid, str_2, COLOR_ME);
		return 0;
	}
	else if(GetString(text, ";)"))
	{
		static str[43];
		str[0] = EOS;
	    f(str, sizeof(str), " %s[%i] подмигивает", cPN(playerid), playerid);
		ProxDetector(25, playerid, str, COLOR_ME);
		return 0;
	}
	else if(GetString(text, "q"))
	{
	    if(!PlayerLie[playerid] && !PlayerLieHeal[playerid])
	    {
			static str[75];
			str[0] = EOS;
			if(PI[playerid][pAdmin] > ADM_MODER)
		    {
	            f(str, sizeof(str), " %s[%i] показал(а) распальцовку {33AA33}Admins Team", cPN(playerid), playerid);
				ProxDetector(25, playerid, str, COLOR_ME);
				ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 0, 1);
				return 0;
			}
			static member[30];
			switch(PI[playerid][pMember])
			{
				case TEAM_GROOVE: member = "{009327}Grove Street";
				case TEAM_VAGOS: member = "{D1DB1C}Vagos Family";
				case TEAM_BALLAS: member = "{cc00cc}West Coast Ballas";
				case TEAM_WOLFS: member = "{7F6464}Night Wolfs";
				case TEAM_CORONOS: member = "{00FFE2}Varioz Los Aztecas";
				case TEAM_RIFA: member = "{6666FF}The Rifa Gang";
				case TEAM_BIKERS: member = "{BA541D}Warlock MC";
			}
	        f(str, sizeof(str), " %s показал(а) распальцовку %s", cPN(playerid), member);
			ProxDetector(25, playerid, str, COLOR_ME);
			ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 1, 1);
			return 0;
		}
	}
	if(LiveOffer[playerid] != INVALID_PLAYER_ID)
	{
	    new id = LiveOffer[playerid];
        if(IsPlayerConnected(id))
        {
	        if(LiveOfferID[id] == playerid || LiveOfferID[playerid] == id)
	        {
	            static getradio[40];
	            switch(PI[playerid][pMember])
	            {
	                case TEAM_RADIO: getradio = "LS";
	                case TEAM_RADIOSF: getradio = "SF";
	                case TEAM_RADIOLV: getradio = "LV";
	                default: getradio = "";
	            }
	            if(!IsANews(playerid)) SCMAllf(COLOR_LIGHTGREEN, "Гость %s[%i]: %s", PN(playerid), playerid, text);
	        	else SCMAllf(COLOR_LIGHTGREEN, "Репортёр [%s] %s[%i]: %s", getradio, PN(playerid), playerid, text);
			}
			else LiveOffer[playerid] = INVALID_PLAYER_ID;
		}
		else LiveOffer[playerid] = INVALID_PLAYER_ID;
		return 0;
	}
	static str[188];
	str[0] = EOS;
	if(IsPlayerInRangeOfPoint(playerid, 1.0, -575.7592, 2568.7976, 1702.5029))
	{
	    f(str, sizeof(str), "[Микрофон] %s[%i] говорит:{FFFFFF}  %s", cPN(playerid), playerid, text);
	    ProxDetector(100.0, playerid, str, 0x90E9D6FF, 1);
	    f(str_1, sizeof(str_1), "[Микрофон] %s", text);
	    aml(100, playerid, "", str_1);
		return 0;
	}
	f(str, sizeof(str), "{FFFFFF}%s[%i] говорит: {B7AFAF}%s", cPN(playerid), playerid, text);
	ProxDetector(25.0, playerid, str, -1, 1);
	f(str_1, sizeof(str_1), "говорит: %s", text);
	aml(100, playerid, "", str_1);
	if(!IsANotControllable(playerid) && CreteBomb[playerid] == 0 && !animan{playerid} && !selfi{playerid})
	{
		ApplyAnimation(playerid, !"PED", !"IDLE_CHAT", 4.1, 0, 1, 1, 1, 1, 1);
		SetTimerEx("ClearAnim", 100 * strlen(text), false, "d", playerid);
	}
	SetPlayerChatBubble(playerid, text, -1, 20.0, 10000);
	return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);

	if(!ispassenger)
		CheckEnterCar(playerid, vehicleid);

	new number = GetVehicleID(vehicleid);
	if(IsAOwnableCar(number))
	{
	    if(CarInfo[number][cLock])
		{
 	        ClearAnimations(playerid);
 	        SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}Этот транспорт закрыт!");
			if(CarInfo[number][cAlarmON])
	   		{
				SetAlarmStatus(vehicleid, true);
				foreach(new i: Player)
				{
					if(IsPlayerHaveCar(i, number))
					{
						new Float:X, Float:Y, Float:Z;
						GetVehiclePos(vehicleid, X, Y, Z);
						f(str_2, sizeof(str_2), "[Информация] {FFFFFF}На транспорте [SP %i] сработала сигнализация", vehicleid);
						SCM(i, COLOR_YELLOW, str_2);
						SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Местоположение транспорта указано на карте!");
						EnableGPSForPlayer(i, X, Y, Z);
						break;
					}
				}
			}
		}
	}
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	SetCameraBehindPlayer(playerid);
	if(vTemp[vehicleid][vPlayer]==playerid &&  GetVehicleModel(vehicleid)==512 && vTemp[vehicleid][vTeam] == TEAM_LICENSERS) vTemp[vehicleid][vPlayer] = -1;

    if(NewSpeed[playerid])
	{
		KillTimer(NewSpeed[playerid]);
		NewSpeed[playerid] = 0;
	}
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(oldstate == 2 && PI[playerid][plveh]!=-1)
	{
		Borisov(PI[playerid][plveh], 0);
		Borisov(PI[playerid][plveh], 1);
		DestroyVehicle(PI[playerid][plveh]);
		TwinTurbo[PI[playerid][plveh]][Engine] = false;
		TwinTurbo[PI[playerid][plveh]][cStatus] = false;
		PI[playerid][plveh] = -1;
	}
	if(oldstate == 2 && RCVehicle[playerid]) DestroyRadioVehicle(playerid);
	new carid = GetPlayerVehicleID(playerid);
    if(oldstate == 2)
    {
    	if(GetVehicleInterior(carid) == 69) CheckItem(playerid);
        if(TimetoReturn[playerid]==0)
        {
	        if(pTemp[playerid][pArendaCar]==pTemp[playerid][pcarid])
			{
				TimetoReturn[playerid]=120;
				SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас есть 2 минуты чтобы вернуться обратно в транспорт.");
			}
		}
		pTemp[playerid][pcarid] = INVALID_VEHICLE_ID;

    }
	if(newstate==2)
	{
	    ResetDoorsStatus(carid);
	    if(IsAVelik(carid) || GetVehicleInterior(carid) == 69 || IsARcCar(carid)) SetEngineStatus(carid,true, playerid);
	    if(vTemp[carid][vJob]>0)
	    {
		    switch(vTemp[carid][vJob])
		    {
		        case 1..5: vTemp[carid][vFilled] = 1;
		        case 11:vTemp[carid][vFilled] = 1;
		        case 13..14:vTemp[carid][vFilled] = 1;
				default: vTemp[carid][vFilled] = 0;
			}
		}
		if(vTemp[carid][vFilled] > 0)
		{
		    if((vTemp[carid][vPlayer]!=-1) && vTemp[carid][vPlayer]!=playerid)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот транспорт уже арендуют!"),RemovePlayerFromVehicle(playerid);
		    if(PI[playerid][pJob] != vTemp[carid][vJob]) return RemovePlayerFromVehicle(playerid);
			if(PI[playerid][pJob] == vTemp[carid][vJob] && pTemp[playerid][pArendaCar] != carid)
			{
			    if(pTemp[playerid][pArendaCar]!=-1)
				{
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже арендуете рабочий транспорт!");
			 		return RemovePlayerFromVehicle(playerid);
				}
			    f(str_2,sizeof(str_2),"{FFFFFF}Стоимость аренды этого транспорта состовляет {42B02C}%i${FFFFFF}.\n{FAAC58}Вы получите бесплатную заправку при аренде авто.\n\n{FFFFFF}Обратите внимание что этот транспорт необходимо вернуть в том состоянии в котором вы его арендовали.\nВ ином случае вам будет выписан чек за порчу государственного имущества!",GLS[15]);
				SPD(playerid,RABOTABUS+1,DIALOG_STYLE_MSGBOX,"Аренда транспорта",str_2,"Согласен","Отмена");
			}
		}
	    pTemp[playerid][pcarid] = carid;
	    pTemp[playerid][pDeathCar] = carid;

	    if(GetVehicleInterior(carid) == 69)
	    {
	    	GameTextForPlayer(playerid, "Vozdushnyy shar", 3000, 1);
	    	CheckItem(playerid, 1);
	    }
	    else GameTextForPlayer(playerid, GetNameCar(GetVehicleModel(carid)), 3000, 1);
	    VehicleSeat[carid][0] = playerid;
		GetVehicleHealth(carid,VehicleHealth[carid]);
	    if(pTemp[playerid][pArendaCar]!=-1 && vTemp[carid][vJob]==PI[playerid][pJob]) TimetoReturn[playerid]=0;
	    if(PI[playerid][pJob] == JOB_COLLECTOR)
	    {
		    if(IsPlayerInIncVehicle(playerid))
		    {
			    if(InJob[playerid] == 1)
			    {
					new rand = random(sizeof(IncCP));
					TogglePlayerDynamicCP(playerid, IncCP[rand][0], true);
					SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Едьте в обозначенное на карте место");
					NumInc_CP[playerid] = rand;
					SetPlayerColor(playerid,0xBFC0C2FF);
					InJob[playerid] = 2;
			    }
			    else if(InJob[playerid] == 2)
			    {
			        new rand = NumInc_CP[playerid];
					TogglePlayerDynamicCP(playerid, IncCP[rand][0], true);
					SetPlayerColor(playerid,0xBFC0C2FF);
			    }
			    else if(InJob[playerid] == 4)
			    {
			        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) TogglePlayerDynamicCP(playerid, BankCP[0], true);
					else TogglePlayerDynamicCP(playerid, BankCP[2], true);
			        InJob[playerid] = 5;
			    }
		    }
	    }
	    PlayerCar[playerid] = carid;
	    PlayerSeat[playerid] = 0;
	    SetCameraBehindPlayer(playerid);
		if(!IsAPlane(carid) && !IsAVelik(carid) && !IsARcCar(carid)) ShowSpeedometr(playerid);
     	CheckEnterCar(playerid, carid);
	    if(vTemp[carid][vJob] == JOB_MUSOR)
	    {
	        if(PI[playerid][pJob] == JOB_MUSOR)
	        {
	            for(new i; i < MAX_TRASH; i ++) TogglePlayerDynamicCP(playerid, MusorCP[i], true);
		        MusorovozPlayer[carid] = playerid;
		        InJob[playerid] = 1;
	        }
	    }
        if(GetEngineStatus(carid) <= 0)
        {
			SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}Чтобы завести двигатель введите {DFCFCF}/engine{DC4747} или нажмите {DFCFCF}N");
			SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}Для управления поворотниками , используйте клавиши: {DFCFCF}(NUM4/NUM6)");
			SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}В транспорте присутствует радио{DFCFCF}[/radio]");
			SetEngineStatus(carid,false, playerid);
			if(IsACar(carid) && !PI[playerid][pCarSkillNo]) {
			    f(str_2, sizeof(str_2), "[Подсказка] {DC4747}Ваш текущий навык вождения: {DFCFCF}[%i/100]  {DC4747}Информация: /carskill", PI[playerid][pCarSkill]);
			    SCM(playerid, 0xDFCFCFFF, str_2);
			}
			if(pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarplayerid] == playerid) {
				SCM(playerid, 0xDFCFCFFF, !"[Подсказка] {DC4747}Если вы заведете двигатель, табличка пропадет");
			}
		}
		if(IsAArendCar(GetPlayerVehicleID(playerid)))
		{
		    if(ArendInfo[GetArendCarID(GetPlayerVehicleID(playerid))][aID] == 578)
		    {
		        if(ArendKey[playerid] != INVALID_VEHICLE_ID)
		        {
		            if(!Proviziya{playerid})
		            {
			            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}На миникарте установлена метка, где расположен склад СФ!\nНа нем вы должны загрузить товар, который нужно привести в Аксиому!\n\n", !"Принять", !"");
			            EnableGPSForPlayer(playerid, -1733.3938, 187.7363, 3.5547);
					}
					else
					{
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Ваша машина уже загружена. Отправляйтесь на склад Аксиомы, чтобы\nразгрузить машину с товаром!\n\n", !"Принять", !"");
						EnableGPSForPlayer(playerid, 1830.3701, 416.7932, 20.1436);
				    }
				}
			}
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 433 || GetVehicleModel(GetPlayerVehicleID(playerid)) ==548) SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Для того чтобы начать развозку оборудования введи [/carm]");
	    new model = GetVehicleModelEx(carid);
	    new number = GetVehicleID(carid);
	    new ownable = IsAOwnableCar(number);
		if(model == 528 || (model >= 596 && model <= 599) && IsACop(playerid) && PI[playerid][pRank] > 5 && !ownable) SCM(playerid, -1, !" {9ACD32} Используйте 2 чтобы выбросить полосу с шипами");
		if(TwinTurbo[carid][Engine]) GameTextForPlayer(playerid, (TwinTurbo[carid][cStatus]) ? ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~r~ SPORT!") : ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~g~ COMFORT!"), 3000, 3);
	    if(ownable)
	    {
	        if(CarInfo[number][cLock])
	        {
	            RemovePlayerFromVehicle(playerid);
	            return 1;
	        }
			if(IsASellCar(number)) 
			{
				//SendClientMessagef(playerid, -1, "%s(%i) cost %i", GetNameCar(model), carid, CarInfo[number][cCost]);
				ac_ShowPlayerDialog(playerid, 11),ShowPlayerDialogf(playerid, 11, 0, !"{BFBBBA}Транспорт продается", !"Купить", !"Отмена", "{FF9900}Этот транспорт продается.\n\n{FFFFFF}Модель: {AFAFAF}%s{FFFFFF}\nНомер: {AFAFAF}SP %i{FFFFFF}\nСтоимость: {AFAFAF}$%i{FFFFFF}\n\n{FFFFFF}Чтобы купить нажмите {B83434}'Купить'", GetNameCar(model), carid, CarInfo[number][cCost]);
			}		   
		    else
		    {
				SCMf(playerid, -1, "Этот транспорт зарегистрирован на жителя {9ACD32}%s", CarInfo[number][cOwner]);
				if(PI[playerid][pAdmin] > 0) SCMf(playerid, COLOR_VALIK, "Налог этого транспорта составляет %i", CarInfo[number][cShtrafer]);
			    if(CarInfo[number][cAlarmON])
			    {
				    SetAlarmStatus(carid,true);
					foreach(new i: Player)
					{
					    if(IsPlayerHaveCar(i, number))
					    {
							new Float:X, Float:Y, Float:Z;
							GetVehiclePos(carid, X, Y, Z);
							f(str_2, sizeof(str_2), "[Информация] {FFFFFF}На транспорте [SP %i] сработала сигнализация", carid);
							SCM(i, COLOR_YELLOW, str_2);
							SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Местоположение транспорта указано на карте!");
							EnableGPSForPlayer(i, X, Y, Z);
							break;
						}
					}
				}
				if(CarInfo[number][cShtraf] > 0)
				{
				    f(str_2, sizeof(str_2), "\n\n{FFFFFF}Этот транспорт находится на штрафстоянке!\n\nВладелец должен внести за него залог.\nРазмер залога: $%i\n\nПоставил на стоянку: %s\n{9EF04B}Оплатить залог можно в любом отделении банка!", CarInfo[number][cShtrafName], CarInfo[number][cShtraf]);
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Запрещено!", str_2, !"Ок", !"");
				    RemovePlayerFromVehicle(playerid);
				}
		    }
	    }
  		if(IsAArendCar(carid))
		{
			if(ArendKey[playerid] == INVALID_VEHICLE_ID)
			{
       			if(!IsAArended(carid))
				{
				    static jstr[300];
				    new cost;
				    switch(GetVehicleModel(carid))
				    {
				        case 454: cost= 10000;
				        case 484: cost = 12000;
				        case 558: cost = 9000;
				        case 541: cost = 22000;
				        case 560: cost = 13000;
				        case 409: cost = 10000;
						case 462: cost = 250;
						case 469: cost = 15000;
						case 487: cost = 20000;
				        default: cost = GLS[14];
					}
				    f(jstr, sizeof(jstr),"$%.1f", cost);
				    f(jstr,sizeof(jstr),"{FFFFFF}Транспорт для аренды!\n\n{FF9900}Модель: %s\nСтоимость: %i\n\n{AFAFAF}Чтобы арендовать нажмите 'Аренда'",GetNameCar(GetVehicleModel(carid)), cost);
					SPD(playerid, 230, 0, "Аренда", jstr, "Аренда", "Отмена");
				}
                else
				{
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот транспорт уже арендуют!");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
				if(ArendKey[playerid] != GetArendCarID(carid))
				{
					SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже арендуете транспорт! Используйте /unrentcar чтобы отказаться от аренды!");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
		if(vTemp[carid][vJob] == 12)
	    {
			if(InJob[playerid]==3)
			{
			    new rand;
				if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) rand = random(8);
				else
				{
				    new did = random(14);
				    switch(did)
				    {
				        case 1..6: rand = did+8;
				        case 7..14: rand = did;
						default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Сядьте на мопед заново!");
					}
				}
			    InJob[playerid]=4;
			    SetPlayerChatBubble(playerid, "Положил ящик с пиццой в багажник мопеда", COLOR_PURPLE, 10.0, 5000);
			    SPD(playerid, 0, 0, !"", !"Вы успешно положили пиццу в багажник вашего мопеда.\nСледуйте чекпоинту чтобы доставить пиццу и получить денег.\n\nБудьте осторожны на дороге!", !"Принять", !"");
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
				if(NumInc_CP[playerid]==-1)
				{
					TogglePlayerDynamicCP(playerid, PizzCP[rand][0], true);
					NumInc_CP[playerid] = rand;
				}
			}
			else SCM(playerid,COLOR_ACHAT,"Для начала развозки пиццы возьмите ее в пункте выдачи!");
	    }
	    else if(InJob[playerid]==3 && InJobs[playerid]!=0) ExitCar(playerid);
		if(vTemp[carid][vJob] == 18)
	    {
	        if(InJob[playerid]!=1)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не переоделись в рабочую одежду!");
				RemovePlayerFromVehicle(playerid);
				return 0;
			}
  		    SetPVarInt(playerid,"fermar",gettime()+170);
			f(str_2,sizeof(str_2),"{C8C4BA}[ Подсказка ]{FFFFFF}\n\nОтправляйтесь по чекпоинтам для выполнения своей работы,\nполучить зарплату вы сможете в здании фермы.\nЗа проделаный пункт работы вы получите 60 очк. фермера.\n\nУдачной работы!");
	        SPD(playerid,0,0, !"", str_2, !"Принять", !"");
	        TogglePlayerDynamicRaceCP(playerid,Tfarm_CP[0],true);
	        InJob[playerid]=3;
	        FarmJob[playerid]=0;
	    }
	    else if(vTemp[carid][vJob] == 19)
	    {
	        if(InJob[playerid]!=1)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не переоделись в рабочую одежду!");
				RemovePlayerFromVehicle(playerid);
				return 0;
			}
			SetPVarInt(playerid,"fermar",gettime()+120);
			f(str_2,sizeof(str_2),"{C8C4BA}[ Подсказка ]{FFFFFF}\n\nОтправляйтесь по чекпоинтам для выполнения своей работы,\nполучить зарплату вы сможете в здании фермы.\nЗа проделаный пункт работы вы получите 90 очк. фермера.\n\nУдачной работы!");
	        SPD(playerid,0,0, !"", str_2, !"Принять", !"");
	        TogglePlayerDynamicRaceCP(playerid,Kfarm_CP[0],true);
	        InJob[playerid]=3;
	        FarmJob[playerid]=0;
	    }

	    else if(vTemp[carid][vJob] == 20)
	    {
	        if(InJob[playerid]!=1)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не переоделись в рабочую одежду!");
				RemovePlayerFromVehicle(playerid);
				return 0;
			}
			SetPVarInt(playerid,"fermar",gettime()+200);
			f(str_2,sizeof(str_2),"{C8C4BA}[ Подсказка ]{FFFFFF}\n\nОтправляйтесь по чекпоинтам для выполнения своей работы,\nполучить зарплату вы сможете в здании фермы.\nЗа проделаный пункт работы вы получите 50 очк. фермера.\n\nУдачной работы!");
	        SPD(playerid,0,0, !"", str_2, !"Принять", !"");
	        TogglePlayerDynamicRaceCP(playerid,Zfarm_CP[0],true);
	        InJob[playerid]=3;
	        FarmJob[playerid]=0;
	    }
	    if(vTemp[carid][vTeam] != 0)
	    {
	        if(vTemp[carid][vTeam] == TEAM_LICENSERS && CarTest[playerid] != -1 && GetVehicleModel(carid)== 426)
	        {
	            TogglePlayerDynamicRaceCP(playerid,Test_CP[0],true);
	            J_RepairVehicle(GetPlayerVehicleID(playerid));
	            SPD(playerid, 0, 0, !"", !"{FFFFFF}Едьте по чекпоинтам не нарушая пдд. Иначе вы провалите тест.\n{B2D63B}Ни в коем случае не выходите из автомобиля иначе вы так-же провалите тест!\n\n{D72121}Обязательно следите за подсказками так как вам засчитает ошибку!\nПри малейшем повреждение авто, вы провалите тест.", !"Принять", !"");
			}
			else if(vTemp[carid][vTeam] == TEAM_LICENSERS && CarTest[playerid] != -1 && GetVehicleModel(carid)== 512)
			{
			    vTemp[carid][vPlayer]=playerid;
			    TogglePlayerDynamicRaceCP(playerid,FTest_CP[0],true);
	            J_RepairVehicle(GetPlayerVehicleID(playerid));
	            SPD(playerid, 0, 0, !"", !"{979D93}Уважаемый пилот!\n\n\nБудьте осторожны при полёте, этот транспорт принадлежит авиашколе.\nВ случае поломки самолёта вы обязаны будете заплатить за его ремонт в реальной стоимости.\nЕсли у вас не будет денег для его оплаты, вам придётся выплачивать за него кредит.\n\n{9FC084}Следуйте за чекпоинтами. Удачного полёта", !"Закрыть", !"");
			}
			else if(vTemp[carid][vTeam] == TEAM_LICENSERS && MotoTest[playerid] != -1 && GetVehicleModel(carid)== 586)
			{
			    vTemp[carid][vPlayer]=playerid;
			    TogglePlayerDynamicRaceCP(playerid,MTest_CP[0],true);
	            J_RepairVehicle(GetPlayerVehicleID(playerid));
	            SPD(playerid, 0, 0, !"", !"\n\n{FFFFFF}Едьте по чекпоинтам не нарушая пдд. Иначе вы провалите тест.\n{9ACD32}Ни в коем случае не выходите из мотоцикла иначе вы так-же провалите тест!\n\n", !"Принять", !"");
			}
	        else if(GetTeamID(playerid) != vTemp[carid][vTeam])
	        {
		        SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас нет ключей от этого транспорта!");
				RemovePlayerFromVehicle(playerid);
	        }
	    }
	    if(PI[playerid][pJob] == 17 )
		{
		    if(InJob[playerid] == 3)
		    {
				TogglePlayerDynamicCP(playerid, MinerDownCP, false);
				SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы уронили сено!");
				InJob[playerid] = 1;
			    RemovePlayerAttachedObject(playerid, 7);
				for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], true);
			}
		}
		IsDropBomb(playerid);
	    if(carid == pTemp[playerid][pArendaCar] && BusTime[playerid] != 0)
	    {
	        BusTime[playerid]=0;
	        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Продолжайте движение в том же направлении");
	    }

	}
    if(newstate == PLAYER_STATE_PASSENGER)
    {
        if(vTemp[carid][vCena] != 0)
	    {
	        new idvoditel = GetVehicleSeat(carid,0);
	        if(idvoditel != INVALID_PLAYER_ID)
		    {
		        if(GetMoney(playerid) < vTemp[carid][vCena])
				{
				    SetPlayerChatBubble(playerid, !"Показал(а) водителю проездной.", COLOR_PURPLE, 15.0, 5000);
				    ProxDetector(25.0, playerid, !"Показал(а) водителю проездной.", COLOR_PURPLE);
				}
	            else
				{
					GiveMoney(playerid, -vTemp[carid][vCena]);
					GiveMoney(idvoditel, vTemp[carid][vCena]);
					aml(50, playerid, PN(idvoditel), "Оплата пассажирского билета", vTemp[carid][vCena]);
					SCMf(idvoditel, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Пассажир %s оплатил билет, добавлено к зарплате", PN(playerid));
				}
			}
	    }
	    new seat = GetPlayerVehicleSeat(playerid);
	    if(PlayerCar[playerid] != INVALID_VEHICLE_ID) VehicleSeat[PlayerCar[playerid]][PlayerSeat[playerid]] = -1;
	    VehicleSeat[carid][seat] = playerid;
	    PlayerCar[playerid] = carid;
	    PlayerSeat[playerid] = seat;
	    SetCameraBehindPlayer(playerid);
	    if(IsATaxi(carid))
	    {
	        new id = GetVehicleSeat(carid, 0);
            if(id != INVALID_PLAYER_ID)
			{
			    if(PI[id][pJob] == JOB_TAXI)
	            {
	                if(TaxiTarif[id] > 0)
			    	{
		                Taxi_GO[playerid] = 0;
		                TaxiPrice[playerid] = 0;
		                TaxiDistance[playerid] = 0;
		                PlayerTextDrawShow(playerid,TaxiDraw[playerid]);
				    	TextDrawShowForPlayer(playerid, BoxTaxi1);
		                TextDrawShowForPlayer(playerid, BoxTaxi2);
		                TextDrawShowForPlayer(playerid, Taximonitor);
		                TextDrawShowForPlayer(playerid, TaxiServ);
		                TextDrawShowForPlayer(playerid, TaxiDol);
		                PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
		                f(str_2,sizeof(str_2),">> {FFFFFF}%s сел к вам в такси.",PN(playerid));
		                SCM(id,COLOR_VALIK,str_2);
		                if(GetMoney(playerid)<=TaxiTarif[id])
    					{
	    					SCM(id, COLOR_RED, !"[ВНИМАНИЕ]{FFFFFF} У игрока который к вам сел , не хватит денег чтобы оплатить за проезд!");
		    				SCM(playerid, COLOR_RED, !"<< {FFFFFF}У вас не достаточно денег чтобы ездить на такси!");
			    			RemovePlayerFromVehicle(playerid);
    					}
	    	            SPD(playerid, 247, 2, "Как ехать?", "1. Выбрать пункт в GPS\n2. Отметить точку на карте\n3. Договориться с таксистом", "Выбор", "Отмена");
    				}
	    			else
    				{
	    				SCM(id, COLOR_RED, !"[Информация] {FFFFFF}К вам в такси сел пассажир, но вы не получите с него прибыли, так-как вы не установили тариф!");
		    			SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Этот таксист еще не установил тариф за свои услуги!");
		    		}
	            }
    	    }
        }
	}
	if(oldstate == 2 || oldstate == 3)
	{
		if(PlayerPlayed{playerid} && !GetInvCount(playerid, Item_Radio))
		{
			PlayerPlayed{playerid} = false;
			StopAudioStreamForPlayer(playerid);
		}
	}
	if(oldstate == 2 || oldstate == PLAYER_STATE_PASSENGER)
	{
	    new vehicleid = PlayerCar[playerid];
		new seat = PlayerSeat[playerid];
		if(GetVehicleModel(vehicleid)==570)
		{
		    NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
		}
		Controllable{playerid} = true;
		SetCameraBehindPlayer(playerid);
  		if(vTemp[vehicleid][vJob] == JOB_MUSOR)
	    {
	        if(PI[playerid][pJob] == JOB_MUSOR)
	        {
	            for(new i; i < MAX_TRASH; i ++) TogglePlayerDynamicCP(playerid, MusorCP[i], false);
		        if(InJob[playerid] == 2) DetachMusor(vehicleid);
		    	InJob[playerid] = 0;
	    	}
	    }
		if(!IsAPlane(vehicleid) && !IsAVelik(vehicleid) && !IsARcCar(vehicleid)) HideSpeedometr(playerid);
		if(vehicleid != INVALID_VEHICLE_ID && GetVehicleSeat(vehicleid, seat) == playerid) VehicleSeat[vehicleid][seat] = INVALID_PLAYER_ID;
		if(vTemp[vehicleid][vJob] == 18 && InJob[playerid]==3)
	    {
			SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы вышли из вашего трактора, если вы что-то заработали, то можете получить зарплату в здании фермы.");
			TogglePlayerDynamicRaceCP(playerid,Tfarm_CP[FarmJob[playerid]],false);
	        InJob[playerid]=1;
	        FarmJob[playerid]=-1;
	    }
	    else if(vTemp[vehicleid][vJob] == 19 && InJob[playerid]==3)
	    {
	        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы вышли из комбайна, если вы что-то заработали, то можете получить зарплату в здании фермы.");
			TogglePlayerDynamicRaceCP(playerid,Kfarm_CP[FarmJob[playerid]],false);
	        InJob[playerid]=1;
	        FarmJob[playerid]=-1;
	    }
	    else if(vTemp[vehicleid][vJob] == 20 && InJob[playerid]==3)
	    {
	        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы вышли из кукурузника, если вы что-то заработали, то можете получить зарплату в здании фермы.");
			TogglePlayerDynamicRaceCP(playerid,Zfarm_CP[FarmJob[playerid]],false);
	        InJob[playerid]=1;
	        FarmJob[playerid]=-1;
	    }
		if(CarTest[playerid] != -1 && vTemp[vehicleid][vTeam] == TEAM_LICENSERS || MotoTest[playerid] != -1)
		{
		    new i = CarTest[playerid];
		    if(GetVehicleModel(vehicleid)==512)
		    {
		        TogglePlayerDynamicRaceCP(playerid, FTest_CP[i], false);
		        SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы провалили тест т.к вышли из самолёта.");
		    }
			if(GetVehicleModel(vehicleid)==426)
			{
			    TogglePlayerDynamicRaceCP(playerid, Test_CP[i], false);
			    SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы провалили тест т.к вышли из авто.");
			}
			if(GetVehicleModel(vehicleid)==586)
			{
			    TogglePlayerDynamicRaceCP(playerid, MTest_CP[MotoTest[playerid]], false);
			    SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы провалили тест т.к вышли из мото.");
		    	MotoTest[playerid] = -1;
			}
			CarTest[playerid] = -1;
		}
		if(vTemp[vehicleid][vJob] == JOB_COLLECTOR)
	    {
   			if(InJob[playerid] == 2 && InJob[playerid] != 5 )
		    {
          		new rand = NumInc_CP[playerid];
		        NumInc_CP[playerid]=-1;
		        InJob[playerid]=1;
				TogglePlayerDynamicCP(playerid, IncCP[rand][0], false);
		        SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
		    }
	    }
	    if(vTemp[vehicleid][vJob] == 12)
	    {
	        if(InJob[playerid]==4)
	        {
	            InJob[playerid]=3;
	            SetPlayerChatBubble(playerid, "Достал из багажника ящик с пиццой.", COLOR_PURPLE, 10.0, 5000);
	            if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 2814, 1, 0.0, 0.5, -0.0, 90.0, 90.0, 0.0, 1.0, 1.0, 1.0);
	        }
	    }
		if(IsATaxi(vehicleid))
		{
			if(!PlayerSeat[playerid])
			{
    			if(PI[playerid][pJob] == JOB_TAXI)
				{
					if(TaxiTarif[playerid] > 0)
					{
						TaxiTarif[playerid] = 0;
					    //SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы теперь не на службе");
						PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
					  	TextDrawHideForPlayer(playerid, BoxTaxi1);
				      	TextDrawHideForPlayer(playerid, BoxTaxi2);
				      	TextDrawHideForPlayer(playerid, Taximonitor);
				      	TextDrawHideForPlayer(playerid, TaxiServ);
				      	TextDrawHideForPlayer(playerid, TaxiDol);
						UpdateDynamic3DTextLabelText(TaxiText[vehicleid], COLOR_GOLD, "<< Такси для аренды >>");
						for(new i;i < 4;i ++)
						{
						    new player = GetVehicleSeat(vehicleid, i);
						    if(!IsPlayerConnected(player)) continue;
							if(player != INVALID_PLAYER_ID)
							{
								SCM(player,COLOR_GREY,"[Информация] {FFFFFF}Таксист, который вез вас теперь не на службе");
								PlayerTextDrawHide(player,TaxiDraw[player]);
							  	TextDrawHideForPlayer(player, BoxTaxi1);
						      	TextDrawHideForPlayer(player, BoxTaxi2);
						      	TextDrawHideForPlayer(player, Taximonitor);
						      	TextDrawHideForPlayer(player, TaxiServ);
						      	TextDrawHideForPlayer(player, TaxiDol);
						      	if(PI[player][pMoney] > TaxiPrice[player]) GiveMoney(playerid,TaxiPrice[player]);
        						GiveMoney(player,-TaxiPrice[player]);
        						aml(50, player, PN(playerid), "Оплата такси", TaxiPrice[player]);
								PlayerTextDrawHide(player,TaxiDraw[player]);
								PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
								PlayerTextDrawSetString(player, TaxiDraw[player],"0");
								TaxiPrice[player] = 0;
								TaxiDistance[player] = 0;
							}
						}
					}
				}
			}
			else if(PlayerSeat[playerid] > 0)
			{
				new id = GetVehicleSeat(vehicleid, 0);
				if(id != INVALID_PLAYER_ID)
				{
 			    	if(GetMoney(playerid) > TaxiPrice[playerid]) GiveMoney(playerid,-TaxiPrice[playerid]);
 			    	GiveMoney(id,TaxiPrice[playerid]);
 			    	aml(50, playerid, PN(id), "Оплата такси", TaxiPrice[playerid]);
					PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
					TextDrawHideForPlayer(playerid, BoxTaxi1);
     				TextDrawHideForPlayer(playerid, BoxTaxi2);
				    TextDrawHideForPlayer(playerid, Taximonitor);
				    TextDrawHideForPlayer(playerid, TaxiServ);
				    TextDrawHideForPlayer(playerid, TaxiDol);
					PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
					f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы взяли $%i с игрока %s за поездку",TaxiPrice[playerid],PN(playerid));
					SCM(id,COLOR_VALIK,str_2);
					f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы отдали $%i таксисту %s за поездку",TaxiPrice[playerid],PN(id));
					SCM(playerid,COLOR_GREY,str_2);
					TaxiPrice[playerid]=0;
					new money;
					for(new i = 1; i < 4; i ++)
					{
						new pseat = GetVehicleSeat(vehicleid, i);
						if(pseat != INVALID_PLAYER_ID) money += TaxiPrice[pseat];
					}
					valstr(str_2, money);
					PlayerTextDrawSetString(id, TaxiDraw[id],str_2);
				}
			}
		}
 	}
	if(oldstate == 2 || oldstate == PLAYER_STATE_PASSENGER)
	{
 		new vehicleid = PlayerCar[playerid];
 		if(vTemp[vehicleid][vJob] == JOB_TRUCKER)
		{
			if(InJob[playerid] == 1 && PI[playerid][pJob] == JOB_TRUCKER)
			{
			    FactoryMats += 500;
			    new gopost = PlayerGoPost[playerid];
			    DetachTrailerFromVehicle(vehicleid);
				TogglePlayerDynamicCP(playerid, GoFuelCP[gopost], false);
				TogglePlayerDynamicCP(playerid, GoGunShopCP[gopost], false);
			    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Груз который вы везете отцепился!");
				InJob[playerid] = 0;
    			f(str_2, sizeof(str_2), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
				UpdateDynamic3DTextLabelText(FactoryText[0], -1, str_2);
				PlayerGoPost[playerid]=-1;
			}
		}
	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	new jail = PlayerJailCP[playerid];
	new rand = NumInc_CP[playerid];
	new gopost = PlayerGoPost[playerid];
	new team = GetTeamID(playerid);

	if(checkpointid == RingCP)
		return SPD(playerid, 188, DIALOG_STYLE_MSGBOX, !"Покупка колец", !"Вы хотите приобрести\nобручальные кольца?\nСтоимость которых (5 000$.)", !"Принять", !"Отклонить");

	else if(checkpointid == SvalkaCP[0] || checkpointid == SvalkaCP[1] || checkpointid == SvalkaCP[2])
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(carid > 0 && GetVehicleModel(carid) == 408)
	    {
	        if(InJob[playerid] == 1)
	        {
		        if(CarMusorCount[carid] <= 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этом мусоровозе нет мусора.");
				new money = floatround(CarMusorCount[carid] * GLS[8]);
				GiveMoney(playerid, money);
				aml(51, playerid, "", "разгруженные контейнера", money);
				SCMf(playerid, -1, "[Информация] {FFFFFF}Вы получили {73B461}$%i{FFFFFF} за разгруженные контейнера.", money);
				UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, "Загружено: 0%/100%");
				CarMusorCount[carid] = 0;
			}
	    }
	}
	else if(checkpointid == MatsDel_CP)
	{
		new count = GetInvCount(playerid, Item_Ingredients);
	    new payout = count * 5;
	    if(FactoryMats >= payout)
	    {
			if(!IsAtGang(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
			if(!count) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет ингредиентов!");
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Фабрика дала вам %i материалов за %i ингредиентов.", payout, count);
			InvAdd(playerid, Item_Mats, payout);
			aml(101, playerid, "", "фабрика", Item_Mats, payout);
			SetItem(playerid, Item_Ingredients);
			FactoryMats -= payout/10;
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На фабрике нет столько материалов");
		return 1;
	}
	else if(checkpointid >= MusorCP[0] && checkpointid <= MusorCP[MAX_TRASH-1])
	{
	    new musor = checkpointid - MusorCP[0];
	    new carid = GetPlayerVehicleID(playerid);
	    if(MusorCount[musor] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В этом контейнере нет мусора.");
	    else if(CarMusorCount[carid] >= 100)
		{
			SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Отправляйтесь на свалку чтобы разгрузить мусоровоз.");
			SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Свалка вашего города обозначена на карте красной меткой.");
			if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) EnableGPSForPlayer(playerid,2200.9934,-1977.1194,13.5576);
			else EnableGPSForPlayer(playerid,178.4099,1101.4073,16.4498);
			return 0;
		}
		else if(NowMusor[carid] != -1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}Этот мусоровоз уже разгружает контейнер");
		else if(MusorCar[musor] != -1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}Этот мусорный контейнер уже разгружают");
		else if(GetVehicleModel(carid) == 408)
		{
			if(InJob[playerid] == 1)
			{
			    new Float:angle = GetVehicleAngleToPoint(carid, MusorPos[musor][0], MusorPos[musor][1]);
				if( (angle >= -220 && angle <= -140) || (angle >= 140 && angle <= 220) )
				{
					new Float:X, Float:Y, Float:Z, Float:A;
					new Float:oX, Float:oY, Float:oZ;
					InJob[playerid] = 2;
					GetVehicleZAngle(carid, A);
					GetVehicleShiftPos(carid, 2, X, Y, Z, 7.0);
					GetVehicleShiftPos(carid, 2, oX, oY, oZ, 3.3);
					TempMusorObject[musor] = CreateDynamicObject(1509, X, Y, Z, 100, 90, A);
					Temp2MusorObject[musor] = CreateDynamicObject(1334, X, Y, Z, 100, 90, A);
					AttachObjectToObject(Temp2MusorObject[musor], TempMusorObject[musor], -2.0, 0.0, 0.0, 0.0, 270.0, 230.0, 1);
					MoveDynamicObject(TempMusorObject[musor], X, Y, Z-0.005, 0.001, 20, 90, A);
					RemoveObject[TempMusorObject[musor]] = true;
					TempMusorMusor[TempMusorObject[musor]] = musor;
					NowMusor[carid] = musor;
					MusorCar[musor] = carid;
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Загрузка началась , стойте на месте , во избежания неприятностей");
					SetVehiclePos(carid, oX, oY, oZ);
					TogglePlayerControllable(playerid, false);
					SetDoorsStatus(carid, 0);
					SetTimerEx("StopMusor", 4500, false, "i", TempMusorObject[musor]);
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны подъехать задом");
			}
		}
	}
	else if(checkpointid >= FerumCP[0] && checkpointid <= FerumCP[15])
	{
	    new ferumid = (checkpointid - FerumCP[0]);
	    if(CreateMats[playerid] == 2)
		{
		    if(PI[playerid][pONPhoneTalk]>0) return 0;
		    CreateMats[playerid] = 3;
			new Float:X = FerumCPPos[ferumid][0];
			new Float:Y = FerumCPPos[ferumid][1];
			new Float:Z = FerumCPPos[ferumid][2];
			new Float:A = FerumCPPos[ferumid][3];
			J_SetPlayerPos(playerid, X, Y, Z);
			SetPlayerFacingAngle(playerid, A);
			ShiftCords(0, X, Y, A, 0.8);
			ApplyAnimation(playerid, "OTB", "BETSLP_LOOP", 4.1, 1, 1, 1, 1, 0, 1);
			SetPlayerTimer(playerid, "CreatedMats", 8000, false);
			SetPlayerAttachedObject(playerid, 6, 18644, 6, 0.07, 0.02, 0.03, 10.0, 0.0, 0.0);
			Controllable{playerid} = false;
			for(new i; i < sizeof(FerumCP);i ++) TogglePlayerDynamicCP(playerid, FerumCP[i], false);
	    }
	    else if(CreateMats[playerid] == 1) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ещё не брали металл.");
	    else if(CreateMats[playerid] == 4) SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}Отнесите материалы к остальным материалам.");
	}
	else if(checkpointid == FerumEndCP)
	{
		if(CreateMats[playerid] == 4)
		{
			if(GetPlayerVirtualWorld(playerid)>13)return Kick(playerid);
			if(GetPlayerInterior(playerid)!=2)return Kick(playerid);
	    	if(GetPlayerVirtualWorld(playerid)==10)
			{
				FactoryMats += 50;
				f(str_2, sizeof(str_2), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
				UpdateDynamic3DTextLabelText(FactoryText[0], -1, str_2);
			}
			else
			{
			    if(GetPlayerVirtualWorld(playerid)==11)
				{
				    if(OrgInfo[TEAM_ARMY][oMats]>=100000)return SPD(playerid, 0, 0, !"", !"{BCB7B7}Склад с патронами армии переполнен!", !"Закрыть", !"");
					OrgInfo[TEAM_ARMY][oMats]+=200;
					GLS[25] -=100;
				}
			    else if (GetPlayerVirtualWorld(playerid)==12)
				{
				    if(OrgInfo[TEAM_ARMYLV][oMats]>=100000)return SPD(playerid, 0, 0, !"", !"{BCB7B7}Склад с патронами армии переполнен!", !"Закрыть", !"");
					OrgInfo[TEAM_ARMYLV][oMats]+=200;
					GLS[26] -=100;
				}
				else if (GetPlayerVirtualWorld(playerid)==13)
				{
				    if(OrgInfo[TEAM_ARMYSF][oMats]>=100000)return SPD(playerid, 0, 0, !"", !"{BCB7B7}Склад с патронами армии переполнен!", !"Закрыть", !"");
					OrgInfo[TEAM_ARMYSF][oMats]+=200;
					GLS[43] -=100;
				}
				SaveInforamtion();
			}
		    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
			if(CreateMats[playerid] == 4)
			{
			    CreateMats[playerid] = 1;
				CreateMatsCount[playerid] ++;
				if(GetPlayerVirtualWorld(playerid)==10) f(str_2,sizeof(str_2),"Вы уже изготовили: {DC4747}%i{FFFFFF} материалов и заработали {DC4747}%i${FFFFFF}.",CreateMatsCount[playerid],CreateMatsCount[playerid] * GLS[5]);
				else f(str_2,sizeof(str_2),"Вы уже изготовили: {DC4747}%i{FFFFFF} материалов и заработали {DC4747}%i${FFFFFF}.",CreateMatsCount[playerid],(CreateMatsCount[playerid] * GLS[5])/2);

				SCM(playerid,-1,str_2);
				RemovePlayerAttachedObject(playerid, 7);
				TogglePlayerDynamicCP(playerid, FerumEndCP, false);

				if(QuestProgress[playerid][6]<25 && AcceptQuest[playerid][6]!=0)QuestProgress[playerid][6]++;
			    if(QuestProgress[playerid][6]==25 && AcceptQuest[playerid][6]!=0)
			    {
			        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно изготовили 25 материалов.\nВозращайтесь обратно, чтобы получить награду за выполненое задание.\n\n{82A3DF}Не забудьте переодеться и забрать зарплату!", !"Принять", !"");
			        NextStapQI(playerid,6);
			    }
				return 1;
			}
	    }
	}
	else if(checkpointid == ScrapCP)
	{
	    if(PI[playerid][pJob] == JOB_SCRAPER)
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
				new money = GLS[10];
	        	new carid = GetPlayerVehicleID(playerid);
				if(GetVehicleModelEx(carid) == 443 && vTemp[carid][vJob] == JOB_SCRAPER)
				{
		        	if(CarScrap[carid] != -1)
		        	{
		        	    if(GetPVarInt(playerid,"metal")>gettime())return SCM(playerid, COLOR_RED, !"Вы были кикнуты за использование читов!"),Kick(playerid);
		        	    SetPVarInt(playerid,"metal",gettime()+150);
						GiveMoney(playerid,money);
						aml(51, playerid, "", "доставленый металлолом", money);
						f(str_2, sizeof(str_2), "[Информация] {FFFFFF}Вы получили {73B461}$%i{FFFFFF} за доставленый металлолом.", money);
						SCM(playerid, -1, str_2);
						DestroyDynamicObject(CarScrap[carid]);
						CarScrap[carid] = -1;
						TogglePlayerDynamicCP(playerid, ScrapCP, false);
						FactoryFerum += 800;
						RemovePlayerMapIcon(playerid, 98);
      					f(str_2, sizeof(str_2), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
						UpdateDynamic3DTextLabelText(FactoryText[0], -1, str_2);
					}
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны быть в эвакуаторе");
			}
	    }
	    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не развозчик металлолома");
	}
	if(checkpointid >= MinerCP[0] && checkpointid <= MinerCP[3])
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
		    if(!IsANotControllable(playerid))
		    {
				if(PI[playerid][pJob] == 17)
				{
					if(InJob[playerid] == 1)
					{
			            InJob[playerid] = 3;
			            TogglePlayerDynamicCP(playerid, MinerDownCP, true);
			            CarryAnim(playerid);
                        if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7 , 2901, 1,0.11,0.36,0.0,0.0,90.0);

                        for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
					}
				}
			}
		}
		return 1;
	}
	else if(checkpointid == MinerDownCP)
	{
	    if(PI[playerid][pJob] == 17)
		{
            if(GetPlayerVirtualWorld(playerid)!=0)return 1;
			if(InJob[playerid] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
				    ferman[playerid]++;
				    static femar[30];
					switch(PI[playerid][pContractTime])
					{
					    case 0..499: femar = "500";
				        case 500..3199: femar = "3200";
						case 3200..6999: femar = "7000";
						default: femar = "&&";
					}
                    PI[playerid][pContractTime]+=2;
                    UpdatePlayerDataInt(playerid, "ContractTime", PI[playerid][pContractTime]);
        			f(str_2,sizeof(str_2), "{FFFFFF}[ Подсказка ]{73B461} Сена перетащено: %i шт. {FAC64C} Теперь ваш навык фермерства %i/%s", ferman[playerid],PI[playerid][pContractTime],femar);
        			SCM(playerid,COLOR_VALIK,str_2);
				    InJob[playerid] = 1;
				    RemovePlayerAttachedObject(playerid, 7);
				    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
				    if(GLS[27]<10000)GLS[27] +=1;
				    else GLS[27] +=2;
				    SaveInforamtion();
				    GiveBizMoney(BIZ_ELECTRO_LS,12);
			    	f(str_2, sizeof(str_2), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[27],GLS[31]);
					UpdateDynamic3DTextLabelText(FactoryText[1], -1, str_2);

				    TogglePlayerDynamicCP(playerid, MinerDownCP, false);
				    for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], true);

				    if(QuestProgress[playerid][1]<30 && AcceptQuest[playerid][1]!=0)QuestProgress[playerid][1]++;
				    if(QuestProgress[playerid][1]==30 && AcceptQuest[playerid][1]!=0)
				    {
				        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно перенесли нужное количество сена.\nВозращайтесь обратно, чтобы получить награду за выполненое задание.\n\n{82A3DF}Не забудьте переодеться и забрать зарплату!", !"Принять", !"");
				        NextStapQI(playerid,1);
				    }
			    }
			}
		}
		return 1;
	}
	else if(checkpointid == PorterDownCP)
	{
	    if(PI[playerid][pJob] == JOB_PORTER)
		{
		    if(GetPlayerVirtualWorld(playerid)!=0)return 1;
		    if(!IsPlayerInAnyVehicle(playerid))
		    {
				if(InJob[playerid] == 3)
				{
       		 		ferman[playerid]++;
        			f(str_2,sizeof(str_2), "Груза перетащено: {73B461}%i шт.", ferman[playerid]);
					SCM(playerid,-1,str_2);
				    InJob[playerid] = 1;
				    //GiveBizMoney(BIZ_ELECTRO_LV,60);
				    RemovePlayerAttachedObject(playerid, 7);
				    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
				    TogglePlayerDynamicCP(playerid, PorterDownCP, false);
					if(GLS[28]<10000) GLS[28]+=32;
				    else GLS[28]+=1;
				    SaveInforamtion();
				    f(str_2, 500, "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[28],GLS[29]);
					UpdateDynamic3DTextLabelText(FactoryText[2], -1, str_2);

					if(QuestProgress[playerid][2]<20 && AcceptQuest[playerid][2]!=0)QuestProgress[playerid][2]++;
				    if(QuestProgress[playerid][2]==20 && AcceptQuest[playerid][2]!=0)
				    {
				        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно перенесли нужное количество груза.\nВозращайтесь обратно, чтобы получить награду за выполненое задание.\n\n{82A3DF}Не забудьте переодеться и забрать зарплату!", !"Принять", !"");
				        NextStapQI(playerid,2);
				    }
				}
			}
		}
		return 1;
	}
	else if(checkpointid == BankCP[0] || checkpointid == BankCP[2] )
	{
	    if(PI[playerid][pJob] == JOB_COLLECTOR)
	    {
			if(InJob[playerid] == 5)
			{
				if(IsPlayerInIncVehicle(playerid))
	    	    {
	    	        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257))
					{
						TogglePlayerDynamicCP(playerid, BankCP[0], false);
						TogglePlayerDynamicCP(playerid, BankCP[1], true);
					}
					else
					{
						TogglePlayerDynamicCP(playerid, BankCP[2], false);
						TogglePlayerDynamicCP(playerid, BankCP[3], true);
					}
		    	    TogglePlayerControllable(playerid, true);
			    	SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Отнесите мешки с деньгами в банк");
			    	InJob[playerid] = 6;
			    	RemovePlayerFromVehicle(playerid);
	    	    }
			}
		}
		return 1;
	}
	else if(checkpointid == BankCP[1] || checkpointid == BankCP[3] )
	{
	    if(PI[playerid][pJob] == JOB_COLLECTOR)
	    {
			if(InJob[playerid] == 6)
			{
				if(!IsPlayerInAnyVehicle(playerid))
	    	    {
	    	        RemovePlayerAttachedObject(playerid, 7);
	    	        SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	    	        new money = GLS[11];
					GiveMoney(playerid,money);
					aml(51, playerid, "", "проделанную работу", money);
					SCMf(playerid, -1, "[Информация] {FFFFFF}Вы получили {73B461}$%i{FFFFFF} за проделанную работу", money);
	    	    }
	    	    InJob[playerid] = 1;
	    	    if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) TogglePlayerDynamicCP(playerid, BankCP[1], false);
	    	    else TogglePlayerDynamicCP(playerid, BankCP[3], false);

			}
	    }
	    return 1;
	}
 	else if(checkpointid == Dorm_CP[team])
	{
		if(!IsPlayerInRangeOfPoint(playerid,40,DormPos[team][0],DormPos[team][1],DormPos[team][2]))return 1;
		f(str_2,sizeof(str_2),"{B83434} Общак \n\n{FFFFFF}Наркотики: \t\t{9ACD32}%iг\n{FFFFFF}Патроны: \t\t{9ACD32}%i\n{FFFFFF}Канистры: \t\t{9ACD32}%i\n{FFFFFF}Инструменты: \t{9ACD32}%i\n{FFFFFF}Маски: \t\t{9ACD32}%i",OrgInfo[team][oDrugs],OrgInfo[team][oMats],OrgInfo[team][oBenz],OrgInfo[team][oRemont],OrgInfo[team][oMask]);
		SPD(playerid,216,0, !"", str_2,"Меню","Назад");
		return 1;
	}
	else if(checkpointid == Binko_CP) return GameTextForPlayer(playerid, "~g~Press ~r~ALT", 1000, 3);
	else if(checkpointid == Zek_CP) return SPD(playerid,107,2,"Выберите пункт","Список заключенных\nСписок разыскиваемых","Выбор","Отмена");
	else if(checkpointid >= Eatery_CP[0] && checkpointid <= Eatery_CP[6])
	{
		if(BizEntered[playerid]!= -1) SPD(playerid,2761,2,"","{42B02C}-{FFFFFF} Покушать на месте\n{42B02C}-{FFFFFF} Купить в дом", !"Принять", !"Отмена");
		else SPD(playerid,185,2,"Выберите еду","{42B02C}-{FFFFFF} Картофель-Фри \t\t220$\n{42B02C}-{FFFFFF} Сэндвич \t\t\t260$\n{42B02C}-{FFFFFF} Баскет \t\t\t300$\n{42B02C}-{FFFFFF} Крылышки \t\t\t340$\n{42B02C}-{FFFFFF} Салат \t\t\t380$\n{42B02C}-{FFFFFF} Курица \t\t\t420$\n{42B02C}-{FFFFFF} Комплексный Обед \t\t700$","Выбор","Отмена");
		return 1;
	}
	else if(gopost != -1)
	{
	    if(PI[playerid][pJob] == JOB_TRUCKER)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				new carid = GetPlayerVehicleID(playerid);
				new money = GLS[9];
				new Float:X = vTemp[carid][vPos_X];
				new Float:Y = vTemp[carid][vPos_Y];
				new vehid = GetVehicleTrailer(carid);
		        new postid = SelectPost[playerid];
				if(vTemp[carid][vJob] == JOB_TRUCKER )
				{
				    new Float:Pos[3];
					GetPlayerPos(playerid, Pos[0],Pos[1], Pos[2]);
					if(InJob[playerid] == 1)
					{
						if(IsTrailerAttachedToVehicle(carid))
						{
							if(checkpointid == GoFuelCP[gopost])
							{
								new bizid = GoFuel[postid][gfBizzID];
							    if(BizInfo[bizid][bProducts] < 50000) BizInfo[bizid][bProducts] += 1000;
				            	else BizInfo[bizid][bProducts] = 50000;
				            	if(BizInfo[bizid][bMoney] >= money) GiveBizMoney(bizid,-money);
						        TogglePlayerDynamicCP(playerid, GoFuelCP[gopost], false);
						    	UpdateFuels(bizid);
						    	GiveMoney(playerid, money);
						    	aml(51, playerid, "", "работу дальнобойщиком", money);
								SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы получили процент от выручки в размере: {73B461}%i$", money);
								ShiftCords(0,X,Y,vTemp[carid][vPos_A],8.0);
								PlayerGoPost[playerid]=-1;
								InJob[playerid] = 0;
								SetVehicleToRespawn(vehid);
					    	}
					    	else if(checkpointid == GoGunShopCP[gopost])
							{
							    new bizid = GoGunShop[postid][gsBizzID];
							    if(BizInfo[bizid][bProducts] < 50000) BizInfo[bizid][bProducts] += 1000;
				            	else BizInfo[bizid][bProducts] = 50000;
				            	if(BizInfo[bizid][bMoney] >= money)GiveBizMoney(bizid,-money);
						        TogglePlayerDynamicCP(playerid, GoGunShopCP[gopost], false);
						        GiveMoney(playerid, money);
						        aml(51, playerid, "", "работу дальнобойщиком", money);
								SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы получили процент от выручки в размере: {73B461}%i$", money);
								ShiftCords(0,X,Y,vTemp[carid][vPos_A],8.0);
								InJob[playerid] = 0;
								SetVehicleToRespawn(vehid);
								PlayerGoPost[playerid]=-1;
					    	}
					    }
					}
				}
			}
		}
		return 1;
	}
	else if(jail != -1 && checkpointid == JailCP[jail])
	{
	    new num=0;
		if(IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			foreach(new i: Player)
			{
			    if(i != playerid)
			    {
					if(PI[i][pWanted] > 0)
					{
					    if(IsPlayerInVehicle(i,carid))
						{
							GiveMoney(playerid, GLS[16]);
							aml(51, playerid, "", "арест нарушителя", GLS[16]);
							PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
							PI[i][pJailTime] = PI[i][pWanted]*600;
							PI[i][pBailPrice] = PI[i][pWanted]*600;
							UpdatePlayerDataInt(i, "BailPrice", PI[i][pWanted]*600);
							ArrestID[i] = playerid;
							if(GetInvCount(i, Item_Drugs) > 0 || GetInvCount(i, Item_Mats) > 0) SCM(i, COLOR_RED, !"[Информация] {FFFFFF}У вас отобрали наркотики и патроны!");
                            if(!IsPlayerToKvadrat(i,-2929.6589,-2889.1660,-1326.9077,1493.1770))
                            {
								new jrand = random( 2 );
								SetSpawnInfoEx(i, GetPlayerSkin(i), JailPos[jrand][0],JailPos[jrand][1],JailPos[jrand][2], 180.0);
							}
							else SetSpawnInfoEx(i, GetPlayerSkin(i), JailPos[2][0],JailPos[2][1],JailPos[2][2], 180.0);
							ResetGun(i);
							PI[i][pWanted] = 0;
							J_SetPlayerWantedLevel(i, 0);
							PlayerSpawn(i);
							SetItem(i, Item_Drugs);
							SetItem(i, Item_Mats);
							SCMf(i, COLOR_LIGHTRED, ">> Вы были посажены в тюрьму на %i минут.", (PI[i][pJailTime]/60));
							SCM(i, COLOR_LIGHTBLUE, ">> Используйте /advokats чтобы найти адвоката который вам поможет выйти отсюда!");
							SCMf(playerid, COLOR_GREEN, ">> Вы посадили игрока %s в тюрьму на %i минут.", PN(i),(PI[i][pJailTime]/60));

							if(IsPlayerToKvadrat(i,-891.3302,-2950.0190,2915.9917,560.3257)) PI[i][pPrison]=1,SetPlayerVirtualWorld(i, 11);
							else if(IsPlayerToKvadrat(i,-2929.6589,-2889.1660,-1326.9077,1493.1770)) PI[i][pPrison]=3,SetPlayerVirtualWorld(i, 13);
							else PI[i][pPrison]=2,SetPlayerVirtualWorld(i, 12);
							UpdatePlayerDataInt(i, "Prison", PI[i][pPrison]);
							SetPlayerInterior(i, 6);
							TogglePlayerControllable(i, true);
							num = 4;
							break;
                        }
                        else if(num!=4)num = 2;
					}
					else if(num!=4)num = 1;
				}
			}
		}
		if(num==1) SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не можете посадить игрока который не находится в розыске!");
		if(num ==2) SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Игрок которого вы хотите посадить должен находится у вас в машине!");
		num=0;
		TogglePlayerDynamicCP(playerid, JailCP[jail], false);
		return 1;
	}
	else if(rand != -1 && checkpointid == IncCP[rand][0])
	{
		if(PI[playerid][pJob] == JOB_COLLECTOR)
		{
			if(InJob[playerid] == 2)
			{
				TogglePlayerDynamicCP(playerid, IncCP[rand][0], false);
                InJob[playerid] = 3;
	   			TogglePlayerDynamicCP(playerid, IncCP[rand][1], true);
	   			SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Возьмите мешки с деньгами");
				TogglePlayerControllable(playerid, true);
				RemovePlayerFromVehicle(playerid);
			}
		}
	}
	else if(rand != -1 && checkpointid == IncCP[rand][1])
	{
		if(PI[playerid][pJob] == JOB_COLLECTOR)
		{
			if(InJob[playerid] == 3)
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					SetPlayerColor(playerid,0x9ACD32AA);
					if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 1550, 5, 0.2, 0.0, 0.0, -50.0, 180.0, 70.0, 0.6, 0.6, 0.6);
					SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Садитесь в грузовик и едьте в банк");
					new inccp = NumInc_CP[playerid];
					TogglePlayerDynamicCP(playerid, IncCP[inccp][1], false);
					InJob[playerid] = 4;
				}
			}
		}
	}
	else if(rand != -1 && checkpointid == PizzCP[rand][1])
	{
		if(PI[playerid][pJob] == JOB_PIZZA)
		{
			if(InJob[playerid] != 3) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас в руках нет пиццы!");
			if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас в руках нет пиццы!");
			new inccp = NumInc_CP[playerid];
			TogglePlayerDynamicCP(playerid, PizzCP[inccp][1], false);
			InJob[playerid] = 2;
			NumInc_CP[playerid]=-1;
			SendBotMessage(playerid,"Хорошо что завез, а то уже думал самому придётся ехать.");
			new cost = 1150;
			GiveMoney(playerid, cost);
			aml(51, playerid, "", "доставку пиццы", cost);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid,7);
			ClearAnims(playerid);

			if((QuestProgress[playerid][4]>=0 && QuestProgress[playerid][4]<15) && AcceptQuest[playerid][4]!=0) QuestProgress[playerid][4]++;
			if(QuestProgress[playerid][4]==15 && AcceptQuest[playerid][4]!=0)
			{
			    SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно развезли 15 заказов. Задание выполнено.\nВозращайтесь обратно, чтобы получить награду!\n\n{82A3DF}Не забудьте переодеться или введите /stopjob.", !"Принять", !"");
			    NextStapQI(playerid,4);
			}
		}
	}
	else if(rand != -1 && checkpointid == PizzCP[rand][0])
	{
		if(PI[playerid][pJob] == JOB_PIZZA)
		{
		    if(InJob[playerid] != 4) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В эту точку вы должны приехать на рабочем мопеде!");
			if(vTemp[GetPlayerVehicleID(playerid)][vJob] != 12) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В эту точку вы должны приехать на рабочем мопеде!");
			TogglePlayerDynamicCP(playerid, PizzCP[rand][0], false);
			TogglePlayerDynamicCP(playerid, PizzCP[rand][1], true);
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Отдайте пиццу заказчику.");
			RemovePlayerFromVehicle(playerid);
		}
	}
	else
	{
		if(!Fishing{playerid})
		{
			for(new i; i < sizeof(FishZone);i ++) if(checkpointid == Fish_CP[i]) return SPD(playerid,212,0,"Место для рыбалки","{FFFFFF}Вы действительно хотите порыбачить?\nДля рыболовли вам необходима удочка, которую можно приобрести в любом 24/7\nи наживка для рыбалки, ее так же можно там купить.\nРыбу можно продать в магазин.","да","Нет");
		}

		for(new i; i < OWNABLEBIZES; i++)
		{
			if(checkpointid != BizCP[i]) continue;
			InfoBiz[playerid] = i;

		    new IS_BIZZ_SELLING = GetString(BizInfo[i][bOwner], "The State");
		    new NOT_ENTER_BIZ = IsNoEnterBiz(i);

			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][0], "Businesses~g~ %i", i);
			if(IS_BIZZ_SELLING) PlayerTextDrawSetString(playerid, HInfoDraw[playerid][1], "~g~Bizz for sell");
			else PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][1], "Owner~n~~g~%s", BizInfo[i][bOwner]);
			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][2], "Price:~g~ $%i", BizInfo[i][bCost]);
			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][3], "Status: %s", (BizInfo[i][bLock] || NOT_ENTER_BIZ) ? ("~r~Close") : ("~g~Open"));
			TextDrawShowForPlayer(playerid, HInfoBG);
			for(new t; t < 4; t++) PlayerTextDrawShow(playerid, HInfoDraw[playerid][t]);
			if(IS_BIZZ_SELLING) TextDrawShowForPlayer(playerid, HInfoBuyDraw);
			else if(!BizInfo[i][bLock] && !NOT_ENTER_BIZ) TextDrawShowForPlayer(playerid, HInfoEnterDraw);
		}
		for(new i; i < OWNABLEHOUSES; i++)
		{
			if(checkpointid != HouseCP[i]) continue;
		 	if(HouseNalogState2[playerid] == 1 && HouseNalog[playerid] == i)
			{
			    HouseNalogState2[playerid] = 2;
			    HouseInfo[i][hNalog] += HouseInfo[i][hNalog2];
			    HouseInfo[i][hNalog2] = 0;
				SPD(playerid, 0, 0, !"Налоговая", !"Вы оставили чек на оплату комунальных услуг.\nОтправляйтесь в офис для получения зарплаты.", !"Закрыть", !"");
			    EnableGPSForPlayer(playerid,1530.8496,-1072.0752,25.0625);
			}
		    new IS_HOUSE_SELLING = GetString(HouseInfo[i][hOwner], "The State");
		    new s = GetHouseStyle(i);
			InfoHouse[playerid] = i;
			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][0], "House~g~ %i", i);
			if(IS_HOUSE_SELLING) PlayerTextDrawSetString(playerid, HInfoDraw[playerid][1], "~g~House for sell");
			else
			{
				if(PI[playerid][pLevel] >= 5) PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][1], "Owner~n~~g~%s", HouseInfo[i][hOwner]);
				else PlayerTextDrawSetString(playerid, HInfoDraw[playerid][1], "Owner~n~~r~[need 5 level]");
			}
			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][2], "Level: ~g~%i", HouseInfo[i][hKlass]);

		    static cost[32];

			if(HouseInfo[i][hLevel] == 10) f(cost, sizeof(cost), "%i AZ", HouseInfo[i][hCost]);
	    	else f(cost, sizeof(cost), "$%i", HouseInfo[i][hCost]);

			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][3], "Price:~g~ %s", cost);
			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][4], "Rooms:~g~ %i", HouseRooms[s]);
			PlayerTextDrawSetStringf(playerid, HInfoDraw[playerid][5], "Status: %s", !HouseInfo[i][hLock] ? ("~g~Open") : ("~r~Close"));
			TextDrawShowForPlayer(playerid, HInfoBG);
			for(new t; t < 6; t ++) PlayerTextDrawShow(playerid, HInfoDraw[playerid][t]);
			if(IS_HOUSE_SELLING) TextDrawShowForPlayer(playerid, HInfoBuyDraw);
			else if(!HouseInfo[i][hLock]) TextDrawShowForPlayer(playerid, HInfoEnterDraw);
	    }
	}
	return 0;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	new house = InfoHouse[playerid];
	new biz = InfoBiz[playerid];
	if(house != -1 && checkpointid == HouseCP[house])
	{
		TextDrawHideForPlayer(playerid, HInfoBG);
		for(new i; i < 6; i ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][i]);
		TextDrawHideForPlayer(playerid, HInfoEnterDraw);
		TextDrawHideForPlayer(playerid, HInfoBuyDraw);
	}
	if(biz != -1 && checkpointid == BizCP[biz])
	{
		TextDrawHideForPlayer(playerid, HInfoBG);
		for(new i; i < 6; i ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][i]);
		TextDrawHideForPlayer(playerid, HInfoEnterDraw);
		TextDrawHideForPlayer(playerid, HInfoBuyDraw);
	}
	return 1;
}
public OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	new test = CarTest[playerid];
	if(test != -1 && checkpointid == FTest_CP[test])
	{
		TogglePlayerDynamicRaceCP(playerid,FTest_CP[test],false);
		if((test+1) == 32)
		{
  			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно сдали практику на право летать на самолёте. Держите ваше удостоверения.");
  			GiveLiccenses(playerid, 30, Item_Fly_Lic);
  			ExitCar(playerid);
  			vTemp[GetPlayerVehicleID(playerid)][vPlayer] = -1;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			CarTest[playerid] = -1;
  		}
  		else
  		{
  			CarTest[playerid] ++;
  			new i = CarTest[playerid];
  			TogglePlayerDynamicRaceCP(playerid,FTest_CP[i],true);
		}
	}
	if(test != -1 && checkpointid == Test_CP[test])
	{
		TogglePlayerDynamicRaceCP(playerid,Test_CP[test],false);
		if( (test+1) == sizeof(Test_CP) )
		{
  			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно сдали тест на вождение! Держите своё вод.удостоверение.");
  			GiveLiccenses(playerid, 30, Item_Car_Lic);
  			ExitCar(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			CarTest[playerid] = -1;

			if(QuestProgress[playerid][3]==0 && AcceptQuest[playerid][3]!=0)
		    {
		        QuestProgress[playerid][3] = 2;
		        NextStapQI(playerid,3);
		        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно получили вод. удостоверение по принятому квесту.\n\n{82A3DF}Возращайтесь обратно, чтобы получить награду за выполненое задание.", !"Принять", !"");
		    }
  		}
  		else
  		{
  			CarTest[playerid] ++;
  			new i = CarTest[playerid];
  			TogglePlayerDynamicRaceCP(playerid,Test_CP[i],true);
  			if(test == 12) SPD(playerid, 0,0, "", "\n\n{FFFFFF}Внимание!\nЧтобы открыть {9ACD32}шлагбаум{FFFFFF}, используйте:\n{9ACD32}Сигнал{FFFFFF}( Необходимо нажать клавишу: H)\n\n", "Понял","");
            else if(test == 19) SPD(playerid, 0,0, "", "\n\n{FFFFFF}Отлично!\nТеперь вы должны выехать из {9ACD32}парковки{FFFFFF}, включив заднюю скорость, а\nзатем {9ACD32}повернуть{FFFFFF} налево.\n\n", "Понял","");
            else if(test == 22) SPD(playerid, 0,0, "", "\n\n{FFFFFF}А здесь аккуратно!\nПостарайтесь медленно {9ACD32}проехать{FFFFFF} препятствие не ударив машину.\nЗатем {9ACD32}продолжите{FFFFFF} движение по чекпоинтам.\n\n", "Понял","");
            else if(test == 26) SPD(playerid, 0,0, "", "\n\n{FFFFFF}Тут все просто!\nВыезжайте из места где вы {9ACD32}припарковались{FFFFFF}, повернув налево.\nзатем {9ACD32}продолжите{FFFFFF} движение по чекпоинтам.\n\n", "Понял","");
		}
	}
	new mtest = MotoTest[playerid];
	if(mtest != -1 && checkpointid == MTest_CP[mtest])
	{
		TogglePlayerDynamicRaceCP(playerid,MTest_CP[mtest],false);
		if( (mtest+1) == sizeof(MTest_CP) )
		{
  			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно сдали тест на вождение мото-транспорта! Держите своё вод.удостоверение.");
  			GiveLiccenses(playerid, 30, Item_Bike_Lic);
  			ExitCar(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			MotoTest[playerid] = -1;
			TogglePlayerDynamicRaceCP(playerid,MTest_CP[0],false);
  		}
  		else
  		{
  			MotoTest[playerid] ++;
  			new i = MotoTest[playerid];
  			TogglePlayerDynamicRaceCP(playerid,MTest_CP[i],true);
  			if(mtest == 8) SPD(playerid, 0,0, "", "\n\n{FFFFFF}Внимание!\nЧтобы открыть {9ACD32}шлагбаум{FFFFFF}, используйте:\n{9ACD32}Сигнал{FFFFFF}( Необходимо нажать клавишу: H)\n\n", "Понял","");
            else if(mtest == 20) SPD(playerid, 0,0, "", "\n\n{FFFFFF}Отлично!\nТеперь вы должны выехать из {9ACD32}парковки{FFFFFF}, включив заднюю скорость, а\nзатем {9ACD32}повернуть{FFFFFF} направо.\n\n", "Понял","");
		}
	}
	if(FarmJob[playerid] != -1 && checkpointid == Tfarm_CP[FarmJob[playerid]])
	{
		TogglePlayerDynamicRaceCP(playerid,Tfarm_CP[FarmJob[playerid]],false);
		if( (FarmJob[playerid]+1) == sizeof(Tfarm_CP) )
		{
		    ferman[playerid]+=14;
  			SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы успешно отработали. {ECB534}Ваш навык фермера повышен на 60 единиц[ /ffarm ]");
  			f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы уже заработали: %i$",ferman[playerid]*GLS[4]);
  			SCM(playerid,COLOR_GREY,str_2);
  			PI[playerid][pContractTime]+=60;
  			UpdatePlayerDataInt(playerid, "ContractTime", PI[playerid][pContractTime]);
  			GiveBizMoney(BIZ_ELECTRO_LS,450);
			FarmJob[playerid]=0;
			TogglePlayerDynamicRaceCP(playerid,Tfarm_CP[0],true);
  		}
  		else
  		{
  			FarmJob[playerid] ++;
  			TogglePlayerDynamicRaceCP(playerid,Tfarm_CP[FarmJob[playerid]],true);
		}
	}
	if(FarmJob[playerid] != -1 && checkpointid == Kfarm_CP[FarmJob[playerid]])
	{
		TogglePlayerDynamicRaceCP(playerid,Kfarm_CP[FarmJob[playerid]],false);
		if( (FarmJob[playerid]+1) == sizeof(Kfarm_CP) )
		{
		    ferman[playerid]+=26;
  			SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы успешно отработали. {ECB534}Ваш навык фермера повышен на 90 единиц[ /ffarm ]");
  			f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы уже заработали: %i$",ferman[playerid]*GLS[4]);
  			SCM(playerid,COLOR_GREY,str_2);
  			GLS[27] +=90;
  			SaveInforamtion();
  			GiveBizMoney(BIZ_ELECTRO_LS,600);
	    	f(str_2, sizeof(str_2), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[27],GLS[31]);
			UpdateDynamic3DTextLabelText(FactoryText[1], -1, str_2);
  			PI[playerid][pContractTime]+=90;
  			UpdatePlayerDataInt(playerid, "ContractTime", PI[playerid][pContractTime]);
			FarmJob[playerid]=0;
			TogglePlayerDynamicRaceCP(playerid,Kfarm_CP[0],true);
  		}
  		else
  		{
  			FarmJob[playerid] ++;
  			TogglePlayerDynamicRaceCP(playerid,Kfarm_CP[FarmJob[playerid]],true);
		}
	}
	if(FarmJob[playerid] != -1 && checkpointid == Zfarm_CP[FarmJob[playerid]])
	{
		TogglePlayerDynamicRaceCP(playerid,Zfarm_CP[FarmJob[playerid]],false);
		if( (FarmJob[playerid]+1) == sizeof(Zfarm_CP) )
		{
      		ferman[playerid]+=54;
  			SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы успешно отработали. {ECB534}Ваш навык фермера повышен на 50 единиц[ /ffarm ]");
  			f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы уже заработали: %i$",ferman[playerid]*GLS[4]);
  			SCM(playerid,COLOR_GREY,str_2);
  			PI[playerid][pContractTime]+=50;
  			UpdatePlayerDataInt(playerid, "ContractTime", PI[playerid][pContractTime]);
  			GiveBizMoney(BIZ_ELECTRO_LS,700);
			FarmJob[playerid]=0;
			TogglePlayerDynamicRaceCP(playerid,Zfarm_CP[0],true);
  		}
  		else
  		{
  		    FarmJob[playerid] ++;
  			TogglePlayerDynamicRaceCP(playerid,Zfarm_CP[FarmJob[playerid]],true);
		}
	}
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(!IsValidDynamicPickup(pickupid) || pPickupID[playerid]) return 0;
    pPickupID[playerid] = pickupid;
	/*for(new i;i<sizeof(PodarokInfo);i++)
	{
		if(PodarokInfo[i][porCreat]!=pickupid)continue;
		if(!IsPlayerInRangeOfPoint(playerid,5,PodarokInfo[i][porPos][0],PodarokInfo[i][porPos][1],PodarokInfo[i][porPos][2])) return false;
		new count = 10;
		switch(PI[playerid][pVIP])
		{
			case 4: count = 20;
			case 5: count = 30;
		}
		InvAdd(playerid, Item_Gift, count);
		aml(101, playerid, "", "подобрал", Item_Gift, count);
		PodarokInfo[i][porCreat]=-1;
		DestroyDynamicPickup(pickupid);
		SCMf(playerid, COLOR_VALIK, "[Подсказка]{FFFFFF} Вы подобрали подарок. У вас уже %i подарка(ов)! Обменять подарки на шкатулку можно у Эдварда.", GetInvCount(playerid, Item_Gift));
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		return true;
	}*/
    for(new i = 0; i <FamilyHouses; i++)
	{
	    if(pickupid == famHousePickUp[i][0])
	    {
	        if(GetPVarInt(playerid, !"reloader") > gettime()) return true;
	        if(GetString(FamilyHouse[i][fhOwner],"The State"))
	        {
	            SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Семейная квартира продается, если вы лидер или заместитель");
	            SCM(playerid, -1, !"одной из семей, то вы можете приобрести эту квартиру за очки репутации.");
	            SCM(playerid, -1, !"Для покупки используйте команду: {F56183}/buyfam");
	            return true;
	        }
	        if(FamilyHouse[i][fhStatus] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Квартира закрыта!");
			TogglePlayerControllable(playerid, false);
		    J_SetPlayerPos(playerid, FamilyHouse[i][fh_Exit_X], FamilyHouse[i][fh_Exit_Y], FamilyHouse[i][fh_Exit_Z]);
		    SetPlayerFacingAngle(playerid, 269.2998);
		    SetPlayerInterior(playerid, 1);
		    SetPlayerVirtualWorld(playerid, (FamilyHouse[i][fhID]+50));
		    SetPVarInt(playerid, !"reloader", gettime() + 5);
	    }
	    else if(pickupid == famHousePickUp[i][1])
	    {
	    	if(GetPVarInt(playerid, !"reloader") > gettime()) return true;
	        TogglePlayerControllable(playerid, false);
	        J_SetPlayerPos(playerid, 2786.0383, 735.7945, 1500.1187);
		    SetPlayerFacingAngle(playerid, 85.3946);
		    SetPlayerInterior(playerid, 23);
		    SetPlayerVirtualWorld(playerid, 1);
	    }
	    else if(pickupid == famHousePickUp[i][2])//Бронежилет
	    {
	        new Float: Armour;
	        if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	        if(FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour] < 1) return SCM(playerid, COLOR_FAMILY2, !"[Ошибка]{FFFFFF} В семейной квартире недостаточно бронежилетов!");
            GetPlayerArmour(playerid, Armour);
			if(Armour >= 90) return SCM(playerid, COLOR_FAMILY2, !"[Ошибка]{FFFFFF} У вас уже есть бронежилет!");
			SCM(playerid, COLOR_FAMILY2, !"[Подсказка]{FFFFFF} Вы успешно надели бронежилет из семейной квартиры!");
	        FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour] --;
			TSave(pFamHouse, "FamilyHouse", "Armour", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour], "d");
			J_SetPlayerArmour(playerid, 100.0);
	    }
	    else if(pickupid == famHousePickUp[i][3])//Хилка
	    {
	        new Float: Health;
	        if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	        if(FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth] < 1) return SCM(playerid, COLOR_FAMILY2, !"[Ошибка]{FFFFFF} В семейной квартире недостаточно аптечек!");
	        GetPlayerHealth(playerid, Health);
	        if(Health >= 90) return SCM(playerid, COLOR_FAMILY2, !"[Ошибка]{FFFFFF} Вы не больны!");
	        FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth] --;
			TSave(pFamHouse, "FamilyHouse", "Health", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth], "d");
			J_SetPlayerHealth(playerid, 100.0);
		}
	}
	for(new i;i<sizeof(GribInfo);i++)
	{
	    if(GribInfo[i][gribCreat]!=pickupid)continue;
	    if(!IsPlayerInRangeOfPoint(playerid,5,GribInfo[i][gribPos][0],GribInfo[i][gribPos][1],GribInfo[i][gribPos][2])) return 0;
	    if(!IsAtGang(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не наркодиллер!");
	    GribInfo[i][gribCreat]=-1;
	    DestroyDynamicPickup(pickupid);
		f(str_2, sizeof(str_2), "%s срезал(а) растение", PN(playerid));
		ProxDetector(25, playerid, str_2, COLOR_PURPLE);
		InvAdd(playerid, Item_DrugSeeds, 1, 0);
		aml(101, playerid, "", "срезал растение", Item_DrugSeeds, 1);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
		SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы нашли семена для посадки наркотиков.");
		SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}У вас уже:  {73B461}%i шт.",GetInvCount(playerid, Item_DrugSeeds));
		return 1;
	}
	for(new i; i != MAX_EGGS; i++)
	{
		if(Eggs[i][eCreate] != pickupid) continue;
		InvAdd(playerid, Item_Gift, 1, 0);
		aml(101, playerid, "", "подобрал подарок", Item_Gift, 1);
		Eggs[i][eCreate] = -1;
		DestroyDynamicPickup(pickupid);
		SCMf(playerid, COLOR_LIGHTBLUE, "[Подсказка] {FFFFFF}Вы подобрали подарок. У вас уже %i подарка(ов)! Обменять подарки на шкатулку можно у Эдварда.", GetInvCount(playerid, Item_Gift));
		ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		return 1;
	}
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(GetPlayerVirtualWorld(playerid)==1228) return 1;
    new team = PI[playerid][pMember];
 	if(pickupid == TeamDutyCP[team])
	{
		if(Getemer[playerid] > gettime()) return 0;
	    Getemer[playerid] = gettime() + 5;
		if(pSportZal[playerid] == 1) return SCM(playerid, COLOR_RED, !"Вы не можете пользоваться этой раздевалкой пока не переоденетесь в служебную форму!");
		else if(IsAArmy(playerid) || IsACop(playerid)) return SPD(playerid, 581, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Переодеться\n{42B02C}-{FFFFFF} Взять боеприпасы\n", !"Принять", !"Отклонить");
		else SPD(playerid, 581, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Переодеться", !"Принять", !"Отклонить");
	    return 1;
	}
    else if(pickupid == HealExitPickup)
	{
 		if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении!");
		new world = GetPlayerVirtualWorld(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		switch(world)
		{
			case 1:
			{
				SetPlayerFacingAngle(playerid, 335.2464);
				J_SetPlayerPos(playerid, 1176.8413,-1324.0846,14.0412);
			}
			case 2:
			{
				SetPlayerFacingAngle(playerid, 2.3200);
				J_SetPlayerPos(playerid, 1607.4996,1818.8636,10.8203);
			}
			default:
			{
				SetPlayerFacingAngle(playerid, 180.0);
				J_SetPlayerPos(playerid, -2668.9080,636.9764,14.4531);
			}
		}
		return 1;
 	}
	else if(pickupid == EventLeave)
    {
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно покинули мероприятие!\n\n", !"Принять", !"");
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid ,0);
		J_SetPlayerPos(playerid,-2267.3701,180.6651,35.3125);
		SetPlayerFacingAngle(playerid, 229.3854);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3))
			RemovePlayerAttachedObject(playerid, 3);

		DestroyPlayerTD(playerid, EventTimeTD[playerid][0]);
		PI[playerid][pEventTime] = 0;
    }
    else if(pickupid >= GetPizza[0] && pickupid <= GetPizza[1])
 	{
		if(PI[playerid][pJob]!= JOB_PIZZA)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не работаете развозчиком пиццы.");
		if( InJob[playerid]!=2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не готовы сейчас взять пиццу.");
		if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 2814, 1, 0.0, 0.5, -0.0, 90.0, 90.0, 0.0, 1.0, 1.0, 1.0);
 	    InJob[playerid]=3;
	 	CarryAnim(playerid);
	   	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы взяли пиццу. Садитесь на мопед чтобы положить ее в багажник.");
	   	SCM(playerid,COLOR_ACHAT,"[Информация] {FFFFFF}Введите /stopjob если захотите закончить работу.");
        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) InJobs[playerid]=1;
		else InJobs[playerid]=2;
		return 1;
	}
 	else if(pickupid >= healthpd[0] && pickupid <= healthpd[7])
 	{
        if(Getemer[playerid] > gettime()) return 0;
	    Getemer[playerid] = gettime() + 4;
	    if(!IsACop(playerid) && PI[playerid][pMember] != TEAM_MERIALS && !IsANews(playerid) && PI[playerid][pMember] != TEAM_BANK && PI[playerid][pMember] != TEAM_LICENSERS)
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не полицейский и не состоите в правительстве/банке/новостном агенстве/автошколе!");

 	    J_SetPlayerHealth(playerid, 100);
        GameTextForPlayer(playerid, !"Health +100", 0, 1);
        return 1;
	}
	else if(pickupid == prost)
	{
	    if(Getemer[playerid]>gettime())return 0;
	    Getemer[playerid]=gettime()+4;
	    f(str_2,sizeof(str_2),"Стоимость выкупа составляет: %i$. Что-то еще?",GLS[21]);
	    SendBotMessage(playerid, str_2);
	    return 1;
	}
	else if(pickupid >= Bar_CP[0] && pickupid <= Bar_CP[MAX_BARSs-1])
	{
	    if(Getemer[playerid]>gettime())return 0;
	    Getemer[playerid]=gettime()+4;
	  	for(new A; A < 5; A++) TextDrawShowForPlayer(playerid, alcodraw[A]);
	  	for(new A; A < 7; A++) TextDrawShowForPlayer(playerid, alcodraw1[A]);
	  	for(new A; A < 5; A++) TextDrawShowForPlayer(playerid, alcodraw2[A]);
    	SelectTextDraw(playerid, 0xFF9933FF);
	  	return 1;
	}
 	else if(pickupid == MeriaGun)
	{
	    if(!Isameria(playerid)) return 0;

		GiveGun(playerid, 3, 30);
		if(PI[playerid][pRank]>4)
		{
			J_SetPlayerArmour(playerid, 100);
			SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы получили дубинку и бронежилет!");
		}
		f(str_2,sizeof(str_2)," %s берет табельное оружие",cPN(playerid));
		ProxDetector(25,playerid, str_2,COLOR_PURPLE);
		return 1;
	}
	else if(pickupid == EnterSklad[0])
	{
	    if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в государственных структурах!");
    	SetPlayerInterior(playerid,2);
		SetPlayerVirtualWorld(playerid,1);
		J_SetPlayerPos(playerid,458.32, 864.39, 1500.96);
		SetPlayerFacingAngle(playerid, 270.000);
		return 1;
	}
	else if(pickupid == EnterSklad[1])
	{
	    if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении!");
	    SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		J_SetPlayerPos(playerid,2732.3691,-2451.3196,17.5937);
		SetPlayerFacingAngle(playerid, 325.8486);
		return 1;
	}
	else if(pickupid == EnterSklad[2])
	{
	    SetPlayerInterior(playerid,2);
		SetPlayerVirtualWorld(playerid,1);
		J_SetPlayerPos(playerid,592.1155,1454.0194,1900.7979);
		SetPlayerFacingAngle(playerid, 105.8748);
		return 1;
	}
	else if(pickupid == EnterSklad[3])
	{
	    if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении!");
	    SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		J_SetPlayerPos(playerid,253.2157,1838.9449,17.6568);
		SetPlayerFacingAngle(playerid, 268.8097);
		return 1;
	}
	else if(pickupid == EnterSklad[4])
	{
	    if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в государственных структурах!");
    	SetPlayerInterior(playerid,2);
		SetPlayerVirtualWorld(playerid,1);
		J_SetPlayerPos(playerid,-1611.0013,-126.1146,1501.0859);
		SetPlayerFacingAngle(playerid, 269.2612);
		return 1;
	}
	else if(pickupid == EnterSklad[5])
	{
	    if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении");
	    SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		J_SetPlayerPos(playerid,-1368.9514,499.1776,11.1953);
		SetPlayerFacingAngle(playerid,267.9026);
		return 1;
	}
	else if(pickupid == nalogoffise[0])
	{
	    SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,3);
		J_SetPlayerPos(playerid,1493.8759,1305.5491,1093.2891);
		SetPlayerFacingAngle(playerid, 84.0490);
		return 1;
	}
	else if(pickupid == nalogoffise[1])
	{
	    SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		J_SetPlayerPos(playerid,1530.8074,-1070.4329,25.0625);
		SetPlayerFacingAngle(playerid, 339.1004);
		return 1;
	}
	else if(pickupid == amybank)
 	{
		if(GetTeamID(playerid) != TEAM_BANK)
			return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не сотрудник банка!");

		GiveGun(playerid, 3, 100);
		f(str_2, sizeof(str_2), "%s берет оружие", cPN(playerid));
		ProxDetector(25, playerid, str_2, COLOR_PURPLE);
		return 1;
	}
	else if(pickupid >= HealSG[0] && pickupid <= HealSG[86])
		return GameTextForPlayer(playerid, !"~g~Press~r~ ALT", 1000, 3);

 	else if(pickupid == Inc_CP[0]||pickupid == Inc_CP[1])
	{
		if(PI[playerid][pJob] != JOB_COLLECTOR) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не инкассатор");
		if(InJob[playerid]) SPD(playerid,149,0,"Работа 'Инкассатор'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		else SPD(playerid,149,0,"Работа 'Инкассатор'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
		return 1;
	}
	else if(pickupid == Yakydzapick)
	{
	    if(Getemer[playerid]>gettime())return 0;
	    Getemer[playerid]=gettime()+5;
		SPD(playerid,1666,2,"Меню ресторана","Курица в соусе Терияки\t\t\t 600$\nМисо-суп\t\t\t\t\t 500$\nПрозрачная лапша с говядиной\t\t 700$\nУдон в сливочном соусе с говядиной\t\t 800$\nКани спайси \t\t\t\t\t 600$","Принять","Закрыть");
		return 1;
	}
	else if(pickupid >= portpick[0] && pickupid <= portpick[4])
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
		    if(!IsANotControllable(playerid))
		    {
				if(PI[playerid][pJob] == JOB_PORTER)
				{
					if(InJob[playerid] == 1)
					{
					    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
			            InJob[playerid] = 3;
			            TogglePlayerDynamicCP(playerid, PorterDownCP, true);
			    		CarryAnim(playerid);
			    		if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 2060, 5, 0.01, 0.1, 0.2, 100, 10, 85);
					}
				}
			}
		}
		return 1;
	}
	else if(pickupid >= shopeat[0] && pickupid <= shopeat[32]) return ShowStall(playerid);
	else if(pickupid == bolka[0])
	{
	    SPD(playerid, 8172, DIALOG_STYLE_LIST, "Выберите этаж", "[{FFFC92}Ресепшен{FFFFFF}] 1 этаж\n[{FFDE47}VIP отдел{FFFFFF}] 2 этаж", "Выбор", "Отмена");
		return 1;
	}
	else if(pickupid == bolka[1])
	{
	    SPD(playerid, 8173, DIALOG_STYLE_LIST, "Выберите этаж", "[{FFFC92}Ресепшен{FFFFFF}] 1 этаж\n[{FFDE47}VIP отдел{FFFFFF}] 2 этаж", "Выбор", "Отмена");
		return 1;
	}
	else if(pickupid == bolka[2])
	{
	    SPD(playerid, 8174, DIALOG_STYLE_LIST, "Выберите этаж", "[{FFFC92}Ресепшен{FFFFFF}] 1 этаж\n[{FFDE47}VIP отдел{FFFFFF}] 2 этаж", "Выбор", "Отмена");
		return 1;
	}
	else if (pickupid ==demorgan[0])
	{
	    if(PI[playerid][pDemorgan]) return 1;
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerFacingAngle(playerid, 272.4357);
		J_SetPlayerPos(playerid, -2152.7336, 645.0001, 52.3672);
		return 1;
    }
  	else if(pickupid == EnterBankPickup)
 	{
        SetPlayerInterior(playerid, 1);
        SetPlayerVirtualWorld(playerid, 1);
        SetPlayerFacingAngle(playerid,270.0);
        J_SetPlayerPos(playerid,-2691.6641, 796.5349, 1500.9669);
        if(!Terakt && !IsACop(playerid))
        {
            for(new x; x < 13; x ++)
			{
			    GetPlayerWeaponData(playerid, x, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
			    if(PI[playerid][pGuns][x] != 0)
			    {
	                SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}При входе в банк у вас забрали оружие. Забрать сможете как будете уходить!");
					ResetGun(playerid);
					MinusGun{playerid} = true;
			    }
			}
		}
        return 1;
 	}
 	else if(pickupid == ExitBankPickup)
 	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerFacingAngle(playerid, 357.1815);
        J_SetPlayerPos(playerid, 1480.8480,-1768.7529,18.7929);
        if(MinusGun{playerid})
        {
        	for(new x; x < 13; x++)
        	{
            	GiveGun(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
            }
        }
        return 1;
 	}
	else if(pickupid >= FerumPickup[0] && pickupid <= FerumPickup[5])
	{
	    if(CreateMats[playerid] == 1)
		{
		    if(GetPlayerVirtualWorld(playerid)==11 && GLS[25]<100) return SPD(playerid, 0, 0, !"", !"{BCB7B7}На складе армии недостаточно материалов для изготовления патронов!\nВы можете загрузить материалы на заводе LS с помощью вертолета.", !"Закрыть", !"");
		    else if (GetPlayerVirtualWorld(playerid)==12 && GLS[26]<100)  return SPD(playerid, 0, 0, !"", !"{BCB7B7}На складе армии недостаточно материалов для изготовления патронов!\nВы можете загрузить материалы на заводе LS с помощью вертолета.", !"Закрыть", !"");
			else if (GetPlayerVirtualWorld(playerid)==13 && GLS[43]<100)  return SPD(playerid,0, 0, !"", !"{BCB7B7}На складе армии недостаточно материалов для изготовления патронов!\nВы можете загрузить материалы на заводе LS с помощью вертолета.", !"Закрыть", !"");
			CreateMats[playerid] = 2;
			SetPlayerAttachedObject(playerid, 7, 7891, 5, 0.3, 0.17, 0.1, 0.0, 150.0, 60.0, 0.08, 0.08, 0.08);
			if(GetPlayerVirtualWorld(playerid)==10)
			{
			    if(FactoryFerum<5)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На заводе недостаточно металла для его переработки!");
				FactoryFerum -= 5;
    			f(str_2, sizeof(str_2), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
				UpdateDynamic3DTextLabelText(FactoryText[0], -1, str_2);
			}
			for(new i; i < sizeof(FerumCP);i ++) TogglePlayerDynamicCP(playerid, FerumCP[i], true);
		}
		else if(CreateMats[playerid] == 2) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже брали металл. Направляйтесь к рабочему месту.");
		else if(CreateMats[playerid] == 4) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Отнесите материалы к остальным материалам.");
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не на работе!");
		return 0;
	}
	else if(pickupid >= TeleportPickup[0] && pickupid <= TeleportPickup[sizeof(TeleportInfo)-1])
	{
	    if(Getemer[playerid]>gettime())return 0;
	    Getemer[playerid]=gettime()+6;
	    if(GetPlayerSkin(playerid)==80)
		{
			if(PI[playerid][pOldSkin]==0) PI[playerid][pOldSkin] = PI[playerid][pSkin];
			SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
			pSportZal[playerid]=0;
			SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На улицу запрещено выходить в форме для тренировок!");
		}
		CanUse[playerid]=0;
		new tp = pickupid - TeleportPickup[0];
		if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if(tp==71 || tp==73 || tp==75 || tp==77 || tp==79)
			{
				new zone = GetPlayerGangZone(playerid);
			    if((GZInfo[zone][gzFracID]==PI[playerid][pMember]))
			    {
					if(PI[playerid][pRank]>=9)
					{
				        ClearChatForPlayer(playerid);
				        SCM(playerid, COLOR_ORANGE, !"Этот наркопритон принадлежит вашей банде!");
				        SCM(playerid, -1, !"Для управления наркопритоном используйте команды:");
				        SCM(playerid, -1, !"/getmoney /putmonet /setdsell /setdbuy.");
				        SCM(playerid, COLOR_ORANGE, !"Необходимо подойти к вашему барыге!");
				        CanUse[playerid]=1;
				    }
				    else SCM(playerid, COLOR_ORANGE, !"Этот наркопритон принадлежит вашей банде!");
				}
			}
		}
		if(HouseEntered[playerid]!=-1) HouseEntered[playerid]=-1;
		if(tp == 0)
		{
		    if(!Terakt && !IsACop(playerid))
		    {
		        for(new x; x < 13; x ++)
				{
				    GetPlayerWeaponData(playerid, x, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
				    if(PI[playerid][pGuns][x] != 0)
				    {
		                SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}При входе в мэрию у вас забрали оружие. Забрать сможете как будете уходить!");
						ResetGun(playerid);
						MinusGun{playerid} = true;
				    }
				}
			}
		}
		else if(tp == 1)
		{
	        if(MinusGun{playerid})
	        {
	        	for(new x; x < 13; x++)
	        	{
	            	GiveGun(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
	            }
	        }
		}
		else if(tp == 50 || tp == 52 || tp == 54)
		{
		    if(!Terakt && !IsACop(playerid))
		    {
		        for(new x; x < 13; x ++)
				{
				    GetPlayerWeaponData(playerid, x, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
				    if(PI[playerid][pGuns][x] != 0)
				    {
		                SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}При входе в радиостанцию у вас забрали оружие. Забрать сможете как будете уходить!");
						ResetGun(playerid);
						MinusGun{playerid} = true;
				    }
				}
			}
		}
		else if(tp == 51 || tp == 53 || tp == 55)
		{
	        if(MinusGun{playerid})
	        {
	        	for(new x; x < 13; x++)
	        	{
	            	GiveGun(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
	            }
	        }
		}

		SetPlayerFacingAngle(playerid, TeleportInfo[tp][tpExitPos_A]);
		J_SetPlayerPos(playerid, TeleportInfo[tp][tpExitPos_X], TeleportInfo[tp][tpExitPos_Y], TeleportInfo[tp][tpExitPos_Z]);
		if(GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
		{
			NoEnterPickup[playerid] =2;
	 		TogglePlayerControllable(playerid,false);
 		}
 		SetPlayerInterior(playerid, TeleportInfo[tp][tpExitInt]);
		SetPlayerVirtualWorld(playerid, TeleportInfo[tp][tpExitWorld]);
		return 1;
	}
    else if(pickupid == FactoryClothes)
    {
        if(Getemer[playerid]>gettime())return 0;
        if(GetPlayerVirtualWorld(playerid)==10)
		{
	        new hour,minuite,second;
		    gettime(hour,minuite,second);
	      	if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
			{
		 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
		 		return 1;
			}
		}
	    Getemer[playerid]=gettime()+5;
        if(InJob[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В данный момент вы уже где-то работаете!");
        if(!CreateMats[playerid]) SPD(playerid, 254, 0, "Раздевалка", "Вы хотите переодеться и начать работать?", "Да", "Нет");
		else SPD(playerid, 254, 0, "Раздевалка", "Вы хотите завершить работу?", "Да", "Нет");
		return 1;
	}
	else if(pickupid >= ZavodClotherCP[0] && pickupid <= ZavodClotherCP[5])
    {
  	 	if(!CreateMats[playerid] && !IsAZavodSkin(playerid)) return SPD(playerid, 300, 0, "Раздевалка", "{FFFFFF}Вы хотите переодеться и {33AA33}начать {FFFFFF}работу?", "Да", "Отмена");
    	else return SPD(playerid, 300, 0, "Раздевалка", "{FFFFFF}Вы хотите переодеться и {FF0000}закончить {FFFFFF}работу?", "Да", "Отмена");
   	}
	return 1;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(!IsAOwnableCar(GetVehicleID(vehicleid)))
	{
	    SPD(playerid, 0, 0, !"", !"{CD1717}Ошибка!{FFFFFF}\n\n\nТюнинговать можно только личный транспорт!\n\n\n","{CD1717}Принять{FFFFFF}","");
	    RemoveVehicleComponent(vehicleid,componentid);
        return 0;
	}
	else if(!vTemp[vehicleid][vTeam] && !vTemp[vehicleid][vJob] && !IsAArendCar(vehicleid))
	{
       // ModVehicle(vehicleid, componentid);
		GiveBizMoney(BIZ_CU,300);
	}
	else
	{
	    RemoveVehicleComponent(vehicleid, componentid);
	    SCM(playerid, -1, !"Этот транспорт нельзя тюнинговать");
	}
	return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(GetPlayerWeapon(playerid) != 43 && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_SPRUNK && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_BEER)
    {
        if(!IsACop(playerid) && !PI[playerid][pTir])
        {
            for(new i; i < MAX_DMZONE; i++)
            {
                if(IsPlayerInRangeOfPoint(playerid, 100.0, AntiDm[i][zX], AntiDm[i][zY], AntiDm[i][zZ]))
                {
                    if(AntiDm[i][zStatus] == 1)
                    {
                        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{B8F64D}Подсказка", !"\n\n{FFFFFF}В этом месте запрещено {FC7979}драться/стрелять{FFFFFF}.\nЕсли вы продолжите, то вы будете кикнуты!\n\n", !"Принять", !"");
						return 0;
                    }
                }
            }
        }
	}

    new Float:aX, Float:aY, Float:aZ;
    GetPlayerPos(damagedid, aX, aY, aZ);
    new Float:distance = GetPlayerDistanceFromPoint(damagedid, aX, aY, aZ) / 10.0;
    if(distance < 1.0) distance = 1.0;
    if(ProxDetectorS(20.0, damagedid, playerid, 1))
    {
        switch(weaponid)
        {
            case 3:
            {
                if(IsACop(playerid) || Isameria(playerid) || PI[playerid][pMember]==TEAM_BANK)
                {
                    if(GetPlayerWeapon(playerid) == 3)
                    {
                        if(!CuffedTime[damagedid])
                        {
                            if(Controllable[damagedid])
                            {
                                ClearAnims(damagedid);
                                CheckMiner(damagedid);
                                CheckPorter(damagedid);
                                CheckBreakCuff(damagedid);
                                CheckTheftCar(damagedid);
                                f(str_2,sizeof(str_2),"* %s оглушил %s дубинкой",cPN(playerid),cPN(damagedid));
                                ProxDetector(25,playerid, str_2,COLOR_PURPLE);
                                SCM(playerid, -1, !"[Информация] {FFFFFF}Нажмите {FF0000}\"N\"{FFFFFF} около человека чтобы сковать его");
                                TazerPlayer[damagedid] = playerid;
                                TazerPlayer[playerid] = damagedid;
                                new Float:X, Float:Y, Float:Z;
                                GetPlayerPos(damagedid, X, Y, Z), Z += 1.5;
                                switch(GetPlayerAnimationIndex(playerid))
                                {
                                    case 17: CuffedPlayer(damagedid, 15);
                                    case 18: CuffedPlayer(damagedid, 20);
                                    case 19: CuffedPlayer(damagedid, 25);
                                    default: CuffedPlayer(damagedid, 30);
                                }
                            }
                        }
                    }
                    return 1;
                }
            }
            case 23:
            {
                if(IsACop(playerid) || PI[playerid][pMember]==TEAM_MERIALS)
                {
                    if(GetPlayerWeapon(playerid) == 23)
                    {
                        if(!CuffedTime[damagedid])
                        {
                            if(!Controllable{damagedid})
                            {
                                ClearAnims(damagedid);
                                CheckMiner(damagedid);
                                CheckPorter(damagedid);
                                CheckBreakCuff(damagedid);
                                CheckTheftCar(damagedid);
                                f(str_2,sizeof(str_2),"* %s оглушил %s выстрелом с тазера",cPN(playerid),cPN(damagedid));
                                ProxDetector(25,playerid, str_2,COLOR_PURPLE);
                                SCM(playerid, -1, !"[Информация] {FFFFFF}Нажмите {FF0000}\"N\"{FFFFFF} около человека чтобы сковать его");
                                TazerPlayer[damagedid] = playerid;
                                TazerPlayer[playerid] = damagedid;
                                new Float:X, Float:Y, Float:Z;
                                GetPlayerPos(damagedid, X, Y, Z), Z += 1.5;
                                switch(GetPlayerAnimationIndex(playerid))
                                {
                                    case 17: CuffedPlayer(damagedid, 15);
                                    case 18: CuffedPlayer(damagedid, 20);
                                    case 19: CuffedPlayer(damagedid, 25);
                                    default: CuffedPlayer(damagedid, 30);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	if(!IsPlayerLogged{playerid}) return 0;
	new Float:Health;
	if(issuerid != INVALID_PLAYER_ID)
	{
		new aslot = PI[issuerid][pInvItemAcsEnchant][1];
		new aslot2 = PI[issuerid][pInvItemAcsEnchant][4];
		if(aslot >= 4)
		{
			new Float:health_enchant;
			health_enchant = amount / EnchantAcs[GetSlotEnchant(2, aslot)][e_number];
			amount = amount - health_enchant;
			GetPlayerHealth(playerid, Health);
			J_SetPlayerHealth(playerid, Health+health_enchant);
		}
		if(aslot2 >= 4)
		{
			new Float:health_enchant;
			health_enchant = amount / EnchantAcs[GetSlotEnchant(5, aslot2)][e_number];
			amount = amount - health_enchant;
			GetPlayerHealth(playerid, Health);
			J_SetPlayerHealth(playerid, Health+health_enchant);
		}
		new aslot3 = PI[issuerid][pInvItemAcsEnchant][2];
		new aslot4 = PI[issuerid][pInvItemAcsEnchant][3];
		new aslot6 = PI[issuerid][pInvItemAcsEnchant][5];
		if(aslot3 >= 4)
		{
			new Float:health_enchant;
			health_enchant = amount / EnchantAcs[GetSlotEnchant(3, aslot3)][e_number];
			amount = amount + health_enchant;
			GetPlayerHealth(playerid, Health);
			J_SetPlayerHealth(playerid, Health-health_enchant);
		}
		if(aslot4 >= 4)
		{
			new Float:health_enchant;
			health_enchant = amount / EnchantAcs[GetSlotEnchant(4, aslot4)][e_number];
			amount = amount + health_enchant;
			GetPlayerHealth(playerid, Health);
			J_SetPlayerHealth(playerid, Health-health_enchant);
		}
		if(aslot6 >= 4)
		{
			new random_krik = random(100);
			if(random_krik <= EnchantAcs[GetSlotEnchant(6, aslot6)][e_number])
			{
				GetPlayerHealth(playerid, Health);
				amount = amount + 11;
				J_SetPlayerHealth(playerid, Health-11);
			}
		}
	}
	if(amount > 0)
 	{
 		GetPlayerHealth(playerid, Health);
		if(issuerid != INVALID_PLAYER_ID)
		{
			if(GetPlayerState(issuerid) != 1 && RCVehicle[issuerid])
		    {
		        new carid = GetPlayerVehicleID(issuerid);
		        switch(GetVehicleModel(carid))
		        {
		        	case Item_Radio_Vehicle:
		        	{
		        		J_SetPlayerHealth(playerid, Health);
		        		J_SetPlayerPos(issuerid, rcX[issuerid], rcY[issuerid], rcZ[issuerid]);
			        	SetCameraBehindPlayer(issuerid);
			        	PI[issuerid][pRCTime] = gettime() + 18000;
			        	UpdatePlayerDataInt(issuerid, "RCTime", PI[issuerid][pRCTime]);
			        	return 0;
		        	}
		        }
		    }
		}
 		if(UsingShield[playerid])
		{
	        if(PI[playerid][pShield] >= 10.0)
	        {
	            Health += 10;
				if(Health > 100) Health = 100;
			    J_SetPlayerHealth(playerid,Health);
				PI[playerid][pShield] -= 10.0;
			}
			else
			{
			    RemovePlayerAttachedObject(playerid, 7);
				UsingShield[playerid] = false;
				PI[playerid][pShield] = 0.0;
				ClearAnims(playerid);
			}
	    }
		SetPlayerSkills(issuerid);
	}
	SetPlayerChatBubblef(playerid, COLOR_RED, 100.0, 2000, "- %.02f хп", amount);
	return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(newinteriorid > 0 && oldinteriorid == 0)
	{
		SetPlayerWeather(playerid, 2);
		DestroyPlayerMapDraws(playerid);
	}
	else if(newinteriorid == 0 && oldinteriorid > 0)
	{
		SetPlayerWeather(playerid, Weather);
		CreatePlayerMapDraws(playerid);
	}
	return 1;
}
#define SLOW_KEY_ID  40
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	/*-------- [ Система контейнеров ] --------*/
	if(newkeys == KEY_WALK)
	{
		for(new i ; i < sizeof(ContainerInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]))
			{
				ContainerDialog(playerid, i);
				break;
			}
		}
	}
	if(newkeys == KEY_WALK)
	{
		for(new i; i < sizeof(ContainerInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1]-2.2787, ContainerInfo[i][ContPos][2]+1.0584))
			{
				if(!ContainerTakeOpen{playerid}) ContainerOpenTake(playerid, i);
				break;
			}
		}
	}
	/*-------- ==================== --------*/
	if(newkeys == 1024)
    {
        if(IsPlayerInRangeOfPoint(playerid, 4.0, -2682.5259,795.9078,1501.0259))
        {
            new day,num;
            getdate(_, _, day);
            if(PI[playerid][pLarec] == day) return SCM(playerid, COLOR_RED, "[Ошибка]{ffffff} Вы уже сегодня получали ""Ларец Олигарха"" приходите завтра.");
		    for(new i; i < OWNABLEHOUSES; i++)
		    {
		        if(GetString(HouseInfo[i][hOwner], PN(playerid)))
		        {
					num++;
		        }
		    }
			if(num < 4) return SCM(playerid, COLOR_RED, "[Ошибка]{ffffff} Вы не владеете 4-я домами.");
			PI[playerid][pLarec] = day;
			InvAdd(playerid, Item_Casket, 2);
			UpdatePlayerDataInt(playerid, "Larec", day);
		    SPD(playerid, 0, 0, "Информация","{ffffff}Вы получили {ffff00}""2 Ларца Олигарха"".\n{c0c0c0}Приходите завтра и забирайте ещё два ""Ларца Олигарха"" совершенно бесплатно","Закрыть","");
        }
        if(IsPlayerInRangeOfPoint(playerid, 4.0, 2523.2915,-1458.0526,23.9503))SPD(playerid, 2333, 0, "Тёмная Удача","{ffffff}Организация под названием {FFFF00}""Тёмная Удача""{FFFFFF} предлагает каждому члену банды испытать удачу.\nДля этого необходимо заказать посылку за {FFFF00}1 BTC{FFFFFF}.\nСразу после заказа организация сделает для вас закладку в каком-нибудь укромном месте с неизвестным для вас призом.\nЧто будет в закладке - вы узнаете только после того, как найдёте и откроете закладку.\nЗаказывать закладки могут только члены банд;\nВсего за час может быть заказано {FFFF00}50 закладок{FFFFFF}, больше закладок в организации просто не успеют сделать.\n\n{c0c0c0}Список того, что может быть в закладке:\n- Наркотики (50 шт.)\n- Материалы (300шт.)\n- Бронежилеты (20 шт.)\n- Видеокарта (1 лвл)\n- Смазка для видеокарты (2 шт.)\n- Охладающая жидкость для видеокарты (2 шт.)\n- Респекты (1-5 ед.)\n- Деньги (20-200 тыс.)\n- Бронзовая рулетка (1 шт.)\n- Серебреная рулетка (1 шт.)\n- Сертификат на авто (мясовозка)\n\n{ffffff}Хотите заказать закладку? (стоимость: 1 BTC)","Заказать","Закрыть");
	}
	if(newkeys == 1024)
	{
		for(new i; i < sizeof(BlackLuckInfo); i++)
        {
	        if(IsPlayerInRangeOfPoint(playerid, 4.0, BlackLuckInfo[i][BlackLuckX],BlackLuckInfo[i][BlackLuckY],BlackLuckInfo[i][BlackLuckZ]))
	        {
	            if(!IsAtGang(playerid)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
	            if(BlackLuckInfo[i][BlackLuckStatus])
	            {
	                GetBlackLuckPrize(playerid);
					BlackLuckInfo[i][BlackLuckStatus] = false;
                    BlackLuckIDSPlayer{playerid} = false;
                    DestroyDynamicObject(BlackLuckInfo[i][BlackLuckObject]);
                    UpdateDynamic3DTextLabelText(BlackLuckInfo[i][BlackLuck3DText], -1, "");
				}
	     		else SCM(playerid, -1, "False");
	        }
        }
	}
	if(newkeys == KEY_WALK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.3, 1541.3546, 1644.3098, 10.8203))
		{
			if(!EnchantStart) return SCM(playerid, COLOR_RED, "Временно отключено администрацией!");
			ShowPlayerDialog(playerid, 9619, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}Мастерская | Список услуг", "Название услуги\tСтоимость\n{FFFFFF}Улучшение предмета	$9500\nРемонт одежды\t$9500\n", "Выбрать", "Отмена");
		}
	}
	if(PRESSED(KEY_WALK))
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.3, 1777.3013,-1890.8912,13.3873))
		{
			if(AntiFloodPickupLic[playerid] > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Ошибка получать велосипед и пакет документов можно раз в 10 минут!");
			else
			{
				GiveLiccenses(playerid, 30);
				PI[playerid][pSex] = 1;
                UpdatePlayerDataInt(playerid, "Sex", PI[playerid][pSex]);
				new city = GetPlayerVirtualWorld(playerid) + 1;
				if(city < 1) city = 1;
				else if(city > 3) city = 3;
		        PassInfo[playerid][psDateBirth][0] = 1;
		        PassInfo[playerid][psDateBirth][1] = 5;
		        PassInfo[playerid][psDateBirth][2] = 1999;
		        PassInfo[playerid][psDate][0] = 1;
		        PassInfo[playerid][psDate][1] = 5;
		        PassInfo[playerid][psDate][2] = 1999;
				PassInfo[playerid][psNumber] = 100000 + random(900000);
				PassInfo[playerid][psSeria] = 1000 + random(9000);
				OnRegPass(playerid);
				if(GetPlayerState(playerid) != 1) return 0;
			    new Float:X, Float:Y, Float:Z, Float:A;
				GetPlayerPos(playerid, X, Y, Z);
				GetPlayerFacingAngle(playerid, A);
				new carid = PI[playerid][plveh];
				if(carid != -1) DestroyVehicle(carid);
			    PI[playerid][plveh] = J_AddStaticVehicleEx(510, X, Y, Z, A, 1, 1);
			    carid = PI[playerid][plveh];
			    vTemp[carid][Fuel] = 100.00;
				TwinTurboInstall(carid);
			    vTemp[carid][vAntiRepair] = 2;
				VehicleHealth[carid] = 1000;
				SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
				LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			 	PutPlayerInVehicle(playerid, carid, 0);
				AntiFloodPickupLic[playerid] = gettime()+600;
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.2, -505.0940, 2597.6277, 53.5557))
		{
			new second, minute, hour, minute_first;
			minute_first = scSpawnTimer;
			hour = floatround(minute_first / 3600);
			minute = floatround(minute_first / 60) % 60;
			second = minute_first % 60;
			if(hour == 0) f(str_2, sizeof(str_2), "%02i:%02i", minute, second);
			else f(str_2, sizeof(str_2),"%.0i:%02i:%02i", hour, minute, second);
			f(str_1, sizeof(str_1), "{ffffff}В данном автосалоне вы можете купить авто люкс класса, такие как:\n{cccccc}- Mercedes GT63s AMG\n- Mercedes G63 AMG\n- Audi RS6\n- BMW X5\n- Chevrolet Corvette\n- Chevrolet Cruze\n- Lexus LX\n- Porsche 911\n- Porsche Cayenne\n- Mercedes S63 AMG\n- Volkswagen Touareg\n- Lamborghini Urus\n- Audi Q8\n- Dodge Challenger\n- Acura NSX\n- Volvo V60\n- Range Rover evoque\n- Honda Civic Type-R\n- Lexus Sport-S\n- Ford Mustang\n- Volvo XC90\n- Jaguar F-pace\n- Kia Optima\n\n{cccccc}Авто доставляется из-за рубежа каждые 3 часа.\n\n{ffffff}На данный момент мы ожиданием поставку автомобиля {FA5858}%s\n{ffffff}До прибытия осталось: {FA5858}%s\n{ffffff}Цена автомобиля: {FA5858}$%i\n\n", GetNameCar(SellInfo[scSpawnTime][scModel]), str_2, GetCarPrice(SellInfo[scSpawnTime][scModel]));
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "{BFBBBA}Автосалон Luxe-класса", str_1, "Закрыть", "");
		}
	}
    if(newkeys & 16)
    {
    	if(InvTimer[playerid])
    	{
			TogglePlayerControllable(playerid, true);
			SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
			KillTimer(InvTimer[playerid]);
			InvTimer[playerid] = 0;
			SaveChangeInv(playerid);
    	}
		if(GetPlayerState(playerid) != 1 && RCVehicle[playerid])
        {
            new carid = GetPlayerVehicleID(playerid);
            switch(GetVehicleModel(carid))
            {
            	case Item_Radio_Vehicle:
            	{
            		J_SetPlayerPos(playerid, rcX[playerid], rcY[playerid], rcZ[playerid]);
		        	SetCameraBehindPlayer(playerid);
            	}
            }
        }
    }
    if(newkeys == SLOW_KEY_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new carid = GetPlayerVehicleID(playerid);
		new number = GetVehicleID(carid);
		if(IsAOwnableCar(number))
		{
			if(CarInfo[number][cSlotItem][6] == Item_Launch)
			{	
			    if(!IsABike(carid) && !IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid))
			    {
				    if(vTemp[carid][vEngine])
				    {
				        if(GetPVarInt(playerid, !"antifloodlaunch")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Подождите немного..."); SetTimerEx("AntiFloodLaunch", 200, 0, "d", playerid);
						SetPVarInt(playerid, !"antifloodlaunch", 1);
					    for(new i; i < 9; i++){
						    TextDrawShowForPlayer(playerid, launch[i]);
						}
					    launchsize[playerid][0] = CreatePlayerTextDraw(playerid, 275.100006, 428.303589, "LD_SPAC:white");
						PlayerTextDrawLetterSize(playerid, launchsize[playerid][0], 0.000000, 0.000000);
						PlayerTextDrawTextSize(playerid, launchsize[playerid][0], LauncherSize[playerid], 1.259899);
						PlayerTextDrawAlignment(playerid, launchsize[playerid][0], 1);
						PlayerTextDrawColor(playerid, launchsize[playerid][0], 0xBDBFBDFF);
						PlayerTextDrawUseBox(playerid, launchsize[playerid][0], 0);
						PlayerTextDrawBoxColor(playerid, launchsize[playerid][0], 0x80808080);
						PlayerTextDrawSetShadow(playerid, launchsize[playerid][0], 0);
						PlayerTextDrawSetOutline(playerid, launchsize[playerid][0], 0);
						PlayerTextDrawBackgroundColor(playerid, launchsize[playerid][0], 0x000000FF);
						PlayerTextDrawFont(playerid, launchsize[playerid][0], 4);
						PlayerTextDrawSetProportional(playerid, launchsize[playerid][0], 0);
						PlayerTextDrawSetSelectable(playerid, launchsize[playerid][0], 0);
						skorostb[playerid] = 1;
				 		launchtimer[playerid] = SetTimerEx("@__LaunchGO", 250, 1, "d", playerid);
					}
				}
			}	
		}	
 	}
 	if(oldkeys == SLOW_KEY_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new carid = GetPlayerVehicleID(playerid);
		new number = GetVehicleID(carid);
		if(IsAOwnableCar(number))
		{	
			if(CarInfo[number][cSlotItem][6] == Item_Launch)
			{
			    if(!IsABike(carid) && !IsAVelik(carid) && !IsAPlane(carid) && !IsARcCar(carid))
			    {
				    if(vTemp[carid][vEngine])
				    {
					    if(launchtimer[playerid] !=-1){
					    	KillTimer(launchtimer[playerid]);
					    	launchtimer[playerid] =-1;
						}
						for(new i; i < 9; i++){
					    	TextDrawHideForPlayer(playerid, launch[i]);
						}
					    DestroyPlayerTD(playerid, launchsize[playerid][0]);
				        if(skorostb[playerid] == 1) PlayerPlaySound(playerid, 28000, 0.0, 0.0, 0.0), SetVehicleSpeed(carid,GetPlayerVehicleSpeedZ(playerid)+LauncherSize2[playerid]/4);
				        LauncherSize[playerid] = 0.000000;
						LauncherSize2[playerid] = 0;
				        skorostb[playerid] = 0;
					}
				}
			}	
		}	
	}
	if(PRESSED(32) && InvTimer[playerid]) SetPVarInt(playerid, "SpeedInv", 1);
	if(RELEASED(32) && InvTimer[playerid]) SetPVarInt(playerid, "SpeedInv", 0);

	if(PRESSED(KEY_WALK) && InvTimer[playerid]) SetPVarInt(playerid, "SpeedInv", 2);
	if(RELEASED(KEY_WALK) && InvTimer[playerid]) SetPVarInt(playerid, "SpeedInv", 0);

    if(PRESSED(KEY_YES)) ShowInv(playerid);
	if(PRESSED(KEY_NO) && !IsPlayerInAnyVehicle(playerid))
	{
	    for(new i; i != MAX_AUTO_BAZAR; i++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 2.0, autoBazarInfo[i][autoBazar2PosX], autoBazarInfo[i][autoBazar2PosY], autoBazarInfo[i][autoBazar2PosZ]))
	        {
				if(playerid == autoBazarInfo[i][autoBazarplayerid])
	                return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете купить свой же транспорт!");

	            if(autoBazarInfo[i][autoBazarplayerid] == INVALID_PLAYER_ID)
	                return 0;

	            pTemp[playerid][pSellCar] = i;
	            static nomeraa[64];
	            nomeraa[0] = EOS;
	            new number = autoBazarInfo[i][autoBazarCarID_Ownable];
				if(!GetString(CarInfo[number][cNumber], ""NAME" ST")) f(nomeraa, sizeof(nomeraa), "{A63737}%s{FFFFFF}", CarInfo[number][cNumber]);
				else nomeraa = "{991717}Без номеров [X2 налог]{FFFFFF}";
				if(IsAPlane(autoBazarInfo[i][autoBazarCarID])) f(str_2,sizeof(str_2),"{FFFFFF}Транспорт: {73B461}%s[%i] {FFFFFF}Комплектация: %s\n{FFFFFF}Владелец: {73B461}%s\n{FFFFFF}Посредник: {73B461}%s\n{FFFFFF}Налог: {73B461}%i {FFFFFF}/ 40 000\n{FFFFFF}Штраф: {73B461}%i {FFFFFF}/ 60 000\n\nНомер автомобиля: %s\n\n{73B461}Стоимость транспорта составляет: $%i",GetNameCar(GetVehicleModelEx(autoBazarInfo[i][autoBazarCarID])),autoBazarInfo[i][autoBazarCarID],(CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток"),PN(autoBazarInfo[i][autoBazarplayerid]), CarInfo[number][cKeyer], CarInfo[number][cShtrafer], CarInfo[number][cShtraf], nomeraa, autoBazarInfo[i][autoBazarCost]);
				else f(str_2,sizeof(str_2),"{FFFFFF}Транспорт: {73B461}%s[%i] {FFFFFF}Комплектация: %s\n{FFFFFF}Владелец: {73B461}%s\n{FFFFFF}Посредник: {73B461}%s\n{FFFFFF}Пробег: {73B461}%.0f км.\n{FFFFFF}Налог: {73B461}%i {FFFFFF}/ 40 000\n{FFFFFF}Штраф: {73B461}%i {FFFFFF}/ 60 000\n\nНомер автомобиля: %s\n\n{73B461}Стоимость транспорта составляет: $%i",GetNameCar(GetVehicleModelEx(autoBazarInfo[i][autoBazarCarID])),autoBazarInfo[i][autoBazarCarID],(CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток"),PN(autoBazarInfo[i][autoBazarplayerid]), CarInfo[number][cKeyer], CarInfo[number][cMilage], CarInfo[number][cShtrafer], CarInfo[number][cShtraf], nomeraa, autoBazarInfo[i][autoBazarCost]);

				SPD(playerid, 2221, DIALOG_STYLE_MSGBOX, !"Технический паспорт транспорта", str_2, !"Купить", !"Отмена");
	        }
	    }
	}
	if (newkeys == KEY_SPRINT && !IsPlayerInAnyVehicle(playerid))
	{
		for(new i; i != MAX_COTTON_OBJECT; i++)
        {
			if(IsPlayerInRangeOfPoint(playerid, 3.0, CottonInfo[i][cottonPosX], CottonInfo[i][cottonPosY], CottonInfo[i][cottonPosZ]))
            {
				if(!OBJECT_RAKE[playerid]) return SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть урожай, нужно купить у Эмилио инструмент (/gps - Разное - Ферма)");
				if(!CottonInfo[i][cottonStatus]) continue;
	            CottonInfo[i][cottonScore] --;

				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				InvAdd(playerid, Item_Cotton, 1, 0);
				aml(101, playerid, "", "собрал урожай", Item_Cotton, 1);
				GameTextForPlayer(playerid, "Cotton + 1", 0, 1);
				f(str_2, sizeof(str_2), "Хлопок (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", CottonInfo[i][cottonScore]);
	            UpdateDynamic3DTextLabelText(CottonInfo[i][cottonLabel], -1, str_2);

	            if(CottonInfo[i][cottonScore] <= 0)
	            {
					CottonInfo[i][cottonStatus] = false;

		            CottonInfo[i][cottonSecund] = 180;
		            DestroyDynamic3DTextLabel(CottonInfo[i][cottonLabel]);
		            DestroyDynamicObject(CottonInfo[i][cottonObject]);
		            CottonInfo[i][cottonObject] = 0;
		            SetTimerEx("@__CottonProgressGrow", 65000, false, "i", i);
				}
				break;
            }
		}
		for(new i; i != MAX_LINEN_OBJECT; i++)
        {
			if(IsPlayerInRangeOfPoint(playerid, 3.0, LinenInfo[i][linenPosX], LinenInfo[i][linenPosY], LinenInfo[i][linenPosZ]))
            {
				if(!OBJECT_RAKE[playerid]) return SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть урожай, нужно купить у Эмилио инструмент (/gps - Разное - Ферма)");
				if(!LinenInfo[i][linenStatus]) return 1;
	            LinenInfo[i][linenScore] --;

				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				InvAdd(playerid, Item_Linen, 1, 0);
				aml(101, playerid, "", "собрал урожай", Item_Linen, 1);
				GameTextForPlayer(playerid, "Linen + 1", 0, 1);
				f(str_2, sizeof(str_2), "Лён (%i из 10)\n{73B461}Для сбора урожая\n{FFFFFF}нажмите 'ПРОБЕЛ'", LinenInfo[i][linenScore]);
	            UpdateDynamic3DTextLabelText(LinenInfo[i][linenLabel], -1, str_2);

	            if(LinenInfo[i][linenScore] <= 0)
	            {
					LinenInfo[i][linenStatus] = false;

		            LinenInfo[i][linenSecund] = 180;
		            DestroyDynamic3DTextLabel(LinenInfo[i][linenLabel]);
		            DestroyDynamicObject(LinenInfo[i][linenObject]);
		            LinenInfo[i][linenObject] = 0;
		            SetTimerEx("@__LinenProgressGrow", 65000, false, "i", i);
				}
				break;
            }
		}
		for(new i; i != MAX_MINE_OBJECT; i++)
        {
			if(IsPlayerInRangeOfPoint(playerid, 1.2, MineInfo[i][minePosX], MineInfo[i][minePosY], MineInfo[i][minePosZ]))
            {
				if(!OBJECT_SLEGAN[playerid])
					return SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть полезное ископаемое, нужно купить у Лари инструмент (/gps - Разное - Шахта)");

				if(MineInfo[i][mineStatus] == false)
					continue;

				ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				if(MineInfo[i][minePoroda] == 1)
				{
					InvAdd(playerid, Item_Stone, 1, 0);
					aml(101, playerid, "", "собрал ископаемое", Item_Stone, 1);
					GameTextForPlayer(playerid, !"Stone + 1", 0, 1);
				}
				else if(MineInfo[i][minePoroda] == 2)
				{
					InvAdd(playerid, Item_Metal, 1, 0);
					aml(101, playerid, "", "собрал ископаемое", Item_Metal, 1);
					GameTextForPlayer(playerid, !"Metal + 1", 0, 1);
				}
				else if(MineInfo[i][minePoroda] == 3)
				{
					InvAdd(playerid, Item_Bronze, 1, 0);
					aml(101, playerid, "", "собрал ископаемое", Item_Bronze, 1);
					GameTextForPlayer(playerid, !"Bronze + 1", 0, 1);
				}
				else if(MineInfo[i][minePoroda] == 4)
				{
					InvAdd(playerid, Item_Silver, 1, 0);
					aml(101, playerid, "", "собрал ископаемое", Item_Silver, 1);
					GameTextForPlayer(playerid, !"Silver + 1", 0, 1);
				}
				else if(MineInfo[i][minePoroda] == 5)
				{
					InvAdd(playerid, Item_Gold, 1, 0);
					aml(101, playerid, "", "собрал ископаемое", Item_Gold, 1);
					GameTextForPlayer(playerid, !"Gold + 1", 0, 1);
				}
				MineInfo[i][mineStatus] = false;

		        DestroyDynamic3DTextLabel(MineInfo[i][mineLabel]);
		        DestroyDynamicObject(MineInfo[i][mineObject]);
		        PlayerPlaySound(playerid, 36400, 0.0, 0.0, 0.0);
		        MineInfo[i][mineTimer] = SetTimerEx("@__MineProgressGrow", 180000, false, "i", i);

		        return 1;
            }
		}
	}
    if(PI[playerid][pBeg][1])
    {
        ApplyAnimation(playerid, !"BEACH", !"ParkSit_W_loop", 4.1, 0, 1, 1, 1, 1);
    }
    if(newkeys == KEY_CROUCH) 
    {
    	if(IsAtGasStation(playerid)) callcmd::fill(playerid);
    	else callcmd::opengate(playerid);
    }
    if(PRESSED(KEY_CTRL_BACK)) callcmd::opengate(playerid);
 	if(PRESSED(KEY_WALK) && !IsPlayerInAnyVehicle(playerid))
    {
		GarageMovement(playerid);
		Parking(playerid);
	}
	if(newkeys & 2 && IsPlayerInAnyVehicle(playerid))
    {
        GarageMovement(playerid);
        Parking(playerid);
	}
	if(newkeys == KEY_CROUCH)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0, 217.2211, -228.2586, 1.7786))
	    {
	        if(IsPlayerInHisVehicle(playerid))
	        {
	        	if(!nomeraproverka{playerid})
	        	{
	        	    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы еще не получили разрешение на установку номеров!");
	        	    return SCM(playerid, -1, !"получить разрешение можно в полицейском участке ЛС!");
	        	}
	        	if(GetMoney(playerid) < 5000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
	        	new carid = GetPlayerVehicleID(playerid);
	        	new engine_status = GetEngineStatus(carid);
	        	new number = GetVehicleID(carid);
	        	SetString(CarInfo[number][cNumber], nomera[playerid]);
				new Float:X, Float:Y, Float:Z, Float:A;
				GetVehiclePos(carid, X, Y, Z);
				GetVehicleZAngle(carid, A);
				SetVehicleToRespawn(carid);
				SetEngineStatus(carid, engine_status, -1);
				SetVehiclePos(carid, X, Y, Z);
				SetVehicleZAngle(carid, A);
				PutPlayerInVehicle(playerid, carid, 0);
				GiveMoney(playerid, -5000);
				aml(52, playerid, "", "установка номеров", 5000);
				nomeraproverka{playerid} = false;
				SaveOwnableCar(number);
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находиться в личном транспорте!");
	    }
	    if(IsAArendCar(GetPlayerVehicleID(playerid)))
	    {
			if(ArendInfo[GetArendCarID(GetPlayerVehicleID(playerid))][aID] == 578)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 5.0, -1733.3938, 187.7363, 3.5547))
			    {
				    if(Proviziya{playerid})
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже загрузили машину!");

				    Proviziya{playerid} = true;
				    EnableGPSForPlayer(playerid, 1830.3701, 416.7932, 20.1436);
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно загрузили машину провизией.\nОтправляйтесь к {FABA2F}складу{FFFFFF} семьи для разгрузки!\nПункт назначения {FABA2F}отмечен{FFFFFF} на миникарте.\n\n", !"Принять", !"");
				}
			    else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1830.3701, 416.7932, 20.1436))
			    {
				    if(!Proviziya{playerid})
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваша машина не загружена!");

				    Proviziya{playerid} = false;
					QuestProgress[playerid][11] ++;
					if(QuestProgress[playerid][11] >= 3) {
 				        NextStapQI(playerid, 11);
				        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно разгрузили нужное количество провизии для вашей семьи.\nВозвращайтесь к {FABA2F}Нейтону {FFFFFF}чтобы получить награду\n", !"Принять", !"");
					    return 1;
					}
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно разгрузили машину с провизией.\nНа миникарте {FABA2F}отмечено {FFFFFF}место следующей загрузки!\n\n", !"Принять", !"");
					EnableGPSForPlayer(playerid, -1733.3938, 187.7363, 3.5547);
				}
			}
		}
		for(new i; i != MAX_AUTO_BAZAR; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ]))
			{
				if(autoBazarInfo[i][autoBazarType] == 1 && (!IsACar(GetPlayerVehicleID(playerid)) && !IsABike(GetPlayerVehicleID(playerid)) && !IsAVelik(GetPlayerVehicleID(playerid)))) return 0;
				else if(autoBazarInfo[i][autoBazarType] == 2 && !IsAPlane(GetPlayerVehicleID(playerid))) return 0;
			    if(IsPlayerInHisVehicle(playerid) && autoBazarInfo[i][autoBazarplayerid] == INVALID_PLAYER_ID)
			    {
			    	//if(pTemp[playerid][pSellCar] != -1) return 0;
			        pTemp[playerid][pSellCar] = i;
			    	SPD(playerid, 2218, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите желаемую цену за транспорт!", !"Выбрать", !"Отмена");
			        return 1;
			    }
			    else if(IsPlayerInHisVehicle(playerid) && autoBazarInfo[i][autoBazarplayerid] == playerid)
			    {
			        SPD(playerid, 2220, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы хотите снять транспорт с продажи?", !"Да", !"Отмена");
			        return 1;
			    }
			}
		}
	}
	if (PRESSED(KEY_WALK) && bumboxobject[playerid])
	{
     		if(IsPlayerInRangeOfPoint(playerid, 3.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])){
			showboomtdmenu(playerid);
	    }
	}
    if(GetPlayerVirtualWorld(playerid)==1228)return 1;
	if(newkeys && KEY_SECONDARY_ATTACK)
	{
		if(SERIU[playerid] != INVALID_PLAYER_ID)
		{
		    if(onkey[playerid]>0)return 0;
			SelectTextDraw(playerid, 0xFF9933FF);
			onkey[playerid]=1;
			return SpecPlayer(playerid,SERIU[playerid]);
		}
	}
 	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		if(animan{playerid})
		{
		    ClearAnims(playerid);
		    animan{playerid} = false;
		    TextDrawHideForPlayer(playerid, StopAnimation);
		}
		if(selfi{playerid})
		{
	        TogglePlayerControllable(playerid, 1);
	        SetCameraBehindPlayer(playerid);
	        RemovePlayerAttachedObject(playerid, 0);
	        ApplyAnimation(playerid, !"PED", !"ATM", 4.1, 0, 1, 1, 0, 1, 1);
		    selfi{playerid} = false;
		    TextDrawHideForPlayer(playerid, StopAnimation);
		}
		if(GetPlayerState(playerid) != 1 && RCVehicle[playerid])
        {
            new carid = GetPlayerVehicleID(playerid);
            switch(GetVehicleModel(carid))
            {
            	case Item_Radio_Vehicle:
            	{
            		J_SetPlayerPos(playerid, rcX[playerid], rcY[playerid], rcZ[playerid]);
		        	SetCameraBehindPlayer(playerid);
            	}
            }
        }
	}
	if(PRESSED(KEY_SPRINT)) pEngine{playerid} = 1;
    else if(RELEASED(KEY_SPRINT)) pEngine{playerid} = 0;
    if(PRESSED(KEY_JUMP) && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && TwinTurbo[GetPlayerVehicleID(playerid)][Engine] && TwinTurbo[GetPlayerVehicleID(playerid)][cStatus] && GetPlayerVehicleSpeed(playerid) >= 50) SetVehicleSpeed(GetPlayerVehicleID(playerid),GetPlayerVehicleSpeedZ(playerid) - 80);
    new Float:XYZ[3];
    if(newkeys & KEY_JUMP)
    {
        if(PI[playerid][pJob] == 17)
		{
		    if(InJob[playerid] == 3)
		    {
				TogglePlayerDynamicCP(playerid, MinerDownCP, false);
				SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы уронили сено!");
				InJob[playerid] = 1;
			    RemovePlayerAttachedObject(playerid, 7);
				for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], true);
			}
		}
		if(PI[playerid][pJob] == JOB_PORTER)
		{
		    if(InJob[playerid] == 3)
		    {
				TogglePlayerDynamicCP(playerid, PorterDownCP, false);
				SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы уронили груз!");
				InJob[playerid] = 1;
			    RemovePlayerAttachedObject(playerid, 7);
			    ApplyAnimation(playerid, "PED", "GETUP_FRONT", 4.0, 0, 1, 1, 0, 0, 1);
			}
		}
		if(CreteBomb[playerid]>200) IsDropBomb(playerid);
	}
	if(newkeys & KEY_JUMP || newkeys & KEY_SPRINT )
    {
		if(CreateMats[playerid]==4 || CreateMats[playerid]==3)
		{
		    Controllable{playerid} = true;
		    RemovePlayerAttachedObject(playerid, 7);
		    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы уронили материалы!");
		    CreateMats[playerid] = 1;
		    TogglePlayerDynamicCP(playerid, FerumEndCP, false);
		    ClearAnims(playerid);
		    NoEnterPickup[playerid] =7;
			ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,1,0);
		}
	}
	if((oldkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK))
	{
		if(IsPlayerInRangeOfPoint(playerid, 6.0,773.770,-62.312,1000.7184) || IsPlayerInRangeOfPoint(playerid, 6.0,268.3984,1741.8547,649.3459)|| IsPlayerInRangeOfPoint(playerid, 6.0,697.4471,-1668.7750,871.3057)|| IsPlayerInRangeOfPoint(playerid, 6.0,640.5844,-1188.0693,1001.3860))
		{
		    if(PI[playerid][pONPhoneTalk]) return 0;
			if(pSportZal[playerid] != 1) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Вы не переоделись!");
			switch(random(3))
			{
				case 1:
				{
					switch(random(3))
					{
						case 0: PlayerPlaySound(playerid, 17805, 0.0, 0.0, 0.0);
						case 1: PlayerPlaySound(playerid, 17806, 0.0, 0.0, 0.0);
					}
					new iskill;
					if(PI[playerid][pSkillLevel]<=5000) iskill = 5000;
					if(PI[playerid][pSkillLevel]<=10000 && PI[playerid][pSkillLevel]>5000) iskill = 10000;
					if(PI[playerid][pSkillLevel]<=20000 && PI[playerid][pSkillLevel]>10000) iskill = 20000;
					if(PI[playerid][pSkillLevel]<=30000 && PI[playerid][pSkillLevel]>20000) iskill = 30000;
					PI[playerid][pSkillLevel]++;
					UpdatePlayerDataInt(playerid, "SkillLevel", PI[playerid][pSkillLevel]);
					f(str_2,16,"%i/%i",PI[playerid][pSkillLevel],iskill);
					GameTextForPlayer(playerid, str_2,500,6);
					if(PI[playerid][pSkillLevel] == 5000)
					{
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выучили новый стиль боя 5000 ударов, используйте /fightstyle");
						PI[playerid][pBoxing] = 1;
						UpdatePlayerDataInt(playerid, "BoxingStyle", 1);
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Осталось открыть 3 стиля боя, требуется еще 5000 ударов");
					}
					if(PI[playerid][pSkillLevel] == 10000)
					{
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выучили новый стиль боя 10000 ударов, используйте /fightstyle");
						PI[playerid][pKungfu] = 1;
						UpdatePlayerDataInt(playerid, "KungfuStyle", 1);
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Осталось открыть 2 стиля боя, требуется еще 10000 ударов");
					}
					if(PI[playerid][pSkillLevel] == 20000)
					{
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выучили новый стиль боя 20000 ударов , используйте /fightstyle");
						PI[playerid][pKneehead] = 1;
						UpdatePlayerDataInt(playerid, "KneeheadStyle", 1);
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Осталось открыть 1 стиль боя, требуется еще 10000 ударов");
					}
					if(PI[playerid][pSkillLevel] == 30000)
					{
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выучили новый стиль боя 30000 ударов , используйте /fightstyle");
						PI[playerid][pElbow] = 1;
						UpdatePlayerDataInt(playerid, "ElbowStyle", 1);
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выучили все стили боя! Поздравляем!");
					}

					if(QuestProgress[playerid][10]<99 && AcceptQuest[playerid][10]!=0)QuestProgress[playerid][10]++;

				    if(QuestProgress[playerid][10]==99 && AcceptQuest[playerid][10]!=0)
				    {
				        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно выполнили квест по спортзалу.\nВозращайтесь обратно, чтобы получить награду за выполненое задание.\n\n{82A3DF}Не забудьте переодеться!", !"Принять", !"");
				        NextStapQI(playerid,10);
				    }
				}
			}
		}
	}
	if(newkeys == KEY_CROUCH)
	{
	    for(new i;i<OWNABLEBIZES;i++)
		{
		    if(!GetString(BizInfo[i][bOwner],"The State"))
	    	{
			    if(BizInfo[i][bState] == 7 || BizInfo[i][bState] == 1 || BizInfo[i][bState] == 2 || BizInfo[i][bState] == 3 || BizInfo[i][bState] == 9)
				{
				    if(BizInfo[i][bBuyCost]>0 && BizInfo[i][bNeedItem]>0)
				    {
				        if(IsPlayerInRangeOfPoint(playerid,10,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]))
				        {
				            if(PI[playerid][pJob]==3)
				            {
								if(vTemp[GetPlayerVehicleID(playerid)][vJob]==3)
								{
						            f(str_2,sizeof(str_2),"{FFFFFF}Бизнес закупает {B7A51B}%i{FFFFFF} едениц товара. Стоимость 1-го продукта: {B7A51B}%i$.{FFFFFF}\nВведите количество товара которое хотите продать бизнесу.",BizInfo[i][bNeedItem],BizInfo[i][bBuyCost]);
						            SPD(playerid,8762,1, !"", str_2, !"Принять", !"Отмена");
						            dBiz[playerid]=i;
						            break;
								}
							}
				        }
					}
				}
			}
		}
		if(PI[playerid][pJob]==3 && vTemp[GetPlayerVehicleID(playerid)][vJob]==3 && IsPlayerInRangeOfPoint(playerid, 6.0, -48.8906,26.7353,3.1172))
		{
		    SPD(playerid,2281,2,"","{42B02C}-{FFFFFF} Закупить продукты\n{42B02C}-{FFFFFF} Вернуть продукты", !"Принять", !"Отмена");
   			return 1;
		}
		if(PI[playerid][pJob]==3 && vTemp[GetPlayerVehicleID(playerid)][vJob]==3 &&IsPlayerInRangeOfPoint(playerid, 6.0, 1976.6340,-2029.4700,13.5469))
		{
		    SPD(playerid,2291,2,"","{42B02C}-{FFFFFF} Закупить груз\n{42B02C}-{FFFFFF} Вернуть груз", !"Принять", !"Отмена");
   			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2224.5222,-2461.0154,13.4466) || IsPlayerInRangeOfPoint(playerid, 5.0, 1124.2776,1962.4742,10.8203))
		{
			if(PI[playerid][pJob] == JOB_SCRAPER)
		    {
		        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		        {
		        	new carid = GetPlayerVehicleID(playerid);
					if(vTemp[carid][vJob] == JOB_SCRAPER)
					{
			        	if(CarScrap[carid] == -1)
			        	{
						    DestroyDynamicObject(CarScrap[carid]);
							CarScrap[carid] = CreateDynamicObject(3594, 0, 0, 0, 0, 0, 0);
							AttachDynamicObjectToVehicle(CarScrap[carid], carid, 0, -2, 1.4, -15, 0, 183);
							TogglePlayerDynamicCP(playerid, ScrapCP, true);
							//Streamer_Update(playerid);
							SPD(playerid, 0, 0, "Перевозка металлолома", "{FFFFFF}Едьте на фабрику по переработке маталлолома.\nОна отмечена на карте красным маркером или используйте:\n{B2D63B}/gps - Работы для начинающих - Завод", "Ок", "");
							SetPVarInt(playerid,"metal",gettime()+150);
						}
						else
						{
							SPD(playerid, 0, 0, "Перевозка металлолома", "{FFFFFF}Едьте на фабрику по переработке маталлолома.\nОна отмечена на карте красным маркером или используйте:\n{B2D63B}/gps - Работы для начинающих - Завод", "Ок", "");
							TogglePlayerDynamicCP(playerid, ScrapCP, true);
						}
						return 1;
					}
				}
		    }
		    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не развозчик металлолома");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2052.71, -106.53, 35.06))
        {
    		new vehid = GetPlayerVehicleID(playerid);
    		if(vTemp[vehid][vTeam] == TEAM_LICENSERS) SetVehiclePos(vehid, -2052.90, -98.77, 34.90);
    	}
    	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2052.90, -98.77, 34.90))
    	{
            new vehid = GetPlayerVehicleID(playerid);
    		if(vTemp[GetPlayerVehicleID(playerid)][vTeam] == TEAM_LICENSERS) SetVehiclePos(vehid, -2052.71, -106.53, 35.06);
     	}
	}

    if(newkeys & KEY_WALK && oldkeys & KEY_NO) return callcmd::menu(playerid);
	if(newkeys == KEY_WALK && !IsPlayerInAnyVehicle(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -1649.3934, -246.4758, 14.1484)) return ShowInfoMining(playerid, HouseEntered[playerid]);
        else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1384.2760, -21.8199, 1000.9229))
        {
			f(str_1, sizeof(str_1), "{ffffff}Вы хотите купить видеокарту для майнинга криптовалюты?\nЕё стоимость: {ffff00}$%s\n\n{cccccc}Осталось видеокарт в наличии: %i шт.\n(завоз новых видеокарт каждый час)", COST_MINING_CART, AmountMiningVideoCard);
            SPD(playerid, 15270, DIALOG_STYLE_MSGBOX, "Покупка видеокарты", str_1, "Купить", "Закрыть");
        }
		if(GetVideoCardManagement(playerid) != -1) ShowMining(playerid, HouseEntered[playerid]);
		if(!CraftStart{playerid}) for(new i; i < sizeof(CraftPosition); i++) if(IsPlayerInRangeOfPoint(playerid, 3.0, CraftPosition[i][cPosX], CraftPosition[i][cPosY], CraftPosition[i][cPosZ])) return ShowCraft(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1773.797363, -1899.465942, 13.548067)) return ShowInviteDLG(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1090.1139, 1525.7634, 1716.0868)) return ShowBuyMenu(playerid, 2);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1772.0677, 428.9174, 20.1436)) return ShowBuyMenu(playerid, 1);
        if(IsPlayerInRangeOfPoint(playerid, 1.0, 1542.2939, 1112.4893, 1033.8420))
        {
		    if(PI[playerid][pLevel] < 5) return SendBotMessage(playerid, "Создать семью можно, после 5-го уровня!");
		    if(GetMoney(playerid) < 3000000) return SendBotMessage(playerid, "У вас недостаточно денег чтобы создать семью!\nНеобходимо: 3.000.000$");
			if(PI[playerid][pFamilyMember] != -1 || PI[playerid][pFamily] == 1) return SendBotMessage(playerid, "Вы не можете создать семью, так как вы уже в ней состоите!");
			
			new Cache:result = mysql_query(mysql, "SELECT * FROM `Family`");
			new num = cache_num_rows();
			cache_delete(result);

            if(num+1 >= MAX_FAMILY) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На данный момент превышен лимит семей");
			SPD(playerid, 492, DIALOG_STYLE_MSGBOX, "", "\n\n{FFFFFF}Вы действительно хотите создать свою семью?\nСтоимость создания семьи: {FAAC58}3 000 000$\n\n", "Принять", "Отмена");
	    }
	    for(new i; i < MAX_LAVKA; i++) {
	        if(IsPlayerInRangeOfPoint(playerid, 1.0, LavkaInfo[i][lavkaPosX], LavkaInfo[i][lavkaPosY], LavkaInfo[i][lavkaPosZ])) {
	            if(LavkaInfo[i][lavkaOwnerID] == playerid) {
	                return 0;
	            }
	            if(LavkaInfo[i][lavkaOwnerID] == 65535) {
		            if(PI[playerid][pLevel] < 3) {
		                return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Заниматься торговлей, можно с 3-го уровня!");
		            }
		            if(GetMoney(playerid) < 500) {
		                return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
		            }
		            SPD(playerid, 1721, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Стоимость аренды лавки: {85e94e}500$\n{FFFFFF}Вы действительно хотите выставить свой {85e94e}товар {FFFFFF}на продажу?", !"Принять", !"Отмена");
	            }
	            else {
	                return 1;
	            }
	            pTemp[playerid][pLavka] = i;
	        }
	        else if(IsPlayerInRangeOfPoint(playerid, 1.0, LavkaInfo[i][lavkaPosXOwner], LavkaInfo[i][lavkaPosYOwner], LavkaInfo[i][lavkaPosZOwner])) {
	            if(LavkaInfo[i][lavkaOwnerID] != playerid) {
	            	return 0;
	            }
	            pTemp[playerid][pLavka] = i;
	            new lavkaid = pTemp[playerid][pLavka];
				if(!LavkaInfo[lavkaid][lavkaBuy]) {
					SPD(playerid, 1724, DIALOG_STYLE_LIST, !"", !"{8cff57}1. Выставить товар на продажу\n2. Удалить товар с продажи\n{FF6347}3. Прекратить аренду прилавки", !"Принять", !"Закрыть");
				}
				else {
				    SPD(playerid, 1725, DIALOG_STYLE_LIST, !"", !"{8cff57}1. Добавить товар на покупку\n2. Прекратить покупку товара\n{FF6347}3. Прекратить аренду прилавки", !"Принять", !"Закрыть");
				}
	            return 1;
	        }
	    }
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -2263.4514,177.9965,35.3056))
		{
			if(GetPlayerVirtualWorld(playerid) == 0)
				SPD(playerid, 7845, DIALOG_STYLE_LIST, !"", !"{C4DF3D}<= {FFFFFF}Когда начинается мероприятие?\n{C4DF3D}<= {FFFFFF}Что собой представляет это мероприятие?\n{8D9F37}<= {FFFFFF}Сколько людей учавствует в мероприятии?\n{DB873D}<= {FFFFFF}Купить билет и войти! {DB873D}[30.000$]", !"Принять", !"Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.5, 523.8312, 848.2282, -42.9189))
		{
			if(OBJECT_SLEGAN[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] У вас уже есть инструмент!");
			if(GetMoney(playerid) < 4000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нету денег на покупку инструмента у Лари!");
		    SendBotMessage(playerid, "Дай мне 4000$ и я продам тебе инструмент,\nчтобы ты смог добыть полезные ископаемые!");
			SPD(playerid, 3213, DIALOG_STYLE_MSGBOX, "", "{FFFFFF}Вы хотите купить инструмент у Лари за 4000$?", "Купить", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.5, -256.7696, -1362.8536, 9.4421))
		{
			if(OBJECT_RAKE[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] У вас уже есть инструмент!");
			if(GetMoney(playerid) < 4000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нету денег на покупку инструмента у Эмилио!");
		    SendBotMessage(playerid, "Дай мне 4000$ и я продам тебе инструмент,\nчтобы ты смог собрать урожай!");
			SPD(playerid, 3212, DIALOG_STYLE_MSGBOX, "", "{FFFFFF}Вы хотите купить инструмент у Эмилио за 4000$?", "Купить", "Отмена");
		}
	    new Float:x, Float:y, Float:z;
     	callcmd::tet(playerid);
		for(new i;i<MAX_DMATS;i++)
		{
		    if(dmats[i]!=-1)
		    {
		        GetDynamicObjectPos(dmats[i],x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
				{
				    DestroyDynamicObject(dmats[i]);
				    dmats[i]=-1;
				    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно подобрали ящик, в котором {FFFFFF}500{73B461} готовых патронов!");
				    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
				    InvAdd(playerid, Item_Mats, 500);
				    aml(101, playerid, "", "подобрал ящик", Item_Mats, 500);
			 	   	f(str_2,sizeof(str_2),"Подобрал что-то с земли");
					SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
				    return 1;
				}
			}
		}
		for(new i;i<MAX_DGUNS;i++)
		{
		    if(dguns[i]!=-1)
		    {
		        GetDynamicObjectPos(dguns[i],x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
				{
				    DestroyDynamicObject(dguns[i]);
				    dguns[i]=-1;
				    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
				    GiveGun(playerid,dgunn[i],dpatrons[i]);
				    f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы подобрали оружие:{FFFFFF} %s[%i].",WeaponNames[dgunn[i]],dpatrons[i]);
				    SCM(playerid,COLOR_VALIK,str_2);
			 	   	f(str_2,sizeof(str_2),"Подобрал оружие с земли");
					SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
					dpatrons[i]=-1;
					dgunn[i]=-1;
				    return 1;
				}
			}
		}
		if(GetPlayerVirtualWorld(playerid)==0)
		{
			for(new i;i<MAX_NARKO;i++)
			{
			    if(ddrugs[i]!=-1)
			    {
			        GetDynamicObjectPos(ddrugs[i],x,y,z);
					if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
					{
					    if(ddTimer[i]==0)
			    		{
			    		    Timerak[playerid]=17;
						    return 1;
						}
						else
						{
							if(GetPVarInt(playerid,"timeas")>gettime())
							{
							    if(!IsAtGang(playerid))return SCM(playerid, COLOR_RED, !"Вы не можете испортить этот саженец!");
							    Timerak[playerid]=17;
							    return 1;
							}
							SetPVarInt(playerid,"timeas",gettime()+4);
							SCM(playerid, COLOR_GREY, !"Конопля еще не созрела, нажмите ALT еще раз чтобы вырвать саженец!");
							return 1;
						}
					}
				}
			}
		}
		for(new i;i<sizeof(phonepos);i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 2, phonepos[i][0],phonepos[i][1],phonepos[i][2]))
			{
 				SetPlayerChatBubble(playerid, "Использует телефон", COLOR_PURPLE, 10.0, 5000);
 				SPD(playerid,2261,0,"","{FAAC58}- Телефонная будка{FFFFFF}\n\nСтоимость вызова такси составляет 75$, если наша компания найдет свободное\nтакси мы вас сразу оповестим.\n{FAAC58}Желаете продолжить?", !"Принять", !"Отмена");
			}
		}
        if(IsPlayerInRangeOfPoint(playerid,1.5,649.3248,-1353.8834,13.5470))
        {
			PI[playerid][pBuildType]=0;
            if(!BuildsInfo[0][blClosed]) {
			    SPD(playerid,867,DIALOG_STYLE_INPUT,!"",!"\n\n{FFFFFF}Концертный зал не арендован и вход пока не доступен.\nСтоимость аренды зала составляет {D1BE41}50 000${FFFFFF} за {D1BE41}1{FFFFFF} час.\nВведите количество часов на сколько вы хотите арендовать помещение.\n\n",!"Принять",!"Отмена");
			}
			else
			{
			    if(!GetString(BuildsInfo[0][blArenderID],PN(playerid)))
			    {
				    if(!BuildsInfo[0][blCanEnter]) {
						SCM(playerid,COLOR_GREEN,!"[Подсказка] {FFFFFF}Вы бесплатно вошли в концертный зал.");
					    J_SetPlayerPos(playerid,-575.709, 2594.2, 1705.09); //вход в здание
					    SetPlayerFacingAngle(playerid, 180.11);
			            SetPlayerInterior(playerid,9);
			            SetPlayerVirtualWorld(playerid,9);
						ZallFunction[2]++;
				    }
				    else if(BuildsInfo[0][blCanEnter]==1 || BuildsInfo[0][blCanEnter]>2)
				    {
				        if(GetMoney(playerid)<BuildsInfo[0][blCanEnter])
						{
						    f(str_2,sizeof(str_2),"[Ошибка] {FFFFFF}У вас недостаточно денег, чтобы войти в коцертный зал! Необходимо %i$",BuildsInfo[0][blCanEnter]);
							SCM(playerid,COLOR_RED,str_2);
							return 1;
						}
						GiveMoney(playerid,-BuildsInfo[0][blCanEnter]);
						aml(52, playerid, "", "вход в концертный зал", BuildsInfo[0][blCanEnter]);
						SCM(playerid, COLOR_GREY, !"<< {FFFFFF}Вы успешно оплатили вход и вошли в концертный зал.");
					    J_SetPlayerPos(playerid,-575.709, 2594.2, 1705.09); //вход в здание
					    SetPlayerFacingAngle(playerid, 180.11);
			            SetPlayerInterior(playerid,9);
			            SetPlayerVirtualWorld(playerid,9);
						ZallFunction[2]++;
						ZallFunction[1]+=BuildsInfo[0][blCanEnter];
				    }
				    else
				    {
						if(PI[playerid][pZall]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет пропуска для входа в арендованый концертный зал, получить его можно у арендатора или охранника.");
					    J_SetPlayerPos(playerid,-575.709, 2594.2, 1705.09); //вход в здание
					    SetPlayerFacingAngle(playerid, 180.11);
			            SetPlayerInterior(playerid,9);
			            SetPlayerVirtualWorld(playerid,9);
						ZallFunction[2]++;
						SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Вы вошли в концертный зал, как приглашеный человек.");
					}
				}
				else {
				    J_SetPlayerPos(playerid,-575.709, 2594.2, 1705.09); //вход в здание
				    SetPlayerFacingAngle(playerid, 180.11);
		            SetPlayerInterior(playerid,9);
		            SetPlayerVirtualWorld(playerid,9);
					ZallFunction[2]++;
				}
			}
        }
        if(IsPlayerInRangeOfPoint(playerid,1.5,-575.709, 2594.2, 1705.09))
        {
			J_SetPlayerPos(playerid,649.3248,-1353.8834,13.5470);//выход из здания
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			PI[playerid][pBuildType]=-1;
        }
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 770.8220,-77.3209,1000.6563 ))SPD(playerid,6446,DIALOG_STYLE_MSGBOX,"Раздевалка","Вы хотите надеть/снять форму и начать/закончить тренировку?","Одеть","Снять");
  		if(Clother[playerid] != -1)
	    {
	        if(PI[playerid][pSkin] != 0)
	        {
		        if(!IsPlayerInRangeOfPoint(playerid, 1.0, 199.1063, -128.3574, 1003.5152))
		        {
			        Clother[playerid] = -1;
					TogglePlayerControllable(playerid, true);
     				SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
					TogglePlayerDynamicCP(playerid, Binko_CP, true);
					SetCameraBehindPlayer(playerid);
					return 1;
				}
			}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1, 1489.7209,-1259.7783,113.8044 ))
		{
			SPD(playerid, 9000, 2, "Выберите этаж", "\
			{FFFFFF}1 Этаж ({FFFF00} Холл/Информация {FFFFFF})\n\
			{FFFFFF}2 Этаж ({A2EB53} Центр услуг/Буфет {FFFFFF})\n\
			{FFFFFF}3 Этаж ({FF8C00} Правление/Администрация {FFFFFF})", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1509.3090,1088.1893,1033.8420 ))
		{
			SPD(playerid, 9000, 2, "Выберите этаж", "\
			{FFFFFF}1 Этаж ({FFFF00} Холл/Информация {FFFFFF})\n\
			{FFFFFF}2 Этаж ({A2EB53} Центр услуг/Буфет {FFFFFF})\n\
			{FFFFFF}3 Этаж ({FF8C00} Правление/Администрация {FFFFFF})", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1999.9298,1121.5593,1038.6824 ))
		{
			SPD(playerid, 9000, 2, "Выберите этаж", "\
			{FFFFFF}1 Этаж ({FFFF00} Холл/Информация {FFFFFF})\n\
			{FFFFFF}2 Этаж ({A2EB53} Центр услуг/Буфет {FFFFFF})\n\
			{FFFFFF}3 Этаж ({FF8C00} Правление/Администрация {FFFFFF})", "Выбрать", "Отмена");
		}
	    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 644.0786,-1365.4963,13.6142))//охрана
		{
		    if(GetString(BuildsInfo[0][blArenderID],PN(playerid))) return SendBotMessage(playerid,"Здравствуйте, начальник!");
		    if(!BuildsInfo[0][blClosed]) return SendBotMessage(playerid,"К сожалению помочь тебе я не могу.");
		    if(BuildsInfo[0][blCanEnter]==2)
		    {
		        if(GetPVarInt(playerid,"zalll")==9) return SendBotMessage(playerid,"Чувак, я не буду 10 раз бегать туда-сюда, жди!");
		        if(PI[playerid][pZall]==0) return SendBotMessage(playerid,"Чувак, у тебя уже есть пропуск!");
		        SendBotMessage(playerid,"Таксс, я передам владельцу, что ты хотел получить пропуск.\nЕсли что, стой тут, я крикну если можно будет войти.");
		        SetPVarInt(playerid,"zalll",9);
		    }
		    else
		    {
		        if(!BuildsInfo[0][blCanEnter]) SendBotMessage(playerid,"Вход же свободен, зачем я тебе?");
		        else
		        {
					f(str_2,sizeof(str_2),"Стоимость входа сейчас: %i$.",BuildsInfo[0][blCanEnter]);
					SendBotMessage(playerid, str_2);
		        }
		    }
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -569.7514,2567.4849,1702.5029))//управление залом
		{
		    if(!GetString(BuildsInfo[0][blArenderID],PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете управлять концертным залом!");
		    SPD(playerid,8981,2,"","Изменить музыку", !"Принять", !"Отмена");
		}
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1313.7603,-1383.4368,13.7675))
		{
		    f(str_2,sizeof(str_2),"{52A32A}- Развлекательный центр.{FFFFFF}\n\n\
			В этом месте вы можете как отдохнуть от своих обязаностей, так и заработать не малую\n\
			сумму денег, ведь при сприятии в победе вашей команды, вы будете получать по 1000$ за каждое\n\
			принесенное очко. Игра обрела название: 'Пейнбол', и ваша цель только победить в поединке между\n\
			красными или синими игроками. Всего лучшего!\n\n{52A32A}Игра начинается раз в 20 минут.");
		    SPD(playerid,0,0, !"", str_2, !"Принять", !"");
		}
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2066.45044, 2663.85303, 1498.62634))  return SPD(playerid,1977,2,"","- Кто сейчас стоит на должности: 'Губернатор' ?\n- Чем занимается губернатор?", !"Принять", !"Отмена");
	    else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1773.6903,-1891.7493,13.5504 ) || IsPlayerInRangeOfPoint(playerid, 1.5, 2211.0706,-1142.9728,25.8084 ))
		{
		    SPD(playerid,7681,2,"","- Поговорить\n{E64A4A}[Важно]{FFFFFF}Задания", !"Принять", !"Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2572.0220,-1374.5316,1500.7570))
			return SPD(playerid, 1982, DIALOG_STYLE_LIST, !"", !"{FFC133}- {FFFFFF}Где получить права пилота?\n{FFC133}- {FFFFFF}Сколько стоят права на вождение?\n{FFC133}- {FFFFFF}Сотрудники автошколы на дежурстве.\n{FFC133}- {FFFFFF}Сколько стоит сдача на права пилота?", !"Принять", !"Отмена");
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1771.6855, -2012.7522, 1500.7853))
		{
			new g = GetPlayerInterior(playerid);
		    new w = GetPlayerVirtualWorld(playerid);
		    if(g == 2 && w == 1) SPD(playerid, 1978, DIALOG_STYLE_LIST, "", "{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1771.6855, -2012.7522, 1500.7853))
		{
			new g = GetPlayerInterior(playerid);
		    new w = GetPlayerVirtualWorld(playerid);
		    if(g == 3 && w == 3) SPD(playerid, 1979, DIALOG_STYLE_LIST, "", "{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1771.6855, -2012.7522, 1500.7853))
		{
			new g = GetPlayerInterior(playerid);
		    new w = GetPlayerVirtualWorld(playerid);
		    if(g == 3 && w == 2) SPD(playerid, 1980, DIALOG_STYLE_LIST, "", "{FFC133}- {FFFFFF}Кто сейчас стоит на должности главврача?\n{FFC133}- {FFFFFF}Сколько стоит лечение?\n{FFC133}- {FFFFFF}Сотрудники больницы на дежурстве.\n{FFC133}- {FFFFFF}В каком городе я нахожусь?", "Принять", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1324.0098,287.2829,20.0452 ))
		{
		    if(QuestProgress[playerid][5]==0 && AcceptQuest[playerid][5]!=0)
        	{
				SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
				QuestProgress[playerid][5]=100;
				GiveMoney(playerid,450);
				aml(51, playerid, "", "выполнение квеста", 450);
        	    SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно поговорили с Майклом!\n\nТеперь именно он будет давать вам следующие задания!", !"Принять", !"");
        	    f(str_2,sizeof(str_2),"Привет %s, меня зовут Майкл!\nЯ уже устал тебя ждать, если-что, я имею полно заданий для тебя.",PN(playerid));
        	    SendBotMessage(playerid, str_2);
       	     	new id = 10;
		        mysql_pqueryf(mysql, "UPDATE `QuestsProgress` SET `progress`='%i' WHERE `idquest`='%i' AND `name`='%s';", QuestProgress[playerid][id], id, PN(playerid));
  	    		return 1;
        	}
		    SPD(playerid,7991,2,"","- Поговорить\n{E64A4A}[Важно]{FFFFFF}Задания", !"Принять", !"Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1800.4841, 409.9243, 20.2294 )) return SPD(playerid, 1931, DIALOG_STYLE_LIST, "", "{DB873D}<= {FFFFFF}Ежедневные задания\n{808D84}Обменять {C4DF3D}500 {808D84}талонов на {C4DF3D}Активный аксессуар: {C4DF3D}'Бумбокс'\n{808D84}Обменять {C4DF3D}850 {808D84}талонов на {C4DF3D}наклейку: {C4DF3D}'Supreme'\n{808D84}Обменять {C4DF3D}1300 {808D84}талонов на {C4DF3D}Samsung Galaxy S10 (Белый)\n{808D84}Обменять {C4DF3D}1300 {808D84}талонов на {C4DF3D}iPhone X (Серебряный)", "Принять", "Отмена");
		else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1420.4176,-1685.8624,13.5469 ))
		{
			return SPD(playerid,1449,2,"Задать вопрос","- Что ты тут делаешь?\n- Сколько необходимо подарков для обмена\n- Почему подарки раскиданы по городам?\n{FFFFFF}- {FF6347}Обменять подарки", !"Закрыть", !"");
		}
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -77.9217,90.3327,3.1172 ))
		{
		    if(PI[playerid][pJob]== 17 || PI[playerid][pJob]== 18 || PI[playerid][pJob]== 19 || PI[playerid][pJob]== 20)f(str_2,sizeof(str_2),"Текущая должность: %s",GetJobName(PI[playerid][pJob]));
		    else f(str_2,sizeof(str_2),"");
			SPD(playerid,3919,2,str_2,"{73B461}-{FFFFFF} Информация\n{73B461}-{FFFFFF} Переодеться и начать/закончить работу\n{73B461}-{ABAE40} Устроится на работу начального фермера\n{73B461}-{FFFFFF} Устроится на работу тракториста\n{73B461}-{FFFFFF} Устроится на работу комбайнера\n{73B461}-{FFFFFF} Устроится на работу водителя кукурузника", !"Принять", !"Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2034.3145,-114.1021,1035.1719 ))
		{
			if(GetInvCount(playerid, Item_Fly_Lic)) return 0;
		    if(PI[playerid][pContractTime]<7000)return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}EasterBoard Farm не раздает кому попало лицензии на полёты, только лучшим работникам!");
		    SPD(playerid, 0, 0, !"", !"{FAC64C}Вы успешно получили бесплатную лицензию на полёты, при поддержке\nПредприятия EasterBoard Farm.", !"Закрыть", !"");
		    GiveLiccenses(playerid, 30, Item_Fly_Lic);
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 363.6908,153.9987,1025.7964)) ShowSletBiz(playerid);
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 354.0459,170.0928,1025.7964 )) ShowSletHouse(playerid);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2361.3875,91.0118,1502.0103) || IsPlayerInRangeOfPoint(playerid, 1.0, -955.6700,-2358.0708,1701.0859 ))
		{
            if(PI[playerid][pWanted] > 0)
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				PI[playerid][pJailTime] = PI[playerid][pWanted] * 180;
				PI[playerid][pBailPrice] = PI[playerid][pWanted] * 200;
				UpdatePlayerDataInt(playerid, "BailPrice", PI[playerid][pWanted] * 200);
				if(GetInvCount(playerid, Item_Drugs) > 0 || GetInvCount(playerid, Item_Mats) > 0) SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}У вас отобрали наркотики и патроны!");
                if(!IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770))
                {
					new jrand = random( 2 );
					SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[jrand][0],JailPos[jrand][1],JailPos[jrand][2], 180.0);
				}
				else SetSpawnInfoEx(playerid, GetPlayerSkin(playerid), JailPos[2][0],JailPos[2][1],JailPos[2][2], 180.0);
				ResetGun(playerid);
				PI[playerid][pWanted] = 0;
				J_SetPlayerWantedLevel(playerid, 0);
				PlayerSpawn(playerid);
				SetItem(playerid, Item_Drugs);
				SetItem(playerid, Item_Mats);
				f(str_2, sizeof(str_2), ">> Вы добровольно сели в тюрьму на %i минут.", (PI[playerid][pJailTime]/60));
				SCM(playerid, COLOR_LIGHTRED, str_2);
				SCM(playerid, COLOR_LIGHTBLUE, !">> Используйте /advokats чтобы найти адвоката который вам поможет выйти отсюда!");
				if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) PI[playerid][pPrison]=1,SetPlayerVirtualWorld(playerid, 11);
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) PI[playerid][pPrison]=3,SetPlayerVirtualWorld(playerid, 13);
				else PI[playerid][pPrison]=2,SetPlayerVirtualWorld(playerid, 12);
				UpdatePlayerDataInt(playerid, "Prison", PI[playerid][pPrison]);
				SetPlayerInterior(playerid, 6);
				TogglePlayerControllable(playerid, true);
			}
			else SendBotMessage(playerid,"Интересно в каком же вы собрались преступлении сознаваться, если вас нет в списке разыскиваемых?");
		    return 1;
		}
     	else if(IsPlayerInRangeOfPoint(playerid, 0.5, -80.5815,82.6753,3.1096 ))
		{
			if(PI[playerid][pJob]!= 17 && PI[playerid][pJob]!= 18 && PI[playerid][pJob]!= 19 && PI[playerid][pJob]!= 20)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы здесь не работаете!");
			if(ferman[playerid]<1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы еще ничего не заработали и не можете получить зарплату!");
			new cost = ferman[playerid]*GLS[4];
			GiveMoney(playerid, cost);
			aml(51, playerid, "", "роботу на ферме", cost);
			SCMf(playerid, COLOR_RED, "[Информация] {FFFFFF}Вы успешно забрали свою зарплату в размере:{FFFFFF} %i$", cost);
			ferman[playerid]=0;
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 2271.7996,1440.5249,1008.8320 ))
		{
		    if(PI[playerid][pJob]!= JOB_GUIDE) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не работаете здесь!");
			if(InJob[playerid]==0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не начинали работу!");
			if(deal[playerid]<1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы ничего еще не заработали!");
			new cost = deal[playerid]*120;
			GiveMoney(playerid, cost);
			aml(51, playerid, "", "работу в казино крупье", cost);
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно забрали свои заработаные деньги ( %i$ )", cost);
			deal[playerid]=0;
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2798.11, -2393.91, 13.96 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2743.82, -2453.84, 13.86 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2782.68, -2372.74, 13.63 ))
		{
			if(IsAtGang(playerid)) return BogdanKupira(playerid);
			else if(PI[playerid][pFamilyMember] != -1)
			{
				if(FamilyInfo[PI[playerid][pFamilyMember]][famMarodery]) return BogdanKupira(playerid);
			}
			else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1325.6866,476.3579,7.8498 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -1294.9114,491.5177,11.1953 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -1291.1442,501.8154,11.1953 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -1397.9807,502.8033,11.3047 ))
		{
			if(IsAtGang(playerid)) return BogdanKupira(playerid, 2);
			else if(PI[playerid][pFamilyMember] != -1)
			{
				if(FamilyInfo[PI[playerid][pFamilyMember]][famMarodery]) return BogdanKupira(playerid, 2);
			}
			else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 154.3891,1903.3417,18.7570 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 141.1707,1875.4081,17.8434 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 115.3891,1875.2244,17.8359 ) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 117.9125,1871.2745,17.8359 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 141.1704,1875.4607,17.8434 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 137.3782,1879.5315,17.8359 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 193.3672,1931.5112,17.6406 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 202.5459,1861.9189,13.1406 ))
		{
			if(IsAtGang(playerid)) return BogdanKupira(playerid, 3);
			else if(PI[playerid][pFamilyMember] != -1)
			{
				if(FamilyInfo[PI[playerid][pFamilyMember]][famMarodery]) return BogdanKupira(playerid, 3);
			}
			else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -398.3770,2229.9397,1801.0859 ))
		{
		    if(Clother[playerid] != -1 || BuyInt[playerid] != -1  || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1) return 0;
			SPD(playerid,1653,5,"","Аксессуар\tЯчейка\n{42B02C}-{FFFFFF} Наушники\t5\n{42B02C}-{FFFFFF} Шапки\t1\n{42B02C}-{FFFFFF} Панамки\t1\n{42B02C}-{FFFFFF} Кепки\t1\n{42B02C}-{FFFFFF} Каски\t1\n{42B02C}-{FFFFFF} Береты\t1\n{42B02C}-{FFFFFF} Парики\t1\n{42B02C}-{FFFFFF} Стильные очки\t2\n{42B02C}-{FFFFFF} Банданы\t4\n{42B02C}-{FFFFFF} Шляпы\t1\n{42B02C}-{FFFFFF} Наручные часы\t3\n{42B02C}-{FFFFFF} Сумки\t6\n{42B02C}-{FFFFFF} Шляпы [2]\t1\n{42B02C}-{FFFFFF} Банданы [2]\t1", !"Принять", !"Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 1547.6816,-1623.1069,13.3725 )) return J_SetPlayerPos(playerid,1547.7014,-1622.3954,13.5366);
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 1547.7014,-1622.3954,13.5366 )) return J_SetPlayerPos(playerid,1547.6816,-1623.1069,13.3725);

		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -166.9772,1347.3783,1500.9888 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -208.6039,1323.4382,1500.9888 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -208.6047,1327.2102,1500.9888 ) ||
				IsPlayerInRangeOfPoint(playerid, 1.0, -210.7849,1329.7562,1500.9888 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -212.6879,1334.1384,1500.9888) || IsPlayerInRangeOfPoint(playerid, 1.0, -208.9196,1334.1351,1500.9888) ||
				IsPlayerInRangeOfPoint(playerid, 1.0, -187.4157,1305.7438,1507.6416 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -194.7263,1305.7531,1507.6416 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -180.6385,1299.5883,1507.6770) ||
				IsPlayerInRangeOfPoint(playerid, 1.0, -183.1053,1299.8328,1507.6770 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -186.0829,1297.2595,1507.6692 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -190.7337,1296.8057,1507.6692) ||
				IsPlayerInRangeOfPoint(playerid, 1.0, -193.2607,1298.5358,1507.6692 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -194.5027,1296.8018,1507.6692 ) || IsPlayerInRangeOfPoint(playerid, 1.0, -197.0397,1298.5365,1507.6692)) return callcmd::Newsredak(playerid);

		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2570.1045,-1281.3558,1044.1250 ))
		{
			if(GetPlayerVirtualWorld(playerid)==11)
			{
				f(str_2,sizeof(str_2),"Склад армии ЛС.\n\n{BCB7B7}- Материалов %i\n- Патронов %i\n\nПатроны изготовляются на этом складе.\nДля их изготовления необходимы материалы!",GLS[25],OrgInfo[TEAM_ARMY][oMats]);
				SPD(playerid,0,0, !"", str_2,"Закрыть","");
			}
			else if(GetPlayerVirtualWorld(playerid)==12)
			{
			    f(str_2,sizeof(str_2),"Склад армии LV.\n\n{BCB7B7}- Материалов %i\n- Патронов %i\n\nПатроны изготовляются на этом складе.\nДля их изготовления необходимы материалы!",GLS[26],OrgInfo[TEAM_ARMYLV][oMats]);
			    SPD(playerid,0,0, !"", str_2,"Закрыть","");
			}
			else if(GetPlayerVirtualWorld(playerid)==13)
			{
			    f(str_2,sizeof(str_2),"Склад армии SF.\n\n{BCB7B7}- Материалов %i\n- Патронов %i\n\nПатроны изготовляются на этом складе.\nДля их изготовления необходимы материалы!",GLS[43],OrgInfo[TEAM_ARMYSF][oMats]);
			    SPD(playerid,0,0, !"", str_2,"Закрыть","");
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2019.32,1007.7,10.8203 ))
		{
		    if(GLS[67]) {
		        return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Казино закрыто!");
		    }
            if(PI[playerid][pWanted] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрокам с розыском, запрещено заходить в казино!");
			if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В казино могут войти игроки выше 2-го уровня!");
			if(GetMoney(playerid) < 500)return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}У вас недостаточно денег для входа в казино!");
            SetPlayerVirtualWorld(playerid,2);
            J_SetPlayerPos(playerid,2191.6479,1457.4010,1008.7850);
            SetPlayerFacingAngle(playerid, 270);
		    if(!EnterCasino{playerid})
		    {
		        GiveMoney(playerid, -500);
		        aml(52, playerid, "", "вход в казино", 500);
		        EnterCasino{playerid} = true;
		    }
		    if(!Terakt && !IsACop(playerid))
		    {
		        for(new j; j < 13; j ++)
				{
				    GetPlayerWeaponData(playerid, j, PI[playerid][pGuns][j], PI[playerid][pAmmos][j]);
				    if(PI[playerid][pGuns][j] != 0)
				    {
		                SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}При входе в казино у вас забрали оружие. Забрать сможете как будете уходить!");
						ResetGun(playerid);
						MinusGun{playerid} = true;
				    }
				}
			}
            SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы вошли в казино 4 Dragons");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1662.1874, -246.4930, 14.1484 ))
        {
            J_SetPlayerPos(playerid, HouseInfo[HouseEntered[playerid]][hExit_X], HouseInfo[HouseEntered[playerid]][hExit_Y], HouseInfo[HouseEntered[playerid]][hExit_Z]);
            SetPlayerInterior(playerid,HouseInfo[HouseEntered[playerid]][hInt]);
            SetPlayerVirtualWorld(playerid,(HouseEntered[playerid]+50));
        }
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2190.8975,1465.6576,1008.7850) && GetPlayerVirtualWorld(playerid) == 2)
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid,0);
		    J_SetPlayerPos(playerid,2019.32,1007.7,10.8203);
		    if(MinusGun{playerid})
		    {
		        for(new j; j < 13; j ++)
		        {
		            GiveGun(playerid, PI[playerid][pGuns][j], PI[playerid][pAmmos][j]);
		        }
		    }
		    return 1;
		}
		for(new i; i < sizeof(bandos); i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 1.0, bandos[i][0], bandos[i][1], bandos[i][2])) {
				SPD(playerid, 655, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Варианты победы\n\n{eec74a}[1] {FFFFFF}- 3 Вишни - {73b461}x6\n{eec74a}[2] {FFFFFF}- 3 Винограда - {73b461}x8\n{eec74a}[3] {FFFFFF}- 3 числа - {73b461}x10\n{eec74a}[4] {FFFFFF}- 3 Колокола - {73b461}x12\n{eec74a}[5] {FFFFFF}- 3 слитка - {73b461}x14\n{eec74a}[6] {FFFFFF}- 6 слитков - {73b461}x20\n\n{eec74a}[7] {FFFFFF}- 2 Колокола - {73b461}x2\n{eec74a}[8] {FFFFFF}- 2 слитка - {73b461}x3\n{eec74a}[9] {FFFFFF}- 4 слитка - {73b461}x4\n\n{FFFFFF}Остальную информацию можно узнать в /help - Однорукий бандит!\n\n{f7a736}Введите количество фишек, которое хотите поставить\nна баланс игрового автомата.", !"Принять", !"Закрыть");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1773.2142, -1888.9938, 13.5513) || IsPlayerInRangeOfPoint(playerid, 1.0, 2210.1968,-1149.0828,25.7458))
		{
			TutState[playerid] = 0;
			ShowTutorial(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1769.3776, -2019.0920, 1500.7853))
		{
			if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
	        J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
	        SetPlayerFacingAngle(playerid, 182.6985);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1079.0709, 937.4053, 1604.8663 )) J_SetPlayerPos(playerid, HouseInfo[HouseEntered[playerid]][hExit_X], HouseInfo[HouseEntered[playerid]][hExit_Y], HouseInfo[HouseEntered[playerid]][hExit_Z]);
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1415.0663, 2081.2036, 1502.0225 )) J_SetPlayerPos(playerid, -1426.0897, 2091.5784, 1508.2068);
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1426.0897, 2091.5784, 1508.2068 )) J_SetPlayerPos(playerid, -1415.0663, 2081.2036, 1502.0225);
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2350.7820,-1961.5228,1601.0859 ))
		{
		    if(GetMoney(playerid) < 1200) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
		    GiveMoney(playerid, -1200);
		    aml(52, playerid, "", "покупка цветов", 1200);
		    GiveGun(playerid, 14, 1);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -203.7812,1314.2445,1500.9788 ))
			J_SetPlayerPos(playerid, -212.8785,1310.3716,1507.6592);

		if(IsPlayerInRangeOfPoint(playerid, 1.0, -212.8785,1310.3716,1507.6592 ))
			J_SetPlayerPos(playerid, -203.7812,1314.2445,1500.9788);

		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2682.5276,796.4670,1501.0259 )) {
			mysql_tquery(mysql, "SELECT * FROM `Qelksekm` ORDER BY `Qelksekm`.`donation` DESC LIMIT 0, 15", "MysqlDonationBlago", "d", playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2661.8655, 785.9218, 1500.9688 ))
		{
		    if(PI[playerid][pMember] != TEAM_BANK)
		    	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этой двери!");

			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 1518.4906, -1777.8580, 33.4269);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1518.4906, -1777.8580, 33.4269 ))
		{
		    if(PI[playerid][pMember] != TEAM_BANK)
		    	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этой двери!");
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 1);
			J_SetPlayerPos(playerid, -2661.8655, 785.9218, 1500.9688);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2053.2688, 2697.6201, 1500.9766 ))
		    callcmd::ekonom(playerid, "");
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2064.8579, 2709.9797, 1500.9766 ))
		{
		    if(PI[playerid][pMember] != TEAM_MERIALS)
		        return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь доступна только сотрудникам мэрии!");
			J_SetPlayerPos(playerid, 1473.2888,-1262.4442,14.5625);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1473.2888,-1262.4442,14.5625 ))
		{
		    if(PI[playerid][pMember] != TEAM_MERIALS)
		        return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь доступна только сотрудникам мэрии!");
			J_SetPlayerPos(playerid, -2064.8579, 2709.9797, 1500.9766);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 2);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 295.20001220703, -38.299999237061, 1001.5 ))
		{
		    new biz = BizEntered[playerid];
			if(GetInvCount(playerid, Item_Gun_Lic))
			{
				if(biz != -1)
				{
				    if(BuyGuns[playerid] == -1)
		  			{
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						SetPlayerFacingAngle(playerid, 180.0);
						SetPlayerPos(playerid, 295.1638,-37.8457,1001.5156);
						new gunid = BuyGunInfo[0][bgGunid];
						new model = GetWeaponModel(gunid);
						new price;
						price = BuyGunInfo[0][bgPrice];
						f(str_2, sizeof(str_2), "~w~Name: %s~n~Ammo: %i~n~Cost: $%i", WeaponNames[gunid], BuyGunInfo[0][bgAmmo][0], price);
						PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
						DestroyPlayerObject(playerid, TempBGObject[playerid]);
						BuyGuns[playerid] = 0;
						BuyGunAmmo[playerid] = 0;
		                TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, GUN_ROT);
	                    SetBuyGunCamera(playerid);
	                    if(BuyGunInfo[0][bgAmmo][1] != 0) TextDrawShowForPlayer(playerid, ButtonUp);
	                    TextDrawShowForPlayer(playerid, Boxmenu0);
						TextDrawShowForPlayer(playerid, Boxmenu1);
						TextDrawShowForPlayer(playerid, Boxmenu2);
						TextDrawShowForPlayer(playerid, Boxmenu3);
	                    TextDrawShowForPlayer(playerid, ButtonRight);
						TextDrawShowForPlayer(playerid, ButtonCancel);
						TextDrawShowForPlayer(playerid, ButtonSelect);
						TextDrawShowForPlayer(playerid,boxaccept);
						TextDrawShowForPlayer(playerid,boxcancel);
						SelectTextDraw(playerid, 0xFFFFFFAA);
					}
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже покупаете оружие");
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ни в 1 из бизнесов");
			}
			else SendBotMessage(playerid,"Нееет! Я не продам пушку человеку без лицензии!");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2154.7354,1493.4109,10.8203 ))
		{
			SetPlayerInterior(playerid, 4);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerFacingAngle(playerid, 263.5787);
			J_SetPlayerPos(playerid, 2351.2886, 720.3787, 1500.9688);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2351.2886,720.3787,1500.9688 ))
		{
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetPlayerFacingAngle(playerid, 88.5033);
		    J_SetPlayerPos(playerid, 2154.9141, 1493.4940, 10.8203);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 3.0257, 32.9454, 1199.5938 ))
		{
		    SetPlayerInterior(playerid, 0);
		    if(GetPlayerInterior(playerid) == 1) J_SetPlayerPos(playerid, 1280.0313, -1531.1406, 1244.7153);
		    if(GetPlayerInterior(playerid) == 2) J_SetPlayerPos(playerid, -2172.6094, -54.8171, 1244.2686);
		    if(GetPlayerInterior(playerid) == 3) J_SetPlayerPos(playerid, 2031.6953, 1729.3984, 1244.3545);
		    SetPlayerVirtualWorld(playerid, 0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1451.6128, -2285.0105, 13.5469 ) || IsPlayerInRangeOfPoint(playerid, 1, 1673.0103, 1447.5935, 10.7867 ) || IsPlayerInRangeOfPoint(playerid, 1, -1409.4084, -298.2005, 14.1484 )) {
		  	if(PI[playerid][pWanted] > 0)
			  	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрокам с розыском, запрещено прыгать с парашюта!");
			SPD(playerid, 9982, DIALOG_STYLE_LIST, "Стоимость прыжка: {B5FA53}900$", "Прыгнуть с парашютом над городом: {B5FA53}LS\nПрыгнуть с парашютом над городом: {53FA78}SF\nПрыгнуть с парашютом над городом: {FACE53}LV", "Принять", "Отмена");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2083.3413, 2675.4199, 1500.9647)) SPD(playerid, 6682, DIALOG_STYLE_LIST, "", "{FE9DA7}>>> {FFFFFF}Оставить жалобу\n{EDBA60}>>> {FFFFFF}Читать жалобы", "Открыть", "Отмена");
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1312.6182, 20.8936, 1597.6073))
		{
			J_SetPlayerPos(playerid, -1771.9169, -2017.0677, 1500.7853);
			SetPlayerFacingAngle(playerid, 14.4063);
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2073.8965,-1369.1693,1007.1063 ))
		{
		    J_SetPlayerPos(playerid,2342.5989,-673.4814,1055.4230);
		    SetPlayerFacingAngle(playerid,269.5394);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2342.5989,-673.4814,1055.4230 ))
		{
      		J_SetPlayerPos(playerid,2073.8965,-1369.1693,1007.1063);
		    SetPlayerFacingAngle(playerid,91.2718);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 483.0550,246.8815,3197.7139 )) return J_SetPlayerPos(playerid,474.5011,216.2406,3194.6360);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 474.5011,216.2406,3194.6360 ))return  J_SetPlayerPos(playerid,483.0550,246.8815,3197.7139);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 481.3205,216.2760,3194.6360 ))return  J_SetPlayerPos(playerid,461.6805,223.6825,3197.7139);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 461.6805,223.6825,3197.7139 ))return  J_SetPlayerPos(playerid,481.3205,216.2760,3194.6360);
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1289.0641,-1271.5160,13.5400 ))return  SPD(playerid,134,2,"Меню","{B03131}[1]{FFFFFF} Устройство на работу\n{B03131}[2]{FFFFFF} Центр благотворительности", !"Принять", !"Отмена");
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1285.9365,-1270.2250,13.5939 ))return  SPD(playerid,134,2,"Меню","{B03131}[1]{FFFFFF} Устройство на работу\n{B03131}[2]{FFFFFF} Центр благотворительности\n{B03131}[3]{FFFFFF} Улица", !"Принять", !"Отмена");
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1287.2783,-1261.7417,20.6199 ))return  SPD(playerid,134,2,"Меню","{B03131}[1]{FFFFFF} Устройство на работу\n{B03131}[2]{FFFFFF} Центр благотворительности\n{B03131}[3]{FFFFFF} Улица", !"Принять", !"Отмена");
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1583.3033,-1637.5920,13.3905 ))
	    {
			if(PI[playerid][pMember] !=1)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от двери");
	        J_SetPlayerPos(playerid,1583.3656,-1638.4817,13.3333);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1583.3656,-1638.4817,13.3333 ))
	    {
	        if(PI[playerid][pMember] !=1)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от двери");
            J_SetPlayerPos(playerid,1583.3033,-1637.5920,13.3905);
            return 1;
	    }
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 494.7682,1318.9098,774.4839 ))
	    {
	        if(PI[playerid][pBankCard] == 1)
	        	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}У вас уже есть банковская карта!", !"Закрыть", !"");

	        if(GetMoney(playerid) < 1000)
	        	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

	        SPD(playerid, 779, DIALOG_STYLE_MSGBOX, !"", !"{FFA500}Вас приветсвтуют в банковском отделении города Las Venturas!\n\n{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг.\nВы установите пароль на карту, чтобы защитить ее от злоумышлеников.", !"Принять", !"Отмена");
	        return 1;
	    }
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 951.6823,2451.9871,1601.9871 ))
	    {
	        if(PI[playerid][pBankCard] == 1)
	        	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}У вас уже есть банковская карта!", !"Закрыть", !"");

	        if(GetMoney(playerid) < 1500)
	        	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

	        SPD(playerid, 779, DIALOG_STYLE_MSGBOX, !"", !"{FFA500}Вас приветсвтуют в банковском отделении города San Fierro!\n\n{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг.\nВы установите пароль на карту, чтобы защитить ее от злоумышлеников.", !"Принять", !"Отмена");
	        return 1;
	    }
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -38.9923,173.5192,2.4297 ))
	    {
			f(str_2,sizeof(str_2),"{FFFFFF}Предприятие: {73B461}EasterBoard Farm.{FFFFFF}\nНа данный момент зарплата на ферме составляет:\n\n- Начинающий фермер: {73B461}%i${FFFFFF}\n- Тракторист: {73B461}%i${FFFFFF}\n- Комбайнер: {73B461}%i${FFFFFF}\n- Водитель кукурузника: {73B461}%i${FFFFFF}\n\n{73B461}Следите за новостями!",GLS[4],GLS[4]*14,GLS[4]*26,GLS[4]*54);
			SPD(playerid,0,0,"Информация",str_2, !"Принять", !"");
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -83.2843,-302.1633,2.7646 ))
	    {
			f(str_2,sizeof(str_2),"{FFFFFF}Предприятие: {73B461}Завод.{FFFFFF}\n\nНа данный момент зарплата составляет: {73B461}%i${FFFFFF}\n{73B461}Следите за новостями!",GLS[5]);
			SPD(playerid,0,0,"Информация",str_2, !"Принять", !"");
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1969.3076,-1981.4128,13.5469 ))
	    {
			f(str_2,sizeof(str_2),"{FFFFFF}Предприятие: {73B461}Грузчики.{FFFFFF}\n\nНа данный момент зарплата составляет: {73B461}%i${FFFFFF}\n{73B461}Следите за новостями!",GLS[6]);
			SPD(playerid,0,0,"Информация",str_2, !"Принять", !"");
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1460.8505,-1743.3596,13.5469 ))
	    {
			f(str_2,sizeof(str_2),"{73B461}Центральный банк Los Santos.{FFFFFF}\n\nНалог на авто: {73B461}%i{FFFFFF}\nНалог на дом: {73B461}%i{FFFFFF}\nНалог на бизнес: {73B461}%i{FFFFFF}\n\nНалоги могут изменится в любой момент.\n{73B461}Следите за новостями!",GLS[1],GLS[2],GLS[3]);
			SPD(playerid,0,0,"Информация",str_2, !"Принять", !"");
			return 1;
	    }
     	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -954.5001,-2350.5596,1701.0869) ||
	    IsPlayerInRangeOfPoint(playerid, 1.0, 2327.74, 70.09, 1502.00) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -2502.4258,-650.1299,1331.6520) ||
	 	IsPlayerInRangeOfPoint(playerid, 1.0, 583.2088,1433.3907,1904.2689) ||
	    IsPlayerInRangeOfPoint(playerid, 1.0, 485.16, 849.70, 1500.96) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -1587.6157,-121.8007,1501.0859))
	    {
	        if(!IsACop(playerid) && !IsAArmy(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Доступ к спутнику имеется только у военных и правоохранных организаций!");
        	if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
        	//if(PI[playerid][pRank]<9)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет доступа к этому разделу!");
            if(!ShowMap[playerid]) TogglePlayerMap(playerid, 1);
        	else TogglePlayerMap(playerid, 0);
        	SetPVarInt(playerid, !"reloader",gettime()+2);
        	return 1;
	    }
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 592.9380,1428.2743,1900.7980 )) return J_SetPlayerPos(playerid,592.8829,1426.6675,1900.7980);
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 592.8829,1426.6675,1900.7980 )) return J_SetPlayerPos(playerid,592.9380,1428.2743,1900.7980);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 618.9825,-568.0446,26.1432 ))
		{
		    SetPlayerInterior(playerid,6);
	 		SetPlayerVirtualWorld(playerid,11);
	 		J_SetPlayerPos(playerid,2365.45, 73.89, 1502.01);
	 		SetPlayerFacingAngle(playerid,0.00);
	 		return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2365.59, 72.03, 1502.01))
		{
			if(GetPlayerVirtualWorld(playerid)==11)
			{
			    SetPlayerInterior(playerid,0);
		 		SetPlayerVirtualWorld(playerid,0);
				J_SetPlayerPos(playerid,618.9825,-568.0446,26.1432);
				SetPlayerFacingAngle(playerid,84.4441);
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1165.4773,1346.2273,10.9219 ))return J_SetPlayerPos(playerid,1165.4714,1344.7832,10.8125);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1165.4714,1344.7832,10.8125 ))return J_SetPlayerPos(playerid,1165.4773,1346.2273,10.9219);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1288.3657,-1267.7411,20.6199 ))return SPD(playerid,189,2,"","{FFFFFF}Пожертвовать: {FF6347}10 000$\nПожертвовать: {FF6347}50 000$\nПожертвовать: {FF6347}200 000$\nПожертвовать: {FF6347}1 000 000$\nПожертвовать: {FF6347}5 000 000$","Принять","Отклонить");
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2657.75, 808.67, 1500.97))
	 	{
	 	    foreach(new i: Player)
	 	    {
	 	        if(PI[i][pCredit]>0 && IsPlayerLogged{i})
	 	        {
	 	            f(str_2,sizeof(str_2),"- %s\t\t\t - Должен: %i\t\tУровень розыска: %i",PN(i),PI[i][pCredit],PI[i][pWanted]);
	 	            SPD(playerid,0,0,"Должники банка",str_2, !"Принять", !"");
	 	        }
	 	    }
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 199.1063, -128.3574, 1003.5152 ))
		{
			if(PI[playerid][pSkin]!= GetPlayerSkin(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете переодеться , так как вы сейчас в служебной одежде!{FFFFFF}");
			if(InviteOffer[playerid]!= INVALID_PLAYER_ID) return 1;
			if(Clother[playerid] == -1) SetPlayerBuySkin(playerid, 1);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2576.86, -1356.78, 1500.76 ))
		{
	        if(CuffedTime[playerid] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы обездвижены и не можете двигаться");
			if(DrivingTest[playerid] == 0)
			{
			    PddState[playerid] = 0;
				SCM(playerid, COLOR_YELLOW, "|____ Параграф 1: Общие положения ____|");
		  		SCM(playerid, -1, !"1.1. Настоящие Правила дорожного движения устанавливают единый порядок дорожного движения на всей территории San Andreas.");
		  		SCM(playerid, -1, !" 1.2. Лица, нарушившие Правила, несут ответственность в соответствии с действующим законодательством.");
				SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Выход\"", "Далее", "Выход");
				return 1;
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В данный момент вы сдаете тест на права.");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1746.6765,2246.2012,10.8203 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 665.9875,-1576.6426,14.4777 ) )
	 	{
			GetJob[playerid] = JOB_PIZZA;
			SPD(playerid,28,0,"Работа: Развозчик пиццы","{FFFFFF}Вы собираетесь устроиться на работу Развозчиком пиццы\nВы согласны с условиями?","Да","Нет");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.5, 1749.0339,2246.2012,10.8203 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 668.0192,-1576.7659,14.4074 ))
		{
			if(PI[playerid][pJob] != JOB_PIZZA) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не развозчик пиццы!");
			if(!InJob[playerid]) SPD(playerid,1222,0,"Работа 'Развозчик пиццы'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
			else SPD(playerid,1223,0,"Работа 'Развозчик пиццы'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
			return 1;
	  	}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1979.9426,-1971.1410,13.5825 ))
	 	{
			GetJob[playerid] = JOB_PORTER;
			SPD(playerid,28,0,"Работа: Грузчик","{FFFFFF}Вы собираетесь устроиться на работу Грузчиком\nВы согласны с условиями?","Да","Нет");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 208.4846,-225.6056,1.7749 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2111.5618,894.6057,10.9149 ))
	 	{
			if(PI[playerid][pJob]!=JOB_MECHANIC )return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не работаете механиком!");
			if(GetPVarInt(playerid, !"mehan") != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не переоделись!");
            SPD(playerid,381,2,"Выбор работы","1. Отремонтировать авто\n2. Починить двигатель", !"Принять", !"Отмена");
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 195.1261,-228.0334,1.7749 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2126.2717,896.7686,10.9149 ))
	 	{
	 	    if(PI[playerid][pJob] != JOB_MECHANIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы здесь не работаете!");
		    if(!InJob[playerid]) SPD(playerid,661,0,"Работа 'Механик'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
			else SPD(playerid,662,0,"Работа 'Механик'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2271.7771,1438.6256,1008.8250 ))
	 	{
   			new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
			{
		 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
		 		return 1;
			}
	 	    if(PI[playerid][pJob] != JOB_GUIDE) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы здесь не работаете!");
		    if(!InJob[playerid]) SPD(playerid,663,0,"Работа 'Крупье'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
			else SPD(playerid,664,0,"Работа 'Крупье'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2250.7593,1466.8921,1008.8050 )) return SPD(playerid,665,2,"","{acee4a}[Купить] {FFFFFF}Фишки\n{eec74a}[Продать] {FFFFFF}Фишки", !"Принять", !"Отмена");
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1980.1283,-1968.4868,13.5825 ))
		{
			if(PI[playerid][pJob] != JOB_PORTER) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не грузчик");
			if(!InJob[playerid]) SPD(playerid,666,0,"Работа 'Грузчик'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
			else SPD(playerid,667,0,"Работа 'Грузчик'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
			return 1;
	  	}
	  	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1773.9685, -2012.7522, 1500.7853) || IsPlayerInRangeOfPoint(playerid, 1.0, -1609.7928, -110.7104, 1501.0859) || IsPlayerInRangeOfPoint(playerid, 1.0, 1169.6074, -1333.3698, -0.8618)|| IsPlayerInRangeOfPoint(playerid, 1.0, 462.35, 874.83, 1500.96) || IsPlayerInRangeOfPoint(playerid, 1.0, 550.3827, 1472.2921, 1900.7980) || IsPlayerInRangeOfPoint(playerid, 1.0, -1324.4010, 9.3590, 1601.0859))
		{
			if(!PI[playerid][pHeal])
			{
				new Float:Health;
				GetPlayerHealth(playerid, Health);
				if(Health < 100.0) SPD(playerid, 186, DIALOG_STYLE_MSGBOX, "Курс лечения", "{FFFFFF}Вы хотите пройти курс лечения?", "Да", "Нет");
				else SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы здоровы!");
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже проходите лечение!");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1537.1251, 1112.4895, 1033.8420))
		{
			if(!IsValidPassport(playerid)) SPD(playerid, 147, 2, "Выберите пол", "{E64444}-{FFFFFF} Мужчина\n{E64444}-{FFFFFF} Женщина", "Далее", "Отмена");
			else SendBotMessage(playerid,"Вы в своем уме? У вас уже есть паспорт!");
			return 1;
		}
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2847.9468,-2519.4592,11.9786))
		{
			J_SetPlayerPos(playerid, 2842.3452,-2523.9382,17.7489);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2842.3452,-2523.9382,17.7489))
		{
			J_SetPlayerPos(playerid, 2847.9468,-2519.4592,11.9786);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1297.1311,-1263.8613,13.5939))
		{
			return SPD(playerid, 3392, DIALOG_STYLE_LIST, !"", !"Список рабочих мест\n{ff6016}Уволиться с работы", !"Принять", !"Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -190.34, 1338.59, 1500.98) || IsPlayerInRangeOfPoint(playerid, 1.0, 216.7613,-247.8414,1.9079)) return callcmd::ad(playerid, "");

		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2033.3712,-117.4146,1035.1719))
		{
		   if(TimetoReturn[playerid]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Подождите пока арендованную машину заберут на стоянку!");

		   if(FlyivingTest[playerid] != 0 || CarTest[playerid] != -1)
		   {
                FlyivingTest[playerid]= 0;
	 			CarTest[playerid] = -1;
	 			SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы отменили практическую часть экзамена.");
	 			DisablePlayerRaceCheckpoint(playerid);
				return 1;
		   }
		   else if(FlyivingTest[playerid] == 0 && CarTest[playerid] == -1)
		   {
				if(GetInvCount(playerid, Item_Fly_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть лицензия на полеты!");
    			SPD(playerid,3331,0,"","{FFFFFF}Вас приветствует авиашкола {FFA500}Las Venturas{FFFFFF}\nСтоимость прохода экзамена на управление воздушным транспортом: 20 000$\nДля продолжения нажмите{B03131} 'Далее'{FFFFFF}","Далее","Отмена");
				FlyivingTest[playerid] = 1;
				Question[playerid] = 0;
				Errors[playerid] = 0;
				TestFASKMassive[playerid] = { 0, 1, 2, 3, 4, 5, 6 };
				RandomMassive(TestFASKMassive[playerid], 7);
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2575.90, -1364.63, 1500.76) ||
		        IsPlayerInRangeOfPoint(playerid, 1.0, -2573.83, -1361.87, 1500.76) ||
				IsPlayerInRangeOfPoint(playerid, 1.0, -2575.87, -1358.94, 1500.76) ||
				IsPlayerInRangeOfPoint(playerid, 1.0, -2579.94, -1358.94, 1500.76))
		{
            SPD(playerid, 47, DIALOG_STYLE_LIST, !"", !"1. Сдать экзамен на вождения {B4EC64}авто\n{FFFFFF}2. Сдать экзамен на вождения {B4EC64}мото-транспорта\n{FFFFFF}3. Где получить права на {B4EC64}полеты?\n{FFFFFF}4. Как получить лицензию на {B4EC64}оружие?", !"Выбрать", !"Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1768.1641, -1992.0632, 1500.7856))
		{
		    if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении");
			if(GetPlayerVirtualWorld(playerid)==1)
			{
                SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			    J_SetPlayerPos(playerid, 1147.9972,-1343.0070,13.6483);
			    SetPlayerFacingAngle(playerid,177.6540);
			    NoEnterPickup[playerid] =2;
	    		TogglePlayerControllable(playerid,false);
			}
			else if(GetPlayerVirtualWorld(playerid)==2)
			{
			    SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			    J_SetPlayerPos(playerid, 1593.2783,1724.0553,10.8203);
			}
			else if(GetPlayerVirtualWorld(playerid)==3)
			{
			    SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			    J_SetPlayerPos(playerid, -2594.7959,642.3338,14.4531);
			    SetPlayerFacingAngle(playerid,271.9759);
			}
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0,1593.2783,1724.0553,10.8203))
		{
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 2);
			J_SetPlayerPos(playerid, -1768.1641, -1992.0632, 1500.7856);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1147.9972,-1343.0070,13.6483))
		{
		    SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 1);
			J_SetPlayerPos(playerid, -1768.1641, -1992.0632, 1500.7856);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2594.7959,642.3338,14.4531))
		{
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 3);
			J_SetPlayerPos(playerid, -1768.1641, -1992.0632, 1500.7856);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2512.0083,-649.9902,1331.6420))
		{
		    if(GetTeamID(playerid) != TEAM_FBI) return 0;
		    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве");
		    SPD(playerid, 240, DIALOG_STYLE_LIST, !"", !"{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", !"Выбор", !"Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -618.6426,-679.4822,1001.0859))
		{
		    if(!IsAtFrakcia(playerid, 1)) return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Дверь заперта!");
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 279.5766,-1619.0736,114.6778);
			SetPlayerFacingAngle(playerid, 261.7703);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 279.5766,-1619.0736,114.6778))
		{
		    if(!IsAtFrakcia(playerid, 1)) return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Дверь заперта!");
		    SetPlayerInterior(playerid, 2);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, -618.6426,-679.4822,1001.0859);
			SetPlayerFacingAngle(playerid, 271.2979);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2514.1074,-634.8470,1327.9960))
		{
		    if(!IsAtFrakcia(playerid, 1)) return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Дверь заперта!");
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, -2467.6902,529.4441,51.0896);
			SetPlayerFacingAngle(playerid, 170.8995);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2467.6902,529.4441,51.0896))
		{
		    if(!IsAtFrakcia(playerid, 1)) return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Дверь заперта!");
		    SetPlayerInterior(playerid, 2);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, -2514.1074,-634.8470,1327.9960);
			SetPlayerFacingAngle(playerid, 177.6572);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1492.7451,1308.4236,1093.2927))
		{
  			new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
			{
		 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
		 		return 1;
			}
		    if(GetPlayerVirtualWorld(playerid) == 1)
		    {
		        if(HouseNalogState2[playerid] == 2)
				{
		            SCMf(playerid, -1, "[Информация] {FFFFFF}Вы получили {73B461}%i${FFFFFF} за проделанную работу", GLS[12]);
		            GiveMoney(playerid, GLS[12]);
		            aml(51, playerid, "", "проделанную работу", GLS[12]);
		            HouseNalogState2[playerid] = 0;
				}
			    if(PI[playerid][pJob] != JOB_NALOG) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не работаете в Налоговой");
				new numik;
				str_2[0] = EOS, str_1[0] = EOS;
				for(new i = random(OWNABLEHOUSES-1); i < OWNABLEHOUSES; i++)
				{
				    if(HouseInfo[i][hNalog2] < 200 || strcmp(HouseInfo[i][hOwner],"The State",true) == 0 ) continue;
				    numik++;
					f(str_2,sizeof(str_2),"%s%s\t\t\t{40B02F}$%i{FFFFFF}\n",str_2,HouseInfo[i][hOwner],HouseInfo[i][hNalog2]);
					if(numik>=20)break;
				}
				if(strlen(str_2) > 0 ) ac_ShowPlayerDialog(playerid, 982),ShowPlayerDialogf(playerid, 982, 5, !"{BFBBBA}Должники", !"Выбрать", !"Отмена", "Имя/Фамилия\tДолжен\t\n%s", str_2);
				else SPD(playerid,0,0,"Информация","{FFFFFF}На данный момент доступной работы нет!\n\n{40B02F}Попробуйте поискать работу еще раз.", !"Закрыть", !"");
			}
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 485.50, 867.03, 1500.96) || IsPlayerInRangeOfPoint(playerid, 1.0, 589.6020,1420.4148,1900.7980) || IsPlayerInRangeOfPoint(playerid, 1.0, -1349.3669,493.8840,11.1953))
		{
		    if(Getemer[playerid]>gettime())return 0;
	    	Getemer[playerid]=gettime()+5;
		    if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в гос. структурах!");
		    GiveFullness(playerid,50);
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы немного перекусили. Посмотреть состояние голода можно {FFFFFF}/satiety");
   			SendEatBot(playerid);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2761.0051, -2565.0754, 13.6281))
		{
            if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от двери");
            J_SetPlayerPos(playerid, 2760.6651, -2566.2554, 13.6281);
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2760.6651, -2566.2554, 13.6281))
		{
            if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		    J_SetPlayerPos(playerid, 2761.0051, -2565.0754, 13.6281);
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2755.5088, -2515.5393, 13.6281))
		{
            if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от двери");
            J_SetPlayerPos(playerid, 2726.0520, -2521.9421, 29.8281);
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2726.0520, -2521.9421, 29.8281))
		{
            if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от двери");
		    J_SetPlayerPos(playerid, 2755.5088, -2515.5393, 13.6281);
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 286.17, -30.55, 1001.52))
		{
			new cost = 500;
			if(GetMoney(playerid) < cost) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
			GiveBizMoney(BizEntered[playerid], cost);
        	GiveMoney(playerid, -cost);
        	aml(52, playerid, "", "вход в тир", cost);
        	PI[playerid][pTir] = 1;
			J_SetPlayerPos(playerid, 286.13, -27.63, 1001.52);
			GameTextForPlayer(playerid, !"~w~Welcome to~n~~b~shooting range", 5000, 1);
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 286.1845, -24.4473, 1001.5156))
		{
		    SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно надели наушники для того чтобы уберечь себя от сильного шума.");
		    SCM(playerid, -1, !"Не снимайте наушники, пока не закончите тренировку, вы можете попасть в больницу!");
		    if(PlayerPlayed{playerid})
		 	{
				StopAudioStreamForPlayer(playerid);
				RemovePlayerAttachedObject(playerid, 6);
				PlayerPlayed{playerid} = false;
				SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Вы выключили радио.");
			}
		    SPD(playerid, 9811, DIALOG_STYLE_LIST, !"Радио", !"[1] Radio Electron\n[2] Radio LaserStar\n[3] Radio Record FM\n[4] Radio Europa Plus FM\n[5] Radio Premium FM\n[6] Radio Zaycev FM\n[7] Radio Dorognoe\n[8] Radio Chanson FM\n[9] Radio Zabawa FM\n[10] Radio Nawe FM\n[11] Radio Pioner FM\n[12] Radio Jazz FM", !"Выбрать", !"Отмена");
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -955.6700, -2353.1899, 1701.0869))
		{
		    SPD(playerid, 9918, DIALOG_STYLE_LIST, !"", !"Получить стандартные номера: {FF6DF9}10 000$\nПриобрести именные номера: {FF6DF9}600 000$", !"Принять", !"Отмена");
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 286.08, -29.09, 1001.52))
		{
			PI[playerid][pTir] = 0;
			J_SetPlayerPos(playerid, 286.14, -32.38, 1001.52);
            return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 544.7178, -587.9365, 23.0899))
		{
		    SetPlayerInterior(playerid, 11);
		    SetPlayerVirtualWorld(playerid, 2);
		    J_SetPlayerPos(playerid, 229.2502, 2367.7720, 1500.9756);
		    SetPlayerFacingAngle(playerid, 88.2878);
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 229.2502, 2367.7720, 1500.9756))
		{
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
		    J_SetPlayerPos(playerid, 544.3036, -590.3224, 22.8681);
		    SetPlayerFacingAngle(playerid, 197.0002);
		    return 1;
		}
    }
	if(PRESSED(KEY_FIRE))
	{
	    if(CreteBomb[playerid]>200) IsDropBomb(playerid);
	    if(GetPlayerWeapon(playerid) == 41)
	    {
	        foreach(new car : Vehicle)
	        {
			    GetVehiclePos(car,XYZ[0],XYZ[1],XYZ[2]);
		        if(IsPlayerInRangeOfPoint(playerid,2,XYZ[0],XYZ[1],XYZ[2]))
		        {
			        if(GetPlayerWeapon(playerid) == 41)
				    {
				        if(vTemp[car][vTeam]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете покрасить эту машину!");
				     	if(IsPlayerInAnyVehicle(playerid))return 0;
			    	    if(GetPVarInt(playerid, !"balon") == 0 || GetPVarInt(playerid, !"balon1") == 0 ) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не выбрали цвет для покраски или у вас нет балончика!");
			    	    new number = GetVehicleID(car);
			    	    if(!IsPlayerHaveCar(playerid, number)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш автомобиль!");
		     	 		SetPVarInt(playerid, "ProcessColor", GetPVarInt(playerid, !"ProcessColor") + 1);
		     	 		new ProcessColor = GetPVarInt(playerid, !"ProcessColor");
		     	 		GameTextForPlayerf(playerid, 700, 3, "Complated %i/30", ProcessColor);
		    			if(ProcessColor == 30)
		    			{
		     		        DeletePVar(playerid, "ProcessColor");
		    				ChangeVehicleColor(car, GetPVarInt(playerid,"balon"), GetPVarInt(playerid,"balon1"));
			    			CarInfo[number][cColor_1] = GetPVarInt(playerid,"balon");
			    			CarInfo[number][cColor_2] = GetPVarInt(playerid,"balon1");
			     			SaveOwnableCar(number);
			    		}
		    			return 1;
		    		}
	    		}
	    	}
		}
	}
	if(PRESSED(KEY_NO) && pTemp[playerid][pKladKey] == 1)
	{
		for(new i; i != sizeof(KladeInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y], KladeInfo[i][Klad_Z]))
			{
			    ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
			    pTemp[playerid][pKladProgress] += 3;
			    KladProg(playerid);
			    break;
			}
		}
	}
	if(PRESSED(KEY_YES) && pTemp[playerid][pKladKey] == 2)
	{
		for(new i; i != sizeof(KladeInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y], KladeInfo[i][Klad_Z]))
			{
			    ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
			    pTemp[playerid][pKladProgress] += 3;
			    KladProg(playerid);
			    break;
			}
		}
	}
	if(newkeys == KEY_WALK)
	{
		for(new i; i != sizeof(KladeInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, KladeInfo[i][Klad_X], KladeInfo[i][Klad_Y], KladeInfo[i][Klad_Z]))
			{
			    if(KladeInfo[i][kladStatus])
			    {
			        if(GetPlayerWeapon(playerid) == 6)
					{
						SPD(playerid, 3735, DIALOG_STYLE_MSGBOX, !"{FFFFFF}Выкопать | {DC4747}Клад","{FFFFFF}\n\nВы действительно желаете выкопать данный клад?\n\n", !"»", !"X");
						pTemp[playerid][pKladID][0] = i;
						break;
					}
					else
					{
						SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нету лопаты в руках, купить ее вы можете в ближайшем АЗС.");
						break;
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(GetPVarInt(playerid, !"mehan") == 2)
	    {
	        if(!IsPlayerInAnyVehicle(playerid))
	        {
		        new Float:Health;
		        foreach(new car : Vehicle)
			    {
			        new number = GetVehicleID(car);
			        GetVehiclePos(car,XYZ[0],XYZ[1],XYZ[2]);
			        if((IsPlayerInRangeOfPoint(playerid,20,214.7567,-231.1590,1.7749) || IsPlayerInRangeOfPoint(playerid,20,2107.3054,898.5052,10.9149)) && IsPlayerInRangeOfPoint(playerid,3,XYZ[0],XYZ[1],XYZ[2]))
			        {
			        	new dilo = GetPVarInt(playerid, !"dilo");
			            if(dilo == 0) return SPD(playerid,381,2,"Выбор работы","1. Отремонтировать авто\n2. Починить двигатель", !"Принять", !"Отмена");
			            if(dilo == 2 && !IsAOwnableCar(number)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Отремонтировать двигатель можно только личному транспорту!");
			            if(GetVehicleSeat(car, 0) == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете отремонтировать эту машину , потому что в ней никто не сидит!");
			            if(dilo == 1 && PI[GetVehicleSeat(car, 0)][pMoney]<600)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У игрока недостаточно денег чтобы оплатить работу!");
			            if(dilo == 2 && PI[GetVehicleSeat(car, 0)][pMoney]<22000)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У игрока недостаточно денег чтобы оплатить работу!");
			            if(dilo == 1)
			            {
							GetVehicleHealth(car,Health);
							if(Health > 950.0)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта машина не сломана!");
						}
						if(IsAPlane(car)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете починить воздушный транспорт.");
						if(dilo == 2 && CarInfo[number][cMilage] < 100) return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Двигатель этого авто в полном порядке!");
				        SeccureAnimation(playerid, "SWORD", "sword_block");
				        SetPVarInt(playerid, "ProcessCar", GetPVarInt(playerid, !"ProcessCar") + 1);
				        new ProcessCar = GetPVarInt(playerid, !"ProcessCar");
	     				if(dilo == 1)
						{
							SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "Чинит машину %i/45", ProcessCar);
							GameTextForPlayerf(playerid, 700, 3, "Complated %i/45", ProcessCar);
							if(ProcessCar == 45)
							{
		     					foreach(new i: Player)
		     					{
		     					   if(GetPlayerState(i) == 2 && (IsPlayerInRangeOfPoint(playerid,20,214.7567,-231.1590,1.7749) || IsPlayerInRangeOfPoint(playerid,20,2107.3054,898.5052,10.9149)))
		     					   {
		     					    	if(GetPlayerVehicleID(i) == car)
		     					    	{
											if(GetVehicleSeat(car, 0) != INVALID_PLAYER_ID) GiveMoney(playerid,600);
											GiveMoney(i,-600);
											aml(50, i, PN(playerid), "ремонт транспорта", 600);
			     					        SCM(i, COLOR_GREY, !"[Информация] {FFFFFF}Двигатель вашего автомобиля успешно починили за $600!");
										}
		     					   }
		     					}
								DeletePVar(playerid, "dilo");
						        DeletePVar(playerid, "ProcessCar");
						        SetPlayerChatBubble(playerid, "Починил машину", COLOR_PURPLE, 10.0, 5000);
						        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы успешно починили машину!");
						        J_RepairVehicle(car);
							}
				 		}
				 		if(dilo == 2)//Купира (Сделать как на арз починка состояния)
						{
							SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "Ремонтирует двигатель %i/90", ProcessCar);
							GameTextForPlayerf(playerid, 700, 3, "Complated %i/90", ProcessCar);
							if(ProcessCar == 90)
							{
		     					foreach(new i: Player)
		     					{
		     					   if(GetPlayerState(i)==2 && (IsPlayerInRangeOfPoint(playerid,20,214.7567,-231.1590,1.7749) || IsPlayerInRangeOfPoint(playerid,20,2107.3054,898.5052,10.9149)))
		     					   {
		     					    	if(GetPlayerVehicleID(i) == car)
		     					    	{
		     					    	    if(GetVehicleSeat(car, 0) != INVALID_PLAYER_ID) GiveMoney(playerid, 20000);
											GiveMoney(i, -22000);
											aml(50, i, PN(playerid), "ремонт двигателя и сброс пробега", 20000);
											aml(52, i, PN(playerid), "ремонт двигателя и сброс пробега < разница", 2000);
			     					        SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Двигатель вашего автомобиля успешно отремонтировали за $22 000!");
			     					        SCM(i, COLOR_VALIK, !"[Информация] {FFFFFF}Пробег вашего авто уменьшился на 100 км.");
			     					        SetEngineStatus(car, false, playerid);
										}
		     					   }
		     					}
		     					DeletePVar(playerid, "dilo");
						        DeletePVar(playerid, "ProcessCar");
						        SetPlayerChatBubble(playerid, "Починил двигатель", COLOR_PURPLE, 10.0, 5000);
						        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы успешно починили двигатель автомобиля!");
						        CarInfo[number][cMilage] -=100.0;
							}
						}
					}
				}
		    }
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.5, -1505.3370, 2718.0195, 1500.9674))
		{
		    if(PI[playerid][pFamilyMember] != -1)
			{
				if(FamilyInfo[PI[playerid][pFamilyMember]][famEatFish])
				{
				    SPD(playerid, 5008, DIALOG_STYLE_LIST, !"{C0BCBB}Выберите еду",
					"\
					    {43C12A}- {FFFFFF}Жареная рыба\n\
					    {43C12A}- {FFFFFF}Выреная рыба\n\
					    {43C12A}- {FFFFFF}Запеченная тилапия с сыром\n\
					    {43C12A}- {FFFFFF}Пирог с рыбой\n\
					    {43C12A}- {FFFFFF}Скумбрия домашнего копчения\n\
					    {43C12A}- {FFFFFF}Запечённая щука\n\
					    {43C12A}- {FFFFFF}Красная рыба с кукурузой гриль\
					",
				   !"Выбор",
				   !"Отмена");
				}
				else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вашей семьи нет улучшения 'Рыбный цех'");
			}
			else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
		}
	}
	if(!Cuffed{playerid})
	{
        if(TheftCarID[playerid] != 0)
		{
		    new carid = TheftCarID[playerid];
		    new Float:X,Float:Y,Float:Z;
		    GetVehiclePos(carid, X, Y, Z);
			if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
			{
			    if(!TheftTime[playerid])
			    {
					if(TheftKey[playerid] != 0 && PRESSED(TheftKey[playerid]))
				    {
					    TheftCount[playerid] ++;
					    ShowPlayerActionText(playerid, "~g~Succes!");
	    				ShowPlayerActionBand(playerid, TheftCount[playerid], 10);
				       	if(TheftCount[playerid] >= 10)
					   	{
						   	TheftTime[playerid] = 2;
						   	ApplyAnimation(playerid,"GANGS","prtial_gngtlkB",4.1, 0, 1, 1, 1, 0, 1);
						}
					    else
						{
							TheftTime[playerid] = 3;
							ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1, 0, 1, 1, 1, 0, 1);
						}
					}
					else
				    {
				        if(!RELEASED(TheftKey[playerid]))
				        {
							TheftKey[playerid] = 0;
							TheftTime[playerid] = 0;
							TheftCount[playerid] = 0;
							TheftCarID[playerid] = 0;
							TogglePlayerControllable(playerid, true);
							HidePlayerActionText(playerid);
	    					HidePlayerActionBand(playerid);
						}
					}
					new rand1 = random(10),rand2 = random(10);
					if(rand1 == rand2)
					{
					    InvAdd(playerid, Item_BreakCar, -1);
					    aml(102, playerid, "", "сломал отмычку", Item_BreakCar, 1);
					    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Вы сломали отмычку!");
					    GameTextForPlayer(playerid, !"break", 0, 1);
					    TheftKey[playerid] =
						TheftTime[playerid] =
						TheftCount[playerid] =
						TheftCarID[playerid] = 0;
						TogglePlayerControllable(playerid, true);
						HidePlayerActionText(playerid);
	    				HidePlayerActionBand(playerid);
					}
				}
			}
		}
	}
	else if(Cuffed{playerid})
	{
	    if(!CuffedTime[playerid])
		{
			if(!pTemp[playerid][BreakTime])
			{
				if(pTemp[playerid][BreakKey] != 0)
				{
					if(PRESSED(pTemp[playerid][BreakKey]))
					{
						pTemp[playerid][BreakCount] ++;
						ShowPlayerActionText(playerid, "~g~Succes!");
	    				ShowPlayerActionBand(playerid, pTemp[playerid][BreakCount], 10);
						if(pTemp[playerid][BreakCount] >= 10)
						{
							InvAdd(playerid, Item_Clips, -1);
							aml(102, playerid, "", "взломал наручники", Item_Clips, 1);
							SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно взломали наручники");
							UnCuffPlayer(playerid);
					        if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID)
					        {
	                            CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
								CheckPlayerGoCuff(playerid);
							}
						}
						else pTemp[playerid][BreakTime] = 2;
					}
					else
					{
						pTemp[playerid][BreakTime] = 2;
						ShowPlayerActionText(playerid, "~r~Fail!");
					}
				}
			}
		}
	}
 	if(newkeys & KEY_WALK && !IsPlayerInAnyVehicle(playerid))
	{
		if(CuffedTime[playerid] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы обездвижены и не можете двигаться");
	    if(GetPlayerWeapon(playerid) == 0)
	    {
	        new player = GetPlayerTargetPlayer(playerid);
	        if(player != INVALID_PLAYER_ID)
	        {
	            if(ProxDetectorS(3.0, playerid, player, 1))//Купира (Доделать)
	            {
		            ClickedPlayerID[playerid] = player;
		            ClickedState[playerid] = -1;
              		//for(new A; A < 12; A++) TextDrawShowForPlayer(playerid, IconsMenu[A]);
					SelectTextDraw(playerid, 0xFF9933FF);
					return 1;
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
			}
 		}
	    if(InfoHouse[playerid] != -1)
	    {
	        new i = InfoHouse[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[i][hEnter_X],HouseInfo[i][hEnter_Y],HouseInfo[i][hEnter_Z]))
		    {
      			if(HouseInfo[i][hLock]>0 && !IsACop(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Дверь закрыта, невозможно зайти");
      			if(IsAPlayerHouse(playerid, i))
      			{
	      			SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Используйте /house для управления домом.");
	      			SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Используйте /med чтобы использовать аптечку из дома!");
			    }
		      	HouseEntered[playerid] = i;
		      	InfoHouse[playerid] = -1;
		      	TextDrawHideForPlayer(playerid, HInfoBG);
				for(new j; j < 6; j ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][j]);
				TextDrawHideForPlayer(playerid, HInfoEnterDraw);
				TextDrawHideForPlayer(playerid, HInfoBuyDraw);
		      	SetPlayerInterior(playerid,HouseInfo[i][hInt]);
		      	SetPlayerVirtualWorld(playerid,(i+50));
		      	return J_SetPlayerPos(playerid,HouseInfo[i][hExit_X],HouseInfo[i][hExit_Y],HouseInfo[i][hExit_Z]);
  			}
  			else InfoHouse[playerid] = -1;
	    }
	    if(HouseEntered[playerid] != -1)
	    {
	        new i = HouseEntered[playerid];
	        if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z]))
	        {
         		if(GetPlayerVirtualWorld(playerid) == (i+50))
         		{
					callcmd::exit(playerid);
		         	return 1;
         		}
	        }
	    }
	    if(InfoBiz[playerid] != -1)
	    {
	        new i = InfoBiz[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]))
			{
				EnterBiz(playerid, i);
				InfoBiz[playerid] = -1;
				TextDrawHideForPlayer(playerid, HInfoBG);
				for(new j; j < 6; j ++) PlayerTextDrawHide(playerid, HInfoDraw[playerid][j]);
				TextDrawHideForPlayer(playerid, HInfoEnterDraw);
				TextDrawHideForPlayer(playerid, HInfoBuyDraw);
				return 1;
			}
			else InfoBiz[playerid] = -1;
	    }
	    if(BizEntered[playerid] != -1)
	    {
	        new i = BizEntered[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bExit_X],BizInfo[i][bExit_Y],BizInfo[i][bExit_Z]))
			{
				BizEntered[playerid] = -1;
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				J_SetPlayerPos(playerid,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]);
				return 1;
			}
		}
	}
	if(PRESSED(1032))
	{
	    if(PI[playerid][pShield] > 0)
		{
		    if(!UsingShield[playerid])
			{
			    ResetShield[playerid] = 20;
			    UsingShield[playerid] = true;
			    if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
				ApplyAnimation(playerid, "PED", "WEAPON_CROUCH", 4.1, 0, 1, 1, 1, 0, 0);
			}
			else
			{
			    if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
			    UsingShield[playerid] = false;
			    ClearAnims(playerid);
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new carid = GetPlayerVehicleID(playerid);
	    new model = (GetVehicleModel(carid)-400);
	    if(GetPlayerState(playerid) == 2)
	    {
	        if(IsACar(carid) && GetEngineStatus(carid))
	        {
		        if(PRESSED(KEY_ANALOG_LEFT))
				{
					DestroyDynamicObject(LightsObject[carid][0]);
		            DestroyDynamicObject(LightsObject[carid][1]);
		            LightsObject[carid][0] = -1;
		            LightsObject[carid][1] = -1;
				    if(Signal[carid] == 1)
		            {
		                SignalTick[carid][0] = 0;
		                SignalTick[carid][1] = -1;
		                Signal[carid] = 0;
		                SetPlayerChatBubble(playerid, "Включил левый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    else
				    {
				        LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, -LightsPos[GetVehicleModelBogdan(model)][0], LightsPos[GetVehicleModelBogdan(model)][1], LightsPos[GetVehicleModelBogdan(model)][2], 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, -LightsPos[GetVehicleModelBogdan(model)][3], LightsPos[GetVehicleModelBogdan(model)][4], LightsPos[GetVehicleModelBogdan(model)][5], 0, 0, 0);
				        GetVehicleZAngle(carid, SignalAngle[carid]);
				        SignalTick[carid][0] = 0;
				        SignalTick[carid][1] = -1;
				    	Signal[carid] = 1;
				    }
				    return 1;
				}
				else if(PRESSED(KEY_ANALOG_RIGHT))
				{
				    DestroyDynamicObject(LightsObject[carid][0]);
		            DestroyDynamicObject(LightsObject[carid][1]);
		            LightsObject[carid][0] = -1;
		            LightsObject[carid][1] = -1;
				    if(Signal[carid] == 2)
		            {
		                SignalTick[carid][0] = 0;
		                SignalTick[carid][1] = -1;
				        //PlayerSignalOFF(playerid);
		                Signal[carid] = 0;
		                SetPlayerChatBubble(playerid, "Включил правый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    else
				    {
						LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, LightsPos[GetVehicleModelBogdan(model)][0], LightsPos[GetVehicleModelBogdan(model)][1], LightsPos[GetVehicleModelBogdan(model)][2], 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, LightsPos[GetVehicleModelBogdan(model)][3], LightsPos[GetVehicleModelBogdan(model)][4], LightsPos[GetVehicleModelBogdan(model)][5], 0, 0, 0);
				        GetVehicleZAngle(carid, SignalAngle[carid]);
				        SignalTick[carid][0] = 0;
				        SignalTick[carid][1] = -1;
				    	Signal[carid] = 2;
				    }
				    return 1;
				}
			}
			if(GetPlayerState(playerid) == 2)
			{
				if(newkeys & KEY_SUBMISSION)
				{
				    switch(vTemp[carid][vJob])
				    {
				        case 1:
				        {
				            if(rabden[playerid] == 1) SPD(playerid,RABOTABUS+5,0,"Работодатель","Вы действительно хотите начать?","Да","Нет");
					    	else SPD(playerid,RABOTABUS+5,0,"Работодатель","Вы действительно хотите завершить?","Да","Нет");
				        }
				        case 5: callcmd::taxi(playerid,"");
				    }
				}
			}
			if(PRESSED(KEY_ACTION)) return callcmd::lights(playerid);
	        if(PRESSED(KEY_SUBMISSION))
	        {
			    if(IsACopCar(carid) && IsACop(playerid))
			    {
				    if(vTemp[carid][CarStrips] > 0)
				    {
						if(StripCount < 50)
						{
							if(vTemp[carid][StripObject] == -1)
							{
							    vTemp[carid][StripObject] = CreateDynamicObject(2899,0,0,0,0,0,0);
							    AttachDynamicObjectToVehicle(vTemp[carid][StripObject], carid, 0.0, -2.2, -0.3, 0.0, 0.0, 90.0);
								SCM(playerid, COLOR_GREY, !"Сбрасывание шипов...");
								if(IsPlayerInVehicle(playerid, carid))
								{
								    if(vTemp[carid][CarStrips] > 0)
								    {
										if(StripCount < MAX_STRIPS)
										{
											new Float:X,Float:Y,Float:Z,Float:A;
											GetVehicleShiftPos(carid, 1, X, Y, Z, 3.0);
											GetVehicleZAngle(carid, A);
											DestroyDynamicObject(vTemp[carid][StripObject]);
											vTemp[carid][StripObject] = CreateDynamicObject(2899, X, Y, Z-0.5, 0, 0, A-90);
											SetTimerEx("DestroyTempStrip", 10000, false, "ii", StripCount, carid);
											TStripPos[StripCount][0] = X;
											TStripPos[StripCount][1] = Y;
											TStripPos[StripCount][2] = Z-0.5;
											NoStrip[playerid] = StripCount;
											SetPlayerTimer(playerid,"PlayerUnStrip",1000,false);
											SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы сбросили полосу с шипами");
											PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
											vTemp[carid][CarStrips] --;
											f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Осталось шипов: %i",vTemp[carid][CarStrips]);
											SCM(playerid,COLOR_GREY,str_2);
											StripCount ++;
										}
										else
										{
										    DestroyDynamicObject(vTemp[carid][StripObject]);
											SCM(playerid, COLOR_GREY, !"По всему штату становлено более "#StripCount#" шипов, подождите немного...");
										}
									}
									else
									{
										SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На этом транспорте нет шипов");
										DestroyDynamicObject(vTemp[carid][StripObject]);
									}
								}
								else DestroyDynamicObject(vTemp[carid][StripObject]);
							}
							else SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Интервал сбрасывания полосы с шипами 10 секунд...");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}По всему штату установлено более 50 шипов, подождите немного...");
					}
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На этом транспорте нет шипов");
				}
				return 1;
			}
			if(PRESSED(KEY_NO))
			{
				callcmd::engine(playerid,"");
				return 1;
	    	}
		}
	}
	else
	{
	    if(PRESSED(KEY_NO))
	    {
			if(TazerPlayer[playerid] != INVALID_PLAYER_ID)
			{
			    new target = TazerPlayer[playerid];
			    if(IsPlayerConnected(target))
			    {
				    if(ProxDetectorS(1.5, playerid, target, 1))
				    {
				        callcmd::cuff(playerid, IntToStr(target));
				        return 1;
				    }
			    }
			    else TazerPlayer[playerid] = INVALID_PLAYER_ID;
			}
         	if(PI[playerid][pHeal] > 0)
	        {
             	if(Healttime[playerid]>gettime())return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	            if(!PlayerLie[playerid])
	            {
                    for(new i; i < sizeof(HealInfo); i ++)
                    {
		                if(IsPlayerInRangeOfPoint(playerid,1,HealInfo[i][hCP][0],HealInfo[i][hCP][1],HealInfo[i][hCP][2]) && GetPlayerVirtualWorld(playerid)==HealInfo[i][hWorld])
				        {
				            if(!GetString(HealInfo[i][hName],"The State")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта койка занята!");
							f(str_2,sizeof(str_2),"Койка{FF0000} [Занята]\n\n{FF9900}Пациент: {9ACD32}%s", PN(playerid));
							UpdateDynamic3DTextLabelText(HealText[i],-1,str_2);
							SetPlayerPos(playerid,HealInfo[i][hBed][0],HealInfo[i][hBed][1],HealInfo[i][hBed][2]+1);
                            ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 0, 1, 1, 1, 0, 1);
                            SetPlayerFacingAngle(playerid,HealInfo[i][hBed][3]);
                            PlayerBed[playerid] = i;
							PlayerLie[playerid] = true;
							SetString(HealInfo[i][hName],PN(playerid));
							SCM(playerid, COLOR_LIME, !"[Информация] {FFFFFF}Вы заняли койку. Чтобы встать с неё нажмите N ещё раз");
							Healttime[playerid]=gettime()+5;
							break;
				        }
			        }
	            }
	            else
	            {
	                Healttime[playerid]=gettime()+5;
	                new bed = PlayerBed[playerid];
	                Controllable{playerid} = true;
					TogglePlayerControllable(playerid, true);
					SetPlayerPos(playerid,HealInfo[bed][hCP][0],HealInfo[bed][hCP][1],HealInfo[bed][hCP][2]);
     				CheckBed(playerid);
					SetPlayerTimer(playerid, "ClearAnim", (GetPlayerPing(playerid)*2)+100, false);
	            }
	        }
	       	else if(InfoHouse[playerid] != -1)
	        {
				if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!"); 
				SetPVarInt(playerid, !"reloader", gettime()+5);
	        	if(PI[playerid][pLevel] < 5) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Покупать дом можно только с 5 уровня!");
	            new house = InfoHouse[playerid];
				new bool:cont=false;
			    if(HouseInfo[house][hLevel] != 10) { if(GetMoney(playerid) >= HouseInfo[house][hCost]) cont = true; }
				else if(HouseInfo[house][hLevel] == 10) { if(PI[playerid][pVirMoney] >= 12000) cont = true; }
	            if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hEnter_X],HouseInfo[house][hEnter_Y],HouseInfo[house][hEnter_Z]))
		    	{
		    		if(PI[playerid][pAdmin] > ADM_NONE && !PI[playerid][pAccessCMD][39]) return SCM(playerid, COLOR_LIGHTRED, "[Подсказка] {ffffff}Администрации нельзя ловить имущество!");
	           	 	if(IsValidPassport(playerid))
			    	{
				        if(GetPlayerHouses(playerid))
				        {
					        if(GetString(HouseInfo[house][hOwner],"The State"))
				     	    {
				     	        if(cont == true) Captch_OpenForPlayer(playerid, 1);
				     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			     	        }
			     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот дом уже куплен");
						}
						else
						{
							if(!PI[playerid][pMoreHouses]) SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше домов! Покупайте улучшение 'Больше недвижимости' чтобы иметь до 3-ёх домов!");
							else if(!PI[playerid][pMoreHouses] && PI[playerid][pVIP] != 5) SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Улучшение 'Больше недвижимости' + 'ПРЕМИУМ ВИП' дадут возможность иметь до 7-ми домов!");
							else if(PI[playerid][pVIP] != 5) SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - 'ПРЕМИУМ ВИП' даст возможность иметь до 4-ёх домов!");
							else if(PI[playerid][pVIP] != 6)
							{
								str_1 = Mode_City_Caps;
								SCMf(playerid, COLOR_GREEN, ">>>>{FFFFFF} - {FFD700}%s VIP{FFFFFF} даст возможность иметь до 20-ти домов!", str_1);
							}
							else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - У вас уже максимальное количество домов!");
						}
					}
	     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет паспорта, получить его можно в мэрии");
	     	    }
	     	    else InfoHouse[playerid] = -1;
	        }
	        else if(InfoBiz[playerid] != -1)
	        {
				if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!"); 
				SetPVarInt(playerid, !"reloader", gettime()+5);
	        	if(PI[playerid][pLevel] < 5) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Покупать бизнес можно только с 5 уровня!");
	            new biz = InfoBiz[playerid];
	            new bool:cont=false;
			    if(BizInfo[biz][bState] == 19) 
			    { 
			    	if(PI[playerid][pDonateMoney] >= BizInfo[biz][bCost]) cont = true; 
				}
			    else if(BizInfo[biz][bCost] != 0) 
			    { 
			    	if(GetMoney(playerid) >= BizInfo[biz][bCost]) cont = true; 
				}
				else if(BizInfo[biz][bCost] == 0) 
				{ 
					if(PI[playerid][pVirMoney]>=500000) cont = true; 
				}
	            if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z]))
		    	{
		    		if(PI[playerid][pAdmin] > ADM_NONE && !PI[playerid][pAccessCMD][39]) return SCM(playerid, COLOR_LIGHTRED, "[Подсказка] {ffffff}Администрации нельзя ловить имущество!");
		        	if(GetPlayerBizes(playerid))
		        	{
				        if(GetString(BizInfo[biz][bOwner],"The State"))
			     	    {
							if(cont == true) Captch_OpenForPlayer(playerid, 2);
			     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		     	        }
		     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
	     	        }
					else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
	     	    }
	     	    else InfoBiz[playerid] = -1;
	        }
	        else if(IsPlayerInRangeOfPoint(playerid, 2.5, -2683.9232, 807.4161, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2676.5600, 807.4161, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2669.0400, 807.4161, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4729, 805.8691, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4665, 799.2879, 1500.9094) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, -2666.4139, 792.5835, 1500.9094) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, 495.2409,1305.6490,774.4839) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, 495.2459,1307.4744,774.4839)||
			IsPlayerInRangeOfPoint(playerid, 2.0, 495.2454,1309.2797,774.4839)||
			IsPlayerInRangeOfPoint(playerid, 2.0, 495.2461,1311.0074,774.4839) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, 495.2460,1312.8225,774.4839) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, 951.8005, 2458.6746, 1601.9771) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, 954.9710,2463.5288,1601.9771) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, 946.6893,2456.3723,1601.9771))return ShowBankMenu(playerid);
			else if(IsAtBankomat(playerid,2.0)) return ShowBankMenu(playerid);
			else
			{
				if(BizEntered[playerid] != -1)
				{
					if(BizInfo[BizEntered[playerid]][bState] == B_BUY)
					{
	    			 	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2580.1340,1424.8770,1800.9688))
	    			 	{
						    f(str_2, sizeof(str_2), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать\n{42B02C}- {FFFFFF}Оплата: %s", PI[playerid][pVID] ? ("{E5D02D}Кредиткой") : ("{E5D02D}Наличкой"));
							SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str_2, !"Выбор", !"Отмена");
	    			 	}
    			 	}
    			 	else if(BizInfo[BizEntered[playerid]][bState] == B_GAS)
    			 	{
						if(IsPlayerInRangeOfPoint(playerid, 3.0, 665.9590,-567.7969,1700.7394)) SPD(playerid,93,5,"{e4db5e}Магазин",BUY_MENU_MEHAN,"Купить","Отмена");
    			 	}
				}
	        }
	        return 1;
	    }
	}
    if(GetPlayerWeapon(playerid)==9)
    {
        if(!IsPlayerInRangeOfPoint(playerid,100,585.11108, 246.06941, 16.49663) && !IsPlayerInRangeOfPoint(playerid,20,1045.4690,-312.4203,73.9931))
        {
            NoEnterPickup[playerid] =7;
            TogglePlayerControllable(playerid,false);
            SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы используете бензопилу не по назначению! Использовать ее вы можете в месте где растут ёлки!", !"Принять", !"");
        }
    }
    return 1;
}
public OnPlayerUpdate(playerid)
{
    if(IsPlayerLogged{playerid})
    {
		if(PlayerAFKTime[playerid] > 10)
		{
			if(PlayerAFKTime[playerid] <= MAX_AFK_TIME) SCMf(playerid, -1, "{FFFFFF}Вы простояли в AFK {FF9900}%s.",Convert(PlayerAFKTime[playerid]));
			else SCMf(playerid, -1, "{FFFFFF}Вы простояли в AFK {FF9900}%s. {FFFFFF}Из них {FF9900}%s{FFFFFF} не засчитаны!",Convert(PlayerAFKTime[playerid]), Convert(PlayerAFKTime[playerid]-MAX_AFK_TIME));
			SetPlayerChatBubble(playerid, " ", -1, 30.0, 1);
		}

		PlayerAFK[playerid] = 0;
		PlayerAFKTime[playerid] = 0;
			
		if(IsABot(playerid) && !PlayerSetBotLvl{playerid} && !Osnovat(PN(playerid)))
		{
			SetPlayerScore(playerid, randomEx(5, 41));
			PlayerSetBotLvl{playerid} = true;
		}
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	static inputtextsave[256], str[4096], str2[4096], inputtext2[256];
	inputtextsave[0] = EOS, str[0] = EOS, str2[0] = EOS, str_2[0] = EOS, str_1[0] = EOS, inputtext2[0] = EOS;
	if(strlen(inputtext)) SetString(inputtext2, inputtext);
	for(new i; i < strlen(inputtext); i++)
	{
		switch(inputtext[i])
		{
			case 'A'..'Z', 'a'..'z', 'А'..'Я', 'а'..'я', '0'..'9', ' ', '>', '<', '(', ')', '/', '+', '-', '_', '?', '!', '.', ',', '@', ':','"':continue;
			default: inputtext[i] = EOS;
		}
	}
	if(strlen(inputtext)) mysql_escape_string(inputtext, inputtextsave);
	//SCMf(playerid, -1, "%s", inputtextsave);
	if(pmID[playerid] != INVALID_PLAYER_ID)
	{
		SCMf(pmID[playerid], COLOR_LIGHTBLUE, "[PM] Игрок %s[%i] прочитал ваш ответ и закрыл диалог.", PN(playerid), playerid);
		pmID[playerid] = INVALID_PLAYER_ID;
	}
	switch(dialogid)
	{
		case 10209:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0: {
					if(DmZonePlayed[playerid] == true) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже находитесь в данной DM-зоне.");
					if(GetPlayerInterior(playerid) > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не должны находиться в интерьере.");
					if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не должны находиться в транспорте/слежке.");
					if(PI[playerid][pJailTime] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь в деморгане."); 

					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы вошли в DM-зону - Деревня-1.");
					DmZoneSpawn(playerid);
				}
				case 1: mysql_tquery(mysql, "SELECT `NickName`,`DmKill`,`DmDeath` FROM `Qelksekm` WHERE `DmKill` > '1' ORDER BY `DmKill` DESC LIMIT 15", "MysqlTopDm", "d", playerid);
				case 2: {
					format(str_1, 500, "\t{FFFFFF}Личная статистика\n\n{FFFFFF}Ник: {B03131}%s\n{FFFFFF}Убийств: {B03131}%d\n{FFFFFF}Смертей: {B03131}%d", PN(playerid), PI[playerid][pDmZoneKill], PI[playerid][pDmZoneDeath]);
					SPD(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFFFFF}DM-зоны | {BE2D2D}Личная статистика", str_1, "x", "");
				}
				case 3: {
					if(DmZonePlayed[playerid] == false) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не находитесь в DM-зоне.");

					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы покинули DM-зону - Деревня-1.");
					DmZoneExit(playerid);
				}
			}
			return 1;
		}
 		case 1503:
		{
			if(!response) return ShowUpdateSettings(playerid);
			switch(listitem)
			{
			    case 0:
			    {
					format(str_1, 500, "\
					{FFFFFF}Тип\t{FFFFFF}Статус\n\
					{FFFFFF}Обычный\t%s\n\
					{FFD700}[NEW]{FFFFFF} Клиентский №1\t%s\n\
					{FFD700}[NEW]{FFFFFF} Клиентский №2\t%s", (PI[playerid][pCustomArizona][0] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][0] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][0] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
			    	ShowPlayerDialog(playerid, 1504, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Спидометр", str_1, "»", "«");
			    }
			    case 1:
			    {
					format(str_1, 500, "\
					{FFFFFF}Тип\t{FFFFFF}Статус\n\
					{FFFFFF}Обычный\t%s\n\
					{FFD700}[NEW]{FFFFFF} Клиентский №1\t%s\n\
					{FFD700}[NEW]{FFFFFF} Клиентский №2\t%s", (PI[playerid][pCustomArizona][1] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][1] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][1] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
			    	ShowPlayerDialog(playerid, 1505, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Худ", str_1, "»", "«");
			    }
			    case 2:
			    {
					format(str_1, 500, "\
					{FFFFFF}Тип\t{FFFFFF}Статус\n\
					{FFFFFF}Обычный\t%s\n\
					{FFD700}[NEW]{FFFFFF} Клиентский №1\t%s\n\
					{FFD700}[NEW]{FFFFFF} Клиентский №2\t%s", (PI[playerid][pCustomArizona][2] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][2] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][2] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
			    	ShowPlayerDialog(playerid, 1506, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Радар", str_1, "»", "«");
			    }
			    case 3: {
					if(PI[playerid][pCustomArizona][3] == 1) PI[playerid][pCustomArizona][3] = 0;
					else PI[playerid][pCustomArizona][3] = 1;
					UpdatePlayerDataInt(playerid, "ArizonaCustom4", PI[playerid][pCustomArizona][3]);
					Interface_Arizona(playerid, Arz_Hints, PI[playerid][pCustomArizona][3]);
					return ShowInterfaceCustomization(playerid);
				}
				case 4: {
					if(PI[playerid][pCustomArizona][4] == 1) PI[playerid][pCustomArizona][4] = 0;
					else PI[playerid][pCustomArizona][4] = 1;
					UpdatePlayerDataInt(playerid, "ArizonaCustom5", PI[playerid][pCustomArizona][4]);
					Interface_Arizona(playerid, Arz_TransparentChat, PI[playerid][pCustomArizona][4]);
					return ShowInterfaceCustomization(playerid);
				}
				case 5: {
					if(PI[playerid][pCustomArizona][5] == 1) PI[playerid][pCustomArizona][5] = 0;
					else PI[playerid][pCustomArizona][5] = 1;
					UpdatePlayerDataInt(playerid, "ArizonaCustom6", PI[playerid][pCustomArizona][5]);
					Interface_Arizona(playerid, Arz_SaveDialog, PI[playerid][pCustomArizona][5]);
					return ShowInterfaceCustomization(playerid);
				}
				case 6: {
					if(PI[playerid][pCustomArizona][6] == 1) PI[playerid][pCustomArizona][6] = 0;
					else PI[playerid][pCustomArizona][6] = 1;
					UpdatePlayerDataInt(playerid, "ArizonaCustom7", PI[playerid][pCustomArizona][6]);
					Interface_Arizona(playerid, Arz_NewNametag, PI[playerid][pCustomArizona][6]);
					return ShowInterfaceCustomization(playerid);
				}
				case 7: {
					if(PI[playerid][pCustomArizona][7] == 1) PI[playerid][pCustomArizona][7] = 0;
					else PI[playerid][pCustomArizona][7] = 1;
					UpdatePlayerDataInt(playerid, "ArizonaCustom8", PI[playerid][pCustomArizona][7]);
					Interface_Arizona(playerid, Arz_Snow, PI[playerid][pCustomArizona][7]);
					return ShowInterfaceCustomization(playerid);
				}
				case 8: {
					format(str_1, 500, "\
					{FFFFFF}Тип\t{FFFFFF}Статус\n\
					{FFFFFF}Полный\t%s\n\
					{FFD700}[NEW]{FFFFFF} Упрощенный\t%s\n\
					{FFD700}[NEW]{FFFFFF} Простой\t%s", (PI[playerid][pCustomArizona][8] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][8] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][8] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
			    	ShowPlayerDialog(playerid, 1507, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Рендер диалогов", str_1, "»", "«");
				}
			}
		}
		case 1504:
		{
		    if(!response) return ShowInterfaceCustomization(playerid);

		    if(PI[playerid][pCustomArizona][0] != listitem)
			{
			    if(listitem == 0)
				{
					Interface_Arizona(playerid, Arz_Speedometer, 0);
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        new carid = GetPlayerVehicleID(playerid);
                        if(!IsAVelik(carid) && !IsAPlane(carid))
                        {
                            if(!InventStatus{playerid}) HideSpeedometr(playerid);
                            if(!InventStatus{playerid}) ShowSpeedometr(playerid);
                        }
                    }

                    PI[playerid][pCustomArizona][0] = listitem;
				}
			    if(listitem == 1)
				{
				    if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

					HideSpeedometr(playerid);
     				Interface_Arizona(playerid, Arz_Speedometer, 1);

     				PI[playerid][pCustomArizona][0] = listitem;
				}
				if(listitem == 2)
				{
				    if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

    				HideSpeedometr(playerid);
     				Interface_Arizona(playerid, Arz_Speedometer, 2);

     				PI[playerid][pCustomArizona][0] = listitem;
				}
       			UpdatePlayerDataInt(playerid, "ArizonaCustom1", PI[playerid][pCustomArizona][0]);
			}
			format(str_1, 500, "\
			{FFFFFF}Тип\t{FFFFFF}Статус\n\
			{FFFFFF}Обычный\t%s\n\
			{FFFFFF}Продвинутый\t%s\n\
			{FFD700}[NEW]{FFFFFF} Клиентский №1\t%s\n\
			{FFD700}[NEW]{FFFFFF} Клиентский №2\t%s", (PI[playerid][pCustomArizona][0] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][0] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][0] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][0] == 3) ? "{9ACD32}Включен" : "{FF6347}Выключен");
	    	ShowPlayerDialog(playerid, 1504, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Спидометр", str_1, "»", "«");
		}
		case 1505:
		{
		    if(!response) return ShowInterfaceCustomization(playerid);

		    if(listitem == 0)
		    {
		        PI[playerid][pCustomArizona][1] = listitem;
				Interface_Arizona(playerid, Arz_Hud, 0);
			    ShowLogo(playerid);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom2", PI[playerid][pCustomArizona][1]);
		    }
		    else if(listitem == 1)
		    {
		        if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

                PI[playerid][pCustomArizona][1] = listitem;
				Interface_Arizona(playerid, Arz_Hud, 1);
				PI[playerid][pHungryShow] = 0;
				UpdatePlayerDataInt(playerid, "HungryShow", PI[playerid][pHungryShow]);
                Hunger(playerid, PI[playerid][pHungryShow]);
			    if(PI[playerid][pCustomArizona][1] != 2 || PI[playerid][pCustomArizona][1] != 1) HideLogo(playerid);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom2", PI[playerid][pCustomArizona][1]);
			}
			else if(listitem == 2)
			{
			    if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

                PI[playerid][pCustomArizona][1] = listitem;
				Interface_Arizona(playerid, Arz_Hud, 2);
                PI[playerid][pHungryShow] = 0;
				UpdatePlayerDataInt(playerid, "HungryShow", PI[playerid][pHungryShow]);
                Hunger(playerid, PI[playerid][pHungryShow]);
    			if(PI[playerid][pCustomArizona][1] != 2 || PI[playerid][pCustomArizona][1] != 1) HideLogo(playerid);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom2", PI[playerid][pCustomArizona][1]);
			}
			format(str_1, 500, "\
			{FFFFFF}Тип\t{FFFFFF}Статус\n\
			{FFFFFF}Обычный\t%s\n\
			{FFD700}[NEW]{FFFFFF} Клиентский №1\t%s\n\
			{FFD700}[NEW]{FFFFFF} Клиентский №2\t%s", (PI[playerid][pCustomArizona][1] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][1] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][1] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
	    	ShowPlayerDialog(playerid, 1505, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Худ", str_1, "»", "«");
		}
		case 1506:
		{
		    if(!response) return ShowInterfaceCustomization(playerid);

		    if(listitem == 0)
		    {
		        PI[playerid][pCustomArizona][2] = listitem;
				Interface_Arizona(playerid, Arz_Radar, 0);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom3", PI[playerid][pCustomArizona][2]);
		    }
		    else if(listitem == 1)
		    {
		        if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

		        PI[playerid][pCustomArizona][2] = listitem;
				Interface_Arizona(playerid, Arz_Radar, 1);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom3", PI[playerid][pCustomArizona][2]);
		    }
		    else if(listitem == 2)
			{
			    if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

				PI[playerid][pCustomArizona][2] = listitem;
				Interface_Arizona(playerid, Arz_Radar, 2);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom3", PI[playerid][pCustomArizona][2]);
			}
			format(str_1, 500, "\
			{FFFFFF}Тип\t{FFFFFF}Статус\n\
			{FFFFFF}Обычный\t%s\n\
			{FFD700}[NEW]{FFFFFF} Клиентский №1\t%s\n\
			{FFD700}[NEW]{FFFFFF} Клиентский №2\t%s", (PI[playerid][pCustomArizona][2] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][2] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][2] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
	    	ShowPlayerDialog(playerid, 1506, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Радар", str_1, "»", "«");
		}
		case 1507:
		{
		    if(!response) return ShowInterfaceCustomization(playerid);

		    if(listitem == 0)
		    {
		        PI[playerid][pCustomArizona][8] = listitem;
				Interface_Arizona(playerid, Arz_RenderDialog, 0);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom9", PI[playerid][pCustomArizona][8]);
		    }
		    else if(listitem == 1)
		    {
		        if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

		        PI[playerid][pCustomArizona][8] = listitem;
				Interface_Arizona(playerid, Arz_RenderDialog, 1);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom9", PI[playerid][pCustomArizona][8]);
		    }
		    else if(listitem == 2)
			{
			    if(!GetLauncherStatus(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Ошибка] Данный пункт доступен только для игроков с лаунчером!");

				PI[playerid][pCustomArizona][8] = listitem;
				Interface_Arizona(playerid, Arz_RenderDialog, 2);
       			UpdatePlayerDataInt(playerid, "ArizonaCustom9", PI[playerid][pCustomArizona][8]);
			}
			format(str_1, 500, "\
			{FFFFFF}Тип\t{FFFFFF}Статус\n\
			{FFFFFF}Полный\t%s\n\
			{FFD700}[NEW]{FFFFFF} Упрощенный\t%s\n\
			{FFD700}[NEW]{FFFFFF} Простой\t%s", (PI[playerid][pCustomArizona][8] == 0) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][8] == 1) ? "{9ACD32}Включен" : "{FF6347}Выключен", (PI[playerid][pCustomArizona][8] == 2) ? "{9ACD32}Включен" : "{FF6347}Выключен");
	    	ShowPlayerDialog(playerid, 1507, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Выбор | {ae433d}Рендер диалогов", str_1, "»", "«");
		}
        case 151:
        {
			new biz = ShowPBiz[playerid];
            if(!response) return EditBizItemCost(playerid, biz, -1, 2), DeletePVar(playerid, "GetItemCost"), DeletePVar(playerid, "GetItemCostListItem");
            listitem = GetPVarInt(playerid, "GetItemCostListItem")-1;
   			static str_cost[30];
   			str_cost[0] = EOS;
   			GetPVarString(playerid, "GetItemCost", str_cost, 30);
   			DeletePVar(playerid, "GetItemCost"), DeletePVar(playerid, "GetItemCostListItem");
            if(strval(inputtextsave) < 100 || strval(inputtextsave) > 15000) return 1;
            BizInfo[biz][bItemCost][listitem] = strval(inputtextsave);
            SaveCostBiz(biz);
            EditBizItemCost(playerid, biz, -1, 2);
            SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно изменили стоимость продажи товара {C0C0C0}%s{FFFFFF} в вашем магазине.", str_cost);
            SCM(playerid, 0xFFFFFFFF, "Следите за ценами в других магазинах, чтобы у вас было дешевле.");
        }
		case 15270:
        {
            if(!response || AmountMiningVideoCard == 0) return 0;
            if(PI[playerid][pMiningBuyTime] > gettime())
			{
				if(PI[playerid][pMiningBuyTime] > 60) SCMf(playerid, COLOR_GREY, "Приобрести видеокарту можно раз в 10 мин. Купить можно через: %i минут.", PI[playerid][pMiningBuyTime]/60);
				else SCMf(playerid, COLOR_GREY, "Приобрести видеокарту можно раз в 10 мин. Купить можно через: %i секунд.", PI[playerid][pMiningBuyTime]);
				return 1;
			}
			if(GetMoney(playerid) < COST_MINING_CART) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
            GiveMoney(playerid, -COST_MINING_CART);
            PI[playerid][pMiningBuyTime] = gettime() + 600;
            UpdatePlayerDataInt(playerid, "MiningBuyTime", PI[playerid][pMiningBuyTime]);
            SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно купили видеокарту.");
            GiveBizMoney(BizEntered[playerid], COST_MINING_CART/10);
            InvAdd(playerid, 1248, 1);
            AmountMiningVideoCard --;
        }
		case 1024:
        {
            if(!response) return DeletePVar(playerid, "VideoCardSlot");
            if(!GetInvCount(playerid, 1249)) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}У вас недостаточно смазки для разгона видеокарты!");
            InvAdd(playerid, 1249, -1);
            switch(random(3))
            {
                case 0: ApplyAnimation(playerid, !"SCRATCHING", !"SCMID_L", 4.1, 1, 1, 1, 1, 1 );
                case 1: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_REACT_MISS", 4.1, 1, 1, 1, 1, 1 );
                case 2: ApplyAnimation(playerid, !"CASINO", !"DEALONE", 4.1, 1, 1, 1, 1, 1 );
            }
            SetTimerEx("UpdateMining", 5000, false, "d", playerid);
        }
        case 1023:
        {
            new house = HouseEntered[playerid];
            if(!response) return ShowMining(playerid, house);
			new list = GetPVarInt(playerid, "MiningListItem");
        	new total = GetMiningMenenger(GetVideoCardManagement(playerid)+1, list);
            if(HouseInfo[house][hMiningProfit][total] < 1.0) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Не достаточно BTC для вывода"), ShowMiningResponse(playerid, list);
            new Float:video = floatround(HouseInfo[house][hMiningProfit][total], floatround_floor), amount = floatround(video);
            HouseInfo[house][hMiningProfit][total]-= video;
            SCMf(playerid, COLOR_YELLOW, "Вы вывели {FFFFFF}%.0f BTC{FFFF00}, осталось на счету видеокарты: {FFFFFF}%f BTC{FFFF00}.", video, HouseInfo[house][hMiningProfit][total]);
            InvAdd(playerid, Item_Bitcoin, amount);
        }
        case 1022:
        {
            if(!response) return ShowMining(playerid, HouseEntered[playerid]), DeletePVar(playerid, "MiningListItem");
            new house = HouseEntered[playerid], list = GetPVarInt(playerid, "MiningListItem");
            new total = GetMiningMenenger(GetVideoCardManagement(playerid)+1, list);
            switch(listitem)
            {
                case 0:
                {
                    if(HouseInfo[house][hMiningStatus][total] == false && HouseInfo[house][hMiningState][total] < 100.0) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Чтобы включить видеокартку, необходимо восстановить её состояние системы охлаждения до 100% (залить жидкость)."), ShowMiningResponse(playerid, list);
                    HouseInfo[house][hMiningStatus][total] = !HouseInfo[house][hMiningStatus][total], ShowMiningResponse(playerid, list);
                }
                case 1:
                {
                    f(str_1, sizeof(str_1), "{FFFFFF}На выбраной видеокарте сейчас добыто {FFFF00}%f BTC{FFFFFF}.\n\
                    {FFFFFF}Поскольку вывод можна только целую часть прибыли,\n\
                    {FFFFFF}вы можете вывести сейчас только %.0f BTC{FFFFFF}.\n\n\
                    {FFFFFF}Вы действительно хотите вывести столько BTC?", HouseInfo[house][hMiningProfit][total], HouseInfo[house][hMiningProfit][total]);
                    SPD(playerid, 1023, DIALOG_STYLE_MSGBOX, "Вывод прибыли видеокарты", str_1, "Вывод", "Назад");
                }
                case 2:
                {
                    if(!GetInvCount(playerid, 1250)) return SCM(playerid, COLOR_RED, !"У вас недостаточно охлаждающей жидкости в инвентаре!");
                    InvAdd(playerid, 1250, -1);
                    HouseInfo[house][hMiningState][total] = 100.0;
                    SaveMining(house, 3);
                    SCM(playerid, 0x8AA37EFF, "Вы залили охлаждающую жидскость, состояние системы охлаждение восстановлено до 100%.{c4c3bc} (Не зубудьте запустить видеокарту)");
                    ShowMiningResponse(playerid, list);
                }
                case 3:
                {
                    //InvAddEx(playerid, 1434, 1, 0);
                    if(HouseInfo[house][hMiningProfit][total] >= 1.0) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Чтобы достать видеокартку, необходимо вывести всю прибыль, которую принесла эта видеокарта."), ShowMiningResponse(playerid, list);
                    if(HouseInfo[house][hMiningState][total] < 100.0) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Чтобы достать видеокартку, необходимо восстановить её состояние системы охлаждения до 100% (залить жидкость)."), ShowMiningResponse(playerid, list);
                    InvAdd(playerid, 1248, 1, 0, 0, 0, HouseInfo[house][hMiningLevel][total]);
                    HouseInfo[house][hMiningLevel][total] = 0;
                    HouseInfo[house][hMiningStatus][total] = false;
                    SaveMining(house, 0);
                    SaveMining(house, 2);
                    ShowMining(playerid, house);
                }
            }
        }
        case 1021:
        {
            if(!response) return PI[playerid][pVideoCartID] = -1;
            ShowMiningResponse(playerid, listitem);
        }
        case 1020:
        {
            if(!response) return DeletePVar(playerid, "VideoCardSlot"), PI[playerid][pVideoCartID] = -1;
            new house = HouseEntered[playerid], cart = GetVideoCardManagement(playerid), slot = GetPVarInt(playerid, "VideoCardSlot");
            //DeletePVar(playerid, "VideoCardSlot");
            new total = GetMiningMenenger(GetVideoCardManagement(playerid)+1, listitem);
            if(HouseInfo[house][hMiningLevel][total] == 0)
            {
                if(PI[playerid][pInvItemAmount][slot] < 1) return 1;
                HouseInfo[house][hMiningLevel][total] = PI[playerid][pInvItemMining][slot];
                SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно положили видеокарту на %i полку.", listitem+1);
                RefreshInv(playerid, slot);
            }
            else
            {
                if(HouseInfo[house][hMiningProfit][total] >= 1.0) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Чтобы достать видеокартку, необходимо вывести всю прибыль, которую принесла эта видеокарта.");
                if(HouseInfo[house][hMiningState][total] < 100.0) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Чтобы достать видеокартку, необходимо восстановить её состояние системы охлаждения до 100% (залить жидкость).");
                SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно сняли видеокарту с %i полки.", listitem+1);
                InvAdd(playerid, 1248, 1, 0, 0, 0, HouseInfo[house][hMiningLevel][total]);
                HouseInfo[house][hMiningLevel][total] = 0;
                HouseInfo[house][hMiningStatus][total] = false;
                SaveMining(house, 0);
                str_1[0] = EOS;
                for(new i; i < 4; i++) f(str_1, sizeof(str_1), "%s{FFFFFF}Полка №%i | {FFFFFF}%s\n", str_1, i+1, HouseInfo[house][hMiningLevel][i*cart] == 0 ? "Свободна" : "Занято");
                SPD(playerid, 1020, DIALOG_STYLE_TABLIST, "На какую полку установить видеокарту?", str_1, "Выбрать", "Зкрыть");
            }
            SaveMining(house, 2);
        }
		case FREE_DLG:
		{
			if(!response) return 1;
			new count, value;
			sscanf(inputtextsave,"p<,>dd", count, value);
			if(!count || !value) return callcmd::createcode(playerid);
			new players = Iter_Count(Player);
			if(count > players) count = players;
			CODE_COUNT = count;
			CODE_VALUE = value;
			CODE_CODE = randomEx(1, 1000001);
			SCMAllf(COLOR_RED, "[Внимание] {FFFF00}Только что был создан донат-код на %i AZ-RUB %i активаций, для активации: /code %i", value, count, CODE_CODE);
			SCMAllf(COLOR_RED, "[Внимание] {FFFF00}Только что был создан донат-код на %i AZ-RUB %i активаций, для активации: /code %i", value, count, CODE_CODE);
			SCMAllf(COLOR_RED, "[Внимание] {FFFF00}Только что был создан донат-код на %i AZ-RUB %i активаций, для активации: /code %i", value, count, CODE_CODE);
		}
		case 1218:
		{
			if(!response) return ShowInviteSettings(playerid);
			new rank = strval(inputtext);
			if(rank < 1 || rank > 9) return SPD(playerid, 1218, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите ранг: 1 - 9", !"Сохранить", !"Назад");
			OrgInfo[PI[playerid][pMember]][oInviteRank] = rank;
			SaveOrg(PI[playerid][pMember]);
			ShowInviteSettings(playerid);
		}
		case 1217:
		{
			if(!response) return 1;
			if(!listitem) {
				OrgInfo[PI[playerid][pMember]][oInvite] = !OrgInfo[PI[playerid][pMember]][oInvite];
				SaveOrg(PI[playerid][pMember]);
				ShowInviteSettings(playerid);	
			}
			else SPD(playerid, 1218, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите ранг: 1 - 9", !"Сохранить", !"Назад");
		}
		case 8998:
		{
			if(!response) return 0;
			if(!OrgInfo[listitem+1][oInvite]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На данный момент набор в эту фракцию закрыт!");
	        if(PI[playerid][pWarns]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На вашем аккаунте имеется варн!");
			if(GetPVarInt(playerid, !"reloader") > gettime()) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Подождите %i секунд!", GetPVarInt(playerid, !"reloader") - gettime());
	        SetPVarInt(playerid, !"reloader",gettime()+5);
	        PI[playerid][pMember] = listitem+1;
	        UpdatePlayerDataInt(playerid, "Member", PI[playerid][pMember]);
	        PI[playerid][pDCTime] = 2;
	        UpdatePlayerDataInt(playerid, "DCTime", 2);
	        SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	        PI[playerid][pRank] = OrgInfo[listitem+1][oInviteRank];
	        UpdatePlayerDataInt(playerid, "Rank", PI[playerid][pRank]);
	        PI[playerid][pFWarns] = 0;
	        UpdatePlayerDataInt(playerid, "FWarns", 0);
	        SendTeamMessagef(GetTeamID(playerid), COLOR_VALIK, "Приветствуем нового члена нашей организации %s, которого пригласил: Прораб Руслан.", PN(playerid));
	        InviteOffer[playerid] = INVALID_PLAYER_ID;
			ResetSpawnInfo(playerid, GetTeamID(playerid));
		    TeamDuty{playerid} = true;
		    SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
		    SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
		    TogglePlayerControllable(playerid, true);
		}
		case 8991:
		{
			if(!response) return 0;
			if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
			if(GetDonate(playerid) < 3000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
			GiveDonate(playerid, -3000);
			aml(54, playerid, "", "покупка репутации для семьи", 3000);
			FamilyInfo[PI[playerid][pFamilyMember]][famRep] += 1000;
			SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: приобрёл 1000 репутации для семьи!", FamColor, PN(playerid), playerid);
		}
		case 6235:
	    {
	        if(response)
			{
				new string[500];
		        SetPVarString( playerid, "captcha", GenerateCaptcha());

				new capstr[32];
				GetPVarString( playerid, "captcha", capstr, sizeof(capstr));

				DestroyPlayerTD(playerid, Textdrawa);
				DestroyPlayerTD(playerid, Textdrawb);
				DestroyPlayerTD(playerid, Textdrawf);

				Textdrawa = CreatePlayerTextDraw(playerid,372.666778, 113.914802, "usebox");
				PlayerTextDrawLetterSize(playerid,Textdrawa, 0.000000, 5.168108);
				PlayerTextDrawTextSize(playerid,Textdrawa, 241.333297, 0.000000);
				PlayerTextDrawAlignment(playerid,Textdrawa, 1);
				PlayerTextDrawColor(playerid,Textdrawa, 0);
				PlayerTextDrawUseBox(playerid,Textdrawa, true);
				PlayerTextDrawBoxColor(playerid,Textdrawa, 421934591);
				PlayerTextDrawSetShadow(playerid,Textdrawa, 0);
				PlayerTextDrawSetOutline(playerid,Textdrawa, 0);
				PlayerTextDrawFont(playerid,Textdrawa, 0);

				Textdrawb = CreatePlayerTextDraw(playerid,370.000000, 117.233329, "usebox");
				PlayerTextDrawLetterSize(playerid,Textdrawb, 0.000000, 4.476750);
				PlayerTextDrawTextSize(playerid,Textdrawb, 243.666671, 0.000000);
				PlayerTextDrawAlignment(playerid,Textdrawb, 1);
				PlayerTextDrawColor(playerid,Textdrawb, 0);
				PlayerTextDrawUseBox(playerid,Textdrawb, true);
				PlayerTextDrawBoxColor(playerid,Textdrawb, 1922671615);
				PlayerTextDrawSetShadow(playerid,Textdrawb, 0);
				PlayerTextDrawSetOutline(playerid,Textdrawb, 0);
				PlayerTextDrawFont(playerid,Textdrawb, 0);

				Textdrawf = CreatePlayerTextDraw(playerid,255.333267, 119.051902, capstr);
				PlayerTextDrawLetterSize(playerid,Textdrawf, 0.805999, 3.516445);
				PlayerTextDrawAlignment(playerid,Textdrawf, 1);
				PlayerTextDrawColor(playerid,Textdrawf, 404894975);
				PlayerTextDrawSetShadow(playerid,Textdrawf, 0);
				PlayerTextDrawSetOutline(playerid,Textdrawf, 1);
				PlayerTextDrawBackgroundColor(playerid,Textdrawf, 51);
				PlayerTextDrawFont(playerid,Textdrawf, 2);
				PlayerTextDrawSetProportional(playerid,Textdrawf, 1);

				PlayerTextDrawShow(playerid, Textdrawa);
				PlayerTextDrawShow(playerid, Textdrawb);
				PlayerTextDrawShow(playerid, Textdrawf);

				format(string,sizeof(string),"{FFFFFF}Введите {6CFF92}5 {FFFFFF}символов, которые\nвидны на {6CFF92}вашем {FFFFFF}экране.\n");
				SPD(playerid,9099,DIALOG_STYLE_INPUT,"Проверка на робота",string,"Ок","Отмена");
			}
			else 
			{
				DestroyPlayerTD(playerid, Textdrawa);
				DestroyPlayerTD(playerid, Textdrawb);
				DestroyPlayerTD(playerid, Textdrawf);
				SendClientMessage(playerid, COLOR_RED, "Вы отказались от тренировки!");
			}
	    }
		case 9099:
		{	
			if(response)
			{
	            new it[32];
				sscanf(inputtext, "s[32]", it);
				SetPVarString(playerid, "enter_c", it);
				VerifyCaptcha1(playerid);
			}
			else 
			{
				DestroyPlayerTD(playerid, Textdrawa);
				DestroyPlayerTD(playerid, Textdrawb);
				DestroyPlayerTD(playerid, Textdrawf);
				SendClientMessage(playerid, COLOR_RED, "Вы отказались от тренировки!");
			}
		}
		case 2994:
	    {
	        if(response)
	        {
	            if(strlen(inputtextsave)==0) return false;
				new id=GetTeamID(playerid);
             	new text1, text2, text3[32], time[32];
				sscanf(inputtextsave,"p<,>dds[32]",text1,text2,text3);
				format(time,sizeof(time),"%d:%d",text1,text2);
				SobesStatus[id]=1;
				SetString(SobesTime[id],time);
				SetString(SobesMesto[id],text3);
				SobesTime1[id]=text1;
				SobesTime2[id]=text2;

			    f(str_1, sizeof(str_1),"[D] %s %s[%d] {AFAFAF}- Назначил собеседование в свою организацию на %s!",GetRankName(id,PI[playerid][pRank]),PN(playerid),playerid,time);
				SendGosMessage(COLOR_DEPAR,str_1);
	        }
	    }
		case 7760:
        {
            if(!response) return 1;
            switch(listitem)
            {
                case 0: 
				{
					SetPVarInt(playerid, !"PrefixID", playerid);
					ShowPrefixDialog(playerid);
				}
				case 1:
                {
                    if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится в транспорте!");
                    new carid = GetPlayerVehicleID(playerid);
                    vTemp[carid][Fuel] = 100;
                }
                case 2:
                {
                    new cars;
                    static Package[44];
                    str_1[0] = EOS, str_2[0] = EOS;
                    foreach(new i: OWNABLECARS)
                    {
                        new carid = OwnableCar[i];
                        if(IsPlayerHaveCar(playerid, i))
                        {
                            ShowCar[playerid][cars] = carid;
                            new number = GetVehicleID(carid);
                            Package[0] = EOS;
                            switch(CarInfo[number][cSlotItem][6])
                            {
                                case Item_TwinTurbo: Package = "{FED748}[Twin Turbo]{FFFFFF}";
                                case Item_Launch: Package = "{FED748}[Launch]{FFFFFF}";
                                case Item_Premium: Package = "{F345FC}[Premium]{FFFFFF}";
                                case Item_Mod_Halloween: Package = "{EAD064}[Halloween]{FFFFFF}";
                                case Item_Mod_Classic: Package = "{EAD064}[Classic]{FFFFFF}";
                                case Item_Mod_Futuristic: Package = "{EAD064}[Future]{FFFFFF}";
                                case Item_Mod_Cyberpunk: Package = "{EAD064}[Cyber Punk]{FFFFFF}";
                                case Item_Mod_FutureTaxi: Package = "{EAD064}[Future Taxi]{FFFFFF}";
                            }
                            if(CarInfo[number][cShtraf]) f(str_1, 100, "{FF6347}[X]{FFFFFF} %s(%i)\n", GetNameCar(carid), carid);
                            else f(str_1, 100, "%s %s(%i)\n", Package, GetNameCar(carid), carid);
                            strcat(str_2, str_1);
                            cars ++;
                        }
                    }
                    if(!cars) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет личного транспорта!");
                    return SPD(playerid, 7759, DIALOG_STYLE_LIST, !"Мой транспорт", str_2, !"Выбор", !"Назад");
                }
                case 3:
                {
                    if(GetPlayerState(playerid) != 1) return SCM(playerid, COLOR_GREY, !"[Ошибка]{ffffff} Вы и так уже в транспорте!");
                    new Float:X, Float:Y, Float:Z, Float:A;
                    GetPlayerPos(playerid, X, Y, Z);
                    GetPlayerFacingAngle(playerid, A);
					new carid = PI[playerid][plveh];
					if(carid != -1) DestroyVehicle(carid);
					PI[playerid][plveh] = J_AddStaticVehicleEx(522, X, Y, Z, A, 1, 1);
					carid = PI[playerid][plveh];
					vTemp[carid][Fuel] = 100.00;
					TwinTurboInstall(carid);
					vTemp[carid][vAntiRepair] = 2;
					VehicleHealth[carid] = 1000;
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
					LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
					PutPlayerInVehicle(playerid, carid, 0);
                }
                case 4:
                {
					static const admrank[8][19] =
					{
						{"[1 lvl]"},
						{"[2 lvl]"},
						{"[3 lvl]"},
						{"[4 lvl]"},
						{"[5 lvl]"},
						{"[6 lvl]"},
						{"[7 lvl]"},
						{"[8 lvl]"}
					};

                    SCM(playerid, 0x33CC00FF, !"Администрация онлайн:");
                    foreach(new i: Admin)
                    {
                        if(i == INVALID_PLAYER_ID) continue;
						if(SERIU[i] != INVALID_PLAYER_ID) SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - %s  {FFFFFF} - {DC2020}/re %i- [AFK: %i]. Репутация: %i - Выговоры [%i/3]", PN(i), i, Osnovat(PN(i)) ? ("{FF0000}Начальник") : admrank[PI[i][pAdmin] - 1], SERIU[i], PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
						else SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - %s -{FFFFFF} [AFK: %i]{FFFFFF}. Репутация: %i - Выговоры [%i/3]", PN(i), i, Osnovat(PN(i)) ? ("{FF0000}Начальник") : admrank[PI[i][pAdmin] - 1], PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
					}
                }
		        case 5:
                {
		            if(GetPlayerState(playerid)!=2) return SCM(playerid,COLOR_RED,!"Вы должны находиться в машине!");
		            new veh = GetPlayerVehicleID(playerid);
		            new Float:X,Float:Y,Float:Z,Float:A;
		            GetVehiclePos(veh,X,Y,Z);
		            SetVehiclePos(veh,X,Y,Z);
		            GetVehicleZAngle(veh, A);
		            SetVehicleZAngle(veh, A);
		            J_RepairVehicle(veh);
	            }
				case 6:
				{
					new days, year, month;
					getdate(year, month, days);
					if(PI[playerid][pTimeTP]) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы сможете снова телепортироватся через %i секунд", PI[playerid][pTimeTP]);
					J_SetPlayerPos(playerid, pTemp[playerid][pPosVIP][0], pTemp[playerid][pPosVIP][1], pTemp[playerid][pPosVIP][2]);
					if(!pTemp[playerid][pPosVIP][0]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Установите метку на карте!");
					PI[playerid][pTimeTP] = 600;
					UpdatePlayerDataInt(playerid, "TimeTP", 600);
					SendAdminsMessagef(COLOR_RED, "Игрок %s[%i] использовал {FFD700}\"Камень Телепортации\"", PN(playerid), playerid);
				}
			}
		}
		case 1000:
		{
			if(!response) return false;
			UsePhone(playerid, PhoneID[playerid][listitem]);
		}
		/*Система /map*/
		case 9067:
		{
			if(!response) return 0;
			switch(listitem)
			{
				case 0: SPD(playerid, 9068, DIALOG_STYLE_INPUT, !"Создание нового обьекта", !"Введите ID модели обьекта:", !"Далее", !"Назад");
				case 2: SelectObject(playerid);
				case 3:
				{
					ListObject[playerid] = 0;
					ShowDialogObject(playerid, 0, 9070);
				}
				case 4:
				{
				    ListObject[playerid] = 0;
				    ShowDialogObject(playerid, 1, 9071);
				}
				case 5: SPD(playerid, 9072, 2, !"Admin Mapping", !"- удалить свои объекты\n- удалить все объекты", !"Выбрать", !"Назад");
				case 6: callcmd::map(playerid);
			}
		}
		case 9068:
		{
			if(!response) return callcmd::map(playerid);
			new ObjectID;
			if(sscanf(inputtext, "d", ObjectID)) return 1;
			SetPVarInt(playerid, "obj_model", ObjectID);
			SPD(playerid, 9069, DIALOG_STYLE_INPUT, !"Создание нового обьекта", !"Введите краткое описание объекта: *не более 32 символов*\n(для чего он создан, праздник какой-то или еще что-то)", !"Создать", !"Назад");
		}
		case 9069:
		{
			if(!response) return SPD(playerid, 9068, DIALOG_STYLE_INPUT, !"Создание нового обьекта", !"Введите ID модели обьекта:", !"Далее", !"Назад");
			str_1[0] = EOS;
			if(sscanf(inputtext, "s[32]", str_1)) return 1;
			if(strlen(inputtext) < 1 || strlen(inputtext) > 32) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте не меньше 1 и не больше 32 символов!!");
			if(TOTALOBJECTS + 1 > MAX_CREATE_OBJECTS) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Превышен лимит объектов!");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			if(ObjectSelectMap[playerid] != -1) ObjectSelectMap[playerid] = -1;
			EditObjectPlayer[playerid] = CreateObject(GetPVarInt(playerid, "obj_model"), x+2, y+2, z, 0, 0, 0);
			EditObject(playerid, EditObjectPlayer[playerid]);
			SetPVarInt(playerid, "obj_edit", 1);
			SetString(ObjectNamePlayer[playerid], str_1);
			new UID;
			if(TOTALOBJECTS == 0) UID = 1;
			else UID = ObjInfo[TOTALOBJECTS-1][objID]+1;
			SCMf(playerid, COLOR_LIGHTBLUE, "[Admin Mapping] Обьект создан, установите его в нужной позиции и нажмите на иконку сохранения или ESC. [%i'%i]", TOTALOBJECTS, UID);
		}
		case 9070:
		{
		    if(!response) return callcmd::map(playerid);
	        switch(listitem)
	        {
	            case 0..23:
				{
				    if(ObjectListItem[playerid][listitem] == -1) return 1;
				    new ID = ObjectListItem[playerid][listitem];
				    ObjectSelectMap[playerid] = ID;
			        f(str, sizeof(str), "Телепортироватся\nУдалить\n------------------------------\nUID объекта в базе: %i\nСоздатель: %s [uid: %i]\nДата создания: %s %s\nГруппа:Без названия [0]\nМетка: %s\nМодель обьекта: %i\nКоординаты: %f,%f,%f,%f,%f,%f",
					ObjInfo[ID][objID],ObjInfo[ID][objOwner],ObjInfo[ID][objuidowner],ObjInfo[ID][otime],ObjInfo[ID][odate],ObjInfo[ID][objName],ObjInfo[ID][objModel],ObjInfo[ID][objPosX],ObjInfo[ID][objPosY],ObjInfo[ID][objPosZ],ObjInfo[ID][objRotX],ObjInfo[ID][objRotY],ObjInfo[ID][objRotZ]);
					SPD(playerid, 9073, 2, "Информация о выбранном объекте", str, "Выбрать", "Закрыть");
				}
				case 24: ShowDialogObject(playerid, 0, 9070);
	        }
		}
		case 9071:
		{
			if(!response) return callcmd::map(playerid);
			switch(listitem)
			{
			    case 0..23:
			    {
			        if(ObjectListItem[playerid][listitem] == -1) return 1;
			        new ID = ObjectListItem[playerid][listitem];
			        ObjectSelectMap[playerid] = ID;
			        f(str, sizeof(str), "Телепортироватся\nУдалить\n------------------------------\nUID объекта в базе: %i\nСоздатель: %s [uid: %i]\nДата создания: %s %s\nГруппа:Без названия [0]\nМетка: %s\nМодель обьекта: %i\nКоординаты: %f,%f,%f,%f,%f,%f",
					ObjInfo[ID][objID],ObjInfo[ID][objOwner],ObjInfo[ID][objuidowner],ObjInfo[ID][otime],ObjInfo[ID][odate],ObjInfo[ID][objName],ObjInfo[ID][objModel],ObjInfo[ID][objPosX],ObjInfo[ID][objPosY],ObjInfo[ID][objPosZ],ObjInfo[ID][objRotX],ObjInfo[ID][objRotY],ObjInfo[ID][objRotZ]);
					SPD(playerid, 9073, 2, "Информация о выбранном объекте", str, "Выбрать", "Закрыть");
			    }
			    case 24: ShowDialogObject(playerid, 1, 9071);
			}
		}
		case 9072:
		{
		    if(!response) return callcmd::map(playerid);
	        ListObject[playerid] = 0;
			if(listitem == 0) SPD(playerid, 9075, 0, !"", !"Вы подтверждаете удаление всех объектов, которые вы создали?", !"Удалить", !"Отмена");
			if(listitem == 1) SPD(playerid, 9076, 0, !"", !"Вы подтверждаете удаление всех объектов?", !"Удалить", !"Отмена");
		}
		case 9073:
		{
		    if(!response) return ObjectSelectMap[playerid] = -1;
	        new ID = ObjectSelectMap[playerid];
	        switch(listitem)
	        {
	            case 0: SetPlayerPos(playerid, ObjInfo[ID][objPosX],ObjInfo[ID][objPosY],ObjInfo[ID][objPosZ]+2.0), ObjectSelectMap[playerid] = -1;
				case 1: SPD(playerid, 9074, 0, !"", !"Вы подтверждаете удаление этого объекта?", !"Удалить", !"Отмена");
				case 9:
				{
				    SetPVarInt(playerid, "obj_edit", 1);
		            SetPVarInt(playerid, "obj_model", ObjInfo[ID][objModel]);
		            EditObjectPlayer[playerid] = ObjInfo[ID][objectID];
					EditObject(playerid, EditObjectPlayer[playerid]);
				}
	        }
		}
		case 9074:
		{
		    if(!response) return ObjectSelectMap[playerid] = -1;
	        new ID = ObjectSelectMap[playerid];
			SCMf(playerid, COLOR_LIGHTBLUE, "[Admin Mapping] Вы успешно удалили объект [%i*%i]", ID, ObjInfo[ID][objID]);
			mysql_pqueryf(mysql, "DELETE FROM `Objects` WHERE `ID` = '%i'", ObjInfo[ID][objID]);
			DestroyObject(ObjInfo[ID][objectID]);
			SetString(ObjInfo[ID][objName], "None");
			SetString(ObjInfo[ID][objOwner], "");
			ObjectSelectMap[playerid] = -1;
		}
		case 9075:
		{
		    if(!response) return 1;
		    new p = 0;
		    for(new i; i < TOTALOBJECTS; i++)
		    {
		        if(GetString(ObjInfo[i][objName], "None")) continue;
		        if(GetString(ObjInfo[i][objOwner], PN(playerid)))
		        {
					mysql_pqueryf(mysql, "DELETE FROM `Objects` WHERE `ID` = '%i'", ObjInfo[i][objID]);
					DestroyObject(ObjInfo[i][objectID]);
					SetString(ObjInfo[i][objName], "None");
					SetString(ObjInfo[i][objOwner], "");
					ObjectSelectMap[playerid] = -1;
					p++;
		        }
		    }
			if(!p) SCM(playerid, COLOR_LIGHTBLUE, !"[Admin Mapping] Ваших объектов не найдено в базе.");
			else SCM(playerid, COLOR_LIGHTBLUE, !"[Admin Mapping] Вы успешно удалили все свои объекты.");
		}
		case 9076:
		{
		    if(!response) return 1;
		    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!"); 
		    new p = 0;
		    for(new i; i < TOTALOBJECTS; i++)
		    {
		        if(GetString(ObjInfo[i][objName], "None")) continue;
				mysql_pqueryf(mysql, "DELETE FROM `Objects` WHERE `ID` = '%i'", ObjInfo[i][objID]);
				DestroyObject(ObjInfo[i][objectID]);
				SetString(ObjInfo[i][objName], "None");
				SetString(ObjInfo[i][objOwner], "");
				ObjectSelectMap[playerid] = -1;
				p++;
		    }
		    if(!p) SCM(playerid, COLOR_LIGHTBLUE, "[Admin Mapping] В базе данных не найдено ни одного объекта.");
		    else SCM(playerid, COLOR_LIGHTBLUE, "[Admin Mapping] Вы успешно удалили все объекты.");
		}
	    case 3736:
	    {
			if(!response) return 1;
            if(strlen(inputtext2) < 1 || strlen(inputtext2) > 16) return SCM(playerid, COLOR_RED, !"[КЛАД]{FFFFFF} Ответ слишком длинный/короткий!");
			new i = pTemp[playerid][pKladID][0];
			new id_q = pTemp[playerid][pKladID][1];
			if(KladeInfo[i][kladStatus])
			{
				if(GetString(kladqusans[id_q][kladanswer], inputtext2))
				{
				    DestroyDynamicObject(KladObject[i][0]);
	                DestroyDynamicObject(KladObject[i][1]);
	                DestroyDynamicObject(KladObject[i][2]);
					KladeInfo[i][kladStatus] = 0;
					GiveitemKlade(playerid);
	                SCM(playerid, COLOR_VALIK, !"[КЛАД]{FFFFFF} Поздравляем! Вы успешно взломали замок клада.");
	                SCM(playerid, COLOR_VALIK, !"[КЛАД]{FFFFFF} Приз добавлен Вам в инвентарь.");
				}
				else
				{
					SCM(playerid, COLOR_VALIK,  "[КЛАД]{FFFFFF} Ответ неправильный! Вы не смогли взломать замок");
					f(str_1, sizeof(str_1),"{FFFFFF}\n\nДля того, чтобы взломать замок,\nвам необходима ответить на вопрос-загадку!\n\nВопрос:\n%s\n\nВведите ответ в пустое контекстное поле:\n\n", kladqusans[id_q][kladquestion]);
					SPD(playerid, 3736, DIALOG_STYLE_INPUT, !"{FFFFFF}Взлом | {DC4747}Клад", str_1, !"»", !"X");
				}
			}
		}
		case 3735:
	    {
	    	if(!response) return 1;
	    	pTemp[playerid][pKladProgress] = 1;
	    	ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
        	KladProg(playerid);
	    }
		case 9060:
		{
			if(!response)
			{
				InvLockItem{playerid} = false;
				return DeletePVar(playerid, !"BuyClick");
			}
			new click = GetPVarInt(playerid, !"BuyClick"), ID = PI[playerid][pBuyItem][click], cost = GetCostID(ID);
			DeletePVar(playerid, !"BuyClick");
			InvLockItem{playerid} = false;
			if(GetInvCount(playerid, Item_FamilyTalon) < cost) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно семейных талонов!");
			if(!InvAdd(playerid, ID, 1)) return 1;
			aml(101, playerid, "", "аксиома", ID, 1);
			InvAdd(playerid, Item_FamilyTalon, -cost);
			aml(102, playerid, "", "аксиома", Item_FamilyTalon, cost);
		}
		case 3082:
		{
			if(!response)
			{
				InvLockItem{playerid} = false;
				return DeletePVar(playerid, !"BuyClick");
			}
			new biz = BizEntered[playerid], click = GetPVarInt(playerid, !"BuyClick"), ID = PI[playerid][pBuyItem][click], cost = GetCostID(ID);
			DeletePVar(playerid, !"BuyClick");
			InvLockItem{playerid} = false;
			if(biz == -1) return false;
			if(BizInfo[biz][bProducts] < 10) return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет запчастей.");
			if(GetPlayerMoney(playerid) < cost) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			if(!InvAdd(playerid, ID, 1)) return 1;
			aml(101, playerid, "", "купил в магазине тюнинга", ID, 1);
			BizInfo[biz][bProducts] -= 10;
			GiveMoney(playerid, -cost);
			GiveBizMoney(biz, cost);
		}
		case 3724:
		{
			new id = OrelID[playerid];
			if(!response)
			{
				SCM(id, COLOR_VALIK, !"[Информация] {FFFFFF}Игрок отказался от ставки!");
				SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы отказались играть!");
				BlockOrel{playerid} = false;
				BlockOrel{id} = false;
				return 1;
			}
			if(!BlockOrel{playerid}) return false;
		    if(PI[playerid][pMoney] < OrelMoney[playerid] || PI[id][pMoney] < OrelMoney[playerid]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У кого-то из вас не хватает денег!");
			f(str_1, 120, "Началась игра в Орёл и Решку между %s(%s) и %s(%s).", PN(playerid), StatusMoneta[playerid], PN(id), StatusMoneta[id]);
			ProxDetector(25, playerid, str_1, COLOR_DOCHAT);
			f(str_1, 50, "%s подкинул(а) монетку..", PN(playerid));
			ProxDetector(25, playerid, str_1, COLOR_ME);
			BlockOrel{playerid} = false;
			BlockOrel{id} = false;
            SetTimerEx("OrelTimer", 2000, false, "i", playerid);
		}
		case 12219:
		{
			if(!response) return DeletePVar(playerid, !"Slot_Weapon"), InvLockItem{playerid} = false;
			InventClick{playerid} = GetPVarInt(playerid, !"Slot_Weapon");
			new amount = strval(inputtextsave), ID = InventClick{playerid}, item = PI[playerid][pInvItem][ID];
			if(amount < 1 || amount > PI[playerid][pInvItemAmount][ID]) return SPD(playerid, 12219, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите использовать", !"Выбрать", !"Отмена");
			new weaponid = GetWeaponItem(item);
			GiveGun(playerid, weaponid, amount);
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы достали из кармана '%s' с боеприпасами %i", WeaponNames[weaponid], amount);
			InvAdd(playerid, item, -amount);
			aml(102, playerid, "", "достал из кармана", item, amount);
			InventClick{playerid} = 255;
			InvLockItem{playerid} = false;
			DeletePVar(playerid, !"Slot_Weapon");
		}
		case 10002:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0..79:
					{
						if(listitem+312+PlusItems[playerid] == 312) return 1;
						InvAdd(playerid, listitem+312+PlusItems[playerid], 1);
						aml(101, playerid, "", "/itemsinfo", listitem+312+PlusItems[playerid], 1);
						ShowItemsInfo(playerid, 1);
					}
					case 80: ShowItemsInfo(playerid, PageItems[playerid]+1, 80);
					case 81:
					{
						if(PageItems[playerid] == 2) ShowItemsInfo(playerid, 1, 0);
						else ShowItemsInfo(playerid, PageItems[playerid]-1, 80);
					}
				}
			}
		}
		case 7772:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: UpdateDonate(playerid);
				case 1:
				{
					static cost[12];
					new money;
					for(new i; i < sizeof(aDonate); i++) {
						money = aDonate[i][DonateCost];
						if(money != 1337) f(cost, sizeof(cost), "%i рублей", money);
						else cost = "узнать цену";
						str_1 = "№\tНазвание\tСтоимость\n";
						f(str, sizeof(str), "%s{FFFF00}%i.\t{FFFFFF}%s\t{FFFF00}%s\n", str, i+1, aDonate[i][DonateName], cost);
						strcat(str_1, str);
					}
					SPD(playerid, 6845, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Покупка | {BE2D2D}Адмнистратора", str_1, !"»", !"x");
				}
				case 2:
				{
					str_1[0] = EOS;
					format(str_1, 500, "\
						\t\t{FFFFFF}Конвертация в AZ-монеты\n\
						{FFFFFF}Курс: {BE2D2D}1 {FFFFFF}AZ-RUB = {BE2D2D}1000 {FFFFFF}AZ-монет.\n\
						{FFFFFF}Ваш баланс: {BE2D2D}%d AZ-RUB\n\
						{FFFFFF}Введите кол-во AZ-RUB, которое хотите конвертировать:\
					", PI[playerid][pDonateMoney]);
					SPD(playerid, 6865, DIALOG_STYLE_INPUT, !"{FFFFFF}Покупка | {BE2D2D}Конвертация", str_1, !"»", !"x");
				}
				case 3:
				{
					str_1 = "№\tНазвание\tСтоимость\n";
					for(new i; i < sizeof(aDonateOther); i++) f(str_1, sizeof(str_1), "%s{FFFF00}%i.\t{FFFFFF}%s\t{FFFF00}%i рублей\n", str_1, i+1, aDonateOther[i][OtherName], aDonateOther[i][OtherCost]);
					SPD(playerid, 6849, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Покупка | {ae433d}Остальное", str_1, !"Выбрать", !"Отмена");
				}
				case 4:
				{
					str_1 = "№\tНазвание\tСтоимость\n";
					for(new i; i < sizeof(aDonateCar); i++) f(str_1, sizeof(str_1), "%s{FFFF00}%i.\t{FFFFFF}%s\t{FFFF00}%i рублей\n", str_1, i+1, GetNameCar(GetVehicleModelEx(aDonateCar[i][CarID])), aDonateCar[i][CarCost]);
					SPD(playerid, 6852, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Покупка | {ae433d}Платного Сертификата", str_1, !"Выбрать", !"Отмена");
				}
				case 5:
				{
					str_1 = Mode_City_Caps;
					f(str_2, sizeof(str_2), "{FFFFFF}Вы действительно хотите приобрести {FFD700}%s VIP?\n{FFFFFF}Стоимость данного товара составляет {FF6347}1000 AZ-рублей", str_1);
					SPD(playerid, 6860, DIALOG_STYLE_MSGBOX, !"Подтверждение", str_2, !"Принять", !"Отмена");
				}
				case 6:
				{
					str_1 = "№\tНазвание\tСтоимость\n";
			        for(new i ; i < sizeof(dPlayerAcsessory); i++) f(str_1, sizeof(str_1), "%s{FFFF00}%i.\t{FFFFFF}%s\t{FFFF00}%i рублей\n", str_1, i+1, ItemsInfo[dPlayerAcsessory[i][dAcsessory_ID]][ItemName], dPlayerAcsessory[i][dAcsessory_Cost]);
                    SPD(playerid, 6856, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Покупка | {ae433d}Уникальных аксессуаров", str_1, !"Выбрать", !"Отмена");
				}
				case 7:
				{
					str_1 = "№\tНазвание\tСтоимость\n";
				    for(new i ; i < sizeof(dPlayerItemCraft); i ++) f(str_1, sizeof(str_1), "%s{FFFF00}%i.\t{FFFFFF}%s(%i штук)\t{FFFF00}%i рублей\n", str_1, i+1, ItemsInfo[dPlayerItemCraft[i][Obj_ID]][ItemName], dPlayerItemCraft[i][Obj_Amount], dPlayerItemCraft[i][Obj_Cost]);
				    SPD(playerid, 6857, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Покупка | {ae433d}Предметов для крафта", str_1, !"Выбрать", !"Отмена");
				}
				case 8:
				{
					str_1 = "№\tНазвание\tСтоимость\n";
					for(new i; i < sizeof(aDonateCMD); i++) f(str_1, sizeof(str_1), "%s{FFFF00}%i.\t{FFFFFF}%s\t{FFFF00}%i рублей\n", str_1, i+1, aDonateCMD[i][CMDName], aDonateCMD[i][CMDCost]);
					SPD(playerid, 6847, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Покупка | {ae433d}Админ-Команд", str_1, !"Выбрать", !"Отмена");
				}
			}
		}
		case 6865:
		{
			if(!response) return ShowADonate(playerid);
			
			new amountaz = strval(inputtext), string[200];
			if(GetDonateMoney(playerid) < amountaz) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			if(amountaz < 1 || amountaz > 10000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы можете конвертировать от 1 до 10.000 AZ-рублей");
			if(strlen(inputtext) < 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не ввели кол-во AZ-рублей для конвертации");

			PI[playerid][pVirMoney] += amountaz*1000;
			PI[playerid][pDonateMoney] -= amountaz;
			
			format(string, sizeof(string), "{73B461}[Информация] {FFFFFF}Вы успешно конвертировали {73B461}%d {FFFFFF}AZ-рублей в {73B461}%d {FFFFFF}AZ-монет", amountaz, amountaz*1000);
			SCM(playerid, COLOR_VALIK, string);
			
			UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
			UpdatePlayerDataInt(playerid, "DonateMoney", PI[playerid][pDonateMoney]);
			ShowADonate(playerid);
			return 1;
		}
		case 6856:
		{
		    if(!response) return 1;
		    if(GetDonateMoney(playerid) < dPlayerAcsessory[listitem][dAcsessory_Cost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			if(!InvAdd(playerid, dPlayerAcsessory[listitem][dAcsessory_ID], 1)) return 1;
		    aml(101, playerid, "", "покупка уникального аксессуара", dPlayerAcsessory[listitem][dAcsessory_ID], 1);
		    GiveDonateMoney(playerid, -dPlayerAcsessory[listitem][dAcsessory_Cost]);
			aml(84, playerid, "", "покупка уникального аксессуара", dPlayerAcsessory[listitem][dAcsessory_Cost]);
			SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно приобрели уникальный аксессуар '%s'", ItemsInfo[dPlayerAcsessory[listitem][dAcsessory_ID]][ItemName]);
		}
		case 6857:
		{
		    if(!response) return 1;
		    if(GetDonateMoney(playerid) < dPlayerItemCraft[listitem][Obj_Cost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			if(!InvAdd(playerid, dPlayerItemCraft[listitem][Obj_ID], dPlayerItemCraft[listitem][Obj_Amount])) return 1;
		    aml(101, playerid, "", "покупка уникального аксессуара", dPlayerItemCraft[listitem][Obj_ID], dPlayerItemCraft[listitem][Obj_Amount]);
		    GiveDonateMoney(playerid, -dPlayerItemCraft[listitem][Obj_Cost]);
			aml(84, playerid, "", "покупка уникального аксессуара", dPlayerItemCraft[listitem][Obj_Cost]);
			SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно приобрели предмет '%s'", ItemsInfo[dPlayerItemCraft[listitem][Obj_ID]][ItemName]);
		}
		case 6860:
		{
			if(!response) return 1;
			if(GetDonateMoney(playerid) < 1000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			if(PI[playerid][pVIP] >= 6) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень VIP!");
			J_SetPlayerVIP(playerid, 6);
			PI[playerid][pVipTime] = gettime()+(1800*24*60*60);
			GiveDonateMoney(playerid, -1000);
			str_1 = Mode_City_Caps;
			f(str_2, sizeof(str_2), "покупка %s VIP", str_1);
			aml(84, playerid, "", str_2, 1000);
			SCMAllf(COLOR_LIGHTRED, "[Информация]{FFFFFF} Игрок %s приобрел {FFD700}%s VIP.", PN(playerid), str_1);
			SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Для управления {FFD700}%s VIP{FFFFFF}, используйте /vip_help", str_1);
		}
		case 6852:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "Donate_Select", listitem);
			f(str, sizeof(str), "{FFFFFF}Вы действительно хотите приобрести сертификат {BE2D2D}%s?\n{FFFFFF}Стоимость данного товара составляет {FF6347}%i AZ-рублей", GetNameCar(GetVehicleModelEx(aDonateCar[listitem][CarID])), aDonateCar[listitem][CarCost]);
			SPD(playerid, 6853, DIALOG_STYLE_MSGBOX, !"Подтверждение", str, !"Принять", !"Отмена");
		}
		case 6853:
		{
			new id = GetPVarInt(playerid, !"Donate_Select");
			DeletePVar(playerid, "Donate_Select");
			if(!response) return 1;
			if(GetDonateMoney(playerid) < aDonateCar[id][CarCost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			new carid = aDonateCar[id][CarID];
			if(!InvAdd(playerid, carid, 1)) return 1;
			aml(101, playerid, "", "покупка сертификата", carid, 1);
			GiveDonateMoney(playerid, -aDonateCar[id][CarCost]);
			aml(84, playerid, "", "покупка сертификата", aDonateCar[id][CarCost]);
		}
		case 6849:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "Donate_Select", listitem);
			f(str, sizeof(str), "{FFFFFF}Вы действительно хотите приобрести {BE2D2D}%s?\n{FFFFFF}Стоимость данного товара составляет {FF6347}%i AZ-рублей", aDonateOther[listitem][OtherName], aDonateOther[listitem][OtherCost]);
			SPD(playerid, 6850, DIALOG_STYLE_MSGBOX, !"Подтверждение", str, !"Принять", !"Отмена");
		}
		case 6850:
		{
			new id = GetPVarInt(playerid, !"Donate_Select");
			DeletePVar(playerid, "Donate_Select");
			if(!response) return 1;
			if(GetDonateMoney(playerid) < aDonateOther[id][OtherCost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			switch(aDonateOther[id][OtherType])
			{
				case 1://Выйти досрочно с деморгана
				{
					if(!PI[playerid][pDemorgan]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не посажены в деморган!");
					PI[playerid][pDemorgan] = 0;
					PlayerSpawn(playerid);

					GiveDonateMoney(playerid, -aDonateOther[id][OtherCost]);
					aml(84, playerid, "", "освобождение досрочно с деморгана", aDonateOther[id][OtherCost]);

					SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно вышли досрочно с деморгана за {FF6347}%i AZ-рублей!", aDonateOther[id][OtherCost]);
					SendAdminsMessagef(COLOR_RED, "Игрок %s[%i] вышел досрочно с деморгана за донат", PN(playerid), playerid);
				}
				case 2://Снять мут
				{
					if(!PI[playerid][pMuteTime]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нету бана чата!");
					PI[playerid][pMuteTime] = 0;

					GiveDonateMoney(playerid, -aDonateOther[id][OtherCost]);
					aml(84, playerid, "", "снятие мута", aDonateOther[id][OtherCost]);

					SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно сняли бан чата за {FF6347}%i AZ-рублей!", aDonateOther[id][OtherCost]);
					SendAdminsMessagef(COLOR_RED, "Игрок %s[%i] снял мут за донат", PN(playerid), playerid);					
				}
				case 3://Снять awarm
				{
					if(!PI[playerid][pAWarns]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нету аварна чата!");

					PI[playerid][pAWarns]--;
					UpdatePlayerDataInt(playerid, "AWarns", PI[playerid][pAWarns]);

					GiveDonateMoney(playerid, -aDonateOther[id][OtherCost]);
					aml(84, playerid, "", "снятие аварн", aDonateOther[id][OtherCost]);
					
					SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно сняли 1 аварн за {FF6347}%i AZ-рублей!", aDonateOther[id][OtherCost]);
					SendAdminsMessagef(COLOR_RED, "Игрок %s[%i] снял аварн за донат", PN(playerid), playerid);
				}
			}
		}
		case 6845:
		{
			if(!response) return 1;
			if(PI[playerid][pAdmin] >= ADM_GRAND) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас максимальный уровень админки!");
			SetPVarInt(playerid, "Donate_Select", listitem);
			new cost;
			if(listitem == 9) cost = aDonate[PI[playerid][pAdmin]][DonateCost] - aDonate[PI[playerid][pAdmin]-1][DonateCost];
			else cost = aDonate[listitem][DonateCost];
			f(str, sizeof(str), "{FFFFFF}Вы действительно хотите приобрести {BE2D2D}%s?\n{FFFFFF}Стоимость данного товара составляет {FF6347}%i AZ-рублей", aDonate[listitem][DonateName], cost);
			SPD(playerid, 6846, DIALOG_STYLE_MSGBOX, !"Подтверждение", str, !"Принять", !"Отмена");
		}
		case 6846:
		{
			if(!response) return DeletePVar(playerid, "Donate_Select");
			new id = GetPVarInt(playerid, !"Donate_Select"), lvl = id + 1, cost;
			DeletePVar(playerid, "Donate_Select");
			if(id == 9) cost = aDonate[PI[playerid][pAdmin]][DonateCost] - aDonate[PI[playerid][pAdmin]-1][DonateCost];
			else cost = aDonate[id][DonateCost];
			if(GetDonateMoney(playerid) < cost) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			if(PI[playerid][pAdmin] >= lvl && id != 8) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень администратора!");
			switch(lvl)
			{
				case 9:
				{
					lvl = 8;
					for(new i; i < sizeof(aAccessCMD); i++) PI[playerid][pAccessCMD][i] = 1;
					SaveDostupPlayer(playerid);
				}
				case 10: lvl = PI[playerid][pAdmin]+1;
			}

			GiveDonateMoney(playerid, -cost);

			f(str_1, sizeof(str_1), "покупка админки %i лвл", lvl);
			aml(84, playerid, "", str_1, cost);

			SetAdminLevel(playerid, lvl, "adonate");

			SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно купили {BE2D2D}%s{FFFFFF} за {FF6347}%i AZ-рублей!", aDonate[id][DonateName], cost);
			SCMf(playerid, COLOR_VALIK, "[Анти-снятие]: {FFFFFF}Обязательно зайдите в конфу админов vk.me/join/mvtsp8W2VlOqPtmziV3NNReQbgb8q3lKj/Y=");
		}
		case 6847:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "Donate_CMD", listitem);
			f(str, sizeof(str), "{FFFFFF}Вы действительно хотите приобрести {BE2D2D}/%s?\n{FFFFFF}Стоимость данного товара составляет {FF6347}%i AZ-рублей", aDonateCMD[listitem][CMDName], aDonateCMD[listitem][CMDCost]);
			SPD(playerid, 6848, DIALOG_STYLE_MSGBOX, !"Подтверждение", str, !"Принять", !"Отмена");
		}
		case 6848:
		{
			if(!response) return 1;
			new list = GetPVarInt(playerid, !"Donate_CMD");
			DeletePVar(playerid, "Donate_CMD");
			new id = aDonateCMD[list][CMDID];
			if(GetDonateMoney(playerid) < aDonateCMD[list][CMDCost]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
			if(PI[playerid][pAccessCMD][id]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть данная команда!");
			GiveDonateMoney(playerid, -aDonateCMD[list][CMDCost]);
			f(str_1, sizeof(str_1), "покупка /%s", aDonateCMD[list][CMDName]);
			aml(84, playerid, "", str_1, aDonateCMD[list][CMDCost]);
			PI[playerid][pAccessCMD][id] = 1;
			SaveDostupPlayer(playerid);
			SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно купили {ae433d}/%s{FFFFFF} за {FFFF00}%i AZ-рублей!", aDonateCMD[list][CMDName], aDonateCMD[list][CMDCost]);
		}
		case 8255:
		{
			if(!response) return 1;
			if(HouseEntered[playerid] != HouseID[playerid]) return 1;
			switch(listitem)
		    {
		        case 0: SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить", !"Принять", !"Отмена");
		        case 1: SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите снять", !"Принять", !"Отмена");
			}
		}
		case 8256:
		{
			if(!response) return 1;
			if(HouseEntered[playerid] != HouseID[playerid]) return 1;
            new amount;
            new house = HouseID[playerid];
        	if(sscanf(inputtextsave, "i", amount)) return false;
        	if(PI[playerid][pMoney] < amount) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить", !"Принять", !"Отмена");
        	if(amount < 1) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить", !"Принять", !"Отмена");
        	if(amount > 99999999) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить\nМаксимально 99.999.999$ за раз", !"Принять", !"Отмена");
        	if(HouseInfo[house][hMoney] + amount > 99999999) return SPD(playerid, 8256, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите положить\nНельзя хранить более 99.999.999$", !"Принять", !"Отмена");
        	HouseInfo[house][hMoney] += amount;
        	GiveMoney(playerid, -amount);
        	aml(52, playerid, "", "положил в шкаф дома", amount);
        	PlayerTextDrawSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", HouseInfo[house][hMoney]);
			SaveHouse(house);
		}
		case 8257:
		{
			if(!response) return 1;
			if(HouseEntered[playerid] != HouseID[playerid]) return 1;
            new amount;
            new house = HouseID[playerid];
        	if(sscanf(inputtextsave, "i", amount)) return false;
        	if(HouseInfo[house][hMoney] < amount) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать", !"Принять", !"Отмена");
        	if(amount < 1) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать", !"Принять", !"Отмена");
        	if(amount > 99999999) return SPD(playerid, 8257, DIALOG_STYLE_INPUT, !"Ввод", !"{FFFFFF}Введите количество денег, которые хотите забрать\nМаксимально 99.999.999$ за раз", !"Принять", !"Отмена");
        	HouseInfo[house][hMoney] -= amount;
        	GiveMoney(playerid, amount);
        	aml(51, playerid, "", "взял со шкафа дома", amount);
        	PlayerTextDrawSetStringf(playerid, Invent_Menu[playerid][1], "$%08d", HouseInfo[house][hMoney]);
			SaveHouse(house);
		}
		case 8254:
		{
			if(!response) return 1;
			if(!GetInvCount(playerid, Item_PhoneBook)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет телефонной книжки");
		    new targetid = strval(inputtextsave);
		    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
			if(PI[targetid][pAdmin]) return 0;
		    if(!PI[targetid][pTelNum]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет sim карты!");
		    SetPlayerChatBubble(playerid, !"Смотрит телефонную книгу", COLOR_PURPLE, 10.0, 5000);
		    SCMf(playerid, -1, "{FFFFFF}%s[%i]:    {33CCFF}%i", PN(targetid), targetid, PI[targetid][pTelNum]);
		}
		case 8252://Трейд
		{
			if(!TradeTime[playerid][0]) return 1;
			if(!response) return TradeClose(playerid);
			KillTimer(TradeTime[playerid][0]);
			new id = TradeID[playerid];
			TradeTime[playerid][0] = 0;
			TradeTime[playerid][1] = 10;
			TradeSend{playerid} = false;
			ShowTrade(playerid);
			ShowTrade(id);
		}
		case 8249://Трейд
		{
			if(!response)
			{
				InvLockItem{playerid} = false;
				InventClick{playerid} = 255;
				return 1;
			}
			new ID = InventClick{playerid}, Amount = strval(inputtextsave);
			if(Amount < 1) return SPD(playerid, 8249, DIALOG_STYLE_INPUT, "Торговля", "{FFFFFF}Введите количество, которое хотите передать", !"Выбрать", !"Отмена");
			
			new 
				Total = PI[playerid][pInvItemAmount][ID], 
				Item = PI[playerid][pInvItem][ID], 
				Color = PI[playerid][pInvItemColor][ID],
				Enchant = PI[playerid][pInvItemEnchant][ID],
				Mining = PI[playerid][pInvItemMining][ID];

			if(Amount > Total) Amount = Total;
			InventClick{playerid} = 255;
			if(!TradeAdd(playerid, Item, Amount, Color, Enchant, Mining)) return InvLockItem{playerid} = false;
			PI[playerid][pTradeInvID][GetPVarInt(playerid, !"InvItemLock")] = ID;
			PI[playerid][pInvItemLock][ID] = 1;
			InvSlotUpdate(playerid, ID);
			InvLockItem{playerid} = false;
		}
		case 8248://Для меню инва, если кол-во > 1 (при переносе с инва)
		{
			new InvType = GetPVarInt(playerid, !"InvType");
			if(!response)
			{
				InvLockItem{playerid} = false;
				InventClick{playerid} = 255;
				return 1;
			}
			new ID = InventClick{playerid}, Amount = strval(inputtextsave);
			if(Amount < 1) return SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
			
			new  
				Item = PI[playerid][pInvItem][ID],
				Total = PI[playerid][pInvItemAmount][ID],
				Color = PI[playerid][pInvItemColor][ID],
				Enchant = PI[playerid][pInvItemEnchant][ID],
				mining = PI[playerid][pInvItemMining][ID];

			if(Amount > Total) Amount = Total;
			switch(InvType)
			{
				case 1: str_1 = "положил в мусорку";
				case 2: str_1 = "положил в шкаф";
				default: str_1 = "положил в багажник";
			}
			if(!InvAdd(playerid, Item, -Amount)) return InvLockItem{playerid} = false;
			aml(102, playerid, "", str_1, Item, Amount); 
			new id;
			switch(InvType)
			{
				case 1: id = TrashID[playerid];
				case 2: id = HouseID[playerid];
				case 3: id = idaofcar[playerid];
			}
			InventClick{playerid} = 255;
			switch(InvType)
			{
				case 1:
				{
					if(!TrashAdd(playerid, id, Item, Amount, Color, Enchant, mining)) return InvLockItem{playerid} = false;
					aml(23, playerid, "", "", Amount, Item, id);
				}
				case 2:
				{
					if(!ShkafAdd(playerid, id, Item, Amount, Color, Enchant, mining)) return InvLockItem{playerid} = false;
					aml(63, playerid, "", "", Amount, Item, id);
				}
				case 3:
				{
					if(!TrunkAdd(playerid, id, Item, Amount, Color, Enchant, mining)) return InvLockItem{playerid} = false;
					aml(73, playerid, "", "", Amount, Item, id);
				}
			}
			InvLockItem{playerid} = false;
		}
		case 8251://Для меню инва, если кол-во > 1 (при переносе в инв)
		{
			new InvType = GetPVarInt(playerid, !"InvType");
			if(!response)
			{
				InvLockItem{playerid} = false;
				InventClick{playerid} = 255;
				return 1;
			}
			new ID = InventClick{playerid}, Amount = strval(inputtextsave);
			if(Amount < 1) return SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
			new id;
			switch(InvType)
			{
				case 1: id = TrashID[playerid];
				case 2: id = HouseID[playerid];
				case 3: id = idaofcar[playerid];
			}
			new Item, Total, Color, Enchant;
			switch(InvType)
			{
				case 1:
				{
					Item = TrashInfo[id][TrashItem][ID];
					Total = TrashInfo[id][TrashItemAmount][ID];
					Color = TrashInfo[id][TrashItemColor][ID];
					Enchant = TrashInfo[id][TrashItemEnchant][ID];
				}
				case 2:
				{
					Item = HouseInfo[id][hItem][ID];
					Total = HouseInfo[id][hItemAmount][ID];
					Color = HouseInfo[id][hItemColor][ID];
					Enchant = HouseInfo[id][hItemEnchant][ID];
				}
				case 3:
				{
					Item = TrunkInfo[id][TrunkItem][ID];
					Total = TrunkInfo[id][TrunkItemAmount][ID];
					Color = TrunkInfo[id][TrunkItemColor][ID];
					Enchant = TrunkInfo[id][TrunkItemEnchant][ID];
				}
			}
			if(Amount > Total)
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ошибка переноса, там нет столько");
				return SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
			}
			switch(InvType)
			{
				case 1: str_1 = "достал из мусорки";
				case 2: str_1 = "достал из шкафа";
				default: str_1 = "достал из багажника";
			}
			if(!InvAdd(playerid, Item, Amount, 0, Color, Enchant)) return InventClick{playerid} = 255,InvLockItem{playerid} = false;
			aml(101, playerid, "", str_1, Item, Amount);
			switch(InvType)
			{
				case 1:
				{
					if(!TrashAdd(playerid, id, Item, -Amount)) return InvLockItem{playerid} = false;
					aml(24, playerid, "", "", Amount, Item, id);
				}
				case 2:
				{
					if(!ShkafAdd(playerid, id, Item, -Amount)) return InvLockItem{playerid} = false;
					aml(64, playerid, "", "", Amount, Item, id);
				}
				case 3:
				{
					if(!TrunkAdd(playerid, id, Item, -Amount)) return InvLockItem{playerid} = false;
					aml(74, playerid, "", "", Amount, Item, id);
				}
			}
			InventClick{playerid} = 255;
			InvLockItem{playerid} = false;
		}
		case 1599: //На грани смерти
		{
			if(!pTemp[playerid][TimeHeal]) return false;
			if(!response) return PlayerHospital(playerid);
			switch(listitem)
			{
				case 0: PlayerCureSpawn(playerid);
				case 1:
				{
					if(GetMoney(playerid) < 20000) return PlayerCureSpawn(playerid);
					GiveMoney(playerid, -20000);
					aml(52, playerid, "", "вызов врачей", 20000);
					SCM(playerid, COLOR_LIGHTRED, !"Ожидайте врачей. (( если их не будет в течении 5 минут, вы автоматически окажетесь в больнице ))");
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);

					if(IsPlayerToKvadrat(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257))
					{
						SendTeamMessagef(TEAM_MEDICLV, COLOR_LIGHTRED, "Очевидец сообщает о пострадавшем человеке в районе %s (%s).", GetZonaName(X, Y), GetCityName(X, Y));
						SendTeamMessagef(TEAM_MEDICLV, COLOR_LIGHTRED, "(( Чтобы принять вызов, введите /godeath %i. Оплата за вызов 35 000$ ))", playerid);
					}
					else if(IsPlayerToKvadrat(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770))
					{
						SendTeamMessagef(TEAM_MEDICSF, COLOR_LIGHTRED, "Очевидец сообщает о пострадавшем человеке в районе %s (%s).", GetZonaName(X, Y), GetCityName(X, Y));
						SendTeamMessagef(TEAM_MEDICSF, COLOR_LIGHTRED, "(( Чтобы принять вызов, введите /godeath %i. Оплата за вызов 35 000$ ))", playerid);
					}
					else
					{
						SendTeamMessagef(TEAM_MEDICLS, COLOR_LIGHTRED, "Очевидец сообщает о пострадавшем человеке в районе %s (%s).", GetZonaName(X, Y), GetCityName(X, Y));
						SendTeamMessagef(TEAM_MEDICLS, COLOR_LIGHTRED, "(( Чтобы принять вызов, введите /godeath %i. Оплата за вызов 35 000$ ))", playerid);
					}
					pTemp[playerid][TimeHeal] = 300;
	    			TimeSelectDoctor[playerid] = true;
				}
			}
		}
        case 5010://modellimit
        {
            if(!response) return false;
            str_2[0] = EOS;
            switch(listitem)
            {
                case 0:
                {
                    SetPVarInt(playerid, "ModellimitCarID", 92);
                    for(new i = 92; i < 131; i++) f(str_2, sizeof(str_2), "%s\n%s ($ %i) - %i\n", str_2, GetNameCar(SellInfo[i][scModel]), GetCarPrice(SellInfo[i][scModel]), SellInfo[i][scCount]);
                    SPD(playerid, 5012, 2, !"{AFAFAF}Список транспорта", str_2, !"Выбрать", !"Закрыть");
                }
                case 1:
                {
                    SetPVarInt(playerid, "ModellimitCarID", 39);
                    for(new i = 39; i < 69; i++) f(str_2, sizeof(str_2), "%s\n%s ($ %i) - %i\n", str_2, GetNameCar(SellInfo[i][scModel]), GetCarPrice(SellInfo[i][scModel]), SellInfo[i][scCount]);
                    SPD(playerid, 5012, 2, !"{AFAFAF}Список транспорта", str_2, !"Выбрать", !"Закрыть");
                }//
                case 2:
                {
                    SetPVarInt(playerid, "ModellimitCarID", 0);
                    for(new i; i < 39; i++) f(str_2, sizeof(str_2),"%s\n%s ($ %i) - %i\n", str_2, GetNameCar(SellInfo[i][scModel]), GetCarPrice(SellInfo[i][scModel]), SellInfo[i][scCount]);
                    SPD(playerid, 5012, 2, !"{AFAFAF}Список транспорта", str_2, !"Выбрать", !"Закрыть");
                }
                case 3:
                {
                    SetPVarInt(playerid, "ModellimitCarID", 69);
                    for(new i = 69; i < 92; i++) f(str_2, sizeof(str_2),"%s\n%s ($ %i) - %i\n", str_2, GetNameCar(SellInfo[i][scModel]), GetCarPrice(SellInfo[i][scModel]), SellInfo[i][scCount]);
                    SPD(playerid, 5012, 2, !"{AFAFAF}Список транспорта", str_2, !"Выбрать", !"Закрыть");
                }
            }
        }
        case 5012:
        {
            if(!response) return false;
            new carid = listitem + GetPVarInt(playerid, !"ModellimitCarID");
            SetPVarInt(playerid, "CarID", carid);
            f(str_2, sizeof(str_2), "Укажите количество доступного транспорта модели %s,\n Текущее количество %i,\n стоимость $%i", GetNameCar(SellInfo[carid][scModel]), SellInfo[carid][scCount], GetCarPrice(SellInfo[carid][scModel]));
            SPD(playerid, 5013, DIALOG_STYLE_INPUT, !"{BFBBBA}{AFAFAF}Количество", str_2, !"Отправить", !"Закрыть");
            DeletePVar(playerid, "ModellimitCarID");
        }
        case 5013:
        {
            if(!response) return false;
            new total = strval(inputtextsave);
            if(total < 0) return false;
            new i = GetPVarInt(playerid, !"CarID");
            UpdateModelLimit(total, i);
            SCMf(playerid, -1, "Вы установили модели %s новые лимит %i", GetNameCar(SellInfo[i][scModel]), total);
            DeletePVar(playerid, "CarID");
        }
		case 9159:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ShowDonateSelect(playerid, 56);//аксы
					case 1: ShowDonateSelect(playerid, 0);//скины
					case 2: ShowDonateSelect(playerid, 0);//рулетки
					case 3: ShowDonateSelect(playerid, 4);//серты
					case 4: ShowDonateSelect(playerid, 126);//боксы
					case 5: ShowDonateSelect(playerid, 54);//телефоны
				}
			}
		}
	case 8264:
        {
            if(response) {
                switch(listitem)
                {
                    case 0: ShowTradeMoney(playerid);
                    case 1: ShowTradeEURO(playerid);
                    case 2: ShowTradeBTC(playerid);
                }
            }
        }
        case 8265:
        {
            if(!response) return 1;
            if(!TradeOpen{playerid}) return 1;
            new amount;
            if(sscanf(inputtextsave, "d",amount)) return false;
            if(amount > 300000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы превысили доступный лимит на передачу денег! (Макс: 300000 EURO)");
            if(amount < 1) return ShowTradeBTC(playerid);
            if(GetInvCount(playerid, 776) < amount) return SCM(playerid, COLOR_GREY, !"У вас недостаточно EURO!");
            TradeEURO[playerid] = amount;
            UpdateTradeEURO(playerid);
        }
        case 8266:
        {
            if(!response) return 1;
            if(!TradeOpen{playerid}) return 1;
            new amount;
            if(sscanf(inputtextsave, "d",amount)) return false;
            if(amount > 15000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы превысили доступный лимит на передачу денег! (Макс: 15000 BTC)");
            if(amount < 1) return ShowTradeBTC(playerid);
            if(GetInvCount(playerid, Item_Bitcoin) < amount) return SCM(playerid, COLOR_GREY, !"У вас недостаточно BITCOIN!");
            TradeBTC[playerid] = amount;
            UpdateTradeBTC(playerid);
        }
        case 8258:
        {
            if(!response) return 1;
            if(!TradeOpen{playerid}) return 1;
            new amount;
            if(sscanf(inputtextsave, "d",amount)) return false;
            if(amount > 150000000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Вы превысили доступный лимит на передачу денег! (Макс: $150000000)");
            if(amount < 1) return ShowTradeMoney(playerid);
            if(GetMoney(playerid) < amount) return SCM(playerid, COLOR_GREY, !"У вас недостаточно денег!");
            TradeMoney[playerid] = amount;
            UpdateTradeMoney(playerid);
        }
	    case 8236: InvLockItem{playerid} = false;
		case 20050:
		{
			new id = GetPVarInt(playerid, !"SetCmdID");
			if(!response) return false;
			PI[id][pAccessCMD][listitem] = !PI[id][pAccessCMD][listitem];
		    SaveDostupPlayer(id);
			ShowSetCmdDialog(playerid, id);
		    f(str_1, sizeof(str_1), "%s команду %s у игрока", PI[id][pAccessCMD][listitem] ? ("установил") : ("забрал"), aDonateCMD[listitem][CMDName]);
			aml(1, playerid, PN(id), str_1);
		}
		/*-------- [ Система контейнеров ] --------*/
		case 83:
		{
			if(!response) return 1;
			new cont = Item_Select[playerid], slot = Item_SelectID[playerid];
			new item = gContainer[cont][gPrize][slot];
			new amount = gContainer[cont][gPrizeAmount][slot];
			InvAdd(playerid, item, amount, 1, 0, 0);
			gContainer[cont][gBlockSlot][slot] = true;
			ContTextDrawText(playerid, cont);
			return 1;
		}
		case 13000:
		{
			if(!response) return 1;
			if(!EnableContainers) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Контейнеры отключены!");
			for(new i ; i < sizeof(ContainerInfo); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]))
				{
                    switch(listitem)
					{
						case 0: return 1; // Возможный выигрыш
						case 6:
						{
							format(str_1, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[i][ContName]);
							switch(gContainer[i][gStatus])
							{
								case 0: return ContainerDialog(playerid, i);
								case 1: return SPD(playerid, 13001, 0, str_1, !"{FFFFFF}Вы действительно желаете принять участие в аукционе?", !"»", !"«");
								case 2: if(GetString(gContainer[i][gOwned], PN(playerid))) return ContainerOpen(playerid, i); // Открытие контейнера
							}
						}
						default: return ContainerDialog(playerid, i);
					}
					break;
				}
			}
		}
		case 13001:
		{
			if(!response) return 1;
			if(!EnableContainers) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Контейнеры отключены!");
			for(new i ; i < sizeof(ContainerInfo); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]))
				{
					if(gContainer[i][gStatus] == 1)
					{
						format(str_1, sizeof(str_1), "%s | {BE2D2D}Контейнер", ContainerInfo[i][ContName]);
						format(str_2, sizeof(str_2), "\n\n{FFFFFF}Класс: {E98E52}%s\nНачальная цена: %s {E98E52}%i{FFFFFF}\n\n{FF0000}Аукцион:{FFFFFF}\n\t- Последняя ставка: {E98E52}%s{FFFFFF}\n\t- Последняя сумма %s {E98E52}%i{FFFFFF}\n\nВведите сумму больше последней ставки или в случае отсутствия ставок больше начальной цены\n(Разница должна быть в %s {E98E52}%s{FFFFFF}):\n\n", ContainerInfo[i][ContName],
						ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), ContainerInfo[i][ContCost], gContainer[i][gOwned], ContainerInfo[i][ContType] == 1 ? ("AZ") : ("$"), gContainer[i][gCash], ContainerInfo[i][ContType] ? ("AZ") : ("$"), ContainerInfo[i][ContType] == 1 ? ("100") : ("100000"));
						SPD(playerid, 13002, DIALOG_STYLE_INPUT, str_1, str_2, !"»", !"«");
					}
					break;
				}
			}
		}
		case 13002:
		{
			if(!response) return 1;
			if(!EnableContainers) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Контейнеры отключены!");
			new bet;
			for(new i ; i < sizeof(ContainerInfo); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[i][ContPos][0], ContainerInfo[i][ContPos][1], ContainerInfo[i][ContPos][2]))
				{
					if(sscanf(inputtext, "d",bet)) return ContainerDialog(playerid, i);
					if(gContainer[i][gStatus] == 1)
					{
						if(PI[playerid][pMoney] < ContainerInfo[i][ContCost]) return 1;
						if(ContainerInfo[i][ContType] == 1)
						{
							if(!GetString(gContainer[i][gOwned], "-")) if(bet < ContainerInfo[i][ContCost]+100 || strval(inputtext) < gContainer[i][gCash]+100) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма (разница +100 AZ)");
							if(GetString(gContainer[i][gOwned], "-")) if(bet < ContainerInfo[i][ContCost] || strval(inputtext) < gContainer[i][gCash]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма");
							if(bet > PI[playerid][pVirMoney]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
							GiveDonate(playerid, -bet);
							aml(54, playerid, "", "открытие контейнера", bet);
						}
						else
						{
							if(!GetString(gContainer[i][gOwned], "-")) if(bet < ContainerInfo[i][ContCost]+100000 || strval(inputtext) < gContainer[i][gCash]+100000) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма (разница +100000 $)");
							if(GetString(gContainer[i][gOwned], "-")) if(bet < ContainerInfo[i][ContCost] || strval(inputtext) < gContainer[i][gCash]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неправильная сумма");
							if(bet > PI[playerid][pMoney]) return SendClientMessage(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
							GiveMoney(playerid, -bet);
						}
						if(GetString(gContainer[i][gOwned], "-")) SendClientMessage(playerid, -1, "{73B461}[Container-System] {FFFFFF}Вы успешно поставили ставку на этот контейнер!");
						else
						{
							SCMf(GetPlayerID(gContainer[i][gOwned]), -1, "{73B461}[Container-System] {FFFFFF}Вашу ставку за контейнер %s перебили!", ContainerInfo[i][ContName]);
							SendClientMessage(playerid, -1, "{73B461}[Container-System] {FFFFFF}Вы успешно перебили ставку на контейнер!");
							if(ContainerInfo[i][ContType] == 1)
							{
								GiveDonate(GetPlayerID(gContainer[i][gOwned]), gContainer[i][gCash]);
								aml(53, playerid, "", "другой чел перебил ставку", gContainer[i][gCash]);
							}
							else
							{
								GiveMoney(GetPlayerID(gContainer[i][gOwned]), gContainer[i][gCash]);
								aml(51, playerid, "", "другой чел перебил ставку", gContainer[i][gCash]);
							}
						}
						SetString(gContainer[i][gOwned], PN(playerid));
						gContainer[i][gCash] = bet;
						if(gContainer[i][gTime] < 60) gContainer[i][gTime] = 60;
						Container3dText(i, gContainer[i][gStatus]);
					}
					break;
				}
			}
		}
		/*-------- =============== --------*/
    	case 13300:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", !"»", !"«");
					case 1: ShowMySQLReferals(playerid);
					case 2: SPD(playerid, 13304, DIALOG_STYLE_INPUT, !"{FFFFFF}Возврат средств | {ae433d}Реферал", !"\n\n{FFFFFF}Введите сумму, которую Вы хотите вернуть Вашему рефералу:\nДиапазон: $ [0 - 300000]\n\n", !"»", !"«");
		        }
		    }
		}
		case 13301:
	    {
	        if(response) CheckMySQLReferal(playerid, inputtextsave);
	        else callcmd::referals(playerid);
	    }
    	case 13302:
	    {
	        if(response) SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", !"»", !"«");
	        else SPD(playerid, 13301, DIALOG_STYLE_INPUT, !"{FFFFFF}Мой Реферал | {ae433d}Реферал", !"\n\n{FFFFFF}Введите ник игрока, которого хотите проверить:\nПример: Pawn_Coder\n\n", !"»", !"«");
	    }
		case 13303:
	    {
	        if(response)
	        {

	        }
	        else callcmd::referals(playerid);
	    }
		case 13304:
	    {
	        if(response)
	        {
	            if(strlen(inputtextsave)==0)
				{
				    SPD(playerid, 13304, DIALOG_STYLE_INPUT, !"{FFFFFF}Возврат средств | {ae433d}Реферал", !"\n\n{FFFFFF}Введите сумму, которую Вы хотите вернуть Вашему рефералу:\nДиапазон: $ [0 - 300000]\n\n", !"»", !"«");
					SCM(playerid, -1, !"{73B461}[Referal-System]{FFFFFF} Введите сумму, которую хотите возвращать рефералу");
					return true;
				}
				if(strval(inputtextsave) < 0 || strval(inputtextsave) > 300000)
				{
					SPD(playerid, 13304, DIALOG_STYLE_INPUT, !"{FFFFFF}Возврат средств | {ae433d}Реферал", !"\n\n{FFFFFF}Введите сумму, которую Вы хотите вернуть Вашему рефералу:\nДиапазон: $ [0 - 300000]\n\n", !"»", !"«");
					SCM(playerid, -1, !"{73B461}[Referal-System]{FFFFFF} Введенная Вами сумма не входит в указанный диапазон");
					return true;
				}
	            PI[playerid][pReferalReturn]=strval(inputtextsave);
	            UpdatePlayerDataInt(playerid, "ReferalReturn", PI[playerid][pReferalReturn]);
	            callcmd::referals(playerid);
	        }
	        else callcmd::referals(playerid);
	    }
		case 232: {
			if(!response) {
				return 1;
			}
  		    new zkp = strval(inputtextsave);
		    if(zkp > 0)
		    {
			    if(PI[playerid][pVirMoney] >= (zkp*3))
			    {
			        if((PI[playerid][pZKP]+zkp)<=100)
			        {
			        	PI[playerid][pZKP] += zkp;
			        	UpdatePlayerDataInt(playerid, "ZKP", PI[playerid][pZKP]);
			        }
			        else
			        {
			            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Законопослушность не может быть выше 100 очков!");
			            return 0;
			        }
					PI[playerid][pVirMoney] -= (zkp*3);
					UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					aml(54, playerid, "", "законопослушность", (zkp*3));
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно купили законопослушность");
					HideDonateTD(playerid);
				}
			}
		}
		case 9502:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				    if(PI[playerid][pVirMoney] >= 275)
				    {
						PI[playerid][pVirMoney] -= 275;
						UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
						aml(54, playerid, "", "выйти из Ч/С", 275);
						PI[playerid][pBL] = 0;
						UpdatePlayerDataInt(playerid, "BlackList", 0);
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно вышли из черного списка");\
						HideDonateTD(playerid);
					}
				}
				case 1:
				{
				    if(GetDonate(playerid) < 80) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
                    PI[playerid][pContractTime] = 8000;
                    UpdatePlayerDataInt(playerid, "ContractTime", PI[playerid][pContractTime]);
                    PI[playerid][pVirMoney] -= 80;
                    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
                    aml(54, playerid, "", "максимальный навык фермера", 80);
                    SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно купили максимальный навык фермера!");
                    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Навык фермера: 8000 очк.\nНа данный момент вы можете работать: {42B02C}водителем кукурузника\n\nДля работы тракториста необходимо: 500 очк. фермера - [ Открыто ]\nДля работы комбайнером необходимо: 3200 очк. фермера - [ Открыто ]\nДля работы кукурузника необходимо: 700 очк. фермера - [ Открыто ]\n\n{FFFFFF}- Хорошей работы.", !"Закрыть", !"");
                    HideDonateTD(playerid);
				}
				case 2:
				{
		  		    if(PI[playerid][pVirMoney] >= 3) SPD(playerid, 232, DIALOG_STYLE_INPUT, !"Покупка", !"{FFFFFF}Вы хотите купить законопослушность\nСтоимость: 3 рубля за 1 законопослушность\nВведите кол-во очков законопослушности в окно\nЗатем нажмите \"Купить\"", !"Купить", !"Отмена");
		  		    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
				}
				case 3: SPD(playerid, 901, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите в строку количество талонов, которое хотите приобрести.\nСтоимость {EEF121}1-го {FFFFFF}талона - {EEF121}5 az coins (2.5 рубля.)\n\n{FFFFFF}Используйте число от {59AB3B}1 до 100.\n\n{D95F5F}Семейные талоны можно потратить на самые уникальные детали для вашего авто.\nВы сможете тюнинговать: Infernus, Bullet и все машины, которые раньше нельзя было изменить.\n\n", !"Обмен", !"");
				case 4:
				{
					if(GetDonateMoney(playerid) < 100) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно AZ-рублей");
					if(!InvAdd(playerid, 1208, 100)) return 1;
				    aml(101, playerid, "", "покупка 200 точильных камней");
				    GiveDonateMoney(playerid, -100);
					aml(84, playerid, "", "покупка 200 точильных камней", 100);
				    SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Поздравляем с покупкой!");
				}
			}
		}
	    case 1725: {
	        if(!response) {
	            return 1;
	        }

	    }
	    case 1724: {
	        if(!response) {
	            return 1;
	        }

	    }
	    case 1723: {
	        if(!response) {
	            return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы отказались от аренды лавки!");
			}
			new lavkaid = pTemp[playerid][pLavka];
			switch(listitem) {
				case 0: {
				    LavkaInfo[lavkaid][lavkaBuy] = 0;
				}
			    case 1: {
			        LavkaInfo[lavkaid][lavkaBuy] = 1;
			    }
			}
			GameTextForPlayer(playerid, !"successful", 0, 1);
			SCM(playerid, COLOR_ORANGE, !"[Подсказка] {FFFFFF}Используйте клавишу: ALT для управления товарами!");
			if(!LavkaInfo[lavkaid][lavkaBuy]) {
			    f(str, 100, "%s {555abe}продаёт {FFFFFF}товар", PN(playerid));
			}
			else {
			    f(str, 100, "%s {bebb55}покупает {FFFFFF}товар", PN(playerid));
			}
			LavkaInfo[lavkaid][lavkaLabel] = CreateDynamic3DTextLabel(str, -1, LavkaInfo[lavkaid][lavkaPosX], LavkaInfo[lavkaid][lavkaPosY], LavkaInfo[lavkaid][lavkaPosZ]+2.0, 10.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID);
			LavkaInfo[lavkaid][lavkaArea] = CreateDynamicSphere(LavkaInfo[lavkaid][lavkaPosX], LavkaInfo[lavkaid][lavkaPosY], LavkaInfo[lavkaid][lavkaPosZ], 5.0, 0, 0, -1);
	    }
	    case 1722: {
	        if(!response) {
	            return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы отказались от аренды лавки!");
	        }
	        if(strlen(inputtextsave) < 1 || strlen(inputtextsave) > 20) {
	            return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Название от 1 символа до 20!");
	        }
	        SetDynamicObjectMaterialText(Tents[pTemp[playerid][pLavka]], 0, inputtextsave, 130, "Arial", 55, 1, 0xFFFFFFFF, 0, 1);
	        SPD(playerid, 1723, DIALOG_STYLE_LIST, !"Выберите тип вашей лавки", !"Продавать товар\nПокупать товар", !"Принять", !"Отмена");
	        GameTextForPlayer(playerid, !"successful", 0, 1);
	    }
	    case 1721: {
	        if(!response) {
	            return 1;
	        }
	        GiveMoney(playerid, -500);
	        aml(52, playerid, "", "аренда лавки", 500);
	        GameTextForPlayer(playerid, !"successful", 0, 1);
	        new lavkaid = pTemp[playerid][pLavka];
	        J_SetPlayerPos(playerid, LavkaInfo[lavkaid][lavkaPosXOwner], LavkaInfo[lavkaid][lavkaPosYOwner], LavkaInfo[lavkaid][lavkaPosZOwner]);
	        SPD(playerid, 1722, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите название вашей лавки\nИспользуйте до {85e94e}20 {FFFFFF}символов!", !"Принять", !"Отмена");
	        LavkaInfo[lavkaid][lavkaOwnerID] = playerid;
	        SCM(playerid, COLOR_ORANGE, !"[Подсказка] {FFFFFF}Вы успешно арендовали лавку для продажи/покупки товара!");
	    }
		case 4690:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0: SPD(playerid, 4691, DIALOG_STYLE_LIST, !"{9ACD32}» {FFFFFF}Выберите действие", !"{FFFFFF}Телепортироваться на текущую позицию\nУстановить новую позицию", !"Выбрать", !"Назад");
					case 1: ac_ShowPlayerDialog(playerid, 4692),ShowPlayerDialogf(playerid, 4692, DIALOG_STYLE_INPUT, !"{BFBBBA}{9ACD32}» {FFFFFF}Сообщение при открытии телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущее сообщение:\n{AFAFAF}''%s''{FFFFFF}\n\nЧтобы изменить сообщение, введите его ниже: (20-100 символов)", MPName);
					case 2: ac_ShowPlayerDialog(playerid, 4693),ShowPlayerDialogf(playerid, 4693, DIALOG_STYLE_INPUT, !"{BFBBBA}{9ACD32}» {FFFFFF}Выдача HP при телепорте", !"Изменить", !"Назад", "{FFFFFF}Текущее значение: {AFAFAF}%i HP{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (1-100 HP)", MPHealth);
					case 3: ac_ShowPlayerDialog(playerid, 4694),ShowPlayerDialogf(playerid, 4694, DIALOG_STYLE_INPUT, !"{BFBBBA}{9ACD32}» {FFFFFF}Выдача брони при телепорте", !"Изменить", !"Назад", "{FFFFFF}Текущее значение: {AFAFAF}%i брони{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (0-100 брони)", MPArmour);
					case 4:
				    {
				        MPWeapon = !MPWeapon;
			            callcmd::eventmenu(playerid);
				    }
					case 5:
				    {
					    MPTeleport = !MPTeleport;
					    foreach(new i: Player) MPTeleportPlayer{i} = !MPTeleport;
			            callcmd::eventmenu(playerid);
				    }
					case 6: ac_ShowPlayerDialog(playerid, 4695),ShowPlayerDialogf(playerid, 4695, DIALOG_STYLE_INPUT, !"{BFBBBA}{9ACD32}» {FFFFFF}Лимит игроков для телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущий лимит игроков: {AFAFAF}%i{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (1-1000 игроков)", MPPlayerLimit);
					case 7: ac_ShowPlayerDialog(playerid, 4696),ShowPlayerDialogf(playerid, 4696, DIALOG_STYLE_INPUT, !"{BFBBBA}{9ACD32}» {FFFFFF}Время действия телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущее время действия(после запуска): {AFAFAF}%i сек{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (10-1200 сек)", MPTimeStatic);
					case 8:
				    {
						if(!TeleportFloat[0])
						{
							SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Позиция для телепорта отсутствует!");
							return callcmd::eventmenu(playerid);
						}
						if(Teleport)
						{
							Teleport = false;
						    MPTime = 60;
						    for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
							return SCMAllf(COLOR_LIGHTRED, "[Teleport Event]{FFFFFF} Администратор %s досрочно де-активировал телепорт на мероприятие.", PN(playerid));
						}
						MPPlayersLimit = MPPlayerLimit;
						MPTime = MPTimeStatic;
						Teleport = true;
						SCMAllf(0x40FF00FF, "[Начало Мероприятия]{FFFFFF} %s Организатор: %s[%i]", MPName, PN(playerid), playerid);
						f(str_1, sizeof(str_1), "активировал МП: %s", MPName);
    					aml(18, playerid, "", str_1, 10);
					    for(new i; i < 14; i++) TextDrawShowForAll(TeleportEvent[i]);
					    foreach(new i: Player) MPTeleportPlayer{i} = false;
				    }
				}
			}
		}
		case 4691:
	    {
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
					    callcmd::eventmenu(playerid);
						if(!TeleportFloat[0]) return SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Позиция для телепорта отсутствует!");
					    SetPlayerInterior(playerid, TeleportInfoq[1]);
						SetPlayerVirtualWorld(playerid, TeleportInfoq[0]);
						J_SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
					}
					case 1:
					{
						SendAdminsMessagef(COLOR_VALIK, "[Teleport Event] Администратор %s[%i] изменил позицию телепорта", PN(playerid), playerid);
						SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Вы установили новую позицию для телепорта.");
						GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]); // Записываем координаты
						TeleportInfoq[0] = GetPlayerInterior(playerid); // Записываем интерьер
						TeleportInfoq[1] = GetPlayerVirtualWorld(playerid); // Записываем виртуальный мир	Teleport = 1;
						callcmd::eventmenu(playerid);
					}
				}
			}
			else callcmd::eventmenu(playerid);
		}
		case 4692:
	    {
			if(response)
			{
				if(strlen(inputtextsave) < 1 || strlen(inputtextsave) > 256) return ac_ShowPlayerDialog(playerid, 4692),ShowPlayerDialogf(playerid, 4692, DIALOG_STYLE_INPUT, !"{BFBBBA}{9ACD32}» {FFFFFF}Сообщение при открытии телепорта", !"Изменить", !"Назад", "{FFFFFF}Текущее сообщение:\n{AFAFAF}''%s''{FFFFFF}\n\nЧтобы изменить сообщение, введите его ниже: (до 256-ти символов)\n\n{FF1C05}Ошибка:{FFFFFF} Слишком мало либо много символов!", MPName);
				SCM(playerid, COLOR_LIGHTBLUE, !"[Teleport Event]{FFFFFF} Вы изменили сообщение для всех, при открытии телепорта на мероприятие!");
				SendAdminsMessagef(COLOR_VALIK, "[Teleport Event] Администратор %s[%i] изменил сообщение при открытии телепорта на мероприятие '%s'", PN(playerid), playerid, inputtext2);
				if(Osnovat(PN(playerid))) SetString(MPName, inputtext2);
				else SetString(MPName, inputtextsave);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4693:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 100)
				{
					f(str, sizeof(str), "{FFFFFF}Текущее значение: {AFAFAF}%i HP{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (1-100 HP)\n\n{FF1C05}Ошибка:{FFFFFF} Слишком маленькое либо большое значение!", MPHealth);
					SPD(playerid, 4693, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Выдача HP при телепорте", str, !"Изменить", !"Назад");
					return 0;
				}
				MPHealth = strval(inputtextsave);
				SendAdminsMessagef(COLOR_VALIK, "[Teleport Event] Администратор %s[%i] изменил выдачу HP на: %i", PN(playerid), playerid, MPHealth);
				f(str, sizeof(str), "[Teleport Event]{FFFFFF} Вы изменили выдачу HP на: %i", MPHealth);
				SCM(playerid, 0x40FF00FF, str);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4694:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 0 || strval(inputtextsave) > 100)
				{
					f(str, sizeof(str), "{FFFFFF}Текущее значение: {AFAFAF}%i брони{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (0-100 брони)\n\n{FF1C05}Ошибка:{FFFFFF} Слишком маленькое либо большое значение!", MPArmour);
					SPD(playerid, 4694, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Выдача брони при телепорте", str, !"Изменить", !"Назад");
					return 0;
				}
				MPArmour = strval(inputtextsave);
				SendAdminsMessagef(COLOR_VALIK, "[Teleport Event] Администратор %s[%i] изменил выдачу брони на: %i", PN(playerid), playerid, MPArmour);
				f(str, sizeof(str), "[Teleport Event]{FFFFFF} Вы изменили выдачу брони на: %i", MPArmour);
				SCM(playerid, 0x40FF00FF, str);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4695:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 1000)
				{
					f(str, sizeof(str), "{FFFFFF}Текущий лимит игроков: {AFAFAF}%i{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (1-1000 игроков)\n\n{FF1C05}Ошибка:{FFFFFF} Слишком маленькое либо большое значение!", MPPlayerLimit);
					SPD(playerid, 4695, DIALOG_STYLE_INPUT, "{9ACD32}» {FFFFFF}Лимит игроков для телепорта",str,"Изменить", "Назад");
					return 0;
				}
				MPPlayerLimit = strval(inputtextsave);
				f(str, sizeof(str), "[Teleport Event]{FFFFFF} Вы изменили лимит количества игроков для телепорта: %i игроков", MPPlayerLimit);
				SendAdminsMessagef(COLOR_VALIK, "[Teleport Event] Администратор %s[%i] изменил лимит количества игроков для телепорта: %i", PN(playerid), playerid, MPPlayerLimit);
				SCM(playerid, 0x40FF00FF, str);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4696:
	    {
			if(response)
			{
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 1200)
				{
					f(str,sizeof(str), "{FFFFFF}Текущее время действия(после запуска): {AFAFAF}%i сек{FFFFFF}\n\nЧтобы изменить, введите ниже новое значение: (10-1200 сек)\n\n{FF1C05}Ошибка:{FFFFFF} Слишком маленькое либо большое значение!", MPTimeStatic);
					SPD(playerid, 4696, DIALOG_STYLE_INPUT, !"{9ACD32}» {FFFFFF}Время действия телепорта", str, !"Изменить", !"Назад");
					return 0;
				}
				MPTimeStatic = strval(inputtextsave);
				f(str, sizeof(str), "[Teleport Event]{FFFFFF} Вы изменили время действия телепорта: %i сек", MPTimeStatic);
				SendAdminsMessagef(COLOR_VALIK, "[Teleport Event] Администратор %s[%i] изменил время действия телепорта: %i сек", PN(playerid), playerid, MPTimeStatic);
				SCM(playerid, 0x40FF00FF, str);
				callcmd::eventmenu(playerid);
			}
			else callcmd::eventmenu(playerid);
		}
		case 4697:
		{
		    if(response)
		    {
		        if(!MPWeapon) {
					ResetGun(playerid);
					SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}Вы телепортированы на мероприятие.");
					SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}По правилам мероприятия ваше оружие изьято.");
				}
				J_SetPlayerArmour(playerid, MPArmour);
				J_SetPlayerHealth(playerid, MPHealth);
			    SetPlayerInterior(playerid, TeleportInfoq[1]);
				SetPlayerVirtualWorld(playerid, TeleportInfoq[0]);
				J_SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
				MPPlayersLimit --;
				if(!MPPlayersLimit)
				{
				    SCMAll(0x40FF00FF, !"[Мероприятие]{FFFFFF} Телепорт на мероприятие закрыт, лимит игроков закончился.");
					Teleport = false;
					MPTime = 60;
					for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
				}
				if(MPTeleport) MPTeleportPlayer{playerid} = true;
				return 1;
		    }
		}
		case 2221:
		{
		    if(!response)
		        return 1;

		    new i = pTemp[playerid][pSellCar];
		    if(GetMoney(playerid) < autoBazarInfo[i][autoBazarCost])
		        return SCM(playerid, COLOR_RED, !">>>> {FFFFFF}- У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

			if(autoBazarInfo[i][autoBazarplayerid] == INVALID_PLAYER_ID)
			    return 0;

		    if(!ProxDetectorS(7.0, playerid, autoBazarInfo[i][autoBazarplayerid]))
				return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");

            if(IsValidNumberCars(playerid))
            {
				autoBazarInfo[i][autoBazar2PosX] =
				autoBazarInfo[i][autoBazar2PosY] =
				autoBazarInfo[i][autoBazar2PosZ] = 0.0;
				GiveMoney(autoBazarInfo[i][autoBazarplayerid], autoBazarInfo[i][autoBazarCost]);
				GiveMoney(playerid, -autoBazarInfo[i][autoBazarCost]);
				aml(50, playerid, PN(autoBazarInfo[i][autoBazarplayerid]), "покупка авто", autoBazarInfo[i][autoBazarCost], 8);
			    SetCarOwner(autoBazarInfo[i][autoBazarCarID], PN(playerid));
			    SetCarKeyer(autoBazarInfo[i][autoBazarCarID], PN(playerid));
			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			    GetNumberCars(playerid, PI[playerid][pCars]);
			    GetNumberCars(autoBazarInfo[i][autoBazarplayerid], PI[playerid][pCars]);
				GameTextForPlayer(playerid, !"successful", 0, 1);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с приобретением транспортного средства");
				GameTextForPlayer(autoBazarInfo[i][autoBazarplayerid], !"successful", 0, 1);
			    SCM(autoBazarInfo[i][autoBazarplayerid], COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с продажей транспортного средства.");
			    RemovePlayerFromVehicle(autoBazarInfo[i][autoBazarplayerid]);
			    new number = autoBazarInfo[i][autoBazarCarID_Ownable];
   				GiveBizMoney(AutoMarket, CarInfo[number][cShtrafer]);
   				CarInfo[number][cShtrafer] = 0;
		        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
		        autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;
		        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
		        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         		DestroyAutoBazarTable(i);
         		pTemp[playerid][pSellCar] = -1;
		        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
		    	if(autoBazarInfo[i][autoBazarType] == 1) {
		    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		    	}
		    	else {
		    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
		    	}
		    	SaveOwnableCar(number);
				i = 0;
			}
		    else
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
    			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			}
		}
	    case 2220:
	    {
	        if(!response)
	            return 1;

	        new i = pTemp[playerid][pSellCar];

			autoBazarInfo[i][autoBazar2PosX] =
			autoBazarInfo[i][autoBazar2PosY] =
			autoBazarInfo[i][autoBazar2PosZ] = 0.0;
	        autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;
	        autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
	        DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         	DestroyAutoBazarTable(i);
         	pTemp[playerid][pSellCar] = -1;
	        DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
	    	if(autoBazarInfo[i][autoBazarType] == 1) {
	    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	}
	    	else {
	    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
	    	}
			i = 0;
	    }
	    case 2219:
	    {
	        if(!response) return 1;

	        new i = pTemp[playerid][pSellCar];

	        f(str, sizeof(str), "Вы успешно выставили ваш транспорт на продажу за $%i", autoBazarInfo[i][autoBazarCost]);
	        SCM(playerid, COLOR_VALIK, str);

	        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Чтобы снять его с продажи, повторно нажмите на 'H' (сигнал)");
	        new carid = GetPlayerVehicleID(playerid);
	        autoBazarInfo[i][autoBazarCarID] = carid;
	        autoBazarInfo[i][autoBazarCarID_Ownable] = GetVehicleID(carid);
	        autoBazarInfo[i][autoBazarplayerid] = playerid;
	        if(!IsAVelik(carid)) SetEngineStatus(carid, false, playerid);
	        SetVehiclePos(carid, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ]);
			new Float:x, Float:y, Float:z;
			SetVehicleZAngle(carid, autoBazarInfo[i][autoBazarZAngle]);
			GetCoordBonnetVehicle(carid, x, y, z, 4, autoBazarInfo[i][autoBazarZAngle]);
			autoBazarInfo[i][autoBazarLabel2] = CreateDynamic3DTextLabel("Для покупки нажмите N", -1, x, y, z-2, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
			autoBazarInfo[i][autoBazar2PosX] = x;
		    autoBazarInfo[i][autoBazar2PosY] = y;
			autoBazarInfo[i][autoBazar2PosZ] = z;
	        PutPlayerInVehicle(playerid, carid, 0);
			f(str, sizeof(str), "Место для продажи {aa3f33}[Занято]\n\n{9ACD32}%s", PN(playerid));
			UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, str);
			autoBazarInfo[i][autoBazarArea] = CreateDynamicSphere(autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ], 6.5, 0, 0, -1);
			CreateAutoBazarTable(i);
	    }
	    case 2218:
	    {
	        if(!response)
	            return 1;

			if(!IsPlayerInAnyVehicle(playerid))
			    return 0;

			new i = pTemp[playerid][pSellCar];
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, autoBazarInfo[i][autoBazarPosX], autoBazarInfo[i][autoBazarPosY], autoBazarInfo[i][autoBazarPosZ]))
			    return 0;

	        if(strval(inputtextsave) < 1)
			{
				pTemp[playerid][pSellCar] = -1;
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Слишком маленькая цена! [ Минимум 1$ ]");
				return 1;
			}
			autoBazarInfo[i][autoBazarCost] = strval(inputtextsave);
	        f(str, sizeof(str), "{FFFFFF}Вы хотите выставить свой транспорт на продажу за $%i?", strval(inputtextsave));
	        SPD(playerid, 2219, DIALOG_STYLE_MSGBOX, !"", str, !"Выбрать", !"Отмена");
	    }
	    case 3392:
	    {
			if(!response)
			    return 1;

			switch(listitem) {
				case 0: SPD(playerid, 233, DIALOG_STYLE_TABLIST_HEADERS, !"", !"Название\t\tТребование\n{FAAC58}Механик\t\t3-ий уровень{FFFFFF}\n{FC660F}Таксист\t\t2-ой уровень{FFFFFF}\nКрупье\t\t\t5-тый уровень\nРаботник Налоговой\t7-ой уровень\nИнкассатор\t\t6-ой уровень\nДальнобойщик\t5-тый уровень\nМеталлоломщик\t4-тый уровень\nМусорщик\t\t3-ий уровень\n{FAAC58}Водитель автобуса\t2-ой уровень{FFFFFF}\nРазвозчик продуктов\t4-тый уровень\nАдвокат\t\t7-ой уровень", !"Выбор", !"Отмена");
				case 1: callcmd::quitjob(playerid);
			}
	    }
		case 7844:
		{
		    if(!response)
		        return 1;

			callcmd::findcollectors(playerid);
		}
		case 7845:
	    {
	        if(!response)
	            return 1;

            switch(listitem)
            {
    			case 0:
    		    {
					SendBotMessage(playerid, !"Привет, меня зовут Мартин.\nМероприятие: 'Собиратели' начинается ровно 20.15 и длится до 21.00.");
				}
    			case 1:
    		    {
					SendBotMessage(playerid, !"В течении определенного времени, на узком участке, вы сможете собирать халявные подарки.\nЧем больше людей на мероприятии, тем больше подарков будет спавниться,\nа так-же вы будете получить больше времени на участие.\nОбменять собранные подарки можно у Эдварда, он находится у Центрального банка в ЛС.");
				}
    			case 2:
    		    {
    		        new
    		            num = 0;
    		        foreach(new i: Player)
    		        {
    		            if(PI[i][pEventTime])
    		            {
    		            	num ++;
    		            }
    		        }
    		        f(str, sizeof(str), "Сейчас в мероприятии: 'Собиратели' учавствует %i человек.", num);
    		        SendBotMessage(playerid, str);
				}
				case 3:
				{
				    new
					hour,
					minuite;
					gettime(hour, minuite, _);
					if((hour < 20 || minuite < 15) || hour > 21) return SendBotMessage(playerid, !"Мероприятие начинает работать с 20.15 по 21.00!");
					
					if(GetMoney(playerid) < 30000)
					{
						if(PI[playerid][pFamilyMember] != -1)
						{
							if(!FamilyInfo[PI[playerid][pFamilyMember]][famBussines]) return SendBotMessage(playerid, !"У вас недостаточно денег!");
						}
						else return SendBotMessage(playerid, !"У вас недостаточно денег!"); 
					}

		            
		            if(pTemp[playerid][pEvent])
			        return SendBotMessage(playerid, !"Это мероприятие уже не доступно! Попробуйте завтра.");
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n\
					{FFFFFF}Добро пожаловать на мероприятие: 'Собиратели'\n\
					У вас есть {DC9728}несколько {FFFFFF}минут, чтобы собрать подарки.\n\
					Подарки появляются каждые {DC9728}40{FFFFFF} секунд и каждый из участников хочет заполучить\n\
					больше подарков, чем остальные. {F54C4C}Обратите внимание, что это мероприятие\n\
					доступно только 1-ин раз в день с 20.15 до 21.00.\n\n\
					{FF9100}Хорошего улова!", !"Принять", !"");
					J_SetPlayerPos(playerid, -2268.2046,168.7968,35.1641);
					SetPlayerFacingAngle(playerid, 92.3241);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerAttachedObject(playerid,3,19078,1,-0.880999,-0.154000,0.000000,0.000000,0.499998,-7.699995,5.534998,7.175994,6.535998);
					new bool:bogdanloh;

					if(PI[playerid][pFamilyMember] != -1)
					{
						if(!FamilyInfo[PI[playerid][pFamilyMember]][famBussines]) bogdanloh = true;
					}
					else bogdanloh = true;

					if(bogdanloh)
					{
						GiveMoney(playerid, -30000);
						aml(52, playerid, "", "собиратели", 30000);
					}
					pTemp[playerid][pEvent] = 1;
					PI[playerid][pEventTime] = 900;
					f(str,sizeof(str),"Time: %s",ConvertTD(PI[playerid][pEventTime]));
					EventTimeTD[playerid][0] = CreatePlayerTextDraw(playerid, 58.000000, 396.000000, str);
					PlayerTextDrawLetterSize(playerid, EventTimeTD[playerid][0], 0.270000, 1.899999);
					PlayerTextDrawTextSize(playerid, EventTimeTD[playerid][0], 1280.000000, 1280.000000);
					PlayerTextDrawAlignment(playerid, EventTimeTD[playerid][0], 0);
					PlayerTextDrawColor(playerid, EventTimeTD[playerid][0], 0xFFFFFFFF);
					PlayerTextDrawUseBox(playerid, EventTimeTD[playerid][0], 0);
					PlayerTextDrawBoxColor(playerid, EventTimeTD[playerid][0], 0x80808080);
					PlayerTextDrawSetShadow(playerid, EventTimeTD[playerid][0], 2);
					PlayerTextDrawSetOutline(playerid, EventTimeTD[playerid][0], 1);
					PlayerTextDrawBackgroundColor(playerid, EventTimeTD[playerid][0], 0x000000FF);
					PlayerTextDrawFont(playerid, EventTimeTD[playerid][0], 2);
					PlayerTextDrawSetProportional(playerid, EventTimeTD[playerid][0], 1);
					PlayerTextDrawSetSelectable(playerid, EventTimeTD[playerid][0], 0);
					PlayerTextDrawShow(playerid, EventTimeTD[playerid][0]);
				}
			}
		}
	   	case 9821:
	   	{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return SendBotMessage(playerid, !"Каждый байкер получает по 1 черепу в Payday.\nНо если вдруг ты не состоишь в Warlock MC, ты можешь попыть удачу\nна дерби, но шанс того что тебе выпадет череп, равен 1к3!");
			    case 1: return SendBotMessage(playerid, !"За черепа ты можешь купить самые уникальные детали для своего мотоцикла.\nНапример туристическая сумка, дает возможность перевозить в ней предметы.\nОстальные просто улучшают его внешний вид.");
			    case 2: return SendBotMessage(playerid, !"Чтобы что-то купить за черепа, ты должен подъехать\nко мне на мото, затем посигналить.");
			}
	   	}
       	case 1981:
       	{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
					new carid = GetPlayerVehicleID(playerid);
					if(ParkingEntered[playerid] == -1)
					{
						for(new i; i < MAX_PARKING; i++)
						{
							if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]))
					        {
								if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
								{
									SetVehiclePos(carid, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z] + 1.0);
									SetVehicleZAngle(carid, parking[i][pExit_a]);
									LinkVehicleToInterior(carid, 1);
									SetVehicleVirtualWorld(carid, parking[i][pVWorld]);
									//
									SetPlayerFacingAngle(playerid, parking[i][pExit_a]);
									SetPlayerInterior(playerid, 1);
									SetPlayerVirtualWorld(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
								else //Когда игрок не в тачке
								{
									J_SetPlayerPos(playerid, parking[i][pExit_x], parking[i][pExit_y], parking[i][pExit_z] + 1.0);
									SetPlayerFacingAngle(playerid, parking[i][pExit_a]);
									SetPlayerInterior(playerid, 1);
									SetPlayerVirtualWorld(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
							}
						}
					}
				}
			    case 1:
				{
					new carid = GetPlayerVehicleID(playerid);
					if(ParkingEntered[playerid] == -1)
					{
						for(new i; i < MAX_PARKING; i++)
						{
							if(IsPlayerInRangeOfPoint(playerid, 2.0, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]))
					        {
								if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //Когда игрок в тачке
								{
									SetVehiclePos(carid, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z] + 1.0);
									SetVehicleZAngle(carid, parking[i][pVExit_a]);
									LinkVehicleToInterior(carid, 1);
									SetVehicleVirtualWorld(carid, parking[i][pVWorld]);
									//
									SetPlayerFacingAngle(playerid, parking[i][pVExit_a]);
									SetPlayerInterior(playerid, 1);
									SetPlayerVirtualWorld(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
								else
								{
									J_SetPlayerPos(playerid, parking[i][pVExit_x], parking[i][pVExit_y], parking[i][pVExit_z] + 1.0);
									SetPlayerFacingAngle(playerid, parking[i][pVExit_a]);
									SetPlayerInterior(playerid, 1);
									SetPlayerVirtualWorld(playerid, parking[i][pVWorld]);
									ParkingEntered[playerid] = i;
									break;
								}
							}
						}
					}
				}
			}
	   	}
		case 9918:
	   	{
			if(!response) return 1;
			if(nomeraproverka{playerid}) return SCM(playerid, COLOR_GREY, !"Вы уже получили свой номер на авто!");
			switch(listitem)
			{
				case 0:
			    {
		            GetNumberCars(playerid, PI[playerid][pCars]);
		            if(PI[playerid][pCars] > 0)
					{
				        if(GetMoney(playerid) < 10000) return SCM(playerid, COLOR_GREY, !"У вас недостаточно денег!");
						new numbers = 1000 + random(9000);
						f(str, sizeof(str), "Вы успешно получили разрешение на установку номера: {3CE564}%i.", numbers);
						SCM(playerid, -1, str);
						SCM(playerid, -1, !"Отправляйтесь на {267B3A}специальную {FFFFFF}автомастерскую, где гос. работники установят вам нужные номера. Пункт назначения");
						SCM(playerid, -1, !"отмечен красной меткой на миникарте. Если потеряли, то используйте: {267B3A}/gps - Важные места - Станция тех. обслуживания");
						f(str, sizeof(str), "SA%iLS", numbers);
						SetString(nomera[playerid], str);
						nomeraproverka{playerid} = true;
						EnableGPSForPlayer(playerid, 217.2211, -228.2586, 1.7786);
					}
					else SCM(playerid, COLOR_GREY, !"У вас нет личного транспорта!");
				}
			    case 1:
			    {
		            GetNumberCars(playerid, PI[playerid][pCars]);
		            if(PI[playerid][pCars] > 0)
					{
				        if(GetMoney(playerid) < 600000) return SCM(playerid, COLOR_GREY, !"У вас недостаточно денег!");
				        SPD(playerid, 9812, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Регистрация именных номеров!\nСтоимость: {7CFF6D}600 000$\n\n{FFFFFF}Введите в строку желаемый вами номер.\nИспользуйте от 4 до {7CFF6D}10 {FFFFFF}символов.", !"Принять", !"Отмена");
					}
					else SCM(playerid, COLOR_GREY, !"У вас нет личного транспорта!");
				}
			}
		}
		case 9812:
	   	{
			if(!response) return 1;
			if(!(4 <= strlen(inputtextsave) <= 10)) return SPD(playerid, 9812, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Регистрация именных номеров!\nСтоимость: {7CFF6D}600 000$\n\n{FFFFFF}Введите в строку желаемый вами номер.\nИспользуйте от 4 до {7CFF6D}10 {FFFFFF}символов.", !"Принять", !"Отмена");
			SetString(nomera[playerid], inputtextsave);
			SCMf(playerid, -1, "Вы успешно получили разрешение на установку номера: {3CE564}%s.", nomera[playerid]);
			SCM(playerid, -1, !"Отправляйтесь на {267B3A}специальную {FFFFFF}автомастерскую, где гос. работники установят вам нужные номера. Пункт назначения");
			SCM(playerid, -1, !"отмечен красной меткой на миникарте. Если потеряли, то используйте: {267B3A}/gps - Важные места - Станция тех. обслуживания");
			nomeraproverka{playerid} = true;
			GiveMoney(playerid, -600000);
			aml(52, playerid, "", "разрешение на установку номера", 600000);
			EnableGPSForPlayer(playerid, 217.2211, -228.2586, 1.7786);
	   	}
		case 9811:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: PlayAudioStreamForPlayer(playerid, "http://radio-electron.ru:8000/192");
			    case 1: PlayAudioStreamForPlayer(playerid, "http://listen.radionomy.com:80/LaserStar-Rock-Metal");
			    case 2: PlayAudioStreamForPlayer(playerid, "http://air.radiorecord.ru:8101/rr_320");
			    case 3: PlayAudioStreamForPlayer(playerid, "http://ep128server.streamr.ru:8030/ep128");
			    case 4: PlayAudioStreamForPlayer(playerid, "http://listen.rpfm.ru:9000/premium128");
			    case 5: PlayAudioStreamForPlayer(playerid, "http://zaycevfm.cdnvideo.ru/ZaycevFM_pop_256.mp3");
			    case 6: PlayAudioStreamForPlayer(playerid, "http://dorognoe.hostingradio.ru:8000/dorognoe");
			    case 7: PlayAudioStreamForPlayer(playerid, "http://chanson.hostingradio.ru:8041/chanson-uncensored128.mp3");
			    case 8: PlayAudioStreamForPlayer(playerid, "http://listen.myradio24.com:9000/8020");
			    case 9: PlayAudioStreamForPlayer(playerid, "http://nashe.streamr.ru/nashe-128.mp3");
			    case 10: PlayAudioStreamForPlayer(playerid, "http://pioner.hostingradio.ru:8008/ppr128");
				case 11: PlayAudioStreamForPlayer(playerid, "http://jazz.streamr.ru/jazz-128.mp3");
			}
	    	if(!IsPlayerInAnyVehicle(playerid) && PI[playerid][pHeal] == 0)
			{
				ApplyAnimation(playerid, !"goggles", !"goggles_put_on", 4.1, 0, 0, 0, 0, 0, 1);
				PlayerPlayed{playerid} = true;
				if(GetInvCount(playerid, Item_Radio) && PI[playerid][pTir] == 1) SetPlayerAttachedObject(playerid, 6, 19422, 2, 0.030000, -0.017000, -0.004000, -90.199958, 6.199999, -95.299995, 0.996999, 1.003000, 0.862999);
			}
		}
	    case 9982:
	    {
	        if(!response) return 1;
	        if(GetMoney(playerid) < 900) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
	        switch(listitem)
	        {
	            case 0: SetPlayerVirtualWorld(playerid, 1);
	            case 1: SetPlayerVirtualWorld(playerid, 2);
	            case 2: SetPlayerVirtualWorld(playerid, 3);
	        }
            J_SetPlayerPos(playerid, 1.6695, 24.3364, 1199.5938);
            SetPlayerFacingAngle(playerid, 0.2490);
            SetPlayerInterior(playerid, 1);
            GiveGun(playerid, 46, 1);
	    }
        case 3212:
        {
			if(!response) return 1;
            OBJECT_RAKE[playerid] = 1;
            GiveMoney(playerid, -4000);
            aml(52, playerid, "", "покупка инструмента", 4000);
			SetPlayerAttachedObject(playerid, 0, 18890, 6, 0.045999, -0.060999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
            SendBotMessage(playerid, "Отлично! Держи инструмент, с помощью него\nты сможешь собирать лён и хлопок на поле");
            SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы собрать урожай, дождитесь созревания урожая");
            SCM(playerid, COLOR_GREEN, !"[Подсказка] После того как урожай созреет, подойдите к грядке и нажмите ПРОБЕЛ!");
            GiveBizMoney(146, 4000);
        }
        case 3213:
        {
            if(!response) return 1;
            OBJECT_SLEGAN[playerid] = 1;
            GiveMoney(playerid, -4000);
            aml(52, playerid, "", "покупка инструмента", 4000);
            SetPlayerAttachedObject(playerid, 0, 19631, 6, 0.053000, 0.047000, 0.018999, 101.800003, 1.299999, 3.999996, 1.000000, 1.000000, 1.000000);
            SendBotMessage(playerid, "Отлично! Держи инструмент, с помощью него\nты сможешь добыть камень, металл и другие полезные ископаемые на месторождениях");
            SCM(playerid, COLOR_GREEN, !"[Подсказка] Чтобы добыть полезные ископаемые, подойдите к месторождению и нажмите ПРОБЕЛ!");
            GiveBizMoney(145, 4000);
        }
        case 7000:
		{
			if(!response) return 1;
			if(!bumboxopen{playerid}) return 1;
			new stri;
			if(sscanf(inputtextsave, "d",stri)) return false;
			if(stri < 1) return SPD(playerid, 7000, DIALOG_STYLE_INPUT, !"Бумбокс", !"{FFFFFF}Введите страницу на которую хотите перейти\n{FFFFFF}Нельзя перейти меньше 1 страницы", !"Перейти", !"Отмена");
			if(stri > 27) return SPD(playerid, 7000, DIALOG_STYLE_INPUT, !"Бумбокс", !"{FFFFFF}Введите страницу на которую хотите перейти\n{FFFFFF}Нельзя перейти больше 27 страницы!", !"Перейти", !"Отмена");
			BumBoxStr(playerid, stri);
		}
	    case 1931:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(PI[playerid][pFamilyMember] == -1) return SendBotMessage(playerid, "Эти задания могут выполнять только члены семей!");
					static skr[124];
					skr[0] = EOS;
				    if(AcceptQuest[playerid][11] == 0) skr = "{3A8819}[Доступен]{FFFFFF}";
					else if(QuestProgress[playerid][11] == 100) skr = "{C71D1D}[Выполнен]{FFFFFF}";
				    else if(QuestProgress[playerid][11] == QI[11][LastProgress] && AcceptQuest[playerid][11] != 0) skr = "{307CDA}[Можно завершить]{FFFFFF}";
					else if(QuestProgress[playerid][11] >= 0 && AcceptQuest[playerid][11] != 0) skr = "{DA9815}[В процессе]{FFFFFF}";
					QuestShow[playerid][0] = 11;
					ac_ShowPlayerDialog(playerid, 7971),ShowPlayerDialogf(playerid, 7971, DIALOG_STYLE_LIST, !"{BFBBBA}Квесты", !"Принять", !"Отмена", "%s %s", QI[11][QuestName], skr);
	            }
	            case 1:
	            {
	                if(GetInvCount(playerid, Item_FamilyTalon) < 500) return SendBotMessage(playerid, "{AFAFAF}[Ошибка] {FFFFFF}У вас недостаточно талонов!");
	                InvAdd(playerid, Item_FamilyTalon, -500);
	                aml(102, playerid, "", "обмен у Аксиомы", Item_FamilyTalon, 500);
	                InvAdd(playerid, Item_Boombox_Red, 1);
	                aml(101, playerid, "", "обмен у Аксиомы", Item_Boombox_Red, 1);
	                GameTextForPlayer(playerid, "successful", 0, 1);
	                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}- Поздравляем!\nТеперь вы владелец активного аксессуара: {FF5824}'Бумбокс'\n{FFFFFF}Используйте команду /boom, чтобы установить бумбокс.", !"Окей", !"");
	            }
	            case 2:
	            {
	                if(GetInvCount(playerid, Item_FamilyTalon) < 850) return SendBotMessage(playerid, "{AFAFAF}[Ошибка] {FFFFFF}У вас недостаточно талонов!");
	               	InvAdd(playerid, Item_FamilyTalon, -850);
	               	aml(102, playerid, "", "обмен у Аксиомы", Item_FamilyTalon, 850);
	                InvAdd(playerid, Item_Supreme, 1);
	                aml(101, playerid, "", "обмен у Аксиомы", Item_Supreme, 1);
	                GameTextForPlayer(playerid, "successful", 0, 1);
	                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}- Поздравляем!\nТеперь у вас есть наклейка: {FF5824}'Supreme'\n{FFFFFF}Используйте команду /supreme в личном авто, чтобы её установить.", !"Окей", !"");
	            }
	            case 3:
	            {
	                if(GetInvCount(playerid, Item_FamilyTalon) < 1300) return SendBotMessage(playerid, !"{AFAFAF}[Ошибка] {FFFFFF}У вас недостаточно талонов!");
	                InvAdd(playerid, Item_FamilyTalon, -1300);
	                aml(102, playerid, "", "обмен у Аксиомы", Item_FamilyTalon, 1300);
	                InvAdd(playerid, Item_Samsung_White, 1);
	                aml(101, playerid, "", "обмен у Аксиомы", Item_Samsung_White, 1);
                    GameTextForPlayer(playerid, !"successful", 0, 1);
                    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно купили мобильное устройство!");
	            }
	            case 4:
	            {
	                if(GetInvCount(playerid, Item_FamilyTalon) < 1300) return SendBotMessage(playerid, !"{AFAFAF}[Ошибка] {FFFFFF}У вас недостаточно талонов!");
	                InvAdd(playerid, Item_FamilyTalon, -1300);
	                aml(102, playerid, "", "обмен у Аксиомы", Item_FamilyTalon, 1300);
	                InvAdd(playerid, Item_iPhone_White, 1);
	                aml(101, playerid, "", "обмен у Аксиомы", Item_iPhone_White, 1);
                    GameTextForPlayer(playerid, !"successful", 0, 1);
                    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно купили мобильное устройство!");
	            }
	        }
		}
	    case 1281:
	    {
	        if(!response) return 1;
	        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 60) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Жалоба должна состоять от 6 до 60 символов!");
	        f(str, sizeof(str), "\n\n{8FF591}%s{FFFFFF}: %s", PN(playerid), inputtextsave);
	        strcat(zalobi[COMPLAINTS], str);
	        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно оставили жалобу для Мэра!");
	        GameTextForPlayer(playerid, !"Successful", 0, 1);
		    COMPLAINTS ++;
		    SetPVarInt(playerid, !"zaloba", gettime() + 3600);
	    }
	    case 6682:
	    {
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
                    if(GetPVarInt(playerid, !"zaloba") > gettime()) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Оставлять жалобы, можно 1 раз в час!");
                    SPD(playerid, 1281, DIALOG_STYLE_INPUT, !"", !"\n\n{FFFFFF}Опишите жалобу в нескольких словах!\nВсе жалобы проверяются мэром и его заместителем\n{8FF591}Максимальная длина жалобы 60 символов!\n\n", !"Принять", !"Отмена");
				}
				case 1:
				{
					for (new i; i < COMPLAINTS; i++)
					{
					    if(i != 0) strcat(str, "\n");
					    strcat(str, zalobi[i]);
					}
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Жалобы", str, !"Закрыть", !"");
				}
			}
	    }
   case 9989:
		{
			if(!response) return 1;
			new i = GetPlayerVirtualWorld(playerid) - 50;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у двери дома!");
			switch(listitem)
			{
				case 0:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					J_SetPlayerPos(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
					SetCameraBehindPlayer(playerid);

					HouseEntered[playerid] = -1;
				}
				case 1:
				{
				    if(!HouseInfo[HouseEntered[playerid]][hPodval]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом доме нет подвала, его нужно построить!");
					J_SetPlayerPos(playerid, 1079.0709, 937.4053, 1604.8663);
					SetPlayerFacingAngle(playerid, 373.3650);
				}
				case 2:
                {
                    if(!HouseInfo[HouseEntered[playerid]][hMiningPodval]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом доме нет подвала с винтеляцией, его нужно построить!");
                    SetPlayerInterior(playerid, 17);
                    J_SetPlayerPos(playerid, -1661.0420,-246.3548,14.1484);
                    SetPlayerFacingAngle(playerid, 373.3650);
                }
				case 3:
				{
				    if(GetString(HouseInfo[i][hOwner], PN(playerid)) || GetString(HRoomOwner[i][HouseRooms[GetHouseStyle(i)]], PN(playerid)) || IsACop(playerid))
					{
					    J_SetPlayerPos(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_X], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Y], GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_Z] + 1.0);
						SetPlayerInterior(playerid, GaragesInteriors[HouseInfo[i][hKlass] - 1][e_GARAGE_INTERIOR_INT]);
						SetPlayerVirtualWorld(playerid, i + 50);
						GarageEntered[playerid] = i;
						HouseEntered[playerid] = -1;
					}
					else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш гараж!");
				}
			}
		}
		case 9999:
		{
			if(!response) return 1;
			new i = GetPlayerVirtualWorld(playerid) - 50;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у двери дома!");
			switch(listitem)
			{
				case 0:
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					J_SetPlayerPos(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
					SetCameraBehindPlayer(playerid);

					HouseEntered[playerid] = -1;
				}
				case 1:
				{
				    if(!HouseInfo[HouseEntered[playerid]][hPodval]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом доме нет подвала, его нужно построить!");
					J_SetPlayerPos(playerid, 1079.0709, 937.4053, 1604.8663);
					SetPlayerFacingAngle(playerid, 373.3650);
				}
				case 2:
                {
                    if(!HouseInfo[HouseEntered[playerid]][hMiningPodval]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В этом доме нет подвала с винтеляцией, его нужно построить!");
                    SetPlayerInterior(playerid, 17);
                    J_SetPlayerPos(playerid, -1661.0420,-246.3548,14.1484);
                    SetPlayerFacingAngle(playerid, 373.3650);
                }
			}
		}
	    case 8172:
	    {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1172.6415, -1323.3395, 15.4030)) return 1;
			switch(listitem)
			{
				case 0:
				{
					J_SetPlayerPos(playerid, -1770.4873, -2017.3481, 1500.7853);
					SetPlayerFacingAngle(playerid, 282.9354);
					SetPlayerInterior(playerid, 2);
					SetPlayerVirtualWorld(playerid, 1);
				}
				case 1:
				{
				    if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
					J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
					SetPlayerInterior(playerid, 2);
					SetPlayerFacingAngle(playerid, 182.6985);
					SetPlayerVirtualWorld(playerid, 1);
				}
			}
	    }
	    case 8173:
	    {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, 1607.4197, 1815.2408, 10.8203)) return 1;
			switch(listitem)
			{
				case 0:
				{
					J_SetPlayerPos(playerid, -1770.4873, -2017.3481, 1500.7853);
					SetPlayerFacingAngle(playerid, 282.9354);
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 2);
				}
				case 1:
				{
				    if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
					J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
					SetPlayerInterior(playerid, 3);
					SetPlayerFacingAngle(playerid, 182.6985);
					SetPlayerVirtualWorld(playerid, 2);
				}
			}
	    }
	    case 8174:
	    {
			if(!response) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 2.0, -2668.8684, 640.1640, 14.4531)) return 1;
			switch(listitem)
			{
				case 0:
				{
					J_SetPlayerPos(playerid, -1770.4873, -2017.3481, 1500.7853);
					SetPlayerFacingAngle(playerid, 282.9354);
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 3);
				}
				case 1:
				{
				    if(PI[playerid][pLevel] < 20 && !IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вип отделение доступно с 20 лет в штате!");
					J_SetPlayerPos(playerid, -1312.6182, 20.8936, 1597.6073);
					SetPlayerInterior(playerid, 3);
					SetPlayerFacingAngle(playerid, 182.6985);
					SetPlayerVirtualWorld(playerid, 3);
				}
			}
	    }
	    #if AC_ON
        case DIALOG_ANTICHEAT_SETTINGS:
        {
            if(!response) return pAntiCheatSettingsPage{playerid} = 0;
            if(GetString(inputtext2, AC_DIALOG_NEXT_PAGE_TEXT)) pAntiCheatSettingsPage{playerid} ++;
            else if(GetString(inputtext2, AC_DIALOG_PREVIOUS_PAGE_TEXT)) pAntiCheatSettingsPage{playerid} --;
            else
            {
                pAntiCheatSettingsEditCodeId[playerid] = pAntiCheatSettingsMenuListData[playerid][listitem];
                return ShowPlayer_AntiCheatEditCode(playerid, pAntiCheatSettingsEditCodeId[playerid]);
            }
            return ShowPlayer_AntiCheatSettings(playerid);
        }
        case DIALOG_ANTICHEAT_EDIT_CODE:
        {
            if(!response)
            {
                pAntiCheatSettingsEditCodeId[playerid] = -1;
                return ShowPlayer_AntiCheatSettings(playerid);
            }
            new item = pAntiCheatSettingsEditCodeId[playerid];

            if(AC_CODE_TRIGGER_TYPE[item] == listitem) return ShowPlayer_AntiCheatSettings(playerid);
            if(AC_CODE_TRIGGER_TYPE[item] == AC_CODE_TRIGGER_TYPE_DISABLED && listitem != AC_CODE_TRIGGER_TYPE_DISABLED) EnableAntiCheat(item, 1);
            else if(listitem == AC_CODE_TRIGGER_TYPE_DISABLED) EnableAntiCheat(item, 0);

            AC_CODE_TRIGGER_TYPE[item] = listitem;

            mysql_pqueryf(mysql, "UPDATE "AC_TABLE_SETTINGS" SET `"AC_TABLE_FIELD_TRIGGER"` = '%i' WHERE `"AC_TABLE_FIELD_CODE"` = '%i'", listitem, item);
            return ShowPlayer_AntiCheatSettings(playerid);
        }
        #endif
		case 168:
		{
			if(!response) return 1;
			if(!strlen(inputtextsave)) return SPD(playerid, 168, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
			if(GetPVarInt(playerid, !"authcode") != strval(inputtextsave)) return 0;
			mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Password`= '%s' WHERE `ID` = '%i'", MD5_Hash(rePassword[playerid]), PI[playerid][pID]);
			SCM(playerid, COLOR_LIGHTBLUE, !"Пароль изменен!");
		}
		case 1111:
		{
			if(!response) return 1;
		    switch(listitem)
		    {
                case 0:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | X2 Payday", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | X2 Payday",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | X2 Payday", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 1:
                {
                    SendRconCommandf("hostname "NAME" RP | %s | X3 Payday", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | X3 Payday",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | X3 Payday", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 2:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | X5 Payday", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | X5 Payday",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | X5 Payday", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 3:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | Обновление", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | Обновление!",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | Обновление", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 4:
				{
                    SendRconCommandf("hostname "NAME" Role Play | %s", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" Role Play | %s",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" Role Play | %s", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 5:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | Скоро обновление!", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | Скоро обновление!",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | Скоро обновление!", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 6:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | Акция для новичков!", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | Акция для новичков!",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | Акция для новичков!", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 7:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | Праздничное обновление!", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | Праздничное обновление!",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | Праздничное обновление!", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 8:
				{
                    SendRconCommandf("hostname "NAME" RP | %s | Новогоднее обновление!", Mode_City);
                    SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
                    GameTextForPlayer(playerid, "successful", 0, 1);
	                f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}"NAME" RP | %s | Новогоднее обновление!",PN(playerid), Mode_City);
	                SendAdminsMessage(COLOR_RED, str);
	                f(str_1, sizeof(str_1), "сменил название сервера на: "NAME" RP | %s | Новогоднее обновление!", Mode_City);
					aml(18, playerid, "", str_1);
                }
                case 9: SPD(playerid, 1112, 1, "", "{FFFFFF}Введите новое название сервера", "Принять", "Отмена");
			}
		}
        case 1112:
        {
			if(!response) return 1;
            SendRconCommandf("hostname %s", inputtextsave);
            SPD(playerid, 0, 0, "", "{FFFFFF}Вы успешно изменили название сервера!", "Понял", "");
            GameTextForPlayer(playerid, "successful", 0, 1);
            f(str, sizeof(str), "Администратор: {FFFFFF}%s сменил название сервера на: {FF6347}%s",PN(playerid),inputtextsave);
            SendAdminsMessage(COLOR_RED, str);
	        f(str_1, sizeof(str_1), "сменил название сервера на: %s", inputtextsave);
			aml(18, playerid, "", str_1);
        }
        case 23045:
        {
 			if(!response) return Captch_CloseForPlayer(playerid);
		    if(!Captch_IsValid(playerid, inputtextsave) || !strlen(inputtextsave))
		    {
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ответ неверный!");
				return Captch_CloseForPlayer(playerid);
			}
			switch(captch_idbuy[playerid])
			{
			    case 1:
				{
			        new house = InfoHouse[playerid];
			        if(GetString(HouseInfo[house][hOwner], "The State"))
			        {
				        HouseEntered[playerid] = house;
	                    HouseInfo[house][hProducts] = 0;
				     	InfoHouse[playerid] = -1;
				     	PI[playerid][pDCTime] = 1;
				     	UpdatePlayerDataInt(playerid, "DCTime", 1);
				     	SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ваш дом. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
						static cost[30];
						if(HouseInfo[house][hLevel] != 10)
						{
							GiveMoney(playerid,-HouseInfo[house][hCost]);
							aml(52, playerid, "", "покупка дома", HouseInfo[house][hCost]);
							f(cost, sizeof(cost), "%i", HouseInfo[house][hCost]);
						}
						else
						{
					 		GiveDonate(playerid, -12000);
					 		aml(54, playerid, "", "покупка дома", 12000);
					 		f(cost, sizeof(cost), "%i AZ", HouseInfo[house][hCost]);
						}

						if(!IsAPlayerHouse(playerid, house)) SetPlayerHouse(playerid, house);

				     	PI[playerid][pHouseSpawn] = house;
				     	UpdatePlayerDataInt(playerid, "HouseSpawn", house);

				     	SetPlayerInterior(playerid, HouseInfo[house][hInt]);
					    SetPlayerVirtualWorld(playerid, house + 50);
					    TextDrawHideForPlayer(playerid, HInfoBG);
						for(new i; i < 6; i ++)PlayerTextDrawHide(playerid, HInfoDraw[playerid][i]);
						TextDrawHideForPlayer(playerid, HInfoEnterDraw);
						TextDrawHideForPlayer(playerid, HInfoBuyDraw);
	   	                J_SetPlayerPos(playerid, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]);
					    SetString(HouseInfo[house][hOwner], PN(playerid));
					    UpdateHouse(house);
				     	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Теперь этот дом ваш!");
				     	PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
				     	new ms = GetTickCount() - buytime[playerid];
				     	new min2 = floatround(ms / 1000);
				     	new sec2 = min2*1000-ms;
				     	f(str_1, sizeof(str_1), "%.0i:%02i", min2, ConvertToNegativeNumber(sec2/10));
	                    SendAdminsMessagef(COLOR_RED, "%s [%i] купил дом ID: %i по гос. цене за %s ms! Капча: (%s | %s)", PN(playerid), playerid, house, str_1, inputtextsave, captch_code[playerid]);
						aml(56, playerid, str_1, cost, house);
						Captch_CloseForPlayer(playerid);
						captch_idbuy[playerid] = 0;
						buytime[playerid] = 0;
			        }
			        else
					{
						SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот дом уже куплен!");
						Captch_CloseForPlayer(playerid);
					}
  				}
			    case 2:
				{
                    new biz = InfoBiz[playerid];
                    if(GetString(BizInfo[biz][bOwner], "The State"))
                    {
						static cost[30];
						if(BizInfo[biz][bState] == 19)
						{
							GiveDonateMoney(playerid,-BizInfo[biz][bCost]);
							aml(84, playerid, "", "покупка бизнеса", BizInfo[biz][bCost]);
							f(cost, sizeof(cost), "%i AZ-RUB", BizInfo[biz][bCost]);
						}
						else if(BizInfo[biz][bCost] != 0)
						{
							GiveMoney(playerid,-BizInfo[biz][bCost]);
							aml(52, playerid, "", "покупка бизнеса", BizInfo[biz][bCost]);
							f(cost, sizeof(cost), "%i", BizInfo[biz][bCost]);
						}
						else
						{
					 		GiveDonate(playerid, -500000);
					 		aml(54, playerid, "", "покупка бизнеса", 500000);
					 		cost = "500000 AZ";
						}
		     	        BizInfo[biz][bNalog] = 0;
				        SetString(BizInfo[biz][bOwner], PN(playerid));
				        SetString(BizInfo[biz][bZam], "The State");
				        SetString(BizInfo[biz][bDescription], "");
			     	    UpdateBiz(biz);
			     	    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Теперь этот бизнес ваш!");
						PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
						
				     	new ms = GetTickCount() - buytime[playerid];
				     	new min2 = floatround(ms / 1000);
				     	new sec2 = min2*1000-ms;
				     	f(str_1, sizeof(str_1), "%.0i:%02i", min2, ConvertToNegativeNumber(sec2/10));
	                    SendAdminsMessagef(COLOR_RED, "%s [%i] купил бизнес ID: %i по гос. цене за %s ms! Капча: (%s | %s)", PN(playerid), playerid, biz, str_1, inputtextsave, captch_code[playerid]);
						aml(57, playerid, str_1, cost, biz);

			     	    Captch_CloseForPlayer(playerid);
			     	    captch_idbuy[playerid] = 0;
			     	    buytime[playerid] = 0;
		     	    }
		     	    else
					{
						SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
						Captch_CloseForPlayer(playerid);
					}
			    }
			}
			return 1;
        }
		case 2388:
        {
            if(!response) return callcmd::menu(playerid);
            f(str,sizeof(str), "SELECT * FROM `Promo` WHERE `code`='%s'", inputtextsave);
            mysql_pquery(mysql, str, "mysql_PromoCheck", "is", playerid,inputtextsave);
        }
        case 2374:
        {
            if(!response) return callcmd::apanel(playerid);
            switch(listitem)
            {
                case 0: mysql_pquery(mysql, "SELECT * FROM `Promo`", "mysql_PromoCodeShow", "i", playerid);
                case 1: SPD(playerid,2380,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите код для промо-кода:","Далее","Отмена");
                case 2: SPD(playerid,2389,DIALOG_STYLE_INPUT,"{66CC00}Удаление промокода","Введите код для промо-кода:","Далее","Отмена");
            }
        }
        case 2389:
	    {
            if(!response) return 1;
            if(!strlen(inputtextsave)) return SPD(playerid, 2389, DIALOG_STYLE_INPUT, "{63BD4E}Удаление промокода", "{FFFFFF}Введите промокод который хотите удалить", "Далее", "Назад");
			mysql_pquery(mysql, "SELECT * FROM `Promo`", "PromoCodeDelete", "is", playerid, inputtextsave);
	    }
        case 2380:
        {
            if(!response) return SPD(playerid, 2374, DIALOG_STYLE_LIST, !"{FFFFFF}Панель управления", !"1. Список промокодов\n2. Создать промокод\n3. Удалить промокод", !"Выбрать", !"Закрыть");
            if(!strlen(inputtextsave)) return SPD(playerid,2380,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите код для промо-кода:\nИспользуйте от 3 до 16 символов","Далее","Отмена");
            if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 16) return SPD(playerid,2380,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите код для промо-кода:\n{FF0000}Используйте от 3 до 16 символов","Далее","Отмена");
            SetPVarString(playerid,"PROMONAME",inputtextsave);
            SPD(playerid,2381,DIALOG_STYLE_INPUT,"{FFFFFF}Создание промокода","Введите кол-во денег,которое будет выдано при вводе промо-кода", !"Принять", !"Отмена");
        }
        case 2381:
        {
            if(!response) return SPD(playerid,2380,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите код для промо-кода:\nИспользуйте от 3 до 16 символов","Далее","Отмена");
            if(!strlen(inputtextsave)) return SPD(playerid,2381,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите кол-во денег,которое будет выдано при вводе промо-кода", !"Принять", !"Отмена");
            SetPVarInt(playerid,"PROMOMONEY",strval(inputtextsave));
            SPD(playerid,2382,DIALOG_STYLE_INPUT,"{FFFFFF}Создание промокода","Введите кол-во AZ монета,которое будет выдано при вводе промо-кода", !"Принять", !"Отмена");
        }
        case 2382:
        {
            if(!response) return SPD(playerid,2381,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите кол-во денег,которое будет выдано при вводе промо-кода", !"Принять", !"Отмена");
            if(!strlen(inputtextsave)) return SPD(playerid,2382,DIALOG_STYLE_INPUT,"{66CC00}Создание промокода","Введите кол-во AZ монета,которое будет выдано при вводе промо-кода", !"Принять", !"Отмена");
            SetPVarInt(playerid,"PROMOVIPMONEY",strval(inputtextsave));
            SPD(playerid,2386,DIALOG_STYLE_INPUT,"{FFFFFF}Создание промокода","Продолжить","ОК","Отмена");
        }
		case 2386:
        {
            static promoname[16];
            GetPVarString(playerid, "PROMONAME", promoname, sizeof(promoname));
            new promomoney = GetPVarInt(playerid,"PROMOMONEY");
			new promovip = GetPVarInt(playerid,"PROMOVIPMONEY");
            f(str,sizeof(str),"{FFFFFF}Вы хотите создать промокод '%s'?\nВыдача AZ монет: %i \nВыдача денег: %i$",promoname,promovip,promomoney);
	        SPD(playerid,2387,DIALOG_STYLE_MSGBOX,"{66CC00}Создание промокода",str,"Создать","Отмена");
        }
        case 2387:
        {
            if(!response) return SPD(playerid, 2374, DIALOG_STYLE_LIST, !"{FFFFFF}Панель управления", !"1. Список промокодов\n2. Создать промокод\n3. Удалить промокод", !"Выбрать", !"Закрыть");
            static promoname[16];
            GetPVarString(playerid, "PROMONAME", promoname, sizeof(promoname));
            f(str,sizeof(str), "SELECT * FROM `Promo` WHERE `code`='%s'", promoname);
            mysql_pquery(mysql, str, "mysql_PromoCreate", "is", playerid,promoname);
        }
		case 1:
	    {
			if(response)
			{
			    PlayerPlaySound(playerid, 1136, 0.0, 0.0, 0.0);
			    switch(RegisterState[playerid])
			    {
				    case 1:
				    {
						if(strlen(inputtextsave) < 6) return ShowRegisterDialog(playerid,RegisterState[playerid]);
						else if(!CheckPassword(inputtextsave)) return ShowRegisterDialog(playerid,RegisterState[playerid]);
						RegisterState[playerid] = 2;
						mysql_escape_string(inputtextsave, RegPass[playerid]);
						ShowRegisterDialog(playerid,RegisterState[playerid]);
					}
					case 2:
					{
					    RegisterState[playerid] = 3;
				        ShowRegisterDialog(playerid,RegisterState[playerid]);
				        RegSex[playerid] = listitem+1;
					}
					case 3:
					{
					    RegisterState[playerid] = 4;
				        ShowRegisterDialog(playerid, RegisterState[playerid]);
				        RegRace[playerid] = listitem;
					}
				    case 4:
				    {
				        static Info[30];
				        switch(listitem)
				        {
				            case 0: f(Info,sizeof(Info),"%s","Вкладка 'Hosted'") ;
				            case 1:
							{
							    f(Info,sizeof(Info),"%s","От друзей") ;
							    RegisterState[playerid] = 5;
								ShowRegisterDialog(playerid,RegisterState[playerid]);
							}
							case 2: f(Info,sizeof(Info),"%s","На порталах") ;
							case 3: f(Info,sizeof(Info),"%s","В поисковике") ;
							case 4: f(Info,sizeof(Info),"%s","Другое") ;
				        }
						if(listitem != 1)
						{
						    RegisterState[playerid] = 0;
						    SetString(RegReferal[playerid],"No Referal");
						    ClearChatForPlayer(playerid);
						    PlayerReg(playerid);
						}
					}
				    case 5:
				    {
				        mysql_format(mysql, str, sizeof(str), "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", inputtextsave);
				        mysql_pquery(mysql, str, "MysqlCheckNickReferal", "ds", playerid, inputtextsave);
				    }
				    default: return 0;
				}
			}
			else
			{
		        if(RegisterState[playerid] > 1)
		        {
		       	 	RegisterState[playerid] --;
					ShowRegisterDialog(playerid,RegisterState[playerid]);
				}
				else J_Kick(playerid, 7725);
			}
			return 1;
		}
		case 377:
		{
		    if(response)
		    {
		        if(GetMoney(playerid)< SellGzone[playerid])return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        new zone = GetPlayerGangZone(playerid);
		        GiveMoney(playerid,-SellGzone[playerid]);
		        GiveMoney(SellPGzone[playerid],SellGzone[playerid]);
		        aml(50, playerid, PN(SellPGzone[playerid]), "покупка территории", SellGzone[playerid]);
      			GangZoneHideForAll(GangZone[zone]);
			    GangZoneShowForAll(GangZone[zone],TeamColors[PI[playerid][pMember]]);
			    new lastgang = GZInfo[zone][gzFracID];
			    GZInfo[zone][gzFracID] = PI[playerid][pMember];
			    SendTeamMessage(PI[playerid][pMember],COLOR_VALIK,"Ваша банда захватила новую территорию");
                UpdateDorm(PI[playerid][pMember]);
			    UpdateDorm(lastgang);
			    SaveGangZone(zone);
		    }
		}
        case 556:
        {
        	if(response)
        	{
				new num;
				if(PI[playerid][pMuteTime]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете редактировать объявления, так как у вас бан чата!");
                foreach(new i: Player)
                {
                    if(AddTimeMessages[i] > 0)
                    {
                		if(num == listitem)
  						{
  						    new time = gettime() - AddTimeMessages[i];
  						    AddId[playerid] = i;
							if(TimeMessage[playerid] > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Обрабатывать объявления можно раз в 10 секунд!");
  						    AddTimeMessages[AddId[playerid]] = 0;
							f(str,sizeof(str),"{FFFFFF}Объявление от {FFD700}%s, спустя %ic.\n{FFFFFF}Сообщение:\t{33AA33}%s\n\n{FFFFFF}Отредактируйте рекламу в нужный формат.",PN(i),time,AddMessages[i]);
							SPD(playerid,557,1,"Редактирование",str,"Отправить","Отклонить");
							break;
  						}
  						num ++;
					}
				}
			}
			return 1;
		}
		case 557:
		{
		    if(response)
        	{
        	    if(vipob[AddId[playerid]] > 0)
        	    {
        	        //if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 60) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Объявление должно состоять с 6 до 60 символов!");
	                foreach(new i: Player)
	                {
						if(!IsPlayerLogged{AddId[playerid]})return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
						if(PI[AddId[playerid]][pTelNum]<=0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
	                    if(PI[i][pNewsChat]==0)
	                    {
	                        static getradio[40];
				            switch(PI[playerid][pMember])
				            {
				                case TEAM_RADIO: getradio = "LS";
				                case TEAM_RADIOSF: getradio = "SF";
				                case TEAM_RADIOLV: getradio = "LV";
				                default: getradio = "";
				            }
			        	    SCMf(i, -1, "{FCAA4D}[VIP] Объявление: %s. Отправил: %s[%i] Тел. %i",inputtextsave,PN(AddId[playerid]),AddId[playerid],PI[AddId[playerid]][pTelNum]);
							SCMf(i, -1, "{C17C2D}				Отредактировал сотрудник СМИ [ %s ] : %s[%i]",getradio,PN(playerid),playerid);
						}
					}
					GiveMoney(playerid,GLS[20]);
					OrgInfo[PI[playerid][pMember]][oBank]+=GLS[20];
					SCMf(playerid, COLOR_RED, "Вы получили $%i за отредактированое вами объявление.",GLS[20]);
	                AddTimeMessages[AddId[playerid]] = 0;
	                vipob[AddId[playerid]] = 0;
					if(PI[AddId[playerid]][pMoney]<GLS[20])
					{
						PI[AddId[playerid]][pCredit]+=GLS[20];
						UpdatePlayerDataInt(AddId[playerid], "Credit", PI[AddId[playerid]][pCredit]);
						SCMf(AddId[playerid], COLOR_GREY, "[Подсказка] {FFFFFF}На ваш кредитный счет начислено %i$ т.к. у вас недостаточно средств на оплату.",GLS[20]);
					}
					else
					{
						GiveMoney(AddId[playerid], -25000);
						aml(50, AddId[playerid], PN(playerid), "объявления", 25000);
					}
					callcmd::Newsredak(playerid);
					TimeMessage[playerid] = gettime() + 10;
        	    }
        	    else
        	    {
	                //if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 60) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Объявление должно состоять с 6 до 60 символов!");
	                foreach(new i: Player)
	                {
						if(IsPlayerLogged{AddId[playerid]})return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
						if(PI[AddId[playerid]][pTelNum]<=0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок который отправил Объявление вышел из игры!");
	                    if(PI[i][pNewsChat]==0)
	                    {
	                        static getradio[40];
				            switch(PI[playerid][pMember])
				            {
				                case TEAM_RADIO: getradio = "LS";
				                case TEAM_RADIOSF: getradio = "SF";
				                case TEAM_RADIOLV: getradio = "LV";
				                default: getradio = "";
				            }
			        	    f(str,sizeof(str),"Объявление: %s. Отправил: %s[%i] Тел. %i",inputtextsave,PN(AddId[playerid]),AddId[playerid],PI[AddId[playerid]][pTelNum]);
							SCM(i,COLOR_VALIK,str);
							f(str,sizeof(str),"				Отредактировал сотрудник СМИ [ %s ] : %s[%i]",getradio,PN(playerid),playerid);
							SCM(i,COLOR_VALIK,str);
						}
					}
					GiveMoney(playerid,GLS[19]);
					OrgInfo[PI[playerid][pMember]][oBank]+=20;
					f(str,sizeof(str),"Вы получили $%i за отредактированое вами объявление.",GLS[19]);
	                SCM(playerid,COLOR_RED,str);
	                AddTimeMessages[AddId[playerid]] = 0;
					if(PI[AddId[playerid]][pMoney]<GLS[19])
					{
						PI[AddId[playerid]][pCredit]+=GLS[19];
						UpdatePlayerDataInt(AddId[playerid], "Credit", PI[AddId[playerid]][pCredit]);
						f(str,sizeof(str),"[Подсказка] {FFFFFF}На ваш кредитный счет начислено %i$ т.к. у вас недостаточно средств на оплату.",GLS[19]);
						SCM(AddId[playerid],COLOR_GREY,str);
					}
					else
					{	
						GiveMoney(AddId[playerid],-5000);
						aml(50, AddId[playerid], PN(playerid), "объявления", 5000);
					}
					callcmd::Newsredak(playerid);
					TimeMessage[playerid]=gettime()+10;
				}
			}
			else
			{
			    AddTimeMessages[AddId[playerid]] = 0;
			    SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы отклонили объявление!");
			    f(str,sizeof(str),"[Информация] {FFFFFF}Ваше объявление на редакцию СМИ , отклонено редактором: %s[%i].",PN(playerid),playerid);
			    SCM(AddId[playerid],COLOR_RED,str);
			    callcmd::Newsredak(playerid);
			}
		}
		case 9663:
		{
    		if(response)
			{
			 	new carid = GetPlayerVehicleID(playerid);
			    switch(listitem)
				{
				    case 0:
				    {
				        if(IsPlayerInRangeOfPoint(playerid, 20.0, -8.7326,-368.3789,5.5178))
					    {
				        	if(FactoryMats<2000) return SPD(playerid, 0, 0, !"", !"{928989}На заводе недостаточно материалов!\n\n{E11C1C}Необходимо 20000.", !"Закрыть", !"");
				        	if(CarMusorCount[carid] >= 100) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете на достаточно места!", !"Закрыть", !"");
				        	SPD(playerid, 0, 0, !"", !"{928989}Вы успешно загрузили вертолет.\nВведите /carm для того чтобы выбрать организацию\nв которую надо отвезти материалы.", !"Закрыть", !"");
				        	CarMusorCount[carid] = 100;
				        	FactoryMats-=2000;
             				f(str, sizeof(str), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
							UpdateDynamic3DTextLabelText(FactoryText[0], -1, str);
							f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
							DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] >= 100) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете на достаточно места!", !"Закрыть", !"");
						    SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
       						EnableGPSForPlayer(playerid,-8.7326,-368.3789,5.5178); //завод
						}
				    }
					case 1:
					{
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2767.6021,-2366.5049,13.6478))
					    {
					        if(GLS[25] >= 200000) return SPD(playerid, 0, 0, !"", !"{928989}Склад армии переполнен!", !"Закрыть", !"");
					        if(CarMusorCount[carid] < 1) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете недостаточно материалов!", !"Закрыть", !"");
					        SPD(playerid, 0, 0, !"", !"{928989}Вы успешно доставили груз с материалами для изготовления оружия.", !"Закрыть", !"");
							GLS[25] += CarMusorCount[carid]*200;
							SaveInforamtion();
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете на достаточно места!", !"Закрыть", !"");
							SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
          					EnableGPSForPlayer(playerid,2767.6021,-2366.5049,13.6478);
						}
					}
					case 2:
					{
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 309.2398,2041.5328,17.6406))
					    {
					        if(GLS[26] >= 200000) return SPD(playerid, 0, 0, !"", !"{928989}Склад армии переполнен!", !"Закрыть", !"");
					        if(CarMusorCount[carid] < 1) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете недостаточно материалов!", !"Закрыть", !"");
							GLS[26] += CarMusorCount[carid]*200;
							SaveInforamtion();
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно доставили груз с материалами для изготовления оружия.", !"Закрыть", !"");
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете на достаточно места!", !"Закрыть", !"");
							SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
          					EnableGPSForPlayer(playerid,309.2398,2041.5328,17.6406);
						}
					}
					case 3:
					{
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, -1456.9603,501.4638,17.9381))
					    {
					        if(GLS[43] >= 200000) return SPD(playerid, 0, 0, !"", !"{928989}Склад армии переполнен!", !"Закрыть", !"");
					        if(CarMusorCount[carid] < 1) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете недостаточно материалов!", !"Закрыть", !"");
							GLS[43] += CarMusorCount[carid]*200;
							SaveInforamtion();
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно доставили груз с материалами для изготовления оружия.", !"Закрыть", !"");
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SPD(playerid, 0, 0, !"", !"{928989}В вертолете на достаточно места!", !"Закрыть", !"");
							SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
          					EnableGPSForPlayer(playerid,-1456.9603,501.4638,17.9381);
						}
					}
				}

			}
		}
		case 9653:
		{
			if(response)
			{
			    new carid = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в матовозе!");
				switch(listitem)
				{
					case 0:
					{
      					if(OrgInfo[PI[playerid][pMember]][oMats] < 2000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В организации недостаточно патронов!");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2736.0249,-2465.7607,13.6484) || IsPlayerInRangeOfPoint(playerid, 20.0, 145.9202,1915.0007,18.9003) || IsPlayerInRangeOfPoint(playerid, 20.0, -1545.2085,451.3773,7.0315))
					    {
         					if(CarMusorCount[carid] >= 100) return SCM(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}Матовоз уже переполнен!");
					        SPD(playerid, 0, 0, !"", !"{928989}Вы успешно загрузили грузовик.\nВведите /carm для того чтобы выбрать организацию\nв которую надо отвезти патроны.", !"Закрыть", !"");
					        CarMusorCount[carid] = 100;
					        OrgInfo[PI[playerid][pMember]][oMats] -= 2000;
				        	f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
                            DisablePlayerRaceCheckpoint(playerid);
                            foreach(new i: Player)
                            {
                                if(IsAtMafia(i) || IsAtGang(i))
								{
								    if(PI[playerid][pMember]==TEAM_ARMY) SCM(i,COLOR_BLUE,"Со склада Армии ЛС выехал матовоз!");
									if(PI[playerid][pMember]==TEAM_ARMYLV) SCM(i,COLOR_BLUE,"Со склада Армии LV выехал матовоз!");
									if(PI[playerid][pMember]==TEAM_ARMYSF) SCM(i,COLOR_BLUE,"Со склада Армии SF выехал матовоз!");
								}
                            }
					    }
						else
						{
						    if(CarMusorCount[carid] >= 100) return SCM(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}Матовоз уже переполнен, отвезите эти патроны!");
						    SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки патронов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
       						if(PI[playerid][pMember]==TEAM_ARMY) EnableGPSForPlayer(playerid,2736.0249,-2465.7607,13.6484);
       						if(PI[playerid][pMember]==TEAM_ARMYSF) EnableGPSForPlayer(playerid,-1545.2085,451.3773,7.0315);
       						if(PI[playerid][pMember]==TEAM_ARMYLV) EnableGPSForPlayer(playerid,145.9202,1915.0007,18.9003);
						}
					}
					case 1:
					{
					    if(OrgInfo[TEAM_LSPD][oBank] < GLS[17]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Организация не может принять/оплатить вашу работу!");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 1591.2311,-1607.0784,13.8266))
					    {
					        if(OrgInfo[TEAM_LSPD][oMats] > 30000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Склад организации переполнен!");
					        if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
					        f(str,sizeof(str),"[Информация] {FFFFFF}Вы получили премию в размере: $%i",GLS[17]);
							SCM(playerid, COLOR_VALIK, str);
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно перевезли 2 000 патронов на склад Полиции ЛС.", !"Закрыть", !"");
							GiveMoney(playerid,GLS[17]);
							aml(51, playerid, "", "доставку материалов", GLS[17]);
							OrgInfo[TEAM_LSPD][oMats] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_LSPD][oBank] -= GLS[17];
							SaveOrg(TEAM_LSPD);
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
    						RemovePlayerMapIcon(playerid, 98);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}В вашем матовозе недостаточно патронов!");
							SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки патронов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
          					EnableGPSForPlayer(playerid,1591.2311,-1607.0784,13.8266);
						}
					}
					case 2:
					{
					    if(OrgInfo[TEAM_LVPD][oBank] < GLS[17]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Организация не может принять/оплатить вашу работу!");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 633.8635,-571.5131,16.7726))
					    {
					        if(OrgInfo[TEAM_LVPD][oMats] > 30000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}Склад организации переполнен!");
					        if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы получили премию в размере: $%i",GLS[17]);
							SCM(playerid, COLOR_VALIK, str);
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно перевезли 2 000 патронов на склад RCPD.", !"Закрыть", !"");
							GiveMoney(playerid,GLS[17]);
							aml(51, playerid, "", "доставку материалов", GLS[17]);
							OrgInfo[TEAM_LVPD][oMats] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_LVPD][oBank] -= GLS[17];
							SaveOrg(TEAM_LVPD);
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
    						RemovePlayerMapIcon(playerid, 98);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}В вашем матовозе недостаточно патронов!");
    						SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки патронов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
       						EnableGPSForPlayer(playerid,633.8635,-571.5131,16.7726);
						}
					}
					case 3:
					{
					    if(OrgInfo[TEAM_FBI][oBank] < GLS[17]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Организация не может принять/оплатить вашу работу!");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 289.8648,-1630.2656,33.7695))
					    {
					        if(OrgInfo[TEAM_FBI][oMats] > 30000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}Склад организации переполнен!");
          					if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы получили премию в размере: $%i",GLS[17]);
							SCM(playerid, COLOR_VALIK, str);
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно перевезли 2 000 патронов на склад FBI.", !"Закрыть", !"");
							GiveMoney(playerid,GLS[17]);
							aml(51, playerid, "", "доставку материалов", GLS[17]);
							OrgInfo[TEAM_FBI][oMats] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_FBI][oBank] -= GLS[17];
							SaveOrg(TEAM_FBI);
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
							DisablePlayerRaceCheckpoint(playerid);
							RemovePlayerMapIcon(playerid, 98);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
    						SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки патронов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
       						EnableGPSForPlayer(playerid,289.8648,-1630.2656,33.7695);
						}
					}
					case 4:
					{
					    if(OrgInfo[TEAM_SFPD][oBank] < GLS[17]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Организация не может принять/оплатить вашу работу!");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, -1570.3193,663.1941,7.1875))
					    {
					        if(OrgInfo[TEAM_SFPD][oMats] > 30000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}Склад организации переполнен!");
					        if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы получили премию в размере: $%i",GLS[17]);
							SCM(playerid, COLOR_VALIK, str);
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно перевезли 2 000 патронов на склад SFPD.", !"Закрыть", !"");
							GiveMoney(playerid,GLS[17]);
							aml(51, playerid, "", "доставку материалов", GLS[17]);
							OrgInfo[TEAM_SFPD][oMats] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_SFPD][oBank] -= GLS[17];
							SaveOrg(TEAM_SFPD);
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
    						SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки патронов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
       						EnableGPSForPlayer(playerid,-1570.3193,663.1941,7.1875);
						}
					}
					case 5:
					{
					    if(OrgInfo[TEAM_PDLV][oBank] < GLS[17]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Организация не может принять/оплатить вашу работу!");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2234.3909,2453.2590,10.5299))
					    {
					        if(OrgInfo[TEAM_PDLV][oMats] > 30000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}Склад организации переполнен!");
					        if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы получили премию в размере: $%i",GLS[17]);
							SCM(playerid, COLOR_VALIK, str);
							SPD(playerid, 0, 0, !"", !"{928989}Вы успешно перевезли 2 000 патронов на склад LVPD.", !"Закрыть", !"");
							GiveMoney(playerid,GLS[17]);
							aml(51, playerid, "", "доставку материалов", GLS[17]);
							OrgInfo[TEAM_PDLV][oMats] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_PDLV][oBank] -= GLS[17];
							SaveOrg(TEAM_PDLV);
							CarMusorCount[carid] = 0;
					        f(str, sizeof(str), "Загружено: %i%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, str);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}В вашем матовозе недостаточно патронов!");
    						SPD(playerid, 0, 0, !"", !"{928989}Для разгрузки патронов отправляйтесь по красному чекпоинту и  введите /carm ,\nПосле чего и выберите нужный вам пункт!", !"Закрыть", !"");
       						EnableGPSForPlayer(playerid,2234.3909,2453.2590,10.5299);
						}
					}
				}
			}
		}
		case 2:
		{
			if(response)
			{
				if(!strlen(inputtextsave)) return ShowLoginDialog(playerid);
				f(str, 111, "SELECT `Password`, `Google`, `GoogleKey` FROM `Qelksekm` WHERE `ID` = '%i' LIMIT 1", PI[playerid][pID]);
			 	mysql_pquery(mysql, str, "LoginDialogMysql", "ds", playerid, inputtextsave);
			}
   			//else J_Kick(playerid, 7728);
			return 1;
		}
		case 3:
		{
		    if(response) J_Kick(playerid);
		    else Autorisation(playerid);
		}
		case 4:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: J_Kick(playerid);
					case 2: ShowLoginDialog(playerid);
					default: return 0;
				}
			}
			else Autorisation(playerid);
		}
		case 381:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						SetPVarInt(playerid, "dilo", 1);
				        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы выбрали пункт: ремонт транспорта. Нажимайте клавишу ALT , чтобы ремонтировать авто!");
			 			SetPlayerChatBubble(playerid, "Взял инструменты для ремонта транспорта", COLOR_PURPLE, 10.0, 5000);
				    }
				    case 1:
				    {
            			SetPVarInt(playerid, "dilo", 2);
				        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы выбрали пункт: ремонт двигателя. Нажимайте клавишу ALT , чтобы ремонтировать двигатель!");
				        SetPlayerChatBubble(playerid, "Взял инструменты для ремонта двигателя", COLOR_PURPLE, 10.0, 5000);
				    }
				}
			}
		}
		case 982:
		{
		    if(response)
			{
			    if(PI[playerid][pJob] != JOB_NALOG) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не работаете в Налоговой");
			    new num;
				for(new i; i < OWNABLEHOUSES; i++)
				{
				    if(HouseInfo[i][hNalog2] < 200 || strcmp(HouseInfo[i][hOwner],"The State",true) == 0 ) continue;
				    if(num == listitem)
				    {
						HouseNalog[playerid] = i;
						HouseNalogState2[playerid] = 1;
				        EnableGPSForPlayer(playerid, HouseInfo[i][hEnter_X], HouseInfo[i][hEnter_Y], HouseInfo[i][hEnter_Z]);
				        SPD(playerid,0,0,"Налоговая","Отправляйтесь по отметке на карте для выдачи счета на оплату комунальных услуг", !"Принять", !"");
	       				return 1;
					}
					num++;
				}
			}
		}
		case 783:
		{
			if(!response) return 1;
			new home = ShowHouse[playerid][listitem];
			if(PI[playerid][pMoney] < HouseInfo[home][hNalog]) return SendBotMessage(playerid,"Извините, но у вас нет нужной сумы денег!");
			if(PI[playerid][pPack])
			{
				GiveMoney(playerid,-HouseInfo[home][hNalog]/2);
				aml(52, playerid, "", "оплаты налога на дом", HouseInfo[home][hNalog]/2);
			}
			else
			{
				GiveMoney(playerid,-HouseInfo[home][hNalog]);
				aml(52, playerid, "", "оплаты налога на дом", HouseInfo[home][hNalog]);
			}
			HouseInfo[home][hNalog] = 0;
			SaveHouse(home);
			SCM(playerid, COLOR_RED, !"Вы успешно погасили неоплаченые счета за комунальные услуги");
			if(!PI[playerid][pPack]) SCM(playerid, COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик, вы будете платить в 2 раза меньше!");
			SendBankBot(playerid);
			OrgInfo[GLS[13]][oBank] += HouseInfo[home][hNalog];
			SaveOrg(GLS[13]);
		}
		case 784:
		{
		    if(response)
			{
			    new biz = ShowPBiz[playerid];
				if(GetMoney(playerid) < BizInfo[biz][bNalog])return SendBotMessage(playerid,"Извините, но у вас нет нужной суммы денег!");
				if(PI[playerid][pPack])
				{
					GiveMoney(playerid,-BizInfo[biz][bNalog]/2);
					aml(52, playerid, "", "оплаты налога на бизнес", BizInfo[biz][bNalog]/2);
				}
				else
				{
					GiveMoney(playerid,-BizInfo[biz][bNalog]);
					aml(52, playerid, "", "оплаты налога на бизнес", BizInfo[biz][bNalog]);
				}
				OrgInfo[GLS[13]][oBank]+=BizInfo[biz][bNalog];
				SaveOrg(GLS[13]);
				BizInfo[biz][bNalog] = 0;
       			SCM(playerid, COLOR_GREEN, !"Вы успешно погасили неоплаченые счета за бизнес.");
       			SaveBiz(biz);
       			if(!PI[playerid][pPack])SCM(playerid, COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик, вы будете платить в 2 раза меньше!");
       			SendBankBot(playerid);
   				return 1;
			}
		}
		case 713:
    	{
			if(response)
	  		{
		    	new para1 = PanelPlayerID[playerid];
	    		switch(listitem)
				{
					case 0:
					{
						if(GetTeamID(playerid) == TEAM_BANK && PI[playerid][pRank]>=6)
					 	{
					        if(PI[para1][pCredit] == 0)
							{
								SPD(playerid,227,1,"Кредит","{FFFFFF}Какую сумму вы хотите выдать?\n\nПримечание: максимальная сумма от $5000 до $100000","Далее","Отмена");
	       						f(str, sizeof(str), "%s достал банковские документы!", cPN(playerid));
								ProxDetector(25.0, playerid, str, COLOR_PURPLE);
							}
							else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого человека уже есть задолженность в банке!");

				 		}
				 		else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Либо вы не состоите в банке ,либо ваш ранг ниже 6-го!");
			 		}
					case 1:
					{
						if(GetTeamID(playerid) == TEAM_BANK)
					 	{
						 	f(str,sizeof(str),"{FFFFFF}Долг(кредит) игрока: %s составляет: {33CCFF}%i\n",PN(para1),PI[para1][pCredit]);
							SPD(para1, 0, 0, !"Банк" , str, !"Принять", !"");
							SPD(playerid, 0, 0, !"Банк" , str, !"Принять", !"");
							f(str, sizeof(str), "%s что то показывает ", cPN(playerid));
							ProxDetector(25.0, playerid, str, COLOR_PURPLE);
						}
					}
					case 2:
					{
						if(GetTeamID(playerid) == TEAM_BANK)
					 	{
						 	f(str,sizeof(str),"{FFFFFF}На Cчету: {33CCFF}%i\n",PI[para1][pBank]);
							SPD(para1, 0, 0, !"Банк" , str, !"Принять", !"");
							SPD(playerid, 0, 0, !"Банк" , str, !"Принять", !"");
							f(str, sizeof(str), "%s что то показывает ", cPN(playerid));
							ProxDetector(25.0, playerid, str, COLOR_PURPLE);
						}
					}
					case 3:
					{
						if(PI[para1][pBankCard] ==1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека уже есть банковская карта!");
						if(PI[para1][pMoney]<3000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека недостаточно средств! [3 000$]");
						SPD(playerid, 0, 0, !"", !"{A99E9E}Вы успешно показали(а) форму оформления банковской карты.", !"Закрыть", !"");
						SPD(para1,779,0,"","{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг.\nВы установите пароль на карту, чтобы защитить ее от злоумышлеников,\nа следующие подробности вы можете узнать в работников банка.", !"Принять", !"Отмена");
   						f(str, sizeof(str), "%s передал документы для получения банковской карты игроку %s!", cPN(playerid),cPN(para1));
						ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                        PanelPlayerID[para1]=playerid;
					}
					case 4:
					{
					    if(PI[para1][pBankCard] ==0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет банковской карты!");
					    if(PI[para1][pMoney]<30000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека недостаточно средств! [30 000$]");
						///
						if(!ProxDetectorS(3.0, playerid, para1, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
					    f(str, sizeof(str), "%s предложил %s восстановить пароль на получение банковской карты", cPN(playerid),cPN(para1));
						ProxDetector(25.0, playerid, str, COLOR_PURPLE);
						SPD(playerid, 0, 0, !"", !"{73B461}Вы успешно отправили предложение на смену пароля.", !"Закрыть", !"");
						PanelPlayerID[para1]=playerid;
						f(str,sizeof(str),"{FFFFFF}Банкир {73B461}%s{FFFFFF} , предложил вам восстановить пароль от банковской карты.\n\t\t\t\tСтоимость услуги: {73B461}30 000${FFFFFF}.",PN(playerid));
						SPD(para1,887,0,"",str, !"Принять", !"Отмена");
					}
					case 5:
					{
					    if(PI[para1][pBankCard] == 0)
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет банковской карты!");
						if(!ProxDetectorS(3.0, playerid, para1, 1))
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
					    f(str, sizeof(str), "%s предложил %s положить деньги на депозит", cPN(playerid), cPN(para1));
						ProxDetector(25.0, playerid, str, COLOR_PURPLE);
						SPD(para1, 55, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для пополнения депозита\n\n[{FFF700}i] {FFFFFF}Пополнять депозит можно 1-ин раз в час!\n[{FFF700}i] {FFFFFF}После пополнения депозита, вы не сможете снять с него деньги,\nв течение 5-ти игровых часов!\n[{FFF700}i] {FFFFFF}Ежечасовой процент зависит от вашей влиятельности ((VIP))\n\n", !"Далее", !"Отмена");
					}
					case 6:
					{
					    if(PI[para1][pBankCard] == 0)
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет банковской карты!");
						if(!ProxDetectorS(3.0, playerid, para1, 1))
							return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
						if(PI[para1][pDepositChar])
						{
						    f(str, sizeof(str), "[Ошибка] {FFFFFF}Данному человеку еще нельзя снимать деньги с депозита, ему осталось %i часов!", PI[para1][pDepositChar]);
							return SCM(playerid, COLOR_RED, str);
						}
					    f(str, sizeof(str), "%s предложил %s забрать деньги с депозита", cPN(playerid), cPN(para1));
						ProxDetector(25.0, playerid, str, COLOR_PURPLE);
						SPD(para1, 57, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для получения денег со своего депозита.\n\n", !"Далее", !"Отмена");
					}
				}
			}
	 	}
	 	case 1651:
	 	{
	 	    if(response)
	  		{
				static NName[20];
				new para1 = PanelPlayerID[playerid];
				if(para1==-1)return 0;
				if(GetTeamID(playerid) == TEAM_LICENSERS) NName = "Лицензер";
				else if(PI[playerid][pAdmin] > ADM_NONE) NName = "Администратор";
				switch(Ingatre[playerid])
				{
                    case 1:
				    {
			            if(GetMoney(playerid)<1000)return 0;
						GiveLiccenses(playerid, 30, Item_Car_Lic);
						GiveMoney(playerid,-1000);
						GiveMoney(para1,1000);
					    aml(50, playerid, PN(para1), "покупка лицензии на авто", 1000);
						SCMf(para1, COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали лицензию на авто игроку %s.", PN(playerid));
						SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}%s %s выдал вам лицензию на авто со стоимостью 1000$", NName, PN(para1));
						if(QuestProgress[playerid][3]==0 && AcceptQuest[playerid][3]!=0)
					    {
					        QuestProgress[playerid][3] = 2;
					        NextStapQI(playerid,3);
					        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно получили вод. удостоверение по принятому квесту.\n\n{82A3DF}Возращайтесь обратно, чтобы получить награду за выполненое задание.", !"Принять", !"");
					    }
				 	}
				 	case 2:
					{
					    if(GetMoney(playerid)<2000)return 0;
						GiveLiccenses(playerid, 30, Item_Bike_Lic);
						GiveMoney(playerid,-2000);
						GiveMoney(para1,2000);
						aml(50, playerid, PN(para1), "покупка лицензии на мото", 2000);
						SCMf(para1, COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали лицензию на мото игроку %s.", PN(playerid));
						SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}%s %s выдал вам лицензию на мото со стоимостью 2000$", NName, PN(para1));
				 	}
				 	case 3:
					{
					    if(GetMoney(playerid)<1000)return 0;
						GiveLiccenses(playerid, 30, Item_Fish_Lic);
						GiveMoney(playerid,-1000);
						GiveMoney(para1,1000);
						aml(50, playerid, PN(para1), "покупка лицензии на рыбалку", 1000);
						SCMf(para1, COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали лицензию на рыбалку игроку %s.", PN(playerid));
						SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}%s %s выдал вам лицензию на рыбалку со стоимостью 1000$", NName, PN(para1));
					}
				  	case 4:
					{
					    if(GetMoney(playerid)<5000)return 0;
						GiveLiccenses(playerid, 30, Item_Boat_Lic);
						GiveMoney(playerid,-5000);
						GiveMoney(para1,5000);
						aml(50, playerid, PN(para1), "покупка лицензии на плавание", 5000);
						SCMf(para1, COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали лицензию на плавание игроку %s.", PN(playerid));
						SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}%s %s выдал вам лицензию на плавание со стоимостью 5000$", NName, PN(para1));
					}
				 	case 5:
					{
					    if(GetMoney(playerid)<10000)return 0;
						GiveLiccenses(playerid, 30, Item_Gun_Lic);
						GiveMoney(playerid, -10000);
						GiveMoney(para1, 10000);
						aml(50, playerid, PN(para1), "покупка лицензии на оружие", 10000);
						SCMf(para1, COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали лицензию на оружие игроку %s.", PN(playerid));
						SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}%s %s выдал вам лицензию на оружие со стоимостью 10000$", NName, PN(para1));
					}
					default: return 0;
				}
				PanelPlayerID[para1]=-1;
				PanelPlayerID[playerid]=-1;
			}
	 	}
		case 6:
	    {
			if(response)
	  		{
	  		    new para1 = PanelPlayerID[playerid];
				static NName[20];
				if(GetTeamID(playerid) == TEAM_LICENSERS) NName = "Лицензер";
				else if(PI[playerid][pAdmin] > ADM_NONE) NName = "Администратор";
				switch(listitem)
			 	{
				    case 0:
				    {
				        if(!GetInvCount(playerid, Item_Car_Lic))
				        {
				            Ingatre[para1]=1;
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на авто за 1000$.",PN(para1));
				            SCM(playerid,COLOR_GREY,str);
				            f(str,sizeof(str),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на вождение за {52A32A}1000${FFFFFF}.",PN(playerid));
				            SPD(para1,1651,0,"",str,"Согласен","Нет");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока уже есть лицензия на авто.");
				 	}
				 	case 1:
					{
					    if(!GetInvCount(para1, Item_Bike_Lic))
					    {
				            Ingatre[para1]=2;
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на мото за 2000$.",PN(para1));
				            SCM(playerid,COLOR_GREY,str);
				            f(str,sizeof(str),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на мото за {52A32A}2000${FFFFFF}.",PN(playerid));
				            SPD(para1,1651,0,"",str,"Согласен","Нет");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока уже есть лицензия на мото.");
				 	}
				 	case 2: return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Министерство безопасности штата All, запретила продажу лицензий на полеты. Получить лицензию можно в авиашколе!");
				 	case 3:
					{
					    if(!GetInvCount(para1, Item_Fish_Lic))
					    {
							Ingatre[para1]=3;
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на рыбалку за 1000$.",PN(para1));
				            SCM(playerid,COLOR_GREY,str);
				            f(str,sizeof(str),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на рыбалку за {52A32A}1000${FFFFFF}.",PN(playerid));
				            SPD(para1,1651,0,"",str,"Согласен","Нет");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока уже есть лицензия на рыбалку");
					}
				  	case 4:
					{
					    if(!GetInvCount(para1, Item_Boat_Lic))
					    {
							Ingatre[para1]=4;
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на плавание за 5000$.",PN(para1));
				            SCM(playerid,COLOR_GREY,str);
				            f(str,sizeof(str),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на плавание за {52A32A}5000${FFFFFF}.",PN(playerid));
				            SPD(para1,1651,0,"",str,"Согласен","Нет");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока уже есть лицензия на водный транспорт");
					}
				 	case 5:
					{
					    if(!GetInvCount(para1, Item_Gun_Lic))
					    {
							Ingatre[para1]=5;
							f(str,sizeof(str),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на оружие за 10000$.",PN(para1));
				            SCM(playerid,COLOR_GREY,str);
				            f(str,sizeof(str),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на оружие за {52A32A}10000${FFFFFF}.",PN(playerid));
				            SPD(para1,1651,0,"",str,"Согласен","Нет");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока уже есть лицензия на оружие");
					}
					default: return 0;
				}
			}
			return 1;
		}

		case 7: Autorisation(playerid);
		case 8:
		{
		    if(!response) return 1;
	        new invite = InviteOffer[playerid];
	        if(invite != INVALID_PLAYER_ID)
	        {
		        PI[playerid][pMember] = GetTeamID(invite);
		        UpdatePlayerDataInt(playerid, "Member", PI[playerid][pMember]);
		        PI[playerid][pDCTime] = 2;
		        UpdatePlayerDataInt(playerid, "DCTime", 2);
		        SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
		        PI[playerid][pRank] = 1;
		        UpdatePlayerDataInt(playerid, "Rank", 1);
		        PI[playerid][pFWarns] = 0;
		        UpdatePlayerDataInt(playerid, "FWarns", 0);
		        SCMf(invite, COLOR_VALIK, "[Информация] {FFFFFF}%s принял ваше предложение вступить к вам в организацию.", PN(playerid));
		        SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы приняли предложение %s вступить в организацию.", PN(invite));
		        SendTeamMessagef(GetTeamID(playerid), COLOR_VALIK, "Приветствуем нового члена нашей организации %s, которого пригласил: %s[%i].", PN(playerid), PN(invite), invite);
		        InviteOffer[playerid] = INVALID_PLAYER_ID;
				ResetSpawnInfo(playerid, GetTeamID(invite));
				if(IsAtGang(invite) || IsAtMafia(invite))
				{
				    TeamDuty{playerid} = true;
				    SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
				    SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
				    TogglePlayerControllable(playerid, true);
				}
		    }
		    else
		    {
		        if(invite != INVALID_PLAYER_ID)
		        {
			        f(str, sizeof(str), "[Информация] {FFFFFF}%s отклонил ваше предложение вступить к вам в организацию.", PN(playerid));
			        SCM(invite, COLOR_VALIK, str);
			        f(str,sizeof(str),"[Информация] {FFFFFF}Вы отклонили предложение %s вступить к нему в организацию.", PN(invite));
			        SCM(playerid, COLOR_VALIK, str);
					InviteOffer[playerid] = INVALID_PLAYER_ID;
					InviteOffer[invite] = INVALID_PLAYER_ID;
				}
		    }
		    return 1;
		}
		case 11:
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new number = GetVehicleID(carid);
			if(response)
			{
       			if(IsASellCar(number))
			    {
			        if(IsValidPassport(playerid))
			        {
					    if(GetMoney(playerid) >= CarInfo[number][cCost])
					    {
					        if(IsValidNumberCars(playerid))
							{
							 	if(TotalPlayerVehicle(PN(playerid)) >= 2)
                                {
                                    foreach(new i: OWNABLECARS)
                                    {
                                        if(GetString(CarInfo[i][cOwner], PN(playerid)))
                                        {
                                            SafeRemoveCar(i, i);
                                            break;
                                        }
                                    }
                                }
								new Float:x, Float:y, Float:z;
								GetCoordBonnetVehicle(carid, x, y, z, 6.0);
								SetVehiclePos(carid, x, y, z);
						        SetCarOwner(carid, PN(playerid));
								SetCarKeyer(carid, PN(playerid));
								PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
								SPD(playerid, 0, 0, !"", !"			---------( {FF2121}Обратите внимание!{FFFFFF})---------\n\nЕсли вы не припаркуете свою машину, то в течение определенного времени её отвезут на штрафстоянку!\n{d7d27f}Для того чтобы припарковать машину используйте: /park.{FFFFFF}\nКогда вы припаркуете машину, она будет спавнится в том месте, после каждого входа в игру.\nРекомендуем парковать машину:\n\n     {A7A7A4}-Возле дома\n     -На парковке\n     -В гараже.{a25552}\n\nМашины запрещено парковать в общественных местах!", !"Принять", !"");
								SCM(playerid, -1, !"{73B461}Поздравляем! Теперь этот транспорт принадлежит вам!");
								SCM(playerid, -1, !"Чтобы вставить/вытащить ключи в зажигание введите {73B461}/key");
								SCM(playerid, -1, !"Для управления своим транспортом используйте {73B461}/cars");
								GetNumberCars(playerid, PI[playerid][pCars]);
								GiveMoney(playerid, -CarInfo[number][cCost]);
								aml(52, playerid, "", "покупки авто", CarInfo[number][cCost]);
								new auto_luxe = FindBizID(SHOP_LUXE);
								new auto_premium = FindBizID("Автосалон СФ");
								new auto_middle = FindBizID("Автосалон ЛВ");
								static name[150]; name = "autosalon noname";
								if(IsPlayerInRangeOfPoint(playerid, 200.0, -2665.4160,-32.0208,4.3267)) 
								{
									GiveBizMoney(auto_premium, CarInfo[number][cCost]/10);
									SetString(name, "Автосалон Премимум класса");
								}
								else if(IsPlayerInRangeOfPoint(playerid, 200.0, 948.0062,2138.7131,10.8393)) 
								{
									GiveBizMoney(auto_middle, CarInfo[number][cCost]/10);
									SetString(name, "Автосалон Среднего класса");
								}
								else if(IsPlayerInRangeOfPoint(playerid, 200.0, -515.6501, 2597.1763, 53.4141)) 
								{
									GiveBizMoney(auto_luxe, CarInfo[number][cCost]/10);
									SetString(name, "Автосалон Люкс класса");
									SetVehiclePos(carid,-498.7899,2597.1995,53.6590);
								}
								SendAdminsMessagef(COLOR_GREEN, "[A] %s[%i] купил транспорт по госу (%s), цена: $%i, салон: %s",PN(playerid),playerid,GetNameCar(GetVehicleModelEx(carid)),CarInfo[number][cCost], name);
				                f(str, 145, "%s[%i] словил автомобиль по гос. цене: %i$", PN(playerid), playerid, CarInfo[number][cCost]);
				                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
				                aml(58, playerid, "", "", CarInfo[number][cID], CarInfo[number][cCost]);
								UpdateCarInfo(carid);
								SetVehiclePosToStandartPark(carid);
								CarInfo[number][cParkedInStanartParking] = 1;
								SaveOwnableCar(number);
								if(!CarInfo[number][cAddCar])
								{
									for(new i; i < SALONOWNABLECARS; i++)
									{
										if(SellInfo[i][scModel] != GetVehicleModel(carid)) continue;
										SellInfo[i][scSpawn] = 1;
									}
								}
							}
							else
							{
							    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
								RemovePlayerFromVehicle(playerid);
							}
					    }
					    else
					    {
					        PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					        SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
					        RemovePlayerFromVehicle(playerid);
					    }
				    }
				    else
					{
					    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет паспорта для покупки этого транспорта, получить его можно в мэрии.");
						RemovePlayerFromVehicle(playerid);
					}
			    }
			    else
				{
				    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт не для продажи.");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				RemovePlayerFromVehicle(playerid);
			}
			return 1;
		}
		case 12:
		{
			if(response)
			{
			    new offer = CarOffer[playerid];
			    if(CarOffer[offer] != playerid)
					return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Ошибка.");
		        if(!IsPlayerInHisVehicle(offer))
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Продавец должен находится в личном транспорте.");
	            if(!IsValidPassport(playerid))
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет паспорта для покупки этого транспорта, получить его можно в мэрии.");
	            new
					carid = GetPlayerVehicleID(offer);
				if(!ProxDetectorS(7.0, playerid, offer, 1))
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
			    if(GetMoney(playerid) < CarPrice[playerid])
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
                if(IsValidNumberCars(playerid))
                {
                    new number = GetVehicleID(carid);
                	GiveMoney(offer, CarPrice[playerid]);
				    GiveMoney(playerid, -CarPrice[playerid]);
				    aml(50, playerid, PN(offer), "покупка авто", CarPrice[playerid], 8);
				    SetCarOwner(carid, PN(playerid));
				    SetCarKeyer(carid, PN(playerid));
				    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
				    GetNumberCars(playerid, PI[playerid][pCars]);
				    GetNumberCars(offer, PI[playerid][pCars]);
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с приобретением транспортного средства.");
					GameTextForPlayer(playerid, !"successful", 0, 1);
				    SCM(offer, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем с продажей транспортного средства.");
				    GameTextForPlayer(offer, !"successful", 0, 1);
				    RemovePlayerFromVehicle(offer);
				    CarPrice[playerid] = 0;
				    CarOffer[offer] =
				    CarOffer[playerid] = INVALID_PLAYER_ID;
					GiveBizMoney(AutoMarket, CarInfo[number][cShtrafer]);
					CarInfo[number][cShtrafer] = 0;
				    SaveOwnableCar(number);
				}
			    else
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш уровень VIP недостаточно высок чтобы иметь столько авто!");
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Возможно у вас нет дома, он даст вам +1 слот к авто");
	    			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				}
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    CarPrice[playerid] = 0;
			    CarOffer[CarOffer[playerid]] =
			    CarOffer[playerid] = INVALID_PLAYER_ID;
			}
			return 1;
		}
        case 2107:
	    {
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				    foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
						}
					}
					return 1;
				}
				case 1:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/muzlome_Terry_-_tvoya_mama_govorit_chto_nam_ne_po_puti_60962435.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 2:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/muzlome_kizaru_-_Inogda_ya_khochu_pobyt_odin_60720294.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 3:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/timati_and_egor_krid_-_guchi_(zaycev.net).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 4:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/egor_krid_-_budilnik_(zaycev.net).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 5:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/47837731.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 6:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/muzlome_Cheba_-_Devochke_17_56536246.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 7:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/56536246.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 8:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/naughty-boy-feat.-SendAdminsMessage-smith-la-la-la-(megapesni.me).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 9:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/15438499.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 10:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/dzharakhov_-_game_over_(zaycev.net).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 11:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayer(i);
							PlayAudioStreamForPlayer(i, "http://azrpyellow.ml/music/55188237.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 12:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/mozgi_-_za_nami_edut_politsai_(zaycev.net).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
	 			case 13:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/mozgi_-_politsai_(zaycev.net).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 14:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/51327359.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 15:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/57427639.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 16:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/47921114.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 17:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
				        {
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/48275035.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 18:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
			                StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/54614445.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 19:
				{
					foreach(new i: Player)
					{
						if(IsPlayerInRangeOfPoint(i, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
							StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://azrpyellow.ml/music/DELORENZY_-_sampery_rulyat_(iPleer.fm).mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
			}
			return 1;
	    }
		case 3000:
		{
		    if(response) SPD(playerid,12,0,"","{EC2218} Вы действительно согласны на покупку транспорта?", !"Принять", !"Отмена");
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    CarPrice[playerid] = 0;
			    CarOffer[CarOffer[playerid]] = INVALID_PLAYER_ID;
			    CarOffer[playerid] = INVALID_PLAYER_ID;
			}
		}
		case 2999:
		{
		    if(response) SPD(playerid,2777,0,"","{EC2218} Вы действительно согласны на обмен транспорта?", !"Принять", !"Отмена");
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    caoffer[caoffer[playerid]]=-1;
			    caoffer[playerid]=-1;
			    cardop[playerid]=0;
			}
		}
		case 2777:
		{
			if(response)
			{
			    new offer = caoffer[playerid];
			    if(caoffer[playerid] == playerid) return SCM(playerid, COLOR_GREY, !"Ошибка.");
			    //
			    if(GetMoney(playerid)<cardop[offer])return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег на оплату доплаты обмена транспортом!");
			    if(cartrade[playerid]!=GetPlayerVehicleID(playerid) || cartrade[offer]!=GetPlayerVehicleID(offer))return 0;
			    //
		        if(!IsPlayerInHisVehicle(offer)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Человек с которым вы обменеваетесь должен находится в личном транспорте!");
		        if(!IsPlayerInHisVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится в личном транспорте!");
	            new carid = GetPlayerVehicleID(offer);
	            new caridd = GetPlayerVehicleID(playerid);
				if(!ProxDetectorS(10.0, playerid, offer, 1)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
				if(playerid == offer) return 0;

                new number = GetVehicleID(carid);
                new numberr = GetVehicleID(caridd);

			    SetCarOwner(carid,PN(playerid));
			    SetCarOwner(caridd,PN(offer));

			    SetCarKeyer(carid,PN(playerid));
			    SetCarKeyer(caridd,PN(offer));

			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			    PlayerPlaySound(offer, 30800, 0.0, 0.0, 0.0);

				GiveMoney(playerid,-cardop[offer]);
				GiveMoney(offer,cardop[offer]);
				aml(59, playerid, PN(offer), "", CarInfo[number][cID], cardop[offer], CarInfo[numberr][cID]);

			    GetNumberCars(playerid,PI[playerid][pCars]);
			    GetNumberCars(offer,PI[offer][pCars]);

			    SCM(playerid,COLOR_ACHAT,"[Подсказка] {FFFFFF}Поздравляем с успешным обменом транспорта.");
			    GameTextForPlayer(playerid, "successful", 0, 1);
			    SCM(offer,COLOR_ACHAT,"[Подсказка] {FFFFFF}Поздравляем с успешным обменом транспорта.");
			    GameTextForPlayer(offer, "successful", 0, 1);

			    RemovePlayerFromVehicle(offer);
			    RemovePlayerFromVehicle(playerid);

			    SaveOwnableCar(number);
			    SaveOwnableCar(numberr);

			    caoffer[caoffer[playerid]]=-1;
			    caoffer[playerid]=-1;
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			    caoffer[caoffer[playerid]]=-1;
			    caoffer[playerid]=-1;
			}
			return 1;
		}
		case 23:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowStats(playerid, playerid);
		            case 1: ShowLicenses(playerid, playerid);
		            case 2: ShowSkills(playerid, playerid, 0);
              		case 3: ShowStyles(playerid, playerid, 0);
		            default: return 0;
		        }
		    }
		    else callcmd::menu(playerid);
		}
        case 353:
		{
			if(response)
			{
			    switch(listitem)
				{
			        case 0:
			        {
                        f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}Desert Eagle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, Item_Mats) / 2);
                        SPD(playerid, 354, 1, !"", str, !"Сделать", !"Отмена");
					}
					case 1:
			        {
                        f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}Shotgun{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, Item_Mats) / 2);
                        SPD(playerid, 355, 1, !"", str, !"Сделать", !"Отмена");
					}
					case 2:
			        {
                        f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}MP5{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, Item_Mats) / 2);
                        SPD(playerid, 356, 1, !"", str, !"Сделать", !"Отмена");
					}
					case 3:
			        {
                        f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}M4{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, Item_Mats) / 2);
                        SPD(playerid, 357, 1, !"", str, !"Сделать", !"Отмена");
					}
					case 4:
			        {
                        f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}AK47{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, Item_Mats) / 3);
                        SPD(playerid, 358, 1, !"", str, !"Сделать", !"Отмена");
					}
					case 5:
			        {
                        f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}Country Rifle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.", GetInvCount(playerid, Item_Mats) / 10);
                        SPD(playerid, 359, 1, !"", str, !"Сделать", !"Отмена");
					}
				}
			}
		}
		case 354:
		{
            if(response)
		    {
				new shtuk;
				if(sscanf(inputtextsave, "d", shtuk)) return 1;
                if(shtuk > 100000 || shtuk < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, Item_Mats) < ammo * 2)
		        {
					f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}Desert Eagle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, Item_Mats) / 2);
					return SPD(playerid, 354, 1, !"", str, !"Сделать", !"Отмена");
				}
                GiveGun(playerid, 24, ammo);
                f(str, sizeof(str), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, Item_Deagle, ammo);
				aml(101, playerid, "", "cделал оружие", Item_Deagle, ammo);
				InvAdd(playerid, Item_Mats, -ammo*2);
				aml(102, playerid, "", "сделал оружие", Item_Mats, ammo*2);
			}
		}
		case 6701:
		{
		    if(!response) return true;
		    new Amount;
		    if(sscanf(inputtextsave, "d", Amount)) return false;
     		if(Amount < 0 || Amount > 10000) return true;
		    if(Amount > GetInvCount(playerid, Item_Ticket_AZ)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно талонов AZ Coins");
			PI[playerid][pVirMoney] += Amount;
			UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
			aml(53, playerid, "", "перевод талона > AZ", Amount);
			InvAdd(playerid, Item_Ticket_AZ, -Amount);
			aml(102, playerid, "", "перевел талоны в AZ", Item_Ticket_AZ, Amount);
			SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вам было добавлено %i AZ Coins", Amount);
		}
		case 6702:
		{
		    if(!response) return true;
		    new Amount;
		    if(sscanf(inputtextsave, "d", Amount)) return false;
     		if(Amount < 0 || Amount > 500) return true;
		    if(Amount > GetInvCount(playerid, Item_Ticket_EXP)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно талонов EXP");
			PI[playerid][pExp] += Amount;
			CheckNextLevel(playerid);
			InvAdd(playerid, Item_Ticket_EXP, -Amount);
			aml(102, playerid, "", "перевел талоны в EXP", Item_Ticket_EXP, Amount);
			SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вам было добавлено %i EXP", Amount);
		}
/*		case 6703:
		{
		    if(!response) return true;
		    new Amount;
		    if(sscanf(inputtextsave, "d", Amount)) return false;
     		if(Amount < 0 || Amount > 500) return true;
		    if(Amount > GetInvCount(playerid, Item_Ticket_Donate)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно талонов AZ Rub");
			GiveDonateMoney(playerid, Amount);
			aml(83, playerid, "", "перевод Талонов >> AZ-RUB", Amount);
			InvAdd(playerid, Item_Ticket_Donate, -Amount);
			aml(102, playerid, "", "перевел талоны в AZ Rub", Item_Ticket_Donate, Amount);
			SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вам было добавлено %i AZ Rub", Amount);
		}*/
        case 355:
		{
            if(response)
		    {
                new shtuk;
				if(sscanf(inputtextsave, "d", shtuk)) return 1;
                if(shtuk > 100000 || shtuk < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, Item_Mats) < ammo * 2)
				{
                    f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}Shotgun{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, Item_Mats) / 2);
                    return SPD(playerid, 355, 1, !"", str, !"Сделать", !"Отмена");
				}
                f(str, sizeof(str), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, Item_ShotGun, ammo);
				aml(101, playerid, "", "cделал оружие", Item_ShotGun, ammo);
				InvAdd(playerid, Item_Mats, -ammo*2);
				aml(102, playerid, "", "cделал оружие", Item_Mats, ammo*2);
			}
		}
        case 356:
		{
            if(response)
		    {
                new shtuk;
				if(sscanf(inputtextsave, "d", shtuk)) return 1;
                if(shtuk > 100000 || shtuk < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, Item_Mats) < ammo*2)
				{
					f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}MP5{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, Item_Mats) / 2);
					return SPD(playerid, 356, 1, !"", str, !"Сделать", !"Отмена");
				}
                GiveGun(playerid, 29, ammo);
                f(str, sizeof(str), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, Item_MP5, ammo);
				aml(101, playerid, "", "cделал оружие", Item_MP5, ammo);
				InvAdd(playerid, Item_Mats, -ammo*2);
				aml(102, playerid, "", "cделал оружие", Item_Mats, ammo*2);
			}
		}
        case 357:
		{
            if(response)
		    {
                new shtuk;
				if(sscanf(inputtextsave, "d", shtuk)) return 1;
                if(shtuk > 100000 || shtuk < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, Item_Mats) < ammo * 2)
				{
				    f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}M4{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, Item_Mats) / 2);
				    return SPD(playerid, 357, 1, !"", str, !"Сделать", !"Отмена");
				}
                GiveGun(playerid, 31, ammo);
                f(str, sizeof(str), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
                ApplyAnimation(playerid,"BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, Item_M4, ammo);
				aml(101, playerid, "", "cделал оружие", Item_M4, ammo);
				InvAdd(playerid, Item_Mats, -ammo*2);
				aml(102, playerid, "", "cделал оружие", Item_Mats, ammo*2);
			}
		}
        case 358:
		{
            if(response)
		    {
                new shtuk;
				if(sscanf(inputtextsave, "d", shtuk)) return 1;
                if(shtuk > 100000 || shtuk < 1) return 1;
				new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, Item_Mats) < ammo * 3)
				{
				    f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}AK47{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, Item_Mats) / 3);
                    return SPD(playerid, 358, 1, !"", str, !"Сделать", !"Отмена");
				}
                GiveGun(playerid, 30, ammo);
                f(str, sizeof(str), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, Item_AK47, ammo);
				aml(101, playerid, "", "cделал оружие", Item_AK47, ammo);
				InvAdd(playerid, Item_Mats, -ammo*3);
				aml(102, playerid, "", "cделал оружие", Item_Mats, ammo*3);
			}
		}
		case 359:
		{
            if(response)
		    {
                new shtuk;
				if(sscanf(inputtextsave, "d", shtuk)) return 1;
                if(shtuk > 100000 || shtuk < 1) return 1;
			    new ammo = strval(inputtextsave);
				if(GetInvCount(playerid, Item_Mats) < ammo * 10)
				{
				    f(str, sizeof(str), "{FFFFFF}Введите количество патронов для {A0FF80}Country Rifle{FFFFFF}, которое хотите изготовить\nВаших материалов хватит на {FBAD2F}%i {FFFFFF}патронов.\n\n{ff8080}У вас недостаточно материалов!", GetInvCount(playerid, Item_Mats) / 10);
				    return SPD(playerid, 359, 1, !"", str, !"Сделать", !"Отмена");
				}
                GiveGun(playerid, 33, ammo);
                f(str, sizeof(str), "%s[%i] cделал себе оружие.", PN(playerid), playerid);
                ProxDetector(25.0, playerid, str, COLOR_PURPLE);
                SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
				InvAdd(playerid, Item_Country_Rifle, ammo);
				aml(101, playerid, "", "cделал оружие", Item_Country_Rifle, ammo);
				InvAdd(playerid, Item_Mats, -ammo*10);
				aml(102, playerid, "", "cделал оружие", Item_Mats, ammo*10);
			}
		}
		case 24:
		{
			if(response)
			{
			    new id = SGunOffer[playerid];
			    if(GetMoney(playerid) >= SGunPrice[playerid])
			    {
			        if(GetInvCount(id, Item_Mats) >= SGunMats[playerid])
					{
					    if(ProxDetectorS(3, playerid, id, 1))
						{
							if(GetMoney(playerid) >= SGunPrice[playerid])
						 	{
						 		if(GetInvCount(id, Item_Mats) >= SGunMats[playerid])
								{
								    f(str,sizeof(str),"%s[%i] cделал себе оружие.",PN(playerid),playerid);
								    SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 15.0, 5000);
								    ProxDetector(25.0, playerid, str, COLOR_PURPLE);
								    GiveGun(playerid, SGunID[playerid], SGunAmmo[playerid]);
								   	GiveMoney(playerid, -SGunPrice[playerid]);
								   	GiveMoney(id, SGunPrice[playerid]);
								   	aml(50, playerid, PN(id), "покупка оружия", SGunPrice[playerid]);
								   	InvAdd(id, Item_Mats, -SGunMats[playerid]);
								   	aml(102, playerid, "", "покупка оружия", Item_Mats, SGunMats[playerid]);
								   	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно купили оружие");
								   	SCM(id, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно продали оружие");
								   	SGunOffer[playerid] = INVALID_PLAYER_ID;
								   	SGunPrice[playerid] = 0;
								   	SGunAmmo[playerid] = 0;
								   	SGunID[playerid] = 0;
								}
								else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает материалов");
							}
							else SCM(id, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает денег");
							SGunOffer[playerid] = INVALID_PLAYER_ID;
						}
			    	}
			    }
			    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			}
			return 1;
		}
		case 26:
		{
		    if(response)
		    {
		        new id = MLPlayer[playerid];
          		if(GetString(OrgInfo[listitem+1][oLeader], "Свободна"))
		        {
		            if(PI[id][pLeader] > 0) SetString(OrgInfo[PI[id][pLeader]][oLeader], "Свободна");
		            SetString(OrgInfo[listitem+1][oLeader],PN(id));
		            PI[id][pMember] =
		            PI[id][pLeader] = listitem+1;
		            UpdatePlayerDataInt(id, "Member", listitem+1);
		            UpdatePlayerDataInt(id, "Leader", listitem+1);

		            PI[id][pDCTime] = 2;
		            UpdatePlayerDataInt(id, "DCTime", 2);
			        SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");

		            PI[id][pRank] = OrgInfo[listitem+1][Max_Rang];
		            UpdatePlayerDataInt(id, "Rank", OrgInfo[listitem+1][Max_Rang]);
		            SCMf(id,COLOR_VALIK, "Администратор %s назначил вас лидером организации '%s'",PN(playerid),OrgInfo[listitem+1][oName]);
		            SendAdminsMessagef(COLOR_VALIK, "[A] %s назначил игрока %s лидером организации '%s'",PN(playerid),PN(id),OrgInfo[listitem+1][oName]);
					ResetSpawnInfo(id, listitem+1);
		            PlayerSpawn(id);
		            SaveOrg(listitem+1);
		            aml(4, playerid, PN(id), OrgInfo[listitem+1][oName]);
		        }
		        else
		        {
		            if(!GetString(PN(id), OrgInfo[listitem+1][oLeader]))
		            {
						f(str,sizeof(str),"{FFFFFF}\
						Ошибка! У этой организации уже есть лидер!\n\
						Текущий лидер: {B83434}%s{FFFFFF}\n\
						Хотите его снять с лидерства и назначить лидером {B83434}%s",OrgInfo[listitem+1][oLeader],PN(id));
						SPD(playerid,27,0,"Снять",str,"Да","Отмена");
						MLeader[playerid] = listitem+1;
					}
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот человек уже лидер этой организации");
		        }
		    }
		    return 1;
		}
		case 27:
		{
		    if(!response) return 1;
	        new leader = MLeader[playerid];
	        new id = MLPlayer[playerid];
	        new unleader;
	        new player = GetPlayerID(OrgInfo[leader][oLeader]);
		    if(player != INVALID_PLAYER_ID)
			{
				if(IsACop(player))
				{
					if(UsingShield[player]) RemovePlayerAttachedObject(player, 7);
					PI[player][pShield] = 0.0;
				}
	        	PI[player][pLeader] =
				PI[player][pMember] =
				PI[player][pDCTime] =
    			PI[player][pRank] =
				PI[player][pJob] = JOB_NONE;
				UpdatePlayerDataInt(player, "DCTime", 0);
				UpdatePlayerDataInt(player, "Job", 0);
				UpdatePlayerDataInt(player, "Rank", 0);
				UpdatePlayerDataInt(player, "Member", 0);
				UpdatePlayerDataInt(player, "Leader", 0);
				TeamDuty{player} = false;
		    	f(str, sizeof(str), "[Информация] {FFFFFF}Администратор %s выгнал вас из организации", PN(playerid));
		    	SCM(player, COLOR_VALIK, str);
		    	SCM(player, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");

		    	f(str, sizeof(str), "[Информация] {FFFFFF}Администратор %s выгнал игрока %s из должности лидерства", PN(playerid), PN(player));
		    	SendAdminsMessage(COLOR_VALIK, str);
		    	PlayerUnleader(player, PN(player));
		    	SetBumSkin(player);
		   		unleader = 1;
	        }
	        if(!unleader) PlayerUnleader(INVALID_PLAYER_ID, OrgInfo[leader][oLeader]);
	        if(PI[id][pLeader] > 0)
	        {
	            new led = PI[id][pLeader];
	            SetString(OrgInfo[led][oLeader], "Свободна");
	        }
	        SetString(OrgInfo[leader][oLeader], PN(id));

	        PI[id][pMember] =
            PI[id][pLeader] = leader;
            UpdatePlayerDataInt(id, "Member", leader);
            UpdatePlayerDataInt(id, "Leader", leader);
            PI[id][pDCTime] = 2;
            UpdatePlayerDataInt(id, "DCTime", 2);
	        SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
            PI[id][pRank] = OrgInfo[leader][Max_Rang];
            UpdatePlayerDataInt(id, "Rank", OrgInfo[leader][Max_Rang]);
	        ResetSpawnInfo(id, leader);
	        SCMf(id, COLOR_VALIK, "Администратор %s назначил вас лидером организации '%s'", PN(playerid), OrgInfo[leader][oName]);
	        SCMf(playerid, COLOR_VALIK, "Вы назначили игрока %s лидером организации '%s'", PN(id), OrgInfo[leader][oName]);
	        SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s назначил игрока %s лидером организации '%s'", PN(playerid), PN(id), OrgInfo[leader][oName]);
	        PlayerSpawn(id);
	        SaveOrg(leader);
	        aml(4, playerid, PN(id), OrgInfo[leader][oName]);
		    return 1;
		}
  		case 28:
		{
		    if(response)
		    {
     			new hour,minuite,second;
			    gettime(hour,minuite,second);
				if(PI[playerid][pJob]== GetJob[playerid])return SendBotMessage(playerid,"Вы и так уже тут работаете!");
				if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
				{
			 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
			 		return 1;
				}
		        PI[playerid][pJob] = GetJob[playerid];
		        UpdatePlayerDataInt(playerid, "Job", GetJob[playerid]);
			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			 	SendBotMessage(playerid,"Вы приняты на работу. Используйте /jobhelp /help для того чтобы изучить работу.");
				ResetDynamicCPs(playerid);
				NumInc_CP[playerid]=-1;
				ShowJobInfo(playerid, PI[playerid][pJob]);
			    return 1;
			}
		}
		case 32:
		{
			if(!response) return 1;
			if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 144)
	        {
	            SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам необходимо сформулировать свою жалобу корректно!");
	            SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Минимальное количество символов - 6, максимальное - 144");
				return ShowReportDialog(playerid);
			}
			GameTextForPlayer(playerid, !"Successful", 0, 1);
			pTemp[playerid][ReReport] = gettime() + 180;
			if(FastAnswer)
			{
				static fmt_str[] = "SELECT * FROM `FastAnswer` WHERE `rText` = '%s'";
				mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 144, fmt_str, inputtextsave);
				new Cache:result = mysql_query(mysql, str_3);
				new num = cache_num_rows();
				static otvet[70];
				if(num) cache_get_value_name(0, "rOtvet", otvet);
				cache_delete(result);
				if(num)
				{
				    SendAdminsMessagef(COLOR_ORANGE, "Игрок %s[%i] задал вопрос: {FFFFFF}%s", PN(playerid), playerid, inputtextsave);
				    SendAdminsMessagef(COLOR_ORANGE, "Сервер ответил игроку %s[%i]: {FFFFFF}%s", PN(playerid), playerid, otvet);
				    SCMf(playerid, COLOR_LIGHTRED, "Сервер: {FFFFFF}%s", otvet);
		            ac_ShowPlayerDialog(playerid, 1333),ShowPlayerDialogf(playerid, 1333, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Спасибо", !"", "{FFFFFF}Вам ответил сервер!\n\nВаш вопрос: {BDE34A}%s\n{FFFFFF}Сервер:{BDE34A} %s", inputtextsave, otvet);
					pTemp[playerid][ReportID] = -1;
					return true;
				}
			}
			foreach(new i: Admin) GameTextForPlayer(i, !"Report ++", 0, 1);
			if(SystemReport)
			{
				AddReport(playerid);
				SendAdminsMessagef(COLOR_LIGHTRED, "[Жалоба] от %s[%i]: {FFFFFF}%s. Уже {FF6347}%i {FFFFFF}жалоб!!!", PN(playerid), playerid, inputtextsave, pTemp[playerid][NumReports] + 1);
		        SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы отправили жалобу: %s", inputtextsave);
			    SCMf(playerid, -1, "На ваш вопрос обязательно ответит администрация! Вы %i в очереди!", pTemp[playerid][NumReports] + 1);
			    SCM(playerid, -1, !"Если за вами необходимо срочно проследить, администрация сделает это вне очереди!");
		    	SetString(ReportMessage[playerid], inputtext2);
		    }
		    else
		    {
				SendAdminsMessagef(COLOR_LIGHTRED, "[Жалоба] от %s[%i]:{FFFFFF} %s", PN(playerid), playerid, inputtextsave);
				SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы отправили жалобу: %s", inputtextsave);
		    }
			return 1;
		}
		case 1333: SPD(playerid, 1332, DIALOG_STYLE_LIST, !"Оцените работу админа!", !"{BFE54C}Хороший ответ!\n{D94040}Плохой ответ!", !"Выбрать", !"Отмена");
		case 1332:
		{
			if(!response) return true;
			new id = pTemp[playerid][ReportID];
			if(id == -1) return false;
			switch(listitem)
			{
				case 0: PI[id][pReputation] ++;
				case 1: PI[id][pReputation] --;
			}
			UpdatePlayerDataInt(id, "Reputation", PI[id][pReputation]);
			SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Спасибо за ваш отзыв!");
			pTemp[playerid][ReportID] = -1;
			return true;
		}
		case 6370:
		{
			new id = pTemp[playerid][ReportID];
			if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок вышел с игры");
			if(response)
		    {
	 			if(!strlen(inputtextsave) || strlen(inputtextsave) > 70)
				{
			        ac_ShowPlayerDialog(playerid, 6370),ShowPlayerDialogf(playerid, 6370, DIALOG_STYLE_INPUT, !"{BFBBBA}", !"Принять", !"Отмена", "{FFFFFF}Жалоба/Вопрос от: %s[%i]\n\n{BFE54C}%s\n\n", PN(id), id, ReportMessage[id]);
				    return SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Много символов, или нет символов");
				}
		        ac_ShowPlayerDialog(playerid, 1333),ShowPlayerDialogf(id, 1333, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Спасибо", !"", "{FFFFFF}Вам ответил администратор!\n\n{FFFFFF}Ваш вопрос: {c8e464}%s\n{FFFFFF}%s: {c8e464}%s\n\n", ReportMessage[id], PN(playerid), inputtextsave);
				SCMf(id, COLOR_LIGHTRED, "Администратор %s[%i]: {FFFFFF}%s", PN(playerid), playerid, inputtextsave);
				SendAdminsMessagef(COLOR_ORANGE, "Администратор %s[%i] ответил игроку %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, inputtextsave);
				aml(26, playerid, PN(id), inputtext);
				if(FastAnswer)
				{
					SPD(playerid, 6377, DIALOG_STYLE_LIST, !"Быстрый ответ", !"Нет, это временный ответ\nДа, этот ответ может использоватся как быстрый ответ", !"Принять", !"Отмена");
	    			SetString(AnswerMessage[playerid], inputtext2);
	    		}
	    	}
	    	else
	    	{
	    		PI[playerid][pReputation] --;
	    		UpdatePlayerDataInt(playerid, "Reputation", PI[playerid][pReputation]);
	    	}
		}
		case 6377:
		{
		    new id = pTemp[playerid][ReportID];
		    switch(listitem)
		    {
		        case 0: SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Вы выбрали временный ответ");
		        case 1:
		        {
		        	mysql_pqueryf(mysql, "INSERT INTO `FastAnswer` (`rText`, `rOtvet`, `rID`) VALUE ('%e', '%e', '%i')", ReportMessage[id], AnswerMessage[playerid], PI[playerid][pID]);
					SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы выбрали как быстрый ответ");
		        }
		    }
		}
		case 399:
		{
		    new Float:x, Float:y, Float:z, Float:angle;
		    GetPlayerPos(playerid, x, y, z);
		    GetPlayerFacingAngle(playerid, angle);
		    x += floatsin(-angle, degrees);
		    y += floatcos(-angle, degrees);
		    if(response)
		    {
		        new idobject;
		        for(idobject = 0;idobject<MAX_OGRAD;idobject++)
		        {
		            if(object[idobject]==-1) break;
		        }
				if(GetPlayerVirtualWorld(playerid)!=0 || GetPlayerInterior(playerid)!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В здании нельзя положить обьект!");
		        switch(listitem)
		        {
					case 0:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(1423, x, y, z-0.25, 0, 0, angle);
						PI[playerid][pObjikt]--;
					}
					case 1:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(1237, x,y,z-1.0,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 2:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(1238, x,y,z-0.65,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 3:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(1282, x,y,z-0.3,0, 0, angle-90);
						PI[playerid][pObjikt]--;}
					case 4:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(1425, x,y,z-0.6,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 5:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19425, x,y,z-0.9,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 6:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(983, x,y,z-0.3,0, 0, angle-90);
						PI[playerid][pObjikt]--;}
					case 7:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(970, x,y,z-0.5,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 8:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(11699, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 9:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19950, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 10:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19967, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 11:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19966, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 12:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19976 , x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 13:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19974, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}

					case 14:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19957, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 15:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19955, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 16:
					{
					    if(PI[playerid][pObjikt]==0)return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");
						object[idobject] = CreateDynamicObject(19956, x,y,z-1.1,0, 0, angle);
						PI[playerid][pObjikt]--;}
					case 17:
					{
                        if(PI[playerid][pObjikt] == 0) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас не осталось обьектов для установки!");

                       /* new id = Iter_Free(OWNABLERADAR);

                       	mysql_pqueryf(mysql, "INSERT INTO `Radar` (`Name`, `X`, `Y`, `Z`, `A`) VALUES ('%s', '%.2f', '%.2f', '%.2f', '%.2f')", PN(playerid), x, y, z, angle);

                        RadarInfo[id][radX] = x;
	                    RadarInfo[id][radY] = y;
	                    RadarInfo[id][radZ] = z;
	                    RadarInfo[id][radA] = angle;
	                    strmid(RadarInfo[id][rName], PN(playerid), 0, MAX_PLAYER_NAME+1);

                        static const fmt_str_2[] = "Радар\nМаксимальная скорость: {9ACD32}120 км/ч.\n{FFFFFF}Штраф за нарушение: {9ACD32}1500$.\n{FFFFFF}Поставил: {9ACD32}%s";

					    f(str, sizeof(str), fmt_str_2, RadarInfo[id][rName]);

				        RadarInfo[id][radText] = CreateDynamic3DTextLabel(str, -1, RadarInfo[id][radX], RadarInfo[id][radY], RadarInfo[id][radZ] + 2.0, 20.0);

                        RadarInfo[id][rObj] = CreateDynamicObject(18880, RadarInfo[id][radX], RadarInfo[id][radY], RadarInfo[id][radZ]-1.3, 0, 0, RadarInfo[id][radA]);
	                    RadarInfo[id][radArea] = CreateDynamicSphere(RadarInfo[id][radX], RadarInfo[id][radY], RadarInfo[id][radZ], 10.0, 0, 0, -1);

				        PI[playerid][pObjikt] --;*/
				        SendClientMessage(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Отключено");
	                }
                    case 18:
					{
						for(new i;i<MAX_OGRAD;i++)
					    {
					        if(object[i]!=-1)
					        {
						        GetDynamicObjectPos(object[i],x,y,z);
								if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
								{
								    DestroyDynamicObject(object[i]);
								    object[i]=-1;
								    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно забрали обьект!");
								    if(PI[playerid][pObjikt]<10) PI[playerid][pObjikt]++;
								    return 1;
								}
								else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Возле вас нет обьектов!");
							}
						}
					}
					case 19:
     				{
     				    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
     				    {
     				        if(RadarEntered[playerid] != -1)
						    {
	                            new i = RadarEntered[playerid];
	                            if(IsPlayerInRangeOfPoint(playerid, 3.0, RadarInfo[i][radX], RadarInfo[i][radY], RadarInfo[i][radZ]))
						        {
						            DestroyDynamicObject(RadarInfo[i][rObj]);
						            DestroyDynamicArea(RadarInfo[i][radArea]);
						            DestroyDynamic3DTextLabel(RadarInfo[i][radText]);
								    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно забрали радар!");
								    if(PI[playerid][pObjikt]<10) PI[playerid][pObjikt]++;
								    mysql_pqueryf(mysql, "DELETE FROM `Radar` WHERE `ID` = '%i'", RadarInfo[i][rID]);
								    Iter_Remove(OWNABLERADAR, i);
						        }
	                            else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не подошли к одному из радаров!");
						    }
					        else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не подошли к одному из радаров!");
     				    }
     				    else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны быть на ногах!");
					}
				}
          		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		    }
		}
		case 401:
		{
		    if(response)
		    {
		        switch(listitem)
			    {
			        case 0: SPD(playerid,402,2,"Править налоги","{73B461}[1] Информация\n[2] Изменить часовую плату за дом\n[3] Изменить часовую плату за бизнес\n[4] Изменить часовую плату за авто", !"Принять", !"Отмена");
			        case 1: SPD(playerid,404,2,"Править цены на аренду","{73B461}[1] Информация\n[2] Изменить цену на аренду свободного транспорта\n[3] Изменить цены на аренду рабочего транспорта", !"Принять", !"Отмена");
			        case 2: SPD(playerid,405,2,"Править премии","{73B461}[1] Информация\n[2] Изменить премию полицейским\n[3] Изменить премию за доставку патронов\n[4] Изменить премию за убийство бандита в з.з.\n[5] Изменить премию за редакцию объявлений\n[6] Изменить премию за проведение помолвки", !"Принять", !"Отмена");
					case 3: SPD(playerid,397,2,"Глобальные настройки","{73B461}[1] Информация\n[2] Направление налогов\n[3] Пополнить баланс организации (за счет казны)\n[4] Изменить цену выкупа\n[5] Изменить стоимость закупки продуктов на ферме\n[6] Изменить стоимость закупки предметов на грузчиках", !"Принять", !"Отмена");
			    }
		    }
		}
		case 397:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                strcat(str,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - {73B461}Баланс Фракций{FFFFFF} - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n");
	                 	strcat(str,"Обратите внимание что вы можете перенаправлять прием налогов на другие организации\nчтобы пополнить их баланс или внести деньги лично из казны штата Аризоны.\n");
	                  	strcat(str,"Каждой организации необходимо иметь деньги на счету банка чтобы выплачивать\nпремии своим работникам, а также закупать патроны и продукты у других предприятий и фракций.\n\n");
						f(str,sizeof(str),"- Полиция LS: {73B461}%i{FFFFFF}\n- RCPD: {73B461}%i{FFFFFF}\n- FBI: {73B461}%i{FFFFFF}\n- SFPD: {73B461}%i{FFFFFF}\n- Больница ЛС: {73B461}%i{FFFFFF}\n",OrgInfo[TEAM_LSPD][oBank],OrgInfo[TEAM_LVPD][oBank],OrgInfo[TEAM_FBI][oBank],OrgInfo[TEAM_SFPD][oBank],OrgInfo[TEAM_MEDICLS][oBank]);
						strcat(str,str);
						f(str,sizeof(str),"- Правительство: {73B461}%i{FFFFFF}\n- Больница SF: {73B461}%i{FFFFFF}\n- Автошкола: {73B461}%i{FFFFFF}\n- Radio LS: {73B461}%i{FFFFFF}\n- Army LS: {73B461}%i{FFFFFF}\n- Bank: {73B461}%i{FFFFFF}\n- Radio SF: {73B461}%i{FFFFFF}\n",OrgInfo[TEAM_MERIALS][oBank],OrgInfo[TEAM_MEDICSF][oBank],OrgInfo[TEAM_LICENSERS][oBank],OrgInfo[TEAM_RADIO][oBank],OrgInfo[TEAM_ARMY][oBank],OrgInfo[TEAM_BANK][oBank],OrgInfo[TEAM_RADIOSF][oBank]);
						strcat(str,str);
						f(str,sizeof(str),"- Больница LV: {73B461}%i{FFFFFF}\n- Полиция LV: {73B461}%i{FFFFFF}\n- Radio LV: {73B461}%i{FFFFFF}\n- Army LV: {73B461}%i{FFFFFF}\n\n- Army SF: {73B461}%i{FFFFFF}\n\n",OrgInfo[TEAM_MEDICLV][oBank],OrgInfo[TEAM_PDLV][oBank],OrgInfo[TEAM_RADIOLV][oBank],OrgInfo[TEAM_ARMYLV][oBank],OrgInfo[TEAM_ARMYSF][oBank]);
						strcat(str,str);
      					f(str,sizeof(str),"{FFFFFF}Получатель налогов: {73B461}%s\n\n{FFFFFF}",OrgInfo[GLS[13]][oName]);
						strcat(str,str);
						f(str,sizeof(str),"{FFFFFF}Цена выкупа: {73B461}%i\n\n{FFFFFF}",GLS[21]);
						strcat(str,str);
						f(str,sizeof(str),"{FFFFFF}Закупка продуктов на ферме: {73B461}%i\n{FFFFFF}",GLS[31]);
						strcat(str,str);
		                SPD(playerid,0,0,"Информация",str, !"Принять", !"");
		            }
		            case 1: SPD(playerid,398,2,"Перенаправить налоги","[1] Полиция LS\n[2] RCPD (Dilimore)\n[3] FBI\n[4] SFPD\n[5] Больница ЛС\n[6] Правительство\n[7] Больница SF\n[8] Автошкола\n[9] Radio LS\n[10] Army LS\n[11] Central Bank\n[12] Больница LV\n[13] Полиция LV\n[14] Radio LV\n[15] Army LV\n[16] Radio SF\n[17] Army SF", !"Принять", !"Отмена");
					case 2: SPD(playerid,396,2,"Пополнить баланс","[1] Полиция LS\n[2] RCPD (Dilimore)\n[3] FBI\n[4] SFPD\n[5] Больница ЛС\n[6] Правительство\n[7] Больница SF\n[8] Автошкола\n[9] Radio LS\n[10] Army LS\n[11] Central Bank\n[12] Больница LV\n[13] Полиция LV\n[14] Radio LV\n[15] Army LV\n[16] Radio SF\n[17] Army SF", !"Принять", !"Отмена");
					case 3:
					{
					    f(str,sizeof(str),"Обратите внимание что изменение выкупа из кпз\nможет повлиять на развитие штата.\n\n{73B461}Введите в строку число от 1 до 90000.");
		                SPD(playerid,425,1,"Изменить цену выкупа",str, !"Принять", !"Отмена");
					}
					case 4:
					{
					    f(str,sizeof(str),"Обратите внимание что изменение цены на закупку продуктов\nможет повлиять на развитие штата.\n\n{73B461}Введите в строку число от 1 до 10.");
		                SPD(playerid,426,1,"Изменить стоимость закупки продуктов",str, !"Принять", !"Отмена");
					}
					case 5:
					{
					    f(str,sizeof(str),"Обратите внимание что изменение цены на закупку предметов\nможет повлиять на развитие штата.\n\n{73B461}Введите в строку число от 1 до 15.");
		                SPD(playerid,427,1,"Изменить стоимость закупки предметов",str, !"Принять", !"Отмена");
					}
		        }
			}
		}
		case 396:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
          			case 0: selfrac[playerid]=1;
		            case 1: selfrac[playerid]=2;
		            case 2: selfrac[playerid]=3;
		            case 3: selfrac[playerid]=4;
		            case 4: selfrac[playerid]=5;
		            case 5: selfrac[playerid]=6;
		            case 6: selfrac[playerid]=8;
		            case 7: selfrac[playerid]=9;
		            case 8: selfrac[playerid]=10;
		            case 9: selfrac[playerid]=20;
		            case 10: selfrac[playerid]=21;
		            case 11: selfrac[playerid]=22;
		            case 12: selfrac[playerid]=23;
		            case 13: selfrac[playerid]=24;
		            case 14: selfrac[playerid]=7;
		            case 15: selfrac[playerid]=TEAM_RADIOSF;
		            case 16: selfrac[playerid]=TEAM_ARMYSF;
		        }
		        f(str,sizeof(str),"{73B461}Вы действительно хотите пополнить баланс %s ?\nКазна мэрии : {FFFFFF}%i\n\n{FFFFFF}Введите в строку число от {FFFFFF}1 до %i",OrgInfo[selfrac[playerid]][oName],OrgInfo[TEAM_MERIALS][oBank],OrgInfo[TEAM_MERIALS][oBank]);
          		SPD(playerid,395,1,"Пополнить баланс организации",str, !"Принять", !"Отмена");
			}
		}
		case 395:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || OrgInfo[TEAM_MERIALS][oBank]<money) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете перевести такую сумму!");
				OrgInfo[selfrac[playerid]][oBank]+=money;
				SaveOrg(selfrac[playerid]);
				OrgInfo[TEAM_MERIALS][oBank]-=money;
				SaveOrg(TEAM_MERIALS);
				f(str,sizeof(str),"Губернатор: %s[%i] пополнил баланс организации: %s на %i",PN(playerid),playerid,OrgInfo[selfrac[playerid]][oName],money);
				SendGosMessage(0x73B461FF,str);
				selfrac[playerid]=0;
		    }
		}
		case 398:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: GLS[13] = 1;
		            case 1: GLS[13] = 2;
		            case 2: GLS[13] = 3;
		            case 3: GLS[13] = 4;
		            case 4: GLS[13] = 5;
		            case 5: GLS[13] = 6;
		            case 6: GLS[13] = 8;
		            case 7: GLS[13] = 9;
		            case 8: GLS[13] = 10;
		            case 9: GLS[13] = 20;
		            case 10: GLS[13] = 21;
		            case 11: GLS[13] = 22;
		            case 12: GLS[13] = 23;
		            case 13: GLS[13] = 24;
		            case 14: GLS[13] = 7;
		            case 15: GLS[13] = TEAM_RADIOSF;
		            case 16: GLS[13] = TEAM_ARMYSF;
				}
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} перенаправил прием платежей с налогов на {FFFFFF}%s",PN(playerid),playerid,OrgInfo[GLS[13]][oName]);
				SendGosMessage(0x73B461FF,str);
			}
		}
		case 402:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                f(str,sizeof(str),"{FFFFFF}Получатель налогов: {73B461}%s\nСостояние организации получателя: {FFFFFF}%i{FFFFFF}\n\n\n{73B461}-{FFFFFF} Налог на дом: {73B461}%i{FFFFFF}\n{73B461}-{FFFFFF} Налог на бизнес: {73B461}%i{FFFFFF}\n{73B461}-{FFFFFF} Налог на авто: {73B461}%i{FFFFFF}",OrgInfo[GLS[13]][oName],OrgInfo[GLS[13]][oBank],GLS[2],GLS[3],GLS[1]);
		                SPD(playerid,0,0,"Информация о налогах штата",str, !"Принять", !"");
		            }
		            case 1:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение налогов на дома может повлиять на дальнейшее\nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 3000.");
		                SPD(playerid,406,1,"Изменить часовую плату за дом",str, !"Принять", !"Отмена");
		            }
		            case 2:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение налогов на бизнес может повлиять на дальнейшее\nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2500.");
		                SPD(playerid,407,1,"Изменить часовую плату за бизнес",str, !"Принять", !"Отмена");
		            }
		            case 3:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение налогов на авто может повлиять на дальнейшее\nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2500.");
		                SPD(playerid,408,1,"Изменить часовую плату за авто",str, !"Принять", !"Отмена");
		            }
		        }
		    }
		    else callcmd::ekonom(playerid,"");
		}
		case 118:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >PI[playerid][pMoney]) return SendBotMessage(playerid,"Уважаемый! Пытайтесь ввести все символы правильно!");
				OrgInfo[PI[playerid][pMember]][oBank]+=money;
				GiveMoney(playerid,-money);
				aml(52, playerid, "", "перечисления в счет организации", money);
				f(str,sizeof(str),"{FFFFFF}%s {73B461}пополнил счет организации на {FFFFFF}%i$",PN(playerid),money);
				SendTeamMessage(PI[playerid][pMember],0x73B461FF,str);
				SaveOrg(PI[playerid][pMember]);
				SendBankBot(playerid);
		    }
		}
		case 406:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >3000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такой налог!");
				GLS[2] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в налоги на оплату дома. Теперь почасовая плата за дом составляет: {FFFFFF}%i",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
		    }
		}
		case 407:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такой налог!");
				GLS[3] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в налоги на оплату бизнеса. Теперь почасовая плата составляет: {FFFFFF}%i",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
		    }
		}
		case 408:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такой налог!");
				GLS[1] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в налоги на оплату авто. Теперь почасовая плата составляет: {FFFFFF}%i",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
		    }
		}
		case 404:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                f(str,sizeof(str),"{73B461}Получатель налогов: %s\n{73B461}Состояние организации получателя: {FFFFFF}%i{FFFFFF}\n\n\n- Свободный транспорт: {73B461}%i{FFFFFF}\n- Автобусы: {73B461}%i{FFFFFF}",OrgInfo[GLS[13]][oName],OrgInfo[GLS[13]][oBank],GLS[14],GLS[15]);
		                SPD(playerid,0,0,"Информация о аренде",str, !"Принять", !"");
		            }
		            case 1:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение цен на аренду транспорта может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 25000.");
		                SPD(playerid,418,1,"Изменить цены на аренду транспорта",str, !"Принять", !"Отмена");
		            }
		            case 2:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение цен на аренду транспорта может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2000.");
		                SPD(playerid,419,1,"Изменить цены на аренду р.транспорта",str, !"Принять", !"Отмена");
		            }
		        }
			}
			else callcmd::ekonom(playerid,"");
		}
		case 418:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >25000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену на аренду!");
				GLS[14] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в аренду транспорта. Теперь стоимость аренды составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
		    }
		}
		case 419:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену на аренду!");
				GLS[15] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в аренду рабочего транспорта. Теперь стоимость аренды составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
		    }
		}
		case 405:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                f(str,sizeof(str),"{73B461}Получатель налогов: %s\n{73B461}Состояние организации получателя: {FFFFFF}%i{FFFFFF}\n\n\n- Премия за поимку преступника: {73B461}%i{FFFFFF}\n- Премия за доставку патронов: {73B461}%i{FFFFFF}\n- Премия за убийство бандита в з.з.: {73B461}%i{FFFFFF}\n- Премия за обработку объявлений: {73B461}%i{FFFFFF}\n- Премия за проведение помолвки: {73B461}%i{FFFFFF}",OrgInfo[GLS[13]][oName],OrgInfo[GLS[13]][oBank],GLS[16],GLS[17],GLS[18],GLS[19],GLS[20]);
						SPD(playerid,0,0,"Информация о премиях штата",str, !"Принять", !"");
		            }
		            case 1:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2500.");
		                SPD(playerid,420,1,"Изменить премию в полиции",str, !"Принять", !"Отмена");
		            }
		            case 2:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 1000.");
		                SPD(playerid,421,1,"Изменить премию в армии",str, !"Принять", !"Отмена");
		            }
		            case 3:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 1000.");
		                SPD(playerid,422,1,"Изменить премию в армии",str, !"Принять", !"Отмена");
		            }
		            case 4:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 500.");
		                SPD(playerid,423,1,"Изменить премию за обработку объявлений",str, !"Принять", !"Отмена");
		            }
		            case 5:
		            {
		                f(str,sizeof(str),"Обратите внимание что изменение премии может быть слишком большое\nдля бюджета организации и может повлиять на \nразвитие штата.\n\n{73B461}Введите в строку число от 1 до 2000.");
		                SPD(playerid,424,1,"Изменить премию за проведения помолвки",str, !"Принять", !"Отмена");
		            }
				}
			}
			else callcmd::ekonom(playerid,"");
		}
		case 420:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую премию!");
				GLS[16] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию полицейских. Теперь их премия за арест человека составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str);
		    }
		}
		case 421:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SCM(playerid, COLOR_RED, !"Вы не можете установить такую премию!");
				GLS[17] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию Army LS. Теперь их премия за доставку патронов составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str);
		    }
		}
		case 422:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую премию!");
				GLS[18] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию Army LS. Теперь премия за убийство бандита составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str);
		    }
		}
		case 423:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >500) return SCM(playerid, COLOR_RED, !"Вы не можете установить такую премию!");
				GLS[19] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию CNN. Теперь их премия за обработку объявлений составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str);
		    }
		}
		case 424:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую премию!");
				GLS[20] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в премию за проведение помолвки. Теперь их премия составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SendGosMessage(0x73B461FF,str);
		    }
		}
		case 425:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >90000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену выкупа!");
				GLS[21] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в выкуп из КПЗ. Теперь ее стоимость составляет: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
		    }
		}

		case 426:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >10) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену для закупки!");
				GLS[31] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в стоимость закупки продуктов на ферме. Теперь ее стоимость: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
				f(str, sizeof(str), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[27],GLS[31]);
				UpdateDynamic3DTextLabelText(FactoryText[1], -1, str);
		    }
		}
		case 427:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >15) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену для закупки!");
				GLS[29] = money;
				SaveInforamtion();
				f(str,sizeof(str),"Губернатор: {FFFFFF}%s[%i]{73B461} внес изменения в стоимость закупки предметов на грузчиках. Теперь ее стоимость: {FFFFFF}%i$",PN(playerid),playerid,money);
				SCMAll(0x73B461FF,str);
				f(str, sizeof(str), "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[28],GLS[29]);
				UpdateDynamic3DTextLabelText(FactoryText[2], -1, str);
		    }
		}
		case 429:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money > (500-CarproductCount[GetPlayerVehicleID(playerid)])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете закупить столько продуктов!");
				if(GetMoney(playerid)<money*GLS[31]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				if(GLS[27]<money)return SCM(playerid, COLOR_RED, !"На складе фермы недостаточно продуктов!");
				if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 1 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете смешивать продукты с ящиками с разгрузочной станции!");
				CarproductCount[GetPlayerVehicleID(playerid)] += money;
				GiveMoney(playerid,-(money*GLS[31]));
				GiveBizMoney(BIZ_ELECTRO_LS,(money*GLS[31])/2);
				aml(52, playerid, "", "закупки продуктов для перепродажи", money*GLS[31]);
				GLS[27]-=money;
				SaveInforamtion();
				CarproductType[GetPlayerVehicleID(playerid)] = 1;
				SCM(playerid, COLOR_LIGHTBLUE, !"Вы успешно загрузили машину. Используйте /orderlist чтобы найти заказчика продуктов!");
				f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
				UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, str);
				f(str, sizeof(str), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[27],GLS[31]);
				UpdateDynamic3DTextLabelText(FactoryText[1], -1, str);
		    }
		}
		case 9619:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowEnchant(playerid);
				case 1: SCM(playerid, -1, "Недоступно");
			}
		}
		case 9612:
		{
		    if(response)
		    {
		        static plase[64];
		        switch(listitem)
				{
				    case 0:
				    {
				        plase = "Лесопилке";
				        SetPVarInt(playerid,"warplace",1);
				    }
				    case 1:
				    {
				        plase = "Заброшенном аэродроме";
				        SetPVarInt(playerid,"warplace",2);
				    }
				    case 2:
				    {
				        plase = "Ферме Fort Carson";
				        SetPVarInt(playerid,"warplace",3);
				    }
					case 3:
					{
					    plase = "Заброшенной деревне";
				        SetPVarInt(playerid,"warplace",4);
					}
				}
				f(str,sizeof(str),"{FFFFFF}Вы хотите начать войну за этот бизнес?\n\nЕсли вы согласитесь вам придётся провести переговоры на %s, взяв собой более 4 человек!\nПосле чего ждать 10 минут пока все соберутся и если на точке соберутся по 4 человека с каждой мафии ,вы начнете войну!",plase);
				SPD(playerid,591,0,"Информация",str,"Да","Нет");
		    }
		}
		case 591:
		{
		    if(response)
		    {
				if(BizWarState > 0)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже устроили стрелу!");
		        new num;
		        static placewar[64];
				foreach(new i: Player)
				{
				    if(GetTeamID(i)== BizInfo[ClickBiz[playerid]][bKrasher]) num++;
				}
				if(num<4)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В мафии , которой вы хотите устроить стрелу , в онлайне меньше 4 человек!");
				if(GetPVarInt(playerid,"warplace")==0)return 0;
				PlaceWar = GetPVarInt(playerid,"warplace");
				BizTime[0] = 10;
    			BizWarState = 1; //ожидание
				BizAtack = GetTeamID(playerid);
				BizDeff = BizInfo[ClickBiz[playerid]][bKrasher];
				switch(PlaceWar)
				{
				    case 1: placewar = "лесопилке";
				    case 2: placewar = "заброшеном аэродроме";
				    case 3: placewar = "ферме Fort Carson";
				    case 4: placewar = "заброшенной деревне";
				}
				SendTeamMessage(GetTeamID(playerid),COLOR_VALIK,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
				f(str,sizeof(str),"Ваша мафия назначила стрелу вражеской мафии на %s, в эту точку вы должны прибыть в течение 10-ти минут.",placewar);
		        SendTeamMessage(GetTeamID(playerid),COLOR_VALIK,str);
		        SendTeamMessage(GetTeamID(playerid),COLOR_VALIK,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		        SendTeamMessage(BizInfo[ClickBiz[playerid]][bKrasher],COLOR_VALIK,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		        f(str,sizeof(str),"Вам назначили стрелу на %s, вы должны появится там за 10 минут.",placewar);
		        SendTeamMessage(BizInfo[ClickBiz[playerid]][bKrasher],COLOR_VALIK,str);
		        SendTeamMessage(BizInfo[ClickBiz[playerid]][bKrasher],COLOR_VALIK,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
				BizWar = ClickBiz[playerid];
				foreach(new i: Player)
				{
				    if(PI[i][pMember] == BizAtack || PI[i][pMember] == BizDeff)
					{
					    switch(PlaceWar)
						{
							case 1: EnableGPSForPlayer(i,-553.5379,-189.4500,78.4063);
							case 2: EnableGPSForPlayer(i,400.7428,2505.4106,16.4844);
							case 3: EnableGPSForPlayer(i,331.5244,1116.4584,11.2496);
							case 4: EnableGPSForPlayer(i,-1297.4867,2551.0503,87.1012);
						}
					}
				}
		    }
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы отказались воевать за этот бизнес!");
		}
		case 33:
		{
		    if(!response)
		        return 1;
			if(listitem == DListitem[playerid]{0})
			{
 				f(str, sizeof(str), "{FFFFFF}Текущее состояние счета: {B83434}$%i, {FFFFFF}состояние депозита: {B83434}$%i", PI[playerid][pBank], PI[playerid][pDeposit]);
				SendBotMessage(playerid, str);
			}
			else if(listitem == DListitem[playerid]{1})
			{
				if(!IsAtBankomat(playerid,10.0))
					SPD(playerid, 35, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму для снятия\n\n", !"Далее", !"Отмена");
				else
					SPD(playerid, 35, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму для снятия\n{F69B2C}При снятии денег в банкомате вы теряете 1 процент за услуги нашей компании.\n", !"Далее", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{2})
				SPD(playerid, 34, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму для пополнения\n\n", !"Далее", !"Отмена");
			else if(listitem == DListitem[playerid]{3})
			{
				if(PI[playerid][pLevel] >= 3)
					SPD(playerid, 37, DIALOG_STYLE_INPUT, !"Введите ID", !"\n\n{FFFFFF}Введите ID/Ник игрока которому хотите перевести деньги\n\n", !"Выбор", !"Отмена");
				else
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Переводить деньги можно только с 3-го уровня");
			}
			else if(listitem == DListitem[playerid]{4})
			{
				if(PI[playerid][pCredit] > 0)
				{
				    f(str, sizeof(str), "\n\n{FFFFFF}Какую сумму вы хотите погасить?\nНа данный момент вы должны еще: {42B02C}%i${FFFFFF}\n\n", PI[playerid][pCredit]);
					SPD(playerid, 229, DIALOG_STYLE_INPUT, !"Кредит", str, !"Далее", !"Отмена");
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет кредита!");
			}
			else if(listitem == DListitem[playerid]{5})
			{
				if(PI[playerid][pRank] > 0)
				{
					f(str, sizeof(str), "\n\n{FFFFFF}На счету вашей организации {42B02C}$%i{FFFFFF}\n\n", OrgInfo[GetTeamID(playerid)][oBank]);
					SendBotMessage(playerid, str);
				}
			}
			else if(listitem == DListitem[playerid]{6})
			{
				if(PI[playerid][pLeader] > 0)
					SPD(playerid, 39, DIALOG_STYLE_INPUT, !"\n\nВведите сумму","{FFFFFF}Введите сумму для снятия\n\n", !"Далее", !"Отмена");
				else
					SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Данная функция доступна только лидеру!");
			}
			else if(listitem == DListitem[playerid]{7})
			{
				new cars;
				foreach(new i: OWNABLECARS)
				{
					new carid = OwnableCar[i];
					if(IsPlayerHaveCar(playerid, i))
					{
						if(CarInfo[i][cShtrafer] > 0)
						{
							ShowCar[playerid][cars] = carid;
							f(str, sizeof(str), "%s %s(%i)\n", str, GetNameCar(GetVehicleModel(carid)), carid);
							cars ++;
							if(cars > 0) SPD(playerid, 881, DIALOG_STYLE_LIST, !"Мой транспорт", str, !"Выбор", !"Отмена");
						}
						else
						{
							f(str, sizeof(str), "На транспорт: %s(%i) не выставлено налогов!\n", GetNameCar(GetVehicleModel(carid)), carid);
		    				SCM(playerid, COLOR_GREY, str);
						}
					}
				}
				if(cars == 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет налога на личный транспорт!");
			}
			else if(listitem == DListitem[playerid]{8})
			{
			    if(PI[playerid][pDepositChar2]) return SendBotMessage(playerid, !"Класть деньги на депозит, можно 1-ин раз в час!");
			    SPD(playerid, 55, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для пополнения депозита\n\n[{FFF700}i] {FFFFFF}Пополнять депозит можно 1-ин раз в час!\n[{FFF700}i] {FFFFFF}После пополнения депозита, вы не сможете снять с него деньги,\nв течение 5-ти игровых часов!\n[{FFF700}i] {FFFFFF}Ежечасовой процент зависит от вашей влиятельности ((VIP))\n\n", !"Далее", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{9})
			{
				if(PI[playerid][pDepositChar])
			        return SendBotMessage(playerid, !"Снимать деньги с депозита, можно\nчерез 5 часов, после последнего пополнения!");
			    SPD(playerid, 57, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для получения денег со своего депозита.\n\n", !"Далее", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{10})
			{
				f(str, sizeof(str), "{FFFFFF}Вы хотите приобрести ЕВРО?\n\nСтоимость 1-й купюры: {10F441}%i${FFFFFF}\nВ наличии {10F441}%i{FFFFFF} ЕВРО\n{AFAFAF}Введите в строку нужное количество валюты!",GLS[68],GLS[69]);
				SPD(playerid, 3722, DIALOG_STYLE_INPUT, !"", str, !"Обмен", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{11})
			{
				f(str, sizeof(str), "{FFFFFF}Вы хотите продать ЕВРО?\n\nСтоимость 1-й купюры: {10F441}%i${FFFFFF}\nУ вас {10F441}%i{FFFFFF} ЕВРО\n{AFAFAF}Введите в строку нужное для продаже количество валюты!",GLS[68],GetInvCount(playerid, Item_Euro));
				SPD(playerid, 3723, DIALOG_STYLE_INPUT, !"", str, !"Продать", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{12})
			{
				new cars;
				foreach(new i: OWNABLECARS)
				{
					new carid = OwnableCar[i];
					if(IsPlayerHaveCar(playerid, i))
					{
						if(CarInfo[i][cShtraf] > 0)
						{
							strcat(str, "{FFFFFF}");
							ShowCar[playerid][cars] = carid;
							f(str, sizeof(str), "%s(%i)\n", GetNameCar(GetVehicleModel(carid)), carid);
							strcat(str, str);
							cars ++;
							if(cars > 0) SPD(playerid, 171, DIALOG_STYLE_LIST, !"Мой транспорт", str, !"Выбор", !"Отмена");
						}
					}
				}
				if(cars == 0)
					return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет транспорта, который стоит на штрафстоянке!");
			}
			else if(listitem == DListitem[playerid]{13})
			{
				if(!ShowPlayerHome(playerid, 783, 2)) SendBotMessage(playerid, !"На данный момент, вам не надо платить налог за дом!");
			}
			else if(listitem == DListitem[playerid]{14})
			{
			    if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
			    new bizs;
			    for(new i; i < OWNABLEBIZES; i++)
				{
					if(GetString(BizInfo[i][bOwner], PN(playerid)) || GetString(BizInfo[i][bZam], PN(playerid)))
					{
						if(BizInfo[i][bNalog] > 0)
						{
						    ShowBiz[playerid][bizs] = i;
						    f(str, sizeof(str), "%s{FFFFFF}%s {E5AB2E}(%i){FFFFFF} Налог: {D44F23}%i$\n", str, BizInfo[i][bName], i, BizInfo[i][bNalog]);
						    bizs ++;
						}
					}
				}
				if(bizs) SPD(playerid, 9762, DIALOG_STYLE_LIST, !"Оплата налога", str, !"Выбор", !"Отмена");
				else SendBotMessage(playerid, !"На данный момент, вам не надо платить налог за бизнес!");
			}
			else if(listitem == DListitem[playerid]{15})
			{
			    if(PI[playerid][pMember] == 0)
					return 0;
			    f(str, sizeof(str), "\n\n{FFFFFF}Введите сумму для пополнение на счет организации {73B461}%s\n\n", OrgInfo[GetTeamID(playerid)][oName]);
			    SPD(playerid, 118, DIALOG_STYLE_INPUT, !"Пополнение счета организации", str, !"Оплатить", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{16})
			{
			    if(!PI[playerid][pTelNum])
					return 0;
			    SPD(playerid, 119, DIALOG_STYLE_INPUT, !"Пополнить баланс", !"\n\n{FFFFFF}Введите сумму для пополнение на баланс своего телефона\n\n", !"Оплатить", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{17})
			{
				f(str, sizeof(str), "{FFFFFF}Вы хотите приобрести BITCOIN?\n\nСтоимость 1 BITCOIN: {10F441}%i${AFAFAF}Введите в строку нужное количество крипто-валюты!", BITCOINS_PRICE);
				SPD(playerid, 3725, DIALOG_STYLE_INPUT, !"", str, !"Обмен", !"Отмена");
			}
			else if(listitem == DListitem[playerid]{18})
			{
				f(str, sizeof(str), "{FFFFFF}Вы хотите продать BITCOIN?\n\nСтоимость 1 BITCOIN: {10F441}%i${FFFFFF}\nУ вас {10F441}%i{FFFFFF} BITCOINS\n{AFAFAF}Введите в строку нужное для продаже количество крипто-валюты!", BITCOINS_PRICE, GetInvCount(playerid, Item_Bitcoin));
				SPD(playerid, 3726, DIALOG_STYLE_INPUT, !"", str, !"Продать", !"Отмена");
			}
		}
		case 3725:
		{
  			if(!response) return true;
  			new cost = strval(inputtext);
     		if(cost <= 0 || cost > 10000) return true;
		    if(cost*BITCOINS_PRICE > PI[playerid][pMoney]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
            GiveMoney(playerid, -cost*BITCOINS_PRICE);
			aml(52, playerid, "", "покупка BITCOINS", cost*BITCOINS_PRICE);
			InvAdd(playerid, Item_Bitcoin, cost);
			aml(101, playerid, "", "покупка в Банке", Item_Bitcoin, cost);
		}
		case 3726:
		{
	  		if(!response) return true;
	  		new cost = strval(inputtext);
     		if(cost <= 0 || cost > 10000) return true;
		    if(cost > GetInvCount(playerid, Item_Bitcoin)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно BITCOINS");
			GiveMoney(playerid, cost*BITCOINS_PRICE);
			aml(51, playerid, "", "продажа BITCOINS", cost*BITCOINS_PRICE);
            InvAdd(playerid, Item_Bitcoin, -cost);
            aml(102, playerid, "", "продажа в Банке", Item_Bitcoin, cost);
		}		
		case 3722:
		{
  			if(!response) return true;
  			new cost = strval(inputtext);
     		if(cost <= 0 || cost > 10000) return true;
		    if(cost*GLS[68] > PI[playerid][pMoney]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег.");
            if(cost > GLS[69]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У штата недостаточно EURO");
			GiveMoney(playerid,-cost*GLS[68]);
			aml(52, playerid, "", "покупка евро", cost*GLS[68]);
			GLS[69] -= cost;
			InvAdd(playerid, Item_Euro, cost);
			aml(101, playerid, "", "покупка в Банке", Item_Euro, cost);
		}
		case 3723:
		{
	  		if(!response) return true;
	  		new cost = strval(inputtext);
     		if(cost <= 0 || cost > 10000) return true;
		    if(cost > GetInvCount(playerid, Item_Euro)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно EURO");
			GiveMoney(playerid,cost*GLS[68]);
			aml(51, playerid, "", "продажа евро", cost*GLS[68]);
            GLS[69] += cost;
            InvAdd(playerid, Item_Euro, -cost);
            aml(102, playerid, "", "продажа в Банке", Item_Euro, cost);
		}
		case 3761:
	    {
	        if(!response) return true;
 			if(strlen(inputtext2) > 64) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы можете ввести не болле чем 64-ёх символов");
 			new id = GetPVarInt(playerid, !"PrefixID");
 			DeletePVar(playerid, !"PrefixID");
 			if(strlen(inputtext2)) mysql_format(mysql, str, sizeof(str), "%e", inputtext2);
			SetString(PI[id][pPrefix], str);
			UpdatePlayerDataStr(id, "Prefix", PI[id][pPrefix]);
			if(strlen(str)) SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Префикс %s{FFFFFF} успешно установлен!", PI[id][pPrefix]);
			else SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Префикс успешно удален!");
		}
		case 9000:
    	{
            if(response)
			{
	       		switch(listitem)
	       		{
				case 0:
	    			{
						if(IsPlayerInRangeOfPoint(playerid, 1.5, 1509.3087,1083.4829,1033.8420 ))
							return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы и так находитесь на этом этаже");
						J_SetPlayerPos(playerid,1509.3108,1088.0134,1033.8420);
						SetPlayerInterior(playerid,2);
						SetPlayerVirtualWorld(playerid,2);
						SetPlayerFacingAngle(playerid,89.1979);
					}
				case 1:
	   				{
	   				    if(IsPlayerInRangeOfPoint(playerid, 1.5, 1489.7209,-1259.7783,113.8044 ))
					   		return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы и так находитесь на этом этаже");
						J_SetPlayerPos(playerid,1489.7201,-1259.5638,113.8044);
						SetPlayerInterior(playerid,11);
						SetPlayerVirtualWorld(playerid,3);
						SetPlayerFacingAngle(playerid,270.2761);
					}
				case 2:
	   				{
	   				    if(!IsAtFrakcia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас нету доступа на этот этаж!");
	   				    if(IsPlayerInRangeOfPoint(playerid, 1.5, 1999.9298,1121.5593,1038.6824 ))
					   		return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы и так находитесь на этом этаже");
						J_SetPlayerPos(playerid,1999.9298,1121.5593,1038.6824);
						SetPlayerInterior(playerid,2);
						SetPlayerVirtualWorld(playerid,2);
						SetPlayerFacingAngle(playerid,270.2761);
					}
				}
			}
    	}
		case 55:
		{
		    if(!response)
		        return ShowBankMenu(playerid);
			if(!strlen(inputtextsave))
			    return SPD(playerid, 55, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для пополнения депозита\n\n[{FFF700}i] {FFFFFF}Пополнять депозит можно 1-ин раз в час!\n[{FFF700}i] {FFFFFF}После пополнения депозита, вы не сможете снять с него деньги,\nв течение 5-ти игровых часов!\n[{FFF700}i] {FFFFFF}Ежечасовой процент зависит от вашей влиятельности ((VIP))\n", !"Далее", !"Отмена");
		    if(PI[playerid][pDeposit] > 100000000)
		    {
		    	if(PI[playerid][pFamilyMember] != -1)
		    	{
		    		if(!FamilyInfo[PI[playerid][pFamilyMember]][famBankOffer]) return SendBotMessage(playerid, !"На вашем депозитном счету, больше 100 миллионов,\n положить больше нельзя, дабы снять это ограничение вам нужно состоять в семье\nимеющийю улучшение 'Банковские махинации'");
		    	}
		    	else return SendBotMessage(playerid, !"На вашем депозитном счету, больше 100 миллионов,\n положить больше нельзя, дабы снять это ограничение вам нужно состоять в семье\nимеющийю улучшение 'Банковские махинации'");
		    }

			if(PI[playerid][pDeposit] >= 200000000)
		        return SendBotMessage(playerid, !"На вашем депозитном счету, 200 миллионов,\nположить больше нельзя!");
			new
			    money = strval(inputtextsave);
			if(money >= 1 && PI[playerid][pMoney] >= money && money <= 5000000)
			{
				PI[playerid][pDeposit] += money;
				UpdatePlayerDataInt(playerid, "Deposit", PI[playerid][pDeposit]);
				GiveMoney(playerid, -money);
				aml(52, playerid, "", "положил деньги на депозит", money);
				f(str, sizeof(str), "Вы положили на свой депозитный счет $%i", money);
				SendBotMessage(playerid, str);
				PI[playerid][pDepositChar2] = 1;
				UpdatePlayerDataInt(playerid, "DepositChar2", PI[playerid][pDepositChar2]);
				PI[playerid][pDepositChar] = 5;
				UpdatePlayerDataInt(playerid, "DepositChar", PI[playerid][pDepositChar]);
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
			else
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\nУважаемый! Пытайтесь ввести все символы правильно!\nМинимальная сумма для пополнения {EE772D}10 000$\n{FFFFFF}Максимальная сумма для пополнения {EE772D}5 000 000$\n\n", !"Понял", !"");
		}
		case 57:
		{
		    if(!response)
		        return ShowBankMenu(playerid);
			if(!strlen(inputtextsave))
			    return SPD(playerid, 57, DIALOG_STYLE_INPUT, !"Введите сумму", !"\n\n{FFFFFF}Введите сумму от {B7D22C}10 000$ до 5 000 000$ {FFFFFF}для получения денег со своего депозита.\n\n", !"Далее", !"Отмена");
			new
			    money = strval(inputtextsave);
			if(money >= 1 && PI[playerid][pMoney] >= money && money <= 5000000 && PI[playerid][pDeposit] >= money)
			{
				PI[playerid][pDeposit] -= money;
				UpdatePlayerDataInt(playerid, "Deposit", PI[playerid][pDeposit]);
				GiveMoney(playerid, money);
				aml(51, playerid, "", "снятие денег с депозита", money);
                f(str, sizeof(str), "Вы сняли со своего депозитного счета $%i", money);
				SendBotMessage(playerid, str);
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
			else
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\nУважаемый! Пытайтесь ввести все символы правильно!\nМинимальная сумма для снятия {EE772D}10 000$\n\n", !"Понял", !"");
		}
		case 34:
		{
		    if(!response)
		        return ShowBankMenu(playerid);

		    if(!strlen(inputtextsave))
				return SPD(playerid, 34, DIALOG_STYLE_INPUT, !"Введите сумму", !"Введите сумму для пополнения", !"Далее", !"Отмена");

	        new
				money = strval(inputtextsave);

	        if((PI[playerid][pBank] + money) > 40000000 && PI[playerid][pVIP] < 4)
				return SendBotMessage(playerid, !"Приносим извинения, но в нашем банке ячейки не позволяют\nзапихнуть в них больше 40 миллионов!\nДля того чтобы получить 2-ой ящик, покупайте Titan VIP!");

	        if(money >= 1 && PI[playerid][pMoney] >= money)
	        {
	            PI[playerid][pBank] += money;
	            UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
	        	aml(61, playerid, "", "положил деньги в банк", money);
	            GiveMoney(playerid, -money);
	            aml(52, playerid, "", "положил деньги в банк", money);
	            SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы положили на свой банковский счет $%i", money);
	            SendBankBot(playerid);
	        }
	        else SendBotMessage(playerid, !"Уважаемый! Пытайтесь ввести все символы правильно!");
			return 1;
		}
		case 35:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return SPD(playerid,35,1,"Введите сумму","Введите сумму для снятия","Далее","Отмена");
		        new money = strval(inputtextsave);
		        if(money >= 1 && PI[playerid][pBank] >= money)
		        {
		            if(!IsAtBankomat(playerid,10.0))
		            {
			            PI[playerid][pBank] -= money;
			            UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
			            aml(61, playerid, "", "взял деньги из банка", money);
			            GiveMoney(playerid,money);
			            aml(51, playerid, "", "взял деньги из банка", money);
			            SCMf(playerid, COLOR_VALIK,"[Информация] {FFFFFF}Вы сняли со своего банковского счета $%i", money);
					}
					else
					{
					    new moni = money/100;
					    PI[playerid][pBank] -= money;
					    UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
					    aml(61, playerid, "", "взял деньги из банка", (money-moni));
			            GiveMoney(playerid,(money-moni));
			            aml(51, playerid, "", "взял деньги из банка", (money-moni));
			            SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы сняли со своего банковского счета $%i", money);
			            SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы потеряли 1 процент от снятых денег за использование банкомата.");

					}

                    SendBankBot(playerid);
		        }
		        else SendBotMessage(playerid,"Уважаемый! Пытайтесь ввести все символы правильно!");
			}
			else ShowBankMenu(playerid);
			return 1;
		}
		case 37:
		{
		    if(!response)
		        return ShowBankMenu(playerid);

	        if(!strlen(inputtextsave))
				return SPD(playerid, 37, DIALOG_STYLE_INPUT, !"Введите ID", !"{FFFFFF}Введите ID игрока которому хотите перевести деньги", !"Выбор", !"Отмена");

	        sscanf(inputtextsave, "u", TransferPlayer[playerid]);
	        if(PI[TransferPlayer[playerid]][pLevel] < 2)
	            return SendBotMessage(playerid, !"Переводить деньги, можно игрокам старше 1-го уровня!");

	        if(IsPlayerConnected(TransferPlayer[playerid]))
	        {
		        f(str, sizeof(str), "{FFFFFF}Введите сумму которую хотите перевести игроку {B83434}%s", PN(TransferPlayer[playerid]));
		        SPD(playerid, 41, DIALOG_STYLE_INPUT, !"Введите сумму", str, !"Готово", !"Отмена");
	        }
	        else
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок не в сети");
				ShowBankMenu(playerid);
			}
		    return 1;
		}
	 	case 39:
	    {
	    	if(response)
	    	{
	    		new Number = PI[playerid][pMember];
				if(strval(inputtextsave) >= 1 && OrgInfo[Number][oBank] >= strval(inputtextsave))
				{
	    			OrgInfo[Number][oBank] -= strval(inputtextsave);
	    			GiveMoney(playerid, strval(inputtextsave));
	    			aml(51, playerid, "", "взял деньги из организации", strval(inputtextsave));
	    			f(str, sizeof(str), "Вы сняли $%i со счёта вашей организации.Теперь на счету вашей организации $%i",strval(inputtextsave),OrgInfo[Number][oBank]);
	   				SPD(playerid, 0, 0, !"Банк" , str,"ОК","");
	   				f(str,sizeof(str),"{ECB534}%s снял с организации %i$",PN(playerid),strval(inputtextsave));
	   				SendTeamMessage(PI[playerid][pMember],-1,str);
	    			SaveOrg(Number);
	    			SendBankBot(playerid);
	    		}
			    else
			    {
			    	SendBotMessage(playerid,"Извините, но на счету вашей организации нет столько денег!");
			    	return 1;
			    }
			}
			else ShowBankMenu(playerid);
			return 1;
		}
		case 41:
		{
		    if(!response)
		        return SPD(playerid, 37, DIALOG_STYLE_INPUT, !"Введите ID", !"{FFFFFF}Введите ID игрока которому хотите перевести деньги", !"Выбор", !"Отмена");

	        new
				id = TransferPlayer[playerid],
	            money = strval(inputtextsave);
	        if(!strlen(inputtextsave))
			{
	        	f(str, sizeof(str), "{FFFFFF}Введите сумму которую хотите перевести игроку {B83434}%s", PN(TransferPlayer[playerid]));
	        	SPD(playerid, 41, DIALOG_STYLE_INPUT, !"Введите сумму", str, !"Готово", !"Отмена");
	        	return 1;
	        }
	        if(id == playerid)
				return 0;

	        if(money >= 1 && PI[playerid][pBank] >= money)
	        {
                if((PI[id][pBank]+money) > 40000000 && PI[playerid][pVIP] < 4) return SendBotMessage(playerid, !"Приносим извинения, вместе с вашим переводом у этого человека получится\nбольше 40-ка миллионов, которые мы не можем поместить в его ячейку!");
				if(PI[id][pBank]+money <= 0) return SendBotMessage(playerid, !"Приносим извинения, вместе с вашим переводом у этого человека получится\nбольше 40-ка миллионов, которые мы не можем поместить в его ячейку!");
	            PI[playerid][pBank] -= money;
	            UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
	            PI[id][pBank] += money;
	            UpdatePlayerDataInt(id, "Bank", PI[id][pBank]);
	            if(money > 3000)
	            {
	            	foreach(new i: Admin)
	            	{
	            		if(ShowIP{i}) SCMf(i, COLOR_RED, "Игрок %s[%i] перевел игроку %s[%i] на счет $%i [$%i]", PN(playerid), playerid, PN(id), id, money, PI[id][pBank]);
	            		else SCMf(i, COLOR_RED, "Игрок %s[%i] [IP: %s] перевел игроку %s[%i] [IP: %s] на счет $%i [$%i]", PN(playerid), playerid, PlayerIP(playerid), PN(id), id, PlayerIP(id), money, PI[id][pBank]);
	            	}
	            }
				SCMf(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы перевели $%i игроку %s(%i) на счет", money, PN(id), id);
		        SCMf(id, COLOR_YELLOW, "Вам поступил перевод на ваш счет в размере $%i от жителя %s(%i)", money, PN(playerid), playerid);
		        aml(55, playerid, PN(id), "", money);
		        SendBankBot(playerid);
	        }
	        else SendBotMessage(playerid, !"Уважаемый! Пытайтесь ввести все символы правильно!");
			return 1;
		}
		case 3920:
		{
		    if(response)
			{
			    f(str,sizeof(str),"{D38A37}- EasterBoard Farm. Часть 2{FFFFFF}\n\nВ чем же отличие между работами и должностями на ферме, или зачем вобще нужна ферма?\nБлагодаря нашей ферме, развозчики продуктов могут поставлять товары на склады городов.\nОтличие работ, в их перспективности, интересе работы, а также прибылью.\nПо скольку в нашем штате не так много пилотов, то работа водителя кукурузника на данный момент, самая прибыльная, перед ней идет комбайнер, а там уже и тракторист.");
       			SPD(playerid,0,0,"",str,"Закрыть","");
			}
		}
		case 3919:
		{
		    if(response)
			{
			    new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 )) return SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
			    switch(listitem)
			    {
			        case 0:
			        {
			            f(str,sizeof(str),"{D38A37}- EasterBoard Farm.{FFFFFF}\n\nЯвляется самым большим предприятием в нашем штате.\nздесь вы сможете начать работу самым обычным фермером, исполняющим самую простую работу и\nзакончить полётами на кукурузнике. С самого начала вы имеете 1 уровень фермера.\nПоработав немного начинающим фермером, вы сможете устроиться трактористом,\nпозже вы получите еще опыта в работе и доступ к комбайну и кукурузнику.\n{D38A37}/ffarm -навык фермера\n\nУдачной работы");
			            SPD(playerid,3920,0,"",str,"Читать еще","Закрыть");
			        }
			        case 1:
			        {
			            if(PI[playerid][pJob]!= 17 && PI[playerid][pJob]!= 18 && PI[playerid][pJob]!= 19 && PI[playerid][pJob]!= 20)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы здесь не работаете!");
			            if(PI[playerid][pJob]==17)
			            {
			                if(InJob[playerid]==0)
			                {
			                    PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 133);
								if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 131);
								InJob[playerid]=1;
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы переоделись в форму начинающего фермера!");
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Отправляйтесь по красному маркеру и переносите сено на склад!");
								for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], true);
								ferman[playerid]=0;
							}
							else
							{
							    InJob[playerid]=0;
							    SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
							    SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы успешно закончили работу, если вы не получили зарплату ее можно забрать в соседней комнате!");
							    for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	            				TogglePlayerDynamicCP(playerid, MinerDownCP, false);
								if(InJob[playerid]==3)RemovePlayerAttachedObject(playerid, 7);
							}
			            }
			            if(PI[playerid][pJob]==18)
			            {
			                if(InJob[playerid]==0)
			                {
			                    PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 158);
								if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 201);
								InJob[playerid]=1;
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы переоделись в форму тракториста!");
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Введите /jobhelp для подробного описания работы!");
			                }
			                else
							{
							    InJob[playerid]=0;
							    SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
							    SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы успешно закончили работу, получить зарплату можно в соседней комнате!");

							}
						}
						if(PI[playerid][pJob]==19)
			            {
			                if(InJob[playerid]==0)
			                {
			                    PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 161);
								if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 198);
								InJob[playerid]=1;
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы переоделись в форму комбайнера!");
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Введите /jobhelp для подробного описания работы!");
			                }
			                else
							{
							    InJob[playerid]=0;
							    SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
							    SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы успешно закончили работу, получить зарплату можно в соседней комнате!");
							}
						}
						if(PI[playerid][pJob]==20)
			            {
			                if(InJob[playerid]==0)
			                {
			                    PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 128);
								if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 198);
								InJob[playerid]=1;
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы переоделись в форму водителя кукурузника!");
								SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Введите /jobhelp для подробного описания работы!");
			                }
			                else
							{
							    InJob[playerid]=0;
							    SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
							    SCM(playerid, COLOR_VALIK, !"[Информация]{FFFFFF} Вы успешно закончили работу, получить зарплату можно в соседней комнате!");
							}
						}
			        }
			        case 2:
			        {
			            if(InJob[playerid]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для начала, закончите нынешнюю работу!");
			            if(PI[playerid][pJob]==17)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже работаете начальным фермером!");
			            ferman[playerid]=0;
			            PI[playerid][pJob]=17;
			            UpdatePlayerDataInt(playerid, "Job", 17);
			            ShowJobInfo(playerid, PI[playerid][pJob]);
			            SCM(playerid, COLOR_VALIK, !"Вы успешно устроились на должность начинающего фермера. Для того чтобы начать работу, выберите пункт Переодеться!");
			            SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
			            //SPD(playerid,3919,2,"","{73B461}-{FFFFFF} Информация\n{73B461}-{FFFFFF} Переодеться\n{73B461}-{FFFFFF} Начать работу на ферме\n{73B461}-{FFFFFF} Получить доступ к работе тракториста\n{73B461}-{FFFFFF} Получить доступ к работе комбайнера\n{73B461}-{FFFFFF} Получить доступ к работе водителя кукурузника", !"Принять", !"Отмена");

			        }
			        case 3:
			        {
			            if(InJob[playerid]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для начала, закончите нынешнюю работу!");
			            if(PI[playerid][pJob]==18)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже работаете трактористом!");
			            if(PI[playerid][pContractTime]<500)
						{
						    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете устроиться трактористом, так как ваш навык фермера недостаточно высок!");
						    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
						    return 0;
						}
						ferman[playerid]=0;
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно устроились на должность тракториста. Для того чтобы начать работу, выберите пункт Переодеться!");
						SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
						//SPD(playerid,3919,2,"","{73B461}-{FFFFFF} Информация\n{73B461}-{FFFFFF} Переодеться\n{73B461}-{FFFFFF} Начать работу на ферме\n{73B461}-{FFFFFF} Получить доступ к работе тракториста\n{73B461}-{FFFFFF} Получить доступ к работе комбайнера\n{73B461}-{FFFFFF} Получить доступ к работе водителя кукурузника", !"Принять", !"Отмена");
			            PI[playerid][pJob]=18;
			            UpdatePlayerDataInt(playerid, "Job", 18);
			            ShowJobInfo(playerid, PI[playerid][pJob]);
			        }
			        case 4:
			        {
						if(InJob[playerid]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для начала, закончите нынешнюю работу!");
			            if(PI[playerid][pJob]==19)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже работаете комбайнером!");
			            if(PI[playerid][pContractTime]<3200)
						{
							SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете устроиться комбайнером, так как ваш навык фермера недостаточно высок!");
						 	SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
						    return 0;
						}
						ferman[playerid]=0;
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно устроились на должность комбайнера. Для того чтобы начать работу, выберите пункт Переодеться!");
						SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
						//SPD(playerid,3919,2,"","{73B461}-{FFFFFF} Информация\n{73B461}-{FFFFFF} Переодеться\n{73B461}-{FFFFFF} Начать работу на ферме\n{73B461}-{FFFFFF} Получить доступ к работе тракториста\n{73B461}-{FFFFFF} Получить доступ к работе комбайнера\n{73B461}-{FFFFFF} Получить доступ к работе водителя кукурузника", !"Принять", !"Отмена");
			            PI[playerid][pJob]=19;
			            UpdatePlayerDataInt(playerid, "Job", 19);
			            ShowJobInfo(playerid, PI[playerid][pJob]);
			        }
			        case 5:
			        {
			            if(InJob[playerid]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для начала, закончите нынешнюю работу!");
			            if(PI[playerid][pJob]==20)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже работаете водителем кукурузника!");
			            if(PI[playerid][pContractTime]<7000)
						{
							SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете устроиться водителем кукурузника, так как ваш навык фермера недостаточно высок!");
						 	SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
						    return 0;
						}
      					ferman[playerid]=0;
						SCM(playerid, COLOR_VALIK, !"Вы успешно устроились на должность водителя кукурузника. Для того чтобы начать работу, выберите пункт Переодеться!");
						SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /ffarm | /help'");
			            PI[playerid][pJob]=20;
			            UpdatePlayerDataInt(playerid, "Job", 20);
                        ShowJobInfo(playerid, PI[playerid][pJob]);
			        }
			    }
			}
		}
		case 3331:
		{
		    if(response)
			{
			    if(GetMoney(playerid)<20000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				SPD(playerid, 771, 0, "", "{FFFFFF}Тест представляет из себя 7 вопросов, которые вы можете прочитать (( /help ))\nЕсли вы провалите тест деньги вам не вернут. ( 20 000$ )\nНу ,а если вы пройдете тест, вам дадут следующие указания.\n{9FC084}Нажмите кнопку 'Далле' чтобы начать собеседование.", "Далее", "Отмена");
			}
		    else
		    {
		        CarTest[playerid] = -1;
		        FlyivingTest[playerid] = 0;
		    }
		}
		case 771:
		{
      		if(response)
		    {
				GiveMoney(playerid,-20000);
				aml(52, playerid, "", "авиашкола", 20000);
		        new question = TestFASKMassive[playerid][0];
		        SPD(playerid,3339,QueFInfo[question][dDialog],QueFInfo[question][dQuestion],QueFInfo[question][dAnswers],"Далее","Отмена");
		    }
		    else
		    {
		        CarTest[playerid] = -1;
		        FlyivingTest[playerid] = 0;
		    }
		}
		case 46:
		{
			if(response)
			{
				if(GetMoney(playerid) < 1000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостачно денег!");
				GiveMoney(playerid, -1000);
				aml(52, playerid, "", "автошкола", 1000);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно получили разрешение на экзамен мото-транспорта! Для того чтобы приступить к");
                SCM(playerid, -1, !"следующей части экзамена, выйдите на улицу и сядьте в одно из учебных мотоциклов. Внимательно читайте");
			    SCM(playerid, -1, !"все подсказки, которые видите на экране!");
                EnableGPSForPlayer(playerid,-2073.93, -121.46, 35.34);
				MotoTest[playerid] = 0;
			}
		}
		case 47:
		{
			if(response)
			{
	            switch(listitem)
				{
					case 0:
					{
                        if(PI[playerid][pCarLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваша лицензия на авто обнулена. Теперь её можно получить только у лицензеров.");
		                if(GetInvCount(playerid, Item_Car_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть водительские права");
		             	if(DrivingTest[playerid] == 0 && CarTest[playerid] == -1)
		              	{
            				SPD(playerid,48,0,"Вступление","{FFFFFF}\n\nВас приветствует школа вождения {fbad2f}San-Fierro{FFFFFF}\nДля продолжения нажмите 'Далее\n\nСтоимость экзамена: {A0FF80}Бесплатно\n\n","Далее","Отмена");
	            			DrivingTest[playerid] = 1;
            				Question[playerid] = 0;
		            		Errors[playerid] = 0;
		             		TestASKMassive[playerid] = { 0, 1, 2, 3 };
		            		RandomMassive(TestASKMassive[playerid], 4);
		            	}
					}
					case 1:
					{
                        if(GetInvCount(playerid, Item_Bike_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть права мото-транспорта");
		             	if(MotoTest[playerid] == -1)SPD(playerid,46,0,"Вступление","{FFFFFF}\n\nВас приветствует школа вождения {FAAC58}San-Fierro{FFFFFF}\nДля продолжения нажмите 'Далее\n\nСтоимость экзамена: {FAAC58}1000$\n\n","Далее","Отмена");
					}
					case 2:
					{
                        SPD(playerid,0,0,"Информация","\n\n{FFFFFF}Получить права на полеты можно в городе {fbad2f}Las Venturas\n\
						{FFFFFF}в специально выделенной авиашколе, которую можно найти\n\
						с помощью {fbad2f}GPS -> Важные места\n\n","Понял","");
					}
					case 3:
					{
                        SPD(playerid,0,0,"Информация","\n\n{FFFFFF}Получить лицензию на оружие можно в любого {fbad2f}лицензера{FFFFFF} в этом здании.\n\
						Такие лицензии можно только купить, а их стоимость может постоянно меняться!\n\
						Узнать стоимость лицензии можно у {fbad2f}лицензеров\n\n","Понял","");
					}
				}
			}
		}
		case 48:
		{
		    if(response) SPD(playerid, 49, 0, "Вступление", "{FFFFFF}В ходе теста вам будет задано 4 вопроса по правилам дорожного движения.\nПосле ответа на ВСЕ вопросы система выдаст количество правильных ответов.\nЧтобы приступить к практической части необходимо ответить правильно на все вопросы!\n\n\n{A7FC00}Для продолжения нажмите 'Далее'.", "Далее", "Отмена");
		    else
		    {
		        CarTest[playerid] = -1;
		        DrivingTest[playerid] = 0;
		    }
		}
		case 49:
		{
		    if(response)
		    {
		        new question = TestASKMassive[playerid][0];
		        SPD(playerid,70,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","Отмена");
		    }
		    else
		    {
		        CarTest[playerid] = -1;
		        DrivingTest[playerid] = 0;
		    }
		}
		case 51:
		{
		    if(response) PddState[playerid] ++;
		    else PddState[playerid] --;
		    new pdd = PddState[playerid];
		    switch(pdd)
		    {
			    case 1:
			    {
           			ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 2: Общие обязанности водителей ____|");
			    	SCM(playerid, -1, !" 2.1. Водитель механического транспортного средства обязан:");
			        SCM(playerid, -1, !" 2.1.1. Иметь при себе и по требованию сотрудников полиции передавать им для проверки:");
					SCM(playerid, -1, !" - Паспорт гражданина SA и водительское удостоверение на право управления тс соответствующей категории.");
			        SCM(playerid, -1, !" 2.1.2. Предоставлять транспортное средство:");
			        SCM(playerid, -1, !" сотрудникам полиции, федеральному бюро расследований, национальной гвардии в случаях, предусмотренных законодательством;");
			        SCM(playerid, -1, !" медицинским и фармацевтическим работникам для перевозки граждан в ближайшее лечебно-профилактическое учреждение в случаях, угрожающих их жизни.");
			        SCM(playerid, -1, !" 2.1.3. Право остановки транспортных средств для проверки документов предоставлено: Полиции, ФБР,");
			        SCM(playerid, -1, !" Национальной Гвардии (только в случаях военного положения), а выписывать квитанции за нарушение ПДД только сотрудникам полиции.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 2:
			    {
           			ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 3: Применение специальных сигналов ____|");
			    	SCM(playerid, -1, !" 3.1. При приближении транспортного средства с включенными проблесковым маячком синего и красного цвета и специальным");
			        SCM(playerid, -1, !" звуковым сигналом водители обязаны уступить");
			        SCM(playerid, -1, !" дорогу для обеспечения беспрепятственного проезда указанного транспортного средства, ");
			        SCM(playerid, -1, !" а также сопровождаемого им транспортного средства (сопровождаемых транспортных средств).");
			        SCM(playerid, -1, !" заведениям. (полицейские, скорые, пожарные машины, машины из картинга, трюковые самолеты, такси, военные хаммеры и т.д.)");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 3:
			    {
           			ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 4: Обязаности пешеходов ____|");
			    	SCM(playerid, -1, !" 4.1. Пешеходы должны двигаться по тротуарам или пешеходным дорожкам, а при их отсутствии - по обочинам.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 4:
			    {
           			ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 5: Обязаности пассажиров ____|");
			    	SCM(playerid, -1, !" 5.1. Пассажиры обязаны:");
			        SCM(playerid, -1, !" посадку и высадку производить со стороны тротуара или обочины и только после полной остановки транспортного средства.");
			        SCM(playerid, -1, !" Если посадка и высадка невозможна со стороны тротуара или обочины, она может осуществляться со стороны проезжей части при условии, ");
			        SCM(playerid, -1, !" что это будет безопасно и не создаст помех другим участникам движения.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 5:
			    {
           			ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 6: Начало движения, маневрирование ____|");
			    	SCM(playerid, -1, !" 6.1. Перед началом движения, перестроением, поворотом (разворотом) и остановкой водитель обязан ");
			        SCM(playerid, -1, !" осмотреться и убедится в отсутствии помех для движения тс.");
			        SCM(playerid, -1, !" 6.2. Разворот запрещается:");
			        SCM(playerid, -1, !" на пешеходных переходах; в тоннелях; на мостах, путепроводах, эстакадах и под ними; на железнодорожных переездах;");
			        SCM(playerid, -1, !" в местах с видимостью дороги хотя бы в одном направлении менее 100 м;");
			        SCM(playerid, -1, !" 6.3. При повороте налево или развороте вне перекрестка водитель безрельсового транспортного");
			        SCM(playerid, -1, !" средства обязан уступить дорогу встречным транспортным средствам.");
			        SCM(playerid, -1, !" 6.4. Если встречный разъезд затруднен то, водитель, на стороне которого имеется препятствие, должен уступить дорогу. ");
			        SCM(playerid, -1, !" А на уклонах, движущегося на спуск.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 6:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 7: Расположение транспортных средств на проезжей части ____|");
			    	SCM(playerid, -1, !" 7.1. Запрещается движение транспортных средств по разделительным полосам и обочинам, тротуарам и пешеходным дорожкам");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 7:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 8: Скорость движения ____|");
			    	SCM(playerid, -1, !" 8.1. Водитель должен вести транспортное средство со скоростью, не превышающей установленного ограничения,");
			        SCM(playerid, -1, !" учитывая при этом интенсивность движения, особенности и состояние транспортного средства и груза, дорожные и метеорологические условия,");
			        SCM(playerid, -1, !" в частности видимость в направлении движения. Скорость должна обеспечивать водителю возможность постоянного контроля за движением");
			        SCM(playerid, -1, !" выполнения требований Правил.");
			        SCM(playerid, -1, !" При возникновении опасности для движения, которую водитель в состоянии обнаружить, он должен принять ");
			        SCM(playerid, -1, !" возможные меры к снижению скорости вплоть до остановки транспортного средства.");
			        SCM(playerid, -1, !" 8.2. В населенных пунктах разрешается движение транспортных средств со скоростью не более 60 км/ч.");
			        SCM(playerid, -1, !" 8.3. Вне населенных пунктов разрешается движение транспортных средств со скоростью не более 120 км/ч.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 8:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 9: Обгон, встречный разъезд ____|");
			   		SCM(playerid, -1, !" 9.1. Обгон запрещен:");
			        SCM(playerid, -1, !" на перекрестках с выездом на полосу встречного движения; на пешеходных переходах при наличии на них пешеходов;");
			        SCM(playerid, -1, !" на железнодорожных переездах и ближе чем за 100 м перед ними; транспортного средства, производящего обгон или объезд:");
			        SCM(playerid, -1, !" в конце подъема и на других участках дорог с ограниченной видимостью с выездом на полосу встречного движения.");
			        SCM(playerid, -1, !" 9.2. Обгон разрешен:");
			        SCM(playerid, -1, !" Если тс стоит на проезжей части или движется со скоростью менее 10 км/ч.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 9:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 10: Остановка и стоянка ____|");
			    	SCM(playerid, -1, !" 10.1.Остановка запрещается:");
			        SCM(playerid, -1, !" на железнодорожных переездах, в тоннелях, а также на эстакадах, мостах, путепроводах (если для движения ");
			        SCM(playerid, -1, !" в данном направлении имеется менее трех полос) и под ними;");
			        SCM(playerid, -1, !" 10.2. Стоянка с целью длительного отдыха, ночлега и тому подобное вне населенного пункта");
			        SCM(playerid, -1, !" разрешается только на предусмотренных для этого площадках или за пределами дороги.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 10:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 11: Проезд перекрестков ____|");
			    	SCM(playerid, -1, !" 11.1. На перекрестке равнозначных дорог водитель безрельсового транспортного средства ");
			        SCM(playerid, -1, !" обязан уступить дорогу транспортным средствам, приближающимся справа.");
			        SCM(playerid, -1, !" 11.2. На перекрестке неравнозначных дорог водитель безрельсового транспортного средства обязан уступить дорогу транспортным средствам, ");
			        SCM(playerid, -1, !" приближающимся по главной дороге.");
			        SCM(playerid, -1, !" 11.3. Запрещается выезжать на перекресток или пересечение проезжих частей, если образовался затор, ");
			        SCM(playerid, -1, !" который вынудит водителя остановиться, создав препятствие для движения транспортных средств в поперечном направлении");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 11:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 12: Пешеходные переходы и места остановок маршрутных транспортных средтсв ____|");
			    	SCM(playerid, -1, !" 12.1. Водитель транспортного средства обязан уступить дорогу пешеходам, переходящим проезжую часть, по нерегулируемому* пешеходному переходу.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 12:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 13: Движение по автомагистралям ____|");
			    	SCM(playerid, -1, !" 13.1. На автомагистралях запрещается:");
			        SCM(playerid, -1, !" движение, велосипедов, мопедов, тракторов и самоходных машин, иных транспортных средств,");
			        SCM(playerid, -1, !" скорость которых по технической характеристике или их состоянию менее 40 км/ч;");
			        SCM(playerid, -1, !" движение грузовых автомобилей далее второй полосы; остановка вне специальных площадок для стоянки:");
			        SCM(playerid, -1, !" разворот и въезд в технологические разрывы разделительной полосы; движение задним ходом; учебная езда.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 13:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 14: Буксировка механических транспортных средств ____|");
			    	SCM(playerid, -1, !" 15.1. При буксировке запрещается перевозка людей в буксируемом транспортном средстве и в кузове буксируемого грузового автомобиля");
			        SCM(playerid, -1, !" 15.2. Буксировка запрещается:");
			        SCM(playerid, -1, !" - двух и более транспортных средств;");
			        SCM(playerid, -1, !" - транспортных средств с недействующей тормозной системой, если их фактическая масса ");
			        SCM(playerid, -1, !" более половины фактической массы буксирующего транспортного средства;");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 14:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "|____ Параграф 16: Перевозка людей ____|");
					SCM(playerid, -1, !" 16.1. Водитель обязан осуществлять посадку и высадку пассажиров только после полной остановки транспортного средства,");
			        SCM(playerid, -1, !" а начинать движение только с закрытыми дверями и не открывать их до полной остановки.");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Выход\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 15:
			    {
			        ClearChatForPlayer(playerid);
			        SCM(playerid, COLOR_YELLOW, "Поздравляем! Вы прочли Правила дорожного движения!");
			        SPD(playerid, 51, 0, "Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Выход\" или \"Назад\"", "Выход", "Назад");
			    }
			    default: return 0;
		    }
		}
		case 7991:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0: SendBotMessage(playerid,"Мне некогда!");
			        case 1:
			        {
					    static mas[6] = {6,7,8,9,10,11};
					    new num=0;
						static skr[124];
						for(new i;i<6;i++)
						{
					 		if(AcceptQuest[playerid][mas[i]]==0) skr = "{3A8819}[Доступен]{FFFFFF}";
						    else if(QuestProgress[playerid][mas[i]]==100) skr = "{C71D1D}[Выполнен]{FFFFFF}";
						    else if(QuestProgress[playerid][mas[i]]==QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "{307CDA}[Можно завершить]{FFFFFF}";
						    else if(QuestProgress[playerid][mas[i]]>=0 && AcceptQuest[playerid][mas[i]]!=0) skr = "{DA9815}[В процессе]{FFFFFF}";

						    f(str,sizeof(str),"%s\n%s %s",str,QI[mas[i]][QuestName],skr);
						    QuestShow[playerid][num]=mas[i];
						    num++;
						}
						SPD(playerid,7971,2,"Квесты",str, !"Принять", !"Отмена");
						//квесты
			        }
			    }
			}
		}
		case 7971:
		{
			if(response)
			{
				new id = QuestShow[playerid][listitem];
				if(QuestProgress[playerid][id]==100) return SendBotMessage(playerid,"Вы уже выполняли у меня это задание!");//Вы уже его выполнили

			    switch(id)
			    {
			        case 1..5:
			        {
			            if(QuestProgress[playerid][id-1]!=100)
						{
						    if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
							else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
							return SPD(playerid, 0, 0, !"", !"{E64444}Вы не можете принять этот сюжетный квест пока не выполните предыдущий!\n\n{FFFFFF}На миникарте обозначена метка где необходимо пройти задание!", !"Принять", !"");
						}
			        }
			        case 6..13:
			        {
			            if(QuestProgress[playerid][6]!=100)
			            {
			                if(PI[playerid][pRace]==0) EnableGPSForPlayer(playerid,1773.6903,-1891.7493,13.5504);
							else EnableGPSForPlayer(playerid,2211.0706,-1142.9728,25.8084);
							return SPD(playerid, 0, 0, !"", !"{E64444}Вы не можете принять этот сюжетный квест пока не выполните предыдущий!\n\n{FFFFFF}На миникарте обозначена метка где необходимо пройти задание!", !"Принять", !"");
			            }
			            else if(QuestProgress[playerid][id-1]!=100)
						{
							EnableGPSForPlayer(playerid,1324.0098,287.2829,20.0452);
							return SPD(playerid, 0, 0, !"", !"{E64444}Вы не можете принять этот сюжетный квест пока не выполните предыдущий!\n\n{FFFFFF}На миникарте обозначена метка где необходимо пройти задание!", !"Принять", !"");
						}
			        }
			    }

				if(AcceptQuest[playerid][id]==0)
				{
		            f(str,sizeof(str),"%s\n\n{FFFFFF}Вы действительно хотите принять квест?",QI[id][QuestText]);
					SendBotMessage(playerid,"ммм");
					SPD(playerid,7972,0,"",str, !"Принять", !"Отмена");
					QuestClick[playerid]=id;
				}
				else
				{
				    if(QuestProgress[playerid][id]==QI[id][LastProgress])
				    {
				        switch(id)
				        {
				            case 0:
				            {
				                SendBotMessage(playerid,"Молодец, ты очень быстро справился.");
				                GiveMoney(playerid,350);
				                aml(51, playerid, "", "выполнение квеста", 350);
				                PI[playerid][pExp]++;
				                CheckNextLevel(playerid);
				            }
				            case 1:
				            {
				                SendBotMessage(playerid,"Не забывай, ты всегда еще можешь подработать на ферме.\nХорошие работники могут получить повышение и\nработать как трактористом, комбайнером или летать на кукурузнике!");
				                GiveMoney(playerid,450);
				                aml(51, playerid, "", "выполнение квеста", 450);
				                PI[playerid][pExp]++;
				                CheckNextLevel(playerid);
				            }
				            case 2:
				            {
				                SendBotMessage(playerid,"Отлично, быстро справился.\nДержи награду!");
				                GiveMoney(playerid,550);
				                aml(51, playerid, "", "выполнение квеста", 550);
				                PI[playerid][pExp]++;
				                CheckNextLevel(playerid);
				            }
				            case 3:
				            {
				                SendBotMessage(playerid,"Супер, теперь у тебя куда больше возможностей!\nВ дальнейшем может-быть куда-то тебя устроим.");
				                GiveMoney(playerid,550);
				                aml(51, playerid, "", "выполнение квеста", 550);
				                PI[playerid][pExp]+=2;
				                CheckNextLevel(playerid);
				            }
				            case 4:
				            {
				                SendBotMessage(playerid,"Как по мне, это была одна из самых\nприятных задач.");
				                GiveMoney(playerid,750);
				                aml(51, playerid, "", "выполнение квеста", 750);
				                PI[playerid][pExp]++;
				                CheckNextLevel(playerid);
				            }
				            case 5:
				            {
				                SendBotMessage(playerid,"Вижу ты хорошо поработал. Держи награду");
				                GiveMoney(playerid,600);
				                aml(51, playerid, "", "выполнение квеста", 600);
				                InvAdd(playerid, Item_Ticket_EXP, 1);
				                aml(101, playerid, "", "выполнение квеста", Item_Ticket_EXP, 1);
				                CheckNextLevel(playerid);
				            }
				            case 6:
				            {
				                SendBotMessage(playerid,"Иметь нормальный телефон, это уже шаг к успеху.");
				                GiveMoney(playerid,400);
				                aml(51, playerid, "", "выполнение квеста", 400);
				                InvAdd(playerid, Item_Ticket_EXP, 1);
				                aml(101, playerid, "", "выполнение квеста", Item_Ticket_EXP, 1);
				                CheckNextLevel(playerid);
				            }
				            case 7:
				            {
				                SendBotMessage(playerid,"Ох ниче-себе, ты прям сам на себя не похож.");
				                GiveMoney(playerid,6000);
				                aml(51, playerid, "", "выполнение квеста", 6000);
				                InvAdd(playerid, Item_Ticket_EXP, 1);
				                aml(101, playerid, "", "выполнение квеста", Item_Ticket_EXP, 1);
				                CheckNextLevel(playerid);
				            }
				            case 8:
				            {
				                SendBotMessage(playerid,"Хорошая работа, дружище!");
				                GiveMoney(playerid,2000);
				                aml(51, playerid, "", "выполнение квеста", 2000);
				                InvAdd(playerid, Item_Ticket_EXP, 1);
				                aml(101, playerid, "", "выполнение квеста", Item_Ticket_EXP, 1);
				                CheckNextLevel(playerid);
				            }
				            case 9:
				            {
				                SendBotMessage(playerid,"Теперь ты знаешь где можно изучать стили боя!");
				                GiveMoney(playerid,1350);
				                aml(51, playerid, "", "выполнение квеста", 1350);
				                InvAdd(playerid, Item_Ticket_EXP, 1);
				                aml(101, playerid, "", "выполнение квеста", Item_Ticket_EXP, 1);
				                CheckNextLevel(playerid);
				            }
				            case 10:
				            {
				                SendBotMessage(playerid,"Все конечно хорошо, но сейчас\nпокупать оружие не следует!");
				                GiveMoney(playerid,5000);
				                aml(51, playerid, "", "выполнение квеста", 5000);
				                InvAdd(playerid, Item_Ticket_EXP, 1);
				                aml(101, playerid, "", "выполнение квеста", Item_Ticket_EXP, 1);
				                CheckNextLevel(playerid);
				            }
				            case 11:
				            {
				                InvAdd(playerid, Item_FamilyTalon, 2);
				                aml(101, playerid, "", "выполнение квеста", Item_FamilyTalon, 2);
				                SendBotMessage(playerid, "Молодец, хорошая работа!\nВот твои 2-а талона.");
				            }
				        }
						QuestProgress[playerid][id]=100;
				        mysql_pqueryf(mysql, "UPDATE `QuestsProgress` SET `progress`='%i' WHERE `idquest`='%i' AND `name`='%s';", QuestProgress[playerid][id], id, PN(playerid));
						callcmd::stopjob(playerid,"");
				        SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
				    }
			        else {
                        return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте /quest!");
			        }
				}
			}
			return 1;
		}
		case 7972:
		{
			if(response)
			{
				new id = QuestClick[playerid];
				if(QuestProgress[playerid][id]==100) return SendBotMessage(playerid,"Вы уже выполняли у меня это задание!");//Вы уже его выполнили
				if(QuestProgress[playerid][id]>=0 && AcceptQuest[playerid][id]!=0) return SendBotMessage(playerid,"Вы уже приняли это задание!"); //Вы уже его приняли
				if(AcceptQuest[playerid][id]==0)
				{
				    f(str2, sizeof(str2), "INSERT INTO `QuestsProgress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%i', '%s', '%i', '%i')", id, PN(playerid), 0, 1);
				    mysql_pquery(mysql, str2, "SaveQuests", "dd", playerid, id);
		            AcceptQuest[playerid][id] = 1;
		    		QuestProgress[playerid][id] = 0;
		    		SendBotMessage(playerid,"Хорошо что взялся, жду выполнения!\nИспользуй /quest чтобы посмотреть принятые задания.");
		    		NextStapQI(playerid,id);
				}
			}
			return 1;
		}
        case 1449:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: SendBotMessage(playerid,"Я приехал из другого города искать работу, и тут наткнулся на это.\nПостараюсь проработать тут все лето, а дальше посмотрим.\nЕсли что, я занимаюсь обменом подарков на шкатулки, так что подходи. {FFFEFE}*Улыбается*");
        			case 1: SendBotMessage(playerid,"Для обмена необходимо 20 подарков,\nкоторые можно найти по всему штату. Собственно они\nпоявляются раз в 20 минут, так что найти их будет не просто!\n");
        			case 2: SendBotMessage(playerid,"В штате стали возникать проблемы с экономикой, вот и какой-то засранец\nрешил побаловаться, дав вам шанс подзаработать.");
					case 3:
					{
					    if(GetInvCount(playerid, Item_Gift) < 20) return SendBotMessage(playerid, "Дружище, я обменяю тебе шкатулку, только если ты принесешь 20 подарков!");
					    switch(random(55))
						{
							case 0..10:
							{
							    GiveMoney(playerid, 250000);
							    aml(51, playerid, "", "открытие шкатулки", 250000);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои $250.000!");
							    SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил $250.000!", PN(playerid));
							    InvAdd(playerid, Item_Gift, -20);
							    aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
							case 11..12:
							{
							    GiveMoney(playerid,450000);
							    aml(51, playerid, "", "открытие шкатулки", 450000); 
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои $450.000!");
							    SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил $450.000!", PN(playerid));
							    InvAdd(playerid, Item_Gift, -20);
							    aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
							case 13..14:
							{
							    if(PI[playerid][pFeFinder] == 0)
							    {
								    PI[playerid][pFeFinder] = 1;
								    UpdatePlayerDataInt(playerid, "FeFinder", PI[playerid][pFeFinder]);
								    SendBotMessage(playerid,"Ну хоть что-то. Теперь круче ездить будешь!");
									SPD(playerid, 0, 0, !"", !"Вы получили умение 'Шумахер'.\n{752121}Введите /mm - улучшение и посмотрите информацию.", !"Закрыть", !"");
									InvAdd(playerid, Item_Gift, -20);
									aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
								}
								else SendBotMessage(playerid,"Брат, ты бы мог получить навык шумахер, но уж так получается он у тебя уже есть\nВозращаю твои 20 подарков обратно!");
							}
							case 15..17:
							{
							    InvAdd(playerid, Item_Drugs, 100);
							    aml(101, playerid, "", "открытие шкатулки", Item_Drugs, 100);
           						SendBotMessage(playerid,"Чувак, да мне это в руках страшно держать, вот забирай быстрей свою траву!");
           						SPD(playerid, 0, 0, !"", !"Вы получили 100г наркотиков.\n{752121}Введите /invent - чтобы посмотреть свой инвентарь.", !"Закрыть", !"");
           						InvAdd(playerid, Item_Gift, -20);
           						aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
							case 18..25:
							{
							    GiveMoney(playerid, 550000);
							    aml(51, playerid, "", "со шкатулки", 550000);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои $550.000!");
							    InvAdd(playerid, Item_Gift, -20);
							    aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
							case 26..30:
							{
							    GiveMoney(playerid,1000000);
							    aml(51, playerid, "", "со шкатулки", 1000000);
							    SendBotMessage(playerid,"Еперный бабай!!\nДа у меня таких денег сроду не было!");
							    SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил $1.000.000!", PN(playerid));
							    InvAdd(playerid, Item_Gift, -20);
							    aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
                            case 31..34:
                            {
                                InvAdd(playerid, Item_Ticket_AZ, 5000);
                                aml(101, playerid, "", "открытие шкатулки", Item_Ticket_AZ, 5000);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
                                SPD(playerid, 0, 0, !"", !"Вам удалось получить 5.000 Az coins.\nНе забудьте запечатлить этот момент, нажав клавишу F8.", !"Закрыть", !"");
                                SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил 5.000 A-Z coins!", PN(playerid));
								InvAdd(playerid, Item_Gift, -20);
								aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
                            }
                            case 35..37:
                            {
                                InvAdd(playerid, Item_Ticket_AZ, 10000);
                                aml(101, playerid, "", "открытие шкатулки", Item_Ticket_AZ, 10000);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?");
                                SPD(playerid, 0, 0, !"", !"Вам удалось получить 10.000 Az coins.\nНе забудьте запечатлить этот момент, нажав клавишу F8.", !"Закрыть", !"");
                                SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил 10.000 A-Z coins!", PN(playerid));
								InvAdd(playerid, Item_Gift, -20);
								aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
                            }
                            case 38..40:
                            {
                                InvAdd(playerid, Item_Ticket_AZ, 15000);
                                aml(101, playerid, "", "открытие шкатулки", Item_Ticket_AZ, 15000);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?\nНе может быть!");
                                SPD(playerid, 0, 0, !"", !"Вам удалось получить 15.000 Az coins.\nНе забудьте запечатлить этот момент, нажав клавишу F8.", !"Закрыть", !"");
								SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил 15.000 A-Z coins!", PN(playerid));
								InvAdd(playerid, Item_Gift, -20);
								aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
                            }
                            case 41..42:
                            {
                                InvAdd(playerid, Item_Ticket_AZ, 20000);
                                aml(101, playerid, "", "открытие шкатулки", Item_Ticket_AZ, 20000);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?\nНе может быть!");
                                SPD(playerid, 0, 0, !"", !"Вам удалось получить 20000 Az coins.\nНе забудьте запечатлить этот момент, нажав клавишу F8.", !"Закрыть", !"");
                                SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил 20.000 A-Z coins!", PN(playerid));
								InvAdd(playerid, Item_Gift, -20);
								aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
                            }
                            case 43:
                            {
								InvAdd(playerid, Item_Ticket_AZ, 25000);
								aml(101, playerid, "", "открытие шкатулки", Item_Ticket_AZ, 25000);
                                SendBotMessage(playerid,"Вох вох вох!\nДа ты везучий черт подери. Что это?\nНе может быть!");
                                SPD(playerid, 0, 0, !"", !"Вам удалось получить 25000 Az coins.\nНе забудьте запечатлить этот момент, нажав клавишу F8.", !"Закрыть", !"");
                                SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил 25.000 A-Z coins!", PN(playerid));
								InvAdd(playerid, Item_Gift, -20);
								aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
                            }
							case 44:
							{
								SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил Уникальный коричневый чемодан для хранения денег!", PN(playerid));
						        SendBotMessage(playerid,"Ёп-макарёк, вот это ты втащил, держи свой коричневый чемодан!\n((В донате он стоит баснословных денег))");
						        SPD(playerid, 0, 0, !"", !"Вам удалось получить Уникальный коричневый чемодан для хранения денег!\nНе забудьте запечатлить этот момент, нажав клавишу F8.\n\n\n{C79B9B}Теперь если у вас на руках будет больше 5 000 000$, место стандартного\nкейса у вас будет красивый чемодан.", !"Закрыть", !"");
						        InvAdd(playerid, Item_Bag_Brown, 1);
						        aml(101, playerid, "", "открытие шкатулки", Item_Bag_Brown, 1);
						        InvAdd(playerid, Item_Gift, -20);
						        aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
							case 45:
							{
								SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил Уникальный красный чемодан для хранения денег!", PN(playerid));
						        SendBotMessage(playerid,"Ёп-макарёк, вот это ты втащил, держи свой красный чемодан!\n((В донате он стоит баснословных денег))");
						        SPD(playerid, 0, 0, !"", !"Вам удалось получить Уникальный красный чемодан для хранения денег!\nНе забудьте запечатлить этот момент, нажав клавишу F8.\n\n\n{C79B9B}Теперь если у вас на руках будет больше 5 000 000$, место стандартного\nкейса у вас будет красивый чемодан.", !"Закрыть", !"");
						        InvAdd(playerid, Item_Suitcase_Red, 1);
						        aml(101, playerid, "", "открытие шкатулки", Item_Suitcase_Red, 1);
						        InvAdd(playerid, Item_Gift, -20);
						        aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
							case 46..54:
							{
							    GiveMoney(playerid, 150000);
							    aml(51, playerid, "", "открытие шкатулки", 150000);
							    SendBotMessage(playerid,"Что-то то нормальное да будет.\nДержи свои $150.000!");
							    SCMAllf(COLOR_ORANGE, "Открыв СУНДУК с подарками, игрок %s получил $150.000!", PN(playerid));
								InvAdd(playerid, Item_Gift, -20);
								aml(102, playerid, "", "открытие шкатулки", Item_Gift, 20);
							}
						}
					}
				}
			}
		}
		case 1339:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: SendBotMessage(playerid,"Приехал я с другого города на заработки, вот и жду тут автобус.\nКстати, где-то сейчас он должен подьехать, если лень ждать, там велики на прокат стоят!");
        			case 1: SendBotMessage(playerid,"Говорили тут на ферме можно подзаработать, а можно и карьеру сделать,\nдумаю первое время там, а потом на права, паспорт и тому подобное.");
        			case 2: SendBotMessage(playerid,"По-моему тебе должны были выдать GPS, вот его и советую использовать,\nСчитай благодаря ему тут только можно освоиться.");
        			case 3: SendBotMessage(playerid,"Даа не беда, в Аризоне тут проблем нет, в мэрии можно получить его бесплатно\nно учти, что во второй раз тебе его выдавать не будут,\nполиция может задержать и бог знает что будет!");
        			case 4: SendBotMessage(playerid,"Я вот когда получал сдал со 2 раза, чтобы сдать на права не надо платить.\nСоветую подготовить теорию, она там играет важную роль!");
        			case 5: SendBotMessage(playerid,"По всему штату куча отелей, я например с 1-го дня поселился.\nИ недорого, знаешь, всего лишь 5 000 и все.");
        			case 6: SendBotMessage(playerid,"Нуу даже не знаю, тут много где его можно купить, например\nчерез дорогу есть магазин, но не думаю что у тебя хватит денег на его покупку.");
        			case 7: SendBotMessage(playerid,"Тут какой то бизнесмен завелся, всех приезжих бесплатно кормит.\nА что ты спрашиваешь, разве это плохо?");
        			case 8: SendBotMessage(playerid,"Думаю в больничке, если сейчас там есть доктора.\nКстати, тебе мед.карта понадобится при поступлении в армию.");
				}
			}
		}
		case 133:
		{
			if(!response)
				return 1;

			switch(listitem)
			{
		        case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		        case 4: ApplyAnimation(playerid, !"DANCING", !"DAN_Left_A", 4.1, 1, 0, 0, 0, 0, 0);
		        case 5: ApplyAnimation(playerid, !"DANCING", !"dnce_M_a", 4.1, 1,0, 0, 0, 0, 0);
		        case 6: ApplyAnimation(playerid, !"ON_LOOKERS", !"wave_loop", 4.1, 1, 1, 1, 0, 0);
		        case 7: ApplyAnimation(playerid, !"BEACH", !"bather", 4.0, 1, 0, 0, 0, 0);
		        case 8: ApplyAnimation(playerid, !"ped", !"endchat_03", 4.1, 1, 0, 0, 0, 0, 0);
		        case 9: ApplyAnimation(playerid, !"benchpress", !"gym_bp_celebrate", 4.0, 0, 0, 0, 0, 0);
				case 10: ApplyAnimation(playerid, !"PED", !"COWER", 4.1, 0, 0, 0, 0, 0, 1);
				case 11: ApplyAnimation(playerid, !"SHOP", !"ROB_SHIFTY", 4.1, 0, 0, 0, 0, 0, 1);
				case 12: ApplyAnimation(playerid, !"SHOP", !"ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0, 1);
				case 13: ApplyAnimation(playerid, !"COP_AMBIENT", !"Coplook_loop", 4.0, 0, 1, 1, 1, -1);
				case 14: ApplyAnimation(playerid, !"FOOD", !"EAT_VOMIT_P", 4.1, 0, 0, 0, 0, 0, 1);
				case 15: ApplyAnimation(playerid, !"FOOD", !"EAT_BURGER", 4.1, 0, 0, 0, 0, 0, 1);
				case 16: ApplyAnimation(playerid, !"DEALER", !"DEALER_DEAL", 4.1, 0, 0, 0, 0, 0, 1);
				case 17: ApplyAnimation(playerid, !"CRACK", !"CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
				case 18: ApplyAnimation(playerid, !"LOWRIDER", !"M_SMKLEAN_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 19: ApplyAnimation(playerid, !"LOWRIDER", !"F_SMKLEAN_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 20: ApplyAnimation(playerid, !"BEACH", !"ParkSit_M_loop", 4.0, 0, 0, 0, 1, 1, 1);
				case 21: ApplyAnimation(playerid, !"PARK", !"Tai_Chi_Loop",4.0,1,0,0,0,0,1);
				case 22: ApplyAnimation(playerid, !"BAR", !"dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
				case 23: ApplyAnimation(playerid, !"DANCING", !"DAN_RIGHT_A", 4.1, 0, 0, 0, 0, 0, 1);
				case 24: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_DEF_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 25: ApplyAnimation(playerid, !"MISC", !"PLYR_SHKHEAD", 4.1, 0, 0, 0, 0, 0, 1);
				case 26: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 27: ApplyAnimation(playerid, !"CAMERA", !"camstnd_cmon", 4.0, 0, 0, 0, 0, 0);
				case 28: ApplyAnimation(playerid, !"SHOP", !"SHP_ROB_HANDSUP", 4.1, 0, 0, 0, 0, 0, 1);
				case 29: ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE2", 4.1, 0, 0, 0, 0, 0, 1);
				case 30: ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE4", 4.1, 0, 0, 0, 0, 0, 1);
				case 31: ApplyAnimation(playerid, !"DEALER", !"DEALER_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 32: ApplyAnimation(playerid, !"GANGS", !"LEANIDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 33: ApplyAnimation(playerid, !"GANGS", !"SHAKE_CARSH", 4.1, 0, 0, 0, 0, 0, 1);
				case 34: ApplyAnimation(playerid, !"GANGS", !"SMKCIG_PRTL", 4.1, 0, 0, 0, 0, 0, 1);
				case 35: ApplyAnimation(playerid, !"BEACH", !"ParkSit_W_loop", 3.0, 0, 1, 1, 1, 0);
				case 36: ApplyAnimation(playerid, !"INT_HOUSE", !"LOU_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 37: ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_BORED_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 38: ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_IDLE_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 39: ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_TYPE_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 40: ApplyAnimation(playerid, !"INT_SHOP", !"SHOP_SHELF", 4.1, 0, 0, 0, 0, 0, 1);
				case 41: ApplyAnimation(playerid, !"JST_BUISNESS", !"girl_02", 4.1, 0, 0, 0, 1, 1, 1);
				case 42: ApplyAnimation(playerid, !"KISSING", !"GF_STREETARGUE_02", 4.1, 0, 0, 0, 0, 0, 1);
				case 43: ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0, 1);
				case 44: ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0, 1);
				case 45: ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_02", 4.0, 0, 0, 0, 0, 0, 1);
				case 46: ApplyAnimation(playerid, !"LOWRIDER", !"RAP_B_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 47: ApplyAnimation(playerid, !"MEDIC", !"CPR", 4.0, 0, 0, 0, 0, 0);
				case 48: ApplyAnimation(playerid, !"MISC", !"BITCHSLAP", 4.1, 0, 0, 0, 0, 0, 1);
				case 49: ApplyAnimation(playerid, !"MISC", !"BNG_WNDW", 4.1, 0, 0, 0, 0, 0, 1);
				case 50: ApplyAnimation(playerid, !"MISC", !"KAT_THROW_K", 4.1, 0, 0, 0, 0, 0, 1);
				case 51: ApplyAnimation(playerid, !"MISC", !"SEAT_LR", 4.1, 0, 0, 0, 0, 0, 1);
				case 52: ApplyAnimation(playerid, !"PED", !"SEAT_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
				case 53: ApplyAnimation(playerid, !"ON_LOOKERS", !"LKUP_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 54: ApplyAnimation(playerid, !"ON_LOOKERS", !"POINTUP_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 55: ApplyAnimation(playerid, !"ON_LOOKERS", !"PANIC_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 56: ApplyAnimation(playerid, !"ON_LOOKERS", !"SHOUT_02", 4.1, 0, 0, 0, 0, 0, 1);
				case 57: ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 1, 1);
				case 58: ApplyAnimation(playerid, !"PED", !"IDLE_taxi", 4.0, 0, 0, 0, 0, 0);
				case 59: ApplyAnimation(playerid, !"POLICE", !"DOOR_KICK", 4.1, 0, 0, 0, 0, 0, 1);
				case 60: ApplyAnimation(playerid, !"POLICE", !"COPTRAF_STOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 61: ApplyAnimation(playerid, !"RIOT", !"RIOT_ANGRY_B", 4.1, 0, 0, 0, 0, 0, 1);
				case 62: ApplyAnimation(playerid, !"LOWRIDER", !"RAP_C_Loop", 4.0, 1, 0, 0, 0, 0);
				case 63: ApplyAnimation(playerid, !"SWAT", !"GNSTWALL_INJURD", 4.1, 0, 0, 0, 0, 0, 1);
				case 64: ApplyAnimation(playerid, !"SWEET", !"SWEET_INJUREDLOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 65: ApplyAnimation(playerid, !"RIOT", !"RIOT_ANGRY", 4.0, 0, 0, 0, 0, 0);
				case 66: ApplyAnimation(playerid, !"GHANDS", !"GSIGN2", 4.1, 0, 0, 0, 0, 0, 1);
				case 67: ApplyAnimation(playerid, !"GHANDS", !"GSIGN4", 4.1, 0, 0, 0, 0, 0, 1);
				case 68: ApplyAnimation(playerid, !"GHANDS", !"GSIGN5", 4.1, 0, 0, 0, 0, 0, 1);
				case 69: ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE1", 4.1, 0, 0, 0, 0, 0, 1);
				case 70: ApplyAnimation(playerid, !"SPRAYCAN", !"spraycan_full", 4.0, 0, 0, 0, 0, 0);
				case 71: ApplyAnimation(playerid, !"GRAFFITI", !"SPRAYCAN_FIRE", 4.1, 0, 0, 0, 0, 0, 1);
				case 72: ApplyAnimation(playerid, !"SMOKING", !"M_SMKSTND_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 73: ApplyAnimation(playerid, !"RIOT", !"RIOT_CHANT", 4.1, 0, 0, 0, 0, 0, 1);
				case 74: ApplyAnimation(playerid, !"RIOT", !"RIOT_PUNCHES", 4.1, 0, 0, 0, 0, 0, 1);
				case 75: ApplyAnimation(playerid, !"PED", !"fucku", 4.0, 0, 0, 0, 0, 0, 1);
				case 76: ApplyAnimation(playerid, !"LOWRIDER", !"RAP_A_Loop", 4.0, 1, 0, 0, 0, 0);
				case 77: ApplyAnimation(playerid, !"CAR", !"FIXN_CAR_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 78: ApplyAnimation(playerid, !"CAR_CHAT", !"CAR_TALKM_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
				case 79: ApplyAnimation(playerid, !"CRACK", !"BBALBAT_IDLE_01", 4.1, 0, 0, 0, 0, 0, 1);
				case 80: ApplyAnimation(playerid, !"CRACK", !"BBALBAT_IDLE_02", 4.1, 0, 0, 0, 0, 0, 1);
				case 81: ApplyAnimation(playerid, !"GHANDS", !"GSIGN1", 4.0, 0, 0, 0, 0, 1, 1);
				case 82: ApplyAnimation(playerid, !"GHANDS", !"GSIGN3", 4.0, 0, 0, 0, 0, 1, 1);
				case 83: ApplyAnimation(playerid, !"GRAVEYARD", !"mrnF_loop", 4.1, 0, 1, 1, 0, 0);
				case 84: ApplyAnimation(playerid, !"MISC", !"scratchballs_01", 4.0, 0, 0, 0, 0, 0);
				case 85: ApplyAnimation(playerid, !"INT_HOUSE", !"LOU_In", 4.1, 0, 0, 0, 1, 1, 1);
				case 86: ApplyAnimation(playerid, !"SUNBATHE", !"Lay_Bac_in", 3.0, 0, 1, 1, 1, 0);
				case 87: ApplyAnimation(playerid, !"BEACH", !"SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0);
				case 88: ApplyAnimation(playerid, !"PED", !"DLE_armed", 4.1, 0, 1, 1, 1, 1, 1);
				case 89: ApplyAnimation(playerid, !"PED", !"Gun_stand", 4.1, 0, 1, 1, 1, 1, 1);
				case 90: ApplyAnimation(playerid, !"KISSING", !"gfwave2", 4.1, 0, 1, 1, 0, 0);
				case 91: ApplyAnimation(playerid, !"PED", !"BIKE_fall_off", 4.1, 0, 1, 1, 1, 1, 1);
				case 92: ApplyAnimation(playerid, !"PED", !"BIKE_pickupL", 4.1, 0, 0, 0, 0, 0, 1);
				case 93: ApplyAnimation(playerid, !"GANGS", !"hndshkaa", 4.0, 0, 0, 0, 0, 0, 1);
				case 94: ApplyAnimation(playerid, !"GANGS", !"hndshkfa", 4.0, 0, 0, 0, 0, 0, 1);
				case 95: ApplyAnimation(playerid, !"GANGS", !"hndshkfa_swt", 4.0, 0, 0, 0, 0, 0, 1);
				case 96: ApplyAnimation(playerid, !"GANGS", !"shake_carK", 4.0, 0, 0, 0, 0, 0);
				case 97: ApplyAnimation(playerid, !"GANGS", !"shake_cara", 4.0, 0, 0, 0, 0, 0);
				case 98: ApplyAnimation(playerid, !"PED", !"KO_shot_stom", 4.0, 0, 1, 1, 1, 0);
				case 99: ApplyAnimation(playerid, !"PED", !"EV_DIVE", 4.0, 0, 1, 1, 1, 0);
				case 100: ApplyAnimation(playerid, !"PED", !"BIKE_fallR", 4.0, 0, 1, 1, 1, 0);
				case 101: ApplyAnimation(playerid, !"GYMNASIUM", !"GYMshadowbox", 4.0, 1, 1, 1, 1, 0);
				case 102: ApplyAnimation(playerid, !"PED", !"gang_gunstand", 3.0, 0, 1, 1, 1, 0);
			}
			animan{playerid} = true;
			TextDrawShowForPlayer(playerid, StopAnimation);
		}
		case 134:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1,1285.9365,-1270.2250,13.5939))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже на 1 этаже!");
				        J_SetPlayerPos(playerid,1285.9365,-1270.2250,13.5939);
				    }
				    case 1:
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1,1287.2783,-1261.7417,20.6199))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы и так уже на 2 этаже!");
				        J_SetPlayerPos(playerid,1287.2783,-1261.7417,20.6199);
				    }
				    case 2: J_SetPlayerPos(playerid,1289.0641,-1271.5160,13.5400);
				}
			}
		}
		case 56:
		{
			if(response)
			{
			    new tarif;
			    static name[30];
				sscanf(inputtextsave, "p<,>is[30]", tarif, name);
				new carid = GetPlayerVehicleID(playerid);
				if(tarif > 0 && tarif <= 70)
				{
				    if(strlen(name) <= 30)
				    {
						TaxiTarif[playerid] = tarif;
						PlayerTextDrawShow(playerid,TaxiDraw[playerid]);
						TextDrawShowForPlayer(playerid, BoxTaxi1);
			            TextDrawShowForPlayer(playerid, BoxTaxi2);
			            TextDrawShowForPlayer(playerid, Taximonitor);
			            TextDrawShowForPlayer(playerid, TaxiServ);
			            TextDrawShowForPlayer(playerid, TaxiDol);
						f(str,sizeof(str),"\n{B83434}%s\n{FFFFFF}Тариф: %i", name, tarif);
						UpdateDynamic3DTextLabelText(TaxiText[carid], -1, str);
					}
					else SPD(playerid,56,1,"Тариф","{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{9ACD32}- Тариф не менее $1 и не более $70\nСлоган не более 30-и символов","Ок","Отмена");
				}
				else SPD(playerid,56,1,"Тариф","{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{9ACD32}- Тариф не менее $1 и не более $70\nСлоган не более 30-и символов","Ок","Отмена");
			}
			return 1;
		}
	  	case 58:
		{
	 		if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
		        		SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
		        		UpdatePlayerDataInt(playerid, "Style", FIGHT_STYLE_GRABKICK);
		        		return SCM(playerid, COLOR_VALIK, !"* Вы изменили стиль боя на {AA3333}'Обычный'");
		    		}
					case 1:
					{
						if(!PI[playerid][pBoxing]) return SCM(playerid, COLOR_GREY, !"* Вы не знаете этот стиль");
		        		SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		        		UpdatePlayerDataInt(playerid, "Style", FIGHT_STYLE_BOXING);
		        		return SCM(playerid, COLOR_VALIK, !"* Вы изменили стиль боя на {AA3333}'Boxing'");
		 			}
		    		case 2:
					{
						if(!PI[playerid][pKungfu]) return SCM(playerid, COLOR_GREY, !"* Вы не знаете этот стиль");
		        		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
		        		UpdatePlayerDataInt(playerid, "Style", FIGHT_STYLE_KUNGFU);
		        		return SCM(playerid, COLOR_VALIK, !"* Вы изменили стиль боя на {AA3333}'Kungfu'");
		    		}
		    		case 3:
					{
						if(!PI[playerid][pKneehead]) return SCM(playerid, COLOR_GREY, !"* Вы не знаете этот стиль");
		        		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
		        		UpdatePlayerDataInt(playerid, "Style", FIGHT_STYLE_KNEEHEAD);
		        		return SCM(playerid, COLOR_VALIK, !"* Вы изменили стиль боя на {AA3333}'Kneehead'");
		    		}
		    		case 4:
					{
						if(!PI[playerid][pElbow]) return SCM(playerid, COLOR_GREY, !"* Вы не знаете этот стиль");
		        		SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
		        		UpdatePlayerDataInt(playerid, "Style", FIGHT_STYLE_ELBOW);
		        		return SCM(playerid, COLOR_VALIK, !"* Вы изменили стиль боя на {AA3333}'Elbow'");
		    		}
		    		case 5:
		    		{
						return SPD(playerid,0,0,"Помощь","\
						\t{73B461}Для изучения стиля боя, вы должны отправиться в спортзал, найти его можно в /gps [Важные места]\n\
						\t{73B461}Дальше вам нужно переодеться и начать тренировку. Бейте грушу чтобы улучшить навык владения стилем борьбы.\n\n\n\
						\t{1874cd}- Бокс{FFFFFF}- 5000 очк.\n\
						\t{1874cd}- Кунг-фу{FFFFFF}- 10000 очк.\n\
						\t{1874cd}- Kneehead{FFFFFF}- 20000 очк.\n\
						\t{1874cd}- Кикбоксинг{FFFFFF}- 30000 очк.", !"Принять", !"");
		    		}
		    		default: return 0;
	    		}
	    	}
	    }
		case 64:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Часто задаваемые вопросы", !"{FFFFFF}01. Где мне получить паспорт? - Паспорт можно получить в мэрии.\n02. Как мне заработать немного денег? - Вы можете поработать на заводе/ферме/грузчиках.\n03. Где мне найти то или иное место? - /gps.\n04. Как сменить пароль? - /passwd\n05. Как изменить настройки аккаунта? - /mm > Настройки.\n06. На этом сервере выдают деньги, лвл? - Нет, каждый игрок должен начинать с 0.\n07. Какой сайт у сервера? - "SITE"\n08. Как посмотреть список команд сервера? - /help\n09. Как быстро прокачать скилл оружия? - Самый быстрый способ - Тир.\n10. Где найти мэрию? - /gps -> Важные места\n11. Почему нет машин на авторынке? - На сервере единый оборот автомобилей , они там появляются если кто-то не оплатит налог!\n12. Как быстро написать в репорт? - /report\n13. Где получить медкарту? - Ее можно получить , пройдя мед. осмотр у врачей! \n14. Продаются ли на сервере админки? - Нет не продаются! \n{FFE741}15. Как передать игроку что-либо? Как обменяться с игроком? Как продать игроку? -> /trade [id] \n", !"Принять", !"");
			        case 1:
			        {
			            if(CheckPhones(playerid)) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Телефон)", !"{FFFFFF}/phone - Управление телефоном\n/sms - Открыть меню СМС", !"Принять", !"");
						else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Телефон)", !"{AFAFAF}У вас нет телефона", !"Принять", !"");
			        }
			        case 2:
			        {
			            switch(PI[playerid][pJob])
			            {
				            case JOB_GUNDEALER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n/quitjob - Уволиться с работы", !"Принять", !"");
				            case JOB_DETECTIVE: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
        			  		case JOB_CARJACKER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/orderlist{FFFFFF} - Найти бизнес для перепродажи продуктов\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
				            case JOB_MECHANIC: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/gomechanik{FFFFFF} - Принять вызов\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_GUIDE: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_TAXI: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/gotaxi{FFFFFF} - Принять вызов\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/rt{FFFFFF} - Рация для таксистов\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
				            case JOB_ADVOKAT: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/zeks{FFFFFF} - База заключенных\n{73B461}/free{FFFFFF} - Сократить срок заключенному\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_MINER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_PORTER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_COLLECTOR: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_DRUGDEALER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/selldrugs{FFFFFF} - Продать наркотики\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_TRUCKER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/rt{FFFFFF} - Рация для дальнобойщик\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_PIZZA: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/stopjob{FFFFFF} - Закончить работу ( по желанию )\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_SCRAPER: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
							case JOB_NALOG: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/stopjob{FFFFFF} - Закончить работу ( по желанию )\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case JOB_MUSOR: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 17: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 18: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 19: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 20: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
       						case 21: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Работа)", !"{FFFFFF}{73B461}/jlock{FFFFFF} - Закрыть служебный тс.\n{73B461}/jobhelp{FFFFFF} - Помощь по работе\n{73B461}/quitjob{FFFFFF} - Уволиться с работы", !"Принять", !"");
				            default: SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы нигде не работаете!");
			            }
			        }
            		case 3:
			        {
			            if(GetTeamID(playerid) > 0)
			            {
			                str = "{FFFFFF}";
							if(IsACop(playerid))
							{
							    strcat(str,"{73B461}/su{FFFFFF} - Объявить игрока в розыск\n");
							    strcat(str,"{73B461}/find{FFFFFF} - Найти игрока\n");
							    strcat(str,"{73B461}/clear{FFFFFF} - Очистить розыск игрока\n");
							    strcat(str,"{73B461}/take{FFFFFF} - Отобрать что либо\n");
							    strcat(str,"{73B461}/frisk{FFFFFF} - Обыскать игрока\n");
							    strcat(str,"{73B461}/cuff{FFFFFF} - Надеть/Снять наручиники\n");
							    strcat(str,"{73B461}/putobject{FFFFFF} - Поставить ограждение/предмет\n");
							    strcat(str,"{73B461}/incar{FFFFFF} - Затащить игрока в транспорт\n");
							    strcat(str,"{73B461}/wanted{FFFFFF} - Список разыскиваемых\n");
							    strcat(str,"{73B461}/ticket{FFFFFF} - Выписать штраф\n");
							    strcat(str,"{73B461}/arrest{FFFFFF} - Арестовать преступников\n");
							    strcat(str,"{73B461}/unmask{FFFFFF} - Стянуть маску с игрока\n");
							    strcat(str,"{73B461}/m{FFFFFF} - Мегафон (В транспорте)\n");
							    strcat(str,"{73B461}/strafs{FFFFFF} - Поставить машину на штрафстоянку\n");
							    strcat(str,"{73B461}/tow{FFFFFF} - Прицепить машину (в эвакуаторе)\n");
							    strcat(str,"{73B461}/demoute{FFFFFF} (9-11) [FBI] - Уволить гос.служащего\n");
							    strcat(str,"{73B461}/d{FFFFFF} - Гос. чат\n");
							    strcat(str,"{73B461}/bot{FFFFFF} - Отобрать скрепки\n");
							    strcat(str,"{73B461}/gotome{FFFFFF} - Вести игрока за собой\n");
							}
							if(GetTeamID(playerid) == TEAM_FBI) strcat(str,"{73B461}/scutes{FFFFFF} - Прикрепить жучек на мобильный\n");
							else if(GetTeamID(playerid) == TEAM_MEDICLS || GetTeamID(playerid) ==  TEAM_MEDICLV)
							{
							    strcat(str,"{73B461}/medcard{FFFFFF} - Выдать мед. карту\n");
							    strcat(str,"{73B461}/heal{FFFFFF} - Вылечить пациента\n");
							    strcat(str,"{73B461}/recept{FFFFFF} - выдать рецепт на лекарство\n");
							}
							else if(GetTeamID(playerid) == TEAM_MERIALS)
							{
								strcat(str,"{73B461}/demoute{FFFFFF} (9-10) - Уволить гос.служащего\n");
								strcat(str,"{73B461}/ekonom{FFFFFF} - Управление экономикой\n");
							}
							else if(GetTeamID(playerid) == TEAM_MEDICSF)
							{
							    strcat(str,"{73B461}/medcard{FFFFFF} - Выдать мед. карту\n");
							    strcat(str,"{73B461}/heal{FFFFFF} - Вылечить пациента\n");
							}
							else if(GetTeamID(playerid) == TEAM_BANK)
							{
								strcat(str,"{73B461}/bankmenu{FFFFFF} - Банковкое меню\n");
								strcat(str,"{73B461}/credit{FFFFFF} - Изменить кредитную ставку\n");
							}
							else if(GetTeamID(playerid) == TEAM_LICENSERS) strcat(str,"{73B461}/givelicense{FFFFFF} - Выдать лицензию\n");
							else if(IsANews(playerid))
							{
								strcat(str,"{73B461}/live{FFFFFF} - Взять интервью у игрока\n");
								strcat(str,"{73B461}/endlive{FFFFFF} - Окончить интервью с игроком\n");
								strcat(str,"{73B461}/news{FFFFFF} - Говорить в чат News\n");
							}
							else if(Isameria(playerid)) if(PI[playerid][pRank] >= 4) strcat(str,"{73B461}/wedding{FFFFFF} - Провести помолвку\n");
							if(IsAtFrakcia(playerid))
							{
							    if(PI[playerid][pLeader]>0)
							    {
		         					strcat(str,"{73B461}/blacklist{FFFFFF} - Добавить игрока в ЧС\n");
			        				strcat(str,"{73B461}/unblacklist{FFFFFF} - Удалить игрока из ЧС\n");
							    }
			        			if(PI[playerid][pRank] > 8) strcat(str,"{73B461}/gov{FFFFFF} - Подать государственную новость\n");
							}
							else if(IsAtFrakcia(playerid)) strcat(str,"{73B461}/blackplayers{FFFFFF} - Черный список закона\n");
							else if(IsAtMafia(playerid))
							{
							    strcat(str,"{73B461}/f{FFFFFF} - Чат семьи\n");
							    strcat(str,"{73B461}/mbiz{FFFFFF} - Бизнесы\n");
							    strcat(str,"{73B461}/minvite{FFFFFF} - Пригласить работать попрошайкой\n");
							    strcat(str,"{73B461}/bizwar{FFFFFF} - Начать войну за Биз.\n");
							    strcat(str,"{73B461}/givebiz{FFFFFF} - Добровольно отдать бизнес.\n");
							    strcat(str,"{73B461}/createbomb{FFFFFF} - Сделать бомбу\n");
							    strcat(str,"{73B461}/bomb{FFFFFF} - Заложить бомбу.\n");
							    strcat(str,"{73B461}/stuff{FFFFFF} - Набить татурировку.\n");
							}
							else if(IsAtGang(playerid))
							{
							    strcat(str,"{73B461}/f{FFFFFF} - Чат семьи\n");
						     	strcat(str,"{73B461}/drug{FFFFFF} - Посадить наркотик\n");
						 		strcat(str,"{73B461}/capture{FFFFFF} - Захватить зону\n");
						 		strcat(str,"{73B461}/sellgun{FFFFFF} - Сделать и продать оружие\n");
						 		strcat(str,"{73B461}/creategun{FFFFFF} - Сделать себе оружие\n");
						 		strcat(str,"{73B461}/sellgangzone{FFFFFF} - Продать территорию\n");
						 		if(PI[playerid][pRank]>=9)
						 		{
						 		    strcat(str,"{73B461}/getmoney{FFFFFF} - Забрать деньги с наркопритона\n");
						 		    strcat(str,"{73B461}/putmoney{FFFFFF} - Положить деньги на баланс наркопритона\n");
						 		    strcat(str,"{73B461}/setdsell{FFFFFF} - Установить стоимость продажи наркотиков\n");
						 		    strcat(str,"{73B461}/setdbuy{FFFFFF} - Установить стоимость продажи наркотиков\n");
						 		}
							}
							if(!IsAtGang(playerid) && !IsAtMafia(playerid)) strcat(str,"{73B461}/r{FFFFFF} - Чат организации\n");
							strcat(str,"{73B461}/opengate{FFFFFF} - Открыть ворота организации\n");
							strcat(str,"{73B461}/invite{FFFFFF} - Принять игрока в организацию\n");
							strcat(str,"{73B461}/uninvite{FFFFFF} - Выгнать игрока из организации\n");
							strcat(str,"{73B461}/giverank{FFFFFF} - Выдать игроку ранг\n");
							strcat(str,"{73B461}/fwarn{FFFFFF} - Дать игроку выговор\n");
							strcat(str,"{73B461}/unfwarn{FFFFFF} - Снять игроку выговор\n");
							strcat(str,"{73B461}/fmute{FFFFFF} - Заглушить игрока\n");
							strcat(str,"{73B461}/funmute{FFFFFF} - Снять мут игроку\n");
			                SPD(playerid,184,0,"Команды (Организация)",str, !"Принять", !"");
			            }
			            else SPD(playerid,184,0,"Команды (Организация)","{AFAFAF}Вы не состоите ни в одной из организаций", !"Принять", !"");
			        }
			        case 4:
			        {
			            if(GetPlayerHouse(playerid) != -1) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Дом)", !"{73B461}/house{FFFFFF} - Управление домом\n{73B461}/exit{FFFFFF} - Выйти из дома", !"Закрыть", !"");
			            else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Дом)", !"{AFAFAF}У вас нет дома и вы не арендуете дом", !"Принять", !"");
					}
					case 5: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Бизнес)", !"{FFFFFF}{73B461}/bizinfo{FFFFFF} - Управление бизнесом\n{73B461}/showbizinfo{FFFFFF} - Показать прибыль бизнеса\n\n{73B461}/expel{FFFFFF} - Выгнать с помещения (доступно только владельцам баров)\n\n{FFFFFF}Изначально вы можете владеть 2-мя бизнесами, если\nвы хотите стать владельцем и крупным предпринимателем, можете\nприобрести улучшение, которое даст возможность стать владельцем 5-ю бизнесами.\n\n/mm - Действия персонажа - Улучшения - Бизнесмен\n", !"Принять", !"");
					case 6:
			        {
			            GetNumberCars(playerid,PI[playerid][pCars]);
			            if(PI[playerid][pCars] > 0)
			            {
			            	if(PI[playerid][pVIP] < STATUS_VIP) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{FFFFFF}{73B461}/cars{FFFFFF} - Управление вашим транспортом\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/carpass{FFFFFF} - Показать паспорт на авто\n{73B461}/key{FFFFFF} - Вставить/Вытащить ключи\n{73B461}/balon{FFFFFF} - Покрасить машину\n{73B461}/sellcar{FFFFFF} - Продать транспорт на рынок\n{73B461}/sellcarto{FFFFFF} - Продать транспорт игроку\n{73B461}/park{FFFFFF} - Припарковать транспорт\n{73B461}/lock{FFFFFF} - Закрыть/Открыть транспорт\n{73B461}/findcar{FFFFFF} - Искать транспорт\n{73B461}/alarm{FFFFFF} - Включить/Выключить сигнализацию\n{73B461}/tradecar{FFFFFF} - Обменятся транспортом\n{73B461}/givekey{FFFFFF} - Дать ключи от транспорта\n", !"Принять", !"");
							if(PI[playerid][pVIP] >= STATUS_VIP) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{FFFFFF}{73B461}/cars{FFFFFF} - Управление вашим транспортом\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/carpass{FFFFFF} - Показать паспорт на авто\n{73B461}/key{FFFFFF} - Вставить/Вытащить ключи\n{73B461}/balon{FFFFFF} - Покрасить машину\n{73B461}/sellcar{FFFFFF} - Продать транспорт на рынок\n{73B461}/sellcarto{FFFFFF} - Продать транспорт игроку\n{73B461}/park{FFFFFF} - Припарковать транспорт\n{73B461}/lock{FFFFFF} - Закрыть/Открыть транспорт\n{73B461}/findcar{FFFFFF} - Искать транспорт\n{73B461}/alarm{FFFFFF} - Включить/Выключить сигнализацию\n{73B461}/tradecar{FFFFFF} - Обменятся транспортом\n{73B461}/givekey{FFFFFF} - Дать ключи от транспорта\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n", !"Принять", !"");
							if(PI[playerid][pVIP] >= 3) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{FFFFFF}{73B461}/cars{FFFFFF} - Управление вашим транспортом\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/carpass{FFFFFF} - Показать паспорт на авто\n{73B461}/key{FFFFFF} - Вставить/Вытащить ключи\n{73B461}/balon{FFFFFF} - Покрасить машину\n{73B461}/sellcar{FFFFFF} - Продать транспорт на рынок\n{73B461}/sellcarto{FFFFFF} - Продать транспорт игроку\n{73B461}/park{FFFFFF} - Припарковать транспорт\n{73B461}/lock{FFFFFF} - Закрыть/Открыть транспорт\n{73B461}/findcar{FFFFFF} - Искать транспорт\n{73B461}/alarm{FFFFFF} - Включить/Выключить сигнализацию\n{73B461}/tradecar{FFFFFF} - Обменятся транспортом\n{73B461}/givekey{FFFFFF} - Дать ключи от транспорта\n{73B461}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n{73B461}/fixmycar{FFFFFF} - Зареспавнить транспорт\n", !"Принять", !"");
			            }
			            else SPD(playerid,0, DIALOG_STYLE_MSGBOX, !"Команды (Личный транспорт)", !"{AFAFAF}У вас нет ни одного личного транспорта", !"Принять", !"");
			        }
			        case 7: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Транспорт)", !"{FFFFFF}{73B461}/engine{FFFFFF} - Завести/Заглушить двигатель\n{73B461}/repcar{FFFFFF} - Починить транспорт набором для починки\n{73B461}/fill{FFFFFF} - Заправить транспорт\n{73B461}/fillcar{FFFFFF} - Заправить транспорт с канистры\n{73B461}/limit{FFFFFF} - Ограничитель скорости\n{73B461}/style{FFFFFF} - Изменить тип езды ( COMFORT/SPORT )\n{73B461}/lights{FFFFFF} - Включить/Выключить фары", !"Принять", !"");
					case 8: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Анимации)", !"{FFFFFF}/anims - Список анимаций", !"Принять", !"");
					case 9: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Чаты)", !"/c - Сказать шепотом\n/ad - Подать объявление\n/s - Кричать\n/b - ООС чат\n/r - Командный чат\n/m - Говорить в мегафон\n/d - Говорить в департамент\n/rb - OOC чат в рации\n/f - Чат мафии/банды\n/fb - OOC чат в чате банды/мафии\n/rt - Рабочая рация (ТАКСИ/Дальнобои)\n/pt - Рабочая рация (ПИЛОТЫ)\n/gov - Объявление на весь сервер!", !"Принять", !"");
			        case 10: callcmd::ahelp(playerid,PI[playerid][pAdmin]);
					case 11: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Похищение)", !"{FFFFFF}{73B461}/tie{FFFFFF} - Связать игрока\n{73B461}/untie{FFFFFF} - Развязать игрока\n{73B461}/bag{FFFFFF} - Надеть мешок на голову\n{73B461}/unbag{FFFFFF} - Снять мешок с головы\n{73B461}/gag{FFFFFF} - Засунуть кляп в рот\n{73B461}/ungag{FFFFFF} - Высунуть кляп изо рта\n{73B461}/lead{FFFFFF} - Принудительно тащить за собой игрока (должен быть связан)\n{73B461}/unlead{FFFFFF} - Перестатить тащить\n{73B461}/incar{FFFFFF} - Засунуть игрока в машину (должен быть связан)\n", !"Принять", !"");
					case 12:
					{
						SetPVarInt(playerid, !"DialogPage", 1);
						SPD(playerid, 18498, DIALOG_STYLE_MSGBOX,  !"[1 страница] Команды (Другое)", !"{FFFFFF}{73B461}/trade{FFFFFF} - Передать/обменять/продать что-либо игроку.\n{73B461}/todo{FFFFFF} - Разговор совмещен с действием\n{73B461}/me{FFFFFF} - Действие игрока\n{73B461}/do{FFFFFF} - Разговор от 3-го лица\n{73B461}/satiety{FFFFFF} - Состояние голода\n{73B461}/killme{FFFFFF} - Самоубийство\n{73B461}/leaders{FFFFFF} - Список лидеров онлайн\n{73B461}/pay{FFFFFF} - Передать деньги игроку\n{73B461}/hi{FFFFFF} - Поздороваться с игроком\n{73B461}/smoke{FFFFFF} - Курить\n{73B461}/drink{FFFFFF} - Пить что-либо\n{73B461}/mask{FFFFFF} - Надеть/Снять маску\n{73B461}/usebad{FFFFFF} - Использовать таблетку от наркозав.\n{73B461}/eat{FFFFFF} - Кушать.\n{73B461}/beer{FFFFFF} - Пить пиво.\n{73B461}/sprunk{FFFFFF} - Пить спранк.\n{73B461}/number{FFFFFF} - Телефонная книга.\n{73B461}/break{FFFFFF} - Вскрыть наручники.\n{73B461}/radio{FFFFFF} - Включить радио.\n{73B461}/armour{FFFFFF} - Надеть/снять бронежилет.\n{73B461}/usemed{FFFFFF} - Использовать аптечку.\n{73B461}/setspawn{FFFFFF} - Сменить место спавна.\n{73B461}/dropgun{FFFFFF} - Положить оружие на землю\n{73B461}/sellcard{FFFFFF} - Продать SIM-карту\n{73B461}/flowers{FFFFFF} - Подарить цветы\n{73B461}/kiss{FFFFFF} - Поцеловать человека\n{73B461}/advokats{FFFFFF} - Адвокаты онлайн\n{73B461}/quest{FFFFFF} - Ваши квесты\n{73B461}/showtatu{FFFFFF} - Снять верхнюю одежду(татуировки показать)\n{73B461}/firewood{FFFFFF} - Разжечь костер\n{73B461}/cl{FFFFFF} - Проверить игрока на лаунчер (голосовой чат)\n", !" >>>>>> ", !"Выход");
					}
					case 13: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"FAQ (Скиллы оружий)", !"{FFFFFF}\n\n{FFFFFF}У каждого оружия есть свой скилл для его прокачки.\nЧтобы лучше стрелять вам нужно повышать его.\nСкилл можно прокачать сходив в тир, который вы можете найти в любом магазине оружия!\nИ уже там вы узнаете все подробности его прокачки\n\nПосмотреть навык стрельбы можно с помощью команды: /skill\n\n", !"Закрыть", !"");
					case 14: callcmd::jobhelp(playerid);
					case 15: ShowRules(playerid);
					case 16: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"FAQ (Преимущества VIP)", !"\n{D5FF52}Преимущества Diamond статуса{FFFFFF}\n1)Каждый PayDay +2EXP\n2)Возможность иметь 2 авто, 3 если есть дом или отель.\n3)На много больше процент депозита в банке.\n4)Лечение в больнице проходит в 2 раза быстрее.\n5)При подборе подарка у вас будет шанс получить больше 3 подарков.\n6)Испытывать чувство голода вы будете в 2 раза реже.\n7)Прокачка скиллов в тире в 2 раза быстрей.\n8)Возможность респавнить личный транспорт /fixmycar.\n9)3 очка репутации семьи каждый payday\n10)Прокачка навыков фермера/дальнобойщика/развозчика продуктов/таксиста в 2 раза быстрей\n11)Вы теряете уровень розыска в 2-а раза быстрее!\n12)Срок действия {FFE741}30{FFFFFF} дней!\n\n{FFB252}Преимущества Titan статуса{FFFFFF}\n1)Каждый payday вы будете получать 2 az coins (donat очки){FFFFFF}\n2)Возможности всех VIP.\n3)VIP Чат (Для всех богачей сервера) (/vr)\n4)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5)Больше процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)3 очка репутации семьи каждый payday\n8)Возможность иметь 4 авто, 5 если есть дом или отель.\n9)Вы не теряете наркотики при попадании в больницу\n10)Доступ к команде /out (Уволиться с организации по с.ж.) \n\n{FF5252}Преимущества PREMIUM статуса{FFFFFF}\n1)Каждый payday вы будете получать 4 az coins (donat очки){FFFFFF}\n2)Возможности всех VIP.\n3)PREMIUM Чат (Для всех владельцев этого VIP) (/vr)\n4)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5)Самый высокий процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)4 очка репутации семьи каждый payday\n8)Шанс крафта в 2 раза выше \n9)Вы практически никогда не нуждаетесь в еде \n10)Вы бесплатно арендуете любой транспорт\n11)Законопослушность всегда 100\n12)Стоимость рекламы на билбордах и в GPS в 2 раза ниже\n13)Возможность выбора точки спавна в любом месте карты\n{FF5252}14)Бесплатный МАВЕРИК комплектации ПРЕМИУМ со специальным\nтюнингом и красивыми наклейками.{FFFFFF}\n15)Нахождение в списке топ игроков онлайн, а так-же в рейтинге\nТОП игроков на площади у БАНКА", !"Принять", !"");
					case 17: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"CMD (Отель)", !"{73B461}/hotel{FFFFFF} - управление номером.\n", !"Принять", !"");
					case 18: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Информация", !"\n\n{73B461}- Однорукий бандит\n\n{FFFFFF}Для игры в эту игру вам необходимо найти казино, найти его можно\n{FFFFFF}с помощью /gps - казино. После подойти к свободному автомату и нажать клавишу {73B461}'ALT'{FFFFFF}\n{FFFFFF}Там вы сможете посмотреть шанс победы и начать игру , вставив в автомат фишки , которые\n{FFFFFF}вы можете купить в обменнике в самом казино.\n\n", !"Принять", !"");
					case 19: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Информация", !"{FFFFFF}Наш сайт: {73B461}"SITE"{FFFFFF}\nНаш Форум: {73B461}"FORUM"{FFFFFF}\nГруппа Вконтакте: {73B461}"VK"{FFFFFF}\nГруппа для общения игроков: {73B461}"VK"", !"Принять", !"");
					case 20: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Авиашкола \n{FFFFFF}Можно ли садиться на зданиях? -{73B461}В особых местах{FFFFFF}\n{FFFFFF}Разрешено ли буксировать другие транспортные средства? -{73B461}Нет{FFFFFF}\n{FFFFFF}Какая дистанция должна быть между двумя летящими вертолётам/самолетами? -{73B461}Необходимая для безопасного пролета{FFFFFF}\n{FFFFFF}Полет между зданиями -{73B461}Запрещен{FFFFFF}\n{FFFFFF}Летать разрешено -{73B461}За исключением военных объектов{FFFFFF}\n{FFFFFF}Покидать кабину летательного аппарата разрешено -{73B461}После остановки двигателя{FFFFFF}\n{FFFFFF}Перед взлетом необходимо проверить -{73B461}Уровень реактивного топлива{FFFFFF}\n\n{73B461}- Автошкола\n{FFFFFF}Максимальная скорость в городе: -{73B461} 60 Км/ч{FFFFFF}\n{FFFFFF}Максимальная скорость вне города: -{73B461} 120 Км/ч{FFFFFF}\n{FFFFFF}Разрешена ли парковка на тротуаре? -{73B461} Только в экстренных ситуациях{FFFFFF}\n{FFFFFF}Что нужно делать при тумане? -{73B461} Снизить скорость и включить фары{FFFFFF}\n", !"Закрыть", !"");
					case 21: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Воровство материалов{FFFFFF} \n{8B8181}Для начала вам надо запастись терпением и силой воли, ведь вам придётся воровать\n{8B8181}ингредиенты прямо из территории армии LS или LV. Будьте осторожны когда это будете делать!\n{8B8181}В Армии LS склад с ингредиентами расположен на корабле, а в армии LV в специально отведенных зданиях.\n{8B8181}Для того чтобы из ингредиентов изготовить патроны, а затем оружие , вам\nнеобходимо отправиться на завод /gps - работы для новичков - завод\n{8B8181}И найти там чекпойнт в котором можно обменять ингредиенты.\n{8B8181}Затем у вас появятся патроны и из них можно сделать оружие командой /sellgun.\n\n{73B461}Приятной игры", !"Закрыть", !"");
					case 22: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Ферма и ее влияние на штат{FFFFFF} \nЭто предприятие предназначено в основном для игроков 1-го уровня, которые хотят выбится в люди, с помощью карьеры на ферме.\nEasterBoard Farm производит продукты, которые закупают развозчики продуктов и поставляют на склады. После чего владельцы бизнесов\nтам закупают продукты для своих закусочных и баров. На ферме можно прокачать навык и уже не просто носить мешки с сеном, а заниматься\nчем-то лучше. Например получив 500 очк. новыка вы можете работать трактористом, зарабатывая больше и получая удовольствие от работы.\nКогда вы накопите 3200 очк. навыка, вы получите возможность работать комбайнером, при этом еще больше зарабатывая на своём труде.\nПри достижении следующей работы, вы сможете бесплатно получить лицензию на авиа транспорт, не проходя экзамен в авиашколе, который\nочень дорогой и сложный. Как вы получите лицензию для работы, у вас будет возможность работать водителем кукурузника.\n\nИспользуйте /ffarm для того чтобы узнать свой навык.\nИспользуйте /GPS - работы для новичков - Ферма.", !"Закрыть", !"");
					case 23: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Банковская карта{FFFFFF} \nПолучить банковскую карту вы можете в Центральном банке LS , найти его можно с помощью /gps - важные, места у сотрудника банка выше 5-го ранга.\nЕсли же в банке нет человека который мог бы вам ее выдать, вы можете отправиться в банковское отделение Las Venturas , в котором сами ее получите.\nДля получения банковской карты необходимо с собой иметь 1 000$. После того как вы добрались к месту назначения, внимательно перечитайте условия банка.\nОбратите внимание, если вы не правильно введете пароль, при регистрации банковской карты, его можно будет восстановить у сотрудника банка, за кругленькую сумму.\nТакже вы можете в любой момент сменить свой пароль в /mm - Настройки - сменить пароль [ Банковская карта ].\nВы не сможете пользоватся банком/банкоматом не имея банковской карты или пароля к ней! Вводить пароль вам придётся только 1 раз, при\nпервой попытке воспользоватся денежными средствами в вашем банке, в дальнейшем вам не придётся его вводить до перезахода в игру.\n", !"Закрыть", !"");
					case 24: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Рыболовля и заработок на ней{FFFFFF} \nДля того чтобы иметь возможность ловить рыбу, вам необходима удочка и черви, в качестве наживки.\nКупить это все можно в любом магазине 24/7, его можно найти с помощью /gps - найти ближайший 24/7.\nМаксимум вы можете с собой переносить 5 разных рыб, до 20 кг. в общем весе.\nКаждая рыба имеет свою стоимость, и ее можно продать в любой магазин в котором вы покупали удочку или наживку.\nРыба достаточно дорогая, а значит вы можете на этом зарабатывать. Удачной рыболовли.\n", !"Закрыть", !"");
					case 25: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Ограбление матовозов{FFFFFF} \nГрузовики в армии ( матовозы ), практически не убиваемые, в одиночку вам его точно не ограбить.\nчтобы ограбить матовоз и забрать весь его груз, достаточно сделать так-чтобы он взорвался, при этом в нем сидел водитель.\nПри взрыве с грузовика вылетят ящики, в которых по 500 готовых патронов, из которых уже можно сделать оружие.\nСовершить ограбление может абсолютно каждый, для этого достаточно собрать нужное количество людей и взятся за работу.\n", !"Закрыть", !"");
					case 26: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Багажник{FFFFFF} \n\nБагажник необходим для хранения и перевозки различных предметов.\nОткрыть багажник вашей личной машины не может никто кроме вас, а организационной\nмогут только те, кто состоит в вашей организации. Если вы оставите багажник открытым,\nто вас могут обчистить, забрав все добро с него. Багажник транспорта который не принадлежит\nорганизации или вам, может открыть любой игрок!\n\n{73B461}Открыть багажник можно с помощью L.ALT.\n", !"Закрыть", !"");
					case 27: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Наркопритоны{FFFFFF} \n\nЭто одно из средств заработка денег, а также закупки наркотиков для любых целей.\nВ наркопритоне ограничены как средства, так и товар, поэтому банды имеют возможность их контролировать,\nа именно банда которая держит территорию наркопритона, может управлять его ресурсами и\nсажать семена в огороде. Семена могут созревать от 1-го до 2-ух часов, поэтому\nочень важным этапом в выращивании товара есть охрана территории наркопритона, дабы вражесские банды\nне украли наркотики или не испортили саженец. Семена можно найти вне города, которые\nрастут у больших деревьев. Посадить наркотик можно в огороде наркопритона, командой /drug.\n", !"Закрыть", !"");
					case 28: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"Команды (Семья)", !"{FFFFFF}/fammenu - Панель семьи", !"Принять", !"");
					case 29: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Ограбление банка{FFFFFF} \n\nДля того чтобы ограбить банк, вы должны состоять в организации банды или мафии и\nиметь ключи от дверей в банк, которые можно купить на черном рынке (/gps - важные места).\nЕсли так и есть, тогда соберите больше 5-ти человек, все они должны находиться в банке, у\nдвери в хранилище! Сделайте 1-у бомбу (/createbomb) и заложите её под дверь хранилища (/bomb).\nКак только вы заложите бомбу, в банк приедут полицейские, а как бомба взорвется, у вас будет 30 секунд\nна то чтобы забежать в хранилище и украсть там деньги! Если у вас получится украсть мешки с деньгами,\nтогда нужно бежать и постараться не быть пойманным в течение 10-ти минут. Если вас поймают, вы сядете в\nтюрьму на 2-а часа и потеряете деньги с банка. Если вы выйдете из игры, с вами случится такая же ситуация!\nКогда пройдет 10 минут и вы останетесь живым, тогда вам будут начислены деньги и полиция не сможет вас арестовать!\n", !"Закрыть", !"");
					case 30: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Автозавод{FFFFFF} \n\nДля того чтобы начать работу на автозаводе, необходимо устроиться механиком в центре занятости.\nРабота доступна с 3-го уровня и после трудоустройства вы должны отправиться на сам автозавод,\nкоторый находится в LV, найти его можно с помощью GPS - Работы для новичков - Автозавод.\nУ входа, вы найдете раздевалку, там необходимо переодеться в рабочую форму и приступить к работе.\nСуть самой работы заключается в сборе автомобилей, нужно по-этапно брать детали и устанавливать на\nмашину. По окончанию сборки, автомобиль будет отправлен в автосалон. ( будет добавлена рандомная машина )\nЗа каждое проделанное действие, вы будете получать все больше денег.\n", !"Закрыть", !"");
					case 31: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{73B461}- Спортивный зал/Характеристики{FFFFFF}\n\nНа нашем проекте есть только один спортзал,\nкоторый находится в городе Las-Venturas.\nЕсли часто заниматься в зале, вы сможете повышать\nсвои характеристики и изучать новые стили боя,\nа именно: силу, выносливость и мускулатуру.\nКаждая из них влияет на определенные навыки:\n\nСила - {37FF92}повышает силу удара кулаком или холодным оружием.{FFFFFF}\nВыносливость - {37FF92}быстрее регенерирует энергию.{FFFFFF}\nМускулатура - {37FF92}повышает защиту персонажа от\nкулаков, холодного оружия и пуль.{FFFFFF}\n\nВ спортзале так-же есть ринг, на котором вы сможете\nнайти себе соперника и устроить с ним бой на деньги!\n\nЭнергия, для занятий на тренажерах восстанавливается,\nкаждый Payday, в количестве, которое зависит от выносливости.", !"Закрыть", !"");
					case 32: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}\nRole Play ({EB6834}Ролевая игра{FFFFFF}) представляет собой моделирование событий, происходящих в определённом мире в определённое время. Её участники отыгрывают\nсобственных персонажей, руководствуясь при этом характером своей роли и внутренними убеждениями персонажа в рамках игровых реалий.\n\nFAQ по использованию команд '/me, /do, /try', /todo'.\n\nКоманда '/me'{FFFFFF}\nCлужит для описания масштабных действий, которые совершает Ваш персонаж. Использовать ее нужно лишь для важных действий, которые необходимо видеть\nвсем игрокам, которые играют рядом с вами, в локальном чате. Описания мелких действий при помощи этой команды уместны, только если эти действия должны \nбыть донесены в локальный чат. Соответственно, использовать /me нужно для масштабных и важных действий со стороны вашего персонажа.\n\n{EB6834}Пример:{FFFFFF}\n/me открыл багажник автомобиля и вытащил оттуда три пакета с продуктами.\n\n{EBEB34}Команда '/do'{FFFFFF}\nОчень важна в отыгровке. С помощью /do Вы можете описать обстановку вокруг вашего персонажа, либо самого персонажа. Стоит заметить, что описывать других \nперсонажей через эту команду не есть правильно. Но, при помощи /do можно узнать описание / состояние другого персонажа, либо обстановки вокруг него. \n\n{EB6834}Пример:{FFFFFF}\n/do В руке у Джеймса пистолет – Кольт, полностью заряженный\n\n{EBEB34}Команда '/try'{FFFFFF}\nКоманда используется для действий, вероятность успешности которых – 50%. Применять ее можно только к неживым предметам. Применение к другим персонажам\nявляется неправильным использованием команды. Для этого используйте команды /me и /do.\n\n{EB6834}Пример:{FFFFFF}\n/try взвалил самый большой мешок себе на плечи\n\n{EBEB34}Команда '/todo'{FFFFFF}\nУниверсальная команда для смешивания действия персонажа и его слов. Структура команды - /todo [слова*действие], причем пишется это через символ звездочки (*).\nДанная команда служит для описания одновременно и слов, которые говорит персонаж, и действия, которое он выполняет в виде деепричастия (", !"Закрыть", !"");
					case 33: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}- Система трейлеров ( {ECE162}Дома на колесах{FFFFFF} )\n\nКупить трейлер вы можете в салоне трейлеров ( {ECE162}/GPS - Автосалоны - Салон трейлеров{FFFFFF} )\nили у любого игрока, который им владеет. Количество трейлеров ограничено в 500 шт. \nМеню управления: {ECE162}/trmenu{FFFFFF}. Используя {ECE162}/setspawn{FFFFFF}, вы можете указать место спавна: '{ECE162}В трейлере{FFFFFF}'\nВы можете перевозить трейлер и парковать его в нужном вам месте, а так-же создавая с друзьями \n{ECE162}трейлерные{FFFFFF} городки. Въезд в город и парковка в городе запрещена! \n\nТрейлеры можно тюнинговать в гараже салона, изменяя каждую их текстуру за определенную оплату. \nЗа потерю трейлера, салон попросит у вас штраф в размере {ECE162}40 000${FFFFFF}, а за неуплату налогов, государство\nотберет его у вас. При парковке трейлера на дороге, местах общего пользования, в чертах города,\nна входе в бизнес, дом или в любых случаях NONRP, трейлер будет продан в гос. без возврата средств.\n\n", !"Закрыть", !"");
					case 34: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Галочка для семьи:\n\n- Специальный знак, подтверждающий запатентованость семьи.\n- Возможность влияния на расформ. семьи, которая копировала название вашей.\n- Возможность терять в 2-а раза меньше репутации, при наказании членов семьи.\n- Возможность пользования депозитом в кассах в любое время суток.\nСтоимость галочки: 50.000.000.\n\n", !"Закрыть", !"");
					case 35: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Бренд для семьи:\n\n- Специальный знак, выделяя вас от других семей.\n- Повышенные шансы получения рулеток в собирателях и дерби.\n- Семейный адвокат сможет с вероятностью в 2 раза больше освободить вас от ТСР.\n- Доступ к информационному центру через телефон.\n- Возможность владеть одним домом больше.\nСтоимость: 80.000.000\n\n", !"Закрыть", !"");
					case 36: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Улучшения для семьи:\n\nДополнительный респект - Все члены семьи начнут получать дополнительные 1-2 опыта каждый PAYDAY\nУспех в работе - Каждый член семьи будет получать дополнительный талон.\nБизнессмены в долгу - Участники семьи смогут бесплатно входить на \"Собиратели\".\nНеузнаваемый - Время действия маски в 2-а раза больше.\nМедики в долгу - Члены семьи смогут покупать аптечки без рецепта врача.\nБелый список - Участники семьи платят {EEDB64}в 3 раза меньше штраф{FFFFFF} за превышение скорости перед радаром.\nБанковские махинации - Участники семь смогут держать ставку в банке до 200.000.000 и получать до 200.000 каждый PAYDAY.\nМародёры - Члены семь смогут воровать патроны и ингредиенты у армий без состояния в банде, или мафии.\nРыбный цех - Члены семьи смогут бесплатно кушать у холодильника семейной квартиры.\n\n", !"Закрыть", !"");
					case 37: SPD(playerid, 0, DIALOG_STYLE_MSGBOX,  !"", !"{FFFFFF}Спортивный зал:\n\nСила - повышает силу удара кулаком, или холодным оружием.\nВыносливость - быстрее регенеррует энергию.\nМускулатура -повышает защиту персонажа от кулаков, холодного оружия и пуль.\nЭнергия, для занятий на тренажёрах восстанавливается, каждый PAYDAY, в количестве, которое зависит от выносливости.\n\n", !"Закрыть", !"");
					case 38: SCM(playerid, COLOR_LIGHTRED, !"Ждите в следующем обновлении!");
				}
		    }
		}
		case 69:
		{
		    if(response) FirstReferal[playerid] += 10;
		    else
		    {
		        if(FirstReferal[playerid] >= 10) FirstReferal[playerid] -= 10;
		        else return 1;
		    }
		    static Name[24];
		    new Level;
		    mysql_format(mysql, str, sizeof(str), "SELECT `NickName`, `Level` FROM `Qelksekm` WHERE `Referal` = '%s' LIMIT %i, 10", PN(playerid), FirstReferal[playerid]);
		    new Cache:result = mysql_query(mysql, str);
      		new accounts = cache_num_rows();
      		if(accounts == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Больше вас никто не указывал как реферала");
      		str[0] = EOS;
      		for(new i; i < accounts; i ++)
      		{
	  			cache_get_value_name(i, "NickName", Name);
	  			cache_get_value_name_int(i, "Level", Level);

      			if(Level < 3) f(str, sizeof(str), "%s{FFFFFF}%i. %s - {FF0000}%i level\n", str, i+FirstReferal[playerid]+1, Name, Level);
      			else f(str, sizeof(str), "%s{FFFFFF}%i. %s - {33AA33}%i level\n", str, i+FirstReferal[playerid]+1, Name, Level);
      		}
      		cache_delete(result);
  			SPD(playerid, 69, 0, "Приглашенные", str, "Далее", "Назад");
		}
		///////авиашкола
		case 3339:
		{
		    if(response)
		    {
		        if(FlyivingTest[playerid] != 0)
		        {
		            new que, question;
		            que = Question[playerid];
		            question = TestFASKMassive[playerid][que];
		            if(QueFInfo[question][dSuccesQwe] != -1 && listitem != QueFInfo[question][dSuccesQwe]) Errors[playerid] ++;
		            Question[playerid] ++;
		            que = Question[playerid];
		            if(que < 7)
		            {
		                question = TestFASKMassive[playerid][que];
		          		SPD(playerid,3339,QueFInfo[question][dDialog],QueFInfo[question][dQuestion],QueFInfo[question][dAnswers],"Далее","Отмена");
					}
					else
					{
						f(str,sizeof(str),"[Информация] {FFFFFF}Правильных ответов: %i/7",7-Errors[playerid]);
						SCM(playerid,COLOR_VALIK,str);
						if(!Errors[playerid])
						{
						    SPD(playerid, 0, 0, !"", !"{999393} Вы успешно прошли собеседование и можете приступать к практической части, а именно управление самолётом.\nДля того чтобы ее начать доберитесь до старого аэродрома ( отмечен на карте красной меткой ).\nСадитесь в один из учебных самолётов ( дальнейшее подсказки вы получите позже ).", !"Закрыть", !"");
							CarTest[playerid] = 0;
							FlyivingTest[playerid] = 0;
							Question[playerid] = 0;
							EnableGPSForPlayer(playerid,396.5388,2530.4644,16.5490);
						}
						else
						{
						    SPD(playerid, 0, 0, !"", !"{C03F3F}Вы провалили тест, ответы на вопросы вы можете найти на форуме или в авиашколе!", !"Закрыть", !"");
							FlyivingTest[playerid] = 0;
							CarTest[playerid] = -1;
						}
					}
				}
			}
			else
			{
				SPD(playerid, 0, 0, !"", !"{C03F3F}Вы провалили тест, ответы на вопросы вы можете найти на форуме или в авиашколе!", !"Закрыть", !"");
				FlyivingTest[playerid] = 0;
			}
			return 1;
		}
		case 70:
		{
		    if(response)
		    {
		        if(DrivingTest[playerid] != 0)
		        {
		            new que, question;
		            que = Question[playerid];
		            question = TestASKMassive[playerid][que];
		            if(QueInfo[question][dSuccesQwe] != -1 && listitem != QueInfo[question][dSuccesQwe]) Errors[playerid] ++;
		            Question[playerid] ++;
		            que = Question[playerid];
		            if(que < 4)
		            {
		                question = TestASKMassive[playerid][que];
		          		SPD(playerid,70,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","Отмена");
					}
					else
					{
						f(str,sizeof(str),"[Информация] {FFFFFF}Правильных ответов: %i/4",4-Errors[playerid]);
						SCM(playerid,COLOR_ORANGE,str);
						if(!Errors[playerid])
						{
							SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно ответили на все заданы вопросы! Для того чтобы приступить к");
							SCM(playerid, -1, !"следующей части экзамена, выйдите на улицу и сядьте в одно из учебных автомобилей. Внимательно читайте");
							SCM(playerid, -1, !"все подсказки, которые видите на экране!");
							SPD(playerid, 0, 0, !"", !"Вы успешно ответили на все заданы вопросы. \nДля того чтобы приступить к следующей части экзамена \nвыйдите на улицу и сядьте в одно из учебных авто. \n\n{A7FC00}Следуйте Подсказкам которые вы увидите на экране!", !"Закрыть", !"");
                            EnableGPSForPlayer(playerid,-2073.93, -121.46, 35.34);
							CarTest[playerid] = 0;
							DrivingTest[playerid] = 0;
							Question[playerid] = 0;
						}
						else
						{
							SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы провалили тест. Необходимо ответить на все вопросы правильно!");
							DrivingTest[playerid] = 0;
							CarTest[playerid] = -1;
						}
					}
				}
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы провалили тест");
				DrivingTest[playerid] = 0;
			}
			return 1;
		}
        case 79:
        {
            if(response)
            {
				switch(listitem)
                {
					case 0:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 400)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<5)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 400);
								BizInfo[biz][bProducts] -= 5;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -400);
								aml(52, playerid, "", "покупка Чипсы", 400);
							}
							else
							{
								PI[playerid][pBank] -= 400;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка Чипсы", 400);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Chips, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Chips, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/eat{FFFFFF} чтобы перекусить.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
                    }
                    case 1:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 100)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<2)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 100);
								BizInfo[biz][bProducts] -= 2;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -100);
								aml(52, playerid, "", "покупка Спранк", 100);
							}
							else
							{
								PI[playerid][pBank] -= 100;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка Спранк", 100);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Sprunk, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Sprunk, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/sprunk{FFFFFF} чтобы выпить его.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
                    }
                    case 2:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 300)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<7)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 300);
								BizInfo[biz][bProducts] -= 7;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -300);
								aml(52, playerid, "", "покупка Пиво", 300);
							}
							else
							{
								PI[playerid][pBank] -= 300;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка Пиво", 300);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Beer, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Beer, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/beer{FFFFFF} чтобы выпить.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
                    }
                    case 3:
                    {
                        if(GetInvCount(playerid, Item_PhoneBook))
                        {
                 			SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть тел. книга");
						    f(str, sizeof(str), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать\n{42B02C}- {FFFFFF}Оплата: %s", PI[playerid][pVID] ? ("{E5D02D}Кредиткой") : ("{E5D02D}Наличкой"));
							SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str, !"Выбор", !"Отмена");
                        }
                        else {
							new mona,tiper;
							if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
							else tiper =1,mona = PI[playerid][pBank];

							if(mona >= 650)
							{
								new biz = BizEntered[playerid];
								if(biz != -1)
								{
									if(BizInfo[biz][bProducts]<8)
										return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

						            GiveBizMoney(biz, 650);
									BizInfo[biz][bProducts] -= 8;
								}
								if(!tiper)
								{
									GiveMoney(playerid, -650);
									aml(52, playerid, "", "покупка Телефонную книгу", 650);
								}
								else
								{
									PI[playerid][pBank] -= 650;
									UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
									aml(62, playerid, "", "покупка Телефонную книгу", 650);
								}


								switch(random(4))
						        {
						            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
						            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
						            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
						            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
						        }
						        UpdateBiz(biz, 0);
						        InvAdd(playerid, Item_PhoneBook, 1);
						        aml(101, playerid, "", "покупка в 24/7", Item_PhoneBook, 1);
						        SCM(playerid, -1, !"Используйте {73B461}/number{FFFFFF} чтобы найти номер.");
							}
							else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
				        }
                    }
                    case 4: {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 300)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<7)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 300);
								BizInfo[biz][bProducts] -= 7;
							}
							if(!tiper)
							{
								GiveMoney(playerid, -300);
								aml(52, playerid, "", "покупка пачку скрепок", 300);
							}
							else
							{
								PI[playerid][pBank] -= 300;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка пачку скрепок", 300);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Clips, 20);
					        aml(101, playerid, "", "покупка в 24/7", Item_Clips, 20);
					        SCM(playerid, -1, !"Используйте {73B461}/break{FFFFFF} чтобы вскрыть наручники.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
				    }
                    case 5:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 600)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<15)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 600);
								BizInfo[biz][bProducts] -= 15;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -600);
								aml(52, playerid, "", "покупка маску", 600);
							}
							else
							{
								PI[playerid][pBank] -= 600;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка маску", 600);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Mask, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Mask, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/mask{FFFFFF} чтобы одеть маску.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
                    }
                    case 6:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 700)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<15)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 700);
								BizInfo[biz][bProducts] -= 15;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -700);
								aml(52, playerid, "", "покупка телефона", 700);
							}
							else
							{
								PI[playerid][pBank] -= 700;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка телефона", 700);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Xiaomi_Blue, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Xiaomi_Blue, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/phone{FFFFFF} чтобы достать телефон.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");

					    if(QuestProgress[playerid][7] == 0 && AcceptQuest[playerid][7] != 0)
					    {
					        QuestProgress[playerid][7] = 1;
					        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно купили мобильный телефон как просил Майкл.\nВозращайтесь обратно, чтобы получить награду за выполненное задание.\n\n{82A3DF}Для управления телефоном используйте /phone!", !"Принять", !"");
					        NextStapQI(playerid,7);
						}
                        return 1;
                    }
                    case 7:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 400)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<5)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 400);
								BizInfo[biz][bProducts] -= 5;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -400);
								aml(52, playerid, "", "покупка радио", 400);
							}
							else
							{
								PI[playerid][pBank] -= 400;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка радио", 400);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Radio, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Radio, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/radio{FFFFFF} чтобы достать радио.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
                    }
                    case 8:
                    {
                        if(GetMoney(playerid)<100)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
                        GiveMoney(playerid,-100);
                        aml(52, playerid, "", "покупка Фотоаппарата", 100);
                        GiveGun(playerid,43,100);
                    }
                    case 9:
                    {
                        if(!CheckPhones(playerid)) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас нет мобильного телефона!");
                        if(GetMoney(playerid) < 400) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
                        if(BizInfo[BizEntered[playerid]][bProducts] < 5) return SCM(playerid, -1, !">> {BE2D2D} В магазине нет продуктов!");
				        if(GetPVarInt(playerid, !"antifloodtelnum") > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Покупать сим-карту/телефон можно раз в 5 секунд!");
                        new telephone = 1000000 + random(8999999);
                        if(CheckTelNum(playerid, telephone)) return false;
                        SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы успешно купили новую SIM карту. Ваш новый номер телефона: %i.", telephone);
                        PI[playerid][pTelNum] = telephone;
                        UpdatePlayerDataInt(playerid, "TelNum", telephone);
                        GiveBizMoney(BizEntered[playerid], 400);
                        BizInfo[BizEntered[playerid]][bProducts] -= 5;
                        GiveMoney(playerid, -400);
                        aml(52, playerid, "", "покупка сим-карты", 400);
                        switch(random(4))
                        {
                            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
                            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
                            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
                            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
                        }
                        SetPVarInt(playerid, !"antifloodtelnum", gettime()+5);
                    }
                    case 10: {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 100)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<3)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 100);
								BizInfo[biz][bProducts] -= 3;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -100);
								aml(52, playerid, "", "покупка сигареты", 100);
							}
							else
							{
								PI[playerid][pBank] -= 100;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка сигареты", 100);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Cigarettes, 20);
					        aml(101, playerid, "", "покупка в 24/7", Item_Cigarettes, 20);
					        SCM(playerid, -1, !"Используйте {73B461}/smoke{FFFFFF} чтобы закурить.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
				    }
                    case 11: {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 75)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<3)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 75);
								BizInfo[biz][bProducts] -= 3;
							}
							if(!tiper)
							{
								GiveMoney(playerid, -75);
								aml(52, playerid, "", "покупка зажигалку", 75);
							}
							else
							{
								PI[playerid][pBank] -= 75;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка зажигалку", 75);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Lighter, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Lighter, 1);
					        SCM(playerid, COLOR_VALIK, !"Теперь вы сможете подкурить сигарету.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
				    }
                    case 12:
                    {
                        if(!GetInvCount(playerid, Item_FishingRod)) {
							new mona,tiper;
							if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
							else tiper =1,mona = PI[playerid][pBank];

							if(mona >= 500)
							{
								new biz = BizEntered[playerid];
								if(biz != -1)
								{
									if(BizInfo[biz][bProducts]<5)
										return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

						            GiveBizMoney(biz, 500);
									BizInfo[biz][bProducts] -= 5;
								}
								if(!tiper)
								{
									GiveMoney(playerid, -500);
									aml(52, playerid, "", "покупка удочки", 500);
								}
								else
								{
									PI[playerid][pBank] -= 500;
									UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
									aml(62, playerid, "", "покупка удочки", 500);
								}


								switch(random(4))
						        {
						            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
						            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
						            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
						            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
						        }
						        UpdateBiz(biz, 0);
						        InvAdd(playerid, Item_FishingRod, 1);
						        aml(101, playerid, "", "покупка в 24/7", Item_FishingRod, 1);
						        SCM(playerid, COLOR_VALIK, !"Ловить рыбу можно на пирсе LS.");
							}
							else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
				        }
                        else
                        {
                            SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть удочка");
						    f(str, sizeof(str), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать\n{42B02C}- {FFFFFF}Оплата: %s", PI[playerid][pVID] ? ("{E5D02D}Кредиткой") : ("{E5D02D}Наличкой"));
							SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str, !"Выбор", !"Отмена");
                        }
                    }
                    case 13: {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 20)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<20)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 20);
					            BizInfo[biz][bProducts] -= 20;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -20);
								aml(52, playerid, "", "покупка червей", 20);
							}
							else
							{
								PI[playerid][pBank] -= 20;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка червей", 20);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Worms, 15);
					        aml(101, playerid, "", "покупка в 24/7", Item_Worms, 15);
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
					}
                    case 14:
                    {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 2000)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<30)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 2000);
								BizInfo[biz][bProducts] -= 30;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -2000);
								aml(52, playerid, "", "покупка бронежилета", 2000);
							}
							else
							{
								PI[playerid][pBank] -= 2000;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка бронежилета", 2000);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Armour, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Armour, 1);
					        SCM(playerid, COLOR_VALIK, !"Используйте {73B461}/armour{FFFFFF} чтобы одеть бронежилет.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
                    }
                    case 15: {
						new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 500)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<10)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 500);
								BizInfo[biz][bProducts] -= 10;
							}
							if(!tiper)
							{
								GiveMoney(playerid, -500);
								aml(52, playerid, "", "покупка яда", 500);
							}
							else
							{
								PI[playerid][pBank] -= 500;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка яда", 500);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_Syringe, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_Syringe, 1);
					        SCM(playerid, COLOR_VALIK, !"Используйте {73B461}/killme{FFFFFF} чтобы употребить яд.");
						}
						else SendBotMessage(playerid, !"Извините, но у вас не хватает денег!");
				    }
                    case 16:
                    {
                        if(PlayerDrunkLevel[playerid] != 1)
      					{
					    	if(PI[playerid][pFamilyMember] != -1)
					    	{
					    		if(!FamilyInfo[PI[playerid][pFamilyMember]][famMedicCredit]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Аптечки можно купить только если у вас есть рецепт от врача!");
					    	}
					    	else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Аптечки можно купить только если у вас есть рецепт от врача!");
					    }
      					new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 600)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<10)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 600);
								BizInfo[biz][bProducts] -= 10;
							}
							if(!tiper)
							{
								GiveMoney(playerid, -600);
								aml(52, playerid, "", "покупка аптечки", 600);
							}
							else
							{
								PI[playerid][pBank] -= 600;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка аптечки", 600);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_MedKit, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_MedKit, 1);
					        SCM(playerid, -1, !"Используйте {73B461}/usemed{FFFFFF} чтобы употребить аптечку.");
						}
                        PlayerDrunkLevel[playerid] = 0;
                        UpdatePlayerDataInt(playerid, "Drunk", 0);
                    }
                    case 17:
                    {
                        if(PlayerDrunkLevel[playerid]!=1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эти таблетки можно купить только если у вас есть рецепт от врача!");
      					new mona,tiper;
						if(!PI[playerid][pVID])tiper = 0, mona = PI[playerid][pMoney];
						else tiper =1,mona = PI[playerid][pBank];

						if(mona >= 10000)
						{
							new biz = BizEntered[playerid];
							if(biz != -1)
							{
								if(BizInfo[biz][bProducts]<200)
									return SendBotMessage(playerid, !"Приносим свои извинения, но\nв магазине нет продуктов.");

					            GiveBizMoney(biz, 10000);
								BizInfo[biz][bProducts] -= 200;
							}
							if(!tiper)
							{	
								GiveMoney(playerid, -10000);
								aml(52, playerid, "", "покупка лекарства от наркозависимости", 10000);
							}
							else
							{
								PI[playerid][pBank] -= 10000;
								UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
								aml(62, playerid, "", "покупка лекарства от наркозависимости", 10000);
							}


							switch(random(4))
					        {
					            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
					            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
					            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
					            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
					        }
					        UpdateBiz(biz, 0);
					        InvAdd(playerid, Item_DrugPills, 1);
					        aml(101, playerid, "", "покупка в 24/7", Item_DrugPills, 1);
					        SCM(playerid, COLOR_VALIK, !"Используйте {73B461}/usebad{FFFFFF} чтобы употребить лекарство от наркозависимости.");
						}
                        PlayerDrunkLevel[playerid] = 0;
                        UpdatePlayerDataInt(playerid, "Drunk", 0);
                    }
                    case 18:
                    {
                        if(GetMoney(playerid)<50)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
                        GiveMoney(playerid,-50);
                        GiveGun(playerid,14,1);
                        aml(52, playerid, "", "покупка цветов", 50);
                        GiveBizMoney(playerid, 50);
                        switch(random(4))
                        {
                            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
                            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
                            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
                            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
                        }
                    }
                    case 19:
                    {
						if(GetMoney(playerid)<550) return SendBotMessage(playerid, "Извините, но у вас не хватает денег!");
						if(GetPlayerHouse(playerid) == -1) return SendBotMessage(playerid, "Вы не проживаете ни в одном из домов!");
						if(BizInfo[BizEntered[playerid]][bProducts] < 10) SendBotMessage(playerid,"Извините, но у нас закончились продукты!");
						ShowPlayerHome(playerid, 6668);
                    }
                }
                SPD(playerid,79,5,"{e4db5e}Магазин",GRAND_BUY_MENU_TEXT,"Купить","Отмена");
            }
        }
        case 6668:
        {
        	if(!response) return 1;
			new bized = BizEntered[playerid], house = ShowHouse[playerid][listitem];
			BizInfo[bized][bProducts]-=10;
			GiveBizMoney(bized,450);
		    GiveMoney(playerid,-650);
		    aml(52, playerid, "", "покупка аптечек для дома", 650);
		    HouseInfo[house][hMed]++;
		    switch(random(4))
			{
				case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
			    case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
			    case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
			    case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
			}
			SCMf(playerid, COLOR_GREEN, "<< {FFFFFF}В вашем доме теперь {DEAF79}%i{FFFFFF} аптечек!", HouseInfo[house][hMed]);
        }
		case 86:
		{
	        if(!response)
	        {
				new id = HouseOffer[playerid];
			    SCM(id, -1, !">> {BE2D2D} Игрок отказался от покупки вашего дома.");
			    HouseOffer[id] =
	        	HouseOffer[playerid] = INVALID_PLAYER_ID;
	        	HousePrice[playerid] = 0;
			}
			SetPVarInt(playerid, !"antinaebdom", gettime() + 5);
			SPD(playerid, 92, DIALOG_STYLE_MSGBOX, !"", !" {FFFFFF}Вы действительно согласны на покупку дома?\n{EC2218}Для вашей безопасности, принять покупку\nможно спустя 5 секунд с момента предложения", !"Принять", !"Отмена");
		}
		case 92:
		{
		    if(!response)
		    {
			    new id = HouseOffer[playerid];
			    if(id != INVALID_PLAYER_ID)
			    {
				    SCM(id, -1, !">> {BE2D2D} Игрок отказался от покупки вашего дома.");
				    HouseOffer[id] = INVALID_PLAYER_ID;
				}
	        	HouseOffer[playerid] = INVALID_PLAYER_ID;
	        	HousePrice[playerid] = 0;
	        	DeletePVar(playerid, !"antinaebdom");
			}
            if(GetPVarInt(playerid, !"antinaebdom") > gettime()) return SPD(playerid, 92, DIALOG_STYLE_MSGBOX, !"", !" {FFFFFF}Вы действительно согласны на покупку дома?\n{EC2218}Для вашей безопасности, принять покупку\nможно спустя 5 секунд с момента предложения", !"Принять", !"Отмена");
            DeletePVar(playerid, !"antinaebdom");
            SPD(playerid, 94, DIALOG_STYLE_MSGBOX, !"", !"{EC2218} Вы действительно согласны на покупку дома?", !"Принять", !"Отмена");
		}
		case 94:
		{
		    new id = HouseOffer[playerid];
			if(response)
			{
		        if(HouseOffer[playerid] != INVALID_PLAYER_ID && HouseOffer[HouseOffer[playerid]] == playerid)
		        {
		            new house = PI[id][pHouseTemp];
		            if(GetString(HouseInfo[house][hOwner], PN(id)))
		            {
		                if(GetMoney(playerid) >= HousePrice[playerid])
		                {
				            GiveMoney(playerid, -HousePrice[playerid]);
				            GiveMoney(id, HousePrice[playerid]);
				            aml(50, playerid, PN(id), "Покупка дома", HousePrice[playerid], 7);
				        	SCMf(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы купили дом у игрока %s за $%i", PN(id), HousePrice[playerid]);
				        	SCMf(id, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Игрок %s купил у вас дом за $%i", PN(playerid), HousePrice[playerid]);
							PI[id][pDCTime] = 0;
							UpdatePlayerDataInt(id, "DCTime", 0);
							SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				        	PI[playerid][pDCTime] = 1;
				        	UpdatePlayerDataInt(playerid, "DCTime", 1);
				        	SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ваш дом. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				        	SetString(HouseInfo[house][hOwner], PN(playerid));
				        	UpdateHouse(house);

							if(!IsAPlayerHouse(playerid, house)) SetPlayerHouse(playerid, house);

				        	PI[playerid][pHouseSpawn] = house;
				        	UpdatePlayerDataInt(playerid, "HouseSpawn", house);

				        	DeletePlayerHouse(playerid, house);

				        	new houseid = GetPlayerFirstHouse(id);
				        	PI[id][pHouseSpawn] = houseid;
				        	UpdatePlayerDataInt(id, "HouseSpawn", houseid);

				        	HouseOffer[id] =
				        	HouseOffer[playerid] = INVALID_PLAYER_ID;
				        	HousePrice[playerid] = 0;
					    }
					}
				}
			}
			else
			{
			    SCM(id, -1, !">> {BE2D2D} Игрок отказался от покупки вашего дома.");
			    HouseOffer[id] =
	        	HouseOffer[playerid] = INVALID_PLAYER_ID;
	        	HousePrice[playerid] = 0;
	       }
		}
		case 87:
		{
		    if(response)
		    {
		        if(ProxDetectorS(5,playerid,TicketOffer[playerid], 1))
		        {
		            if(GetMoney(playerid) >= TicketPrice[playerid])
		            {
		            	GiveMoney(playerid,-TicketPrice[playerid]);
		            	GiveMoney(TicketOffer[playerid],TicketPrice[playerid]);
		            	aml(50, playerid, PN(TicketOffer[playerid]), "Оплата штрафа", TicketPrice[playerid]);
		            	SCMf(TicketOffer[playerid],COLOR_VALIK, "[Информация] {FFFFFF}%s оплатил штраф в размере $%i", cPN(playerid), TicketPrice[playerid]);
		            	SCMf(playerid,COLOR_VALIK, "[Информация] {FFFFFF}Вы оплатили штраф полицейскому %s в размере $%i", cPN(TicketOffer[playerid]), TicketPrice[playerid]);
		            	TicketPrice[playerid] = 0;
		            	TicketOffer[playerid] = INVALID_PLAYER_ID;
		            }
		        }
		    }
		}
		case 88:
		{
		    if(response)
		    {
		        if(ProxDetectorS(2.0,playerid,TakeOffer[playerid], 1) || listitem == 3)
		        {
		            new id = TakeOffer[playerid];
		            if(Cuffed{id} || CuffedTime[id] > 0 || listitem == 3)
		            {
						switch(listitem)
						{
				            case 0:
				            {
				                f(str,sizeof(str),"[Информация] {FFFFFF}Вы отобрали наркотики у %s",cPN(id));
				            	SCM(playerid,COLOR_VALIK,str);
				            	f(str,sizeof(str),"[Информация] {FFFFFF}Полицейский %s отобрал у вас наркотики",cPN(playerid));
				            	SCM(id,COLOR_RED,str);
				            	SetItem(id, Item_Drugs);
				            	TakeOffer[playerid] = INVALID_PLAYER_ID;
				            }
				            case 1:
				            {
				                f(str,sizeof(str),"[Информация] {FFFFFF}Вы отобрали патроны у %s",PN(id));
				            	SCM(playerid,COLOR_VALIK,str);
				            	f(str,sizeof(str),"[Информация] {FFFFFF}Полицейский %s отобрал у вас патроны",PN(playerid));
				            	SCM(id,COLOR_RED,str);
				            	SetItem(id, Item_Mats);
				            	TakeOffer[playerid] = INVALID_PLAYER_ID;
				            }
				            case 2:
				            {
				                f(str,sizeof(str),"[Информация] {FFFFFF}Вы отобрали оружие у %s",PN(id));
				            	SCM(playerid,COLOR_VALIK,str);
				            	f(str,sizeof(str),"[Информация] {FFFFFF}Полицейский %s отобрал у вас оружие",PN(playerid));
				            	SCM(id,COLOR_RED,str);
				            	ResetGun(id);
				            	TakeOffer[playerid] = INVALID_PLAYER_ID;
				            }
				            case 3: SPD(playerid,89,2,"Что отобрать","Лицензию на авто\nЛицензию на мото\nЛицензию на полеты\nЛицензию на ловлю рыбы\nЛицензию на плавание\nЛицензию на оружие","Отобрать","Отмена");
						}
					}
					else SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Человек должен быть обездвижен");
		        }
		        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
			}
		}
		case 89:
		{
		    if(response)
		    {
		        new id = TakeOffer[playerid];
		        static Zak[20];
		        if(IsACop(playerid)) Zak = "Полицейский";
		        else if(GetTeamID(playerid) == TEAM_LICENSERS) Zak = "Лицензер";
		        switch(listitem)
		        {
					case 0:
					{
					    if(!GetInvCount(id, Item_Car_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет лицензии на авто");
					    if(PI[id][pCarLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензия на авто этого игрока уже обнулена");
						f(str,sizeof(str),"[Информация] {FFFFFF}Вы обнулили лицензию на авто игрока %s",cPN(id));
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на авто",Zak,cPN(playerid));
						SCM(id,COLOR_RED,str);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						ResetLiccenses(playerid, Item_Car_Lic);
						PI[id][pCarLic] = NULLED_LIC;
					}
					case 1:
					{
					    if(!GetInvCount(id, Item_Bike_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет лицензии на мото");
					    if(PI[id][pBikeLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензия на мото этого игрока уже обнулена");
						f(str,sizeof(str),"[Информация] {FFFFFF}Вы обнулили лицензию на мото игрока %s",cPN(id));
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на мото",Zak,cPN(playerid));
						SCM(id,COLOR_RED,str);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						ResetLiccenses(playerid, Item_Bike_Lic);
						PI[id][pBikeLic] = NULLED_LIC;
					}
					case 2:
					{
					    if(!GetInvCount(id, Item_Fly_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет лицензии на полеты");
					    if(PI[id][pFlyLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензия на полеты этого игрока уже обнулена");
						f(str,sizeof(str),"[Информация] {FFFFFF}Вы обнулили лицензию на полеты игрока %s",cPN(id));
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на полеты",Zak,cPN(playerid));
						SCM(id,COLOR_RED,str);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						ResetLiccenses(playerid, Item_Fly_Lic);
						PI[id][pFlyLic] = NULLED_LIC;
					}
					case 3:
					{
					    if(!GetInvCount(id, Item_Fish_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет лицензии на рыбалку");
					    if(PI[id][pFishLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензия на рыбалку этого игрока уже обнулена");
						f(str,sizeof(str),"[Информация] {FFFFFF}Вы обнулили лицензию на ловлю рыбы игрока %s",cPN(id));
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на ловлю рыбы",Zak,cPN(playerid));
						SCM(id,COLOR_RED,str);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						ResetLiccenses(playerid, Item_Fish_Lic);
						PI[id][pFishLic] = NULLED_LIC;
					}
					case 4:
					{
					    if(!GetInvCount(id, Item_Boat_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет лицензии на плавиние");
					    if(PI[id][pBoatLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензия на плавание этого игрока уже обнулена");
						f(str,sizeof(str),"[Информация] {FFFFFF}Вы обнулили лицензию на плавание игрока %s",cPN(id));
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на плавание",Zak,cPN(playerid));
						SCM(id,COLOR_RED,str);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						ResetLiccenses(playerid, Item_Boat_Lic);
						PI[id][pBoatLic] = NULLED_LIC;
					}
					case 5:
					{
					    if(!GetInvCount(id, Item_Gun_Lic)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет лицензии на оружие");
					    if(PI[id][pGunLic] == NULLED_LIC) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензия на оружие этого игрока уже обнулена");
						f(str,sizeof(str),"[Информация] {FFFFFF}Вы обнулили лицензию на оружие игрока %s",cPN(id));
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на оружие",Zak,cPN(playerid));
						SCM(id,COLOR_RED,str);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						ResetLiccenses(playerid, Item_Gun_Lic);
						PI[id][pGunLic] = NULLED_LIC;
					}
				}
			}
			else if(IsACop(playerid)) SPD(playerid,88,2,"Что забрать","Наркотики\nПатроны\nОружие\nЛицензию","Забрать","Отмена");
		}
		case 91:
		{
		    if(response)
		    {
		        if(PI[playerid][pAdmin] >= ADM_ADMIN)
		        {
				    if(IsBannedName(UnbanName[playerid]))
				    {
				        UnBanName(UnbanName[playerid]);
				        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Игрок разбанен");
				        f(str, sizeof(str) ," Администратор %s разбанил игрока %s", PN(playerid), UnbanName[playerid]);
				        SendAdminsMessage(COLOR_YELLOW, str);
				        aml(14, playerid, UnbanName[playerid]);
					}
				    else SCM(playerid, COLOR_GREY, !"Игрок уже разбанен");
		        }
		    }
		}
		case 93:
		{
		    if(response)
		    {
          		switch(listitem)
				{
			        case 0:
			        {
			            if(GetMoney(playerid) < 700) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,1500);
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
				        InvAdd(playerid, Item_Shovel, 1);
				        aml(101, playerid, "", "покупка в 24/7", Item_Shovel, 1);
			        }
			        case 1:
			        {
			  			if(GetMoney(playerid)<1500)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,1500);
						GiveMoney(playerid,-1500);
						aml(52, playerid, "", "покупка набора для починки", 1500);
						SCM(playerid, -1, !"Используйте {73B461}/repcar{FFFFFF} чтобы починить машину.");
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
				        InvAdd(playerid, Item_Repair, 1);
				        aml(101, playerid, "", "покупка в 24/7", Item_Repair, 1);
			        }
			        case 2:
			        {
			  			if(GetMoney(playerid)<1500)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,1500);
						GiveMoney(playerid,-1500);
						aml(52, playerid, "", "покупка канистры", 1500);
						SCM(playerid, -1, !"Используйте {73B461}/fillcar{FFFFFF} чтобы заправить машину.");
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
				        InvAdd(playerid, Item_Canister, 1);
				        aml(101, playerid, "", "покупка в 24/7", Item_Canister, 1);
			        }
			        case 3:
			        {
			  			if(GetMoney(playerid)<1500)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,1500);
						GiveMoney(playerid,-1500);
						aml(52, playerid, "", "покупка балончика с краской", 1500);
						SCM(playerid, -1, !"Используйте {73B461}/balon{FFFFFF} чтобы красить свой автомобиль.");
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
				        InvAdd(playerid, Item_Spray, 1);
				        aml(101, playerid, "", "покупка в 24/7", Item_Spray, 1);
			        }
			        case 4:
			        {
			            if(GetMoney(playerid)<2000)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,2000);
						GiveMoney(playerid,-2000);
						aml(52, playerid, "", "покупка бензопилы", 2000);
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
						GiveGun(playerid, 9, 1);
			        }
					case 5:
					{
			  			if(GetMoney(playerid)<1000)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,1000);
						GiveMoney(playerid,-1000);
						aml(52, playerid, "", "покупка костра", 1000);
						SCM(playerid, -1, !"Используйте {73B461}/firewood{FFFFFF} чтобы розжечь костер.");
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
				        InvAdd(playerid, Item_Firewood, 1);
				        aml(101, playerid, "", "покупка в 24/7", Item_Firewood, 1);
					}
					case 6:
			        {
			  			if(GetMoney(playerid)<1000)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						new biz = BizEntered[playerid];
				  		if(biz != -1) GiveBizMoney(biz,1000);
						GiveMoney(playerid,-1000);
						aml(52, playerid, "", "покупка отмычек", 1000);
						SCM(playerid, -1, !"Используйте {73B461}/breakcar{FFFFFF} чтобы взломать машину.");
						switch(random(4))
				        {
				            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще.");
				            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
				            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата.");
				            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня.");
				        }
				        InvAdd(playerid, Item_BreakCar, 1);
				        aml(101, playerid, "", "покупка в 24/7", Item_BreakCar, 1);
			        }
				}
				SPD(playerid, 93, 5, !"{e4db53}Магазин", BUY_MENU_MEHAN, !"Купить", !"Отмена");
		    }
		}
  		case 96:
		{
			if(response)
			{
			    if(listitem == 20 || listitem == 21) CheckBanned(playerid,listitem);
       			else
			    {
			        strmid(UnbanName[playerid], inputtextsave, 0, strlen(inputtextsave) );
			        if(GetString(inputtextsave, "<<< Назад")) return CheckBanned(playerid,21);
			        static reason[100], admin[24];
				    new seconds;
				    mysql_format(mysql, str, sizeof(str), "SELECT * FROM `BanNames` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
					new Cache:result = mysql_query(mysql, str);
					if(cache_num_rows() > 0)
					{
						cache_get_value_name(0, "BanAdmin", admin);
						cache_get_value_name(0, "BanReason", reason);
						cache_get_value_name_int(0, "BanSeconds", seconds);

						new times = gettime();

						static tima[20];
						new dima;
						if(floatround((seconds-times) / 60 / 60 / 24) > 1)
						{
							tima = "дней";
							dima = floatround((seconds-times) / 60 / 60 / 24, floatround_ceil);
						}
						else if(floatround((seconds-times) / 60 / 60) > 1)
				 	    {
					 		tima = "час(ов)";
					 		dima = floatround((seconds-times) / 60 / 60, floatround_ceil);
						}
						else
						{
					 		tima = "минут";
					 		dima = floatround((seconds-times) / 60, floatround_ceil);
						}

					    f(str, sizeof(str), "\
						{FFFFFF}Блокиратор: \t{FF0000}%s\n\
						{FFFFFF}Причина: \t{FF0000}%s\n\
						{FFFFFF}До разблокировки: \t\t{FF0000}%i %s",
						admin, reason, dima, tima);
						SPD(playerid, 91, 0, UnbanName[playerid], str, !"Разбан", !"Отмена");
					}
					else SCMf(playerid, COLOR_GREY, "Игрок %s не забанен", UnbanName[playerid]);
				    cache_delete(result);
			    }
			}
		}
	    case 99:
	    {
	        if(response)
	        {
		        new i = InfoBiz[playerid];
				if(!IsNoEnterBiz(i))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bExit_X],BizInfo[i][bExit_Y],BizInfo[i][bExit_Z]))
					{
					    BizEntered[playerid] = -1;
					    SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						J_SetPlayerPos(playerid,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z]);
					}
				}
			}
			else NoEnterPickup[playerid] = 3;
			return 1;
	    }
		case 103:
		{
			if(response)
			{
			    switch(listitem)
				{
				    case 0: SPD(playerid,79,5,"{e4db5e}Магазин",GRAND_BUY_MENU_TEXT,"Купить","Отмена");
				    case 1: SPD(playerid,104,2,"Что продать?","Рыбу","Выбор","Отмена");
				    case 2:
				    {
				        PI[playerid][pVID] = !PI[playerid][pVID];
					    f(str, sizeof(str), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать\n{42B02C}- {FFFFFF}Оплата: %s", PI[playerid][pVID] ? ("{E5D02D}Кредиткой") : ("{E5D02D}Наличкой"));
						SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str, !"Выбор", !"Отмена");
				    }
			    }
			}
		}
		case 104:
		{
			if(response)
			{
			    switch(listitem)
				{
				    case 0: SPD(playerid,105,2,"Что продать?","Всю рыбу","Выбор","Отмена");
			    }
			}
			else {
			    f(str, sizeof(str), "{42B02C}-{FFFFFF} Купить\n{42B02C}-{FFFFFF} Продать\n{42B02C}- {FFFFFF}Оплата: %s", PI[playerid][pVID] ? ("{E5D02D}Кредиткой") : ("{E5D02D}Наличкой"));
				SPD(playerid, 103, DIALOG_STYLE_LIST, !"", str, !"Выбор", !"Отмена");
			}
		}
  		case 105:
		{
			if(response)
			{
			    switch(listitem)
				{
				   	case 0:
				    {
				        new cost;
				        for(new i; i < 5; i ++)
				        {
				            new fish = PlayerFish[playerid][i];
				            if(fish != 0) cost += FishMassa[playerid][i] * FishCost[fish];
				        }
				        if(cost < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Рыбу менее чем на $1 не принимаем");
                        for(new i; i < 5; i ++)
				        {
				            PlayerFish[playerid][i] = 0;
				            FishMassa[playerid][i] = 0;
				        }
				        GiveMoney(playerid, cost);
				        aml(51, playerid, "", "продажу рибы", cost);
				        SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы продали всю рыбу за {73B461}$%i", cost);
					}
			    }
			}
			else SPD(playerid,104,2,"Что продать?","Рыбу","Выбор","Отмена");
		}
		case 107:
		{
		    if(response)
		    {
		        switch(listitem)
				{
			       	case 0:
			        {
			            foreach(new i: Player)
						{
							if(PI[i][pJailTime] > 0)
							{
								f(str,sizeof(str),"%s(%i) | Время: %i мин | Залог: $%i",PN(i),i,PI[i][pJailTime]/60,PI[i][pBailPrice]);
								SCM(playerid,COLOR_GREY,str);
							}
						}
			        }
			        case 1:
			        {
						foreach(new i: Player)
						{
							if(PI[i][pWanted] > 0)
						    {
								f(str,sizeof(str),"%s(%i) - %i-й уровень розыска",PN(i),i,PI[i][pWanted]);
								SCM(playerid,COLOR_GREY,str);
			    			}
						}
			        }
		        }
		    }
		}
		case 111:
		{
			if(response)
			{
				if(pTemp[playerid][SPECTPLAYER]==true) SpecPl(playerid,false);
			}
		}
  		case 115:
		{
		    if(response)
		    {
		        new number = listitem + 1;
		        if(!GetString(OrgInfo[number][oLeader],"Свободна"))
		        {
			        new id = GetPlayerID(OrgInfo[number][oLeader]);
			        if(id != INVALID_PLAYER_ID)
					{
					    SetString(OrgInfo[number][oLeader],"Свободна");
					    f(str,sizeof(str),"** Администратор %s снял вас с поста лидера",PN(playerid));
					    SCM(id,-1,str);
					    f(str,sizeof(str),"[Информация] {FFFFFF}Вы сняли игрока %s с поста лидера",PN(id));
					    SCM(playerid,-1,str);

					    f(str,sizeof(str)," Администратор %s выгнал игрока %s из должности лидерства",PN(playerid),PN(id));
    					SendAdminsMessage(-1,str);
                        PlayerUnleader(id, PN(id));
                        SaveOrg(listitem+1);
			        }
			        else
			        {
						static Name[24],IP[16];
						new Day,Month,Year,Minute,Time,Hour;
						mysql_format(mysql, str, sizeof(str), "SELECT * FROM `OnlineInfo` WHERE `Name` = '%s' LIMIT 1", OrgInfo[number][oLeader]);
						new Cache:result = mysql_query(mysql, str);
						if(cache_num_rows() > 0)
						{
							cache_get_value_name(0, "Name", Name);
							cache_get_value_name(0, "IP", IP);
							//cache_get_value_name_int(0, "Second", Second);
							cache_get_value_name_int(0, "Minute", Minute);
							cache_get_value_name_int(0, "Hour", Hour);
							cache_get_value_name_int(0, "Day", Day);
							cache_get_value_name_int(0, "Month", Month);
							cache_get_value_name_int(0, "Year", Year);
							cache_get_value_name_int(0, "Time", Time);

						    str = "{FFFFFF}";
						    f(str2,sizeof(str2),"{FFFFFF}Ник: {B83434}%s\n",Name);
						    strcat(str,str2);
							f(str2,sizeof(str2),"{FFFFFF}Последнее посещение: {B83434}%i/%02i/%02i в %i:%02i\n",Day,Month,Year,Minute,Hour);
							strcat(str,str2);
							f(str2,sizeof(str2),"{FFFFFF}Время пребывания: {B83434}%i минут(ы/у)\n",Time/60);
							strcat(str,str2);
							if(PI[playerid][pAdmin] > ADM_NONE)
							{
								f(str2,sizeof(str2),"{FFFFFF}IP адрес: {B83434}%s\n",IP);
								strcat(str,str2);
							}
							SPD(playerid,206,0,"Информация о лидере",str,"Снять","Отмена");
							UnLeaderID[playerid] = number;
						}
						else
						{
						    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Об этом игроке нет информации");
						    PlayerUnleader(INVALID_PLAYER_ID,OrgInfo[number][oLeader]);
							f(str,sizeof(str),"Вы сняли игрока %s с поста лидера",OrgInfo[number][oLeader]);
						   	SCM(playerid,-1,str);
						   	SetString(OrgInfo[number][oLeader],"Свободна");
			   				SaveOrg(number);
						}
						cache_delete(result);
			        }
		        }
		        else SCM(playerid, COLOR_GREY, !"Эта лидерка и так свободна");
		    }
		    else {
		    	callcmd::apanel(playerid);
		    }
		}
		case 116:
		{
			if(response)
			{
				switch(listitem)
				{
	            	case 0:OrgInfo[TEAM_LSPD][oMats]+=50000;
	             	case 1:OrgInfo[TEAM_LVPD][oMats]+=50000;
	             	case 2:OrgInfo[TEAM_FBI][oMats]+=50000;
	            	case 3:OrgInfo[TEAM_SFPD][oMats]+=50000;
	               	case 4:OrgInfo[TEAM_MEDICLS][oMats]+=50000;
	            	case 5:OrgInfo[TEAM_MERIALS][oMats]+=50000;
	             	case 6:OrgInfo[TEAM_ARMYLV][oMats]+=50000;
	               	case 7:OrgInfo[TEAM_MEDICSF][oMats]+=50000;
                    case 8:OrgInfo[TEAM_LICENSERS][oMats]+=50000;
		            case 9:OrgInfo[TEAM_RADIO][oMats]+=50000;
	               	case 10:OrgInfo[TEAM_GROOVE][oMats]+=50000;
	              	case 11:OrgInfo[TEAM_VAGOS][oMats]+=50000;
	             	case 12:OrgInfo[TEAM_BALLAS][oMats]+=50000;
            		case 13:OrgInfo[TEAM_CORONOS][oMats]+=50000;
	            	case 14:OrgInfo[TEAM_RIFA][oMats]+=50000;
              		case 15:OrgInfo[TEAM_RM][oMats]+=50000;
            		case 16:OrgInfo[TEAM_YAKUZA][oMats]+=50000;
            		case 17:OrgInfo[TEAM_LCN][oMats]+=50000;
            		case 18:OrgInfo[TEAM_BIKERS][oMats]+=50000;
	            	case 19:OrgInfo[TEAM_ARMY][oMats]+=50000;
	              	case 20:OrgInfo[TEAM_BANK][oMats]+=50000;
	             	case 21:OrgInfo[TEAM_MEDICLV][oMats]+=50000;
	              	case 22:OrgInfo[TEAM_PDLV][oMats]+=50000;
            		case 23:OrgInfo[TEAM_RADIOLV][oMats]+=50000;
					case 24:OrgInfo[TEAM_WOLFS][oMats]+=50000;
				    case 25:OrgInfo[TEAM_RADIOSF][oMats]+=50000;
				    case 26:OrgInfo[TEAM_ARMYSF][oMats]+=50000;
             	}
                UpdateDorm(listitem+1);
				SCM(playerid, COLOR_GREY, !"Вы успешно пополнили склад");
                SaveOrg(listitem+1);
                ShowUpdateStock(playerid);
			}
			else callcmd::apanel(playerid);
		}
		case 124:
		{
      		if(response)
		    {
		        if(SERIU[playerid]==-1)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
			    if(!strlen(inputtextsave)) return SPD(playerid,124,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку причину.\n", !"Принять", !"Отмена");
			    f(str,sizeof(str),"%i %s",SERIU[playerid],inputtextsave);
			    callcmd::warn(playerid, str);
		    }
		}
		case 125:
		{
		    if(response)
		    {
	         	if(SERIU[playerid]==-1)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
		        if(!strlen(inputtextsave)) return SPD(playerid,125,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,Чит )\n\nМаксимум 30 символов!", !"Принять", !"Отмена");
		        new time;
		        static reason[30];
				sscanf(inputtextsave,"p<,>ds[30]",time,reason);
                f(str,sizeof(str),"%i %i %s",SERIU[playerid],time,reason);
			    callcmd::ban(playerid, str);
		    }
		}
		case 126:
		{
		    if(response)
		    {
		        if(SERIU[playerid]==-1)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
			    if(!strlen(inputtextsave)) return SPD(playerid,126,1,"Введите причину","{73B461}Внимание!\n\n{FFFFFF}Введите причину бана IP","Ок","Отмена");
			    f(str,sizeof(str),"%i %s",SERIU[playerid],inputtextsave);
			    callcmd::banip(playerid, str);
		    }
		}
		case 129:
		{
		    if(response)
		    {
		        if(SERIU[playerid]==-1)return SCM(playerid, COLOR_RED, !"ОШИБКА!");
		        if(!strlen(inputtextsave)) return SPD(playerid,129,1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,ДМ )\n\nМаксимум 30 символов!","Посадить","Отмена");
		        new time;
		        static reason[30];
				sscanf(inputtextsave,"p<,>ds[30]",time,reason);
                f(str,sizeof(str),"%i %i %s",SERIU[playerid],time,reason);
			    callcmd::jail(playerid, str);
			}
		}
		case 131:
		{
		    if(!response) return 1;
	        if(HealOffer[playerid] != INVALID_PLAYER_ID)
	        {
	            new offer = HealOffer[playerid];
	            HealOffer[playerid] = INVALID_PLAYER_ID;
	            if(ProxDetectorS(5, playerid, offer, 1))
	            {
				    if(GetMoney(playerid) >= 400)
				    {
			        	J_SetPlayerHealth(playerid, 100);
			        	PI[playerid][pHospital] = 25;
			        	UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
			        	GiveMoney(playerid, -400);
			        	GiveMoney(offer, 200);
			        	aml(50, playerid, PN(offer), "Лечение", 200);
						aml(52, offer, "", "Лечение < разница", 200);
			        	SCMf(offer, COLOR_VALIK, "[Информация] {FFFFFF}Вы вылечили %s за $400.", PN(playerid));
			        	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вас вылечил медик %s за $400", PN(offer));
		        	}
	        	}
	        }
		}
		case 661:
		{
		    if(response)
	        {
	            InJob[playerid] = 1;
	            PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 50);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 198);
				SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись!");
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Для того чтобы работать выберите работу и подойдите к машин и нажимайте клавишу ALT");
	            DeletePVar(playerid, "dilo");
				SetPVarInt(playerid, "mehan", 2);
	        }
		}
		case 662:
		{
		    if(response)
	        {
	        	InJob[playerid] = 0;
	            SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
	            SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись!");
	            DeletePVar(playerid, "dilo");
	            DeletePVar(playerid, "mehan");
	        }
		}
		case 663:
		{
		    if(response)
	        {
	            InJob[playerid] = 1;
	            PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 171);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 11);
				SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись!");
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Используйте /help если вы впервые здесь!");
	        }
		}
		case 664:
		{
		    if(response)
	        {
	        	InJob[playerid] = 0;
	            SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
	            SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы переоделись. Напоминаем, что забрать зарплату нужно у специального места!");
	        }
		}
		case 665:
		{
		    if(response)
	        {
	            switch(listitem)
	            {
                    case 0: SPD(playerid, 668, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {acee4a}фишек{FFFFFF}, которое хотите приобрести.\n\tСтоимость 1-ой фишки: {acee4a}900$\t ", !"Принять", !"Отмена");
					case 1: SPD(playerid, 669, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {acee4a}фишек{FFFFFF}, которое хотите продать.\n\tСтоимость продажи 1-ой фишки: {acee4a}800$\t ", !"Принять", !"Отмена");
	            }
				return 1;
			}
		}
		case 668:
		{
            if(response)
	        {
                if(strval(inputtextsave) < 1) return SPD(playerid, 668, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {FBAD2F}фишек{FFFFFF}, которое хотите приобрести.\n\tСтоимость 1-ой фишки: {FBAD2F}900$\t ", !"Принять", !"Отмена");
                if(GetMoney(playerid) < strval(inputtextsave) * 900) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
               	InvAdd(playerid, Item_CasinoChips, strval(inputtextsave));
               	aml(101, playerid, "", "покупка фишек для казино", Item_CasinoChips, strval(inputtextsave));
               	new money = strval(inputtextsave) * 900;
                GiveMoney(playerid, -money);
                aml(52, playerid, "", "Покупка фишек для казино", money);
                f(str, sizeof(str), "{FFFFFF}Информация:\n\nВы успешно купили {acee4a}%i {FFFFFF}фишек для игры в казино.\nУ вас уже: {acee4a}%i{FFFFFF} фишек.", strval(inputtextsave), GetInvCount(playerid, Item_CasinoChips));
                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Закрыть", !"");
			}
		}
		case 2394:
		{
			if(!response) Kick(playerid);
			if(!strval(inputtextsave)) return SPD(playerid, 2394, DIALOG_STYLE_PASSWORD, !"{BE2D2D}Код доступа", !"{FFFFFF}Введите код доступа в поле ниже:", !"Ввод", !"Отмена");
			if(strval(inputtextsave) == CodeDostup)
			{
				CodeDostupTimer[playerid] = 0;
				f(str_3, 82, "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", PN(playerid));
				mysql_pquery(mysql, str_3, "MysqlLoadingIDAccount", "ds", playerid, PN(playerid));
			}
			else
			{
				SCM(playerid, -1, !"Вы ввели {BE2D2D}не верный{FFFFFF} код доступа.");
				Kick(playerid);
			}
		}
		case 669:
		{
			if(response)
			{
                if(strval(inputtextsave) < 1) return SPD(playerid, 669, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество {FBAD2F}фишек{FFFFFF}, которое хотите продать.\n\tСтоимость продажи 1-ой фишки: {FBAD2F}800$\t ", !"Принять", !"Отмена");
				if(GetInvCount(playerid, Item_CasinoChips) < strval(inputtextsave)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно фишек в инвентаре!");
				InvAdd(playerid, Item_CasinoChips, -strval(inputtextsave));
				aml(102, playerid, "", "обмен фишек на деньги", Item_CasinoChips, strval(inputtextsave));
				new money = strval(inputtextsave) * 800;
				GiveMoney(playerid, money);
				aml(51, playerid, "", "Обмен фишек на деньги", money);
				f(str, sizeof(str), "{FFFFFF}Информация:\n\nВы успешно продали {acee4a}%i {FFFFFF}фишек для игры в казино.\nВы получили {acee4a}%i$.", strval(inputtextsave), strval(inputtextsave) * 85);
                SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Закрыть", !"");
			}
		}
	    case 7551:
	    {
	        if(!response) {
				return 1;
			}

            switch(listitem)
            {
                case 0:
                {
                    if(!TeamDuty{playerid})
					{
						if(PI[playerid][pSkin] != GetPlayerSkin(playerid)) {
							return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы не в своей одежде!", !"Закрыть", !"");
				        }

					    TeamDuty{playerid} = true;
					    f(str, sizeof(str), " %s переодевается в рабочую одежду.", cPN(playerid));
						ProxDetector(25, playerid, str, COLOR_PURPLE);
						SetPlayerColor(playerid, TeamColors[GetTeamID(playerid)]);
						SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
						TogglePlayerControllable(playerid, true);
					}
					else
					{
					    TeamDuty{playerid} = false;
					    SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
					    TogglePlayerControllable(playerid, true);
					    f(str, sizeof(str), " %s переодевается в гражданскую одежду.", cPN(playerid));
						ProxDetector(25.0, playerid, str, COLOR_PURPLE);
		         		SetPlayerColor(playerid, 0xFDFCFC15);
					    if(IsACop(playerid) || IsAArmy(playerid))
						{
						    J_SetPlayerArmour(playerid, 0);
						    PI[playerid][pShield] = 0.0;
							if(UsingShield[playerid]) RemovePlayerAttachedObject(playerid, 7);
						 	ResetGun(playerid);
						}
					}
                }
                case 1:
                {
                    if(!IsACop(playerid) || !TeamDuty{playerid}) return 0;
                    if(PI[playerid][pRank] < 6)return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{A31919}\n\nДоступ к гардеробу S.W.A.T. имеют доступ только работники выше 6-го ранга!\n\n", !"Принять", !"");
                    if(GetPlayerSkin(playerid) == 285) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{A31919}\n\nВы и так уже одеты в форму S.W.A.T.\n\n", !"Принять", !"");
                    SetPlayerSkinEx(playerid, 285);

					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nВы успешно переоделись в форму S.W.A.T.\n\n", !"Принять", !"");
                }
            }
	    }
		case 581:
		{
		    if(!response) return 1;
		    new team = GetTeamID(playerid);
		    switch(listitem)
			{
				case 0:
				{
				    if(!TeamDuty{playerid}) SPD(playerid, 7551, DIALOG_STYLE_LIST, !"", !"- Переодется в {31853A}рабочую{FFFFFF} форму.", !"Принять", !"Отмена");
					else
					{
					    if(IsACop(playerid)) SPD(playerid, 7551, DIALOG_STYLE_LIST, !"", !"- Переодется в {31853A}свою{FFFFFF} одежду.\n- Переодется в {31853A}S.W.A.T.{FFFFFF} форму.", !"Принять", !"Отмена");
					    else SPD(playerid, 7551, DIALOG_STYLE_LIST, !"", !"- Переодется в {31853A}свою{FFFFFF} одежду.", !"Принять", !"Отмена");
					}
				}
				case 1:
				{
				    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Вы не на службе!");
					f(str2, sizeof(str2), "{FFFFFF}На складе: {42B02C}%i{FFFFFF} патронов.", OrgInfo[team][oMats]);
				    if(IsAArmy(playerid)) return SPD(playerid, 582, DIALOG_STYLE_LIST, str2, !"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5 rank]\n{42B02C}-{FFFFFF} Взять бронежилет", !"Принять", !"Отклонить");
					else if(IsACop(playerid) && GetPlayerSkin(playerid) == 285) return SPD(playerid, 582, DIALOG_STYLE_LIST, str2, !"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5 rank]\n{42B02C}-{FFFFFF} Взять бронежилет\n{42B02C}-{FFFFFF} Взять набор обьектов [5 rank]\n{42B02C}-{FFFFFF} Взять Тазер 10пт. [ 600 пт. ]\n{42B02C}-{FFFFFF} Взять набор {31853A}S.W.A.T.{FFFFFF} [ 500 пт. ]", !"Принять", !"Отклонить");
				    else if(IsACop(playerid)) return SPD(playerid, 582, DIALOG_STYLE_LIST, str2, !"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5 rank]\n{42B02C}-{FFFFFF} Взять бронежилет\n{42B02C}-{FFFFFF} Взять набор обьектов [5 rank]\n{42B02C}-{FFFFFF} Взять Тазер 10пт. [ 600 пт. ]", !"Принять", !"Отклонить");
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете пользоваться этим разделом!");
				}
			}
		}
		case 582:
		{
		    if(response)
			{
			    new team = GetTeamID(playerid);
			    switch(listitem)
				{
					case 0:
					{
                        if(OrgInfo[team][oMats] < 120) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
						GiveGun(playerid,3,1);
						GiveGun(playerid,24,50);
						GiveGun(playerid,31,150);
                        if(PI[playerid][pRank] < 2) return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Доступно с 2 ранга!");
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно взяли набор оружия.");
						OrgInfo[team][oMats] -= 120;
						if(GetTeamID(playerid) == TEAM_FBI || GetTeamID(playerid) == TEAM_SFPD) GiveGun(playerid,34,15);
						if(IsACop(playerid)) GiveGun(playerid,25,30);
						if(PI[playerid][pMember]==4)GiveGun(playerid,17,10);
					}
					case 1:
					{
                        if(OrgInfo[team][oMats] < 30) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
					    if(IsAArmy(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В армии нету щитов!");
					    if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Доступно с 5 ранга!");
						PI[playerid][pShield] = 100.0;
						OrgInfo[team][oMats] -= 30;
						if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
						SCM(playerid, -1, !"[Информация] {FFFFFF}У вас есть щит. Зажмите клавижу {33CCFF}Быстрого бега{FFFFFF} и клавишу {33CCFF}медленной ходьбы{FFFFFF} чтобы его использовать.");
					}
					case 2:
					{
                        if(OrgInfo[team][oMats] < 40) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
						J_SetPlayerArmour(playerid, 100);
					    OrgInfo[team][oMats] -= 40;
					    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно получили бронежилет.");
					}
					case 3:
					{
                        if(OrgInfo[team][oMats] < 50) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
						if(PI[playerid][pRank]<5)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваши возможности не позволяют взять обьекты!");
					    PI[playerid][pObjikt]=10;
					    OrgInfo[team][oMats] -= 50;
					    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно получили взяли 10 обьектов для установки. (/putobject)");
					}
					case 4:
					{
                        if(OrgInfo[team][oMats] < 600) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
						if(PI[playerid][pRank]<5)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваши возможности не позволяют использовать тазер!");
					    if(OrgInfo[team][oMats]<600) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе оргранизации не достаточно патронов!");
					    OrgInfo[team][oMats] -= 600;
					    GiveGun(playerid, 23, 10);
					    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно взяли 10 патронов для тазера.");
					}
					case 5:
					{
                        if(OrgInfo[team][oMats] < 500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе организации недостаточно патронов!");
						if(PI[playerid][pRank]<6)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваши возможности не позволяют использовать тазер!");
						if(GetPlayerSkin(playerid)!=285)return 0;
						OrgInfo[team][oMats] -= 500;

                        GiveGun(playerid, 17, 15);
						GiveGun(playerid, 34, 15);
						GiveGun(playerid, 30, 120);
						InvAdd(playerid, Item_Mask, 3);
						aml(101, playerid, "", "взял набор оружия", Item_Mask, 3);

					    SPD(playerid, 0, 0, !"", !"{FFFFFF}\n\nВы успешно взяли набор оружия для S.W.A.T.\n\n", !"Принять", !"");
					}
				}
			}
		}
		case 3303:
		{
		    if(!response) return 1;
		    Eat(playerid, listitem);
			callcmd::eat(playerid);
		}
		case 705:
	    {
     		if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, 706, DIALOG_STYLE_LIST, !"Важные места", !"[LS] Мэрия\n[LS] Центр занятости\n[LS] Больница\n[SF] Больница\n[LV] Больница\n[SF] Автошкола\n[LS] Вокзал (Unity Station)\n[LS] Пирс\n[LS] Центральный банк\n[LS] Штрафстоянка (Забрать машину)\n[LS] Офис налоговой службы\n[LS] Военкомат\n[LV] Военкомат\n[SF] Военкомат\n[LS] Черный рынок\n[LS] Спортивный зал\n[LV] Спортивный зал\n[LV] Покупка колец\n[LV] Церковь\n[LS] RCPD\n[LS] Лотерейный магазин\n{73B461}Следующая страница:", !"Выбор", !"Отмена");
				case 1: SPD(playerid, 707, DIALOG_STYLE_LIST, !"Трудоустройство", !"[1] Найти близлежащую работу\n{FDB24A}[2] Фермерское предприятие (ФЕРМА)\n{FFFFFF}[3] Производственный цех (ЗАВОД)\n[4] Разгрузочная станция (ГРУЗЧИКИ)\n{FDB24A}[5] Развозчики пиццы LS\n{FDB24A}[6] Развозчики пиццы LV\n[7] Найти другую работу (ДРУГИЕ РАБОТЫ)", !"Выбор", !"Отмена");
				case 2: SPD(playerid, 708, DIALOG_STYLE_LIST, !"По работе", !"[LS] Мусоровозы\n[LV] Мусоровозы\n[LS] Металловозы\n[LV] Металловозы\n[LS] Дальнобойщики (Гандиллер)\n[LV] Дальнобойщики (Гандиллер)\n[LS] Дальнобойщики (Бензовозчики)\n[LV] Дальнобойщики (Бензовозчики)\n[LS/LV/SF] Машины механиков\n[LS] Таксопарк\n[LV] Таксопарк\n[LS] Стоянка инкассаторов\n[LV] Стоянка инкассаторов\n[LS] Продуктовозы\n[LV] Продуктовозы\n{73B461}Следующая страница:", !"Выбор", !"Отмена");
				case 3: SPD(playerid, 709, DIALOG_STYLE_LIST, !"Транспорт", !"{8E908E}[LS] Автосалон Эконом класса\n{26B260}[LV] Автосалон Среднего класса\n{EDAD2E}[SF] Автосалон Премиум класса/мототранспорт\n{DD564D}[LV] Авиарынок\n{D63227}[LS] Лодочная\n{EDAD2E}[LV] Автосалон Люкс класса", !"Выбор", !"Отмена");
 				case 4: SPD(playerid, 746, DIALOG_STYLE_LIST, !"Разное", !"[LS] Свалка\n[LV] Свалка\n[LV] Старый аэродром\n[LS] Лодочная\n{DF8721}[LS] Склад фермы\n{DF8721}[LS] Склад разгрузочной станции\n{892626}[SF] Автобазар\n[LV] Казино 4 дракона\n[SF] Ф.Служба регистрации номеров [ФСПУН]\n[LV] Авторынок поддельных авто\n{3085D5}[LS] Концертный ЗАЛ\n{2F9928}[LS] Центральный рынок\n{2F9928}[LS] ЖК Аксиома {FFFFFF}( Семьи )\n{CEE948}[SF] Аренда суперкаров\n{CEE948}[RC] Магазин велосипедов\n[LV] Лодочный рынок\n[SF] Психиатрическая больница\n[LS] Прыжки с парашютом\n[SF] Прыжки с парашютом\n[LV] Прыжки с парашютом\n{4CF24C}[LV] Военный поселок\n{FFFFFF}[LS] Аренда велосипедов\n[LS] Колесо обозрения\n[LS] Аренда вертолётов\n[LS] Ферма [{A2F777}Добыча ресурсов{FFFFFF}]\n[LV] Шахта [{A2F777}Добыча ресурсов{FFFFFF}]", !"Выбор", !"Отмена");
				case 5: SPD(playerid, 2541, DIALOG_STYLE_LIST, !"Автомастерские", !"[LS] Салон TransFender\n[LS] Loco Low Co.\n[SF] Салон TransFender\n[SF] Wheel Arch Angels", !"Выбор", !"Отмена");
				case 6: SPD(playerid, 2544, DIALOG_STYLE_LIST, !"Положение организаций", !"{6666FF}The Rifa\n{009327}Grove Street\n{D1DB1C}Los-Santos Vagos\n{CC00CC}East Side Ballas\n{00FFE2}Varios Los Aztecas\n{BA541D}Warlock MC\n{960202}Yakuza Mafia\n{993366}La Cosa Nostra\n{336699}Russian Mafia\n{7F6464}Night Wolfs", !"Выбор", !"Отмена");
				case 7:
				{
				    new Float:pX, Float:pY, Float:pZ;
				    new Float:Item, Float:minS;
				    new Posi;
				    GetPlayerPos(playerid, pX, pY, pZ);
					minS = PointToPoint(pX, pY, pZ, BizInfo[19][bEnter_X], BizInfo[19][bEnter_Y] ,BizInfo[19][bEnter_Z]);
					Posi = 19;
				    for(new i = 0; i < OWNABLEBIZES; i++)
					{
					    if(BizInfo[i][bState] == 6)
						{
						    Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшей АЗС успешно отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
				case 8:
				{
				    new Float:pX, Float:pY, Float:pZ;
				    new Float:Item, Float:minS;
				    new Posi;
				    GetPlayerPos(playerid, pX, pY, pZ);
					minS = PointToPoint(pX, pY, pZ, BizInfo[6][bEnter_X], BizInfo[6][bEnter_Y], BizInfo[6][bEnter_Z]);
					Posi = 6;
				    for(new i = 0; i < OWNABLEBIZES; i++)
					{
					    if(BizInfo[i][bState] == 2)
						{
						    Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего магазина 24/7 успешно отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
				case 9:
				{
				    new Float:pX, Float:pY, Float:pZ;
				    new Float:Item, Float:minS;
				    new Posi;
				    GetPlayerPos(playerid, pX, pY, pZ);
					minS= PointToPoint(pX, pY, pZ, BizInfo[100][bEnter_X], BizInfo[100][bEnter_Y], BizInfo[100][bEnter_Z]);
					Posi = 100;
				    for(new i = 0; i < OWNABLEBIZES; i++)
					{
					    if(BizInfo[i][bState] == 9)
						{
						    Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего магазина аксессуаров успешно отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
				case 10:
				{
				    new Float:pX, Float:pY, Float:pZ;
				    new Float:Item, Float:minS;
				    new Posi;
				    GetPlayerPos(playerid, pX, pY, pZ);
					minS = PointToPoint(pX, pY, pZ, BizInfo[106][bEnter_X], BizInfo[106][bEnter_Y], BizInfo[106][bEnter_Z]);
					Posi = 106;
				    for(new i = 0; i < OWNABLEBIZES; i++)
					{
					    if(BizInfo[i][bState] == 7)
						{
						    Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшей закусочной успешно отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
                case 11:
				{
					new Float:pX, Float:pY, Float:pZ;
					new Float:Item, Float:minS;
					new Posi;
					GetPlayerPos(playerid, pX, pY, pZ);
					minS= PointToPoint(pX, pY, pZ, BizInfo[106][bEnter_X], BizInfo[106][bEnter_Y], BizInfo[106][bEnter_Z]);
					Posi = 106;
					for(new i = 0; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == 3)
						{
							Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего магазина одежды отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
			    case 12:
				{
					new Float:pX, Float:pY, Float:pZ;
					new Float:Item, Float:minS;
					new Posi;
					GetPlayerPos(playerid,pX,pY,pZ);
					minS = PointToPoint(pX, pY, pZ, BizInfo[106][bEnter_X], BizInfo[106][bEnter_Y], BizInfo[106][bEnter_Z]);
					Posi = 106;
					for(new i = 0; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == 8)
						{
							Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшей аренды отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
			    case 13:
				{
					new Float:pX, Float:pY, Float:pZ;
					new Float:Item, Float:minS;
					new Posi;
					GetPlayerPos(playerid, pX, pY, pZ);
					minS = PointToPoint(pX, pY, pZ, BizInfo[106][bEnter_X], BizInfo[106][bEnter_Y], BizInfo[106][bEnter_Z]);
					Posi = 106;
					for(new i = 0; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == B_GUNSHOP)
						{
							Item = PointToPoint(pX, pY, pZ, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]);
							if(Item < minS)
							{
								minS = Item;
								Posi = i;
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего магазина оружия отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, BizInfo[Posi][bEnter_X], BizInfo[Posi][bEnter_Y], BizInfo[Posi][bEnter_Z]);
					return 1;
				}
				case 14:
				{
                    new Float:pX, Float:pY, Float:pZ;
					new Float:Item, Float:minS;
					new Posi;
					GetPlayerPos(playerid, pX, pY, pZ);
					for(new i = 0; i < sizeof(Bankomats); i++) minS = PointToPoint(pX, pY, pZ, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2]);
					Posi = 56;
					for(new i = 0; i < sizeof(Bankomats); i++)
					{
						Item = PointToPoint(pX, pY, pZ, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2]);
						if(Item < minS)
						{
						    minS = Item;
						    Posi = i;
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего банкомата успешно отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, Bankomats[Posi][0], Bankomats[Posi][1], Bankomats[Posi][2]);
					return 1;
				}
				case 15:
				{
                    new Float:pX, Float:pY, Float:pZ;
					new Float:Item, Float:minS;
					new Posi;
					GetPlayerPos(playerid, pX, pY, pZ);
					for(new i = 0; i < MAX_PARKING; i++) minS = PointToPoint(pX, pY, pZ, parking[i][pEnter_y], parking[i][pEnter_y], parking[i][pEnter_z]);
					Posi = 39;
					for(new i = 0; i < MAX_PARKING; i++)
					{
						Item = PointToPoint(pX, pY, pZ, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]);
						if(Item < minS)
						{
						    minS = Item;
						    Posi = i;
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Местоположение ближайшего паркинга успешно отмечено в вашем GPS.");
					EnableGPSForPlayer(playerid, Bankomats[Posi][0], Bankomats[Posi][1], Bankomats[Posi][2]);
					return 1;
				}
				case 16:
				{
				    SPD(playerid, 7844, DIALOG_STYLE_LIST, !"", !"1. Собиратели (Ежедневное) [{ECA63C}20.15{FFFFFF} до {ECA63C}21.00{FFFFFF}]", !"Выбор", !"Отмена");
				    return 1;
				}
				case 17:
				{
					EnableGPSForPlayer(playerid, 1420.4176, -1685.8624, 13.5469);
					return 1;
				}
				case 18:
				{
                    if(GetMoney(playerid) < 500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
                  	if(GetPlayerHouse(playerid) == -1) return SCM(playerid, -1, !">> {BE2D2D}Вы не проживаете в доме!");
					ShowPlayerHome(playerid, 6667);
                  	return 1;
				}
				case 19:
				{
                    EnableGPSForPlayer(playerid, 1643.14, 128.81, 30.44);
                    return 1;
				}
				case 20:
				{
					if(InJob[playerid] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете отключать gps во время выполнения работы!");
                    DisablePlayerRaceCheckpoint(playerid);
                    DisablePlayerCheckpoint(playerid);
                    return 1;
				}
			}
			return 1;
	    }
	    case 6667:
	    {
	    	if(!response) return 1;
	    	new house = ShowHouse[playerid][listitem];
          	GiveMoney(playerid, -500);
          	aml(51, playerid, "", "отметка дома на карте", 500);
          	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Ваш дом отмечен на миникарте!\n\n", !"Принять", !"");
            EnableGPSForPlayer(playerid, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]);
	    }
	   	case 745:
	    {
		    if(response)
		    {
				switch(listitem)
				{
					case 0: EnableGPSForPlayer(playerid,1308.3258,379.0888,19.5625);
					case 1: EnableGPSForPlayer(playerid,1037.2845,-1028.2238,32.1016);
					case 2: EnableGPSForPlayer(playerid,1839.9128,-1442.9911,13.5607);
					case 3: EnableGPSForPlayer(playerid,1933.6646,-1862.0732,13.5619);
				}
		    }
			else callcmd::gps(playerid);
		}
	    case 746:
	    {
		    if(!response) return callcmd::gps(playerid);
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid, 2200.9934, -1977.1194, 13.5576);
				case 1: EnableGPSForPlayer(playerid, 178.4099, 1101.4073, 16.4498);
				case 2: EnableGPSForPlayer(playerid, 398.8276, 2529.3464, 16.5675);
				case 3: EnableGPSForPlayer(playerid, 150.9107, -1812.6412, 3.7416);
				case 4: EnableGPSForPlayer(playerid, -48.8524, 26.7216, 3.1172);
				case 5: EnableGPSForPlayer(playerid, 1976.6340, -2029.4700, 13.5469);
				case 6: EnableGPSForPlayer(playerid, -2154.3662, -970.6815, 32.0234);
				case 7: EnableGPSForPlayer(playerid, 2020.8899, 1007.6807, 10.8203);
				case 8: EnableGPSForPlayer(playerid, -2280.7190, -106.1008, 36.4639);
				case 9: EnableGPSForPlayer(playerid, -2466.2129, 2250.1025, 4.8010);
				case 10: EnableGPSForPlayer(playerid, 642.9573, -1356.3948, 13.5653);
				case 11: EnableGPSForPlayer(playerid, 1126.4397, -1413.7496, 13.5908);
				case 12: EnableGPSForPlayer(playerid, 1757.1239, 391.5190, 20.1436);
				case 13: EnableGPSForPlayer(playerid, -2192.7070, 993.6327, 80.0000);
				case 14: EnableGPSForPlayer(playerid, 1234.2472, 213.0904, 19.5547);
				case 15: EnableGPSForPlayer(playerid, 2288.7483, 618.1090, 10.8203);
				case 16: EnableGPSForPlayer(playerid, -2154.3425, 644.6054, 52.3672);
				case 17: EnableGPSForPlayer(playerid, 1449.6135, -2284.7063, 13.5469);
				case 18: EnableGPSForPlayer(playerid, -1409.4084, -298.2005, 14.1484);
				case 19: EnableGPSForPlayer(playerid, 1673.0103, 1447.5935, 10.7867);
				case 20: EnableGPSForPlayer(playerid, -172.7641, 2494.9988, 23.2778);
				case 21: EnableGPSForPlayer(playerid, 1866.0593, -1394.1477, 13.4955);
				case 22: EnableGPSForPlayer(playerid, 383.5626, -2030.6344, 7.8359);
				case 23: EnableGPSForPlayer(playerid, 1962.2065, -2190.7598, 13.5469);
				case 24: EnableGPSForPlayer(playerid, -256.7696, -1362.8536, 9.4421);
				case 25: EnableGPSForPlayer(playerid, 523.8312, 848.2282, -42.9189);
			}
		}
		case 747:
	    {
		    if(response)
		    {
				switch(listitem)
				{
					case 0: EnableGPSForPlayer(playerid,1498.36, -1585.93, 13.55);
					case 1: EnableGPSForPlayer(playerid,2340.61, -1752.12, 13.39);
					case 2: EnableGPSForPlayer(playerid,2256.74, -1753.92, 13.38);
					case 3: EnableGPSForPlayer(playerid,2287.6665,607.6643,10.6760);
					case 4: EnableGPSForPlayer(playerid,1540.15, -1276.03, 17.41);
					case 5: EnableGPSForPlayer(playerid,-2013.69, -37.50, 35.29);
					case 6: EnableGPSForPlayer(playerid,1283.02, -1329.47, 13.38);
					case 7: EnableGPSForPlayer(playerid,2025.27, 1007.67, 10.82);
					case 8: EnableGPSForPlayer(playerid,2025.27, 1007.67, 10.82);
	                case 9: EnableGPSForPlayer(playerid,2018.5604, 1916.4635, 12.6382);
				}
		    }
			else callcmd::gps(playerid);
		}
		case 6446:
		{
			if(response)
			{
				if(pSportZal[playerid])
				{
					SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже переоделись");
					return 1;
				}
				pSportZal[playerid] = 1;
	   			PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
				if(PI[playerid][pSex]==1) SetPlayerSkinEx(playerid, 80);
				else SetPlayerSkinEx(playerid,192);
				SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Вы начали тренировку, бейте по грушам для прокачки своего навыка.");
				SCM(playerid, COLOR_BLUE, !"[Подсказка] {FFFFFF}Используйте клавиши PKM+F для того чтобы бить грушу.");
			}
			else
			{
				if(pSportZal[playerid])
				{
					pSportZal[playerid] = 0;
					SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
					SCM(playerid, COLOR_LIGHTBLUE, !"[Ошибка] {FFFFFF}Вы закончили тренировку!");
				}
				else SCM(playerid, COLOR_LIGHTBLUE, !"[Ошибка] {FFFFFF}Вы не начинали тренировку!");
			}
		}
		case 749:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: EnableGPSForPlayer(playerid,2193.1531,1676.9701,12.3672);
				    case 1: EnableGPSForPlayer(playerid,2021.8496,1007.7031,10.8203);
				    case 2: EnableGPSForPlayer(playerid,2235.3843,1285.6902,10.8203);
				    case 3: EnableGPSForPlayer(playerid,2087.3521,1450.7063,10.8203);
				    case 4: EnableGPSForPlayer(playerid,2331.9592,2162.7727,10.8260);
				    case 5: EnableGPSForPlayer(playerid,2637.4163,2349.4236,10.6719);
				}
			}
			else callcmd::gps(playerid);
		}
		case 748:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: EnableGPSForPlayer(playerid,2088.9707,-1905.5059,13.5469);
					case 1: EnableGPSForPlayer(playerid,876.6775,-1567.1252,13.5391);
					case 2: EnableGPSForPlayer(playerid,2177.6282,961.0814,10.8203);
					case 3: EnableGPSForPlayer(playerid,-206.7107,1086.9602,19.7422);
				}
			}
		}
		case 2545://////syda
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0:EnableGPSForPlayer(playerid,2166.9863,-1672.4226,15.0754);
				    case 1:EnableGPSForPlayer(playerid,2175.9934,-1503.9364,23.9520);
				    case 2:EnableGPSForPlayer(playerid,1814.4722,-1995.8588,13.5544);
				    case 3:EnableGPSForPlayer(playerid,2286.6912,-2012.8440,13.5447);
				    case 4:EnableGPSForPlayer(playerid,2333.4478,-1922.6251,12.2991);
				}
			}
			else callcmd::gps(playerid);
		}
		case 2544://////syda
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0:EnableGPSForPlayer(playerid,2186.7344,-1765.5979,13.0466);
				    case 1:EnableGPSForPlayer(playerid,2463.9795,-1661.3423,12.9700);
				    case 2:EnableGPSForPlayer(playerid,2796.6465,-1599.3337,10.6008);
				    case 3:EnableGPSForPlayer(playerid,2000.4108,-1114.4928,26.4501);
				    case 4:EnableGPSForPlayer(playerid,2501.9011,-2010.0476,12.9713);
				    case 5:EnableGPSForPlayer(playerid,681.7215,-477.4029,16.0072);
				    case 6:EnableGPSForPlayer(playerid,-2460.8835,134.6681,35.1719);
				    case 7:EnableGPSForPlayer(playerid,1515.0060,2773.2886,10.3456);
				    case 8:EnableGPSForPlayer(playerid,941.9240,1731.5309,8.5204);
				    case 9:EnableGPSForPlayer(playerid,2473.1699,-1422.2638,28.8397);
				}
			}
			else callcmd::gps(playerid);
		}
		case 2541:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0:EnableGPSForPlayer(playerid,1041.3918,-1028.2256,32.1016);
				    case 1:EnableGPSForPlayer(playerid,2645.0007,-2037.3738,13.5540);
				    case 2:EnableGPSForPlayer(playerid,-1935.7690,235.5206,34.3125);
				    case 3:EnableGPSForPlayer(playerid,-2714.4827,217.3856,4.2921);
				}
			}
			else callcmd::gps(playerid);
		}
	  	case 706:
	    {
		    if(response)
		    {
				switch(listitem)
				{
					case 0: EnableGPSForPlayer(playerid,1495.1422,-1287.5870,14.5099);
					case 1:	EnableGPSForPlayer(playerid,1289.0641,-1271.5160,13.5400);
					case 2:	EnableGPSForPlayer(playerid,1178.1593,-1323.1184,14.1063);
					case 3:	EnableGPSForPlayer(playerid,-2666.6680,580.7857,14.4609);
					case 4: EnableGPSForPlayer(playerid,1641.8849,1833.5286,10.8508);
					case 5:	EnableGPSForPlayer(playerid,-2027.4399,-73.7133,34.8768);
					case 6:	EnableGPSForPlayer(playerid,1755.9362,-1893.2240,13.5566);
					case 7:	EnableGPSForPlayer(playerid,369.8604,-2042.5201,7.6719);
					case 8:	EnableGPSForPlayer(playerid,1481.0375,-1768.9550,18.7929);
	    			case 9:	EnableGPSForPlayer(playerid,1537.9470,-1015.9632,24.0781);
	    			case 10: EnableGPSForPlayer(playerid,1530.5771,-1072.1592,25.0625);
	    			case 11: EnableGPSForPlayer(playerid,307.3427,-67.0545,1.4297);
	    			case 12: EnableGPSForPlayer(playerid,1168.6149,1364.8787,10.8125);
	    			case 13: EnableGPSForPlayer(playerid,-1820.91, 162.65, 15.13);
	    			case 14: EnableGPSForPlayer(playerid,2539.2019,-1461.4839,24.0207);
	    			case 15: EnableGPSForPlayer(playerid,2229.631835, -1721.709350, 13.565642);
	    			case 16: EnableGPSForPlayer(playerid,2095.5288,2493.2524,14.8390);
	    			case 17: EnableGPSForPlayer(playerid,2520.0012,918.5114,11.0234);//
	    			case 18: EnableGPSForPlayer(playerid,2491.4995,918.3869,11.0234);//
	    			case 19: EnableGPSForPlayer(playerid,631.9218,-571.9485,16.3359);
	    			case 20: EnableGPSForPlayer(playerid,1417.42, -1702.58, 13.54);
	    			case 21: SPD(playerid, 766, 2, "Важные места", "[LS] Станция тех.обслуживания\n[LV] Вокзал\n[LV] Штрафстоянка (Забрать машину)\n[LV] Полиция LV\n[LV] Радиостанция\n[LV] Банковское отделение\n[LV] Авиашкола\n[SF] Вокзал\n[SF] Полицейский участок\n[LS] Военная база\n[SF] Авианосец\n[LV] Зона 51\n[LS] Радиостанция\n[SF] Радиостанция\n[SF] Информационный центр\n\n[SF] Банковское отделение\n{73B461}Предыдущая страница", "Выбор", "Отмена");
				}
		    }
			else callcmd::gps(playerid);
		}
		case 766:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: EnableGPSForPlayer(playerid,191.1035,-240.4176,1.5781);
	    			case 1: EnableGPSForPlayer(playerid,2798.6843,1313.4534,10.7500);
	    			case 2: EnableGPSForPlayer(playerid,2474.7954,2513.2712,10.8056);
	    			case 3: EnableGPSForPlayer(playerid,2286.8362,2427.5806,10.8203);
	    			case 4: EnableGPSForPlayer(playerid,2615.0793,1172.7882,10.7624);
	    			case 5: EnableGPSForPlayer(playerid,2375.5925,2308.5747,8.1406);
	    			case 6: EnableGPSForPlayer(playerid,2614.4299,1085.8958,10.8203);
	    			case 7: EnableGPSForPlayer(playerid,2427.6968,1662.9028,10.8203);//
	    			case 8: EnableGPSForPlayer(playerid,-1629.0847,726.1740,14.1306);
	    			case 9: EnableGPSForPlayer(playerid,2716.5886,-2404.9148,13.4687);
	    			case 10: EnableGPSForPlayer(playerid,-1529.7744,484.6951,7.1797);
	    			case 11: EnableGPSForPlayer(playerid,-18.5305,2066.5547,17.4453);
	    			case 12: EnableGPSForPlayer(playerid,1627.8331,-1722.0530,13.5372);
	    			case 13: EnableGPSForPlayer(playerid,-1941.4008,459.7771,35.1719);
	    			case 14: EnableGPSForPlayer(playerid,-2240.7253,576.0756,35.1719);
	    			case 15: EnableGPSForPlayer(playerid, -1703.9647,785.6906,25.7360);
	    			case 16: SPD(playerid, 706, 2, "Важные места", "[LS] Мэрия\n[LS] Центр занятости\n[LS] Больница\n[SF] Больница\n[LV] Больница\n[SF] Автошкола\n[LS] Вокзал (Unity Station)\n[LS] Пирс\n[LS] Центральный банк\n[LS] Штрафстоянка (Забрать машину)\n[LS] Офис налоговой службы\n[LS] Военкомат\n[LV] Военкомат\n[SF] Военкомат\n[LS] Черный рынок\n[LS] Спортивный зал\n[LV] Спортивный зал\n[LV] Покупка колец\n[LV] Церковь\n[LS] RCPD\n[LS] Лотерейный магазин\n{73B461}Следующая страница:", "Выбор", "Отмена");
				}
			}
		}
		case 707:
	    {
		    if(response)
		    {
				switch(listitem)
				{
					case 0: FindTheNearestJob(playerid);
					case 1: EnableGPSForPlayer(playerid,-27.0336,163.0780,2.4297);
					case 2: EnableGPSForPlayer(playerid,-86.1893,-305.8608,1.4219);
					case 3: EnableGPSForPlayer(playerid,1970.6949,-1964.2100,13.5742);
					case 4: EnableGPSForPlayer(playerid,645.7996,-1562.8087,15.5497);
					case 5: EnableGPSForPlayer(playerid,1736.3821,2197.5181,10.8203);
					case 6: EnableGPSForPlayer(playerid,1289.0641,-1271.5160,13.5400);
				}
		    }
			else callcmd::gps(playerid);
		}
		case 708:
	    {
		    if(response)
		    {
				switch(listitem)
				{
					case 0: EnableGPSForPlayer(playerid,2234.3591,-2215.4282,13.5469);
					case 1: EnableGPSForPlayer(playerid,2235.5808,2773.1963,10.6865);
					case 2: EnableGPSForPlayer(playerid,2484.4131,-2541.2256,13.5746);
					case 3: EnableGPSForPlayer(playerid,1070.3298,1944.0189,10.8203);
					case 4: EnableGPSForPlayer(playerid,-235.2994,-242.9492,1.4219);
					case 5: EnableGPSForPlayer(playerid,2775.0811,913.4783,10.8284);
					case 6: EnableGPSForPlayer(playerid,2296.7988,-2329.5461,13.5469);
					case 7: EnableGPSForPlayer(playerid,292.4207,1410.4541,10.1432);
					case 8: SPD(playerid,0,0,"Информация","{FFFFFF}Машины механиков вы можете найти\nУ одной из автомастерских штата.\nИщите их в /gps -> Важные места!", !"Закрыть", !"");
					case 9: EnableGPSForPlayer(playerid,1107.1779,-1740.9813,13.3984);
					case 10: EnableGPSForPlayer(playerid,2167.4365,983.2794,10.6748);
					case 11: EnableGPSForPlayer(playerid,1390.4061,-1649.0326,13.3733);
					case 12: EnableGPSForPlayer(playerid,2420.4075,2285.1882,10.8203);
					case 13: EnableGPSForPlayer(playerid,925.6722,-1222.4194,16.9771);
					case 14: EnableGPSForPlayer(playerid,1608.1821,2282.4753,10.8266);
					case 15: SPD(playerid, 2762, 2, "GPS Навигатор", "[SF] Таксопарк\n[SF] Стоянка автобусов\n[SF] Стоянка мусоровозов\n[SF] Свалка\n{73B461}Предыдущая страница", "Выбор", "Отмена");
				}
		    }
			else callcmd::gps(playerid);
		}
	 	case 2762:
		{
		    if(response)
		    {
				switch(listitem)
				{
					case 0: EnableGPSForPlayer(playerid,-2258.7891,119.7371,34.9912);
					case 1: EnableGPSForPlayer(playerid,-2198.7729,312.1454,34.9906);
					case 2: EnableGPSForPlayer(playerid,-2487.1482,369.5434,35.1219);
					case 3: EnableGPSForPlayer(playerid,-1940.5480,-1790.3243,31.7447);
					case 4: SPD(playerid, 708, 2, "По работе", "[LS] Мусоровозы\n[LV] Мусоровозы\n[LS] Металловозы\n[LV] Металловозы\n[LS] Дальнобойщики (Гандиллер)\n[LV] Дальнобойщики (Гандиллер)\n[LS] Дальнобойщики (Бензовозчики)\n[LV] Дальнобойщики (Бензовозчики)\n[LS/LV/SF] Машины механиков\n[LS] Таксопарк\n[LV] Таксопарк\n[LS] Стоянка инкассаторов\n[LV] Стоянка инкассаторов\n[LS] Продуктовозы\n[LV] Продуктовозы\n[LS] Склад продуктов\n{73B461}Следующая страница:", "Выбор", "Отмена");
				}
			}
		}
		case 709:
	    {
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: EnableGPSForPlayer(playerid, -489.72, -567.90, 23.90);
					case 1: EnableGPSForPlayer(playerid, 947.97, 2183.02, 10.84);
					case 2: EnableGPSForPlayer(playerid, -2665.55, -60.28, 4.33);
					case 3: EnableGPSForPlayer(playerid, 293.2806, 2500.5620, 16.4844);
					case 4: EnableGPSForPlayer(playerid, 212.53, -1884.62, 1.43);
					case 5: EnableGPSForPlayer(playerid, -515.6501,2597.1763,53.4141);
	            }
			}
	        else callcmd::gps(playerid);
		}
		case 799:
		{
			if(!response)
			    return 1;

			switch(listitem)
			{
			    case 0:
			    {
			        if(PI[playerid][pFeFinder])
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			        else
			        {
			            if(GetMoney(playerid) < 85000)
							return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			            if(PI[playerid][pLevel] < 3)
							return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"Улучшение можно приобрести с 3 лвл.", !"Ок", !"");
			            PI[playerid][pFeFinder] = 1;
			            UpdatePlayerDataInt(playerid, "FeFinder", PI[playerid][pFeFinder]);
 						GiveMoney(playerid, -85000);
 						aml(52, playerid, "", "Улучшение: Шумахер", 85000);
        				Show2UpdateSettings(playerid);
			        }
			    }
			    case 1:
			    {
			        if(PI[playerid][pPack])
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация","{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			        else
			        {
			            if(GetMoney(playerid) < 100000)
							return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			            if(PI[playerid][pLevel] < 4)
							return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация","Улучшение можно приобрести с 4 лвл.", !"Ок", !"");
			            PI[playerid][pPack] = 1;
			            UpdatePlayerDataInt(playerid, "Pack", 1);
 						GiveMoney(playerid, -100000);
 						aml(52, playerid, "", "Улучшение: Халявщик", 100000);
        				Show2UpdateSettings(playerid);
			        }
			    }
			    case 2:
			    {
			        if(PI[playerid][pMore])
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			        else
			        {
			            if(GetDonate(playerid) < 2000)
							return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно az монет. Вы можете пополнить свой баланс [/donate]");
			            PI[playerid][pVirMoney] -= 2000;
			            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
			            aml(54, playerid, "", "Улучшение: Бизнесмен", 2000);
			            PI[playerid][pMore] = 1;
			            UpdatePlayerDataInt(playerid, "More", PI[playerid][pMore]);
			            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\nбыть владельцем 5-ти бизнесов.\n\n", !"Принять", !"");
			            SCMAllf(-1, "<<< Игрок {FF6347}%s(%i){FFFFFF} купил улучшение {FF6347}'Бизнесмен'{FFFFFF}, теперь он может владеть 5-ми бизнесами.", PN(playerid), playerid);
					}
			    }
                case 3:
			    {
			        if(PI[playerid][pPlanshet])
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			        else
			        {
			            if(GetMoney(playerid) < 2000000)
							return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			            PI[playerid][pPlanshet] = 1;
			            UpdatePlayerDataInt(playerid, "Planshet", PI[playerid][pPlanshet]);
 						GiveMoney(playerid, -2000000);
 						aml(52, playerid, "", "Улучшение: Планшет", 2000000);
        				Show2UpdateSettings(playerid);
			        }
			    }
			    case 4:
			    {
			        if(PI[playerid][pMoreHouses])
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", !"{FFFFFF}\n\nУ вас уже есть это улучшение!\n\n", !"Ок", !"");
			        else
			        {
			            if(GetDonate(playerid) < 2000)
							return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно az монет. Вы можете пополнить свой баланс [/donate]");
			            PI[playerid][pVirMoney] -= 2000;
			            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
			            aml(54, playerid, "", "Улучшение: Больше недвижимости", 2000);
			            PI[playerid][pMoreHouses] = 1;
			            UpdatePlayerDataInt(playerid, "MoreHouses", PI[playerid][pMoreHouses]);
			            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПоздравляем с покупкой улучшения, теперь вы можете\nбыть владельцем 3-мя домами.\n\n", !"Принять", !"");
			            SCMAllf(-1, "<<< Игрок {FF6347}%s(%i){FFFFFF} купил улучшение {FF6347}'Больше недвижимости'{FFFFFF}, теперь он может владеть 3-мя домами.", PN(playerid), playerid);
					}
			    }
				case 5:
				{
					return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Помощь", "\n\n{1874cd}Шумахер {FFFFFF}- Имея это умение, Ваша машина не будет глохнуть при столкновении.\n{1874cd}Халявщик {FFFFFF}- Ваш персонаж становится везунчиком и платит налоги на дом, и на машину в 2 раза меньше!\n{1874cd}Бизнесмен {FFFFFF}- Вы сможете владеть 5-ми бизнесами.\n{1874cd}Планшет {FFFFFF}- Вы сможете отправлять объявления на редакцию, с любой точки карты.\n{1874cd}Больше недвижимости {FFFFFF}- Вы сможете владеть 3-мя домами.\n\n", !"Принять", !"");
				}
			}
		}
		case 800:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        PI[playerid][pNewsChat] = !PI[playerid][pNewsChat];
				        UpdatePlayerDataInt(playerid, "NewsChat", PI[playerid][pNewsChat]);
				        Show3UpdateSettings(playerid);
				    }
				    case 1:
				    {
				        PI[playerid][pRacia] = !PI[playerid][pRacia];
				        UpdatePlayerDataInt(playerid, "Racia", PI[playerid][pRacia]);
				        Show3UpdateSettings(playerid);
				    }
				    case 2:
				    {
						PI[playerid][pDepChat] = !PI[playerid][pDepChat];
						UpdatePlayerDataInt(playerid, "DepChat", PI[playerid][pDepChat]);
				        Show3UpdateSettings(playerid);
				    }
				    case 3:
				    {
						PI[playerid][pAdmAction] = !PI[playerid][pAdmAction];
						UpdatePlayerDataInt(playerid, "AdmAction", PI[playerid][pAdmAction]);
				        Show3UpdateSettings(playerid);
				    }
                    case 4:
				    {
                        if(PI[playerid][pMember]!=TEAM_LSPD && PI[playerid][pMember]!=TEAM_LVPD && PI[playerid][pMember]!=TEAM_PDLV && PI[playerid][pMember]!=TEAM_FBI && PI[playerid][pMember]!=TEAM_SFPD) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Эта возможность доступна только полицейским!");
						PI[playerid][pKillShow] = !PI[playerid][pKillShow];
						UpdatePlayerDataInt(playerid, "KillShow", PI[playerid][pKillShow]);
				        Show3UpdateSettings(playerid);
				    }
                    case 5:
				    {
						if(PI[playerid][pVIP] != 4) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта функция доступна только для владельцев Titan VIP!");
						PI[playerid][pVipChat] = !PI[playerid][pVipChat];
						UpdatePlayerDataInt(playerid, "VipChat", PI[playerid][pVipChat]);
                        Show3UpdateSettings(playerid);
				    }
                    case 6:
				    {
						if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы не состоите в семье!");
						PI[playerid][pFamilyChat] = !PI[playerid][pFamilyChat];
						UpdatePlayerDataInt(playerid, "FamilyChat", PI[playerid][pFamilyChat]);
                        Show3UpdateSettings(playerid);
				    }
				    case 7: {
						PI[playerid][pRespawnChat] = !PI[playerid][pRespawnChat];
						UpdatePlayerDataInt(playerid, "RespawnChat", PI[playerid][pRespawnChat]);
						Show3UpdateSettings(playerid);
				    }
				}
			}
		}
	    case 722:
	    {
     		if(!response) return 1;
			switch(listitem)
			{
				case 0: SPD(playerid, SHOWACTION, 2, !"Выберите действие", !"{B03131}[1]{FFFFFF} Моя статистика\n{B03131}[2]{FFFFFF} Меню автомобиля\n{B03131}[3]{FFFFFF} Меню дома\n{B03131}[4]{FFFFFF} Меню бизнеса\n{B03131}[5]{FFFFFF} Меню лидера\n{B03131}[6]{FFFFFF} Улучшения\n{B03131}[7]{FFFFFF} Мои лицензии\n{B03131}[8]{FFFFFF} Мой паспорт\n{B03131}[9]{FFFFFF} Квесты\n{B03131}[10]{FFFFFF} Татурировки\n{B03131}[11]{FFFFFF} Меню семьи\n{B03131}[12]{FFFFFF} Сменить Non-RP Nick", !"Выбор", !"Отмена");
				case 1: SPD(playerid, SHOWSKILLS, 2, !"Навыки", !"{B03131}[1]{FFFFFF} Скиллы\n{B03131}[2]{FFFFFF} Стили боя\n{B03131}[3]{FFFFFF} Навык фермера", !"Выбор", !"Отмена");
				case 2: callcmd::report(playerid);
				case 3: callcmd::help(playerid);
				case 4: ShowUpdateSettings(playerid);
				case 5: ShowDonate(playerid);
				case 6: callcmd::phone(playerid);
				case 7: ShowRoulette(playerid);
				case 8:
				{
				    return true;
				}
                case 9:
                {
                    if(PI[playerid][pAPromo] == 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже активировали промо-код!");
				    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш уровень недостаточно высок для активации промо-кода!");
					SPD(playerid, 2388, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите {e9fb4b}промо-код{FFFFFF} пригласившего вас ютубера!", !"Ввод", !"Назад");
				}
			}
			return 1;
	    }
	    case 655:
	    {
	        if(response)
            {
		        if(GetInvCount(playerid, Item_CasinoChips) < strval(inputtextsave))return SPD(playerid,0,0,"Информация!","{B03131}У вас недостаточно фишек!", !"Принять", !"");
		        if(strval(inputtextsave) < MIN_Bet || strval(inputtextsave) > MAX_Bet)
		        {
		            f(str,sizeof(str),"{B03131}Вы не можете пополнить игровой автомат таким количеством фишек!\n{FFFFFF}Максимум: %i",MAX_Bet);
		            SPD(playerid,0,0,"Информация!",str, !"Принять", !"");
					return 0;
		        }
    			PutPlayerInSlotMachine(playerid,_,strval(inputtextsave));
		    }
	    }
	    case 199:
		{
	        return ShowTutorial(playerid);
        }
		case 234:
		{
		    if(response)
		    {
		        TutState[playerid] = 0;
				ShowTutorial(playerid);
			}
		}
	    case 1222:
	    {
	        if(response)
	        {
	            new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
				{
			 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
			 		return 1;
				}
	            if(NumInc_CP[playerid]!=-1)
				{
				    TogglePlayerDynamicCP(playerid, PizzCP[NumInc_CP[playerid]][0], false);
	    			TogglePlayerDynamicCP(playerid, PizzCP[NumInc_CP[playerid]][1], false);
				}
	            SCM(playerid,0xFF9900FF,"[Информация] {FFFFFF}Возьмите пиццу и садитесь на мопед.");
	            PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	            InJob[playerid] = 2;
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 155);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 152);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid,7);
				ResetDynamicCPs(playerid);
				DisableAllRaceCPs(playerid);
			}
	    }
	    case 1223:
	    {
	        if(response)
	        {
				if(NumInc_CP[playerid]!=-1)
				{
				    TogglePlayerDynamicCP(playerid, PizzCP[NumInc_CP[playerid]][0], false);
	    			TogglePlayerDynamicCP(playerid, PizzCP[NumInc_CP[playerid]][1], false);
				}
	            InJob[playerid] = 0;
	            SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
                if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid,7);
	        }
	    }
		case 666:
	    {
	        if(response)
	        {
	            new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 20 ))
				{
			 		SCM(playerid, COLOR_GREY, !"Гос. организации могут работать после 20.00 до 10.00!");
			 		return 1;
				}
	            SCM(playerid,0xFF9900FF,"[Информация] {FFFFFF}Отправляйтесь к разгрузке вагонов");
	            PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	            InJob[playerid] = 1;
	            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 50);
				if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 131);
			}
	    }
	    case 667:
	    {
	        if(response)
	        {
	            InJob[playerid] = 0;
	            SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы завершили работу и заработали {73B461}$%i", ferman[playerid] * GLS[6]);
 				GiveMoney(playerid, (ferman[playerid] * GLS[6]));
 				aml(51, playerid, "", "Зарплата грузчик", ferman[playerid] * GLS[6]);
	            TogglePlayerDynamicCP(playerid, PorterDownCP, false);
	            ferman[playerid]=0;
	        }
	    }
		case 142:
		{
		    if(response) return SPD(playerid,0,0,"Ошибочка","{FFFFFF}Данная функция временно не доступна", !"Закрыть", !"");
			else ShowUpdateSettings(playerid);
		}
		case 143:
		{
		    if(response)
		    {
		        if(GetString(OrgInfo[listitem+1][oLeader],"Свободна"))
		        {
		            mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Leader` = '%i',`Member` = '0',`Rank` = '13' WHERE `NickName` = '%s'", listitem+1,MLName[playerid]);
		            SetString(OrgInfo[listitem+1][oLeader],MLName[playerid]);
		            f(str,sizeof(str),"Вы назначили игрока %s лидером организации '%s'",MLName[playerid],OrgInfo[listitem+1][oName]);
		            SCM(playerid,-1,str);
		            SaveOrg(listitem+1);
		        }
          		else
		        {
		            if(!GetString(MLName[playerid], OrgInfo[listitem+1][oLeader]))
		            {
						f(str,sizeof(str),"{FFFFFF}\
						Ошибка! У этой организации уже есть лидер!\n\
						Текущий лидер: {B83434}%s{FFFFFF}\n\
						Хотите его снять с лидерства и назначить лидером %s",OrgInfo[listitem+1][oLeader],MLName[playerid]);
						SPD(playerid,144,0,"Снять",str,"Да","Отмена");
						MLeader[playerid] = listitem+1;
					}
					else SCM(playerid, COLOR_GREY, !"Этот человек уже лидер этой организации");
		        }
		    }
		    return 1;
		}
		case 144:
		{
		    if(response)
		    {
		        new leader = MLeader[playerid];
		        new unleader;
		        foreach(new i: Player)
		        {
	            	if(GetString(PN(i), OrgInfo[leader][oLeader]) && PI[i][pLeader] == leader)
	            	{
	            	    if(IsACop(i))
						{
							if(UsingShield[i]) RemovePlayerAttachedObject(i, 7);
							PI[i][pShield] = 0.0;
						}
                        PI[i][pLeader] =
					    PI[i][pMember] =
					    PI[i][pDCTime] = 0;
					    UpdatePlayerDataInt(i, "DCTime", 0);
					    UpdatePlayerDataInt(i, "Member", 0);
					    UpdatePlayerDataInt(i, "Leader", 0);
					    SCM(i, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
					    PI[i][pRank] = 0;
					    UpdatePlayerDataInt(i, "Rank", 0);
					    SetBumSkin(i);
					    SCMf(i, -1, " Администратор %s выгнал вас из организации", PN(playerid));
					    SendAdminsMessagef(-1, " Администратор %s выгнал игрока %s из должности лидерства", PN(playerid), PN(i));
					    TeamDuty{i} = false;
					   	PlayerSpawn(i);
					   	unleader = 1;
					   	break;
	                }
	            }
		        if(!unleader) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Leader` = '0', `Member` = '0', `Rank` = '0', `Skin` = '79' WHERE `NickName` = '%s'", OrgInfo[leader][oLeader]);
		        SetString(OrgInfo[leader][oLeader], MLName[playerid]);
		        mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Leader` = '%i', `Member` = '0', `Rank` = '13', `Job` = '0' WHERE `NickName` = '%s'", listitem + 1, listitem + 1, OrgInfo[leader][oLeader]);
		        SCMf(playerid, -1, "Вы назначили игрока %s лидером организации '%s'", MLName[playerid], OrgInfo[leader][oName]);
		        SaveOrg(leader);
		    }
		    return 1;
		}
		case 146:
		{
		    if(response)
		    {
		        if(LiveOfferID[playerid] != INVALID_PLAYER_ID)
		        {
					new id = LiveOfferID[playerid];
					new carid = GetPlayerVehicleID(id);
					if(IsANewsCar(carid))
					{
					    if(IsPlayerInVehicle(playerid, carid))
					    {
							if(LiveOffer[id] == INVALID_PLAYER_ID)
							{
							    LiveOffer[playerid] = id;
							    LiveOffer[id] = playerid;
							    f(str,sizeof(str),"[Информация] {FFFFFF}%s начал беседу с вами",PN(playerid));
							    SCM(id,COLOR_VALIK,str);
							    SCM(id, COLOR_VALIK, !"[Информация] {FFFFFF}Введите /endlive чтобы её завершить");
							    f(str,sizeof(str),"[Информация] {FFFFFF}Вы начали беседу с %s",PN(id));
							    SCM(playerid,COLOR_VALIK,str);
							}
						}
					}
		        }
		    }
		}
		case 147:
		{
		    if(response)
		    {
          		PassRegSex[playerid] = listitem + 1;
          		SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n\n\n", "Выбор", "Отмена");
		    }
		}
		case 148:
		{
		    if(response)
	        {
	            new day,month,year,day2,month2,year2;
		        getdate(year, month, day);
                if(sscanf(inputtextsave, "p</>iii", day2, month2, year2))
	            {
	                return SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n\n\n", "Выбор", "Отмена");
	            }
	            new check = year - year2;
				if( check > 50 || check < 1 || day2 > GetMonthDays(year2, month2) || day2 < 1 || month2 > 12 || month2 < 1 )
				{
				    return SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n\n\n", "Выбор", "Отмена");
				}
				if(check<18)return SPD(playerid, 148, 1, "Дата рождения", "{FFFFFF}Введите дату вашего рождения\n{E64444}Пример: 2/5/1992\n{FFFFFF}Вы должны быть старше 18 лет!\n\n", "Выбор", "Отмена");
				if(month2 > month || (month2 == month && day2 > day) ) check --;
                PI[playerid][pSex] = PassRegSex[playerid];
                UpdatePlayerDataInt(playerid, "Sex", PI[playerid][pSex]);
				new city = GetPlayerVirtualWorld(playerid) + 1;
				if(city < 1) city = 1;
				else if(city > 3) city = 3;
		        PassInfo[playerid][psDateBirth][0] = day2;
		        PassInfo[playerid][psDateBirth][1] = month2;
		        PassInfo[playerid][psDateBirth][2] = year2;
		        PassInfo[playerid][psDate][0] = day;
		        PassInfo[playerid][psDate][1] = month;
		        PassInfo[playerid][psDate][2] = year;
				PassInfo[playerid][psNumber] = 100000 + random(900000);
				PassInfo[playerid][psSeria] = 1000 + random(9000);
				OnRegPass(playerid);
				SendBotMessage(playerid,"Работник мэрии:\n{FFFFFF}Вот, держите. Вы, кстати на фотографии хорошо получились.\nИспользуйте /showpass чтобы показать паспорт!");

				if(AcceptQuest[playerid][0]!=0 && QuestProgress[playerid][0]==0)
	        	{
	        	    QuestProgress[playerid][0]=2;
	        	    NextStapQI(playerid,0);
	        	    SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно получили паспорт! Задание было выполнено, возращайтесь обратно, и получите награду.", !"Принять", !"");
	        	}
	        }
		}
		case 149:
	    {
	        if(response)
	        {
	            if(!InJob[playerid])
			    {
	            	PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	           	 	InJob[playerid] = 1;
	            	if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 8);
					if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 141);
	            	SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Сядьте в один из инкассаторских грузовиков. Используйте /gps - По работе чтобы найти стоянку грузовиков.");
	            }
	            else
	            {
	                InJob[playerid] = 0;
	                RemovePlayerAttachedObject(playerid, 7);
	            	SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
	            	TogglePlayerControllable(playerid,true);
	            	SCM(playerid, COLOR_GREEN, !"[Подсказка] {FFFFFF}Вы успешно завершили работу.");
	            	SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	            	new rand = NumInc_CP[playerid];
					TogglePlayerDynamicCP(playerid, IncCP[rand][0], false);
					TogglePlayerDynamicCP(playerid, IncCP[rand][1], false);
					for(new i;i<4;i++) TogglePlayerDynamicCP(playerid, BankCP[i], false);
	            }
	        }
	    }
	    case 3123:
	    {
			if(!response) return DeletePVar(playerid, "ListItemCustom");
			new list = GetPVarInt(playerid, "ListItemCustom") - 1;
			DeletePVar(playerid, "ListItemCustom");
			if(GetPlayerState(playerid) != 1 && list == 0) return SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы должны быть не в транспорте!");
	    }
	 	case 154:
	 	{
	 	    if(response)
	 	    {
	 	        switch(listitem)
				{
					case 0:
				    {
						PI[playerid][pShowName] = !PI[playerid][pShowName];
						foreach(new i: Player) ShowPlayerNameTagForPlayer(playerid, i, PI[playerid][pShowName]);
				        ShowUpdateSettings(playerid);
				    }
					case 1:
					{
					    if(strcmp("No Mail Adress", PlayerMail[playerid], true)!=0) return SPD(playerid, 8851, DIALOG_STYLE_LIST, !"", !"{D1FD4D}<<{FFFFFF} Я имею доступ к старой почте!\n{FD4D58}>>{FFFFFF} У меня нет доступа к старой почте!", !"Я уверен", !"Не хочу");
						return SPD(playerid, 160, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Привязать E-mail\n\n{FFFFFF}Напишите свой активный эл.адрес ниже, после вы сможете\nвоспользоваться восстановлением пароля через сайт.", !"Я уверен", !"Не хочу");
					}
					case 2: callcmd::passwd(playerid, "");
					case 3:
					{
					    if(!PI[playerid][pBankCard]) return SPD(playerid, 0, 0, !"", !"{929090} У вас нет банковской карты!", !"Закрыть", !"");
						else SPD(playerid, 883, 1, !"", !"Введите {B83434}текущий{FFFFFF} PIN-код от банковской карты", !"Далее", !"Отмена");
					}
					case 4:
					{
						PI[playerid][pHungryShow] = !PI[playerid][pHungryShow];
						UpdatePlayerDataInt(playerid, "HungryShow", PI[playerid][pHungryShow]);
						Hunger(playerid, PI[playerid][pHungryShow]);
					    ShowUpdateSettings(playerid);
					}
					case 5: callcmd::setspawn(playerid);
					case 6:
					{
						PI[playerid][pShowDokument] = !PI[playerid][pShowDokument];
						UpdatePlayerDataInt(playerid, "ShowDokument", PI[playerid][pShowDokument]);
						ShowUpdateSettings(playerid);
					}
					case 7:
					{
						if(strcmp("No Mail Adress", PlayerMail[playerid], true)==0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете подключить Google Authenticator, так как у вас не привязан е-мейл!");
						if(!PI[playerid][pGoogle]) SPD(playerid, 8918, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nПриложение Google Authenticator используется для создания кодов двухэтапной\nаутентификации на вашем телефоне. Двухэтапная аутентификация обеспечивает\nболее надежную защиту вашего аккаунта: чтобы войти в него,\nпотребуется не только пароль, но и код подтверждения.\n\nПриложение работает на устройствах Android, IOS и как дополнение в Google Chrome.\nНайти и загрузить приложения вы можете в {FDC459}Play Market и App Store.{FFFFFF}\n\nПри подключеном Google Authenticator при каждой авторизации вам нужно будет вводить код,\nкоторый будет выводится непосредственно в вашем приложении.\n\n{B0FD59}Нажмите: 'Enter', чтобы получить инструкции по подключению.\n\n", !"Дальше", !"Отмена");
						else
						{
							if(AcceptGoogle{playerid}) ac_ShowPlayerDialog(playerid, 8924),ShowPlayerDialogf(playerid, 8924, DIALOG_STYLE_LIST, !"{BFBBBA}", !"Принять", !"Отмена", "{FFFFFF}1. Код аккаунта: {FC4C4C}%s.{FFFFFF}\n2. Сколько людей установило защиту?\n3. Удалить Google Authenticator.", PI[playerid][pGoogleKey]);
							else SPD(playerid, 8923, DIALOG_STYLE_INPUT, !"Подтверждение", !"{FFFFFF}\n\nВведите в строку код из приложения {F1FC4C}Google Authenticator{FFFFFF} у вас на телефоне\nили из дополнения Google, для подтверждения аккаунта.\n\n", !"Принять", !"Отмена");
						}
					}
                    case 8:
					{
					    PI[playerid][pObmen] = !PI[playerid][pObmen];
					    UpdatePlayerDataInt(playerid, "Obmen", PI[playerid][pObmen]);
						ShowUpdateSettings(playerid);
					}
					case 9:
					{
					    PI[playerid][pGameRate] = !PI[playerid][pGameRate];
					    UpdatePlayerDataInt(playerid, "GameRate", PI[playerid][pGameRate]);
						ShowUpdateSettings(playerid);
					}
                    case 10:
					{
					    PI[playerid][pRabRacia] = !PI[playerid][pRabRacia];
					    UpdatePlayerDataInt(playerid, "RabRacia", PI[playerid][pRabRacia]);
						ShowUpdateSettings(playerid);
					}
					case 11:
					{
						ShowUpdateSettings(playerid);
					}
					case 12:
					{
					    PI[playerid][pInvLang] = !PI[playerid][pInvLang];
					    UpdatePlayerDataInt(playerid, "InvLang", PI[playerid][pInvLang]);
					    if(InventStatus{playerid}) SetInvLang(playerid);
					    ShowUpdateSettings(playerid);
					}
					case 13:
					{
					    PI[playerid][pShowCase] = !PI[playerid][pShowCase];
					    UpdatePlayerDataInt(playerid, "ShowCase", PI[playerid][pShowCase]);
					   	if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
					    ShowUpdateSettings(playerid);
					}
					case 14:
					{
						PI[playerid][pDamageInfo] = !PI[playerid][pDamageInfo];
					    UpdatePlayerDataInt(playerid, "DamageInfo", PI[playerid][pDamageInfo]);
						ShowUpdateSettings(playerid);
					}
					case 15:
					{
		 				if(InventStatus{playerid})
						{
							CancelSelectTextDraw(playerid);
							ShowInv(playerid);
						}
						if(PI[playerid][pInvBlack] == 0) {
							PI[playerid][pInvBlack] = 1;
							PI[playerid][pInvColor] = 120;
							UpdatePlayerDataInt(playerid, "InvBlack", PI[playerid][pInvBlack]);
							SaveChangeInv(playerid);
							ChangeInvColor(playerid, PI[playerid][pInvColor]);
							SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
						}
						else if(PI[playerid][pInvBlack] == 1) {
							PI[playerid][pInvBlack] = 0;
							PI[playerid][pInvColor] = 0;
							UpdatePlayerDataInt(playerid, "InvBlack", PI[playerid][pInvBlack]);
							SaveChangeInv(playerid);
							ChangeInvColor(playerid, PI[playerid][pInvColor]);
							SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
						}
		    			ShowUpdateSettings(playerid);
					}
					case 16://Стиль походки
					{
						ShowUpdateSettings(playerid);
					}
					case 17://Описание персонажа
					{
						if(GetString(PI[playerid][pDescription], "(нажмите чтобы установить)")) return SPD(playerid, 15016, DIALOG_STYLE_INPUT, !"Описание персонажа", !"{FFFFFF}Напишите краткое описание вашего персонажа:\n{ffff00}(символ {ff0000}/ {ffff00}переносит строку)\n\n{cccccc}(это описание будет отображено на скине вашего персонажа)", !"Применить", !"Назад");
						static Description[83];
						f(Description, 83, "%s", PI[playerid][pDescription]);
						for(new i; i < 83; i++) if(Description[i] == '/') Description[i] = '\n';
						ac_ShowPlayerDialog(playerid, 15017),ShowPlayerDialogf(playerid, 15017, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Описание персонажа", !"Удалить", !"Назад", "{FFFFFF}Сейчас у вас установлено описание:\n{cccccc}%s\n\n{FFFFFF}Вы хотите его удалить?", Description);
					}
					case 18: ShowInterfaceCustomization(playerid);
					case 19:
					{
						PI[playerid][pInvPos_X] =
						PI[playerid][pInvPos_Y] =
						PI[playerid][pInvSize_X] =
						PI[playerid][pInvSize_Y] = 00.00;
						PI[playerid][pInvColor] = 0;
						SaveChangeInv(playerid);
						if(InventStatus{playerid}) HideInv(playerid);
						ShowInv(playerid);
						SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно сбросили настройки инвентаря!");
					}
				}
	 	    }
	 	}
		case 15016:
		{
		    if(!response) return ShowUpdateSettings(playerid);
		    if(PI[playerid][pLevel] <= 3) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Создавать описание персонажа можно с 3-го уровня.");
		    if(strlen(inputtextsave) < 10 || strlen(inputtextsave) > 80) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте не меньше 10 и не больше 80 символов!");
			SetString(PI[playerid][pDescription], inputtextsave);
			UpdatePlayerDataStr(playerid, "Description", PI[playerid][pDescription]);
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы создали описание персонажа:");
			SendCharacterDescription(playerid);
			static Description[83];
			f(Description, 83, "%s", PI[playerid][pDescription]);
			for(new i; i < 83; i++) if(Description[i] == '/') Description[i] = '\n';
			ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Описание персонажа", !"Закрыть", !"", "{FFFFFF}Вы создали описание для вашего персонажа!\n\n{cccccc}%s", Description);
			UpdateCharacterDescription(playerid);
		}
		case 15017:
		{
			if(!response) return ShowUpdateSettings(playerid);
			UpdateCharacterDescription(playerid, 1);
			SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы удалили описание своего персонажа");
		}
		case 8918:
		{
			if(response) GoogleSteep(playerid, 1);
		}
		case 8919:
		{
			if(response) GoogleSteep(playerid, 2);
			else GoogleSteep(playerid, 2, 1);
		}
		case 8920:
		{
			if(response)
			{
				GoogleSteep(playerid, 3);
				static tempcodeauth[17];
				tempcodeauth[0] = EOS;
				for(new i = 0; i < 17; i ++) strcat(tempcodeauth, randomcode32[random(sizeof(randomcode32))]);
				SCM(playerid, -1, tempcodeauth);
				SetString(GoogleCodeTemp[playerid], tempcodeauth);
				ac_ShowPlayerDialog(playerid, 8921),ShowPlayerDialogf(playerid, 8921, DIALOG_STYLE_MSGBOX, !"{BFBBBA}3-тий шаг", !"Дальше", !"Отмена", "{FFFFFF}\n\nТеперь выбираем 2-ой пункт (Ввести код вручную).\nВ появившемся окошке в 1-вом поле вводим свой ник,\nа во втором этот код:\n\n{F55F5F}%s{FFFFFF} и жмем подтвердить.\n\n{B0FD59}Нажмите: 'Enter', чтобы пройти к следующему этапу.\n\n", tempcodeauth);
			}
			else GoogleSteep(playerid, 3, 1);
		}
		case 8921:
		{
			if(response) GoogleSteep(playerid, 4);
			else GoogleSteep(playerid, 4, 1);
		}
		case 8922:
		{
			if(response)
			{
				if(GoogleAuthenticatorCode(GoogleCodeTemp[playerid], gettime()) == strval(inputtext))
				{
					GoogleSteep(playerid, 0);
					ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Успешно", !"Закрыть", !"", "{FFFFFF}\n\nВсе получилось! Вы успешно подключили Google Authenticator к вашему аккаунту!\nТеперь при каждой авторизации на сервере вы должны вводить код, который будет постоянно\nобновляться у вас в телефоне. Если вы удалите приложение или удалите\nаккаунт с приложения, вы потеряете доступ к аккаунту. Чтобы этого избежать, запишите {FC4C4C}%s{FFFFFF}\nчтобы потом заново подключить обновление кода для входа на сервер, используя гайд.\nЕсли вы не записали код и не имеете возможности получить код для авторизации,\nвы можете отключить проверку при авторизации в личном кабинете на сайте\nиспользуя почту (Если она у вас правильно привязана).\n\n", GoogleCodeTemp[playerid]);
					SCMf(playerid, COLOR_VALIK, "Обязательно запишите код: {FFFFFF}%s{73B461} или сделайте скриншот F8!", GoogleCodeTemp[playerid]);
					SCM(playerid, -1, !"При потере телефона или неуклюжести, он вам понадобится.");
					PI[playerid][pGoogle] = 1;
					UpdatePlayerDataInt(playerid, "Google", PI[playerid][pGoogle]);
					SetString(PI[playerid][pGoogleKey], GoogleCodeTemp[playerid]);
					UpdatePlayerDataStr(playerid, "GoogleKey", PI[playerid][pGoogleKey]);
				}
				else SPD(playerid, 8922, DIALOG_STYLE_INPUT, !"4-тый шаг", !"{FFFFFF}\n\nЕсли вы правильно ввели код, то теперь\nу вас в приложении будет обновляться другой код, который\nвы будете использовать для авторизации на сервере.\n(Код, который на компютере, это пример!)\n\n{FFFFFF}Теперь введите код с вашего телефона в этот диалог.\nЕсли он совпадет, значит все получилось!\n\n\n{FF0000}Неверный код!\n\n", !"Дальше", !"Отмена");
			}
			else GoogleSteep(playerid, 0);
		}
		case 8923:
		{
			if(response)
			{
				if(GoogleAuthenticatorCode(PI[playerid][pGoogleKey], gettime()) == strval(inputtext))
				{
					ac_ShowPlayerDialog(playerid, 8924),ShowPlayerDialogf(playerid, 8924, DIALOG_STYLE_LIST, !"{BFBBBA}", !"Принять", !"Отмена", "{FFFFFF}1. Код аккаунта: {FC4C4C}%s.{FFFFFF}\n2. Сколько людей установило защиту?\n3. Удалить Google Authenticator.", PI[playerid][pGoogleKey]);
					AcceptGoogle{playerid} = true;
				}
				else SPD(playerid, 8923, DIALOG_STYLE_INPUT, !"Подтверждение", !"{FFFFFF}\n\nВведите в строку код из приложения {F1FC4C}Google Authenticator{FFFFFF} у вас на телефоне\nили из дополнения Google, для подтверждения аккаунта.\n\n{FC4C4C}Неверный код!\n\n", !"Принять", !"Отмена");
			}
		}
		case 8924:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: ac_ShowPlayerDialog(playerid, 8924),ShowPlayerDialogf(playerid, 8924, DIALOG_STYLE_LIST, !"{BFBBBA}", !"Принять", !"Отмена", "{FFFFFF}1. Код аккаунта: {FC4C4C}%s.{FFFFFF}\n2. Сколько людей установило защиту?\n3. Удалить Google Authenticator.", PI[playerid][pGoogleKey]);
					case 1:
					{
						new Cache:result = mysql_query(mysql, "SELECT ID FROM `Qelksekm` WHERE `Google` > 0");
						ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Понял", !"", "{FFFFFF}\n\nПриложение {F1FC4C}Google Authenticator{FFFFFF} уже подключили {F1FC4C}%i{FFFFFF} игроков!\n\n", cache_num_rows());
						cache_delete(result);
					}
					case 2:
					{
						AcceptGoogle{playerid} = false;
						PI[playerid][pGoogle] = 0;
						UpdatePlayerDataInt(playerid, "Google", PI[playerid][pGoogle]);
						SetString(PI[playerid][pGoogleKey], "");
						UpdatePlayerDataStr(playerid, "GoogleKey", PI[playerid][pGoogleKey]);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nВы успешно отключили {F1FC4C}Google Authenticator{FFFFFF} от вашего аккаунта.\nРекомендуем вернуть его, чтобы обезопастить игровой аккаунт.\n\n", !"Понял", !"");
					}
				}
			}
		}
	 	case 156:
	 	{
	 	    if(response)
	 	    {
	 	        new biz = ShowPBiz[playerid];
	 	        if(biz != -1)
	 	        {
					static Text[50];
				    switch(BizInfo[biz][bState])
					{
						case 7,0..2,B_GAS: Text = "Изменить стоимость продуктов";
					    default: Text = "{B71B1B}Недоступно для вашего бизнеса{FFFFFF}";
				    }
				    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
					{
					    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0) f(str,sizeof(str),"{9ACD32}Дополнительно{FFFFFF}\n%s\nСнять со счета\nПополнить баланс бизнеса\n{73B461}Отметить в gps{FFFFFF}\nПродать бизнес\nПродать бизнес игроку\n{CAD715}Скупать продукты у развозчиков\n{C85151}Отозвать заказ на скупку продуктов",Text);
					    else f(str,sizeof(str),"{9ACD32}Дополнительно{FFFFFF}\n%s\nСнять со счета\nПополнить баланс бизнеса\n{73B461}Отметить в gps{FFFFFF}\nПродать бизнес\nПродать бизнес игроку\n{CAD715}Скупать продукты у развозчиков",Text);
					}
				    else f(str,sizeof(str),"{9ACD32}Дополнительно{FFFFFF}\n%s\nСнять со счета\nПополнить баланс бизнеса\n{73B461}Отметить в gps{FFFFFF}\nПродать бизнес\nПродать бизнес игроку",Text);

	 	        	SPD(playerid,157,2,"BizInfo",str,"Выбор","Отмена");
				}
			 }
			 else callcmd::bizinfo(playerid);
		}
		case 7707:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid], objid;
		        if(sscanf(inputtext, "d", objid)) return SCM(playerid, -1, "Вы неправильно ввели ид игрока");
		        if(!IsPlayerConnected(objid)) return SCM(playerid, COLOR_RED, !"Игрок не найден");
		        if(objid == playerid) {
		            SetString(BizInfo[biz][bZam], "The State");
					SCM(playerid, COLOR_RED, !"Вы успешно сняли заместителя.");
					SaveBiz(biz);
					return 1;
				}
				if(ProxDetectorS(3.0, playerid, objid, 1))
				{
			        if(GetPlayerBizes(objid))
					{
			            SetString(BizInfo[biz][bZam], PN(objid));
						SCMf(playerid, COLOR_VALIK, "<< {FFFFFF}Вы успешно назначили игрока %s, своим заместителем!",PN(objid));
						SCMf(objid, COLOR_VALIK,"Вам выдали ключи от бизнеса №%i",biz);
						SaveBiz(biz);
					}
					else return SCM(playerid, -1, "У игрока нет места для бизнеса.");
				}
				else SCM(playerid, COLOR_GREY, "[Ошибка] {FFFFFF}Вы далеко от игрока");
		    }
		}
		case 7708:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
		        static nadpis[32];
		        nadpis[0] = EOS;
				sscanf(inputtextsave,"s[32]",nadpis);
				if(!strlen(inputtextsave)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ничего не ввели!");
				if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 32) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Минимальное количество символов - 3, максимальное - 32");
				SetString(BizInfo[biz][bDescription], inputtext);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно изменили название бизнеса!");
				UpdateBiz(biz, 1);
		    }
		}
		case 7709:
		{
		    if(response)
			{
		        new house = PI[playerid][pHouseTemp];
		        static nadpis[32];
				sscanf(inputtextsave,"s[32]",nadpis);
				if(!strlen(inputtextsave)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ничего не ввели!");
				if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 32) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Минимальное количество символов - 3, максимальное - 32");
				SetString(HouseInfo[house][hDescription], inputtext);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно изменили название дома!");
				UpdateHouse(house, 1);
		    }
		}
		case 7710:
		{
			if(!response) return false;
			new biz = ShowPBiz[playerid], count = strval(inputtextsave), cost = count*200;
			if(count < 1) return ShowPlayerBuyProd(playerid);
			if(count > 10000) 
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя покупать болле 10000 продуктов за 1 раз!");
				return ShowPlayerBuyProd(playerid);
			}
			if(!count) return ShowPlayerBuyProd(playerid);
			if(PI[playerid][pVirMoney] >= cost)
			{
				GiveDonate(playerid, -cost);
				aml(54, playerid, "", "покупка продуктов в биз", cost);
				BizInfo[biz][bProducts] += count;
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно купили %i продуктов за %i AZ Coins!", count, cost);
				UpdateBiz(biz, 1);
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
				return ShowPlayerBuyProd(playerid);
			}
		}
		case 9029:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				str_1[0] = EOS;
		        switch(listitem)
		        {
		            case 0:
		            {
		                BizInfo[biz][bLock] = !BizInfo[biz][bLock];
						callcmd::bizinfo(playerid);
		            }
		            case 1:
					{
					    if(GetString(BizInfo[biz][bZam], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
				 	    SPD(playerid, 7707, 1, "", "\n\nДля того чтобы назначить нового заместителя необходимо\n\
	 					ввести в строку ниже, ид человека которого хотите взять управляющим.\n\n\
				 		{CD5C5C}Обратите внимание, он будет иметь абсолютно те-же возможности что и у вас!\nЧто бы снять заместителя, введите свой ID.\n\n", "Ок", "Отмена");
					}
					case 2:
					{
						str_1 = "День\tПрибыль\n";
						f(str_1,sizeof(str_1),"%s{FFFFFF}Понедельник\t{73B461}%i$\n{FFFFFF}Вторник\t{73B461}%i$\n{FFFFFF}Среда\t{73B461}%i$\n{FFFFFF}Четверг\t{73B461}%i$\n{FFFFFF}Пятница\t{73B461}%i$\n{FFFFFF}Суббота\t{73B461}%i$\n{FFFFFF}Воскресенье\t{73B461}%i$",str_1,BizInfo[biz][bDayOfWeak0],BizInfo[biz][bDayOfWeak1],BizInfo[biz][bDayOfWeak2],BizInfo[biz][bDayOfWeak3],BizInfo[biz][bDayOfWeak4],BizInfo[biz][bDayOfWeak5],BizInfo[biz][bDayOfWeak6]);
  						SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"",str_1,"Окей","");
					}
					case 3:
					{
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не доступно для вашего бизнеса!");
					}
					case 4:
					{
					    if(!GetString(BizInfo[biz][bOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
	 					f(str_1,sizeof(str_1),"{FFFFFF}Текущее название: {FFFF00}%s\n\n\
	 					{C0C0C0}Укажите название для вашего бизнеса (от 3 до 32 символов)",BizInfo[biz][bDescription]);
 						SPD(playerid, 7708, 1, !"", str_1, !"Изменить", !"Отмена");
					}
					case 5:
					{
					    if(!GetString(BizInfo[biz][bOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
	 					ShowPlayerBuyProd(playerid);
					}
					case 6:
					{
					    if(!GetString(BizInfo[biz][bZam], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не являетесь заместителем!");
				    	SetString(BizInfo[biz][bZam], "The State");
				    	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно покинули пост заместителя.");
					}
		        }
		    }
			else callcmd::bizinfo(playerid);
		}
		case 157:
	 	{
	 	    if(response)
	 	    {
	 	        new biz = ShowPBiz[playerid];
	 	    	if(biz == -1) return 1;
				switch(listitem)
				{
				    case 0:
				    {
						static zam[100], st[100];
				        if(GetString(BizInfo[biz][bZam], "The State")) zam = "{9ACD32}Назначить заместителя";
						else f(zam,sizeof(zam),"Заместитель: {FF6347}%s",BizInfo[biz][bZam]);
						if(GetString(BizInfo[biz][bZam], PN(playerid))) st = "\n7. {F08080}Покинуть пост заместителя.";
						else st = "";
				        f(str,sizeof(str),"{FFFFFF}1. %s бизнес{FFFFFF}\n2. %s{FFFFFF}\n\
						3. {FF6347}Статистика за неделю{FFFFFF}\n4. Реклама в телефоне/GPS [{73B461} Заказать{FFFFFF}]\n5. Изменить название бизнеса\n6. Купить продукты за AZ Coins\n%s",BizInfo[biz][bLock] ? ("{FF6347}Открыть") : ("{9ACD32}Закрыть"),zam,st);
                        SPD(playerid, 9029, 2, !"", str, !"Выбор", !"Отмена");
				    }
				    case 1:
				    {
				        //static Text[200];
				        new maxcost;
						switch(BizInfo[biz][bState])
						{
						    case B_GUNSHOP: maxcost = 15000;
						    case B_BAR: maxcost = 15000;
						    case B_BUY: maxcost = 15000;
						    case B_BINKO: maxcost =0;
						    case B_ELECTRO: maxcost = 0;
						    case B_CARUPGR: maxcost = 0;
						    case B_GAS: maxcost = 50;
						    case B_CL_BELL: maxcost = 15000;
						    case B_RENTCAR: maxcost = 0;
						    case 9: maxcost =0;
							default: maxcost = 0;
						}
						if(maxcost == 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта функция доступна только для владельцев АЗС и закусочных!");
						EditBizItemCost(playerid, biz, -1, 2);
					    /*switch(BizInfo[biz][bState])
						{
						    case B_GAS: Text = "стоимость 1 литра и входа.\n{19A725}Используйте число от {FFFFFF}1${19A725} до {FFFFFF}50${19A725} за один литр.";
						    case 7: Text = "cтоимость продуктов и входа.\n{19A725}Используйте число от {FFFFFF}1${19A725} до {FFFFFF}50${19A725} за один продукт.";
						    default: Text = "стоимость входа";
					    }*/
					    //f(str,sizeof(str),"\n\n{FFFFFF}Введите %s\n\n",Text);
				        //SPD(playerid,158,1,"",str,"Ок","Отмена");
				    }
					case 2: {
						if(PI[playerid][pLevel] < 2)
						    return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Брать деньги с баланса бизнеса можно со 2-го уровня!");

						SPD(playerid,159,1,"","\n\n{FFFFFF}Введите сумму, которую хотите снять.\n\n","Ок","Отмена");
				    }
					case 3: {
						if(PI[playerid][pLevel] < 2)
						    return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ложить деньги на баланса бизнеса можно со 2-го уровня!");

						SPD(playerid,173,1,"","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашего бизнеса.\n\n","Ок","Отмена");
				    }
					case 4:
					{
					    EnableGPSForPlayer(playerid, BizInfo[biz][bEnter_X], BizInfo[biz][bEnter_Y], BizInfo[biz][bEnter_Z]);
					    SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно отметили ваш бизнес в GPS.");
					}
					case 5:
					{
					    if(GetString(BizInfo[biz][bZam], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
					    f(str,sizeof(str),"{FFFFFF}Вы точно хотите продать свой бизнес?\n\n{19A725}Обратите внимание что за продажу вашего бизнеса в\nгосударство вы получите полько половину от его гос. стоимости.");
						SPD(playerid,161,0,"",str,"Да","Отмена");
					}
					case 6:
					{
					    if(GetString(BizInfo[biz][bZam], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция.");
						SPD(playerid,164,1,"","{FFFFFF}Введите ид игрока и цену через запятую, без пробела.\nПример: {9ACD32}6,1000000.","Далее","Отмена");
					}
					case 7:
					{
					    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
					    {
					        if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)return  SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже заказали продукты! Если хотите составить заказ заново, отозвите старый!");
					        f(str,sizeof(str),"{FFFFFF}Обратите внимание на стоимость товара где скупают развозчики! Если\nоплата от вас будет ниже чем на складе, вам никто не привезет груз!\n\nДля магазинов/баров - {51C859}%i${FFFFFF}\nДля закусочных - {51C859}%i${FFFFFF}.",GLS[29],GLS[31]);
					    	f(str,sizeof(str),"{FFFFFF}В ваш бизнес необходимо закупать товар, который развозят развозчики продуктов!\nВам нужно указать количество товара и его стоимость чтобы они могли его доставить.\nНа балансе всегда должны быть деньги, ибо вы не сможете купить груз!\n\n{CAD715}Введите количество и цену за 1 товар через запятую, без пробела. Пример: 5000,35.\n\n%s",str);
							SPD(playerid,182,1,"",str,"Далее","Отмена");
						}
					}
					case 8:
					{
					    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
					    {
						    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)
						    {
                                BizInfo[biz][bBuyCost]=0;
								BizInfo[biz][bNeedItem]=0;
								SCM(playerid, COLOR_GREEN, !"Вы успешно отказались от своего заказа на скупку продуктов!");
								callcmd::bizinfo(playerid);
								UpdateBiz(biz, 0);
						    }
						}
					}
				}
	 	    }
		}
		case 182:
		{
		    if(response)
		    {
	            new id,money;
		        sscanf(inputtextsave,"p<,>dd",id,money);
                new bizz = ShowPBiz[playerid];
 				if(!IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bExit_X], BizInfo[bizz][bExit_Y], BizInfo[bizz][bExit_Z]) && !IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bEnter_X], BizInfo[bizz][bEnter_Y], BizInfo[bizz][bEnter_Z])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится возле вашего бизнеса!");
 				if(bizz == -1)return 1;
 				if(id < 1 || money < 1)
 				{
			        f(str,sizeof(str),"{FFFFFF}Обратите внимание на стоимость товара где скупают развозчики! Если\nоплата от вас будет ниже чем на складе, вам никто не привезет груз!\n\nДля магазинов/баров - {51C859}%i${FFFFFF}\nДля закусочных - {51C859}%i${FFFFFF}.",GLS[29],GLS[31]);
			    	f(str,sizeof(str),"{FFFFFF}В ваш бизнес необходимо закупать товар, который развозят развозчики продуктов!\nВам нужно указать количество товара и его стоимость чтобы они могли его доставить.\nНа балансе всегда должны быть деньги, ибо вы не сможете купить груз!\n\n{CAD715}Введите количество и цену за 1 товар через запятую, без пробела. Пример: 5000,35.\n\n%s",str);
					SPD(playerid,182,1,"",str,"Далее","Отмена");
					return 1;
 				}
				if(id > 10000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете заказать больше 10 000 товара на скупку!");
				if(id < 100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете заказать меньше 100 товара на скупку!");
				if(BizInfo[bizz][bState] != 7)
				{
				    if(money < GLS[29])
				    {
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить цену на скупку товара, дешевле чем покупают развозчики для магазинов/баров для перепродажи вам!");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[29])<1)
					{
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Цена на скупку товара слишком низкая! Попробуйте ее повысить на 1$.");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[29])>10)
					{
					    f(str,sizeof(str),"[Ошибка] {FFFFFF}Вы не можете установить такую большую цену за товар! Используйте от {FFFFFF}%i${BE2D2D} до {FFFFFF}%i$.{BE2D2D}",(GLS[29]+1),(GLS[29]+10));
					    SCM(playerid,COLOR_RED,str);
					    callcmd::bizinfo(playerid);
					    return 1;
					}
				}
				else
				{
				    if(money < GLS[31])
				    {
				        SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить цену на скупку товара, дешевле чем покупают развозчики для магазинов/баров для перепродажи вам!");
					    callcmd::bizinfo(playerid);
					    return 1;
				    }
				    if((money-GLS[31])<1)
					{
					    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Цена на скупку товара слишком низкая! Попробуйте ее повысить на 1$.");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[31])>10)
					{
					    f(str,sizeof(str),"[Ошибка] {FFFFFF}Вы не можете установить такую большую цену за продукты! Используйте от {FFFFFF}%i${BE2D2D} до {FFFFFF}%i$.{BE2D2D}",(GLS[31]+1),(GLS[31]+10));
					    SCM(playerid,COLOR_RED,str);
					    callcmd::bizinfo(playerid);
					    return 1;
					}
				}
				BizInfo[bizz][bBuyCost]=money;
				BizInfo[bizz][bNeedItem]=id;
				f(str,sizeof(str),"Вы успешно составили заказ на скупку {FFFFFF}%i{42B02C} товара для вашего бизнеса, по цене {FFFFFF}%i${FFFFFF}.",BizInfo[bizz][bNeedItem],BizInfo[bizz][bBuyCost]);
				SCM(playerid,COLOR_GREEN,str);
				UpdateBiz(bizz, 0);
				callcmd::bizinfo(playerid);
			}
			else callcmd::bizinfo(playerid);
		}
		case 150:
		{
			if(!response) return callcmd::bizinfo(playerid);
            str_1[0] = EOS;
            new biz = ShowPBiz[playerid];
            switch(listitem)
            {
                case 0: SPD(playerid, 152, 1, "", "\n\n{FFFFFF}Введите стоимость 1 литра и входа.\n{19A725}Используйте число от {FFFFFF}1${19A725} до {FFFFFF}5000${19A725} за один литр.","Ок","Отмена");
                case 1:
                {
                	str_2 = "Название\tСтоимость";
                	for(new i; i < sizeof(ItemNameBussineses); i++) if(!GetString(ItemNameBussineses[i][bRefuel], "None")) f(str_2,sizeof(str_2), "%s\n{FFFFFF}%s\t{F0E68C}%i$", str_2, ItemNameBussineses[i][bRefuel], BizInfo[biz][bItemCost][i]);
                    SPD(playerid, 158, DIALOG_STYLE_TABLIST_HEADERS, !"", str_2, !"Изменить", !"Отмена");
                }
            }
		}
		case 152:
		{
			if(!response) return callcmd::bizinfo(playerid);
			new biz = ShowPBiz[playerid];
			new Float:cost = floatstr(inputtextsave);
			new Float:maxcost;
			switch(BizInfo[biz][bState])
			{
			    case B_GUNSHOP: maxcost = 0.0;
			    case B_BAR: maxcost = 0.0;
			    case B_BUY: maxcost = 0.0;
			    case B_BINKO: maxcost = 0.0;
			    case B_ELECTRO: maxcost = 0.0;
			    case B_CARUPGR: maxcost = 0.0;
			    case B_GAS: maxcost = 50.0;
			    case B_CL_BELL: maxcost = 50.0;
			    case 9: maxcost = 0.0;
			}
			if(maxcost == 0.0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]");
			if(cost < 0.5 || cost > maxcost) return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Произошла ошибка, пожалуйста проверьте правильность ввода.");
			BizInfo[biz][bEnterPrice] = cost;
			static Text[30];
			switch(BizInfo[biz][bState])
			{
				case B_GAS:
				{
					Text = "стоимость 1 литра бензина";
					UpdateFuels(biz);
				}
			    default: Text = "";
			}
			f(str,sizeof(str),"{FFFFFF}Вы успешно изменили %s на $%.1f",Text,cost);
			SCM(playerid,COLOR_ORANGE,str);
			UpdateBiz(biz);
			callcmd::bizinfo(playerid);
		}
		case 158:
		{
		    if(!response) return callcmd::bizinfo(playerid);
	        new biz = ShowPBiz[playerid];
	        EditBizItemCost(playerid, biz, listitem, 1);
		}
		case 159:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > BizInfo[biz][bMoney]) return SPD(playerid,159,1,"BizInfo","\n\nВведите сумму, которую хотите снять\n\n{D71515}На балансе бизнеса не достаточно средств!","Ок","Отмена");
				BizInfo[biz][bMoney] -= cost;
				GiveMoney(playerid,cost);
				aml(51, playerid, "", "Снятие денег с бизнеса", cost);
				UpdateBiz(biz);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно сняли деньги со счета.");
				callcmd::bizinfo(playerid);
		    }
		    else callcmd::bizinfo(playerid);
		}
		case 173:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > PI[playerid][pMoney]) return SPD(playerid,173,1,"BizInfo","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашего бизнеса.\n\n{D71515}У вас не достаточно денег чтобы положить эту сумму!","Ок","Отмена");
				BizInfo[biz][bMoney] += cost;
				GiveMoney(playerid,-cost);
				aml(51, playerid, "", "Положил деньги в бизнес", cost);
				UpdateBiz(biz);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно пополнили баланс вашего бизнеса.");
				callcmd::bizinfo(playerid);
		    }
		    else callcmd::bizinfo(playerid);
		}
		case 8929:
		{
			if(!response) SPD(playerid, 8929, DIALOG_STYLE_INPUT, !"Подтверждение", !"{FFFFFF}\n\nК этому аккаунту подключено приложение {F1FC4C}Google Authenticator{FFFFFF}.\nВведите код подтверждения для входа в игру.\n\n{FC4C4C}Если вы потеряли телефон/удалили приложение или потеряли\nидентификационный код, то при условии того что у вас\nправильно привязана почта, вы можете\nотключить Google Authenticator на сайте:\n\n{FFFFFF}"SITE"/profile/in", !"Принять", !"Отмена");
			if(GoogleAuthenticatorCode(PI[playerid][pGoogleKey], gettime()) == strval(inputtext)) GoogleLogin(playerid);
			else
			{
				gPlayerGoogleTries{playerid} --;
				if(gPlayerGoogleTries{playerid} <= 0) return J_Kick(playerid, 7730);
				ac_ShowPlayerDialog(playerid, 8929),ShowPlayerDialogf(playerid, 8929, DIALOG_STYLE_INPUT, !"{BFBBBA}Подтверждение", !"Принять", !"Отмена", "{FFFFFF}\n\nК этому аккаунту подключено приложение {F1FC4C}Google Authenticator{FFFFFF}.\nВведите код подтверждения для входа в игру.\n\n{FC4C4C}Если вы потеряли телефон/удалили приложение или потеряли\nидентификационный код, то при условии того что у вас\nправильно привязана почта, вы можете\nотключить Google Authenticator на сайте:\n\n{FFFFFF}"SITE"/profile/in \n\n{FC4C4C}Неверный код!\nОсталось попыток: %i", gPlayerGoogleTries{playerid});
			}
		}
		case 8851:
		{
			if(response)
			{
                if(GetPVarInt(playerid, !"remailmail") > gettime())
                {
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Повторно отправить письмо можно раз в 1 минуту.");
					return ShowUpdateSettings(playerid);
		        }
				switch(listitem)
				{
					case 0: SPD(playerid, 9679, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Смена E-mail\n\n{FFFFFF}Напишите свой новый эл.адрес ниже, после вы сможете\nвоспользоваться восстановлением пароля через сайт.\n", !"Я уверен", !"Не хочу");
					case 1: SPD(playerid, 9669, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Смена E-mail\n\n{FFFFFF}Так как у вас нет доступа к старому E-mail\nВашу заявку будет проверять один из администраторов!\n\n{FF7270}Напишите свой активный эл.адрес ниже. После\nэтого, администрация проверит вашу заявку. Будьте онлайн,\nчтобы вашу заявку обработали!", !"Я уверен", !"Не хочу");
				}
			}
		}
		case 9679:
		{
			if(response)
			{
				if(!strlen(inputtextsave)) return SPD(playerid, 9679, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Смена E-mail\n\n{FFFFFF}Напишите свой новый эл.адрес ниже, после вы сможете\nвоспользоваться восстановлением пароля через сайт.\n", !"Я уверен", !"Не хочу");
				new code = 1000 + random(9000);
				f(str, 300, "Данный адрес эл.почты указали при регистрации на "SITE". Код для подтверждения: %i",code);
				SendMail(PlayerMail[playerid], ""MAIL"", "webmaster",""SITE" подтверждение входа", str);
				SetPVarInt(playerid, !"authcode", code);
				SetString(ReMail[playerid], inputtextsave);
				SetPVarInt(playerid, !"remailmail", gettime() + 60);
				SPD(playerid, 9680, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш старый {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
			}
		}
		case 9680:
		{
			if(response)
			{
				if(GetPVarInt(playerid, !"authcode") != strval(inputtextsave))
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Неверный код!");
					return GameTextForPlayer(playerid, !"~r~ERROR", 5000, 1);
				}
				new code = 1000 + random(9000);
				f(str, 300, "Данный адрес эл.почты указали при регистрации на "SITE". Код для подтверждения: %i",code);
				SendMail(ReMail[playerid], ""MAIL"", "webmaster",""SITE" подтверждение входа", str);
				SetPVarInt(playerid, !"authcode", code);
				SPD(playerid, 9681, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш новый {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
			}
		}
		case 9681:
		{
			if(response)
			{
				if(!strlen(inputtextsave)) return SPD(playerid, 9681, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш новый {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
				if(GetPVarInt(playerid, !"authcode") != strval(inputtextsave))
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Неверный код!");
					return GameTextForPlayer(playerid, !"~r~ERROR", 5000, 1);
				}
				mysql_escape_string(ReMail[playerid], PlayerMail[playerid]);
				UpdatePlayerDataStr(playerid, "Mail", PlayerMail[playerid]);
				SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно привязали Электронную почту");
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
		}
		case 9669:
		{
			if(response)
			{
				if(!IsValidEMail(inputtextsave)) return SPD(playerid, 9669, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Смена E-mail\n\n{FFFFFF}Так как у вас нет доступа к старому E-mail\nВашу заявку будет проверять один из администраторов!\n\n{FF7270}Напишите свой активный эл.адрес ниже. После\nэтого, администрация проверит вашу заявку. Будьте онлайн,\nчтобы вашу заявку обработали!", !"Я уверен", !"Не хочу");
				new code = 1000 + random(9000);
				f(str, 300, "Данный адрес эл.почты указали при регистрации на "SITE". Код для смены пароля: %i",code);
				SendMail(inputtextsave, ""MAIL"", "webmaster",""SITE" смена пароля", str);
				SetPVarInt(playerid, !"authcode", code);
				SetPVarInt(playerid, !"remailmail", gettime() + 60);
				SPD(playerid, 9678, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
			}
		}
		case 9678:
		{
			if(response)
			{
				if(GetPVarInt(playerid, !"authcode") != strval(inputtextsave))
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Неверный код!");
					return GameTextForPlayer(playerid, !"~r~ERROR", 5000, 1);
				}
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}\n\nВы успешно отправили заявку на смену {FF7270}E-mail!{FFFFFF}\nОжидайте пока вашу заявку обработает администратор!\n\n{FF7270}Если вы выйдите из игры, заявка будет автоматически\nбудет отклонена!\n\n", !"Ок", !"");
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
		}
		case 160:
		{
			if(response)
			{
                if(GetPVarInt(playerid, !"remailmail") > gettime())
                {
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Повторно отправить письмо можно раз в 1 минуту.");
					return ShowUpdateSettings(playerid);
		        }
				if(!IsValidEMail(inputtextsave)) return SPD(playerid, 160, DIALOG_STYLE_INPUT, !"", !"{70FF86}- Привязать E-mail\n\n{FFFFFF}Напишите свой активный эл.адрес ниже, после вы сможете\nвоспользоваться восстановлением пароля через сайт.", !"Я уверен", !"Не хочу");
				new code = 1000 + random(9000);
				f(str, 300, "Данный адрес эл.почты указали при регистрации на "SITE". Код для подтверждения почты: %i",code);
				SendMail(inputtextsave, ""MAIL"", "webmaster",""SITE" Подтверждения почты", str);
				SetPVarInt(playerid, !"authcode", code);
				SetString(ReMail[playerid], inputtextsave);
				SetPVarInt(playerid, !"remailmail", gettime() + 60);
				SPD(playerid, 166, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
			}
		}
		case 166:
		{
			if(response)
			{
				if(!strlen(inputtextsave)) return SPD(playerid, 166, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}\n\nНа ваш {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
				if(GetPVarInt(playerid, !"authcode") != strval(inputtextsave))
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Неверный код!");
					return GameTextForPlayer(playerid, !"~r~ERROR", 5000, 1);
				}
				mysql_escape_string(ReMail[playerid], PlayerMail[playerid]);
				UpdatePlayerDataStr(playerid, "Mail", PlayerMail[playerid]);
				SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно привязали Электронную почту");
				GameTextForPlayer(playerid, !"Successful", 0, 1);
			}
		}
		case 161:
		{
		    if(response)
		    {
		        new biz = ShowPBiz[playerid];
		        if(biz != -1)
				{
				    if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[biz][bEnter_X],BizInfo[biz][bEnter_Y],BizInfo[biz][bEnter_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится возле свого бизнеса!");
				   	if(GetString(BizInfo[biz][bOwner],PN(playerid)))
				    {
			         	SetString(BizInfo[biz][bOwner],"The State");
					    if(BizInfo[biz][bCost] != 0)
					    {
					    	GiveMoney(playerid,BizInfo[biz][bCost]/2);
					    	aml(51, playerid, "", "Продажа бизнеса", BizInfo[biz][bCost]/2);
					    }
			         	SetString(BizInfo[biz][bOwner],"The State");
				     	if(BizInfo[biz][bProducts] < 0) BizInfo[biz][bProducts] = 1000;
				     	if(BizInfo[biz][bMoney] < 0) BizInfo[biz][bMoney] = 1000;
				     	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы продали ваш бизнес.");
				     	SetString(BizInfo[biz][bDescription], "");
						UpdateBiz(biz);
					}
				}
		    }
            else callcmd::bizinfo(playerid);
		}
		case 9762:
		{
		    if(response)
		    {
		        new biz = ShowBiz[playerid][listitem];
			    ShowPBiz[playerid]=biz;
			    if(biz != -1)
				{
				    if(!PI[playerid][pPack]) f(str,sizeof(str),"\n\nНа оплату налогов вашего бизнеса выставлено: {42B02C}$%i{FFFFFF}\nВы желаете погасить все счета?\n\n",BizInfo[biz][bNalog]);
				    else f(str,sizeof(str),"\n\nНа оплату налогов вашего бизнеса выставлено: {42B02C}$%i{FFFFFF}\nНо по скольку вы имеете улучшение: {42B02C}Халявщик{FFFFFF}, вы должны заплатить только: {42B02C}%i${FFFFFF}\n\nВы желаете погасить все счета?\n\n",BizInfo[biz][bNalog],BizInfo[biz][bNalog]/2);
				    SPD(playerid, 784, 0, !"Налоговая", str, !"Оплатить", !"Отмена");
				}
		    }
		}
		case 9761:
		{
		    if(response)
		    {
		        if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
			    static lock[15];
			    new biz = ShowBiz[playerid][listitem];
			    ShowPBiz[playerid]=biz;
			    if(BizInfo[biz][bLock]) lock = "{FF6347}Закрыт";
				else lock = "{9ACD32}Открыт";
			    if(!IsNoEnterBiz(biz))
			    {
			        if(BizInfo[biz][bState] == B_GAS || BizInfo[biz][bState] == 7)
					{
				        static Text[60];
				        switch(BizInfo[biz][bState])
						{
						    case B_GAS: Text = "Стоимость 1-го литра бензина";
						    case 7: Text = "Стоимость 1-го продукта";
						    default: Text = "";
				        }
					    f(str2,sizeof(str2),"{FFFFFF}%s: {9ACD32}$%.1f\n",Text,BizInfo[biz][bEnterPrice]);
					    strcat(str,str2);
					}
				}
				static mafiastr[50];
				switch(BizInfo[biz][bKrasher])
				{
				    case TEAM_RM: f(mafiastr,sizeof(mafiastr),"Русская Мафия");
					case TEAM_YAKUZA: f(mafiastr,sizeof(mafiastr),"Якудза");
					case TEAM_LCN: f(mafiastr,sizeof(mafiastr),"ЛКН");
					case TEAM_BIKERS: f(mafiastr,sizeof(mafiastr),"Байкеры");
					default: f(mafiastr,sizeof(mafiastr),"none");
				}
				if(BizInfo[biz][bState] == B_GAS)
				{
				    f(str2,sizeof(str2),"{FFFFFF}Всего топлива: {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str,str2);
				}
				else if(BizInfo[biz][bState] == B_GUNSHOP)
				{
				    f(str2,sizeof(str2),"{FFFFFF}Всего патронов: {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str,str2);
				}
				else if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 1  || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
				{
				    f(str2,sizeof(str2),"{FFFFFF}Продуктов: {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str,str2);
				}
				else if(BizInfo[biz][bState] == 16)
				{
				    f(str2,sizeof(str2),"{FFFFFF}Всего деталей (для запчастей): {9ACD32}%i\n",BizInfo[biz][bProducts]);
				    strcat(str,str2);
				    f(str2,sizeof(str2),"{FFFFFF}Всего запчастей (для продажи): {9ACD32}%i\n",BizInfo[biz][bProducts]/10);
				    strcat(str,str2);
				}
			    f(str2,sizeof(str2),"{FFFFFF}Бизнес: {9ACD32}%s( %i )\n",BizInfo[biz][bName], biz);
				strcat(str,str2);
				f(str2,sizeof(str2),"{FFFFFF}Банк бизнеса: {9ACD32}$%i\n",BizInfo[biz][bMoney]);
				strcat(str,str2);
				f(str2,sizeof(str2),"{FFFFFF}Открыт/Закрыт: %s\n",lock);
				strcat(str,str2);
				f(str2,sizeof(str2),"{FFFFFF}Крыша: {9ACD32}%s\n",mafiastr);
				strcat(str,str2);
				f(str2,sizeof(str2),"{FFFFFF}Налог к оплате: {9ACD32}%i/100000$\n",BizInfo[biz][bNalog]);
				strcat(str,str2);

				if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
				{
				    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)
					{
						f(str2,sizeof(str2),"{FFFFFF}Открытый заказ на: {9ACD32}%i товара\n",BizInfo[biz][bNeedItem]);
						strcat(str,str2);
						f(str2,sizeof(str2),"{FFFFFF}Стоимость скупки товара: {9ACD32}%i$\n\n",BizInfo[biz][bBuyCost]);
						strcat(str,str2);
					}
				}
				f(str2,sizeof(str2),"\n{FFFFFF}Прибыль за сегодня: {61B23D}%i${FFFFFF}\nПосетителей за {61B23D}%i{FFFFFF} часов: {61B23D}%i{FFFFFF} чел.\n",BizInfo[biz][bWin],BizInfo[biz][bNum],BizInfo[biz][bVisit]);
				strcat(str,str2);

				static str_cost[30];
		    	str_3 = "\n{FFFFFF}Стоимось товара {FFA500}в{FFFFFF} магазине:\n\n";
		    	for(new i; i < sizeof(ItemNameBussineses); i++)
		    	{
		    		str_cost[0] = EOS;
		    		GetNameEditBizItemCost(biz, i, str_cost);
		    		if(!GetString(str_cost, "None")) f(str_3, sizeof(str_3), "%s\n%s: %i$", str_3, str_cost, BizInfo[biz][bItemCost][i]);
		    	}

		    	strcat(str, str_3);
				SPD(playerid, 156, 0, !"Меню", str, !"Изменить", !"Отмена");
				return 1;
		    }
		}
		case 169:
        {
            if(!response) return 1;
            if(TotalPlayerVehicle(PN(playerid)) >= 2) return SCM(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Не достаточно места для загрузки, сначало выгрузите один из двух автомобилей");
            new list = GetPVarInt(playerid, "ListOwnableCars"), id;
            mysql_format(mysql, str_query, sizeof(str_query), "SELECT * FROM `Ownable` WHERE `Owner` = '%s' AND `ID` = '%i'", PN(playerid), GetVehicle[playerid][list]);
            new Cache:result = mysql_query(mysql, str_query);
            id = Iter_Free(OWNABLECARS);
            if(listitem == 0)
            {
                LoadOwnableCar(0, id);
                OwnableCar[id] = J_AddStaticVehicleEx(CarInfo[id][cModel], CarInfo[id][cPos_X], CarInfo[id][cPos_Y], CarInfo[id][cPos_Z], CarInfo[id][cPos_A], CarInfo[id][cColor_1], CarInfo[id][cColor_2], 60000, CarInfo[id][cInterior], CarInfo[id][cVirtualWorld]);
                //if(CarInfo[id][cModel] == 487) CarTextTrunk[id] = CreateDynamic3DTextLabel("", 0xFFFFFF34, 0, 0, 0.5, 5.0, INVALID_PLAYER_ID, OwnableCar[id]);
                UpdateCarInfo(OwnableCar[id]);
                UpdateOwnableCar(OwnableCar[id], 1);
                mysql_pqueryf(mysql, "UPDATE `Ownable` SET `VehicleID` = '%i' WHERE `ID` = '%i'", OwnableCar[id], CarInfo[id][cID]);
                DeletePVar(playerid, "ListOwnableCars");
                SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно загрузили свой автомобиль");
            }
            else
            {
                new connect, type;
                cache_get_value_name_int(0, "LoadConnect", connect);
                if(connect == 1) type = 0;
                else type = 1;
                mysql_pqueryf(mysql, "UPDATE `Ownable` SET `LoadConnect` = '%i' WHERE `ID` = '%i'", type, GetVehicle[playerid][list]);
                //callcmd::cars(playerid);
            }
            return cache_delete(result);
        }
		case 162:
		{
		    if(!response || listitem == -1) return 1;
		  	new load;
            mysql_format(mysql, str_query, sizeof(str_query), "SELECT * FROM `Ownable` WHERE `Owner` = '%s' AND `ID` = '%i'", PN(playerid), GetVehicle[playerid][listitem]);
            new Cache:result = mysql_query(mysql, str_query);
            cache_get_value_name_int(0, "VehicleID", load);
            if(load == -1)
            {
                new model, connect;
                cache_get_value_name_int(0, "Model", model);
                cache_get_value_name_int(0, "LoadConnect", connect);
                f(str_2, sizeof(str_2), "Инструменты для %s", GetNameCar(model));
                SetPVarInt(playerid, !"ListOwnableCars", listitem);
                f(str_1, sizeof(str_1), "Загрузить машину\n%s", connect == 1 ? "Не загружать при авторизации" : "Загрузить при авторизации");
                cache_delete(result);
                return SPD(playerid, 169, DIALOG_STYLE_LIST, str_2, str_1, !"Выбор", !"Отмена");
            }
            cache_delete(result);
	        new carid = ShowCar[playerid][listitem];
	        ShowVeh[playerid] = carid;
	        new number = GetVehicleID(carid);
	        if(IsPlayerHaveCar(playerid, number))
	        {
	            if(CarInfo[number][cShtraf] > 0)
				{
					SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт стоит на штрафстоянке, необходимо внести залог в банке!");
					SCM(playerid, -1, !"Местоположение авто отмечено на миникарте красным маркером.");
					new Float:X, Float:Y, Float:Z;
					GetVehiclePos(number, X, Y, Z);
					return EnableGPSForPlayer(playerid, X, Y, Z);
				}
	            if(CarInfo[number][cLock]) strcat(str, "{FF6347}Открыть\n");
				else strcat(str, "{9ACD32}Закрыть\n");
				if(CarInfo[number][cKeyIN]) strcat(str, "{9ACD32}Вытащить ключи\n");
				else strcat(str, "{FF6347}Вставить ключи\n");
				strcat(str, "Припарковать\n");
				strcat(str, "Найти\n");
				if(CarInfo[number][cAlarmON]) strcat(str, "{9ACD32}Выключить сигнализацию\n");
				else strcat(str, "{FF6347}Включить сигнализацию\n");
				strcat(str, "{73B461}Информация о авто (Паспорт)\n");
				if(IsPlayerRegCar(playerid, number)) strcat(str, "{73B461}Очистить список посредников\n");
				else strcat(str, "{73B461}Вернуть ключи\n");
				if(TwinTurbo[carid][cStatus]) strcat(str, "Режим езды [ {E4A72B}Sport{FFFFFF} ]\n");
				else strcat(str, "Режим езды [ {73B461}Comfort{FFFFFF} ]\n");
				if(PI[playerid][pVIP] >= 3) strcat(str, "Заспавнить машину [ {9ACD32}1000${FFFFFF} ]");
				else strcat(str, "Заспавнить машину [ {FD4D3D}Недоступно{FFFFFF} ]");
				strcat(str, "\n{FF0000}Выгрузить");
				f(str2, sizeof(str2), "Инструменты для %s (%i)", GetNameCar(GetVehicleModelEx(carid)), carid);
				SPD(playerid, 163, DIALOG_STYLE_LIST, str2, str, !"Выбор", !"Отмена");
	        }
		}
		case 163:
		{
		    if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: callcmd::lock(playerid);
	            case 1: callcmd::key(playerid);
	            case 2: SPD(playerid, 6971, DIALOG_STYLE_LIST, !"", !"- Припарковать в этом месте\n- Вернуть на стандартную парковку", !"Принять", !"Отмена");
	            case 3:
	            {
	                valstr(str, ShowVeh[playerid]);
	                callcmd::findcar(playerid, str);
	            }
	            case 4:
	            {
	                valstr(str, ShowVeh[playerid]);
	                callcmd::alarm(playerid, str);
	            }
	            case 5:
	            {
				    new number = GetVehicleID(ShowVeh[playerid]);
					static nomeraa[64];
					if(!GetString(CarInfo[number][cNumber], ""NAME" ST"))
						f(nomeraa, sizeof(nomeraa), "{A63737}%s{FFFFFF}", CarInfo[number][cNumber]);
					else
						nomeraa = "{991717}Без номеров [X2 налог]{FFFFFF}";

				    if(IsAPlane(number))
				    	f(str, sizeof(str), "{FFFFFF}Транспорт: {73B461}%s%s{FFFFFF}\nВладелец: {73B461}%s{FFFFFF}\nПосредник: {73B461}%s{FFFFFF}\nНалог: {73B461}%i{FFFFFF} / 35 000\nШтраф: {73B461}%i{FFFFFF} / 60 000\nНомер автомобиля: %s\n\n{B03131}Обратите внимание что за ваш авто необходимо\nплатить налоги или его отберут гос. служащие!\nОплатить налог можно в банке.", GetNameCar(GetVehicleModelEx(ShowVeh[playerid])), (CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{EAD064}[TT]") : (""), CarInfo[number][cOwner], CarInfo[number][cKeyer], CarInfo[number][cShtrafer], CarInfo[number][cShtraf], nomeraa);
				    else
				        f(str, sizeof(str), "{FFFFFF}Транспорт: {73B461}%s%s{FFFFFF}\nВладелец: {73B461}%s{FFFFFF}\nПосредник: {73B461}%s{FFFFFF}\nПробег: {73B461}%.0f км.{FFFFFF}\nНалог: {73B461}%i{FFFFFF} / 35 000\nШтраф: {73B461}%i{FFFFFF} / 60 000\nНомер автомобиля: %s\n\n{B03131}Обратите внимание что за ваш авто необходимо\nплатить налоги или его отберут гос. служащие!\nОплатить налог можно в банке.", GetNameCar(GetVehicleModelEx(ShowVeh[playerid])), (CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{EAD064}[TT]") : (""), CarInfo[number][cOwner], CarInfo[number][cKeyer], CarInfo[number][cMilage], CarInfo[number][cShtrafer], CarInfo[number][cShtraf], nomeraa);
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", str, !"Принять", !"");
	            }
	            case 6:
	            {
                	new number = GetVehicleID(ShowVeh[playerid]);
                 	if(IsPlayerRegCar(playerid, number))
                 	{
						SetString(CarInfo[number][cKeyer], "The State");
						SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно удалили всех посредников на ваш автомобиль.");
						callcmd::cars(playerid);
					}
					else
					{
					    SetString(CarInfo[number][cKeyer], "The State");
						SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно вернули ключи от автомобиля.");
					}
	            }
	            case 7: callcmd::style(playerid);
	            case 8:
	            {
	                valstr(str, ShowVeh[playerid]);
	                callcmd::fixmycar(playerid, str);
	            }
	           case 9:
                {
                    new number = GetVehicleID(ShowVeh[playerid]);
                    SafeRemoveCar(number, number);
                    SCM(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы успешно выгрузили свой автомобиль");
                }
	        }
		}
		case 164:
		{
		    if(response)
		    {
		        if(PI[playerid][pLevel] >= 2)
		        {
		            new id,money;
			        sscanf(inputtextsave,"p<,>ud",id,money);
			        if(IsPlayerConnected(id))
			        {
			            if(money <1)return 1;
			            if(GetPlayerBizes(id))
			            {
			                if(BizOffer[id] == INVALID_PLAYER_ID)
			                {
				                new bizz = ShowPBiz[playerid];
	             				if(!IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bExit_X], BizInfo[bizz][bExit_Y], BizInfo[bizz][bExit_Z]) && !IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bEnter_X], BizInfo[bizz][bEnter_Y], BizInfo[bizz][bEnter_Z])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для передачи прав на бизнес, вы должны находится в его интерьере или у входа в него!");
				                if(ProxDetectorS(5.0, playerid, id, 1))
				                {
				                    BizOffer[playerid] = id;
				                    BizOffer[id] = playerid;
				                    BizPrice[id] = money;
				                    ShowPBiz[id]= bizz;
									f(str, sizeof(str), "Предлагает %s купить у него бизнес.", PN(id));
									SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 10.0, 5000);
				                    SPD(playerid, 0, 0, !"", !"{FFFFFF}\n\nВы успешно предложили игроку продать ваш бизнес.\n\n", !"Принять", !"");
				                    f(str,sizeof(str),"{FFFFFF}\n\n%s предлагает вам купить у него бизнес за $%i.\n\n",PN(playerid),money);
				                    SPD(id,165,0,"Покупка бизнеса",str,"Купить","Отмена");
				                }
				                else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
					        }
					        else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - Игроку уже предложили покупку бизнеса!");
				        }
				        else
						{
							SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок не может купить у вас бизнес! Он не может содержать больше бизнесов чем у него есть сейчас!");
							SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вам предложили купить бизнес, но вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
						}
			        }
		        }
		        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Продавать бизнес другим игрокам можно только со 2-го уровня");
			}
            else callcmd::bizinfo(playerid);
		}
		case 165:
		{
		    new id = BizOffer[playerid];
		    if(response)
		    {
		        new money = BizPrice[playerid];
		        if(GetString(BizInfo[ShowPBiz[playerid]][bOwner], PN(id)))
		        {
			        if(BizOffer[id] == playerid)
			        {
			            if(GetMoney(playerid) >= money)
						{
				            if(ProxDetectorS(10.0, playerid, id, 1))
				            {
					            if(GetPlayerBizes(playerid))
					            {
									new biz = ShowPBiz[playerid];
									BizInfo[biz][bNalog] = 0;
									SetString(BizInfo[biz][bOwner], PN(playerid));
									GiveMoney(playerid, -money);
									GiveMoney(id, money);
									aml(50, playerid, PN(id), "Покупка бизнеса", money, 6);
									BizOffer[playerid] =
									BizOffer[id] = INVALID_PLAYER_ID;
									BizPrice[playerid] = 0;
									SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю вас с приобретением бизнеса!");
									SCM(id, COLOR_VALIK, !"[Информация] {FFFFFF}Вы продали свой бизнес");
									PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
									UpdateBiz(biz);
									return 1;
					            }
					            else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
				            }
				            else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - Вы далеко от продавца!");
						}
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			        }
					else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - ОШИБКА!");
				}else SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - ОШИБКА!");
		    }
		    else
			{
				SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно отказались от покупки бизнеса.");
				SCM(id, COLOR_RED, !"[Информация] {FFFFFF}Игрок отказался от покупки бизнеса.");
			}
			BizOffer[playerid] =
			BizOffer[id] = INVALID_PLAYER_ID;
			BizPrice[playerid] = 0;
		}
		case 171:
		{
		    if(!response) return 1;
	        new carid = ShowCar[playerid][listitem];
	        new number = GetVehicleID(carid);
	        if(IsPlayerHaveCar(playerid, number))
	        {
	            ShowVeh[playerid] = carid;
	            if(!CarInfo[number][cShtraf]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт не стоит на штрафстоянке");
	            f(str, sizeof(str), "{FFFFFF}Номер транспорта: SP %i\nСумма залога: $%i", carid, CarInfo[number][cShtraf]);
	            SPD(playerid, 172, DIALOG_STYLE_MSGBOX, !"Подтверждение", str, !"Выкупить", !"Отмена");
	        }
	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт!");
		}
		case 9062:
		{
			if(!response) return 1;
		    if(IsAArmy(playerid) && PI[playerid][pRank] < 4)
			{
			    PI[playerid][pDCTime] = 2;
			    UpdatePlayerDataInt(playerid, "DCTime", 2);
				return SCM(playerid, -1, !">> {BE2D2D} На службе в армии, вы не можете изменить место спавна!");
			}
			new home = ShowHouse[playerid][listitem];
			PI[playerid][pDCTime] = 1;
			UpdatePlayerDataInt(playerid, "DCTime", 1);
			SCM(playerid, -1, ">> {BE2D2D} Вы установили дом местом спавна!");
			PI[playerid][pHouseSpawn] = home;
			UpdatePlayerDataInt(playerid, "HouseSpawn", home);
			callcmd::setspawn(playerid);
		}
		case 1781:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: callcmd::setspawn(playerid);
					case 1:
		            {
		            	if(GetPlayerHouse(playerid) == -1) return SCM(playerid, -1, !">> {BE2D2D} Вы не проживаете в доме!");
						SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Выберите дом для спавна");
						ShowPlayerHome(playerid, 9062);
					}
		            case 2:
		            {
		                if(PI[playerid][pMember]==0) return SCM(playerid, -1, !">> {BE2D2D} Вы не состоите в организации!");
		                PI[playerid][pDCTime] = 2;
		                UpdatePlayerDataInt(playerid, "DCTime", 2);
		                SCM(playerid, -1, !">> {BE2D2D} Вы установили организацию местом спавна!");
		                callcmd::setspawn(playerid);
		            }
		            case 3:
		            {
		                if(IsAArmy(playerid) && PI[playerid][pRank]<4)
						{
						    PI[playerid][pDCTime] = 2;
						    UpdatePlayerDataInt(playerid, "DCTime", 2);
							SCM(playerid, -1, !">> {BE2D2D} На службе в армии, вы не можете изменить место спавна!");
							return 0;
						}
		                PI[playerid][pDCTime] = 0;
		                UpdatePlayerDataInt(playerid, "DCTime", 0);
		                SCM(playerid, -1, !">> {BE2D2D} Вы установили вокзал местом спавна!");
		                callcmd::setspawn(playerid);
					}
					case 4:
					{
					    if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
					    if(!FamilyInfo[PI[playerid][pFamilyMember]][famHouse]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет семейной квартиры");
					    if(IsAArmy(playerid) && PI[playerid][pRank] < 4)
						{
						    PI[playerid][pDCTime] = 2;
						    UpdatePlayerDataInt(playerid, "DCTime", 2);
							return SCM(playerid, -1, !">> {BE2D2D} На службе в армии, вы не можете изменить место спавна!");
						}
						PI[playerid][pDCTime] = 3;
						UpdatePlayerDataInt(playerid, "DCTime", 3);
		                SCM(playerid, -1, !">> {BE2D2D} Вы установили семейную квартиру местом спавна!");
		                callcmd::setspawn(playerid);
					}
					case 5:
					{
						if(PI[playerid][pVIP] < 5) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам недоступна данная функция!");
						if(GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) ==0)
						{
						    new Float:X, Float:Y, Float:Z, Float:A;
						    GetPlayerPos(playerid,X,Y,Z);
							GetPlayerFacingAngle(playerid,A);
						    PI[playerid][pPos_X]=X;
							PI[playerid][pPos_Y]=Y;
							PI[playerid][pPos_Z]=Z;
							PI[playerid][pPos_A]=A;
							PI[playerid][pDCTime]=4;
							UpdatePlayerDataFloat(playerid, "Pos_X", PI[playerid][pPos_X]);
							UpdatePlayerDataFloat(playerid, "Pos_Y", PI[playerid][pPos_Y]);
							UpdatePlayerDataFloat(playerid, "Pos_Z", PI[playerid][pPos_Z]);
							UpdatePlayerDataFloat(playerid, "Pos_A", PI[playerid][pPos_A]);
							UpdatePlayerDataInt(playerid, "DCTime", 4);
							SCM(playerid,-1,!">> {BE2D2D} Вы установили новую точку спавна!");
							callcmd::setspawn(playerid);
						}
						else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Сдесь нельзя установить место спавна!");
					}
				}
			}
		}
		case 172:
		{
		    if(!response) return 1;
	        new number = GetVehicleID(ShowVeh[playerid]);
	        if(IsPlayerHaveCar(playerid, number))
	        {
	            if(!CarInfo[number][cShtraf]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт не стоит на штрафстоянке!");
	            if(GetMoney(playerid) >= CarInfo[number][cShtraf])
	            {
		            SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно выкупили свой транспорт!");
                    GiveMoney(playerid, -CarInfo[number][cShtraf]);
					CarInfo[number][cShtraf] = 0;
					aml(52, playerid, "", "Выкуп авто со штраф-стоянки", CarInfo[number][cShtraf]);
					SetString(CarInfo[number][cShtraf], "The State");
		            SaveOwnableCar(number);
	            }
	            else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	        }
		}
		case 887:
		{
		    if(response)
		    {
		        if(GetMoney(playerid)<30000)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        f(str,sizeof(str),"{FFFFFF}Поздравляем! Ваш пароль востановлен.\n{E52B2B}Обязательно запомните этот пароль и измените его.\n{FFFFFF}Новый пароль: 123456{FFFFFF}.\n");
		        SPD(playerid,0,0,"",str,"Закрыть","");
		        PI[playerid][pBankPass] = 123456;
		        UpdatePlayerDataInt(playerid, "BankPass", 123456);
		        GiveMoney(playerid,-30000);
                GiveMoney(PanelPlayerID[playerid],20000);
				aml(50, playerid, PN(PanelPlayerID[playerid]), "Восстановление пароля", 20000);
				aml(52, playerid, "", "Восстановление пароля < разница", 10000);
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~New password: 123456", 30000, 3);
		    }
		    else SCM(PanelPlayerID[playerid],COLOR_GREY,"[Информация] {FFFFFF}Игрок отклонил ваше предложение о изменении пароля!");
		}
		case 881:
		{
		    if(response)
		    {
		        new carid = ShowCar[playerid][listitem];
		        new number = GetVehicleID(carid);
		        if(IsPlayerHaveCar(playerid, number))
		        {
		            ShowVeh[playerid] = carid;
		            if(!PI[playerid][pPack]) f(str,sizeof(str),"\n\n{FFFFFF}Номер транспорта: {42B02C}SP %i{FFFFFF}\nСумма к оплате: {42B02C}$%i{FFFFFF}\n\n", carid, CarInfo[number][cShtrafer]);
		            else f(str,sizeof(str),"\n\n{FFFFFF}Номер транспорта: {42B02C}SP %i{FFFFFF}\nСумма к оплате: {42B02C}$%i{FFFFFF}\nПо скольку у вас имеется улучшение, вам прийдеться заплатить всего лишь {42B02C}%i${FFFFFF}\n\n", carid, CarInfo[number][cShtrafer], CarInfo[number][cShtrafer]/2);
		            SPD(playerid,882,0,"Подтверждение",str,"Оплатить","Отмена");
		        }
		        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт");

		    }
		}
		case 882:
		{
		    if(response)
		    {
		        new number = GetVehicleID(ShowVeh[playerid]);
		        if(IsPlayerHaveCar(playerid, number))
		        {
		            if(GetMoney(playerid) >= CarInfo[number][cShtrafer])
		            {
			            SCM(playerid, COLOR_GREEN, !"Вы успешно оплатили налог на транспорт");
			            if(!PI[playerid][pPack])SCM(playerid, COLOR_GREEN, !"Обратите внимание что имея улучшение халявщик вы будете платить в 2 раза меньше!");
			            OrgInfo[GLS[13]][oBank]+=CarInfo[number][cShtrafer];
			            SaveOrg(GLS[13]);
			            if(PI[playerid][pPack])
			            {	
			            	GiveMoney(playerid,-CarInfo[number][cShtrafer]/2);
			            	aml(52, playerid, "", "Налог на транспорт", CarInfo[number][cShtrafer]/2);
			            }
						else
						{
							GiveMoney(playerid,-CarInfo[number][cShtrafer]);
							aml(52, playerid, "", "Налог на транспорт", CarInfo[number][cShtrafer]);
						}
						CarInfo[number][cShtrafer] = 0;
			            SaveOwnableCar(number);
			            SendBankBot(playerid);
		            }
		            else SendBotMessage(playerid,"Извините, но  у вас недостаточно денег!");
		        }
		    }
		}
		case 804:
  		{
	 		if(response)
			{
	  		    new house = PI[playerid][pHouseTemp];
             	if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return 1;
		        SetString(HouseInfo[house][hOwner],"The State");
		        if(HouseInfo[house][hCost] != 0)
		        {
		        	GiveMoney(playerid,HouseInfo[house][hCost]/2);
					f(str_1, sizeof(str_1), "Продажа дома (id на сервере %i) (id в бд (%i))", house, HouseInfo[house][hID]);
		        	aml(51, playerid, "", str_1, HouseInfo[house][hCost]/2);
		        }
				else if(HouseInfo[house][hCost] == 0)
				{
			 		PI[playerid][pVirMoney] += 6000;
			 		UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
					f(str_1, sizeof(str_1), "Продажа дома (id на сервере %i) (id в бд (%i))", house, HouseInfo[house][hID]);
			 		aml(53, playerid, "", str_1, 6000);
				}

				DeletePlayerHouse(playerid, house);

				new houseid = GetPlayerFirstHouse(playerid);
		     	PI[playerid][pHouseSpawn] = houseid;
		     	UpdatePlayerDataInt(playerid, "HouseSpawn", houseid);

		     	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы продали ваш дом");
		     	PI[playerid][pDCTime] = 0;
		     	HouseEntered[playerid] = -1;
		     	UpdatePlayerDataInt(playerid, "DCTime", 0);
		     	SetString(HouseInfo[house][hDescription], "");
				J_SetPlayerPos(playerid, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				UpdateHouse(house);
			}
		}
  		case 803:
  		{
  			if(response)
			{
				new number = GetVehicleID(GetPlayerVehicleID(playerid));
				if(IsAOwnableCar(number))
				{
					if(IsPlayerInHisVehicle(playerid))
					{
					    if(IsPlayerRegCar(playerid, number))
					    {
							new cost = CarInfo[number][cCost]/2;
							GiveMoney(playerid,cost);
							aml(51, playerid, "", "Продажа транспорта", cost);
       						SellCar(number, number, playerid);
							SCMf(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы продали ваше транспортное средство за $%i",cost);
						  	GetNumberCars(playerid,PI[playerid][pCars]);
						}
					}
				}
			}
		}
		case 195:
		{
		    if(response)
			{
			    if(GetPlayerHouse(playerid) != -1)
			    {
			        new house = PI[playerid][pHouseTemp];
			        if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return 0;
		            if(GetString(HRoomOwner[house][listitem],"The State")) return callcmd::house(playerid);
				    new id = GetPlayerID(HRoomOwner[house][listitem]);
				    if(id != INVALID_PLAYER_ID)
				    {
				    	new houseid = GetPlayerFirstHouse(id);
				        PI[id][pHouseSpawn] = houseid;
				        UpdatePlayerDataInt(id, "HouseSpawn", houseid);
				        PI[id][pDCTime] = 0;
				        UpdatePlayerDataInt(id, "DCTime", 0);
     					SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена улица. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				        SCMf(id, -1, "Владелец дома {42B02C}%s{FFFFFF} выселил вас.",PN(playerid));
				    }
				    else mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `HouseSpawn` = '-1', `DCTime` = '0' WHERE `NickName` = '%s'", HRoomOwner[house][listitem]);
				    SCMf(playerid, -1, "Вы выселили игрока {42B02C}%s{FFFFFF} из своего дома.", HRoomOwner[house][listitem]);
				    SetString(HRoomOwner[house][listitem],"The State");
        			SaveHouse(house);
				}
			}
		}
		case 196:
		{
		    if(response)
			{
			    new player = RHouseOffer[playerid];
			    if(!IsPlayerConnected(player)) return RHouseOffer[playerid] = INVALID_PLAYER_ID;
				new house = GetPlayerHouse(player);
				if(house == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не известный номер дома.");
			    if(!GetString(HouseInfo[house][hOwner],PN(player))) return 0;
		        new s = GetHouseStyle(house);
    			for(new i;i < HouseRooms[s];i ++) f(str,sizeof(str),"%s- Комната {42B02C}№%i{FFFFFF}\n",str,i+1);
	    		SPD(playerid,197,2,"",str,"Занять","Назад");
			}
			else RHouseOffer[playerid] = INVALID_PLAYER_ID;
		}
		case 197:
		{
		    if(response)
			{
			    new player = RHouseOffer[playerid];
			    if(!IsPlayerConnected(player)) return RHouseOffer[playerid] = INVALID_PLAYER_ID;
		        new house = GetPlayerHouse(player);
		    	if(GetString(HRoomOwner[house][listitem],"The State"))
		    	{
		    	    SetString(HRoomOwner[house][listitem],PN(playerid));

		    	    SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно арендовали комнату в доме игрока %s", PN(player));
		    	    SCMf(player, COLOR_GREEN, "%s принял ваше предложение пожить у него в доме!", PN(playerid));

					PI[playerid][pHouseSpawn] = house;
					UpdatePlayerDataInt(playerid, "HouseSpawn", house);
					RHouseOffer[playerid] = INVALID_PLAYER_ID;

					PI[playerid][pDCTime] = 1;
					UpdatePlayerDataInt(playerid, "DCTime", 1);
					SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ваш дом. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
					SaveHouse(house);
		    	}
		    	else
		    	{
				    new s = GetHouseStyle(house);
		    		for(new i;i < HouseRooms[s];i ++) f(str,sizeof(str),"%s- Комната {42B02C}№%i{FFFFFF}\n",str,i+1);
  			    	SPD(playerid,197,2,"",str,"Занять","Назад");
		    	}
			}
			else RHouseOffer[playerid] = INVALID_PLAYER_ID;
		}
		case 198:
		{
		    if(response)
			{
			    new id = strval(inputtextsave);
				if(!ProxDetectorS(5,playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
			 	if(GetPlayerHouse(id) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок уже живет в доме!");
			    new house = PI[playerid][pHouseTemp];
			    for(new i;i < HouseRooms[GetHouseStyle(house)];i ++)
				{
					if(GetString(HRoomOwner[house][i], "The State"))
					{
						f(str, sizeof(str), "Игрок {42B02C}%s{FFFFFF} предлагает вам жить в комнате его дома.", PN(playerid));
						SPD(id, 196, 0, !"", str, !"Принять", !"Отмена");
						SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы предлагаете игроку {42B02C}%s{FFFFFF} жить в комнате вашего дома.", PN(id));
						RHouseOffer[id] = playerid;
						return 1;
					}
					SCM(playerid, COLOR_GREY, !"Все комнаты вашего дома заняты");
				}
			}
		}
		case 2431:
		{
		    if(response)
		    {
		        new house = PI[playerid][pHouseTemp];
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(HouseEntered[playerid] == -1) return 1;
         				SPD(playerid, 185, DIALOG_STYLE_TABLIST_HEADERS, "", "Еда\tНеобходимо продуктов\nКартофель-Фри\t{A5EC67}60\nСэндвич\t{A5EC67}80\nБургер\t{E3EC67}100\nКрылышки\t{ECD667}120\nПицца\t{ECB267}140\nКурица с салатом\t{EC8D67}160\nКомплексный Обед\t{EC6767}300", "Выбор", "Отмена");
		            }
		            case 1: callcmd::drink(playerid);
		            case 2:
					{
					    if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_RED ,!"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
			    	    if(GetPlayerVirtualWorld(playerid) == house + 50)
			    	    {
							HouseID[playerid] = HouseEntered[playerid];
							SetPVarInt(playerid, !"InvType", 2);
			    	    	ShowInvMenu(playerid, 2);
			    	    	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
			    	    }
       					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не возле своего шкафа");
					}
					case 3:
					{
					    new s = GetHouseStyle(house);//тип дома
     					if(GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Владелец не может выселится!");
     					for(new i; i < HouseRooms[s]; i++)// перебираеться количество комнат
						{
							if(GetString(HRoomOwner[house][i], PN(playerid)))//возвращает комнаты
							{
							    SetString(HRoomOwner[house][i], "The State");
	        					SaveHouse(house);
	        					new houseid = GetPlayerFirstHouse(playerid);
							    PI[playerid][pHouseSpawn] = houseid;
							    UpdatePlayerDataInt(playerid, "HouseSpawn", houseid);
						        PI[playerid][pDCTime] = 0;
						        UpdatePlayerDataInt(playerid, "DCTime", 0);
						        SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначена улица. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
						        return SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы успешно выселились из дома.");
							}
						}
						new houseid = GetPlayerFirstHouse(playerid);
						PI[playerid][pHouseSpawn] = houseid;
						UpdatePlayerDataInt(playerid, "HouseSpawn", houseid);
      					PI[playerid][pDCTime] = 0;
      					UpdatePlayerDataInt(playerid, "DCTime", 0);
      					SCM(playerid, -1, !"******* {BE2D2D} Ошибка, отправьте на форум скриншот и мы постараемся исправить, но мы вас выселили!");
					}
		        }
		    }
		    else callcmd::house(playerid);
		}
		case 6698:
		{
		    if(response)
		    {
		        new house = PI[playerid][pHouseTemp];
		        if(house != -1)
				{
					switch(listitem)
					{
					    case 0:
					    {
							if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]) ||
								IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]))
							{
								if(HouseInfo[house][hLock])
								{
									HouseInfo[house][hLock] = 0;
									SCM(playerid, -1, !"[Информация] {FFFFFF}Дверь {9ACD32}открыта");
									UpdateHouse(house);
									SaveHouse(house);
								}
								else
								{
							       	HouseInfo[house][hLock] = 1;
							       	SCM(playerid, -1, !"[Информация] {FFFFFF}Дверь {FF6347}закрыта");
							       	UpdateHouse(house);
							       	SaveHouse(house);
	       						}
    						}
			    			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не возле своего дома");
			    			callcmd::house(playerid);
						}
						case 1:
						{
							if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!"), callcmd::house(playerid);
							new num = 0;
  					     	for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
							{
							    if(!GetString(HRoomOwner[house][s], "The State")) num++;
							}
							if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
							SPD(playerid, 177, DIALOG_STYLE_INPUT, "Продажа дома", "{FFFFFF}Введите ид игрока и цену через запятую\nПример: {9ACD32}6,1000000", "Далее", "Отмена");
						}
					}
				}
			}
		}
		case 174:
		{
		    if(response)
		    {
		        new house = PI[playerid][pHouseTemp];
		        if(house != -1)
				{
					switch(listitem)
					{
					    case 0:
					    {
							if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]) ||
								IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]))
							{
								if(HouseInfo[house][hLock])
								{
									HouseInfo[house][hLock] = 0;
									SCM(playerid, -1, !"[Информация] {FFFFFF}Дверь {9ACD32}открыта");
									UpdateHouse(house);
									SaveHouse(house);
								}
								else
								{
							       	HouseInfo[house][hLock] = 1;
							       	SCM(playerid, -1, !"[Информация] {FFFFFF}Дверь {FF6347}закрыта");
							       	UpdateHouse(house);
							       	SaveHouse(house);
	       						}
    						}
			    			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не возле своего дома");
			    			callcmd::house(playerid);
						}
						case 1:
						{
                            if(!GetString(HouseInfo[house][hOwner], PN(playerid))) SPD(playerid, 2431, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Холодильник\n{42B02C}-{FFFFFF} Минибар\n{42B02C}-{FFFFFF} Шкаф\n{42B02C}-{FFFFFF} Выселится из дома", !"Принять", !"Назад");
                            else SPD(playerid, 2431, DIALOG_STYLE_LIST, !"", !"{42B02C}-{FFFFFF} Холодильник\n{42B02C}-{FFFFFF} Минибар\n{42B02C}-{FFFFFF} Шкаф", !"Принять", !"Назад");
						}
                        case 2:
                        {
                            if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
                            f(str_1, sizeof(str_1), "{42B02C}-{FFFFFF} Ремонт\n{42B02C}-{FFFFFF} %s\n{42B02C}-{FFFFFF} %s\n{42B02C}-{FFFFFF} %s", (HouseInfo[house][hBar] == 1) ? ("Минибар {EC6767}[ Имеется ]") : ("Заказать бар {42B02C}[$5000]"), (HouseInfo[house][hPodval] == 1) ? ("Подвал: {EC6767}[ Имеется ]") : ("Построить подвал {42B02C}[ 400 000 $ ]"), (HouseInfo[house][hMiningPodval] == 1) ? ("Подвал с вентеляцией: {EC6767}[ Имеется ]") : "Построить подвал с вентеляцией {42B02C}[ 5 000 000 $ ]");
                            SPD(playerid, 176, DIALOG_STYLE_LIST, "HouseUpgrade", str_1, "Выбрать", "Отмена");
                        }
		    			case 3:
						{
						    if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
						    new num = 0;
					     	for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
							{
							    if(!GetString(HRoomOwner[house][s], "The State")) num++;
							}
							if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
							SPD(playerid, 804, DIALOG_STYLE_MSGBOX, "Предупреждение", "{FFFFFF}Вы действительно хотите продать свой дом?\nОбратите внимание, что при продаже дома вам дадут только\n{EC6767}50 {FFFFFF}процентов от его гос. стоимости", "Дальше", "Отмена");
						}
		    			case 4:
		    			{
						    if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
						    new num = 0;
					     	for(new s; s < HouseRooms[GetHouseStyle(house)]; s++)
							{
							    if(!GetString(HRoomOwner[house][s], "The State")) num++;
							}
							if(num != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Для начала выселите квартирантов!");
		    			    SPD(playerid, 177, DIALOG_STYLE_INPUT, "Продажа дома", "{FFFFFF}Введите ид игрока и цену через запятую\nПример: {9ACD32}6,1000000", "Далее", "Отмена");
						}
						case 5:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
	    			    	f(str, sizeof(str), "{FFFFFF}Счет к оплате: {86EC67}%i\n{FFFFFF}Недошедшие счета: {86EC67}%i\n\n{FFFFFF}Внимание если счет к оплате вашего дома выше $52000\nРаботники налоговой могут конфиксовать ваш дом.\nОплатить счета вы можете в центральном банке "NAME"!", HouseInfo[house][hNalog], HouseInfo[house][hNalog2]);
				    		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Домашний Счет", str, "Закрыть", "");
						}
						case 6:
		    			{
 			     			f(str, sizeof(str), "{FFFFFF}Продуктов в доме: {86EC67}%i{FFFFFF}\nПополнив запас продуктов вы сможете покушать или выпить в любое время у себя в доме.\nВзять продукты или выпивку можно у бара и холодильника!\n\n{2E6C8C}Купить продукты для дома можно в любой закусочной штата!", HouseInfo[house][hProducts]);
					    	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Меню", str, "Принять", "");
						}
						case 7:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
	    			    	SPD(playerid, 198, DIALOG_STYLE_INPUT ,"Аренда", "{FFFFFF}\n\nВведите {42B02C}id{FFFFFF} игрока которого хотите подселить к себе в дом.\n\n", "Ок", "Отмена");
						}
		    			case 8:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
		    			    new s = GetHouseStyle(house);
		    			    static niger[35];
		    			    for(new i; i < HouseRooms[s]; i++)
		    			    {
		    			        if(GetString(HRoomOwner[house][i], "The State")) niger = "{42B02C}Свободная комната{FFFFFF}";
		    			        else f(niger, sizeof(niger), "%s", HRoomOwner[house][i]);
 			        			f(str, sizeof(str), "{FFFFFF}%s- %s\n", str, niger);
		    			    }
		    			    SPD(playerid, 195, DIALOG_STYLE_LIST, "Список арендаторов", str, "Выселить", "Назад");
		    			}
		    			case 9: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", "\n\n{FFFFFF}/med чтобы использовать аптечку!\n\n", "Принять", "");
		    			case 10:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner], PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
		 					f(str_1,sizeof(str_1),"{FFFFFF}Текущее название: {FFFF00}%s\n\n\
		 					{C0C0C0}Укажите название для вашего дома (от 3 до 32 символов)",HouseInfo[house][hDescription]);
	 						SPD(playerid,7709,1,"",str_1,"Изменить", "Отмена");
		    			}
			    	}
			    }
		    }
		}
		case 77:
		{
			new house = GetPVarInt(playerid, "ShowHouse");
			DeletePVar(playerid, "ShowHouse");
			if(response)
		    {
				new money = strval(inputtextsave);
				if(money < 1 || 3000-HouseInfo[house][hProducts] < money)
				{
					SetPVarInt(playerid, "ShowHouse", house);
	               	f(str,sizeof(str),"{FFFFFF}Продуктов в вашем доме: {B03131}%i{FFFFFF}.\nПополнив запас продуктов вы сможете покушать или выпить в любое время у себя в доме.\nВзять продукты или выпивку можно у бара и холодильника!.\n\n{D22C2C}Произошла ошибка, возможно вы пытаетесь купить слишком много продуктов и они не влезут вам в холодильник!", HouseInfo[house][hProducts]);
			    	SPD(playerid, 77, 1, !"Меню", str, !"Принять", !"Отмена");
					return 0;
				}
				new price = floatround( money*BizInfo[BizEntered[playerid]][bEnterPrice], floatround_floor );
				if(BizInfo[BizEntered[playerid]][bProducts] <= money)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
				if(GetMoney(playerid) < price)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				HouseInfo[house][hProducts] += money;
				GiveMoney(playerid,-price);
				GiveBizMoney(BizEntered[playerid],price);
				BizInfo[BizEntered[playerid]][bProducts]-=money;
				aml(52, playerid, "", "Покупка продуктов в дом", price);
				SendBotMessage(playerid,"Спасибо за покупку, у нас всегда качественная еда для наших посетителей!");
		    }
		    else SPD(playerid,2761,2,"","{42B02C}-{FFFFFF} Покушать на месте\n{42B02C}-{FFFFFF} Купить в дом", !"Принять", !"Отмена");
		}
		case 176:
		{
		    if(response)
			{
			    new house = PI[playerid][pHouseTemp];
		        if(house != -1)
		        {
				    switch(listitem)
				    {
						case 0:
						{
						    if(GetString(HouseInfo[house][hOwner], PN(playerid)))
						    {
							    if(IsPlayerInRangeOfPoint(playerid, 90, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]))
							    {
							        if(BuyInt[playerid] == -1)
							        {
							            if(PI[playerid][pDCTime] != 1)
							            {
							            	PI[playerid][pDCTime] = 1;
							            	UpdatePlayerDataInt(playerid, "DCTime", 1);
							            }
							            Clother[playerid] = -1;
									    BuyInt[playerid] = 1;
									    if(pTemp[playerid][SPECTPLAYER] == false) SpecPl(playerid, true);
									    SCM(playerid, 0xFFFFFFFF, "[Информация] {FFFFFF}Подождите немного ...");
  										SetTimerEx("ChangeInterior", 1000, false, "i", playerid);
									}
									else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже выбираете интерьер");
								}
								else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находиться в доме");
							}
							else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец дома");
						}
						case 1:
						{
						    if(GetString(HouseInfo[house][hOwner], PN(playerid)))
						    {
						    	if(!HouseInfo[house][hBar])
						    	{
						    	    if(GetMoney(playerid) >= 5000)
						    	    {
						    	        HouseInfo[house][hBar] = 1;
						    	        GiveMoney(playerid, -5000);
						    	        aml(52, playerid, "", "Покупка бара для дома", -5000);
						    	        SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы купили бар для дома [/drink] (-$5000)");
										SaveHouse(house);
									}
						    	    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
						    	}
						    	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме уже есть бар!");
						    }
						}
						case 2:
						{
						    if(GetString(HouseInfo[house][hOwner], PN(playerid)))
						    {
						    	if(!HouseInfo[house][hPodval])
						    	{
						    	    if(GetMoney(playerid) >= 400000)
						    	    {
						    	        HouseInfo[house][hPodval] = 1;
						    	        GiveMoney(playerid, -400000);
						    	        aml(52, playerid, "", "Покупка подвала для дома", -400000);
						    	        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно заказали строительство подвала для вашего дома!");
										SaveHouse(house);
										callcmd::house(playerid);
									}
						    	    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
						    	}
						    	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме уже есть подвал!");
						    }
						}
						case 3:
                        {
                            if(GetString(HouseInfo[house][hOwner], PN(playerid)))
                            {
                                if(!HouseInfo[house][hMiningPodval])
                                {
                                    if(GetMoney(playerid) >= 5000000)
                                    {
                                        HouseInfo[house][hMiningPodval] = 1;
                                        GiveMoney(playerid, -5000000);
                                        SCM(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно заказали строительство подвала с вентеляцией для вашего дома!");
                                        SaveHouse(house);
                                        callcmd::house(playerid);
                                    }
                                    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
                                }
                                else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме уже есть подвал с вентеляцией!");
                            }
                        }
					}
			    }
		    }
		    else callcmd::house(playerid);
		}
		case 177:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) {
					return SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", !"{FFFFFF}Введите ид игрока и цену через запятую\n{9ACD32}- Пример: {B83434}6,1000000", !"Далее", !"Отмена");
		        }

		        new
					id,
					price;
		        sscanf(inputtextsave, "p<,>dd", id, price);
		        if(price < 1) {
					return SPD(playerid, 177, DIALOG_STYLE_INPUT, !"Продажа дома", !"{FFFFFF}Введите ид игрока и цену через запятую\n{9ACD32}- Пример: {B83434}6,1000000", !"Далее", !"Отмена");
		        }

		        new house = PI[playerid][pHouseTemp];
		        if(house != -1)
		        {
			        if(GetString(HouseInfo[house][hOwner], PN(playerid)))
				    {
					    if(ProxDetectorS(10.0, playerid, id, 1))
					    {
					        if(GetPlayerHouse(id) != -1)
					        {
								if(GetPlayerHouses(id))
								{
							        if(HouseOffer[id] == INVALID_PLAYER_ID)
							        {
							    		f(str, sizeof(str), "{FFFFFF}%s хочет продать вам свой дом\nНомер дома: %i\nЦена: $%i", PN(playerid), house, price);
										SPD(id, 86, DIALOG_STYLE_MSGBOX, !"Продажа дома", str, !"Купить", !"Отмена");
										SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы предлагаете %s купить ваш дом за $%i", PN(id), price);
										f(str, sizeof(str), "Предлагает %s купить у него дом.", PN(id));
										SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 10.0, 5000);
										HouseOffer[id] = playerid;
										HouseOffer[playerid] = id;
										HousePrice[id] = price;
									}
									else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этому игроку уже кто-то предлагает купить дом");
								}
								else
								{
									SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Этот игрок не может приобрести больше домов!");
									SCM(id, COLOR_GREEN, !">>>>{FFFFFF} - Вам пытались предложить покупку дома, но у вас максимальное количество домов!");
								}
							}
							else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок уже где-то прописан");
					    }
			            else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
					}
			    }
		    }
		    else callcmd::house(playerid);
		}
		case 1666:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<600)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -600);
			 			aml(52, playerid, "", "Курица в соусе", 600);
			 			OrgInfo[TEAM_YAKUZA][oBank]+=600;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Курица в соусе Терияки'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,50);
                  		SendEatBot(playerid);
		            }
		            case 1:
		            {
		                if(GetMoney(playerid)<500)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
                        if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
			 			GiveMoney(playerid, -500);
			 			aml(52, playerid, "", "Мисо-суп", 500);
			 			OrgInfo[TEAM_YAKUZA][oBank]+=500;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Мисо-суп'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,40);
                  		SendEatBot(playerid);
		            }
		            case 2:
		            {
                        if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<700)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -700);
			 			aml(52, playerid, "", "Лапша с говядиной", 700);
			 			OrgInfo[TEAM_YAKUZA][oBank]+=700;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Прозрачная лапша с говядиной'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,60);
                  		SendEatBot(playerid);
		            }
					case 3:
					{
                        if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<800)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -800);
			 			aml(52, playerid, "", "Удон сливочном соусе", 800);
			 			OrgInfo[TEAM_YAKUZA][oBank]+=800;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Удон в сливочном соусе с говядиной'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,70);
		                SendEatBot(playerid);
		            }
					case 4:
					{
                        if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
						if(GetMoney(playerid)<600)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
			 			GiveMoney(playerid, -600);
			 			aml(52, playerid, "", "Кани спайси", 600);
			 			OrgInfo[TEAM_YAKUZA][oBank]+=600;//арія
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Кани спайси'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,50);
		                SendEatBot(playerid);
		            }
		        }
			}
		}
		case 185:
	    {
	        if(response)
	        {
	            new biz = BizEntered[playerid];
				new Float:Health;
				GetPlayerHealth(playerid,Health);
          		switch(listitem)
				{
			        case 0:
			        {
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
						else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 2) return SCM(playerid, COLOR_RED, !"В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=2;
						    notneedm[playerid]=1;
						}
						if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 3)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						   	if(GetMoney(playerid) < 220) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
							notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 3;
						    GiveBizMoney(biz,220);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 220)
						    {
						        SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
						    }
							GiveMoney(playerid, -220);
							if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=60;//арія
							aml(52, playerid, "", "Покупка картофеля фрии", 220);
        					notneedm[playerid]=0;
        					SendEatBot(playerid);
						}
						SCM(playerid, COLOR_VALIK, !"Вы взяли картофель-фри. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,10);
			        }
					case 1:
					{
		                if(Fullness[playerid] >= 85) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
						else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 3)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=3;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 3)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						    if(GetMoney(playerid) < 260) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						    BizInfo[biz][bProducts] -= 3;
							GiveBizMoney(biz,260);
							notneedm[playerid]=0;
						}
     					if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 260)
							{
							    SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
							}
							GiveMoney(playerid, -260);
							if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=80;//арія
							aml(52, playerid, "", "Покупка сэндвича", 260);
					 		notneedm[playerid]=0;
					 		SendEatBot(playerid);
						}
		                GiveFullness(playerid,15);
		                SCM(playerid, COLOR_VALIK, !"Вы взяли сэндвич. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                SaveBiz(biz);
					}
					case 2:
					{
					    //if(GetMoney(playerid) < 100) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
                  		else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 4)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=4;
          					notneedm[playerid]=1;
						}

		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 4)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						    if(GetMoney(playerid) < 300) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 4;
							GiveBizMoney(biz,300);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 300)
							{
							    SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
							}
					 		GiveMoney(playerid, -300);
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=100;
					 		aml(52, playerid, "", "Покупка баскет", 300);
					 		notneedm[playerid]=0;
					 		SendEatBot(playerid);
						}
		                GiveFullness(playerid,25);
		                SCM(playerid, COLOR_VALIK, !"Вы взяли баскет. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);

					}
					case 3:
					{
					    //if(GetMoney(playerid) < 120) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
     					else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 5)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=5;
                            notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 5)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						    if(GetMoney(playerid)< 340) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
						    BizInfo[biz][bProducts] -= 5;
							GiveBizMoney(biz,340);
                            notneedm[playerid]=0;
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 340)
							{
							    SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
							}
					 		GiveMoney(playerid, -340);
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=120;
					 		aml(52, playerid, "", "Покупка крылышков", 340);
                            notneedm[playerid]=0;
                            SendEatBot(playerid);
						}
		                SCM(playerid, COLOR_VALIK, !"Вы взяли крылышки. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,30);
					}
					case 4:
					{
					    //if(GetMoney(playerid) < 140) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
		                else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 6)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=6;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 7)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						    if(GetMoney(playerid) < 380) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 7;
							GiveBizMoney(biz,380);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 380)
						    {
						        SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
						    }
					 		GiveMoney(playerid, -380);
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=140;
					 		aml(52, playerid, "", "Покупка салата", 380);
					 		notneedm[playerid]=0;
					 		SendEatBot(playerid);
						}
		                SCM(playerid, COLOR_VALIK, !"Вы взяли салат. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,35);
					}
					case 5:
					{
					    //if(GetMoney(playerid) < 160) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
		                else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 7)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=7;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 8)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						    if(GetMoney(playerid) < 420) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 8;
							GiveBizMoney(biz,420);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 420)
						    {
						        SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
						    }
					 		GiveMoney(playerid, -420);
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=160;
					 		aml(52, playerid, "", "Покупка курицы", 420);
					 		notneedm[playerid]=0;
					 		SendEatBot(playerid);
						}
		                SCM(playerid, COLOR_VALIK, !"Вы взяли курицу. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,45);
					}
					case 6:
					{
		                if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны");
		                else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hProducts] < 15)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В доме недостаточно продуктов, купить их можно в закусочной!");
						    HouseInfo[HouseEntered[playerid]][hProducts]-=15;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 15)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						    if(GetMoney(playerid) < 700) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 15;
							GiveBizMoney(biz,700);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 700)
						    {
						        SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
								SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return 0;
						    }
						    if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=300;
					 		GiveMoney(playerid, -700);
					 		aml(52, playerid, "", "Покупка комплексного обеда", 700);
					 		notneedm[playerid]=0;
					 		SendEatBot(playerid);
						}
		                SCM(playerid, COLOR_VALIK, !"Вы взяли комплексный обед. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,100);
					}
				}
			}
	    }
		case 186:
	    {
	        if(response)
	        {
	            if(!PI[playerid][pHeal])
	            {
	                PI[playerid][pHeal] = GetPlayerVirtualWorld(playerid);
	                UpdatePlayerDataInt(playerid, "Heal", GetPlayerVirtualWorld(playerid));
	                PI[playerid][pHealTime] = 0;
	                SCM(playerid, COLOR_LIGHTBLUE, !"[Информация] {FFFFFF}Вы согласились пройти курс лечения");
	            }
	        }
		}
		case 193:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money < 800 || money > 10000) return SPD(playerid,193,1,"Введите сумму","Введите сумму залога\n\n{9ACD32}- Не менее $800 и не более $10000","Ок","Отмена");
		        if(GetPlayerState(playerid) == 2)
			  	{
			  	    new carid = GetPlayerVehicleID(playerid);
			    	if(vTemp[carid][vTeam] == TEAM_LSPD || vTemp[carid][vTeam] == TEAM_PDLV || vTemp[carid][vTeam] == TEAM_LVPD || vTemp[carid][vTeam] == TEAM_SFPD)
			    	{
				    	if(GetVehicleModelEx(carid) == 525)
						{
						    if(IsTrailerAttachedToVehicle(carid))
						    {
								new vehid = GetVehicleTrailer(carid);
								new number = GetVehicleID(vehid);
								new Float:Health;
							    for(new i;i < sizeof(CarPounds);i ++)
							    {
									if(!IsAOwnableCar(number)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете поставить данное транспортное средство на штраф стоянку");
									if(IsPlayerToKvadrat(playerid,CarPounds[i][0],CarPounds[i][1],CarPounds[i][2],CarPounds[i][3]))
									{
										if(IsPlayerInRangeOfPoint(playerid,15.0,1570.2062,-1151.0127,23.9412) || IsPlayerInRangeOfPoint(playerid,10.0,1815.2671,-1145.4780,23.8606) || IsPlayerInRangeOfPoint(playerid,10.0,1732.3651,-1145.3220,23.8720)) return SCM(playerid, COLOR_RED, !"В этом месте нельзя оставить машину");
										DetachTrailerFromVehicle(carid);
										if(CarInfo[number][cShtraf]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете поставить данное транспортное средство на штраф стоянку , так как оно уже там стоит!");
										SPD(playerid, 0, 0, !"", !"Вы поставили транспорт на штрафстоянку и получили 800$ в виде поощрения.", !"Закрыть", !"");
										GiveMoney(playerid,800);
										aml(51, playerid, "", "постановку транспорта на штрафстоянку", 800);
										SetString(CarInfo[number][cShtrafName], PN(playerid));
										GetVehicleHealth(vehid,Health);
										CarInfo[number][cShtraf] = strval(inputtextsave);
										CarInfo[number][cKeyIN] = 0;
										GetVehiclePos(vehid,CarInfo[number][cPos_X],CarInfo[number][cPos_Y],CarInfo[number][cPos_Z]);
										GetVehicleZAngle(vehid,CarInfo[number][cPos_A]);
										vTemp[vehid][vAntiRepair]=2;
										VehicleHealth[vehid] = Health;
                                        RespawnOwnableCar(playerid, vehid);
										SaveOwnableCar(number);
										return 1;
									}
						        }
							}
						}
					}
				}
		    }
		}
		case 206:
		{
		    if(response)
		    {
				new number = UnLeaderID[playerid];
				PlayerUnleader(INVALID_PLAYER_ID,OrgInfo[number][oLeader]);
				SCMf(playerid, -1, "Вы сняли игрока %s с поста лидера",OrgInfo[number][oLeader]);
   				SendAdminsMessagef(-1, " Администратор %s выгнал игрока %s из должности лидерства", PN(playerid), OrgInfo[number][oLeader]);
   				SetString(OrgInfo[number][oLeader],"Свободна");
  				SaveOrg(number);
		    }
		    return 1;
		}
		case 207:
		{
		    if(response) StopAudioStreamForPlayer(playerid);
		    callcmd::phone(playerid);
		}
		case 492:
		{
		    if(!response) return 1;
		    GiveMoney(playerid, -3000000);
		    aml(52, playerid, "", "создание семьи", 3000000);
		    SendBotMessage(playerid, !"Хорошего дня!");
		    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно создали семью!\n{DF553A}Используйте /fammenu для её регистрации и установки настроек.", !"Принять", !"");
		    GameTextForPlayer(playerid, !"Successful", 0, 1);
         	PI[playerid][pFamily] = 1;
         	UpdatePlayerDataInt(playerid, "Family", PI[playerid][pFamily]);
		}
	    case 493:
	    {
			if(!response) return 1;
			switch(listitem)
	        {
				case 0: SPD(playerid, 494, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
				case 1:
				{
					if(!PI[playerid][pNameFamily]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сначала укажите название семьи!"), SPD(playerid, 494, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
					SPD(playerid, 495, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите слоган вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина слогана от 15 до 40 символов.\n{FFFFFF}2. {dda64d}Слоган (Девиз) нельзя нарушать.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}Примеры: \n\n1. {dda64d}Семья, долг, честь\n{FFFFFF}2. {dda64d}Непресклонные, несгибаемые, несдающиеся\n{FFFFFF}3. {dda64d}Мудрость и сила\n\n", "Принять", "Отмена");
				}
			}
		}
        case 494:
        {
			if(!response) return callcmd::fammenu(playerid);
			if(strlen(inputtextsave) < 5 || strlen(inputtextsave) > 15) return SPD(playerid, 494, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
            if(strfind(inputtextsave, " ", true) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В названии семьи запрещены пробелы!"), SPD(playerid, 494, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите будущее название вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина названия от 5-ти до 15 символов.\n{FFFFFF}2. {dda64d}Название семьи должно быть в именительном падеже.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}При нарушении этих правил, ваша семья будет удалена!\n\n", "Принять", "Отмена");
            f(str, sizeof(str), "[Информация] {FFFFFF}Вы успешно установили название вашей семьи. Теперь ваша семья будет называться: %s", inputtextsave);
			SCM(playerid, COLOR_VALIK, str);
            PI[playerid][pNameFamily] = 1;
            UpdatePlayerDataInt(playerid, "NameFamily", PI[playerid][pNameFamily]);
            SetString(PI[playerid][pNameFamily2], inputtextsave);
            UpdatePlayerDataStr(playerid, "NameFamily2", PI[playerid][pNameFamily2]);
            callcmd::fammenu(playerid);
        }
        case 495:
        {
            if(!response) return callcmd::fammenu(playerid);
		    if(strlen(inputtextsave) < 15 || strlen(inputtextsave) > 40) return SPD(playerid, 495, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите слоган вашей семьи.\n\n{f2a425}Критерии:\n\n{FFFFFF}1. {dda64d}Длина слогана от 15 до 40 символов.\n{FFFFFF}2. {dda64d}Слоган (Девиз) нельзя нарушать.\n{FFFFFF}3. {dda64d}Не должно быть нормативной лексики\n\n{FFFFFF}Примеры: \n\n1. {dda64d}Семья, долг, честь\n{FFFFFF}2. {dda64d}Непресклонные, несгибаемые, несдающиеся\n{FFFFFF}3. {dda64d}Мудрость и сила\n\n", "Принять", "Отмена");
			SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно установили слоган. ( %s )", inputtextsave);
    		SaveFamily(playerid, inputtextsave);
        }
		case 5003:
		{
		    if(!response) return callcmd::fammenu(playerid);
			if(strlen(inputtextsave) < 6)
			{
			    strmid(FamilyInfo[PI[playerid][pFamilyMember]][famDiscord], "None", 0, 40);
	            mysql_pqueryf(mysql, "UPDATE `Family` SET `discord` = 'None' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", "\n\n{FFFFFF}Вы успешно установили {D1FD4D}Discord {FFFFFF}для вашей семьи!\nТеперь каждый член семьи, сможет узнать ваш {FFFFFF}сервер!\n\n{D1FD4D}Убедитесь, что номер указан верно!\n\n", "Принять", "");
				return GameTextForPlayer(playerid, "Successful", 0, 1);
		    }
            strmid(FamilyInfo[PI[playerid][pFamilyMember]][famDiscord], inputtextsave, 0, 40);
            TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "discord", FamilyInfo[PI[playerid][pFamilyMember]][famDiscord], "s");
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", "\n\n{FFFFFF}Вы успешно установили {D1FD4D}Discord {FFFFFF}для вашей семьи!\nТеперь каждый член семьи, сможет узнать ваш {FFFFFF}сервер!\n\n{D1FD4D}Убедитесь, что номер указан верно!\n\n", "Принять", "");
			GameTextForPlayer(playerid, "Successful", 0, 1);
		}
		case 5001:
		{
		    if(!response)
		    {
		        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отказались от расформирования вашей семьи!");
	    		return callcmd::fammenu(playerid);
		    }
		    new id = PI[playerid][pFamilyMember];
		    if(id != -1)
		    {
			    foreach(new i: Family)
			    {
			        if(PI[i][pFamilyMember] == id)
			        {
			        	PI[i][pFamilyMember] = -1;
			            PI[i][pFamilyMemberID] = -1;
			            UpdatePlayerDataInt(i, "FamilyMemberID", -1);
			            SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Семья в которой вы состояли, была расформирована!");
			            SafeRemoveFam(i, i);
			        }
			    }
				if(FamilyInfo[id][famHouse])
			    {
			        FamilyHouse[FamilyInfo[id][famHouse]][fhStatus] = 0;
				 	TSave(pFamHouse, "FamilyHouse", "StatusLock", FamilyHouse[FamilyInfo[id][famHouse]][fhStatus], "d");

					strmid(FamilyHouse[FamilyInfo[id][famHouse]][fhOwner], "The State", 0, strlen("The State"), 15);
					TSave(pFamHouse, "FamilyHouse", "Owner", FamilyHouse[FamilyInfo[id][famHouse]][fhOwner], "s");

					FamilyHouse[FamilyInfo[id][famHouse]][fhHealth] = 0;
					TSave(pFamHouse, "FamilyHouse", "Health", FamilyHouse[FamilyInfo[id][famHouse]][fhHealth], "d");

					FamilyHouse[FamilyInfo[id][famHouse]][fhArmour] = 0;
					TSave(pFamHouse, "FamilyHouse", "Armour", FamilyHouse[FamilyInfo[id][famHouse]][fhArmour], "d");

					UpdateFamHouse(FamilyInfo[id][famHouse]);
			    }
			    FamilyInfo[id][famMembersCount] = 0;
			    FamilyInfo[id][famChatColor] = 0;
			    FamilyInfo[id][famGalka] = 0;
			    FamilyInfo[id][famBrand] = 0;
			    FamilyInfo[id][famHouse] = 0;
			    FamilyInfo[id][famRep] = 0;
			    FamilyInfo[id][famMoney] = 0;
			    FamilyInfo[id][famRespect] = 0;
			    FamilyInfo[id][famQuestTalon] = 0;
			    FamilyInfo[id][famBussines] = 0;
			    FamilyInfo[id][famShadow] = 0;
			    FamilyInfo[id][famMedicCredit] = 0;
			    FamilyInfo[id][famWhiteList] = 0;
			    FamilyInfo[id][famBankOffer] = 0;
			    FamilyInfo[id][famMarodery] = 0;
			    FamilyInfo[id][famEatFish] = 0;
			    FamilyInfo[id][famType] = 0;
			    FamilyInfo[id][famEXP] = 0;
			    FamilyInfo[id][famLevel] = 0;
			    UpdateFamily(id);

			    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", "\n\n{42B02C}Вы успешно расформировали вашу семью!\n\n", "Принять", "");
			    Iter_Remove(OWNABLEFAMILYS, id);
			}
		}
		case 4999:
		{
			if(!response) return callcmd::fammenu(playerid);
			if(strval(inputtextsave) < 0 || strval(inputtextsave) > 30) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, возможно вы сделали что-то не так!"), callcmd::fammenu(playerid);
            mysql_pqueryf(mysql, "UPDATE `Family` SET `chatcolor` = '%i' WHERE `ID` = '%i'", strval(inputtextsave), PI[playerid][pFamilyMemberID]);
            FamilyInfo[PI[playerid][pFamilyMember]][famChatColor] = strval(inputtextsave);
            foreach(new i: Family) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerText[i] = false;
            SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}Изменил цвет чата/статуса семьи!", FamColor, PN(playerid), playerid);
            callcmd::fammenu(playerid);
		}
		case 499:
		{
		    if(!response) return callcmd::fammenu(playerid);
			if(strval(inputtextsave) == playerid)
		    {
				strmid(FamilyInfo[PI[playerid][pFamilyMember]][famZam], "None", 0, MAX_PLAYER_NAME);
	            mysql_pqueryf(mysql, "UPDATE `Family` SET `zam` = 'None' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
				callcmd::fammenu(playerid);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно очистили список заместителя!");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока, который будет заместителем!");
			if(PI[playerid][pFamilyMember] != PI[strval(inputtextsave)][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которого вы хотите сделать заместителем, не состоит в вашей семье!");
			strmid(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(strval(inputtextsave)), 0, MAX_PLAYER_NAME);
            mysql_pqueryf(mysql, "UPDATE `Family` SET `zam` = '%s' WHERE `ID` = '%i'", FamilyInfo[PI[playerid][pFamilyMember]][famZam], PI[playerid][pFamilyMemberID]);
			f(str, sizeof(str), "\n\n{FFFFFF}%s[%i] назначил вас заместителем в семье!\n\n\n{D0D026}Используйте /fammenu (панель семьи).", PN(playerid), playerid);
			SPD(strval(inputtextsave), 0, DIALOG_STYLE_MSGBOX, "Подсказка", str, "Принять", "");
			SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}назначил %s[%i] заместителем в семье!", FamColor, PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));
			callcmd::fammenu(playerid);
		}
		case 5000:
		{
		    if(!response) return callcmd::fammenu(playerid);
			if(strval(inputtextsave) == playerid)
		    {
				strmid(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], "None", 0, MAX_PLAYER_NAME);
	            mysql_pqueryf(mysql, "UPDATE `Family` SET `zam2` = 'None' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
				callcmd::fammenu(playerid);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно очистили список заместителя!");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока, который будет заместителем!");
			if(PI[playerid][pFamilyMember] != PI[strval(inputtextsave)][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которого вы хотите сделать заместителем, не состоит в вашей семье!");
			strmid(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(strval(inputtextsave)), 0, MAX_PLAYER_NAME);
           	mysql_pqueryf(mysql, "UPDATE `Family` SET `zam2` = '%s' WHERE `ID` = '%i'", FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PI[playerid][pFamilyMemberID]);
			f(str, sizeof(str), "\n\n{FFFFFF}%s[%i] назначил вас заместителем в семье!\n\n\n{D0D026}Используйте /fammenu (панель семьи).", PN(playerid), playerid);
			SPD(strval(inputtextsave), 0, DIALOG_STYLE_MSGBOX, "Подсказка", str, "Принять", "");
			SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}назначил %s[%i] 2-ым заместителем в семье!", FamColor, PN(playerid), playerid, PN(strval(inputtextsave)), strval(inputtextsave));
			callcmd::fammenu(playerid);
		}
		case 498:
		{
			if(!response) return 1;
			new id = strval(inputtextsave);
			if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, возможно вы сделали что-то не так!"), callcmd::fammenu(playerid);
			if(PI[id][pFamilyMember] != PI[playerid][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок не состоит в вашей семье!"), callcmd::fammenu(playerid);
			if(GetString(PN(id), FamilyInfo[PI[playerid][pFamilyMember]][famCreator]) || GetString(PN(id), FamilyInfo[PI[playerid][pFamilyMember]][famZam]) || GetString(PN(id), FamilyInfo[PI[playerid][pFamilyMember]][famZam2])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
			FamilyInfo[PI[id][pFamilyMember]][famMembersCount] --;
            mysql_pqueryf(mysql, "UPDATE `Family` SET `memberscount` = '%i' WHERE `ID` = '%i'", FamilyInfo[PI[id][pFamilyMember]][famMembersCount], PI[playerid][pFamilyMemberID]);
			SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}выгнал из семьи: %s[%i]!", FamColor, PN(playerid), playerid, PN(id), id);
			f(str, sizeof(str), "{FFFFFF}%s[%i] выгнал вас из семьи: %s.", PN(playerid), playerid, FamilyInfo[PI[playerid][pFamilyMember]][famName]);
			SPD(id, 0, 0, "Информация", str, "Принять", "");
			PI[id][pFamilyMember] = -1;
			PI[id][pFamilyMemberID] = -1;
			UpdatePlayerDataInt(id, "FamilyMemberID", -1);
		}
		case 497:
		{
		    if(!response) return 1;
			if(strval(inputtextsave) == INVALID_PLAYER_ID)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, возможно вы сделали что-то не так!");
				return callcmd::fammenu(playerid);
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtextsave)))
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок слишком далеко от вас!");
				return callcmd::fammenu(playerid);
			}
			if(PI[strval(inputtextsave)][pFamilyMember] != -1)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок состоит в другой семьи!");
				return callcmd::fammenu(playerid);
			}
			if(PI[strval(inputtextsave)][pLevel] < 3)
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок должен иметь уровень выше 3-го!");
				return callcmd::fammenu(playerid);
			}
			static str2am[25];
			str2am[0] = EOS;
		    if(GetPVarInt(playerid, str2am) > gettime())
			{
				SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, вы уже приглашали этого игрока!");
				return callcmd::fammenu(playerid);
			}
			SCMf(strval(inputtextsave), COLOR_ORANGE, "[Информация] {FFFFFF}Игрок %s[%i] приглашает вас в семью: {c8ec36}%s.", PN(playerid), playerid, FamilyInfo[PI[playerid][pFamilyMember]][famName]);
			SCM(strval(inputtextsave), -1, !"Введите {c8ec36}/acceptfam{FFFFFF} для того чтобы принять предложение, или {ec4636}/cancelfam{FFFFFF}, чтобы отклонить.");
			SCMf(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы успешно предложили %s[%i] вступить в вашу семью!", PN(strval(inputtextsave)), strval(inputtextsave));
			AcceptFam{strval(inputtextsave)} = true;
			SetPVarInt(strval(inputtextsave), !"IDInvite", playerid);
			f(str2am, 20, "FamLastTargetInvite%i", strval(inputtextsave));
			SetPVarInt(playerid, str2am, gettime() + 120);
		}
		case 496:
        {
            if(response)
			{
			    switch(listitem)
			    {
			        case 0: SPD(playerid, 497, DIALOG_STYLE_INPUT, "Пригласить в семью", "{FFFFFF}Введите в окошко {3667EC}id {FFFFFF}игрока, которого хотите пригласить к себе в семью!\n{3667EC}- Игрок должен находиться рядом с вами.", "Принять", "Отмена");
			        case 1: SPD(playerid, 498, DIALOG_STYLE_INPUT, "Выгнать из семьи", "{FFFFFF}Введите в окошко {ECBF36}id {FFFFFF}игрока, которого хотите уволить из семьи!\n{ECBF36}- Игрок должен находиться в вашей семье!", "Принять", "Отмена");
			        case 2:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру!");
						static fam_Zam[33];
						if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], "None")) f(fam_Zam, sizeof(fam_Zam),"{ED993F}%s.{FFFFFF}", FamilyInfo[PI[playerid][pFamilyMember]][famZam]);
						else fam_Zam = "{B3DC52}[Нет]{FFFFFF}";
						f(str, sizeof(str), "\n\n{FFFFFF}Текущий заместитель: %s\n\nВведите в строку ид игрока, который состоит в вашей семье,\nдля того чтобы назначить его заместителем и дать ему панель управления.\nДля того чтобы убрать заместителя, введите свой id.\n\n", fam_Zam);
						SPD(playerid, 499, DIALOG_STYLE_INPUT, "Изменить заместителя", str, "Принять", "Назад");
			        }
			        case 3:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру!");
						static fam_Zam2[33];
						if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], "None")) f(fam_Zam2, sizeof(fam_Zam2),"{ED993F}%s.{FFFFFF}", FamilyInfo[PI[playerid][pFamilyMember]][famZam2]);
						else fam_Zam2 = "{B3DC52}[Нет]{FFFFFF}";
						f(str, sizeof(str), "\n\n{FFFFFF}Текущий заместитель 2: %s\n\nВведите в строку ид игрока, который состоит в вашей семье,\nдля того чтобы назначить его заместителем и дать ему панель управления.\nДля того чтобы убрать заместителя, введите свой id.\n\n", fam_Zam2);
						SPD(playerid, 5000, DIALOG_STYLE_INPUT, "Изменить заместителя", str, "Принять", "Назад");
			        }
					case 4: SPD(playerid, 4999, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}- Цвет семьи, функция которая даст вам возможность сделать небольшое отличие от других семей!\nЦвет семьи используется:\n\n{F58558}- В рации семьи.\n- В статистике семьи.\n-В названии семьи, над головой персонажа.\n-Система будет дополняться в процессе обновлений.\n\n{FFFFFF}Введите в окошко цифру, цвет который вам нравится больше всего:\n{ff5e5e}0, {FFFFFF}1, {e65075}2, {efa4b7}3, {905b69}4, {d052ce}5, {ff00fc}6, {5d395d}7, {8e38ea}8, {6b21bb}9, {2f00ff}10, {7456f8}11, {5287f1}12, {1dbaf2}13, {308eb0}14, {30b061}15, {20f271}16, {107135}17, {47eb2a}18, {9ee991}19, {c2d95e}20, {d1ff00}21, {7b9022}22, {ffc900}23, {e8ca60}24, {6b5b1f}25, {ff8400}26, {c04312}27, {5c4c45}28, {373534}29, {351204}30.\n\n", "Принять", "Назад");
					case 5: SCM(playerid, -1, !"Разработка описание");
					case 6: FamRedacType(playerid);
           			case 7: SPD(playerid, 5003, DIALOG_STYLE_INPUT, "", "\n\n{FFFFFF}Введите в окошко {ECBF36}номер {FFFFFF}вашего Discord, который хотите использовать для общения с семьей!\n\n{ECBF36}- Номер, будет отображаться в описании семьи!\nЕсли вы не знаете что такое Discord, то рекомендуем\nне указывать его номер!\n\n", "Принять", "Отмена");
					case 8: SCM(playerid, -1, !"Разработка передать права лидера семьи");
					case 9: SCM(playerid, -1, !"Разработка изменить название семьи");
					case 10: SCM(playerid, -1, !"Разработка изменить слоган семьи");
					case 11:
					{
					    if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру!");
					    SPD(playerid, 5001, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы действительно хотите расформировать свою семью?\n\n{BE2D2D}В случае если вы ее расформируете, то все игроки состоявшие в ней будут выгнаны, а вы\nпотеряете лидерство в вашей семье и не сможете ею управлять!\n\n", !"Принять", !"Отмена");
					}
				}
			}
			else callcmd::fammenu(playerid);
		}
		case 5002:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Закрыть", !"",\
						"\
						    \n\n\
						    {FFFFFF}Стоимость квартиры: {C5D0FF}%i {FFFFFF}репутации.\n\
						    {FFFFFF}Денег на складе: {C5D0FF}%i$\n\
						    {FFFFFF}Аптечек на складе: {C5D0FF}%i шт.\n\
						    {FFFFFF}Бронежилетов на складе: {C5D0FF}%i шт.\n\n\
						    %s Дополнительный респект\n\
                            %s Успех в работе\n\
                            %s Бизнессмены в долгу\n\
                            %s Неузнаваемый\n\
                            %s Медики в долгу\n\
                            %s Белый список\n\
                            %s Банковские махинации\n\
                            %s Мародёры\n\
                            %s Рыбный цех\
						",\
						FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhCost],\
						FamilyInfo[PI[playerid][pFamilyMember]][famMoney],\
						FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth],\
						FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour],\
						(FamilyInfo[PI[playerid][pFamilyMember]][famRespect] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famQuestTalon] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famBussines] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famShadow] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famMedicCredit] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famWhiteList] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famBankOffer] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famMarodery] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"),\
						(FamilyInfo[PI[playerid][pFamilyMember]][famEatFish] == 1) ? ("{FFFFFF}+") : (" {E4E4E4}-"));
		            }
		            case 1:
		            {
		                if(FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus] == 0) FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus] = 1;
		                else FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus] = 0;
		                TSave(pFamHouse, "FamilyHouse", "StatusLock", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)] %s[%i]: {FFFFFF}%s семейную квартиру!", FamColor, PN(playerid), playerid, (FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus] == 0) ? ("открыл") : ("закрыл"));
                        UpdateFamHouse(FamilyInfo[PI[playerid][pFamilyMember]][famHouse]);
					}
					case 2:
					{
					    if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не Лидер/заместитель семьи!");
						if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 50) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутации!");
						FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 50;
						FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth] += 50;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");
                        TSave(pFamHouse, "FamilyHouse", "Health", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)]{FFFFFF} Лидер/заместитель семьи купил 50 аптечек для семьи!", FamColor);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно закупили аптечки в семейную квартиру.\n\n", !"Закрыть", !"");
					}
					case 3:
					{
					    if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не Лидер/заместитель семьи!");
						if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутации!");
						FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 100;
						FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour] += 20;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");
                        TSave(pFamHouse, "FamilyHouse", "Armour", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)]{FFFFFF} Лидер/заместитель семьи купил 20 бронежилетов для семьи!", FamColor);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно закупили бронежилеты в семейную квартиру.\n\n", !"Закрыть", !"");
					}
					case 4:
					{
         				if(response) FamMoneySklad(playerid);
					    else callcmd::fammenu(playerid);
					}
					case 5:
					{
					    if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не Лидер/заместитель семьи!");
					    if(response) FamMoneySklad2(playerid);
					    else callcmd::fammenu(playerid);
					}
					case 6:
					{
					    if(response)
					    {
							ac_ShowPlayerDialog(playerid, 5006),ShowPlayerDialogf(playerid, 5006, DIALOG_STYLE_LIST, !"{BFBBBA}", !"Принять", !"Отмена",\
							"\
							    {FFFFFF}1. Дополнительный респект\t%s 1000 репутации\n\
							    {FFFFFF}2. Успех в работе\t\t%s 1200 репутации\n\
							    {FFFFFF}3. Бизнессмены в долгу\t%s 900 репутации\n\
							    {FFFFFF}4. Неузнаваемый\t\t%s 800 репутации\n\
							    {FFFFFF}5. Медики в долгу\t\t%s 1100 репутации\n\
							    {FFFFFF}6. Белый список\t\t%s 2000 репутации\n\
							    {FFFFFF}7. Банковские махинации\t%s 4000 репутации\n\
							    {FFFFFF}8. Мародёры\t\t\t%s 7000 репутации\n\
							    {FFFFFF}9. Рыбный цех\t\t\t%s 6000 репутации\n\
							    {F0EE89}Информация об улучшениях\
							",\
							(FamilyInfo[PI[playerid][pFamilyMember]][famRespect] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famQuestTalon] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famBussines] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famShadow] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famMedicCredit] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famWhiteList] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famBankOffer] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famMarodery] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"),\
							(FamilyInfo[PI[playerid][pFamilyMember]][famEatFish] == 1) ? ("{FFFFFF}[{83E09B}ЕСТЬ{FFFFFF}]") : ("{FFFFFF}[{EC6767}НЕТУ{FFFFFF}]"));
					    }
					}
					case 7:
					{
					    if(response)
					    {
					        if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру семьи!");
						    ac_ShowPlayerDialog(playerid, 5007),ShowPlayerDialogf(playerid, 5007, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Принять", !"Назад",\
						    "\
							    {FFFFFF}Вы действительно хотите продать семейную квартиру\n\
								за пол её стоимости? Вы получите: {C5D0FF}%i репутации\
							",\
							FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhCost]/2);
					    }
					}
		        }
		    }
		    else callcmd::fammenu(playerid);
		}
		case 5007:
		{
		    if(response)
		    {
				SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: продал семейную квартиру!", FamColor, PN(playerid), playerid);
				FamilyInfo[PI[playerid][pFamilyMember]][famRep] += FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhCost]/2;
				TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");
				FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus] = 0;
			 	TSave(pFamHouse, "FamilyHouse", "StatusLock", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhStatus], "d");
				strmid(FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhOwner], "The State", 0, strlen("The State"), 15);
				TSave(pFamHouse, "FamilyHouse", "Owner", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhOwner], "s");
				FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth] = 0;
				TSave(pFamHouse, "FamilyHouse", "Health", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhHealth], "d");
				FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour] = 0;
				TSave(pFamHouse, "FamilyHouse", "Armour", FamilyHouse[FamilyInfo[PI[playerid][pFamilyMember]][famHouse]][fhArmour], "d");
				UpdateFamHouse(FamilyInfo[PI[playerid][pFamilyMember]][famHouse]);
				FamilyInfo[PI[playerid][pFamilyMember]][famHouse] = 0;
				TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "house", FamilyInfo[PI[playerid][pFamilyMember]][famHouse], "d");
		    }
		    else callcmd::fammenu(playerid);
		}
		case 5008:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Жареная рыба'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 5);
					}
					case 1:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Варенная рыба'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 10);
					}
     				case 2:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Запеченная тилапия с сыром'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 15);
					}
					case 3:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Пирог с рыбой'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 25);
					}
					case 4:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Скумбрия домашнего копчения'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 35);
					}
					case 5:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Запеченная щука'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 45);
					}
					case 6:
					{
					    if(Fullness[playerid] >= 95) return SCM(playerid, COLOR_FAMILY2, "[Ошибка] {FFFFFF}Вы не голодны");
						SCM(playerid, COLOR_VALIK, !"Вы сьели блюдо под названием 'Красная рыба с кукурузой гриль'. Посмотреть состояние голода можно {FFFFFF}/satiety");
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
						GiveFullness(playerid, 100);
					}
		        }
		    }
		}
		case 5009:
		{
		    if(response)
		    {
		        for(new i; i < sizeof(fType);i ++)
     	        {
     	            if(listitem+1 == fType[i][typeDialog])
	              	{
	              	    if(FamilyInfo[PI[playerid][pFamilyMember]][famLevel] < fType[i][typeLevel])
	 	                {
	 	                    if(AntiFloodTypeFamily[playerid] > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Менять тип семьи, можно раз в 10 минут!");
						    SCMf(playerid, COLOR_RED, "[Ошибка]{FFFFFF} Чтобы изменить тип семьи на %s, уровень Вашей семьи должен быть не ниже %i - го!", fType[i][typeName], fType[i][typeLevel]);
	 	                    return FamRedacType(playerid);
	 	                }
	 	                break;
	              	}
     	        }
              	if(FamilyInfo[PI[playerid][pFamilyMember]][famType] == listitem+1)
     	        {
     	            SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У Вашей семьи уже установлен этот тип");
                    return FamRedacType(playerid);
     	        }
     	        else
     	        {
     	            if(AntiFloodTypeFamily[playerid] > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Менять тип семьи, можно раз в 10 минут!");
		        	AntiFloodTypeFamily[playerid] = gettime() + 600;
     	            FamilyInfo[PI[playerid][pFamilyMember]][famType] = listitem+1;
 	                TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "Type", FamilyInfo[PI[playerid][pFamilyMember]][famType], "d");
				    SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)] %s[%i]:{B9C1B8} Изменил тип семьи! Теперь мы %s!", FamColor, PN(playerid), playerid, FamType);
				    FamRedacType(playerid);
				    foreach(new i: Family) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerText[i] = false;
     	        }
		    }
		    else callcmd::fammenu(playerid);
		}
		case 5004:
		{
		    if(response)
		    {
		        new len = strlen(inputtextsave), val = strval(inputtextsave);
		        if(!len)
		        {
		            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы ничего не ввели!");
		            return FamMoneySklad(playerid);
		        }
		        if(!(1 <= val <= 99999999))
		        {
		            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Нельзя столько положить!");
		            return FamMoneySklad(playerid);
		        }
		        if(GetMoney(playerid) < val)
		        {
		            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет столько денег!");
		            return FamMoneySklad(playerid);
		        }
				SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)] %s[%i]:{FFFFFF} Пополнил склад семьи на %i$!", FamColor, PN(playerid), playerid, val);
				GiveMoney(playerid, -val);
				aml(52, playerid, "", "Пополнил склад семьи", val);
				FamilyInfo[PI[playerid][pFamilyMember]][famMoney] += val;
				TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "money", FamilyInfo[PI[playerid][pFamilyMember]][famMoney], "d");
		    }
		}
		case 5005:
		{
		    if(response)
		    {
		        new len = strlen(inputtextsave), val = strval(inputtextsave);
		        if(!len)
		        {
		            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы ничего не ввели!");
		            return FamMoneySklad2(playerid);
		        }
		        if(!(1 <= val <= 99999999))
		        {
		            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Нельзя столько взять!");
		            return FamMoneySklad2(playerid);
		        }
		        if(FamilyInfo[PI[playerid][pFamilyMember]][famMoney] < val)
		        {
		            SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе семьи нет столько денег!");
		            return FamMoneySklad2(playerid);
		        }
				SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)] %s[%i]:{FFFFFF} Снял со склада семьи %i$!", FamColor, PN(playerid), playerid, val);
				GiveMoney(playerid, val);
				aml(51, playerid, "", "Снятие со склада семьи", val);
				FamilyInfo[PI[playerid][pFamilyMember]][famMoney] -= val;
				TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "money", FamilyInfo[PI[playerid][pFamilyMember]][famMoney], "d");
		    }
		}
		case 5006:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
		                if(FamilyInfo[PI[playerid][pFamilyMember]][famRespect] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
		                if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");
		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 1000;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");
						FamilyInfo[PI[playerid][pFamilyMember]][famRespect] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "Respect", FamilyInfo[PI[playerid][pFamilyMember]][famRespect], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!", FamColor, PN(playerid), playerid);
		            }
			        case 1:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famQuestTalon] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 1200) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");
		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 1200;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");
						FamilyInfo[PI[playerid][pFamilyMember]][famQuestTalon] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "QuestTalon", FamilyInfo[PI[playerid][pFamilyMember]][famQuestTalon], "d");
						SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!", FamColor, PN(playerid), playerid);
			        }
			        case 2:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famBussines] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 900) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 900;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famBussines] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "Bussines", FamilyInfo[PI[playerid][pFamilyMember]][famBussines], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 3:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famShadow] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 800) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 800;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famShadow] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "Shadow", FamilyInfo[PI[playerid][pFamilyMember]][famShadow], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 4:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famMedicCredit] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 1100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 1100;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famMedicCredit] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "MedicCredit", FamilyInfo[PI[playerid][pFamilyMember]][famMedicCredit], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 5:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");

			            FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 2000;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famWhiteList] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "WhiteList", FamilyInfo[PI[playerid][pFamilyMember]][famWhiteList], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 6:
			        {
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famBankOffer] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 4000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 4000;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famBankOffer] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "BankOffer", FamilyInfo[PI[playerid][pFamilyMember]][famBankOffer], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 7:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famMarodery] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 7000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 7000;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famMarodery] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "Marodery", FamilyInfo[PI[playerid][pFamilyMember]][famMarodery], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 8:
			        {
			            if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        					return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famEatFish] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть это улучшение!");
			            if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < 6000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно репутаций!");

		                FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= 6000;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");

						FamilyInfo[PI[playerid][pFamilyMember]][famEatFish] = 1;
						TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "EatFish", FamilyInfo[PI[playerid][pFamilyMember]][famEatFish], "d");

		                static fmt_str[] = "{%s}[Семья(Новости)]{FFFFFF} %s[%i]: купил новое улучшение для семьи!";

						f(str2, sizeof(str2), fmt_str, FamColor, PN(playerid), playerid);

						SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str2);
			        }
			        case 9:
			        {
			            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
						!"\
							{F4AF7F}1.{FFFFFF} Дополнительный респект - Все члены семьи смогут получать дополнительные\n{F2E471}1-2{FFFFFF} опыта каждый PAYDAY.\n\
							{F4AF7F}2.{FFFFFF} Успех в работе - Каждый член семьи будет получать дополнительный {F2E471}талон\n{FFFFFF}при выполнении семейных заданий.\n\
							{F4AF7F}3.{FFFFFF} Бизнессмены в долгу - Участники семьи смогут {F2E471}Бесплатно {FFFFFF}входить\nна евент: Собиратели.\n\
							{F4AF7F}4.{FFFFFF} Неузнаваемый - Время действия маски каждого участника семьи\nв {F2E471}2-а {FFFFFF}раза больше.\n\
							{F4AF7F}5.{FFFFFF} Медики в долгу - Члены семьи смогу покупать аптечки {F2E471}без рецепта {FFFFFF}врача.\n\
							{F4AF7F}6.{FFFFFF} Белый список - Участники семьи платят {F2E471}в 3 раза меньше штраф {FFFFFF}за\nпревышение скорости перед радаром.\n\n\
							{F4AF7F}7.{FFFFFF} Банковские махинации - Участники семьи могут держать ставку в банке до {F2E471}200 000 000$ {FFFFFF}и получать до 200 000$ каждый payday.\n\
	                        {F4AF7F}8.{FFFFFF} Мародёры - Члены семьи смогут воровать патроны и ингридиенты у {F2E471}армий {FFFFFF}без состояния в банде или мафии.\n\
	                        {F4AF7F}9.{FFFFFF} Рыбный цех - Члены семьи смогут бесплатно кушать у {F2E471}холодильника {FFFFFF}семейной квартиры.\
						 ",
						!"Закрыть",
						!"");
			        }
		        }
		    }
		}
		case 8881://fammenuNEW
		{
		    if(!response)
		        return 1;

		    switch(listitem)
		    {
				case 0:
				{
					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        				return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта панель доступна только лидеру и заместителю!");

					static fmt_str[] =
					"\
						{FFFFFF}1. {B9C1B8}Пригласить в семью.\n\
						{FFFFFF}2. {B9C1B8}Выгнать из семьи.\n\
						{FFFFFF}3. {B9C1B8}Заместитель: %s\n\
						{FFFFFF}4. {B9C1B8}Заместитель 2: %s\n\
						{FFFFFF}5. {B9C1B8}Изменить цвет семьи/рации.\n\
						{FFFFFF}6. {B9C1B8}Изменить описание/объявление для семьи.\n\
						{FFFFFF}7. {B9C1B8}Изменить тип семьи.\n\
						{FFFFFF}8. {B9C1B8}Discord семьи %s\n\
						{FFFFFF}9. {B9C1B8}Передать права лидера семьи\n\
						{FFFFFF}10. {B9C1B8}Изменить название семьи\n\
						{FFFFFF}11. {B9C1B8}Изменить слоган семьи\n\
						{FFFFFF}[{fd4c4c}X{FFFFFF}]{B9C1B8} Распустить семью(удалить)\
					";

					static strzam[MAX_PLAYER_NAME+22], strzam2[MAX_PLAYER_NAME+22], strdiscord[45];

					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], "None")) f(strzam, sizeof(strzam),"{ED993F}%s.", FamilyInfo[PI[playerid][pFamilyMember]][famZam]);
					else f(strzam, sizeof(strzam),"{B3DC52}[Выбрать заместителя]");

					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], "None")) f(strzam2, sizeof(strzam2),"{ED993F}%s.", FamilyInfo[PI[playerid][pFamilyMember]][famZam2]);
					else f(strzam2, sizeof(strzam2),"{B3DC52}[Выбрать заместителя]");

					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famDiscord], "None")) f(strdiscord, sizeof(strdiscord),"{FFFFFF}[{B3DC52}%s{FFFFFF}]", FamilyInfo[PI[playerid][pFamilyMember]][famDiscord]);
					else f(strdiscord, sizeof(strdiscord),"{FFFFFF}[{FF8859}Нет{FFFFFF}]", FamilyInfo[PI[playerid][pFamilyMember]][famDiscord]);

					f(str2, sizeof(str2), fmt_str,
					strzam,
					strzam2,
					strdiscord);

                    SPD(playerid, 496, DIALOG_STYLE_LIST, !"Панель управления", str2, !"Принять", !"Назад");
				}
				case 1:
				{
				    static fmt_str[] =
					"\
					    \n\n\
					    {FFFFFF}Название семьи: {%s}%s\n\
					    {FFFFFF}Тип семьи: {%s}%s\n\
					    {FFFFFF}Репутация семьи: {%s}%i очк.\n\
					    {FFFFFF}Уровень семьи: {%s}%i [%i/%i]\n\
						%s\
						{FFFFFF}Денег в бюджете семьи: {%s}%i\n\
						{FFFFFF}Discord: {%s}%s\n\n\
						{FFFFFF}Лидер семьи: {%s}%s\n\
						{FFFFFF}Заместитель: {%s}%s\n\
						{FFFFFF}Заместитель 2: {%s}%s\n\n\
						{FFFFFF}Слоган: {%s}%s\n\
						{FFFFFF}Содержание: {%s}10 репутации каждый PayDay\n\
                        {FFFFFF}Квартира: {%s}%s репутации каждый PayDay\n\n\
						{%s}Объявление: {FFFFFF}[{FF8859}Нет{FFFFFF}]\n\n\n\n\
					";
				    static strmembercount[36], strdiscord[44], strzam[MAX_PLAYER_NAME+30], strzam2[MAX_PLAYER_NAME+30];

				    if(FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount] > 1) f(strmembercount, sizeof(strmembercount), "{FFFFFF}Членов в семье: {%s}%i\n", FamColor, FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount]);

				    if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famDiscord], "None")) f(strdiscord, sizeof(strdiscord),"[ %s ]", FamilyInfo[PI[playerid][pFamilyMember]][famDiscord]);
					else strdiscord = "[ Нет ]";

					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], "None")) f(strzam, sizeof(strzam),"%s", FamilyInfo[PI[playerid][pFamilyMember]][famZam]);
					else strzam = "{FFFFFF}[{FF8859}Нет{FFFFFF}]";

					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], "None")) f(strzam2, sizeof(strzam2),"%s", FamilyInfo[PI[playerid][pFamilyMember]][famZam2]);
					else strzam2 = "{FFFFFF}[{FF8859}Нет{FFFFFF}]";

                    f(str2, sizeof(str2), fmt_str,
                    FamColor,
                    FamilyInfo[PI[playerid][pFamilyMember]][famName],
                    FamColor,
					FamType,
					FamColor,
					FamilyInfo[PI[playerid][pFamilyMember]][famRep],
					FamColor,
					FamilyInfo[PI[playerid][pFamilyMember]][famLevel],
					FamilyInfo[PI[playerid][pFamilyMember]][famEXP],
					FamilyInfo[PI[playerid][pFamilyMember]][famLevel]*10,
					strmembercount,
					FamColor,
					FamilyInfo[PI[playerid][pFamilyMember]][famMoney],
					FamColor,
					strdiscord,
					FamColor,
					FamilyInfo[PI[playerid][pFamilyMember]][famCreator],
					FamColor,
					strzam,
					FamColor,
					strzam2,
					FamColor,
					FamilyInfo[PI[playerid][pFamilyMember]][famSlogan],
					FamColor,
					FamColor,
					(FamilyInfo[PI[playerid][pFamilyMember]][famHouse]) ? ("5") : ("0"),
					FamColor);

					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация о семье", str2, !"Принять", !"");
				}
				case 2:
				{
				    foreach(new i: Player) if(PI[i][pFamilyMember] == PI[playerid][pFamilyMember]) f(str,sizeof(str),"%s\n{FFFFFF} - %s[%i] {D9FF59}[%s]{FFFFFF}     Должность:{D9FF59} %s{FFFFFF}   Уровень: %i.", str, PN(i), i, FamilyInfo[PI[playerid][pFamilyMember]][famName], GetRankName(GetTeamID(i), PI[i][pRank]), PI[i][pLevel]);
				    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Члены семьи онлайн", str, !"Принять", !"");
				}
				case 3: {
					if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false))
        				return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");

					f(str, sizeof(str), "SELECT * FROM `Qelksekm` WHERE FamilyMemberID = %i", PI[playerid][pFamilyMemberID]);
					mysql_pquery(mysql, str, "@OfflineFamilyMembers", "d", playerid);
				}
				case 4: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}1. {dda64d}Чат семьи(рация) - /fam [text]\n{FFFFFF}2. {dda64d}/phone - menu - настройки (Откл/Вкл рацию)\n{FFFFFF}3. {dda64d}Выдать бан семейного чата - /fammute\n{FFFFFF}4.{dda64d} Снять бан семейного чата - /famunmute\n{FFFFFF}5. {dda64d}Быстрый инвайт в семью - /faminvite\n{FFFFFF}6. {dda64d}Быстрое увольнение - /famuninvite\n{FFFFFF}7. {dda64d}Увольнение игроков оффлайн - /famuninviteoff\n\n", !"Принять", !"");
				case 5:
				{
				    if(!FamilyInfo[PI[playerid][pFamilyMember]][famHouse]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет семейной квартиры");
			 		SPD(playerid, 5002, DIALOG_STYLE_LIST, !"",
			 		"{FFFFFF}1.{B9C1B8} Информация о квартире.\n\
 				    {FFFFFF}2.{B9C1B8} Открыть/закрыть квартиру.\n\
 				    {FFFFFF}3.{B9C1B8} Закупить 50 аптечек {FFFFFF}[ 50 репутации ]\n\
 				    4.{B9C1B8} Закупить 20 бронежилетов {FFFFFF}[ 100 репутации ]\n\
 				    5.{B9C1B8} Положить деньги на склад семьи\n\
 				    {FFFFFF}6.{B9C1B8} Взять деньги со склада семьи\n\
 				    {FFFFFF}7.{B9C1B8} Улучшения для семьи\n\
 				    {FFFFFF}[{fd4c4c}X{FFFFFF}]{B9C1B8} Продать семейную квартиру", "Принять", "Назад");
				}
				case 6:
				{
					if(FamilyInfo[PI[playerid][pFamilyMember]][famGalka])
						return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть галочка!");

					SPD(playerid, 10003, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Покупка галочки для семьи\n\nСемья, которая официально подтверждена имеет:\n\n{82cb43}- Специальный знак, подтверждающий запатентованность семьи\n- Возможность влияния на расформ семьи, которая копировала название вашей\n- Возможность терять в 2-а раза меньше репутации, при наказании членов семьи\n- Возможность пользования депозитом в кассах в любое время суток.\n\n{FFFFFF}Стоимость галочки: {f7d83f}50 000 000$\nНажмите Enter {FFFFFF}для подтверждения покупки!", !"Принять", !"Отмена");
				}
				case 7:
				{
					if(!FamilyInfo[PI[playerid][pFamilyMember]][famGalka])
						return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Чтобы оформить бренд, нужно сначала оформить галочку!");

					if(FamilyInfo[PI[playerid][pFamilyMember]][famBrand])
						return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже есть бренд!");

					SPD(playerid, 10004, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Покупка бренда для семьи\n\nСемья, которая владеет брендом имеет:\n\n{82cb43}- Специальный знак, выделеляя вас от других семей.\n- Повышенные шансы получения рулеток в собирателях и дерби.\n- Семейный адвокат сможет с вероятностью 50 процентов освободить вас от TCP.\n- Доступ к информационному центру через телефон.\n- Возможность владения одним домом больше!\n{FFFFFF}Стоимость галочки: {f7d83f}80 000 000$\nНажмите Enter {FFFFFF}для подтверждения покупки!", !"Принять", !"Отмена");
				}
				case 8:
				{
					if(GetString(PN(playerid), FamilyInfo[PI[playerid][pFamilyMember]][famCreator]))
						return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может покинуть семью!");

					SPD(playerid, 8888, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы действительно хотите покинуть свою семью?\n\n{BE2D2D}В случае если вы ее покинете, вы потеряете все возможности, которые предоставляет система семей!\n\n", !"Принять", !"Отмена");
				}
			}
		}
		case 8888://Уйти по с/ж в /fammenu
		{
			if(!response) return 1;
			if(GetString(PN(playerid), FamilyInfo[PI[playerid][pFamilyMember]][famZam]))
			{
				FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount] --;
				f(str, sizeof(str), "{%s}[Cемья (Новости)] %s[%i]: {B9C1B8}самостоятельно покинул семью!", FamColor, PN(playerid), playerid);
				SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str);
				f(str, sizeof(str), "\n\n{FFFFFF}Вы успешно покинули семью: {d0d026}%s.\n\n\n", FamilyInfo[PI[playerid][pFamilyMember]][famName]);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Информация", str, "Принять", "");
				strmid(FamilyInfo[PI[playerid][pFamilyMember]][famZam], "None", 0, MAX_PLAYER_NAME);
	            mysql_pqueryf(mysql, "UPDATE `Family` SET `zam` = 'None' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
				PI[playerid][pFamilyMember] = -1;
				PI[playerid][pFamilyMemberID] = -1;
				UpdatePlayerDataInt(playerid, "FamilyMemberID", -1);
				Iter_Remove(Family, playerid);
				return 1;
			}
			if(GetString(PN(playerid), FamilyInfo[PI[playerid][pFamilyMember]][famZam2]))
			{
				FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount] --;
				f(str, sizeof(str), "{%s}[Cемья (Новости)] %s[%i]: {B9C1B8}самостоятельно покинул семью!", FamColor, PN(playerid), playerid);
				SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str);
				f(str, sizeof(str), "\n\n{FFFFFF}Вы успешно покинули семью: {d0d026}%s.\n\n\n", FamilyInfo[PI[playerid][pFamilyMember]][famName]);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Информация", str, "Принять", "");
				strmid(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], "None", 0, MAX_PLAYER_NAME);
	            mysql_pqueryf(mysql, "UPDATE `Family` SET `zam2` = 'None' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
				PI[playerid][pFamilyMember] = -1;
				PI[playerid][pFamilyMemberID] = -1;
				UpdatePlayerDataInt(playerid, "FamilyMemberID", -1);
				Iter_Remove(Family, playerid);
				return 1;
			}
		   	FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount] --;
            mysql_pqueryf(mysql, "UPDATE `Family` SET `memberscount` = '%i' WHERE `ID` = '%i'", FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount], PI[playerid][pFamilyMemberID]);
			f(str, sizeof(str), "{%s}[Cемья (Новости)] %s[%i]: {B9C1B8}самостоятельно покинул семью!", FamColor, PN(playerid), playerid);
			SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str);
			f(str, sizeof(str), "\n\n{FFFFFF}Вы успешно покинули семью: {d0d026}%s.\n\n\n", FamilyInfo[PI[playerid][pFamilyMember]][famName]);
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Информация", str, "Принять", "");
			PI[playerid][pFamilyMember] = -1;
			PI[playerid][pFamilyMemberID] = -1;
			UpdatePlayerDataInt(playerid, "FamilyMemberID", -1);
		   	Iter_Remove(Family, playerid);
		}
        case 10003:
        {
            if(!response) return 1;
            if(GetMoney(playerid) < 50000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас на руках недостаточно денег!");
            GiveMoney(playerid, -50000000);
            aml(52, playerid, "", "купил галочку для семьи", 50000000);
            mysql_pqueryf(mysql, "UPDATE `Family` SET `galka` = '1' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
            f(str, sizeof(str), "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}купил галочку для нашей семьи!", FamColor, PN(playerid), playerid);
            SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str);
            FamilyInfo[PI[playerid][pFamilyMember]][famGalka] = 1;
            foreach(new i: Family) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerText[i] = false;
            callcmd::fammenu(playerid);
        }
        case 10004:
        {
            if(!response) return 1;
            if(GetMoney(playerid) < 80000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас на руках недостаточно денег!");
            GiveMoney(playerid, -80000000);
            aml(52, playerid, "", "оформил бренд для семьи", 80000000);
            mysql_pqueryf(mysql, "UPDATE `Family` SET `brand` = '1' WHERE `ID` = '%i'", PI[playerid][pFamilyMemberID]);
            f(str, sizeof(str), "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}оформил бренд для нашей семьи!", FamColor, PN(playerid), playerid);
            SendFamilyMessage(PI[playerid][pFamilyMember], COLOR_FAMILY, str);
            FamilyInfo[PI[playerid][pFamilyMember]][famBrand] = 1;
            foreach(new i: Family) if(PI[playerid][pFamilyMember] == PI[i][pFamilyMember]) UpdatePlayerText[i] = false;
            callcmd::fammenu(playerid);
        }
		case 211:
		{
			if(!response) return false;
			if(GetPVarInt(playerid, !"alogin"))
			{
				if(!strlen(inputtextsave) || GetString(inputtextsave, "default") || strlen(inputtextsave) < 5 || strlen(inputtextsave) > 16) return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Придумайте и введите админ-пароль\n\nПримечание:\n\t{FF6347}- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля может быть от 5 до 16 символов", !"Ввод", !"Отмена");
				SetString(PI[playerid][pAPass], inputtextsave);
				UpdatePlayerDataStr(playerid, "APass", PI[playerid][pAPass]);
				DeletePVar(playerid, "alogin");
				SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Админ-панель", !"{FFFFFF}Введите админ-пароль", !"Ок", !"Отмена");
			}
			else
			{	
				if(!strlen(inputtextsave)) return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Админ-панель", !"{FFFFFF}Введите админ-пароль", !"Ок", !"Отмена");
				if(!GetString(PI[playerid][pAPass], inputtextsave)) return J_Kick(playerid, 7886);
				static Adm[30];
				Adm[0] = EOS;
				switch(PI[playerid][pAdmin])
				{
					case ADM_MODER: Adm = "{FFA500}Младший Модератор";
					case ADM_SUPER_MODER: Adm = "{FFCC00}Модератор";
					case ADM_ADMIN: Adm = "{FFA500}Старший Модератор";
					case ADM_SUPER_ADMIN: Adm = "{0000FF}Администратор";
					case ADM_GRAND_ADMIN: Adm = "{8A2BE2}Куратор";
					case ADM_DEPUTY_ADMIN: Adm = "{009900}Заместитель ГА";
					case ADM_MAIN_ADMIN: Adm = "{009900}Главный Администратор";
					case ADM_GRAND: Adm = "{FF0000}Основатель";
				}
				if(!Osnovat(PN(playerid))) SendAdminsMessagef(-1, "[A] %s {FFFFFF}%s вошел в систему администратирования", Adm, PN(playerid));
				SCMf(playerid, -1, "[A] Вы успешно авторизовались как %s", Adm);
				#if AC_ON
				for(new i = 52; i != -1; --i) EnableAntiCheatForPlayer(playerid, i, 0);
				#endif
				ADuty{playerid} = true;
				KillList{playerid} = true;
				callcmd::apanel(playerid);
				Iter_Add(Admin, playerid);
			}
		}
		case 212: if(response) callcmd::go_fished(playerid);
		case 216: if(response) SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски\n \nВзять организационное оружие","Выбор","Назад");
		case 217:
	    {
			if(response)
	  		{
                new team = GetTeamID(playerid);
                switch(listitem)
	  		    {
					case 0: SPD(playerid,218,1,"","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n","Положить","Назад");
					case 1: SPD(playerid,219,1,"","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n","Положить","Назад");
					case 2:
					{
                        if(OrgInfo[team][oOb4ak]==1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,220,1,"","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите достать с Общака\n\n","Взять","Назад");
					    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 3:
					{
                        if(OrgInfo[team][oOb4ak]==1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,221,1,"","\n\n{FFFFFF}Введите кол-во патронов которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
     				case 4: SPD(playerid,2666,1,"","\n\n{FFFFFF}Введите кол-во канистр которое хотите положить в Общак\n\n","Положить","Назад");
					case 5:
					{
                        if(OrgInfo[team][oOb4ak]==1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,2667,1,"","\n\n{FFFFFF}Введите кол-во канистр которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 6: SPD(playerid,2668,1,"","\n\n{FFFFFF}Введите кол-во инструментов которое хотите положить в Общак\n\n","Положить","Назад");
					case 7:
					{
                        if(OrgInfo[team][oOb4ak]==1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,2669,1,"","\n\n{FFFFFF}Введите кол-во инструментов которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 8: SPD(playerid,2670,1,"","\n\n{FFFFFF}Введите кол-во масок которое хотите положить в Общак\n\n","Положить","Назад");
					case 9:
					{
                        if(OrgInfo[team][oOb4ak]==1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер вашей организации закрыл общак!");
						if(PI[playerid][pRank] > 4) SPD(playerid,2671,1,"","\n\n{FFFFFF}Введите кол-во масок которое хотите достать с Общака\n\n","Взять","Назад");
						else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доступно с 5 ранга");
					}
					case 10: SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски\n \nВзять организационное оружие","Выбор","Назад");
					case 11:
					{
                        if(IsAtGang(playerid))GiveGun(playerid, 5, 1);
                        if(PI[playerid][pMember]==TEAM_LCN)GiveGun(playerid, 2, 1);
                        if(PI[playerid][pMember]==TEAM_BIKERS)GiveGun(playerid, 7, 1);
                        if(PI[playerid][pMember]==TEAM_YAKUZA)GiveGun(playerid, 8, 1);
                        if(PI[playerid][pMember]==TEAM_RM)GiveGun(playerid, 15, 1);
					}
	  		    }
			}
			return 1;
		}
		case 2670:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs <= 0) return SPD(playerid,2670,1,"Общак","\n\n{FFFFFF}Введите кол-во масок которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1 маски!","Положить","Назад");
  		        if(drugs > GetInvCount(playerid, Item_Mask)) return SPD(playerid,2670,1,"Общак","\n\n{FFFFFF}Введите кол-во масок которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько масок!","Положить","Назад");
	            InvAdd(playerid, Item_Mask, -drugs);
	            aml(102, playerid, "", "общак", Item_Mask, drugs);
	            OrgInfo[team][oMask] += drugs;
	            f(str,sizeof(str),"%s положил в общак %i маски(у)",PN(playerid),drugs);
	            SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
	            UpdateDorm(team);
	            SaveOrg(team);
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 2671:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs <= 0) return SPD(playerid,2671,1,"Общак","\n\n{FFFFFF}Введите кол-во масок которое хотите достать с Общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1-ой маски!","Взять","Назад");
  		        if(drugs > OrgInfo[team][oMask]) return SPD(playerid,2671,1,"Общак","\n\n{FFFFFF}Введите кол-во масок которое хотите достать с Общака\n\n{FF0000}Ошибка: В Общаке нет столько масок!","Взять","Назад");
	            InvAdd(playerid, Item_Mask, drugs);
	            aml(101, playerid, "", "общак", Item_Mask, drugs);
	            OrgInfo[team][oMask] -= drugs;
	            f(str,sizeof(str),"%s забрал с общака %i маски(у)!",PN(playerid),drugs);
	            SendTeamMessage(GetTeamID(playerid),COLOR_GREY,str);
	            UpdateDorm(team);
	            SaveOrg(team);
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 2667:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs <= 0) return SPD(playerid,2667,1,"Общак","\n\n{FFFFFF}Введите кол-во канистр которое хотите достать с Общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1-ой канистры!","Взять","Назад");
  		        if(drugs > OrgInfo[team][oBenz]) return SPD(playerid,2667,1,"Общак","\n\n{FFFFFF}Введите кол-во канистр которое хотите достать с Общака\n\n{FF0000}Ошибка: В Общаке нет столько канистр с бензином!","Взять","Назад");
	            InvAdd(playerid, Item_Canister, drugs);
	            aml(101, playerid, "", "общак", Item_Canister, drugs);
	            OrgInfo[team][oBenz] -= drugs;
	            f(str,sizeof(str),"%s забрал с общака %i канистру!",PN(playerid),drugs);
	            SendTeamMessage(GetTeamID(playerid),COLOR_GREY,str);
	            UpdateDorm(team);
	            SaveOrg(team);
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 2669:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs <= 0) return SPD(playerid,2669,1,"Общак","\n\n{FFFFFF}Введите кол-во инструментов которое хотите достать с общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1 набора для починки!","Взять","Назад");
  		        if(drugs > OrgInfo[team][oRemont]) return SPD(playerid,2669,1,"Общак","\n\n{FFFFFF}Введите кол-во инструментов которое хотите достать с Общака\n\n{FF0000}Ошибка: В общаке нет столько инструментов!","Взять","Назад");
  		        if((GetInvCount(playerid, Item_Repair)+drugs)>1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете с собой унести больше 1-го набора для починки!");
	            InvAdd(playerid, Item_Repair, drugs);
	            aml(101, playerid, "", "общак", Item_Repair, drugs);
	            OrgInfo[team][oRemont] -= drugs;
	            f(str,sizeof(str),"%s забрал с общака %i набор для починки!",PN(playerid),drugs);
	            SendTeamMessage(GetTeamID(playerid),COLOR_GREY,str);
	            UpdateDorm(team);
	            SaveOrg(team);
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 2666:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs <= 0) return SPD(playerid,2666,1,"Общак","\n\n{FFFFFF}Введите кол-во канистр которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1 канистры!","Положить","Назад");
  		        if(drugs > GetInvCount(playerid, Item_Canister)) return SPD(playerid,2666,1,"Общак","\n\n{FFFFFF}Введите кол-во канистр которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько канистр!","Положить","Назад");
	            InvAdd(playerid, Item_Canister, -drugs);
	            aml(102, playerid, "", "общак", Item_Canister, drugs);
	            OrgInfo[team][oBenz] += drugs;
	            f(str,sizeof(str),"%s положил в общак %i канистру с бензином.",PN(playerid),drugs);
	            SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
	            UpdateDorm(team);
	            SaveOrg(team);
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
		}
		case 2668:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs <= 0) return SPD(playerid,2668,1,"Общак","\n\n{FFFFFF}Введите кол-во инструментов которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1-го инструмента!","Положить","Назад");
  		        if(drugs > GetInvCount(playerid, Item_Repair)) return SPD(playerid,2668,1,"Общак","\n\n{FFFFFF}Введите кол-во инструментов которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько инструментов!","Положить","Назад");
	            InvAdd(playerid, Item_Repair, -drugs);
	            aml(102, playerid, "", "общак", Item_Repair, drugs);
	            OrgInfo[team][oRemont] += drugs;
	            f(str,sizeof(str),"%s положил в общак %i набор для починки.",PN(playerid),drugs);
	            SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
	            UpdateDorm(team);
	            SaveOrg(team);
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
    	case 218:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs > 0)
	  		    {
	  		        if(drugs <= GetInvCount(playerid, Item_Drugs))
	  		        {
	  		            if(OrgInfo[team][oDrugs] + drugs <= 5000)
	  		            {
		  		            InvAdd(playerid, Item_Drugs, -drugs);
		  		            aml(102, playerid, "", "общак", Item_Drugs, drugs);
		  		            OrgInfo[team][oDrugs] += drugs;
		  		            f(str,sizeof(str),"[Информация] {FFFFFF}Вы положили %iг наркотиков в Общак",drugs);
		  		            SCM(playerid,COLOR_VALIK,str);
		  		            f(str,sizeof(str),"%s положил в общак %i наркотиков.",PN(playerid),drugs);
		  		            SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
		  		            UpdateDorm(team);
		  		            SaveOrg(team);
	  		            }
	  		            else SPD(playerid,218,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n{FF0000}Ошибка: Столько в общак не поместится","Положить","Назад");
	  		        }
	  		        else SPD(playerid,218,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько наркотиков","Положить","Назад");
	  		    }
	  		    else SPD(playerid,218,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1г","Положить","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 219:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new mats = strval(inputtextsave);
	  		    if(mats > 0)
	  		    {
	  		        if(mats <= GetInvCount(playerid, Item_Mats))
	  		        {
	  		            if(OrgInfo[team][oMats] + mats <= 50000)
	  		            {
		  		            InvAdd(playerid, Item_Mats, -mats);
		  		            aml(102, playerid, "", "общак", Item_Mats, mats);
		  		            OrgInfo[team][oMats] += mats;
		  		            f(str,sizeof(str),"[Информация] {FFFFFF}Вы положили %i патронов в Общак",mats);
		  		            SCM(playerid,COLOR_VALIK,str);
		  		            f(str,sizeof(str),"%s положил в общак %i патронов.",PN(playerid),mats);
		  		            SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
		  		            UpdateDorm(team);
		  		            SaveOrg(team);
	  		            }
	  		            else SPD(playerid,219,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n{FF0000}Ошибка: Столько в общак н поместится","Положить","Назад");
	  		        }
	  		        else SPD(playerid,219,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n{FF0000}Ошибка: У вас нет столько патронов","Положить","Назад");
	  		    }
	  		    else SPD(playerid,219,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите положить в Общак\n\n{FF0000}Ошибка: Нельзя ложить меньше 1 патрона","Положить","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 220:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new drugs = strval(inputtextsave);
	  		    if(drugs > 0)
	  		    {
	  		        if(drugs <= OrgInfo[team][oDrugs])
	  		        {
	  		            InvAdd(playerid, Item_Drugs, drugs);
	  		            aml(101, playerid, "", "общак", Item_Drugs, drugs);
	  		            OrgInfo[team][oDrugs] -= drugs;
	  		            f(str,sizeof(str),"[Информация] {FFFFFF}Вы достали %iг наркотиков с Общака",drugs);
	  		            SCM(playerid,COLOR_VALIK,str);
	  		            f(str,sizeof(str),"%s забрал с общака %iг. наркотиков!",PN(playerid),drugs);
	  		            SendTeamMessage(GetTeamID(playerid),COLOR_GREY,str);
	  		            UpdateDorm(team);
	  		            SaveOrg(team);
	  		        }
	  		        else SPD(playerid,220,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите достать с Общака\n\n{FF0000}Ошибка: В Общаке нет столько наркотиков","Взять","Назад");
	  		    }
	  		    else SPD(playerid,220,1,"Общак","\n\n{FFFFFF}Введите кол-во наркотиков которое хотите достать с Общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1г","Взять","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
 		}
		case 221:
	    {
			if(response)
	  		{
	  		    new team = GetTeamID(playerid);
	  		    new mats = strval(inputtextsave);
	  		    if(mats > 0)
	  		    {
	  		        if(mats <= OrgInfo[team][oMats])
	  		        {
	  		            InvAdd(playerid, Item_Mats, mats);
	  		            aml(101, playerid, "", "общак", Item_Mats, mats);
	  		            OrgInfo[team][oMats] -= mats;
	  		            f(str,sizeof(str),"[Информация] {FFFFFF}Вы достали %i патронов с Общака",mats);
	  		            SCM(playerid,COLOR_VALIK,str);
	  		            f(str,sizeof(str),"%s забрал с общака %i патронов!",PN(playerid),mats);
	  		            SendTeamMessage(GetTeamID(playerid),COLOR_GREY,str);
	  		            UpdateDorm(team);
	  		            SaveOrg(team);
	  		        }
	  		        else SPD(playerid,221,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите достать с Общака\n\n{FF0000}Ошибка: В Общаке нет столько патронов","Взять","Назад");
	  		    }
	  		    else SPD(playerid,221,1,"Общак","\n\n{FFFFFF}Введите кол-во патронов которое хотите достать с Общака\n\n{FF0000}Ошибка: Нельзя достать меньше 1 патрона","Взять","Назад");
	  		}
	  		else SPD(playerid,217,2,"Общак","{42B02C}-{FFFFFF} Положить наркотики\n{42B02C}-{FFFFFF} Положить патроны\n{42B02C}-{FFFFFF} Достать наркотики\n{42B02C}-{FFFFFF} Достать патроны\n{42B02C}-{FFFFFF} Положить канистру\n{42B02C}-{FFFFFF} Достать канистру\n{42B02C}-{FFFFFF} Положить наборы для починки\n{42B02C}-{FFFFFF} Достать наборы для починки\n{42B02C}-{FFFFFF} Положить маски\n{42B02C}-{FFFFFF} Достать маски","Выбор","Назад");
	  	}
		case 222:
	    {
			if(response)
			{
			    if(donateopen{playerid}) return 1;
			    HideTextDraws(playerid, 2);
			    HideLogo(playerid);
			    ShowDonateTD(playerid);
			}
		}
		case 900:
	    {
			if(response)
	  		{
	  		    if(!strlen(inputtextsave)) return SPD(playerid, 0, 0, !"", !"Ошибка.", !"Закрыть", !"");
		        new money = strval(inputtextsave), cost = money*5000;
		        if(money >= 1 && money <= 10000 && PI[playerid][pVirMoney] >= money)
		        {
					GiveMoney(playerid, cost);
					aml(51, playerid, "", "перевод AZ > вирты", cost);
		            f(str, sizeof(str), "Вы успешно обменяли {BE2D2D}%i{FFFFFF} az coin's на {BE2D2D}%i${FFFFFF}", money, cost);
		            if(money > 3000)
		            {
		                strcat(str, "\n\n{BE2D2D}Внимание!\n\n{FFFFFF}За обмен который составляет выше {BE2D2D}3000{FFFFFF} az coin's вы\nполучаете дополнительный бонус {BE2D2D}250{FFFFFF} az coin's.");
		                InvAdd(playerid, Item_Ticket_AZ, 250);
		                aml(101, playerid, "", "обмен аз на вирты болле 3к", Item_Ticket_AZ, 250);
		            }
		            SPD(playerid, 0, 0, !"", str, !"Закрыть", !"");
		            PI[playerid][pVirMoney] -= money;
		            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
		            aml(54, playerid, "", "покупка денег", money);
		        }
		        else SPD(playerid, 0, 0, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
			}
		}
		case 901:
	    {
			if(response)
	  		{
	  		    if(!strlen(inputtextsave)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Ошибка.", !"Закрыть", !"");
		        new money = strval(inputtextsave), cost = money*5;
		        if(money >= 1 && money <= 10000 && PI[playerid][pVirMoney] >= cost)
		        {
		            if(money < 101)
					{
						InvAdd(playerid, Item_FamilyTalon, money);
						aml(101, playerid, "", "купил в донате", Item_FamilyTalon, money);
						PI[playerid][pVirMoney] -= cost;
						UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
						aml(54, playerid, "", "семейных талонов", cost);
						f(str, sizeof(str), "\n\n{FFFFFF}Вы успешно обменяли {42B02C}%i{FFFFFF} az coin's на {42B02C}%i семейных талонов.\n{FFFFFF}На миникарте будет отмечено место, где можно обменять талоны!\n\n", cost, money);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Закрыть", !"");
						HideDonateTD(playerid);
						EnableGPSForPlayer(playerid, 1770.2777, 423.8289, 20.1436);
					}
					else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
		        }
		        else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
			}
		}
		case 8821:
	    {
			if(response)
	  		{
	  			if(strval(inputtext) > 500) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FF6347}Ошибка. Нельзя купить больше 500 EXP.", !"Закрыть", !"");
				if(!strlen(inputtext)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Ошибка.", !"Закрыть", !"");	
		        new money = strval(inputtextsave), cost = money*2;
		        if(money >= 1 && money <= 10000 && PI[playerid][pVirMoney] >= cost)
		        {
		            f(str, sizeof(str), "{FFFFFF}Вы успешно обменяли {FFD93B}%i {FFFFFF}az coins\nна {FFD93B}%i EXP.", cost, money);
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Закрыть", !"");
		            PI[playerid][pVirMoney] -= cost;
		            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
		            aml(54, playerid, "", "EXP", cost);
		            InvAdd(playerid, Item_Ticket_EXP, money);
		            aml(101, playerid, "", "купил в донате", Item_Ticket_EXP, money);
		            CheckNextLevel(playerid);
		        }
		        else SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{BE2D2D}Произошла ошибка.Возможно одна из них:{FFFFFF}\n\n- Введено некоректное число\n- У вас недостаточно az coin's.\n", !"Закрыть", !"");
			}
		}
		case 8992:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 600) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
            if(!CheckPhones(playerid)) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас нет мобильного телефона!");
            if(!PI[playerid][pTelNum]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас нет sim карты!");
			new telephone = 10000 + random(89999);
            if(CheckTelNum(playerid, telephone)) return false;
			PI[playerid][pVirMoney] -= 600;
			UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
			aml(54, playerid, "", "5-ти значный номер", 600);
		    ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Принять", !"", "\n\n{FFFFFF}Вы успешно купили 5-ти значный номер телефона!\nВаш новый номер: {FFFF91}(%i)\n\n", telephone);
			SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы успешно купили новую SIM карту. Ваш новый номер телефона: %i", telephone);
			PI[playerid][pTelNum] = telephone;
			UpdatePlayerDataInt(playerid, "TelNum", telephone);
		}
		case 8993:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 1200) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
			InvAdd(playerid, Item_TwinTurbo, 1);
			aml(101, playerid, "", "купил в донате", Item_TwinTurbo, 1);
		    PI[playerid][pVirMoney] -= 1200;
		    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
		    aml(54, playerid, "", "TwinTurbo", 1200);
		}
		case 8994: {
		    if(!response) {
		        return 1;
		    }
		    if(PI[playerid][pCarSkillNo])
		    	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данное улучшение уже куплено!");

		    if(GetDonate(playerid) < 400)
		        return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");

		    PI[playerid][pVirMoney] -= 400;
		    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
		    aml(54, playerid, "", "Вечный Car Skill", 400);
		    PI[playerid][pCarSkillNo] = 1;
		    UpdatePlayerDataInt(playerid, "CarSkillNo", PI[playerid][pCarSkillNo]);
		    PI[playerid][pCarSkill] = 100;
		    UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
	        GameTextForPlayer(playerid, !"successful", 0, 1);
	        KillTimer(besttime[playerid]);
	        besttime[playerid] = 0;
        	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}- Поздравляем!\nТеперь вы владелец улучшения: {FF5824}'Вечный Car Skill'", !"Окей", !"");
		}
		case 8990:
		{
			if(!response) return 1;
			if(GetDonate(playerid) < 500) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
			if(PI[playerid][pInvCell] == 108) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже куплены все улучшения!");
			PI[playerid][pInvCell] += 6;
			UpdatePlayerDataInt(playerid, "InvCell", PI[playerid][pInvCell]);
			PI[playerid][pVirMoney] -= 500;
			UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
			aml(54, playerid, "", "Дополнительные 6 ячеек", 500);
			SPD(playerid, 0, 0, !"", !"{FFFFFF}-Поздравляем!\nТеперь вы владелец улучшения {FF6347}'Дополнительные 6 ячеек'", !"Окей", !"");
			GameTextForPlayer(playerid, !"Successful", 0, 1);
			ShowInv(playerid, 1, 3);
		}
		case 8996:
		{
			if(!response) return 1;
            if(PI[playerid][pVirMoney] >= 1200)
	  	  	{
	  			PI[playerid][pVirMoney] -= 1200;
	  			UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
	  			aml(54, playerid, "", "прокачал все скиллы", 1200);
				PI[playerid][pPistol_Skill] = 10000;
				PI[playerid][pSDPistol_Skill] = 10000;
				PI[playerid][pEagle_Skill] = 10000;
				PI[playerid][pShotGun_Skill] = 10000;
				PI[playerid][pUZI_Skill] = 10000;
				PI[playerid][pMP5_Skill] = 10000;
				PI[playerid][pAK47_Skill] = 10000;
				PI[playerid][pM4_Skill] = 10000;
				PI[playerid][pSniper_Skill] = 10000;
				UpdatePlayerDataInt(playerid, "Pistol_Skill", PI[playerid][pPistol_Skill]);
				UpdatePlayerDataInt(playerid, "SDPistol_Skill", PI[playerid][pSDPistol_Skill]);
				UpdatePlayerDataInt(playerid, "Eagle_Skill", PI[playerid][pEagle_Skill]);
			 	UpdatePlayerDataInt(playerid, "ShotGun_Skill", PI[playerid][pShotGun_Skill]);
			 	UpdatePlayerDataInt(playerid, "UZI_Skill", PI[playerid][pUZI_Skill]);
				UpdatePlayerDataInt(playerid, "MP5_Skill", PI[playerid][pMP5_Skill]);
				UpdatePlayerDataInt(playerid, "AK47_Skill", PI[playerid][pAK47_Skill]);
				UpdatePlayerDataInt(playerid, "M4_Skill", PI[playerid][pM4_Skill]);
				UpdatePlayerDataInt(playerid, "Sniper_Skill", PI[playerid][pSniper_Skill]);
				SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы прокачали все скиллы до 100%");
				SetPlayerSkills(playerid);
    		}
	  		else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
		}
		case 8997:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 6500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно AZ COINS!");
            if(PI[playerid][pVIP] >= 5) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень VIP!");
            PI[playerid][pVirMoney] -= 6500;
            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
            aml(54, playerid, "", "PREMIUM VIP", 6500);
			J_SetPlayerVIP(playerid, 5);
			PI[playerid][pVipTime] = gettime()+(1800*24*60*60);
			UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
			InvAdd(playerid, Item_Premium_Maverick, 1);
			aml(101, playerid, "", "покупка PREMIUM VIP", Item_Premium_Maverick, 1);
			SCMAllf(COLOR_LIGHTRED, "[Информация]{FFFFFF} Игрок %s приобрел PREMIUM VIP.", PN(playerid));
			SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с покупкой PREMIUM VIP!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help.", !"Принять", !"");
		}
		case 8999:
		{
		    if(!response) return 1;
			if(GetDonate(playerid) < 1500) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно AZ COINS!");
            if(PI[playerid][pVIP] >= 4) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас уже есть этот уровень VIP!");
            PI[playerid][pVirMoney] -= 1500;
            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
            aml(54, playerid, "", "Titan VIP", 1500);
			J_SetPlayerVIP(playerid, 4);
			PI[playerid][pVipTime] = gettime()+(1800*24*60*60);
			UpdatePlayerDataInt(playerid, "VipTime", PI[playerid][pVipTime]);
			SCMAllf(COLOR_LIGHTRED, "[Информация]{FFFFFF} Игрок %s приобрел Titan VIP.", PN(playerid));
			SPD(playerid, 0, 0, !"", !"{5FDA27}Поздравляем с покупкой Titan VIP!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help.", !"Принять", !"");
		}
		case 8995:
		{
		    if(!response) return 1;
		    if(GetDonate(playerid) < 50) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно AZ COINS!");
		    PI[playerid][pVirMoney] -= 50;
		    UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
		    aml(54, playerid, "", "100 CarSkill", 50);
		    PI[playerid][pCarSkill] = 100;
		    UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
		    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Ваш навык вождения восстановлен к 100 единицам!");
		}
		case 9002: {
			if(!response) {
			    return 1;
			}
			if(GetDonate(playerid) < 500)
				return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");

			if(IsPlayerInHisVehicle(playerid))
			{
			    CarInfo[GetVehicleID(GetPlayerVehicleID(playerid))][cMilage] = 0;
			    GameTextForPlayer(playerid, !"Successful", 0, 1);
			    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно убрали пробег с авто!\nТеперь его пробег равен нулю.\n\n", !"Окей", !"");
			}
			else SCM(playerid, COLOR_RED, !"Вы не в своем авто!");
		}
		case 9003: {
		    if(!response) return 1;
            if(PI[playerid][pVirMoney] >= 300)
  		    {
  		        if(!GiveLiccenses(playerid, 365)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас уже куплены все лицензии!");
				PI[playerid][pVirMoney] -= 300;
				UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
				aml(54, playerid, "", "купил все лицензии", 300);
				SCM(playerid, COLOR_GREY, !"Вы успешно купили/восстановили все лицензии!");
  		    }
  		    else SCM(playerid, COLOR_GREY, !"У вас нехватает денег на счету");
		}
		case 9012:
		{
		    if(!response) return 1;
            if(PI[playerid][pLeader]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Лидер не может сменить ник!");
            if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Админ не может сменить ник!");
            if(GetPlayerHouse(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть дом или вы в нем подселены!");
            if(GetPlayerBiz(playerid) != -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть бизнес!");
            GetNumberCars(playerid, PI[playerid][pCars]);
			if(PI[playerid][pCars]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сменить ник, пока у вас есть автомобиль!");
  		    if(PI[playerid][pVirMoney] >= 20) SPD(playerid, 224, DIALOG_STYLE_INPUT, !"Покупка", !"{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"", !"Сменить", !"Отмена");
  		    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
		}
		case 9011: {
		    if(!response) {
		        return 1;
		    }
            if(PI[playerid][pWarns] > 0)
            {
	  		    if(PI[playerid][pVirMoney] >= 250)
	  		    {
	  		        if(PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете снять варны, тк. у вас есть выговор!");
	  		        PI[playerid][pVirMoney] -= 250;
	  		        UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
	  		        aml(54, playerid, "", "снял 1 предупреждение", 250);
	  		        PI[playerid][pWarns] --;
	  		        UpdatePlayerDataInt(playerid, "Warns", PI[playerid][pWarns]);
	  		        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы сняли 1 предупреждение");
    			}
	  		    else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нехватает денег на счету");
  		    }
  		    else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет предупреждений");
		}
		case 8105:
		    {
		        if(!donateopen{playerid}) return 1;
		        if(!response) return 1;
		        new select = Donate_Select[playerid];
				new total = GetDonate(playerid), cost = DonateInfo[select][Item_Cost], value[6] = "coins";
				switch(DonateInfo[select][Item_InvID])
				{
					case Item_Balloons: cost = 49, total = GetDonateMoney(playerid), value = "rub";
					case Item_YellowBox: cost = 20, total = GetDonateMoney(playerid), value = "rub";
					case Item_BlueBox: cost = 30, total = GetDonateMoney(playerid), value = "rub";
					case Item_RedBox: cost = 40, total = GetDonateMoney(playerid), value = "rub";
					case Item_AcsessoryBox: cost = 55, total = GetDonateMoney(playerid), value = "rub";
					case 1172..1207: cost = 444, total = GetDonateMoney(playerid), value = "rub";
				}
		        if(total < cost) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}У вас недостаточно az %s!", value);
		    	switch(DonateInfo[select][Item_InvID])
				{
					case Item_Balloons, Item_YellowBox, Item_BlueBox, Item_RedBox, Item_AcsessoryBox, 1172..1207:
					{
						GiveDonateMoney(playerid, -cost);
						f(str_1, sizeof(str_1), "покупка %s (ID:%i)", ItemsInfo[DonateInfo[select][Item_InvID]][ItemName], DonateInfo[select][Item_InvID]);
						aml(84, playerid, "", str_1, cost);
					}
					default:
					{
						GiveDonate(playerid, -cost);
						f(str_1, 100, "покупка %s (ID:%i)", ItemsInfo[DonateInfo[select][Item_InvID]][ItemName], DonateInfo[select][Item_InvID]);
						aml(54, playerid, "", str_1, cost);
					}
				}
		    	InvAdd(playerid, DonateInfo[select][Item_InvID], 1);
		    	aml(101, playerid, "", "купил в донате", DonateInfo[select][Item_InvID], 1);
		    	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляем вас с покупкой!");
		    }
        case 224:
	    {
			if(response)
	  		{
			    if(PI[playerid][pVirMoney] >= 20)
			    {
			        if(strfind(inputtextsave, " ")!=-1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В вашем нике замечен пробел!");
			        if(PI[playerid][pLeader]>0)return SCM(playerid, COLOR_RED, !"Лидер не может сменить ник!");
			        if(!IsARPPN(inputtextsave)) return SPD(playerid,224,1,"Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник недоступен","Сменить","Отмена");
			        if(!IsAGameNick(inputtextsave)) return SPD(playerid,224,1,"Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник недоступен","Сменить","Отмена");
			        if(strlen(inputtextsave) > 20 ) return SPD(playerid,224,1,"Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 AZ-монет\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник слишком длинный!","Сменить","Отмена");
			        static name[20];
			        mysql_escape_string(inputtextsave, name);
				    mysql_format(mysql, str2, sizeof(str2), "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", name);
					mysql_pquery(mysql, str2, "MysqlCheckNameBuyName", "ds", playerid, name);
					return 1;
				}
			}
		}
		case 189:
		{
		    if(!response)
				return 1;

	        switch(listitem)
  		    {
		        case 0:
		        {
		            if(GetMoney(playerid) < 10000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		            GiveMoney(playerid, -10000);
		            aml(51, playerid, "", "пожертвовал на развитие штата", 10000);
					SCM(playerid, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы пожертвовали {FF6347}10 000${FFFFFF} на развитие штата!");
					GameTextForPlayer(playerid, !"Successful", 0, 1);
				    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET donation = donation + 10000 WHERE NickName = '%s'", PN(playerid));
		        }
				case 1:
				{
				    if(GetMoney(playerid) < 50000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    GiveMoney(playerid, -50000);
				    aml(51, playerid, "", "пожертвовал на развитие штата", 50000);
					SCM(playerid, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы пожертвовали {FF6347}50 000${FFFFFF} на развитие штата!");
					GameTextForPlayer(playerid, !"Successful", 0, 1);
				    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET donation = donation + 50000 WHERE NickName = '%s'", PN(playerid));
				}
				case 2:
				{
				    if(GetMoney(playerid) < 200000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    GiveMoney(playerid, -200000);
				    aml(51, playerid, "", "пожертвовал на развитие штата", 200000);
					SCM(playerid, COLOR_LIGHTRED,!"[Информация]{FFFFFF} Вы пожертвовали {FF6347}200 000${FFFFFF} на развитие штата!");
					GameTextForPlayer(playerid, !"Successful", 0, 1);
				    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET donation = donation + 200000 WHERE NickName = '%s'", PN(playerid));
				}
				case 3:
				{
				    if(GetMoney(playerid) < 1000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    GiveMoney(playerid, -1000000);
				    aml(51, playerid, "", "пожертвовал на развитие штата", 1000000);
					GameTextForPlayer(playerid, !"Successful", 0, 1);
                    foreach(new i: Player)
                    {
                    	if(!PI[i][pNewsChat]) SCMf(i, COLOR_GOLD, "[Новости штата] {FFFFFF}%s{FFD700} пожертвовал {FFFFFF}1000000${FFD700} в благотворительный фонд штата", PN(playerid));
                    }
				    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET donation = donation + 1000000 WHERE NickName = '%s'", PN(playerid));
				}
				case 4:
				{
				    if(GetMoney(playerid) < 5000000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    GiveMoney(playerid, -5000000);
				    aml(51, playerid, "", "пожертвовал на развитие штата", 5000000);
					GameTextForPlayer(playerid, !"Successful", 0, 1);
                    foreach(new i: Player)
                    {
                    	if(!PI[i][pNewsChat]) SCMf(i, COLOR_GOLD, "[Новости штата] {FFFFFF}%s{FFD700} пожертвовал {FFFFFF}5000000${FFD700} в благотворительный фонд штата", PN(playerid));
                    }
				    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET donation = donation + 5000000 WHERE NickName = '%s'", PN(playerid));
				}
			}
		}
		case 188:
		{
		    if(response)
		    {
		        if(GetMoney(playerid) < 5000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        SCM(playerid, COLOR_BLUENEW, !"Вы купили обручальные кольца (После перезахода в игру они исчезают!)");
		        Ring[playerid] = 1;
		        GiveMoney(playerid, -5000);
		        aml(51, playerid, "", "купил обручальные кольца", 5000);
			}
		}
		case 227:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money >= 5000 && money <= 100000)
				{
					if(OrgInfo[TEAM_BANK][oBank]< money) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В банке недостаточно денег для того чтобы выдать кредит");
					CreditMoney[playerid] = money;
					f(str,sizeof(str),"{FFFFFF}Вы действительно хотите выдать кредит игроку в размере: $%i?\n{B83434}На данный момент баланс банка составляет: %i\nПри выдачи кредита деньги с банка спишутся!",money,OrgInfo[TEAM_BANK][oBank]);
					SPD(playerid, 228, 0, "Кредит", str, "Выдать", "Отмена");
				}
				else SPD(playerid,227,1,"Кредит","{FFFFFF}Какую сумму вы хотите выдать?\n\nПримечание: максимальная сумма от $5000 до $100000\nВнимание: Не верная сумма!","Далее","Отмена");
		    }
		}
		case 9001:
		{
		    if(response)
		    {
		        if(GetDonate(playerid) < 150) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно az coins!");
		        if(TeamDuty{playerid})return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В момент дежурства вы не можете сменить пол! Переоденьтесь или увольтись с организации!");
		        if(InJob[playerid]!=0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Закончите сначало свою работу!");
				if(PI[playerid][pSex]==1)
				{
				    SPD(playerid, 0, 0, !"", !"{8CB736}Поздравляем!\n\n{FFFFFF}Вы успешно сменили свой пол на женский, а стоимость реабилитации составила 150 az coin`s\nСоветуем обзавестись хорошей одеждой.", !"Принять", !"");
				    SetPlayerSkinEx(playerid,90);
				    PI[playerid][pSkin] = 90;
				    PI[playerid][pSex]=2;
				}
				else
				{
				    SPD(playerid, 0, 0, !"", !"{8CB736}Поздравляем!\n\n{FFFFFF}Вы успешно сменили свой пол на мужской, а стоимость реабилитации составила 150 az coin`s\nСоветуем обзавестись хорошей одеждой.", !"Принять", !"");
				    SetPlayerSkinEx(playerid,73);
				    PI[playerid][pSkin] = 73;
				    PI[playerid][pSex]=1;
				}
				UpdatePlayerDataInt(playerid, "Skin", PI[playerid][pSkin]);
				UpdatePlayerDataInt(playerid, "Sex", PI[playerid][pSex]);
				PI[playerid][pVirMoney] -=150;
				UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
				aml(54, playerid, "", "смена пола", 150);
				if(PI[playerid][pLevel] < 20)
				{
			        switch(random(2))
					{
						case 0: J_SetPlayerPos(playerid, -1753.7180, -2017.6670, 1500.7856);
						case 1: J_SetPlayerPos(playerid, -1791.3062, -2018.2821, 1500.7856);
					}
				}
				else J_SetPlayerPos(playerid, -1354.0164, 8.2145, 1601.0859);
				SetPlayerVirtualWorld(playerid, 1);
   				SetPlayerInterior(playerid, 2);
		    }
		}
		case 1977:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
					    if(!GetString(OrgInfo[TEAM_MERIALS][oLeader],"Свободна"))
						{
						    f(str,sizeof(str),"На данный момент должность губернатора занимает: %s",OrgInfo[6][oLeader]);
							SendBotMessage(playerid, str);
						}
					    else SendBotMessage(playerid,"Сейчас должность губернатора никто не занимает.");
					}
					case 1: SendBotMessage(playerid,"В задачи губернатора входят много дел, например следить за экономикой штата,\nобновлять казну организаций, правильно распределять прием и направление налогов,\nи много другого, к сожaлению больше ничего сказать не могу.");
		        }
		    }
		}
		case 1982:
		{
			if(!response)
				return 1;
			switch(listitem)
			{
				case 0: SendBotMessage(playerid, !"В авиашколе города Las-Venturas!");
				case 1: SendBotMessage(playerid, !"Сдача на права бесплатная!");
				case 2:
				{
				    new
						num;
				    foreach(new i: Player)
				    {
				        if(PI[i][pMember] == 9 && TeamDuty{i})
							num ++;
				    }
				    if(!num)
						return SendBotMessage(playerid, !"Сейчас никого нет на дежурстве");

				    else
						f(str, sizeof(str), "На дежурстве сейчас %i человек!", num);

				    SendBotMessage(playerid, str);
				}
				case 3: SendBotMessage(playerid, !"$20 000, примерно!");
			}
		}
	    case 1978:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(!GetString(OrgInfo[TEAM_MEDICLS][oLeader], "Свободна"))
					{
						f(str, sizeof(str), "На данный момент должность главврача занимает: %s", OrgInfo[5][oLeader]);
						SendBotMessage(playerid, str);
					}
					else SendBotMessage(playerid, "Сейчас должность главврача никто не занимает.");
				}
				case 1: SendBotMessage(playerid, "Стоимость лечения в нашей больнице 400$ за один приём врача!");
				case 2:
				{
				    new num;
				    foreach(new i: Player)
				    {
				        if(PI[i][pMember] == 5 && TeamDuty{i}) num++;
				    }
				    if(!num) return SendBotMessage(playerid, "Сейчас никого нет на дежурстве");
				    else f(str, sizeof(str), "На дежурстве сейчас %i человек!", num);
				    SendBotMessage(playerid, str);
				}
				case 3: SendBotMessage(playerid, "Сейчас вы в Больнице ЛС!");
			}
		}
	    case 1979:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(!GetString(OrgInfo[TEAM_MEDICSF][oLeader], "Свободна"))
					{
						f(str, sizeof(str), "На данный момент должность главврача занимает: %s", OrgInfo[8][oLeader]);
						SendBotMessage(playerid, str);
					}
					else SendBotMessage(playerid, "Сейчас должность главврача никто не занимает.");
				}
				case 1: SendBotMessage(playerid, "Стоимость лечения в нашей больнице 400$ за один приём врача!");
				case 2:
				{
				    new num;
				    foreach(new i: Player)
				    {
				        if(PI[i][pMember] == 8 && TeamDuty{i}) num++;
				    }
				    if(!num) return SendBotMessage(playerid, "Сейчас никого нет на дежурстве");
				    else f(str, sizeof(str), "На дежурстве сейчас %i человек!", num);
				    SendBotMessage(playerid, str);
				}
				case 3: SendBotMessage(playerid, "Сейчас вы в Больнице СФ!");
			}
		}
	    case 1980:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(!GetString(OrgInfo[TEAM_MEDICLV][oLeader], "Свободна"))
					{
						f(str, sizeof(str), "На данный момент должность главврача занимает: %s", OrgInfo[22][oLeader]);
						SendBotMessage(playerid, str);
					}
					else SendBotMessage(playerid, "Сейчас должность главврача никто не занимает.");
				}
				case 1: SendBotMessage(playerid, "Стоимость лечения в нашей больнице 400$ за один приём врача!");
				case 2:
				{
				    new num;
				    foreach(new i: Player)
				    {
				        if(PI[i][pMember] == 22 && TeamDuty{i}) num++;
				    }
				    if(!num) return SendBotMessage(playerid, "Сейчас никого нет на дежурстве");
				    else f(str, sizeof(str), "На дежурстве сейчас %i человек!", num);
				    SendBotMessage(playerid, str);
				}
				case 3: SendBotMessage(playerid, "Сейчас вы в Больнице ЛВ!");
			}
		}
		case 1966:
		{
		    if(response)
		    {
		        new idofcar=idaofcar[playerid];
				switch(listitem)
				{
				    case 0:
				    {
				        if(!TrunkInfo[idofcar][tOpen])
						{
							new number = GetVehicleID(idofcar);
							if(!IsPlayerHaveCar(playerid, number)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой личной машины!");
							else if(vTemp[idofcar][vTeam] > 0 && PI[playerid][pMember]!=vTemp[idofcar][vTeam]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой, огранизации!");
							TrunkInfo[idofcar][tOpen]=1;
			       			SetBootStatus(idofcar,1);
			       			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
						}
				        else
						{
							new number = GetVehicleID(idofcar);
							if(!IsPlayerHaveCar(playerid, number)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой личной машины!");
							else if(vTemp[idofcar][vTeam] > 0 && PI[playerid][pMember]!=vTemp[idofcar][vTeam]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете открыть багажник чужой, огранизации!");
							TrunkInfo[idofcar][tOpen]=0;
			       			SetBootStatus(idofcar,0);
			       			ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
						}
				        callcmd::tet(playerid);
				    }
				    case 1://Открытие багажника
				    {
        				if(!TrunkInfo[idofcar][tOpen]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Багажник сейчас закрыт!");
				    	SetPVarInt(playerid, !"InvType", 3);
				    	ShowInvMenu(playerid, 3);
				    	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
				    }
				}
		    }
		}
		case 1898:
		{
		    new id=PanelPlayerID[playerid],carid = GetPlayerVehicleID(PanelPlayerID[playerid]),Float: money =CenaRaboti[playerid] ;
		    new pcarsid = GetPlayerVehicleID(playerid);
			if(response)
			{
			    if(GetPlayerState(playerid)!=2)return 0;
			    if(!IsPlayerLogged{id})return 0;
			    if(PI[id][pJob]!= JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка.");
				if(vTemp[carid][vJob]!=JOB_MECHANIC)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка.");
				if(GetMoney(playerid)<money)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно денег чтобы оплатить работу механика!");
				if(!ProxDetectorS(9.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока который вас должен был починить.");
			    switch(Ingatre[playerid])
			    {
			        case 1:
			        {
						f(str,sizeof(str),"[Информация]{FFFFFF} %s успешно отремонтировал ваш транспорт за {52A32A}%.1f$.",PN(id),money);
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s принял ваше предложение чтобы вы починили его транспорт. Вы заработали {52A32A}%.1f$.",PN(playerid),money);
					    SCM(id,COLOR_VALIK,str);
					    J_RepairVehicle(pcarsid);
					    new price = floatround( money, floatround_floor );
					    GiveMoney(playerid,-price);
						GiveMoney(id,price);
						aml(50, playerid, PN(id), "реморт транспорта", price);
					}
					case 2:
					{
					    if(BenzinCount[carid]<(money/BenzinCena[carid])) return 0;
					    f(str,sizeof(str),"[Информация]{FFFFFF} %s успешно заправил ваш транспорт за {52A32A}%.1f$.",PN(id),money);
						SCM(playerid,COLOR_VALIK,str);
						f(str,sizeof(str),"[Информация] {FFFFFF}%s принял ваше предложение чтобы вы заправили его транспорт. Вы заработали {52A32A}%.1f$.",PN(playerid),(money/2));
					    SCM(id,COLOR_VALIK,str);
					    vTemp[pcarsid][Fuel] += (money/BenzinCena[carid]);

					    new nedee = floatround(BenzinCena[carid], floatround_floor );
					    new price = floatround( money, floatround_floor );

					    BenzinCount[carid]-=(price/nedee);

					    GiveBizMoney(Contracter[carid],(price)/2);
					    f(str,sizeof(str),"{57B22C}Заправка %.1f$\n{FFFFFF}Бензина: %i/1000",BenzinCena[carid],BenzinCount[carid]);
						UpdateDynamic3DTextLabelText(Benzin[carid], 0xFFFFFFFF, str);

		    			if(vTemp[pcarsid][Fuel] >= 100) vTemp[pcarsid][Fuel] = 100;
		    			GiveMoney(playerid,-price);
						GiveMoney(id,(price/2));
						aml(50, playerid, PN(id), "заправка т/с", price);
						aml(52, id, "", "бензин для другого т/с (механик)", floatround(float(price)/2.0));
					}
				}
				CenaRaboti[playerid]=0;
				Ingatre[playerid]=0;
				PanelPlayerID[playerid]=-1;
			}
			else
			{
		  		SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы успешно отказались от предложения механика.");
		  		SCMf(id, COLOR_RED, "[Информация] {FFFFFF} %s отказался от вашего предложения!", PN(playerid));
			}
		}


		case 1081:
		{
		    if(response)
		    {
			    new id = PI[playerid][pMScutes];
				if(id!=-1)PI[id][pScutes] = -1,f(str,sizeof(str),"Вы успешно отключили жучек с мобильного телефона игрока %s.",PN(id));
				PI[playerid][pMScutes]=-1,SCM(playerid,COLOR_GREEN,str);
			}
		}
		case 2761:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid,185,2,"Выберите еду","{42B02C}-{FFFFFF} Картофель-Фри \t\t220$\n{42B02C}-{FFFFFF} Сэндвич \t\t\t260$\n{42B02C}-{FFFFFF} Баскет \t\t\t300$\n{42B02C}-{FFFFFF} Крылышки \t\t\t340$\n{42B02C}-{FFFFFF} Салат \t\t\t380$\n{42B02C}-{FFFFFF} Курица \t\t\t420$\n{42B02C}-{FFFFFF} Комплексный Обед \t\t700$","Выбор","Отмена");
		            case 1:
		            {
		                if(BizInfo[BizEntered[playerid]][bProducts] <= 1)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты!");
						if(GetPlayerHouse(playerid) == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет личного дома!");
                        ShowPlayerHome(playerid, 6669);
		            }
		        }
		    }
		}
		case 6669:
		{
			if(!response) return 0;
			new house = ShowHouse[playerid][listitem];
			SetPVarInt(playerid, "ShowHouse", house);
            f(str,sizeof(str),"{FFFFFF}Продуктов в вашем доме: {B03131}%i{FFFFFF}.\nПополнив запас продуктов вы сможете покушать или выпить в любое время у себя в доме.\nВзять продукты или выпивку можно у бара и холодильника!.\n\n{29CD17}Стоимоть 1-го продукта составляет: %.0f$", HouseInfo[house][hProducts], BizInfo[BizEntered[playerid]][bEnterPrice]);
			SPD(playerid, 77, 1, !"Меню", str, !"Принять", !"Отмена");
		}
		case 430:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money > (500-CarproductCount[GetPlayerVehicleID(playerid)])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете закупить столько груза!");
				if(GetMoney(playerid)<money*GLS[29]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				if(GLS[28]<money)return SCM(playerid, COLOR_RED, !"На складе разгрузочной станции недостаточно продуктов!");
				if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 2 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете смешивать продукты с ящиками с разгрузочной станции!");
				CarproductCount[GetPlayerVehicleID(playerid)] += money;
				GiveMoney(playerid,-(money*GLS[29]));
				aml(52, playerid, "", "покупка продуктов (перевозчик)", (money*GLS[29]));
				GLS[28]-=money;
				SaveInforamtion();
				CarproductType[GetPlayerVehicleID(playerid)] = 2;
				SCM(playerid, COLOR_LIGHTBLUE, !"Вы успешно загрузили машину. Используйте /orderlist чтобы найти заказчика продуктов!");
				f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
				UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, str);
				f(str, sizeof(str), "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[28],GLS[29]);
				UpdateDynamic3DTextLabelText(FactoryText[2], -1, str);
		    }
		}
		case 2291:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
					    if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 2 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете смешивать продукты с ящиками с разгрузочной станции!");
					    if(CarproductCount[GetPlayerVehicleID(playerid)]>=500)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш грузовик переполнен!");
						f(str,sizeof(str),"Введите количество груза, которое хотите закупить для перепродажи.\n{C1BABA}Используйте число от 1 до %i",500-CarproductCount[GetPlayerVehicleID(playerid)]);
			   			SPD(playerid,430,1,"",str, !"Принять", !"Отмена");
					}
					case 1:
					{
						if(CarproductCount[GetPlayerVehicleID(playerid)]==0)return SPD(playerid,2291,2,"","{42B02C}-{FFFFFF} Закупить груз\n{42B02C}-{FFFFFF} Вернуть груз", !"Принять", !"Отмена");
						if(CarproductType[GetPlayerVehicleID(playerid)] != 2 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете вернуть сюда продукты, так как вы их покупали на ферме либо вобще не покупали!");
					    GLS[28]+=CarproductCount[GetPlayerVehicleID(playerid)];
					    GiveMoney(playerid,(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[29]));
					    aml(52, playerid, "", "возращение продуктов для перепродажи", CarproductCount[GetPlayerVehicleID(playerid)]*GLS[29]);
					    SaveInforamtion();
						CarproductCount[GetPlayerVehicleID(playerid)] =0;
                        CarproductType[GetPlayerVehicleID(playerid)] = 0;
						f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
						UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, str);
						f(str, sizeof(str), "Склад разгрузочной станции\n\n\n{D38A37}%i{FFFFFF} предметов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[28],GLS[29]);
						UpdateDynamic3DTextLabelText(FactoryText[2], -1, str);
					}
				}
			}
		}
		case 7681:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
						SPD(playerid,1339,2,"Задать вопрос","- Что ты тут делаешь?\n- Куда ты сейчас направляешся?\n- Как найти автошколу?\n- Что делать если нет паспорта?\n- Сложно ли тут получить права?\n- Сколько стоит номер в отеле?\n- Где взять телефон?\n- Почему чувак справа раздает халявную еду?\n- У меня нет мед.карты, где ее получить?", !"Закрыть", !"");
					}
					case 1:
					{
					    if (AcceptQuest[playerid][10]!=0) return SendBotMessage(playerid,"Извени, но ты у меня взял, уже все задания!");
					    static mas[6] = {0,1,2,3,4,5};
					    new num=0;
						static skr[124];
						for(new i;i<6;i++)
						{
					 		if(AcceptQuest[playerid][mas[i]]==0) skr = "{3A8819}[Доступен]{FFFFFF}";
						    else if(QuestProgress[playerid][mas[i]]==100) skr = "{C71D1D}[Выполнен]{FFFFFF}";
						    else if(QuestProgress[playerid][mas[i]]==QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "{307CDA}[Можно завершить]{FFFFFF}";
						    else if(QuestProgress[playerid][mas[i]]>=0 && AcceptQuest[playerid][mas[i]]!=0) skr = "{DA9815}[В процессе]{FFFFFF}";

						    f(str,sizeof(str),"%s\n%s %s",str,QI[mas[i]][QuestName],skr);
						    QuestShow[playerid][num]=mas[i];
						    num++;
						}
						SPD(playerid,7971,2,"Квесты",str, !"Принять", !"Отмена");
						//квесты
					}
		        }
		    }
		}
		case 867:
		{
		    if(response)
		    {
		        new time = strval(inputtextsave);
		        if(time<1)return 0;
				if(time>20)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете арендовать концертный зал больше чем 20 часов!");
				if(GetMoney(playerid)<time*50000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег на аренду зала!");
				if(PI[playerid][pBuildType]==-1)return 0;
				if(BuildsInfo[0][blClosed]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Концертный зал уже арендуют!");
				new money = time*50000;
				GiveMoney(playerid,-money);
				aml(51, playerid, "", "аренда концертного зала", money);

				SetString(BuildsInfo[0][blArenderID],PN(playerid));
				BuildsInfo[0][blTime]=time*3600;
				BuildsInfo[0][blClosed]=1;

				f(str,sizeof(str),"\n\nВы успешно арендовали концертный зал на %i часов за %i$.\nДля того чтобы вести управление залом используйте команду /lzal.\nОстальную информацию вы узнаете там.\n\n",time,(time*50000));
				SPD(playerid, 0, 0, !"", !"", !"Принять", !"");
				SCM(playerid, COLOR_GREY, !"Для управления залом, используйте команду /lzal.");
				UpdateDynamic3DTextLabelText(BuildsInfo[0][blBuildText],-1,"{23BA8F}Концертный зал{FFFFFF}\nВход: ALT\nЗдание: {D23636}Арендовано");
				GiveBizMoney(144, money);
		    }
		}

		case 798:
		{
		    if(response)
		    {
                if(!GetString(BuildsInfo[0][blArenderID],PN(playerid)))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не арендуете концертный зал!");
				if(BuildsInfo[0][blTime]<1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Концертный зал никто не арендует");
				if(!IsPlayerInRangeOfPoint(playerid,30,649.3248,-1353.8834,13.5470) && !IsPlayerInRangeOfPoint(playerid,30,-575.709, 2594.2, 1705.09))
				{
				    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится у входа или выхода из концертного зала!");
				    return 1;
				}
				if(BuildsInfo[0][blClosed]==0) return 0;
		        switch(listitem)
				{
				    case 0:
					{
					    switch(BuildsInfo[0][blCanEnter])
						{
						    case 0: BuildsInfo[0][blCanEnter]=1;
						    case 1,500..2100:
						    {
                                BuildsInfo[0][blCanEnter]=BuildsInfo[0][blCanEnter]+500;
                                if(BuildsInfo[0][blCanEnter]>=2000)BuildsInfo[0][blCanEnter]=2;
						    }
						    case 2: BuildsInfo[0][blCanEnter]=0;
						}
						callcmd::lzal(playerid,"");
					}
				    case 1:
				    {
				        if(ZallFunction[0]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Бесплатная реклама концертного зала возможна только 1 раз до истечения аренды.");
						f(str,sizeof(str),"<< >> {FFFFFF}Уважаемые жители, арендатор концертного зала: %s[%i] проводит мероприятие. Присоединяйтесь! (GPS - Развлечения).",PN(playerid),playerid);
						SCMAll(COLOR_LIGHTBLUE,str);
						ZallFunction[0]=1;
				    }
				    case 2:
				    {
						new hour,minute,people=0;
						if(BuildsInfo[0][blTime]>3600)
						{
							hour = floatround(BuildsInfo[0][blTime]/3600, floatround_floor );
							minute = floatround((BuildsInfo[0][blTime]-(hour*3600))/60, floatround_floor );
						}
						else
						{
						    hour = 0;
						    minute = floatround(BuildsInfo[0][blTime]/60, floatround_floor );
						}
						foreach(new i: Player)
						{
						    if(PI[i][pBuildType]==0 && GetPlayerVirtualWorld(i)==9) people++;
						}
				        f(str,sizeof(str),"{FFFFFF}Концертный зал.\n\nВремя до окончания аренды: {E6B75A}%i.%i{FFFFFF} минут\nЗаработаных денег: {E6B75A}%i${FFFFFF}\nКоличество посетителей: {E6B75A}%i{FFFFFF}\nЛюдей в концертном зале: {E6B75A}%i{FFFFFF}\n\n",hour,minute,ZallFunction[1],ZallFunction[2],people);
				        SPD(playerid,0,0,"",str, !"Принять", !"");
				    }
					case 3:
					{
					    if(ZallFunction[1]<1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете снять такую сумму денег!");
						GiveMoney(playerid,ZallFunction[1]);
						aml(52, playerid, "", "снятие с баланса концертного зала", ZallFunction[1]);
						SCMf(playerid, COLOR_VALIK, "<< {FFFFFF}Вы успешно сняли с баланса концертного зала: %i$.", ZallFunction[1]);
						ZallFunction[1]=0;
						callcmd::lzal(playerid,"");
					}
					case 4:
					{
					    static over[200];
					    new num = 0;
					    foreach(new i: Player)
					    {
					        if(num<20)
					        {
					            if(GetPVarInt(i,"zalll")==9)
					            {
					                if(IsPlayerInRangeOfPoint(playerid,30,649.3248,-1353.8834,13.5470) && !IsPlayerInRangeOfPoint(playerid,30,-575.709, 2594.2, 1705.09)) over = "[ {53AB2A}Ожидает{FFFFFF} ]";
									else over = "[ {AB2A2A}Уехал{FFFFFF} ]";

									f(str,sizeof(str),"%s\n{FFFFFF}%s[{AB7C2A}%i{FFFFFF}]\t%s",str,PN(i),i,over);
					                num++;
					            }
							}
					    }
					    if(num>0)
					    {
					        f(str,sizeof(str),"%s\n{9592DC}Очистить список",str);
					        SPD(playerid,2891,2,"",str,"Принять","Назад");
							SetPVarInt(playerid,"oldand",num);
					    }
						else callcmd::lzal(playerid,""),SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Охранник еще не спрашивал вас, кто хотел войти!");
					}

				}
		    }
		}
		case 2891:
		{
		    if(response)
		    {
                new num=0,id;
                if(listitem == GetPVarInt(playerid,"oldand"))
			    {
			        foreach(new i: Player)
			    	{
			            if(GetPVarInt(i,"zalll")==9)
			            {
			                if(PI[i][pZall]!=0)
							{
						        SetPVarInt(i,"zalll",0);
						        SCM(i, COLOR_RED, !"[Информация] {FFFFFF}Арендатор зала сказал охраннику никого не пускать!");
							}
						}
					}
					SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Вы успешно почистили список желающих войти в зал!");
				 	callcmd::lzal(playerid,"");
					return 1;
			    }
			    foreach(new i: Player)
			    {
		            if(GetPVarInt(i,"zalll")==9)
		            {
						if(PI[i][pZall]!=0)
						{
			                if(num == listitem)
							{
		     					if(IsPlayerInRangeOfPoint(i,50,649.3248,-1353.8834,13.5470))
	                			{
	                                SetPVarInt(i,"zalll",0);
                                    PI[i][pZall]=0;
                                    f(str,sizeof(str),"Мужчина с именем: %s, хозяин просил передать вам,\nчто вам можно войти в концертный зал!",PN(i));
	                                id = SendBotMessage(i,str);
                                	ApplyActorAnimation(id,"PED","ON_LOOKERS",4.1,0,0,0,1,1);
                                	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Охранник передаст, чтобы он вошел в концертный зал!");
                                	callcmd::lzal(playerid,"");
								}
								else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Человек которому вы хотите выдать пропуск, находится слишком далеко от концертного зала!"),callcmd::lzal(playerid,"");
							}
			                num++;
						}
		            }
			    }
		    }
		    else callcmd::lzal(playerid,"");
		}
	    case 8981:
	    {
	        if(response)
	        {
	            static on[60];
	            if(IDOFMusic==-1)on = "{FFFFFF}";
	            else on = "{8E4444}Отключить музыку";
	            switch(listitem)
	            {
	                case 0:
	                {
	                    f(str2,sizeof(str2),"1. Heavy Young Heathens – Lucifer Main\n2. The Black Keys – Howlin' For You\n3. Green Day – Baby Eyes\n4. Awolnation – Not Your Fault\n5. AWOLNATION – Some Kind of Joke\n6. Arctic Monkeys – R U Mine");
	                    f(str2,sizeof(str2),"%s\n7. AWOLNATION – I Am\n8. AWOLNATION – All I Need\n9. AWOLNATION (original) – Sail\n10. Kansas – Carry On My Wayward Son\n11. 4 Non Blondes – What's Up\n12. 3 Doors Down – Kryptonite\n13. ACDC – Hightway To Hell",str2);
	                    f(str2,sizeof(str2),"%s\n14. Green Day – Holiday\n15. Green Day – East Jesus Nowhere\n16. Green Day – American idiots\n17. Green Day – Jesus of Suburbia\n18. Imagine Dragons – Dream\n19. Imagine Dragons – I'm So Sorry",str2);
	                    f(str2,sizeof(str2),"%s\n20. Kari Kimmel – Black\n21. Red Hot Chili Peppers – Can't Stop\n22. Awolnation – Kill Your Heroes\n23. Awolnation – Jump On My Shoulders\n24. Awolnation – Wake Up\n25. "NAME" RP – track 2\n26. Roxette – The Look\n%s",str2,on);
	                    SPD(playerid,8982,2,"",str2,"Включить","Назад");
	                }
	            }
	        }
	    }
		case 8982:
		{
			if(response)
			{
			    if(IDOFMusic!=-1) MusicInfo[IDOFMusic][mNowTime]=0;
			    if(listitem==26)
				{
				    if(IDOFMusic==-1)return SCM(playerid, COLOR_RED, !"X {FFFFFF}Вы не можете выключить музыку, так-как она не играет!");
				    SCM(playerid, COLOR_VALIK, !"<< {FFFFFF}Вы успешно выключили музыку в зале.");
				    IDOFMusic=-1;
			 		return 1;
				}
			    IDOFMusic =0,MusicInfo[listitem][mNowTime]=0;
				SCM(playerid, COLOR_VALIK, !"<< {FFFFFF}Вы успешно включили/переключили музыку.");
			}
		}
		case 2281:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
					    if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 1 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете смешивать продукты с ящиками с разгрузочной станции!");
					    if(CarproductCount[GetPlayerVehicleID(playerid)]>=500)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш грузовик переполнен!");
						f(str,sizeof(str),"Введите количество продуктов, которое хотите закупить для перепродажи.\n{C1BABA}Используйте число от 1 до %i",500-CarproductCount[GetPlayerVehicleID(playerid)]);
			   			SPD(playerid,429,1,"",str, !"Принять", !"Отмена");
					}
					case 1:
					{
					    if(BizInfo[BIZ_ELECTRO_LS][bMoney]<(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31])/2)return SCM(playerid, COLOR_RED, !"В бизнесе не достаточно средств чтобы оплатить ваш груз!");
						if(CarproductCount[GetPlayerVehicleID(playerid)]==0)return SPD(playerid,2281,2,"","{42B02C}-{FFFFFF} Закупить продукты\n{42B02C}-{FFFFFF} Вернуть продукты", !"Принять", !"Отмена");
						if(CarproductType[GetPlayerVehicleID(playerid)] != 1 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете вернуть сюда продукты, так как вы их покупали на разгрузочной станции либо вобще не покупали!");
					    GLS[27]+=CarproductCount[GetPlayerVehicleID(playerid)];
					    SaveInforamtion();
					    GiveMoney(playerid,(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31]));
					    GiveBizMoney(BIZ_ELECTRO_LS,-(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31])/2);
						aml(52, playerid, "", "возращение продуктов для перепродажи", CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31]);
						CarproductCount[GetPlayerVehicleID(playerid)] =0;
                        CarproductType[GetPlayerVehicleID(playerid)] = 0;
						f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
						UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, str);
						f(str, sizeof(str), "Склад фермы\n\n\n{D38A37}%i{FFFFFF} продуктов\nСтоимость закупки: {D38A37}%i$\n\n{D38A37}Для загрузки посигнальте!",GLS[27],GLS[31]);
						UpdateDynamic3DTextLabelText(FactoryText[1], -1, str);
					}
				}
			}
		}
		case 1653:
		{
		    if(response)
		    {
		        PI[playerid][pType] = listitem;
          		SetPlayerBuyItem(playerid);
		    }
		}
		case 8762:
		{
		    if(response)
		    {
				if(dBiz[playerid]==-1) return SCM(playerid, COLOR_RED, !"Ошибка");
			    if(GetString(BizInfo[dBiz[playerid]][bOwner],"The State")) return SCM(playerid, COLOR_RED, !"Ошибка");
			    if(BizInfo[dBiz[playerid]][bState] == 7 || BizInfo[dBiz[playerid]][bState] == 1 || BizInfo[dBiz[playerid]][bState] == 2 || BizInfo[dBiz[playerid]][bState] == 3 || BizInfo[dBiz[playerid]][bState] == 9)
				{
				    if(BizInfo[dBiz[playerid]][bBuyCost]>0 && BizInfo[dBiz[playerid]][bNeedItem]>0)
				    {
				        if(IsPlayerInRangeOfPoint(playerid,10,BizInfo[dBiz[playerid]][bEnter_X],BizInfo[dBiz[playerid]][bEnter_Y],BizInfo[dBiz[playerid]][bEnter_Z]))
				        {
				            if(PI[playerid][pJob]!=3) return 1;
							if(vTemp[GetPlayerVehicleID(playerid)][vJob]!=3) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится в транспорте развозчика продуктов!");
							new col = strval(inputtextsave),carid = GetPlayerVehicleID(playerid);
							if(col < 1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете продать столько продуктов!");
							if(col > BizInfo[dBiz[playerid]][bNeedItem])return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Владелец бизнеса не заказывал столько продуктов!");
							if(BizInfo[dBiz[playerid]][bMoney]<(col*BizInfo[dBiz[playerid]][bBuyCost]))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В банке бизнеса не достаточно денег чтобы оплатить груз!");
							if(CarproductCount[carid] < col)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В вашем грузовике нет столько продуктов!");
						 	if(BizInfo[dBiz[playerid]][bState] == 7 || BizInfo[dBiz[playerid]][bState] == 1)
						 	{
								if(CarproductType[carid] != 1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Бизнес скупает продукты из склада фермы! Груз вашей машины можно вернуть на склад или продать в другой бизнес.");
								CarproductCount[carid] -= col;
								BizInfo[dBiz[playerid]][bNeedItem]-=col;
								BizInfo[dBiz[playerid]][bMoney]-=(col*BizInfo[dBiz[playerid]][bBuyCost]);
								BizInfo[dBiz[playerid]][bProducts]+=col;
								GiveMoney(playerid,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								aml(51, playerid, "", "продажа продуктов (перевозчик)", (col*BizInfo[dBiz[playerid]][bBuyCost]));
								SCMf(playerid, COLOR_ORANGE, "Вы успешно продали %i продуктов за %i$.", col, (col*BizInfo[dBiz[playerid]][bBuyCost]));
								if(CarproductCount[carid]<50)SCM(playerid, -1, !"Чтобы продолжить развозку продуктов, необходимо закупить их заново!");
								f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
								UpdateDynamic3DTextLabelText(Product[carid], 0xFFFFFFFF, str);
						 	}
						 	else if(BizInfo[dBiz[playerid]][bState] == 2)
						 	{
						 	    CarproductCount[carid] -= col;
								BizInfo[dBiz[playerid]][bNeedItem]-=col;
								BizInfo[dBiz[playerid]][bMoney]-=(col*BizInfo[dBiz[playerid]][bBuyCost]);
								BizInfo[dBiz[playerid]][bProducts]+=col;
								GiveMoney(playerid,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								aml(51, playerid, "", "продажа продуктов (перевозчик)", (col*BizInfo[dBiz[playerid]][bBuyCost]));
								SCMf(playerid, COLOR_ORANGE, "Вы успешно продали %i продуктов за %i$.", col, (col*BizInfo[dBiz[playerid]][bBuyCost]));
								if(CarproductCount[carid]<50)SCM(playerid, -1, !"Чтобы продолжить развозку продуктов, необходимо закупить их заново!");
								f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
								UpdateDynamic3DTextLabelText(Product[carid], 0xFFFFFFFF, str);
						 	}
						 	else
						 	{
						 	    if(CarproductType[carid] != 2)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Бизнес скупает продукты из разгрузочной станции! Груз вашей машины можно вернуть на склад или продать в другой бизнес.");
						 	    CarproductCount[carid] -= col;
						 	    BizInfo[dBiz[playerid]][bNeedItem]-=col;
						 	    BizInfo[dBiz[playerid]][bMoney]-=(col*BizInfo[dBiz[playerid]][bBuyCost]);
						 	    BizInfo[dBiz[playerid]][bProducts]+=col;
						 	    GiveMoney(playerid,(col*BizInfo[dBiz[playerid]][bBuyCost]));
						 	    aml(51, playerid, "", "продажа продуктов (перевозчик)", (col*BizInfo[dBiz[playerid]][bBuyCost]));
						 	    SCMf(playerid, COLOR_ORANGE, "Вы успешно продали %i продуктов за %i$.", col, (col*BizInfo[dBiz[playerid]][bBuyCost]));
								if(CarproductCount[carid]<50)SCM(playerid, -1, !"Чтобы продолжить развозку продуктов, необходимо закупить их заново!");
						 	    f(str,sizeof(str),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %i/500",CarproductCount[GetPlayerVehicleID(playerid)]);
								UpdateDynamic3DTextLabelText(Product[carid], 0xFFFFFFFF, str);

							}
							if(CarproductCount[carid]==0) CarproductType[carid] = 0;
							UpdateBiz(dBiz[playerid], 0);
							dBiz[playerid]=-1;
				        }
					}
					else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Бизнес больше не скупает продукты!");
				}
		    }
		}
		case 8761:
		{
		    if(response)
		    {
		        for(new i;i<22;i++)
		        {
		            if(listitem==i)
					{
						EnableGPSForPlayer(playerid,BizInfo[DBizitem[playerid][i]][bEnter_X],BizInfo[DBizitem[playerid][i]][bEnter_Y],BizInfo[DBizitem[playerid][i]][bEnter_Z]);
						SCM(playerid, COLOR_LIGHTBLUE, !"Местоположение заказчика отмечено на карте красным маркером. Не забудьте загрузить товар (/gps - разное - склады)");
						if(BizInfo[DBizitem[playerid][i]][bState] == 7 || BizInfo[DBizitem[playerid][i]][bState] == 1) SCM(playerid, COLOR_LIGHTBLUE, !"Бизнес скупает продукты только со склада фермы!");
						else if(BizInfo[DBizitem[playerid][i]][bState] == 2) SCM(playerid, COLOR_LIGHTBLUE, !"Бизнес скупает продукты с фермы и разгрузочной станции!");
						else  SCM(playerid, COLOR_LIGHTBLUE, !"Бизнес скупает товар только со склада разгрузочной станции!");
					}
		        }
		    }
		}
		case 6971:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0: callcmd::park(playerid);
			    case 1:
			    {
					new carid = ShowVeh[playerid];
					new number = GetVehicleID(ShowVeh[playerid]);
					if(!IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_RED, !"Это не ваша машина!");
					CarInfo[number][cVirtualWorld] = 0;
					CarInfo[number][cInterior] = 0;
					CarInfo[number][cParkedInStanartParking] = 1;
					SetVehiclePosToStandartPark(carid);
					SetVehicleToRespawn(carid);
					return SaveOwnableCar(number);
			    }
			}
		}
		case 228:
		{
		    if(response)
		    {
		        new para1 = PanelPlayerID[playerid];
				new money = CreditMoney[playerid];
				if(PI[para1][pCredit]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок уже несет долг банку!");
				if(PI[para1][pWanted]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете выдать кредит человеку, который находится в розыске!");
				if(PI[para1][pLevel]<3)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете выдать кредит человеку, у которого уровень ниже 3-го!");
			    PI[para1][pBank] += money;
			    UpdatePlayerDataInt(para1, "Bank", PI[para1][pBank]);
			    aml(61, playerid, "", "выдача кредита", money);
				PI[para1][pCredit] += money;
				UpdatePlayerDataInt(para1, "Credit", PI[para1][pCredit]);
				OrgInfo[TEAM_BANK][oBank]-=money;
				SaveOrg(TEAM_BANK);
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно выдали кредит игроку %s", PN(para1));
				f(str,sizeof(str),"{FFFFFF}Вы взяли кредит размером $%i. Деньги переведены на ваш банковский счет.",money);
				SPD(para1, 0, 0, "Кредит", str, "Ок", "");
		    }
		    else ShowBankMenu(playerid);
		}
		case 229:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money > 0 && PI[playerid][pBank] >= money)
				{
				    if(money <= PI[playerid][pCredit])
				    {
					    PI[playerid][pBank] -= money;
					    UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
					    aml(62, playerid, "", "погасил кредит", money);
					    PI[playerid][pCredit] -= money;
					    UpdatePlayerDataInt(playerid, "Credit", PI[playerid][pCredit]);
					    OrgInfo[TEAM_BANK][oBank]+=money;
					    SaveOrg(TEAM_BANK);
					    f(str,sizeof(str),"[Информация] {FFFFFF}Вы погасили кредит на $%i",money);
					    SCM(playerid, COLOR_VALIK, str);
					    SendBankBot(playerid);
					    if(PI[playerid][pCredit] <= 0)
					    {
					        PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
					        SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Поздравляю! Вы полностью погасили кредит!");
					    }
				    }
				    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сумма вашего кредита меньше, чем вы хотите заплатить");
				}
				else SendBotMessage(playerid,"На вашем банковском счету нет нужной суммы!");
			}
			else ShowBankMenu(playerid);
		}
		case 230:
		{
		    if(response)
		    {
		    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return RemovePlayerFromVehicle(playerid);
		        new arid = GetArendCarID(GetPlayerVehicleID(playerid));
			    new bizid = ArendInfo[arid][aBizid];
			    new vehid = GetPlayerVehicleID(playerid);
       			new cost;
       			switch(GetVehicleModel(vehid))
			    {
           			case 454: cost= 10000;
			        case 484: cost = 12000;
			        case 558: cost = 9000;
			        case 541: cost = 22000;
			        case 560: cost = 13000;
			        case 409: cost = 10000;
					case 462: cost = 250;
					case 469: cost = 15000;
					case 487: cost = 20000;
			        default: cost = GLS[14];
				}
		        if(GetMoney(playerid) >= cost)
		        {
		            ArendKey[playerid] = arid;
		            ArendInfo[arid][aRentID] = playerid;
		            SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно арендовали это ТС");
		            SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Чтобы отказаться от аренды [/unrentcar]");
		            SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Чтобы закрыть автомобиль используйте [/jlock]");
		            GiveMoney(playerid,-cost);
		            aml(52, playerid, "", "аренда транспорта", cost);
		            if(bizid != INVALID_BIZ) GiveBizMoney(bizid,cost);
		            if(ArendInfo[arid][aID] == 578) EnableGPSForPlayer(playerid, -1733.3938, 187.7363, 3.5547);
		        }
				else
				{
				    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    RemovePlayerFromVehicle(playerid);
				}
		    }
		    else RemovePlayerFromVehicle(playerid);
		    return 1;
		}
		case 329:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
			        case 0: GLS[0] = 1;
			        case 1: GLS[0] = 2;
			        case 2: GLS[0] = 3;
			        case 3: GLS[0] = 4;
			        case 4: GLS[0] = 5;
			        case 5: GLS[0] = 6;
			    }
			    SaveInforamtion();
			    f(str,sizeof(str),"Лидер центрального банка - %s. Установил кредитную ставку %i процентов!",PN(playerid),GLS[0]);
				SCMAll(COLOR_GOLD,str);
				f(str,sizeof(str),"{FFFFFF}\t\tПолучение кредитa\nКредитная ставка {9ACD32}%i{FFFFFF} процента(ов).\nПолучить кредит или начать работу с {9ACD32}депозитом{FFFFFF},\n(Получить/Снять деньги) можно через сотрудника банка!\n\n\tФонд премии инкасаторам: {9ACD32}0${FFFFFF}\nВыделеная премия на одного работника: {9ACD32}0${FFFFFF}\n\n\t\t\t{FFFF00}КУРС ЕВРО: {FFFFFF}%i$",GLS[0],GLS[68]);
				UpdateDynamic3DTextLabelText(cretits, 0xFFFFFFFF, str);
			}
		}
		case 2333:
		{
		    if(!response) return 1;
		    if(!IsAtGang(playerid)) return SCM(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не состоите в банде !");
		    if(BlackLuckIDSPlayer{playerid}) return SCM(playerid, COLOR_GOLD, "[Информация]{ffffff} Вы уже заказывали закладку. Бегите заберите её!");
			if(GetInvCount(playerid, Item_Bitcoin) < 1) return SCM(playerid, COLOR_GOLD, "[Информация]{ffffff} У вас не достаточно BTC.");
			InvAdd(playerid, Item_Bitcoin, -1);
			
			new BlackLucksId = random(sizeof(BlackLuckInfo));
			BlackLuckIDSPlayer{playerid} = true;

			EnableGPSForPlayer(playerid,BlackLuckInfo[BlackLucksId][BlackLuckX],BlackLuckInfo[BlackLucksId][BlackLuckY],BlackLuckInfo[BlackLucksId][BlackLuckZ]); 
	        BlackLuckInfo[BlackLucksId][BlackLuckObject] = CreateDynamicObject(1575, BlackLuckInfo[BlackLucksId][BlackLuckX],BlackLuckInfo[BlackLucksId][BlackLuckY],BlackLuckInfo[BlackLucksId][BlackLuckZ]-1, 0.0, 0.0, 96.0);
	        BlackLuckInfo[BlackLucksId][BlackLuck3DText] = CreateDynamic3DTextLabel(!"Нажмите ALT\nчтобы подобрать закладку", COLOR_GREY, BlackLuckInfo[BlackLucksId][BlackLuckX],BlackLuckInfo[BlackLucksId][BlackLuckY],BlackLuckInfo[BlackLucksId][BlackLuckZ]-1, 6.0);
	        BlackLuckInfo[BlackLucksId][BlackLuckStatus] = true;

			SCM(playerid, COLOR_YELLOW, "[Информация]{ffffff} Координаты с вашей закладкой отмечены на карте.");
		}
		case 233:
		{
		    if(response)
		    {
		        if(PI[playerid][pJob] != JOB_NONE) return SendBotMessage(playerid,"У вас уже есть работа, чтобы уволиться напишите /quitjob");
		    	switch(listitem)
			    {
					case 0:
					{
					    if(PI[playerid][pLevel] < 3) return SendBotMessage(playerid,"На эту работу можно устроиться с 3 уровня!");
						GetJob[playerid] = JOB_MECHANIC;
						SPD(playerid,28,0,"Работа: Механик","{FFFFFF}Вы собираетесь устроиться на работу Механиком\nВы согласный с условиями?","Да","Нет");
					}
					case 1:
					{
					    if(PI[playerid][pLevel] < 2) return SendBotMessage(playerid,"На эту работу можно устроиться с 2 уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_TAXI;
						SPD(playerid,28,0,"Работа: Таксист","{FFFFFF}Вы собираетесь устроиться на работу Таксистом\nВы согласный с условиями?","Да","Нет");
					}
					case 2:
					{
						if(PI[playerid][pLevel]<5)return SendBotMessage(playerid,"На эту работу можно устроиться с 5-го уровня!");
						GetJob[playerid] = JOB_GUIDE;
						SPD(playerid,28,0,"Работа: Крупье","{FFFFFF}Вы собираетесь устроиться на работу Крупье в казино\nВы согласны с условиями?","Да","Нет");
					}
					case 3:
					{
		   				if(PI[playerid][pLevel] < 7) return SendBotMessage(playerid,"На эту работу можно устроиться с 7-го уровня!");
						if(PI[playerid][pZKP] < 25) return SendBotMessage(playerid,"Чтобы работать в Налоговой нужно иметь законопослушность не меньше 25-ти.");
						GetJob[playerid] = JOB_NALOG;
						SPD(playerid,28,0,"Налоговая","{FFFFFF}Вы собираетесь устроиться в налоговую кантору\nВы согласны с условиями?","Да","Нет");
					}
					case 4:
					{
					    if(PI[playerid][pLevel]<6)return SendBotMessage(playerid,"На эту работу можно устроиться только с 6-го уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						if(PI[playerid][pZKP] < 25) return SendBotMessage(playerid,"Чтобы работать инкассатором нужно иметь законопослушность не меньше 25-ти.");
						GetJob[playerid] = JOB_COLLECTOR;
						SPD(playerid,28,0,"Работа: Инкассатор","{FFFFFF}Вы собираетесь устроиться на работу Инкассатором\nВы согласный с условиями?","Да","Нет");
					}
					case 5:
					{
					    if(PI[playerid][pLevel] < 5) return SendBotMessage(playerid,"На эту работу можно устроиться с 5-го уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_TRUCKER;
						SPD(playerid,28,0,"Работа: Дальнобойщик","{FFFFFF}Вы собираетесь устроиться на работу Дальнобойщиком\nВы согласный с условиями?","Да","Нет");
					}
					case 6:
					{
					    if(PI[playerid][pLevel] < 4) return SendBotMessage(playerid,"На эту работу можно устроиться с 4-го уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_SCRAPER;
						SPD(playerid,28,0,"Работа: Развозчик металлолома","{FFFFFF}Вы собираетесь устроиться на работу Развозчиком металлолома\nВы согласный с условиями?","Да","Нет");
					}
					case 7:
					{
					    if(PI[playerid][pLevel] < 3) return SendBotMessage(playerid,"На эту работу можно устроиться с 3-го уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_MUSOR;
						SPD(playerid,28,0,"Работа: Мусорщик","{FFFFFF}Вы собираетесь устроиться на работу мусорщиком\nВы согласный с условиями?","Да","Нет");
					}
					case 8:
					{
					    if(PI[playerid][pLevel] < 2) return SendBotMessage(playerid,"На эту работу можно устроиться с 2-го уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_GUNDEALER;
						SPD(playerid,28,0,"Работа: Водитель автобуса","{FFFFFF}Вы собираетесь устроиться на работу водителя автобуса\nВы согласный с условиями?","Да","Нет");
					}
					case 9:
					{
					    if(PI[playerid][pLevel] < 4) return SendBotMessage(playerid,"На эту работу можно устроиться с 4-го уровня!");
                        if(!GetInvCount(playerid, Item_Car_Lic)) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_CARJACKER;
						SPD(playerid,28,0,"Работа: развозчик продуктов","{FFFFFF}Вы собираетесь устроиться на работу развозчика продуктов\nВы согласный с условиями?","Да","Нет");
					}
					case 10:
					{
					    if(PI[playerid][pLevel] < 7) return SendBotMessage(playerid,"На эту работу можно устроиться с 7-го уровня!");
					    if(PI[playerid][pZKP] < 25) return SendBotMessage(playerid,"Чтобы работать адвокатом нужно иметь законопослушность не меньше 25-ти.");
						GetJob[playerid] = JOB_ADVOKAT;
						SPD(playerid,28,0,"Работа: адвокат","{FFFFFF}Вы собираетесь устроиться на работу адвоката\nВы согласный с условиями?","Да","Нет");
					}
				}
			}
		}
		case 235:
		{
		    if(response)
			{
			    if(setcheck[playerid] == -1) TShowStats(playerid, playerid);
 				else TShowStats(playerid, setcheck[playerid]);
			}
		}
		case 3391:
		{
		    if(response)
			{
			    if(setcheck[playerid] == -1) ShowStats(playerid, playerid);
 				else ShowStats(playerid, setcheck[playerid]);
			}
		}
		case 236:
		{
		    if(response)
			{
			    new bizzid = GoFuel[listitem][gfBizzID];
			    if(BizInfo[bizzid][bProducts] <= 50000)
			    {
		            PlayerGoPost[playerid] = listitem;
					TogglePlayerDynamicCP(playerid,GoFuelCP[listitem], true);
					SPD(playerid, 0, 0, !"", !"{FFFFFF}Отвезите груз на точку!\nМесто обозначено красным маркером.", !"Принять", !"");
					//Streamer_Update(playerid);
					SelectPost[playerid] = listitem;
				}
				else
				{
				    SCM(playerid, COLOR_GREY, !"На этой АЗС достаточно топлива");
     				ShowPlayerAZS(playerid);
				}
		    }
		}
	    case 240:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(PI[playerid][pRank] >= 4)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            SPD(playerid, 241, 2, "","\
					            - Наркоман\n\
								- Человек в панаме\n\
								- Уборщик 1\n\
								- Уборщик 2\n\
								- Рабочий 1\n\
								- Рабочий 2\n\
								- Турист 1 \n\
								- Турист 2\n\
								- Гольфер\n\
								- Фермер\n\
								- Фермер (Жен.)\n\
								- Гражданский 1\n\
								- Гражданский 2\n\
								- Гражданский 3\n\
								- Гражданский 4 \n\
								- Гражданский 5\n\
								","Выбор","Назад");
							}
						}
						else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок");
			        }
			        case 1:
			        {
			            if(PI[playerid][pRank] >= 6)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            SPD(playerid, 242, 2, "","\
					            - Стрит рейсер 1\n\
								- Стрит рейсер 2\n\
								- Гроув стрит 1\n\
								- Гроув стрит 2\n\
								- Вагос 1\n\
								- Вагос 2\n\
								- Баллас 1\n\
								- Баллас 2\n\
								- Коронос 1\n\
								- Коронос 2\n\
								- Рифа 1\n\
								- Рифа 2\n\
								- Байкер 1\n\
								- Байкер 2\n\
								- Крипс 1\n\
								- Крипс 2\n\
					            ","Выбор","Назад");
							}
			            }
			            else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок");
			        }
			        case 2://ляка
			        {
			            if(PI[playerid][pRank] >= 9)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            SPD(playerid, 243, 2, "","\
					            - Стрит рейсер (Лид.)\n\
								- Гроув стрит (Лид.)\n\
								- Вагос (Лид.)\n\
								- Баллас (Лид.)\n\
								- Коронос (Лид.)\n\
								- Рифа (Лид.)\n\
								- Байкер (Лид.)\n\
								- Крипс (Лид.)\n\
								- Р.М. 1\n\
								- Р.М. 2\n\
								- Р.М. (Лид.)\n\
								- LCN. 1\n\
								- LCN. 2\n\
								- LCN. (Лид.)\n\
								- Якудза 1\n\
								- Якудза 2\n\
								- Якудза (Лид.)\n\
								- Полиция 1\n\
								- Полиция 2\n\
								- Полиция (Лид.)\n\
								- Армеец\n\
					            ","Выбор","Назад");
							}
			            }
			            else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок");
					}
					case 3:
					{
					    TeamDuty{playerid}=true;
					    Vnedren[playerid]=0;
					    SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					    SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
					    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы переоделись в служебную одежду.");
					}
			    }
			}
		}
		case 241:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 1);
					case 1: SetPlayerSkinEx(playerid, 2);
					case 2: SetPlayerSkinEx(playerid, 8);
					case 3: SetPlayerSkinEx(playerid, 42);
					case 4: SetPlayerSkinEx(playerid, 16);
					case 5: SetPlayerSkinEx(playerid, 27);
					case 6: SetPlayerSkinEx(playerid, 26);
					case 7: SetPlayerSkinEx(playerid, 35);
					case 8: SetPlayerSkinEx(playerid, 37);
					case 9: SetPlayerSkinEx(playerid, 34);
					case 10: SetPlayerSkinEx(playerid, 31);
					case 11: SetPlayerSkinEx(playerid, 3);
					case 12: SetPlayerSkinEx(playerid, 6);
					case 13: SetPlayerSkinEx(playerid, 15);
					case 14: SetPlayerSkinEx(playerid, 18);
					case 15: SetPlayerSkinEx(playerid, 19);
		        }
		        SetPlayerColor(playerid,0xFDFCFC15);
	         	J_SetPlayerArmour(playerid, 0);
	    		PI[playerid][pShield] = 0.0;
				if(UsingShield[playerid]) RemovePlayerAttachedObject(playerid, 7);
		    }
		    else SPD(playerid, 240, 2, "", "{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 242:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 67);
					case 1: SetPlayerSkinEx(playerid, 60);
					case 2:
					{
						SetPlayerSkinEx(playerid, 105);
						SetPlayerColor(playerid,0x00932799);
						Vnedren[playerid]=11;
					}
					case 3:
					{
						SetPlayerSkinEx(playerid, 106);
						SetPlayerColor(playerid,0x00932799);
						Vnedren[playerid]=11;
					}
					case 4:
					{
						SetPlayerSkinEx(playerid, 108);
						SetPlayerColor(playerid,0xD1DB1C99);
						Vnedren[playerid]=12;
					}
					case 5:
					{
						SetPlayerSkinEx(playerid, 109);
						SetPlayerColor(playerid,0xD1DB1C99);
						Vnedren[playerid]=11;
					}
					case 6:
					{
						SetPlayerSkinEx(playerid, 102);
						SetPlayerColor(playerid,0x93008099);
						Vnedren[playerid]=13;
					}
					case 7:
					{
						SetPlayerSkinEx(playerid, 103);
                        SetPlayerColor(playerid,0x93008099);
                        Vnedren[playerid]=13;
					}
					case 8:
					{
						SetPlayerSkinEx(playerid, 114);
						SetPlayerColor(playerid,0x00FFE299);
						Vnedren[playerid]=14;
					}
					case 9:
					{
						SetPlayerSkinEx(playerid, 116);
						SetPlayerColor(playerid,0x00FFE299);
						Vnedren[playerid]=14;
					}
					case 10:
					{
						SetPlayerSkinEx(playerid, 174);
						SetPlayerColor(playerid,0x238C8C99);
						Vnedren[playerid]=15;
					}
					case 11:
					{
						SetPlayerSkinEx(playerid, 175);
						SetPlayerColor(playerid,0x238C8C99);
						Vnedren[playerid]=15;
					}
					case 12:
					{
						SetPlayerSkinEx(playerid, 181);
						SetPlayerColor(playerid,0xBA541D80);
						Vnedren[playerid]=19;
					}
					case 13:
					{
						SetPlayerSkinEx(playerid, 248);
						SetPlayerColor(playerid,0xBA541D80);
						Vnedren[playerid]=19;
					}
					case 14: SetPlayerSkinEx(playerid, 221);
					case 15: SetPlayerSkinEx(playerid, 293);
		        }
		        J_SetPlayerArmour(playerid, 0);
	    		PI[playerid][pShield] = 0.0;
				if(UsingShield[playerid]) RemovePlayerAttachedObject(playerid, 7);
		    }
		    else SPD(playerid, 240, 2, "", "{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 243:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 23);
					case 1:
					{
						SetPlayerSkinEx(playerid, 270);
						SetPlayerColor(playerid,0x00932799);
						Vnedren[playerid]=11;
					}
					case 2:
					{
						SetPlayerSkinEx(playerid, 110);
						SetPlayerColor(playerid,0xD1DB1C99);
						Vnedren[playerid]=12;
					}
					case 3:
					{
						SetPlayerSkinEx(playerid, 104);
						SetPlayerColor(playerid,0x93008099);
						Vnedren[playerid]=13;
					}
					case 4:
					{
						SetPlayerSkinEx(playerid, 115);
                        SetPlayerColor(playerid,0x00FFE299);
                        Vnedren[playerid]=14;
					}
					case 5:
					{
					    SetPlayerSkinEx(playerid, 173);
					    SetPlayerColor(playerid,0x238C8C99);
					    Vnedren[playerid]=15;
					}
					case 6:
					{
						SetPlayerSkinEx(playerid, 247);
						SetPlayerColor(playerid,0xBA541D80);
						Vnedren[playerid]=19;
					}
					case 7: SetPlayerSkinEx(playerid, 143);
					case 8:
					{
					    SetPlayerSkinEx(playerid, 272);
					    SetPlayerColor(playerid,0x33669980);
					    Vnedren[playerid]=16;
					}
					case 9:
					{
						SetPlayerSkinEx(playerid, 112);
						SetPlayerColor(playerid,0x33669980);
						Vnedren[playerid]=16;
					}
					case 10:
					{
						SetPlayerSkinEx(playerid, 46);
						SetPlayerColor(playerid,0x33669980);
						Vnedren[playerid]=16;
					}
					case 11:
					{
						SetPlayerSkinEx(playerid, 124);
						SetPlayerColor(playerid,0x99336680);
						Vnedren[playerid]=18;
					}
					case 12:
					{
						SetPlayerSkinEx(playerid, 223);
						SetPlayerColor(playerid,0x99336680);
						Vnedren[playerid]=18;
					}
					case 13:
					{
						SetPlayerSkinEx(playerid, 113);
						SetPlayerColor(playerid,0x99336680);
						Vnedren[playerid]=18;
					}
					case 14:
					{
						SetPlayerSkinEx(playerid, 121);
						SetPlayerColor(playerid,0x96020280);
						Vnedren[playerid]=17;
					}
					case 15:
					{
				 		SetPlayerSkinEx(playerid, 122);
                        SetPlayerColor(playerid,0x96020280);
                        Vnedren[playerid]=17;
					}
					case 16:
					{
						SetPlayerSkinEx(playerid, 120);
                        SetPlayerColor(playerid,0x96020280);
                        Vnedren[playerid]=17;
					}
					case 17:
					{
						SetPlayerSkinEx(playerid, 280);
						SetPlayerColor(playerid,0x0049FF80);
					}
					case 18:
					{
						SetPlayerSkinEx(playerid, 288);
						SetPlayerColor(playerid,0x0049FF80);
					}
					case 19:
					{
						SetPlayerSkinEx(playerid, 283);
						SetPlayerColor(playerid,0x0049FF80);
					}
					case 20:
					{
						SetPlayerSkinEx(playerid, 287); //?????
						SetPlayerColor(playerid,0x99663380);
					}
		        }
		        J_SetPlayerArmour(playerid, 0);
	    		PI[playerid][pShield] = 0.0;
				if(UsingShield[playerid]) RemovePlayerAttachedObject(playerid, 7);

		    }
		    else SPD(playerid, 240, 2, "", "{B03131}-{FFFFFF} Стандарт [4+]\n{B03131}-{FFFFFF} Средний [6+]\n{B03131}-{FFFFFF} Высший [9]\n{B03131}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 247:
		{
		    new carid = GetPlayerVehicleID(playerid);
		    if(carid != 0 && vTemp[carid][vJob] == JOB_TAXI)
			{
		    	if(response)
		    	{
				    new driverid = GetVehicleSeat(carid, 0);
				    if(driverid != INVALID_PLAYER_ID && PI[driverid][pJob] == JOB_TAXI)
				    {
						if(TaxiTarif[driverid] > 0)
						{
							if(PlayerAFKTime[driverid])
							{
							    SCM(playerid, COLOR_RED, !">> Вы не можете сесть в такси, так-как водитель находится АФК!");
							    ExitCar(playerid);
							    return 1;
							}
					        switch(listitem)
					        {
					            case 0:
					            {
									for(new i;i < sizeof(GpsInfo);i ++)
									{
									    f(str2,sizeof(str2),"%s\n",GpsInfo[i][gpsName]);
									    strcat(str2,str);
									}
         							SPD(playerid, 248, 2, "Выберите пункт", str2, "Выбор", "Отмена");
					            }
					            case 1:
					            {
									SCM(playerid, COLOR_VALIK, !"Откройте карту (Esc > Карта) и отметьте на ней пункт назначения");
			                        Taxi_GO[playerid] = 1;
								}
					            case 2:
					            {
					                SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}Вы выбрали пункт: 'Договориться с таксистом'");
					                Taxi_GO[playerid] = 2;
					                SCM(driverid, COLOR_GREY, "[Подсказка] {FFFFFF}Игрок выбрал пункт: 'Договориться с таксистом'");
					            }
					        }
						}
					}
				}
			    else
			    {
			        SCM(playerid, COLOR_GREY, !"Вы отказались от проезда!");
			        RemovePlayerFromVehicle(playerid);
			        new driverid = GetVehicleSeat(carid, 0);
			    	if(driverid != INVALID_PLAYER_ID && PI[driverid][pJob] == JOB_TAXI)
					{
					    f(str,sizeof(str),"%s отказался(ась) от проезда", cPN(playerid));
					    SCM(driverid, COLOR_GREY, str);
					}
			    }
			}
		}
		case 248:
		{
		    if(response)
		    {
		        new carid = GetPlayerVehicleID(playerid);
		        if(carid != 0 && vTemp[carid][vJob] == JOB_TAXI)
				{
				    new driverid = GetVehicleSeat(carid, 0);
				    if(driverid != INVALID_PLAYER_ID && PI[driverid][pJob] == JOB_TAXI)
				    {
						if(TaxiTarif[driverid] > 0)
						{
						    EnableGPSForPlayer(driverid,GpsInfo[listitem][gpsPos][0],GpsInfo[listitem][gpsPos][1],GpsInfo[listitem][gpsPos][2]);
						    f(str, sizeof(str), "%s выбрал(а) пункт '%s'", cPN(playerid), GpsInfo[listitem][gpsName]);
						    SCM(driverid, COLOR_VALIK, str);
						    f(str, sizeof(str), "Вы выбрали пункт '%s'", GpsInfo[listitem][gpsName]);
						    SCM(playerid, COLOR_VALIK, str);
						}
						else SCM(playerid, COLOR_GREY, !"Таксист ещё не установил тариф");
					}
					else SCM(playerid, COLOR_GREY, !"В такси нет водителя. Либо водитель не таксист");
				}
				else SCM(playerid, COLOR_GREY, !"Вы должны сидеть в такси");
		    }
		    else SPD(playerid, 247, 2, "Как ехать?", "1. Выбрать пункт в GPS\n2. Отметить точку на карте\n3. Договориться с таксистом", "Выбор", "Отмена");
		}
		case 885:
		{
		    if(response)
		    {
		        if(strlen(inputtextsave)>5)
		        {
		            for(new i;i < strlen(inputtextsave);i ++)
					{
					    if(inputtextsave[i] < '0' || inputtextsave[i] > '9') return SPD(playerid, 885, 1, "", "{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код\n\n{FF0000}Ошибка: Код безопасности может состоять только из цифр!","Далее","Отмена");
					}
          			PI[playerid][pBankPass] = strval(inputtextsave);
          			UpdatePlayerDataInt(playerid, "BankPass", strval(inputtextsave));
          			f(str,sizeof(str),"{929290}Вы успешно сменили свой пароль от банковской карты.\nТеперь ваш пароль: %i запишите его чтобы не забыть!",PI[playerid][pBankPass]);
          			SPD(playerid,0,0,"",str,"Закрыть","");
		        }
		        else SPD(playerid, 885, 1, "", "{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код\nКод должен состоять из 6 символов!","Далее","Отмена");

		    }
		}
		case 883:
		{
			if(response)
		    {
		        if(!strlen(inputtextsave)) SPD(playerid, 883, 1, !"", !"{FFFFFF}Введите {B83434}ваш{FFFFFF} код безопасности", !"Далее", !"Отмена");
		        if(PI[playerid][pBankPass] == strval(inputtextsave)) SPD(playerid, 885, 1, !"", !"{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код","Далее","Отмена");
		        else SPD(playerid, 0, 0, !"", !"{929090} Вы не правильно ввели свой PIN-код!", !"Закрыть", !"");
			}
			else if(PI[playerid][pBankCard] == 0) SPD(playerid, 0, 0, !"", !"У вас нет банковской карты. Получить ее можно в\nбанковском отделении Las Venturas ,или у сотрудника банка!", !"Закрыть", !"");
		}
		case 254:
		{
		    if(response)
		    {
		        if(!CreateMats[playerid])
		        {
		            CreateMats[playerid] = 1;
		            CreateMatsCount[playerid] = 0;
		            PI[playerid][pOldSkin] = GetPlayerSkin(playerid);//kisa
		            if(PI[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 27);
					if(PI[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 53);
		        }
		        else
		        {
		            if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid, 7);
		            if(IsPlayerAttachedObjectSlotUsed(playerid, 6))RemovePlayerAttachedObject(playerid, 6);
              		if(GetPlayerVirtualWorld(playerid)==10 )
					{
						GiveMoney(playerid, CreateMatsCount[playerid] * GLS[5]);
						aml(51, playerid, "", "работа на фабрике", CreateMatsCount[playerid] * GLS[5]);
		            	CreateMats[playerid] = 0;
		            	SCMf(playerid, -1, "Вы закончили работу и получили {73B461}$%i", (CreateMatsCount[playerid] * GLS[5]));
					}
					else
					{
					    GiveMoney(playerid, (CreateMatsCount[playerid] * GLS[5])/2);
					    aml(51, playerid, "", "работа на фабрике", (CreateMatsCount[playerid] * GLS[5])/2);
		            	CreateMats[playerid] = 0;
		            	SCMf(playerid, -1, "Вы закончили работу и получили {73B461}$%i", (CreateMatsCount[playerid] * GLS[5])/2);
					}
					SetPlayerSkinEx(playerid, PI[playerid][pOldSkin]);
		            TogglePlayerDynamicCP(playerid, FerumEndCP, false);
					for(new i; i < sizeof(FerumCP);i ++) TogglePlayerDynamicCP(playerid, FerumCP[i], false);
		        }
		    }
		}
		case 258:
		{
		    if(response)
			{
			    new bizzid = GoGunShop[listitem][gsBizzID];
			    if(BizInfo[bizzid][bProducts] <= 49000)
			    {
					if(FactoryMats<500)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На складе завода не достаточно материалов!");
		            PlayerGoPost[playerid] = listitem;
					TogglePlayerDynamicCP(playerid, GoGunShopCP[listitem], true);
					SPD(playerid, 0, 0, !"", !"{FFFFFF}Отвезите груз на точку!\nМесто обозначено красным маркером.", !"Принять", !"");
					//Streamer_Update(playerid);
					SelectPost[playerid] = listitem;
					FactoryMats -= 500;
     				f(str, sizeof(str), "{FFFFFF}Металла: {10F441}%iкг\n{FFFFFF}Материалов: {10F441}%i\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryFerum, FactoryMats);
					UpdateDynamic3DTextLabelText(FactoryText[0], -1, str);
				}
				else
				{
				    SCM(playerid, COLOR_GREY, !"В этом оружейном магазине достаточно патронов!");
     				InJob[playerid] = 1;
					ShowPlayerGS(playerid);
				}
		    }
		}
		case 259:
		{
		    new offer = LawyerOffer[playerid];
		    if(offer == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Видимо адвокат отказался от своего предложения");
			if(!IsPlayerConnected(offer)) return SCM(playerid, COLOR_GREY, !"Адвокат вышел с игры");
			if(LawyerOffer[offer] != playerid) return SCM(playerid, COLOR_GREY, !"Видимо адвокат отказался от своего предложения");
			if(response)
			{
	            SPD(playerid, 260, 2, "Способ оплаты", "Наличными\nЧерез банк (+10 процентов)", "Выбор", "Отмена");
	            LawyerOffer[playerid] = offer;
	        }
	        else
			{
			    LawyerOffer[playerid] = INVALID_PLAYER_ID;
	            LawyerOffer[offer] = INVALID_PLAYER_ID;
			    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы отказались от услуг адвоката");
			    f(str, sizeof(str), "[Информация] {FFFFFF}%s отказался(лась) от ваших услуг", PN(playerid));
			    SCM(offer, COLOR_GREY, str);
			}
		}
		case 260:
		{
		    new offer = LawyerOffer[playerid];
		    if(offer == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Видимо адвокат отказался от своего предложения");
			if(!IsPlayerConnected(offer)) return SCM(playerid, COLOR_GREY, !"Адвокат вышел с игры");
			if(LawyerOffer[offer] != playerid) return SCM(playerid, COLOR_GREY, !"Видимо адвокат отказался от своего предложения");
			if(response)
			{
			    if(((PI[playerid][pMoney] < PI[playerid][pBailPrice]) && listitem == 0) || ((PI[playerid][pBank] < floatround(PI[playerid][pBailPrice] * 1.1) && listitem==1)))
			    {
			        LawyerOffer[playerid] = INVALID_PLAYER_ID;
		            LawyerOffer[offer] = INVALID_PLAYER_ID;
				    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы отказались от услуг адвоката из-за нехватки денег!");
				    f(str, sizeof(str), "[Информация] {FFFFFF}%s отказался(лась) от ваших услуг из-за нехватки денег!", PN(playerid));
				    SCM(offer, COLOR_GREY, str);
				    return 1;
			    }
		        if(listitem == 0) GiveMoney(playerid, -PI[playerid][pBailPrice]);
		        else if(listitem == 1)
		        {
		        	PI[playerid][pBank] -= floatround(PI[playerid][pBailPrice] * 1.1);
		        	UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
		        }
		        GiveMoney(offer, PI[playerid][pBailPrice]);
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы заплатили $%i адвокату %s за сокращение срока вдвое", PI[playerid][pBailPrice], PN(offer));
				SCMf(offer, COLOR_VALIK, "[Информация] {FFFFFF}%s заплатил вам $%i за сокращение срока вдвое", PN(playerid), PI[playerid][pBailPrice]);
				new newtime = floatround(PI[playerid][pJailTime]/2);
				PI[playerid][pJailTime]-= newtime;
				OldFreePlayer[offer] = playerid;
	            LawyerOffer[playerid] = INVALID_PLAYER_ID;
	            LawyerOffer[offer] = INVALID_PLAYER_ID;
	            aml(50, playerid, PN(offer), "сокращение срока в тюрьме", PI[playerid][pBailPrice]);
	        }
	        else
			{
			    LawyerOffer[playerid] = INVALID_PLAYER_ID;
	            LawyerOffer[offer] = INVALID_PLAYER_ID;
			    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы отказались от услуг адвоката");
			    f(str, sizeof(str), "[Информация] {FFFFFF}%s отказался(лась) от ваших услуг", PN(playerid));
			    SCM(offer, COLOR_GREY, str);
			}
        }
		case 263:
		{
		    if(response)
			{
			    if(listitem < 5)
			    {
					new fish = PlayerFish[playerid][listitem];
					if(fish != 0)
					{
					    f(str, sizeof(str), "Вы выбросили %s массой %i Kg", FishName[fish], FishMassa[playerid][listitem]);
					    SCM(playerid, COLOR_VALIK, str);
					    PlayerFish[playerid][listitem] = 0;
					    FishMassa[playerid][listitem] = 0;
					}
				}
				else
				{
				    for(new i; i < 5; i++)
				    {
				        PlayerFish[playerid][i] = 0;
					    FishMassa[playerid][i] = 0;
				    }
				    SCM(playerid, COLOR_VALIK, !"Вы выбросили всю рыбу");
				}
			}
		}
		case 266:
		{
			if(!response) return 1;
            switch(listitem)
            {
                case 0:
                {
					foreach(new i: Vehicle) if(!IsVehicleOccupied(i)) SetVehicleToRespawn(i);
                    SCM(playerid, COLOR_VALIK, !"Вы зареспавнили весь транспорт.");
                    f(str, sizeof(str), "[A] Администратор %s[%i] заспавнил транспорт!", PN(playerid), playerid);
					SendAdminsMessage(COLOR_GREY, str);
                }
                case 1:
                {
					foreach(new i: Vehicle) if(IsAArendCar(i)) SetVehicleToRespawn(i);
                    SCM(playerid, COLOR_VALIK, !"Вы зареспавнили транспорт для аренды.");
                    f(str, sizeof(str), "[A] Администратор %s[%i] заспавнил транспорт!", PN(playerid), playerid);
					SendAdminsMessage(COLOR_GREY, str);
                }
                case 2:
                {
					foreach(new i: OWNABLECARS) SetVehicleToRespawn(OwnableCar[i]);
                    SCM(playerid, COLOR_VALIK, !"Вы зареспавнили транспорт игроков.");
                    f(str, sizeof(str), "[A] Администратор %s[%i] заспавнил транспорт!", PN(playerid), playerid);
					SendAdminsMessage(COLOR_GREY, str);
                }
			}
		}
		case 255:
		{
	        if(response)
	        {
			    AntiDm[listitem][zStatus] = !AntiDm[listitem][zStatus];
				SendAdminsMessagef(COLOR_GOLD, "[ZZ] %s[%i] %s АнтиДм зону '%s'",PN(playerid),playerid,AntiDm[listitem][zStatus] ? ("Включил") : ("Выключил"),AntiDm[listitem][zName]);
	            mysql_pqueryf(mysql, "UPDATE `AntiDM` SET `status`='%i' WHERE `ID` = '%i'", AntiDm[listitem][zStatus], AntiDm[listitem][zID]);
			    ShowAntiDmSettings(playerid);
	        }
	        else callcmd::apanel(playerid);
		}
		case 1649:
		{
			if(!response) return 1;
			if(listitem == 20 || listitem == 21) CheckAdmins(playerid, listitem);
		}
		case 265:
		{
			if(!response) return 1;
            switch(listitem)
            {
				case 0:
				{
				    FirstBL[playerid] = 0;
					MysqlCheckAdmins(playerid);
				}
                case 1: callcmd::cc(playerid);
                case 2:
                {
                	if(PI[playerid][pAdmin] < 5) return 0;
					foreach(new cars : Vehicle) vTemp[cars][Fuel] = 100;
					SCM(playerid, COLOR_GREY, !"Вы заправили все автомобили");
                }
                case 3:
                {
				    foreach(new i: Player) if(PI[i][pRank] > 8 && PI[i][pLevel] <= 3) f(str, sizeof(str), "Ник: %s[%i]\t<%i LVL>\t<Организация: %s\t[RANK %i]>\n ", PN(i), i, PI[i][pLevel], OrgInfo[GetTeamID(i)][oName], PI[i][pRank]);
					SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Принять", !"");
                }
                case 4:
                {
                	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
				    if(IsPlayerInAnyVehicle(playerid)) J_RepairVehicle(GetPlayerVehicleID(playerid));
                }
				case 5:
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SPD(playerid, 266, DIALOG_STYLE_LIST, !"Транспорт", !"Весь транспорт\nДля аренды\nТранспорт игроков", !"Принять", !"Отмена");
				}
				case 6:
                {
					if(PI[playerid][pAdmin] < 3) return 0;
					static Name[MAX_PLAYER_NAME];
					new Cache:result = mysql_query(mysql, "SELECT `Name` FROM `BanNames` ORDER BY `ID` DESC LIMIT 0, 20"), accounts;
					accounts = cache_num_rows();
					if(accounts)
					{
					    FirstBL[playerid] = 0;
					    for(new i; i < accounts; i++)
					    {
						    cache_get_value_name(i, "Name", Name);
					        f(str, sizeof(str), "%s%s\n", str, Name);
					    }
					    if(accounts == 20) f(str, sizeof(str), "%s{AFAFAF}Далее >>>\n", str);
						cache_delete(result);
					    SPD(playerid, 96, DIALOG_STYLE_LIST, !"Забаненые", str, !"Выбор", !"Назад");
					}
					else SCM(playerid, COLOR_GREY, !"Список забаненных пуст");
                }
                case 7:
				{
				    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_GREY, !"Ты еще мал для такого удовольствия!");
					for(new x = 1; x < MAX_ORGS; x++)
					{
						f(str2, sizeof(str2), "{FFFFFF}%s: \t\t{9ACD32}%s\n", OrgInfo[x][oName], OrgInfo[x][oLeader]);
						strcat(str, str2);
					}
					SPD(playerid, 115, DIALOG_STYLE_LIST, !"Снять с лидерства", str, !"Снять", !"Отмена");
					return 1;
				}
				case 8:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::apanel(playerid);
				}
				case 9:
				{
					//if(PI[playerid][pAdmin] < 8) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					f(str, sizeof(str), "Параметр\tСтатус\nEXP(x2)\t%s\nКазино\t%s", GLS[23] ? ("{9ACD32}Включено") : ("{FF6347}Выключено"), GLS[67] ? ("{FF6347}Закрыто") : ("{9ACD32}Открыто"));
	                SPD(playerid, 951, DIALOG_STYLE_TABLIST_HEADERS, !"Информация", str, !"Выбор", !"Отмена");
				}
				case 10:
				{
                    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
                    for(new i; i < OWNABLEHOUSES; i++) if(HouseInfo[i][hMoney] > 1000000) f(str, sizeof(str), "%s\n ID DOMA - [%i] - Денег в доме: %i\n ", str, i, HouseInfo[i][hMoney]);
                    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"дома с бабками", str, !"Принять", !"");
				}
				case 11:
				{
				    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
				    callcmd::apanel(playerid);
				}
				case 12:
				{
					//if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Terakt = !Terakt;
					if(Terakt)
					{
						SendAdminsMessagef(COLOR_GREY, "[A] %s включил мероприятие Теракты БАНК/M/А.",PN(playerid));
						SCMAll(COLOR_RED, !"[Сирена] {FFFFFF}В городе Лос-Сантос начался теракт!Срочно покидайте город!");
					}
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил мероприятие Теракты БАНК/M/А.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 13:
				{
					//if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Meteorit = !Meteorit;
					if(Meteorit)
					{
						SendAdminsMessagef(COLOR_GREY, "[A] %s включил мероприятие Падение метеорита.", PN(playerid));
						SCMAll(COLOR_RED, !"[Сирена]{FFFFFF} В небе появились осколки огромного метеорита и они движутся прямиком на центер города ЛС! Срочно уезжайте с зоны центра!");
					}
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил мероприятие Падение метеорита.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 14:
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					GLS[27] += 10000;
					GLS[28] += 10000;
					FactoryFerum += 10000;
					FactoryMats += 10000;
					FactoryFuel += 10000;
					SPD(playerid, 0, 0, !"", !"Склады фермы, завода, грузчиков успешно пополнены на 10000.", !"Закрыть", !"");
					return true;
				}
				case 15://Пополнение организаций
				{
					if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					return ShowUpdateStock(playerid);
				}
				case 16:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					OtvetHelper = !OtvetHelper;
					if(OtvetHelper) SendAdminsMessagef(COLOR_GREY, "[A] %s включил обязательные ответы ХЕЛПЕРОВ.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил обязательные ответы ХЕЛПЕРОВ.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 17:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					ShowAntiDmSettings(playerid);
					return 1;
				}
				case 18:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::apanel(playerid);
					return 1;
				}
				case 19:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::changeservername(playerid);
				}
				case 20:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					for(new i = 0;i < OWNABLEBIZES;i ++)
					{
						if(!GetString(BizInfo[i][bOwner], "The State")) continue;
						BizInfo[i][bProducts] += 10000;
						UpdateBiz(i);
					}
					SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно пополнили склады для гос. бизнесов.");
					callcmd::apanel(playerid);
				}
				case 21: SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Статистика за сегодня!\n\nСлито с викторины: {ACEE3A}0${FFFFFF}\nСлито с бота казино: {ACEE3A}0{FFFFFF} фишек\nСлито с благотворительности: {ACEE3A}0${FFFFFF}\nСлито с 10 процентов продаж авто по х3: {ACEE3A}0${FFFFFF}\nСлито с банкоматов+проценты на переводы/бизнесы: {ACEE3A}0${FFFFFF}\nСлито с Гурама: {ACEE3A}0${FFFFFF}\nСлито с VIP объявлений: {ACEE3A}0${FFFFFF}\nСлито с Информационного центра: {ACEE3A}0${FFFFFF}\nСлито с Комиссии продажи скинов 5 процентов: {ACEE3A}0${FFFFFF}\nСлито с Комиссии продажи аксессуаров 5 процентов: {ACEE3A}0${FFFFFF}\nСлито с Комиссии продажи бизнесов 5 процентов: {ACEE3A}0${FFFFFF}\nСлито с Комиссии продажи домов 5 процентов: {ACEE3A}0${FFFFFF}\nСлито с Аренды гос. транспорта (такси, автобусы и тд.): {ACEE3A}0${FFFFFF}\nСлито с Аренды транспорта ( Гос. биз. или без биз. ): {ACEE3A}0${FFFFFF}\nСлито с покупок в гос. бизнесах и амуниции: {ACEE3A}0${FFFFFF}\nСлито с покупок интерьеров: {ACEE3A}0${FFFFFF}\nСлито с покупок на базаре ( Аксессуары/скины, что по госу ): {ACEE3A}0${FFFFFF}\nСлито с входа в казино ( VIP и просто вход ): {ACEE3A}0${FFFFFF}\nСлито с Авиашколы/Установки номеров/бара для дома: {ACEE3A}0${FFFFFF}\nСлито с аренды концертного зала: {ACEE3A}0${FFFFFF}\nСлито c входа на мероприятия и аренды отелей: {ACEE3A}0${FFFFFF}\nСлито на создание и улучшение семей: {ACEE3A}0${FFFFFF}\nСлито с радаров: {ACEE3A}0${FFFFFF}\nСлито с Комиссии продажи симок 5 процентов:: {ACEE3A}0${FFFFFF}\nВсякая мелочь: {ACEE3A}0${FFFFFF}\nКазино (покупка/продажа фишек, за счет разницы): {ACEE3A}0${FFFFFF}\nУлучшения гардероба в доме: {ACEE3A}0${FFFFFF}\nРеклама в телефоне/GPS: {ACEE3A}0${FFFFFF}\nКонвертировано в VKoin's: {ACEE3A}0${FFFFFF}\nПокупка аз coins: {ACEE3A}0${FFFFFF}\nПотратили на выход из деморгана: {ACEE3A}0${FFFFFF}\nИтого: {FF8762}0${FFFFFF}", !"ок", !"");
				case 22:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Lotery = !Lotery;
					if(Lotery) SendAdminsMessagef(COLOR_GREY, "[A] %s включил лотерейную.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил лотерейную.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 23:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					callcmd::apanel(playerid);
				}
				case 24:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					Minigun = !Minigun;
					if(Minigun) SendAdminsMessagef(COLOR_GREY, "[A] %s включил анти-чит на миниган.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил анти-чит на миниган.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 25:
				{
					if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SletCars = !SletCars;
					if(SletCars) SendAdminsMessagef(COLOR_GREY, "[A] %s включил слет каров в PayDay.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил слет каров в PayDay.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 26:
				{
					if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					AutoRespawn = !AutoRespawn;
					if(AutoRespawn) SendAdminsMessagef(COLOR_GREY, "[A] %s включил авто респаун транспорта.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил авто респаун транспорта.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 27:
				{
					//if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SystemReport = !SystemReport;
					if(SystemReport) SendAdminsMessagef(COLOR_GREY, "[A] %s включил новую систему репорта.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s включил старую систему репорта.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 28:
				{
					if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					SellVirt = !SellVirt;
					if(SellVirt) SendAdminsMessagef(COLOR_GREY, "[A] %s включил распродажу ВИРТОВ.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил распродажу ВИРТОВ.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 29:
				{
					//if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
					FastAnswer = !FastAnswer;
					if(FastAnswer) SendAdminsMessagef(COLOR_GREY, "[A] %s включил FastAnswer.",PN(playerid));
					else SendAdminsMessagef(COLOR_GREY, "[A] %s выключил FastAnswer.",PN(playerid));
					callcmd::apanel(playerid);
				}
				case 30:
				{
					KillList{playerid} = !KillList{playerid};
					if(KillList{playerid}) SCM(playerid, COLOR_RED, !"Вы успешно включили килл-лист");
					else SCM(playerid, COLOR_RED, !"Вы успешно выключили килл-лист");
					callcmd::apanel(playerid);
				}
				case 31: callcmd::orgmembers(playerid);
				case 32:
				{
					ShowIP{playerid} = !ShowIP{playerid};
					callcmd::apanel(playerid);
				}
				case 33: callcmd::apanel(playerid);
				case 34:
			    {
			        if(PI[playerid][pAdmin] < 8) return SCM(playerid,COLOR_BLUE,"Ваш уровень адм. недостаточен!");
			        SPD(playerid, 8892, DIALOG_STYLE_LIST, !"{FFD700}Амнистия", !"{FFD700}1. {FFFFFF}Массовый разбан.\n{FFD700}2. {FFFFFF}Массовый разварн.\n{FFD700}3. {FFFFFF}Массовый размут.\n{FFD700}4. {FFFFFF}Массовое освобождение с тюрьмы.\n{FFD700}5. {FFFFFF}Массовое освобождение с деморгана.", !"Принять", !"Отмена");
			    }
			}
		}
		case 8892:
		{
		    if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
						new Cache:result = mysql_query(mysql, "SELECT * FROM `BanNames` WHERE `BanSeconds` > 0");
						ac_ShowPlayerDialog(playerid, 8893),ShowPlayerDialogf(playerid,8893,DIALOG_STYLE_MSGBOX,"Разбан","Разбанить","Отмена","{FFFFFF}Вы уверены, что хотите разбанить {FFD700}%i человек.",cache_num_rows());
						cache_delete(result);
	                }
					case 1:
					{
					    new Cache:result = mysql_query(mysql, "SELECT * FROM `Qelksekm` WHERE `Warns` > 0");
						ac_ShowPlayerDialog(playerid, 8894),ShowPlayerDialogf(playerid,8894,DIALOG_STYLE_MSGBOX,"Разварн","Разварнить","Отмена","{FFFFFF}Вы уверены, что хотите разварнить {FFD700}%i человек.",cache_num_rows());
						cache_delete(result);
					}
					case 2:
					{
					    new Cache:result = mysql_query(mysql, "SELECT * FROM `Qelksekm` WHERE `MuteTime` > 0");
						ac_ShowPlayerDialog(playerid, 8895),ShowPlayerDialogf(playerid,8895,DIALOG_STYLE_MSGBOX,"Размут","Размутить","Отмена","{FFFFFF}Вы уверены, что хотите размутить {FFD700}%i человек.",cache_num_rows());
						cache_delete(result);
					}
					case 3:
					{
					    new Cache:result = mysql_query(mysql, "SELECT * FROM `Qelksekm` WHERE `JailTime` > 0");
						ac_ShowPlayerDialog(playerid, 8896),ShowPlayerDialogf(playerid,8896,DIALOG_STYLE_MSGBOX,"Выпуск","Выпустить","Отмена","{FFFFFF}Вы уверены, что хотите выпустить из тюрьмы {FFD700}%i человек.",cache_num_rows());
						cache_delete(result);
					}
					case 4:
					{
					    new Cache:result = mysql_query(mysql, "SELECT * FROM `Qelksekm` WHERE `Demorgan` > 0");
						ac_ShowPlayerDialog(playerid, 8897),ShowPlayerDialogf(playerid,8897,DIALOG_STYLE_MSGBOX,"Выпуск","Выпустить","Отмена","{FFFFFF}Вы уверены, что хотите выпустить из деморгана {FFD700}%i человек.",cache_num_rows());
						cache_delete(result);
					}
	            }
			}
		}
		case 8893:
	    {
	        if(response)
	        {
				mysql_pquery(mysql, "DELETE FROM `BanNames` WHERE `BanSeconds` > '0'");
				SCMAll(COLOR_LIGHTRED, "[Информация] {FFFFFF}Только что на сервере произошёл массовый разбан игроков! Зовите всех друзей!");
	        }
	    }
		case 8894:
	    {
	        if(response)
	        {
         		foreach(new i: Player)
			    {
			        if(PI[i][pWarns] == 0) continue;
			        PI[i][pWarns] = 0;
			        PI[i][pTimeToLastWarn] = 0;
			        UpdatePlayerDataInt(i, "Warns", PI[i][pWarns]);
			        UpdatePlayerDataInt(i, "TimeToLastWarn", PI[i][pTimeToLastWarn]);
				}
				mysql_pquery(mysql, "UPDATE `Qelksekm` SET `Warns` = 0, `TimeToLastWarn` = 0 WHERE `TimeToLastWarn` > 0");
				SCMAll(COLOR_LIGHTRED, "[Информация] {FFFFFF} Только что на сервере произошёл массовый разварн игроков! Зовите всех друзей!");
	        }
	    }
    	case 8895:
	    {
	        if(response)
	        {
	            foreach(new i: Player)
			    {
			        if(PI[i][pMuteTime] == 0) continue;
			        PI[i][pMuteTime] = 0;
			        UpdatePlayerDataInt(i, "MuteTime", PI[i][pMuteTime]);
				}
				mysql_pquery(mysql, "UPDATE `Qelksekm` SET `MuteTime` = 0 WHERE `MuteTime` > 0");
				SCMAll(COLOR_LIGHTRED, "[Информация] {FFFFFF} Только что на сервере произошёл массовый размут игроков! Зовите всех друзей!");
	        }
	    }
    	case 8896:
	    {
	        if(response)
	        {
	            foreach(new i: Player)
			    {
			        if(PI[i][pJailTime] == 0) continue;
			        PI[i][pJailTime] = 0;
			        UpdatePlayerDataInt(i, "JailTime", PI[i][pJailTime]);
					PlayerSpawn(i);
				}
				mysql_pquery(mysql, "UPDATE `Qelksekm` SET `JailTime` = 0 WHERE `JailTime` > 0");
				SCMAll(COLOR_LIGHTRED, "[Информация] {FFFFFF} Только что на сервере произошёл массовый выпуск игроков из тюрьмы! Зовите всех друзей!");
	        }
	    }
	    case 8897:
	    {
	        if(response)
	        {
	            foreach(new i: Player)
			    {
			        if(PI[i][pDemorgan] == 0) continue;
			        PI[i][pDemorgan] = 0;
			        UpdatePlayerDataInt(i, "Demorgan", PI[i][pDemorgan]);
					PlayerSpawn(i);
				}
				mysql_pquery(mysql, "UPDATE `Qelksekm` SET `Demorgan` = 0 WHERE `Demorgan` > 0");
				SCMAll(COLOR_LIGHTRED, "[Информация] {FFFFFF} Только что на сервере произошёл массовый выпуск игроков из деморгана! Зовите всех друзей!");
	        }
	    }
		case 8744:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: FindOrgNumbers(playerid,1);
					case 1: FindOrgNumbers(playerid,2);
					case 2: FindOrgNumbers(playerid,3);
					case 3: FindOrgNumbers(playerid,4);
					case 4: FindOrgNumbers(playerid,5);
					case 5: FindOrgNumbers(playerid,22);
					case 6: FindOrgNumbers(playerid,6);
					case 7: FindOrgNumbers(playerid,7);
					case 8: FindOrgNumbers(playerid,8);
					case 9: FindOrgNumbers(playerid,9);
					case 10: FindOrgNumbers(playerid,10);
					case 11: FindOrgNumbers(playerid,20);
					case 12: FindOrgNumbers(playerid,21);
					case 13: FindOrgNumbers(playerid,23);
					case 14: FindOrgNumbers(playerid,24);
					case 15: FindOrgNumbers(playerid,26);
					case 16: FindOrgNumbers(playerid,27);
					//
					case 17: FindJobNumbers(playerid,5);
					case 18: FindJobNumbers(playerid,4);
					case 19: FindJobNumbers(playerid,11);
					case 20: FindJobNumbers(playerid,16);
					case 21: FindJobNumbers(playerid,6);
					case 22: FindJobNumbers(playerid,8);
		        }
		    }
		}
		case 966:
		{
			if(!response) return 1;
            switch(listitem)
            {
                case 0: Show3UpdateSettings(playerid);
                case 1: SPD(playerid, 997, DIALOG_STYLE_LIST, !"", !"{B03131}[1]{FFFFFF} Установить таймер\n{B03131}[2]{FFFFFF} Остановить таймер", !"Принять", !"Отмена");
                case 2: SPD(playerid, 8744, DIALOG_STYLE_LIST, !"", !"{FFFFFF}<< Полиция ЛС\n<< RCPD\n<< FBI\n<< Полиция SF\n<< Больница LS\n<< Больница LV\n<< Правительство\n<< Армия LV\n<< Больница SF\n<< Лицензеры\n<< Radio LS\n<< Армия LS\n<< Центральный Банк\n<< Полиция LV\n<< Radio LV\n<< Radio SF\n<< Армия SF\n<< Таксисты\n<< Механики\n<< Дальнобойщики\n<< Налоговая служба\n<< Адвокаты\n<< Крупье", !"Выбрать", !"Отмена");
                case 3:
                {
					if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В машине вы не можете использовать селфи!");
				    if(animan{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Перед тем как включить режим селфи, остановите анимации!");
					if(PI[playerid][pHeal] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
				    if(Cuffed{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
				    if(CuffedTime[playerid]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы парализованы!");
				    if(selfi{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваши руки заняты!");
					callcmd::phone(playerid);
				    TextDrawShowForPlayer(playerid, StopAnimation);
				    selfi{playerid} = true;
				    TogglePlayerControllable(playerid, 0);
					PlayerPlaySound(playerid, 17001, 0.0, 0.0, 0.0);
				    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Используйте /headmove, чтобы выровнять голову!");
				    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Нажмите 'F8', для того чтобы сделать фото.");
				    SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Используйте 'Enter' , чтобы выключить камеру.");
				    GetPlayerPos(playerid, selfi1[playerid][0], selfi1[playerid][1], selfi1[playerid][2]);
				    new Float:n1X, Float:n1Y, Float:Selfi1;
				    GetPlayerFacingAngle(playerid, Selfi1);
				    n1X = selfi1[playerid][0] + 1.7 * floatcos(180.0, degrees);
				    n1Y = selfi1[playerid][1] + 1.15 * floatsin(180.0, degrees);
			        SetPlayerAttachedObject(playerid, 0, 18868, 6, 0.06, 0.01, 0.08, 180.0, 90.0, 0.0);
				    SetPlayerCameraPos(playerid, n1X, n1Y, selfi1[playerid][2] + 1.15);
				    SetPlayerCameraLookAt(playerid, selfi1[playerid][0], selfi1[playerid][1], selfi1[playerid][2] + 1);
				    SetPlayerFacingAngle(playerid, selfi2[playerid] - 270.0);
				    ApplyAnimation(playerid, !"PED", !"gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
				    return 1;
                }
                case 4:
                {
                	callcmd::radio(playerid);
                }
                case 5:
                {
					f(str,sizeof(str),"На балансе вашего телефона: {73B461}%i${FFFFFF}.\n\n",PI[playerid][pTelBalance]);
					SPD(playerid,0,0,"",str,"Закрыть","");
					SetPlayerChatBubble(playerid, "Набрал не известный номер.", COLOR_PURPLE, 10.0, 5000);
                }
                case 6:
                {
                    PI[playerid][pTelWork] = !PI[playerid][pTelWork];
                    UpdatePlayerDataInt(playerid, "TelWork", PI[playerid][pTelWork]);
                    ShowPhoneMenu(playerid);
                }
                case 7: callcmd::phone(playerid);
                case 8: ShowSletBiz(playerid);
	            case 9: ShowSletHouse(playerid);
            }
		}
		case 997:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
					{
					    if(PI[playerid][pbydilnik]>0) return SPD(playerid, 0, 0, !"", !"{B03131}У вас не запущен таймер!", !"Принять", !"");
					    SPD(playerid,998,1,"","{73B461}Введите время на которое хотите навести ваш таймер.\n{B03131}Вводите число от 20 до 999 .", !"Принять", !"Отмена");
					}
					case 1:
					{
					    if(PI[playerid][pbydilnik]==0) return SPD(playerid, 0, 0, !"", !"{B03131}У вас не запущен таймер!", !"Принять", !"");
						PI[playerid][pbydilnik]=1;
						SPD(playerid, 0, 0, !"", !"{73B461}Вы отключили таймер.", !"Принять", !"");
					}
			    }
			}
		}
		case 998:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(money < 20 || money>999) return SPD(playerid, 0, 0, !"", !"{B03131}Вы ввели слишком большое число!", !"Принять", !"");
				PI[playerid][pbydilnik]=money;
				TextDrawShowForPlayer(playerid,kryg);
				f(str,sizeof(str),"%i",PI[playerid][pbydilnik]);
			    bydilnik[playerid] = CreatePlayerTextDraw(playerid,133.000000, 414.000000, str);
				PlayerTextDrawFont(playerid,bydilnik[playerid], 2);
				PlayerTextDrawLetterSize(playerid,bydilnik[playerid], 0.270000, 2.000000);
				PlayerTextDrawColor(playerid,bydilnik[playerid], -112);
				PlayerTextDrawSetOutline(playerid,bydilnik[playerid], 1);
				PlayerTextDrawSetProportional(playerid,bydilnik[playerid], 1);
				PlayerTextDrawSetSelectable(playerid,bydilnik[playerid], 0);
				PlayerTextDrawShow(playerid, bydilnik[playerid]);
		    }
		}
        case 119:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(GetMoney(playerid)<money)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        if(money < 1 || (money+PI[playerid][pTelBalance])>5000)
		        {
		            f(str,sizeof(str),"\n\n{FFFFFF}Введите сумму для пополнение на баланс свого телефона\n\n{D01212}Ошибка! Не верная Сумма!");
				    SPD(playerid,119,1,"Пополнить баланс",str,"Оплатить","Отмена");
					return 0;
		        }
		        GiveMoney(playerid,-money);
		        PI[playerid][pTelBalance] +=money;
		        aml(51, playerid, "", "пополнение баланса мобильного", money);
		        SendBankBot(playerid);
		    }
		}

		case 963:
		{
		    if(response)
		    {
		        new id;
		        new money = strval(inputtextsave);
		        sscanf(PI[playerid][pSendName], "u", id);
		        if(!IsPlayerConnected(id)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{B03131}Вы не можете пополнить баланс человека , который оффлайн!", !"Принять", !"");
		        if(PI[playerid][pTelBalance] < money) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{B03131}У вас на балансе телефона недостаточно денег!", !"Принять", !"");
		        if(money < 1 || (money + PI[id][pTelBalance]) > 5000)
		        {
		            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{B03131}Вы не можете пополнить баланс телефона своему контакту на такую сумму, так как на телефоне можно держать до 5000$", !"Принять", !"");
					return 0;
		        }
		        PI[playerid][pTelBalance] -= money;
		        PI[id][pTelBalance] += money;
		        f(str, sizeof(str), "{73B461}Вы успешно пополнили баланс контакта %s на %i$!", PN(id), money);
		        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация", str, !"Принять", !"");
		        f(str, sizeof(str), "%s пополнил баланс вашего мобильного на %i$.", PN(playerid), money);
		        SCM(id, COLOR_VALIK, str);
		    }
		}
		case 951:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
		            {
		                if(GLS[23] > 0)
		                {
		                    f(str,sizeof(str),"Основатель: {FFFFFF}%s выключил х2 ЕХР!",PN(playerid));
		                    SCMAll(COLOR_VALIK,str);
		                    GLS[23] = 0;
		                }
		                else
		                {
		                    f(str,sizeof(str),"Основатель: {FFFFFF}%s включил х2 ЕХР!",PN(playerid));
		                    SCMAll(COLOR_VALIK,str);
		                    GLS[23] = 1;
		                }
		            }
					case 1:
					{
					    GLS[67] = !GLS[67];
	                    SCMf(playerid, COLOR_VALIK, "Вы %s казино!", GLS[67] ? ("выключили") : ("включили"));
					}
		        }
		        SaveInforamtion();
				f(str, sizeof(str), "Параметр\tСтатус\nEXP(x2)\t%s\nКазино\t%s", GLS[23] ? ("{9ACD32}Включено") : ("{FF6347}Выключено"), GLS[67] ? ("{FF6347}Закрыто") : ("{9ACD32}Открыто"));
                SPD(playerid, 951, DIALOG_STYLE_TABLIST_HEADERS, !"Информация", str, !"Выбор", !"Отмена");
		    }
		    else {
		    	callcmd::apanel(playerid);
		    }
		}
		case 779:
		{
		    if(response) SPD(playerid,778,1,"","{B03131}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль на банковскую карту. Будьте внимательны\nпотому что его восстановить будет крайне сложно, и все средства на вашей карте будут утеряны.\n{B03131}Пароль должен состоять из 6 символов!{FFFFFF}\n\nОстальную информацию ищите в /help.","Получить","Отмена");
		}
		case 778:
		{
		    if(response)
		    {
		        new len = strlen(inputtextsave);
		        for(new i;i<len;i++)
		        {
		            switch(inputtextsave[i])
		            {
		                case '0'..'9':{}
		                default: return SPD(playerid,778,1,"","{B03131}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль на банковскую карту. Будьте внимательны\nпотому что его восстановить будет крайне сложно, и все средства на вашей карте будут утеряны.\n{B03131}Пароль должен состоять из 6-10 символов!{FFFFFF}\n\nОстальную информацию ищите в /help.","Получить","Отмена");
		            }
		        }
		        if(IsPlayerInRangeOfPoint(playerid, 1.0, 951.6823,2451.9871,1601.9871 )) {
					if(GetMoney(playerid)<1500)return SendBotMessage(playerid,"Извините, но  у вас недостаточно денег!");
		    	}
		    	else {
		    		if(GetMoney(playerid)<1000)return SendBotMessage(playerid,"Извините, но  у вас недостаточно денег!");
		    	}
		        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 10) return SPD(playerid,778,1,"","{B03131}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль на банковскую карту. Будьте внимательны\nпотому что его восстановить будет крайне сложно, и все средства на вашей карте будут утеряны.\n{B03131}Пароль должен состоять из 6-10 символов!{FFFFFF}\n\nОстальную информацию ищите в /help.","Получить","Отмена");
		        if(PanelPlayerID[playerid]==-1)
		        {
	        		if(IsPlayerInRangeOfPoint(playerid, 1.0, 951.6823,2451.9871,1601.9871 ))
	        		{
		        		GiveMoney(playerid,-1500);
		        		aml(52, playerid, "", "получение банковской карты", 1500);
		        	}
		        	else
		        	{
		        		GiveMoney(playerid, -1000);
		        		aml(52, playerid, "", "получение банковской карты", 1000);
		        	}
		        }
		        else
		        {
		            GiveMoney(playerid,-3000);
		            GiveMoney(PanelPlayerID[playerid],2000);
					aml(50, playerid, PN(PanelPlayerID[playerid]), "получение банковской карты", 2000);
					aml(52, playerid, "", "получение банковской карты < разница", 1000);
		            PanelPlayerID[playerid]=-1;
		        }
		        PI[playerid][pBankPass]=strval(inputtextsave);
		        UpdatePlayerDataInt(playerid, "BankPass", strval(inputtextsave));
		        PI[playerid][pBankCard] = 1;
		        UpdatePlayerDataInt(playerid, "BankCard", 1);
		        PI[playerid][pKlogin]=0;
		        SendBankBot(playerid);

		        if(QuestProgress[playerid][9]==0 && AcceptQuest[playerid][9]!=0)
			    {
			        QuestProgress[playerid][9]=1;
			        NextStapQI(playerid,9);
			    }

		        f(str,sizeof(str),"Вы успешно получили банковскую карту.\nВаш пароль: {73B461}%i{FFFFFF}. Обязательно запишите его или ваш счет будет утерян!",PI[playerid][pBankPass]);
		        SPD(playerid,0,0,"Информация",str, !"Принять", !"");
		    }
		}
		case 991:
		{
		    if(!response)
				return 1;
	        new
				passwd = strval(inputtextsave);
	        if(passwd != PI[playerid][pBankPass])
				return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Информация!", !"{FFFFFF}Вы не правильно ввели PIN-код!\nЕсли вы забыли свой PIN-код вы можете его восстановить у сотрудника банка\n8-го и выше ранга, оплатив его работу.", !"Принять", !"");
	        PI[playerid][pKlogin] = 1;

   			ShowBankMenu(playerid);
		}
		case 958:
		{
		    if(response)
		    {
		        if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
				if(GetPlayerInterior(playerid)!=0 || GetPlayerVirtualWorld(playerid)!=0)return SPD(playerid,0,0,"Информация","В здании нельзя вызвать медиков!", !"Принять", !"");
		        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return SPD(playerid,0,0,"Информация","{B03131}Сообщение должно состоять с 6 до 20 символов!", !"Принять", !"");
			    MedikON{playerid} = true;
		        new Mediks;
		        static trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				f(str,sizeof(str),"{B03131}%s[%i]{FFFFFF} с города %s, вызывает скорую помощь, местоположение: {B03131}%s{FFFFFF}.",PN(playerid),playerid,trr,inputtextsave);
				foreach(new i: Player)
				{
			        if(GetTeamID(i) == TEAM_MEDICLS ||GetTeamID(i) == TEAM_MEDICLV)
			        {
						SCM(i,COLOR_LIGHTBLUE,str);
						SCM(i, COLOR_GREY, !"{73B461}Поступил вызов, чтобы принять введите /gomedik");
						Mediks ++;
			        }
				}
				if(Mediks > 0) SCM(playerid, COLOR_VALIK, !"Все медики получили ваш вызов");
				else SCM(playerid, COLOR_RED, !"В данный момент нет медиков онлайн");
		    }
		}
		case 959:
		{
		    if(response)
		    {
		        if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
                if(GetPlayerInterior(playerid)!=0 || GetPlayerVirtualWorld(playerid)!=0)return SPD(playerid,0,0,"Информация","В здании нельзя вызвать полицию!", !"Принять", !"");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return SPD(playerid,0,0,"Информация","{B03131}Сообщение должно состоять с 6 до 20 символов!", !"Принять", !"");
				PoliseON{playerid} = true;
				new Polismens;
				static trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				f(str,sizeof(str),"{B03131}%s[%i]{FFFFFF} с города %s, вызывает полицию, местоположение: {B03131}%s{FFFFFF}.",PN(playerid),playerid,trr,inputtextsave);
				foreach(new i: Player)
				{
			        if(IsACop(i))
			        {
						SCM(i,-1,str);
						SCM(i, COLOR_GREY, !"{73B461}Поступил вызов, чтобы принять введите /gopolice");
						Polismens ++;
			        }
				}
				if(Polismens > 0)SCM(playerid, COLOR_VALIK, !"Все полицейские получили ваш вызов");
				else SCM(playerid, COLOR_RED, !"В данный момент нет полицейских онлайн");
		    }
		}
		case 960:
		{
		    if(response)
		    {
                if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
                if(GetPlayerInterior(playerid)!=0 || GetPlayerVirtualWorld(playerid)!=0)return SPD(playerid,0,0,"Информация","В здании нельзя вызвать такси!", !"Принять", !"");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return SPD(playerid,0,0,"Информация","{B03131}Сообщение должно состоять с 6 до 20 символов!", !"Принять", !"");
				TaxiON{playerid} = true;
		        new Taxists;
		        static trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				f(str,sizeof(str),"{B03131}%s[%i]{FFFFFF} с города %s, вызывает такси, местоположение: {B03131}%s{FFFFFF}.",PN(playerid),playerid,trr,inputtextsave);
				foreach(new i: Player)
				{
			        if(PI[i][pJob] == JOB_TAXI)
			        {
						SCM(i,COLOR_LIGHTBLUE,str);
						SCM(i, COLOR_GREY, !"{73B461}Поступил вызов, чтобы принять введите /gotaxi");
						Taxists ++;
			        }
				}
				if(Taxists > 0) SCM(playerid, COLOR_VALIK, !"Все таксисты получили ваш вызов");
				else SCM(playerid, COLOR_RED, !"В данный момент нет таксистов онлайн");
		    }
		}
		case 2261:
		{
		    if(response)
		    {
				if(GetMoney(playerid)<75)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно денег чтобы вызвать такси!");
				if(GetPVarInt(playerid,"taxi")>gettime())return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Нельзя так часто вызывать такси!");
				TaxiON{playerid} = true;
		        new Taxists;
		        static trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				f(str,sizeof(str),"{B03131}%s[%i]{FFFFFF} с города %s, вызывает такси, местоположение: {B03131}Будет отмечено на карте{FFFFFF}.",PN(playerid),playerid,trr);
				foreach(new i: Player)
				{
			        if(PI[i][pJob] == JOB_TAXI)
			        {
						SCM(i,COLOR_LIGHTBLUE,str);
						SCM(i, COLOR_GREY, !"{73B461}Поступил вызов, чтобы принять введите /gotaxi");
						Taxists ++;
			        }
				}
				if(Taxists > 0) SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Все таксисты получили ваш вызов");
				else SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}В данный момент нет таксистов онлайн");
				GiveMoney(playerid,-75);
				aml(52, playerid, "", "вызов такси", 75);
				SetPVarInt(playerid,"taxi",gettime()+30);
				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
				SetPlayerChatBubble(playerid, "Вызывает такси", COLOR_PURPLE, 10.0, 5000);
		    }
		}
		case 961:
		{
		    if(response)
		    {
		        if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
                if(GetPlayerInterior(playerid)!=0 || GetPlayerVirtualWorld(playerid)!=0)return SPD(playerid,0,0,"Информация","В здании нельзя вызвать механика!", !"Принять", !"");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return SPD(playerid,0,0,"Информация","{B03131}Сообщение должно состоять с 6 до 20 символов!", !"Принять", !"");
				MehanON{playerid} = true;
			    new Mehans;
			    static trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				f(str,sizeof(str),"{B03131}%s[%i]{FFFFFF} с города %s, вызывает механика, местоположение: {B03131}%s{FFFFFF}.",PN(playerid),playerid,trr,inputtextsave);
				foreach(new i: Player)
				{
			        if(PI[i][pJob] == JOB_MECHANIC)
			        {
						SCM(i,COLOR_LIGHTBLUE,str);
						SCM(i, COLOR_GREY, !"{73B461}Поступил вызов, чтобы принять введите /gomechanic");
						Mehans ++;
			        }
				}
				if(Mehans > 0) SCM(playerid, COLOR_VALIK, !"Все механики получили ваш вызов");
				else SCM(playerid, COLOR_RED, !"В данный момент нет механиков онлайн");
		    }
		}
		case 962:
		{
  			if(response)
		    {
                switch(listitem)
		        {
		            case 0://показываем список сообщений.
		            {
						f(str, sizeof(str), "SELECT * FROM `PhoneMes` WHERE (`Name` = '%s' AND `Namez` = '%s') OR (`Namez` = '%s' AND `Name` = '%s') ORDER BY `time` DESC LIMIT 0, 20", PN(playerid), PI[playerid][pSendName], PN(playerid), PI[playerid][pSendName]);
						mysql_pquery(mysql, str, "ShowPlayerMessage", "d", playerid);
						return 1;
		            }
		            case 1:
					{
						if(PI[playerid][pCalling] != -1) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы уже кому-то звоните", !"Закрыть", !"");
						foreach(new id: Player)
						{
							if(PI[id][pCalling]==playerid && IsPlayerLogged{id})
							{
								return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Вам уже ктото звонит", !"Закрыть", !"");
							}
						}
						if(PI[playerid][pTelBalance] < 15) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}У вас на балансе недостаточно средств для того чтобы вести разговор!\nПополнить баланс телефона можно у любого банкомата штата или\nвы можете выслать *130* своему другу с просьбой перезвонить!", !"Закрыть", !"");
                        f(str, sizeof(str), "SELECT `Group` FROM `PhoneBook` WHERE `Namez` = '%s' AND `Name` = '%s' LIMIT 0, 20", PN(playerid), PI[playerid][pSendName]);
						mysql_pquery(mysql, str, "MysqlCheckCall", "d", playerid);
						return 1;
					}
		            case 2:
					{
					    f(str, sizeof(str), "{B03131}Введите сумму которую хотите пополнить на мобильный счет %s\n{73B461}Обратите внимание, что деньги которые вы хотите перевести ,спишутся с вашего мобильного телефона!", PI[playerid][pSendName]);
					    SPD(playerid, 963, DIALOG_STYLE_INPUT, !"Пополнить баланс", str, !"Принять", !"Отмена");
					}
					case 3:
					{
      					new id;
         				sscanf(PI[playerid][pSendName], "u", id);
         				if(!IsPlayerConnected(id)) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Игрок которому вы хотите выслать *130* ,оффлайн!", !"Закрыть", !"");
         				if(PI[id][pTelWork] != 1) return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Ваш абонент вне зоны действия сети!", !"Закрыть", !"");
						if(PI[playerid][pTelNum] <= 0) return 0;
					    f(str, sizeof(str), "{B03131}*130*{FFFFFF} Перезвони мне пожалуйста. Прислал: {B03131}%s[%i]. |   Номер: %i{FFFFFF}", PN(playerid), playerid, PI[playerid][pTelNum]);
					    SCM(id, COLOR_GREY, str);
					    f(str, sizeof(str), "{73B461}Вы успешно отправили сообщение о просьбе перезвонить игроку: {FFFFFF}%s{73B461} на номер: {FFFFFF}%i", PN(id), PI[id][pTelNum]);
					    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Принять", !"");
					}
					case 4:
					{
						static query[256];
						if(!strcmp("5 Удалить из черного списка", inputtextsave, true))
						{
						    f(query, sizeof(query), "UPDATE `PhoneBook` SET `Group` = '1' WHERE `Name` = '%s' AND `Namez` = '%s'", PN(playerid), PI[playerid][pSendName]);
						}else{
						    f(query, sizeof(query), "UPDATE `PhoneBook` SET `Group` = '0' WHERE `Name` = '%s' AND `Namez` = '%s'", PN(playerid), PI[playerid][pSendName]);
						}
						mysql_pquery(mysql, query, "MysqlChencheGroup", "d", playerid);
					}
					case 5:
					{
					    new id;
					    mysql_pqueryf(mysql, "DELETE FROM `PhoneBook` WHERE `Name` = '%s' AND `Namez` = '%s'", PN(playerid), PI[playerid][pSendName]);
						f(str, sizeof(str), "{73B461}Вы успешно удалили из контактов игрока {FFFFFF}%s", PI[playerid][pSendName]);
						SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Принять", !"");
      					sscanf(PI[playerid][pSendName], "u", id);
						if(IsPlayerConnected(id)) SCMf(id, COLOR_RED, "Игрок {FFFFFF}%s {B03131}удалил вас из контактов на своем телефоне!", PN(playerid));
					}
		        }
		    }
		}
		case 1245:
        {
            if(response)
            {
                new BotCost;
		        if(sscanf(inputtextsave, "d", BotCost)) 
					return false;
		        if(GetPVarInt(playerid, !"vr") > gettime())
	        		return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Звонить в данную службу можно звонить раз в 3 часа!!");
	    		SetPVarInt(playerid, !"vr", gettime() + 1666);
		        if(PI[playerid][pLevel] < 15) 
					return SCM(playerid, COLOR_RED, "[Ошибка]{ffffff} Звонок в данную службу доступен с 15-го уровня");
		        if(BotCost < 1 || BotCost > OWNABLEHOUSES) 
					return SCM(playerid, COLOR_RED, "[Ошибка]{ffffff} Проверьте правильность набора");
                
				str_1[0] = EOS;
				format(str_1, sizeof(str_1), "{FFFFFF}Ответ от службы по вопросами жилой недвижимости\n\nДом: {ffff00}№%d{FFFFFF}\nВладелец: {ffff00}%s",BotCost,HouseInfo[BotCost][hOwner]);
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "Отдел жилой недвижимости", str_1, "Закрыть", "");
			}
        }
		case 952:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SPD(playerid, 953, DIALOG_STYLE_INPUT, !"Добавить контакт", !"Укажите номер телефона контакта!", !"Принять", !"Отмена");
		            case 1: SPD(playerid, 958, DIALOG_STYLE_INPUT, !"Вызвать скорую помощь", !"{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
		            case 2: SPD(playerid, 959, DIALOG_STYLE_INPUT, !"Вызвать полицию", !"{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
		            case 3: SPD(playerid, 960, DIALOG_STYLE_INPUT, !"Вызвать такси", !"{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
		            case 4: SPD(playerid, 961, DIALOG_STYLE_INPUT, !"Вызвать механика", !"{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
		            case 5: SPD(playerid, 1245, DIALOG_STYLE_INPUT, !"Отдел жилой недвижимости","{FFFFFF}Вы позвонили в службу по вопросам жилой недвижимости.\n\nУ нас вы можете узнать кто на данный момент является\nвладельцем выбраной жилой недвижимости,\nдля этого вам необходимо знать номер дома.\n\n{ffff00}Введите номер дома в окошко ниже:\n\n\n{c0c0c0}Обратите внимание:\n- эта информация доступна только гражданам свыше 15-го уровня\n- узнать владельца дома не чаще одного раза в 3 часа","Далее","Закрыть");
					default:
					{
					    new idx, bl;
						f(PI[playerid][pSendName], MAX_PLAYER_NAME, "%s", strtok(inputtextsave,idx));
						if(!strcmp("ЧС", PI[playerid][pSendName], true))
						{
						    bl ++;
							f(PI[playerid][pSendName], MAX_PLAYER_NAME, "%s", strtok(inputtextsave,idx));
						}

						f(str, sizeof(str), "{B03131}[1]{FFFFFF} Открыть переписку\n{B03131}[2]{FFFFFF} Позвонить\n{B03131}[3]{FFFFFF} Пополнить счет\n{B03131}[4]{73B461} *130*((Отправить бомжа))\n\
									{B03131}[5]{FFFFFF} %s\n{B03131}[6]{FFFFFF} Удалить из контактов", (bl) ? ("Удалить из черного списка") : ("Добавить в черный список"));
						SPD(playerid, 962, DIALOG_STYLE_LIST, !"Выбор действия", str, !"Принять", !"Отмена");
					}
		        }
			}
		}
		case 953:
		{
		    if(response)
		    {
		        if(strlen(inputtextsave) < 4) return SPD(playerid, 953, DIALOG_STYLE_INPUT, !"Добавить контакт", !"Укажите номер телефона контакта!", !"Принять", !"Отмена");
		        new id = -1;
		        new number = strval(inputtextsave);
		        foreach(new i: Player)
		        {
					if(number == PI[i][pTelNum])
					{
						id = i;
						break;
					}
		        }
		        if(id == -1) return SPD(playerid, 953, DIALOG_STYLE_INPUT, !"Добавить контакт", !"Укажите номер телефона контакта!", !"Принять", !"Отмена");
				f(str, sizeof(str), "SELECT COUNT(*) FROM `PhoneBook` WHERE `Name` = '%s' AND `Namez` = '%s'", PN(playerid), PN(id));
		        mysql_pquery(mysql, str, "MysqlAddContact", "dd", playerid, id);
		    }
		}
  		case 954:
		{
		    if(response)
		    {
		        static Namez[MAX_PLAYER_NAME], temp[MAX_PLAYER_NAME];
		        new idx;
		        temp = strtok(inputtextsave, idx);
		        Namez = strtok(inputtextsave, idx);
				f(PI[playerid][pSendName], MAX_PLAYER_NAME, "%s", Namez);
				f(str, sizeof(str), "SELECT * FROM `PhoneMes` WHERE (`Name` = '%s' AND `Namez` = '%s') OR (`Namez` = '%s' AND `Name` = '%s') ORDER BY `time` DESC LIMIT 0, 20", PN(playerid), PI[playerid][pSendName], PN(playerid), PI[playerid][pSendName]);
				mysql_pquery(mysql, str, "ShowPlayerMessage", "d", playerid);
				mysql_pqueryf(mysql, "UPDATE `PhoneMes` SET `read` = '0' WHERE `Namez` = '%s' AND `Name` = '%s'", PN(playerid), Namez);
			}
		}
		case 955:
		{
		    if(response)
		    {
		        if(strlen(inputtextsave) > 0)
		        {
		        	if(CheckIsADomen(playerid, inputtextsave)) return 0;
		            if(IsAIP(playerid, inputtextsave))
					{
					    SCM(playerid, COLOR_RED, !"В таких сообщениях запрещается использовать английские символы");
	    				SCM(playerid, -1, !"Не повторяйте это действие во избежание наказания.");
	    				return 0;
					}
					if(strlen(inputtextsave) > 30) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете отправить сообщение длиннее 30 символов!");

					f(str, sizeof(str), "SELECT `Group` FROM `PhoneBook` WHERE `Namez` = '%s' AND `Name` = '%s' LIMIT 0, 20", PN(playerid), PI[playerid][pSendName]);
					mysql_pquery(mysql, str, "MysqlCheckSMS", "ds", playerid, inputtextsave);
					return 1;
				}
				f(str, sizeof(str), "SELECT * FROM `PhoneMes` WHERE (`Name` = '%s' AND `Namez` = '%s') OR (`Namez` = '%s' AND `Name` = '%s') ORDER BY `time` DESC LIMIT 0, 20", PN(playerid), PI[playerid][pSendName], PN(playerid), PI[playerid][pSendName]);
				mysql_pquery(mysql, str, "ShowPlayerMessage", "d", playerid);
				mysql_pqueryf(mysql, "UPDATE `PhoneMes` SET `read` = '0' WHERE `Namez` = '%s' AND `Name` = '%s';", PN(playerid), PI[playerid][pSendName]);
				return 1;
			}
		}
        case SHOWDATA:
		{
		    if(response)
		    {
		        new player = ClickedPlayerID[playerid];
		        switch(listitem)
		        {
		            case 0: callcmd::showpass(playerid, IntToStr(player));
		            case 1: callcmd::showlic(playerid, IntToStr(player));
		            case 2: callcmd::showbadge(playerid, IntToStr(player));
		            case 3: callcmd::showmc(playerid, IntToStr(player));
		            default: return 0;
		        }
		    }
		}
		case SHOWSKILLS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowSkills(playerid, playerid, 0);
              		case 1: ShowStyles(playerid, playerid, 0);
              		case 2: callcmd::ffarm(playerid, "");
		            default: return 0;
		        }
		    }
		}
		case 7651:
		{
		    if(response) NextStapQI(playerid,QuestClick[playerid]);
			else SPD(playerid, SHOWACTION, 2, !"Выберите действие", !"{B03131}[1]{FFFFFF} Моя статистика\n{B03131}[2]{FFFFFF} Меню автомобиля\n{B03131}[3]{FFFFFF} Меню дома\n{B03131}[4]{FFFFFF} Меню бизнеса\n{B03131}[5]{FFFFFF} Меню лидера\n{B03131}[6]{FFFFFF} Улучшения\n{B03131}[7]{FFFFFF} Аксессуары\n{B03131}[8]{FFFFFF} Мои лицензии\n{B03131}[9]{FFFFFF} Мой паспорт\n{B03131}[10]{FFFFFF} Квесты\n{B03131}[11]{FFFFFF} Татурировки\n{B03131}[12]{FFFFFF} Меню семьи\n{B03131}[13]{FFFFFF} Сменить Non-RP Nick", !"Выбор", !"Отмена");
		}
		case 7650:
		{
		    if(response) //QuestSlot
		    {
		        new id = QuestShow[playerid][listitem];
		        if(QuestProgress[playerid][id]==100) return SPD(playerid, 0, 0, !"", !"Этот квест уже выполнен!", !"Принять", !"");
				static quests[300];
                if(QuestProgress[playerid][id]<QI[id][LastProgress]) f(quests,sizeof(quests),"{FFFFFF}Прогресс: %i/%i",QuestProgress[playerid][id],QI[id][LastProgress]);
                else f(quests,sizeof(quests),"{FFFFFF}Прогресс: [Можно завершить]");
          		f(str,sizeof(str),"%s\n\n%s",QI[id][QuestText],quests);
          		SPD(playerid,7651,0,QI[id][QuestName],str,"Найти","Закрыть");
          		QuestClick[playerid]=id;
			}
		}
		case SHOWACTION:
		{
		    if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: ShowStats(playerid, playerid);
	            case 1: callcmd::cars(playerid);
          		case 2: callcmd::house(playerid);
          		case 3: callcmd::bizinfo(playerid);
          		case 4: callcmd::lmenu(playerid, "");
                case 5: Show2UpdateSettings(playerid);
                case 6: ShowLicenses(playerid, playerid);
                case 7:
				{
				    valstr(str, playerid);
					callcmd::showpass(playerid, str);
				}
                case 8: SPD(playerid, 7841, DIALOG_STYLE_LIST, !"", !"- Принятые квесты", !"Принять", !"Назад");
                case 9:
                {
                    f(str, sizeof(str), "\n\n{FFFFFF}Шея: %s\n{FFFFFF}Туловище: %s\n{FFFFFF}Руки: %s\n{FFFFFF}Спина: %s\n\n{E1A52C}Татурировки наносятся членам мафий, а имея одну из них\nваш персонаж становится полностью зависимым от организации в которой находится.\n{FFFFFF}Имея одну из татурировок, которые прямо указывают на прошлое вашего персонажа,\nвы не сможете вступить в гос. организацию.\nЧтобы удалить тату, вам придется длительное время ходить к врачу.\n\n", TATTOOS_NAME[player_tattoos[playerid][0]], TATTOOS_NAME[player_tattoos[playerid][1]], TATTOOS_NAME[player_tattoos[playerid][2]], TATTOOS_NAME[player_tattoos[playerid][2]]);
                    SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str, !"Принять", !"");
                }
                case 10: callcmd::fammenu(playerid);
                case 11:
                {
					if(IsARPPN(PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сменить РП ник!");
					SPD(playerid, 7982, DIALOG_STYLE_INPUT, !"Смена ника", "{FFFFFF}Вы хотите сменить свой {E9F451}Non-RP {FFFFFF}ник\nВведите новый ник в окно\nЗатем нажмите \"{E9F451}Сменить{FFFFFF}\"", !"Сменить", !"Отмена");
                }
			}
		}
		case 7982:
		{
		    if(!response) return 1;
		    if(!IsARPPN(inputtextsave) || strlen(inputtextsave) > 20 || !IsAGameNick(inputtextsave)) return SPD(playerid, 7982, DIALOG_STYLE_INPUT, !"Смена ника", "{FFFFFF}Вы хотите сменить свой {E9F451}Non-RP {FFFFFF}ник\nВведите новый ник в окно\nЗатем нажмите \"{E9F451}Сменить{FFFFFF}\"\n\n{F47F51}Ошибка. Ваш ник не соотвествует правилам сервера!", !"Сменить", !"Отмена");
	        static name[20], query[256];
	        mysql_escape_string(inputtextsave, name);
		    mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", name);
			mysql_pquery(mysql, query, "MysqlRenameRPName", "ds", playerid, name);
		}
		case 7841:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0: callcmd::quest(playerid);
			    default: return 0;
			}
		}
		case 1214:
		{
			if(response)
			{
				switch(listitem) {
					case 0: ShowInviteSettings(playerid);
					case 1: {
						return SPD(playerid,1216,DIALOG_STYLE_INPUT,"PLAYERID","Введите ид игрока которого хотите принять","Далее","Oтмена");
					}
					case 2: {
						return callcmd::members(playerid);
					}
					case 3: {
						if(!IsAtFrakcia(playerid)) return false;
						if(PI[playerid][pRank] < 9 && PI[playerid][pLeader] == 0) return SendClientMessage(playerid,COLOR_RED,"Вы не лидер или 9-ый ранг");
						if(PI[playerid][pMuteTime]>0) return SendClientMessage(playerid, 0xAFAFAFFF, !"[Ошибка] У Вас бан чата!");
						SPD(playerid,2994,1,"","\
						{FFFFFF}Укажите {98BC5E}время{FFFFFF} на которое хотите назначить собеседование!\n\n\
						Напишите {A6BE6E}часы, минуты и местоположение{FFFFFF} через запятую!\n\n\
						Пример:[ {D5C576}17,00,Мэрия{FFFFFF} ]","Принять","Отмена");
					}
					case 4: {
					    if(!IsAtMafia(playerid)&& !IsAtGang(playerid))
						{
							if(PI[playerid][pMember]!=TEAM_LSPD && PI[playerid][pMember]!=TEAM_LVPD && PI[playerid][pMember]!=TEAM_PDLV && PI[playerid][pMember]!=TEAM_FBI && PI[playerid][pMember]!=TEAM_SFPD)return SCM(playerid, COLOR_RED, !"Доступно только для Полиции и FBI!");
							SPD(playerid,1213,1,"Информация","Введите ид игрока которого вы хотите перевести!\n\n{4682B4}Перевод возможен с :{FFFFFF}\n\n-ARMY {FFD700}(4 ранг){FFFFFF} - LSPD/RCPD/LVPD/SFPD\n-LSPD/RCPD/LVPD/SFPD {FFD700}(5 ранг){FFFFFF} - FBI\n", !"Принять", !"Отмена");
						}
						else
						{
						    if(OrgInfo[PI[playerid][pMember]][oOb4ak]>0)
							{
								OrgInfo[PI[playerid][pMember]][oOb4ak]=0;
								f(str,sizeof(str),"[F] %s[%i] Открыл общак!",PN(playerid),playerid);
								SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
								UpdateDorm(PI[playerid][pMember]);
							}
						    else
							{
								OrgInfo[PI[playerid][pMember]][oOb4ak]=1;
								f(str,sizeof(str),"[F] %s[%i] Закрыл общак!",PN(playerid),playerid);
								SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
								UpdateDorm(PI[playerid][pMember]);
							}
						    callcmd::lmenu(playerid,"");
						}
					}
					case 5: {
						if(OrgInfo[GetTeamID(playerid)][oBank] < 25000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На счет вашей организации недостачно денег!");
						if(PI[playerid][pMember] == 11)
					    {
					    	DestroyVehicle(GroveCar[0]);
							DestroyVehicle(GroveCar[1]);
							DestroyVehicle(GroveCar[2]);
							DestroyVehicle(GroveCar[3]);
							DestroyVehicle(GroveCar[4]);
							DestroyVehicle(GroveCar[5]);
							DestroyVehicle(GroveCar[6]);
							GroveCar[0] = CreateTeamVehicle(TEAM_GROOVE,1, 600, 2485.0903, -1680.8488, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
							GroveCar[1] = CreateTeamVehicle(TEAM_GROOVE,1, 600, 2488.3083, -1680.7385, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
							GroveCar[2] = CreateTeamVehicle(TEAM_GROOVE,1, 492, 2506.0962, -1676.6655, 13.2813, -35.0400, 86, 86,RES_CAR_TIME);
							GroveCar[3] = CreateTeamVehicle(TEAM_GROOVE,1, 492, 2508.0857, -1666.6547, 13.2813, 11.1000, 86, 86,RES_CAR_TIME);
							GroveCar[4] = CreateTeamVehicle(TEAM_GROOVE,1, 492, 2501.6204, -1657.3187, 13.2813, 54.4800, 86, 86,RES_CAR_TIME);
							GroveCar[5] = CreateTeamVehicle(TEAM_GROOVE,1, 478, 2498.6013, -1684.0957, 13.2813, 13.5600, 86, 86,RES_CAR_TIME);
							GroveCar[6] = CreateTeamVehicle(TEAM_GROOVE,1, 482, 2505.4092, -1694.1656, 14.2813, 0.0000, 86, 86,RES_CAR_TIME);
					    }
						else if(PI[playerid][pMember] == 12)
						{
					    	DestroyVehicle(VagosCar[0]);
							DestroyVehicle(VagosCar[1]);
							DestroyVehicle(VagosCar[2]);
							DestroyVehicle(VagosCar[3]);
							DestroyVehicle(VagosCar[4]);
							DestroyVehicle(VagosCar[5]);
							DestroyVehicle(VagosCar[6]);
							VagosCar[0] = CreateTeamVehicle(TEAM_VAGOS,1, 467, 2771.5327, -1623.8390, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
							VagosCar[1] = CreateTeamVehicle(TEAM_VAGOS,1, 467, 2776.0544, -1623.9009, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
							VagosCar[2] = CreateTeamVehicle(TEAM_VAGOS,1, 467, 2780.4949, -1623.8438, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
							VagosCar[3] = CreateTeamVehicle(TEAM_VAGOS,1, 474, 2779.6228, -1603.3281, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
							VagosCar[4] = CreateTeamVehicle(TEAM_VAGOS,1, 474, 2785.9009, -1603.1583, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
							VagosCar[5] = CreateTeamVehicle(TEAM_VAGOS,1, 478, 2769.9705, -1615.0035, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);
							VagosCar[6] = CreateTeamVehicle(TEAM_VAGOS,1, 482, 2769.9705, -1606.8324, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);
						}
						else if(PI[playerid][pMember] == 13)
						{
					    	DestroyVehicle(BallasCar[0]);
							DestroyVehicle(BallasCar[1]);
							DestroyVehicle(BallasCar[2]);
							DestroyVehicle(BallasCar[3]);
							DestroyVehicle(BallasCar[4]);
							DestroyVehicle(BallasCar[5]);
							DestroyVehicle(BallasCar[6]);
							DestroyVehicle(BallasCar[7]);
							BallasCar[0] = CreateTeamVehicle(TEAM_BALLAS,1, 566, 2011.8759,-1113.9398,25.9790,183.0003, 179, 179,RES_CAR_TIME);
							BallasCar[1] = CreateTeamVehicle(TEAM_BALLAS,1, 566, 2008.8434, -1129.2593, 25.0132, 90.0000, 179, 179,RES_CAR_TIME);
							BallasCar[2] = CreateTeamVehicle(TEAM_BALLAS,1, 566, 1985.5564, -1141.6482, 25.5184, 270.8255, 179, 179,RES_CAR_TIME);
							BallasCar[3] = CreateTeamVehicle(TEAM_BALLAS,1, 419, 1993.8208, -1141.5947, 25.3474, 270.0000, 179, 179,RES_CAR_TIME);
							BallasCar[4] = CreateTeamVehicle(TEAM_BALLAS,1, 419, 2001.6429, -1141.5061, 25.1574, 270.8112, 179, 179,RES_CAR_TIME);
							BallasCar[5] = CreateTeamVehicle(TEAM_BALLAS,1, 478, 1994.4465, -1095.7386, 24.9574, 344.2161, 179, 179,RES_CAR_TIME);
							BallasCar[6] = CreateTeamVehicle(TEAM_BALLAS,1, 478, 1998.7805, -1096.9128, 24.9574, 346.3077, 179, 179,RES_CAR_TIME);
							BallasCar[7] = CreateTeamVehicle(TEAM_BALLAS,1, 482, 2002.2770, -1097.8044, 24.9574, 345.6925, 179, 179,RES_CAR_TIME);
						}
						else if(PI[playerid][pMember] == 14)
						{
					    	DestroyVehicle(CoronosCar[0]);
							DestroyVehicle(CoronosCar[1]);
							DestroyVehicle(CoronosCar[2]);
							DestroyVehicle(CoronosCar[3]);
							DestroyVehicle(CoronosCar[4]);
							DestroyVehicle(CoronosCar[5]);
							DestroyVehicle(CoronosCar[6]);
							CoronosCar[0] = CreateTeamVehicle(TEAM_CORONOS,1, 567, 2516.9424, -2005.0195, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
							CoronosCar[1] = CreateTeamVehicle(TEAM_CORONOS,1, 567, 2512.8218, -2004.6410, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
							CoronosCar[2] = CreateTeamVehicle(TEAM_CORONOS,1, 567, 2508.7004, -2004.2294, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
							CoronosCar[3] = CreateTeamVehicle(TEAM_CORONOS,1, 535, 2514.5210, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
							CoronosCar[4] = CreateTeamVehicle(TEAM_CORONOS,1, 535, 2506.8916, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
							CoronosCar[5] = CreateTeamVehicle(TEAM_CORONOS,1, 478, 2530.8352, -2007.6204, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);
							CoronosCar[6] = CreateTeamVehicle(TEAM_CORONOS,1, 482, 2530.8257, -2011.7937, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);
						}
						else if(PI[playerid][pMember] == 15)
						{
					    	DestroyVehicle(RifaCar[0]);
							DestroyVehicle(RifaCar[1]);
							DestroyVehicle(RifaCar[2]);
							DestroyVehicle(RifaCar[3]);
							DestroyVehicle(RifaCar[4]);
							DestroyVehicle(RifaCar[5]);
							DestroyVehicle(RifaCar[6]);
							RifaCar[0] = CreateTeamVehicle(TEAM_RIFA,1, 529, 2177.5630, -1808.2943, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
							RifaCar[1] = CreateTeamVehicle(TEAM_RIFA,1, 529, 2173.5139, -1808.3468, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
							RifaCar[2] = CreateTeamVehicle(TEAM_RIFA,1, 529, 2169.4451, -1808.4357, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
							RifaCar[3] = CreateTeamVehicle(TEAM_RIFA,1, 439, 2172.6543, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
							RifaCar[4] = CreateTeamVehicle(TEAM_RIFA,1, 439, 2165.4509, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
							RifaCar[5] = CreateTeamVehicle(TEAM_RIFA,1, 478, 2190.1111, -1796.2930, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);
							RifaCar[6] = CreateTeamVehicle(TEAM_RIFA,1, 482, 2190.1111, -1804.5145, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);
						}
						else if(PI[playerid][pMember] == 25)
						{
	    					DestroyVehicle(CarWolfs[0]);
							DestroyVehicle(CarWolfs[1]);
							DestroyVehicle(CarWolfs[2]);
							DestroyVehicle(CarWolfs[3]);
							DestroyVehicle(CarWolfs[4]);
							DestroyVehicle(CarWolfs[5]);
							DestroyVehicle(CarWolfs[6]);
							DestroyVehicle(CarWolfs[7]);
							DestroyVehicle(CarWolfs[8]);
							DestroyVehicle(CarWolfs[9]);
							DestroyVehicle(CarWolfs[10]);
							DestroyVehicle(CarWolfs[11]);
							CarWolfs[0] = CreateTeamVehicle(TEAM_WOLFS,1, 475, 2461.7173, -1424.3177, 23.5287, 90.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[1] = CreateTeamVehicle(TEAM_WOLFS,1, 475, 2461.7173, -1413.2618, 23.5287, 90.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[2] = CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.4966, -1424.3262, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[3] = CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.6265, -1416.9812, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[4] = CreateTeamVehicle(TEAM_WOLFS,1, 496, 2507.7156, -1409.9048, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[5] = CreateTeamVehicle(TEAM_WOLFS,1, 518, 2518.3918, -1419.1108, 28.1375, 360.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[6] = CreateTeamVehicle(TEAM_WOLFS,1, 518, 2518.4070, -1411.1537, 28.1175, 360.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[7] = CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6436, -1402.2551, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[8] = CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6597, -1400.8583, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[9] = CreateTeamVehicle(TEAM_WOLFS,1, 509, 2502.6648, -1399.6414, 28.0375, 279.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[10] = CreateTeamVehicle(TEAM_WOLFS,1, 478, 2458.3862, -1407.9395, 23.7760, 90.0000, 37, 0,RES_CAR_TIME);
						    CarWolfs[11] = CreateTeamVehicle(TEAM_WOLFS,1, 478, 2458.3862, -1419.0396, 23.7760, 90.0000, 37, 0,RES_CAR_TIME);
						}
	                    else if(PI[playerid][pMember] == 16)
						{
	    					DestroyVehicle(RMCars[0]);
							DestroyVehicle(RMCars[1]);
							DestroyVehicle(RMCars[2]);
							DestroyVehicle(RMCars[3]);
							DestroyVehicle(RMCars[4]);
							DestroyVehicle(RMCars[5]);
							DestroyVehicle(RMCars[6]);
							DestroyVehicle(RMCars[7]);
							DestroyVehicle(RMCars[8]);
							DestroyVehicle(RMCars[9]);
							DestroyVehicle(RMCars[10]);
							DestroyVehicle(RMCars[11]);
	                        DestroyVehicle(RMCars[12]);
							RMCars[0] = CreateTeamVehicle(TEAM_RM,1,579, 984.4582, 1747.0344, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
		                    RMCars[1] = CreateTeamVehicle(TEAM_RM,1,579, 984.4969, 1742.9897, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
		                    RMCars[2] = CreateTeamVehicle(TEAM_RM,1,579, 984.4497, 1738.9713, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
		                    RMCars[3] = CreateTeamVehicle(TEAM_RM,1,409, 950.2493, 1743.6547, 8.2832, 179.4013, 0,0,RES_CAR_TIME);
		                    RMCars[4] = CreateTeamVehicle(TEAM_RM,1,580, 984.4694, 1719.4099, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
		                    RMCars[5] = CreateTeamVehicle(TEAM_RM,1,580, 984.3997, 1723.1316, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
		                    RMCars[6] = CreateTeamVehicle(TEAM_RM,1,580, 984.5228, 1727.1056, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
		                    RMCars[7] = CreateTeamVehicle(TEAM_RM,1,468, 947.9976, 1724.3361, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
		                    RMCars[8] = CreateTeamVehicle(TEAM_RM,1,468, 948.0338, 1725.7334, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
		                    RMCars[9] = CreateTeamVehicle(TEAM_RM,1,468, 947.8561, 1722.8571, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
		                    RMCars[10] = CreateTeamVehicle(TEAM_RM,1,421, 971.9404, 1769.3865, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
		                    RMCars[11] = CreateTeamVehicle(TEAM_RM,1,421, 971.8877, 1778.1040, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
		                    RMCars[12] = CreateTeamVehicle(TEAM_RM,1,421, 971.9247, 1787.2513, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
						}
						else if(PI[playerid][pMember] == 17)
						{
	                        DestroyVehicle(YakuzaCars[0]);
							DestroyVehicle(YakuzaCars[1]);
							DestroyVehicle(YakuzaCars[2]);
							DestroyVehicle(YakuzaCars[3]);
							DestroyVehicle(YakuzaCars[4]);
							DestroyVehicle(YakuzaCars[5]);
							DestroyVehicle(YakuzaCars[6]);
							DestroyVehicle(YakuzaCars[7]);
							DestroyVehicle(YakuzaCars[8]);
							DestroyVehicle(YakuzaCars[9]);
							YakuzaCars[0] = CreateTeamVehicle(TEAM_YAKUZA,1,409, -2446.0315,133.0861,34.7638,272.9593, 0,0,RES_CAR_TIME);
							YakuzaCars[1] = CreateTeamVehicle(TEAM_YAKUZA,1,405, -2442.7847,141.9793,34.8783,269.9984, 0,0,RES_CAR_TIME);
							YakuzaCars[2] = CreateTeamVehicle(TEAM_YAKUZA,1,405, -2434.5728,141.2890,34.8992,269.8872, 0,0,RES_CAR_TIME);
							YakuzaCars[3] = CreateTeamVehicle(TEAM_YAKUZA,1,405, -2452.3250,149.9029,34.9176,0.0004, 0,0,RES_CAR_TIME);
							YakuzaCars[4] = CreateTeamVehicle(TEAM_YAKUZA,1,505, -2462.1074,154.1508,35.0971,0.0017, 0,0,RES_CAR_TIME);
							YakuzaCars[5] = CreateTeamVehicle(TEAM_YAKUZA,1,505, -2461.9407,164.1662,35.1050,0.1147, 0,0,RES_CAR_TIME);
							YakuzaCars[6] = CreateTeamVehicle(TEAM_YAKUZA,1,550, -2452.7681,167.5494,34.8352,359.5991, 0,0,RES_CAR_TIME);
							YakuzaCars[7] = CreateTeamVehicle(TEAM_YAKUZA,1,550, -2452.8779,158.3322,34.8348,359.5431, 0,0,RES_CAR_TIME);
							YakuzaCars[8] = CreateTeamVehicle(TEAM_YAKUZA,1,530, -2465.9961,174.6347,34.8529,229.8133, 0,0,RES_CAR_TIME);
						}
						else if(PI[playerid][pMember] == 18)
						{
	    					DestroyVehicle(LCNCars[0]);
							DestroyVehicle(LCNCars[1]);
							DestroyVehicle(LCNCars[2]);
							DestroyVehicle(LCNCars[3]);
							DestroyVehicle(LCNCars[4]);
							DestroyVehicle(LCNCars[5]);
							DestroyVehicle(LCNCars[6]);
							DestroyVehicle(LCNCars[7]);
							DestroyVehicle(LCNCars[8]);
							DestroyVehicle(LCNCars[9]);
							DestroyVehicle(LCNCars[10]);
							DestroyVehicle(LCNCars[11]);
	                        DestroyVehicle(LCNCars[12]);
	                    	DestroyVehicle(LCNCars[13]);
							DestroyVehicle(LCNCars[14]);
							DestroyVehicle(LCNCars[15]);
							DestroyVehicle(LCNCars[16]);
							DestroyVehicle(LCNCars[17]);
							DestroyVehicle(LCNCars[18]);
							LCNCars[0] = CreateTeamVehicle(TEAM_LCN,1,409, 1472.1443, 2778.5149, 10.2784, 0.7317, 72,0,RES_CAR_TIME);
							//LCNCars[0] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2813.7498, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
							LCNCars[1] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2818.3545, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
							LCNCars[2] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2822.7544, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
							LCNCars[3] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2827.2556, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
							LCNCars[4] = CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2831.7986, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
							LCNCars[5] = CreateTeamVehicle(TEAM_LCN,1,445, 1495.9521, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
							LCNCars[6] = CreateTeamVehicle(TEAM_LCN,1,445, 1500.3752, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
							LCNCars[7] = CreateTeamVehicle(TEAM_LCN,1,445, 1504.7489, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
							LCNCars[8] = CreateTeamVehicle(TEAM_LCN,1,445, 1509.1300, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
							LCNCars[9] = CreateTeamVehicle(TEAM_LCN,1,445, 1513.6281, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
							//LCNCars[10] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2826.1260, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
							LCNCars[10] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2830.3674, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
							LCNCars[11] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2834.5801, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
							LCNCars[12] = CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2838.8606, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
							LCNCars[13] = CreateTeamVehicle(TEAM_LCN,1,468, 1459.1582, 2761.9631, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
							LCNCars[14] = CreateTeamVehicle(TEAM_LCN,1,468, 1459.3872, 2760.5962, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
							LCNCars[15] = CreateTeamVehicle(TEAM_LCN,1,468, 1459.5973, 2759.4551, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	    					LCNCars[16] = CreateTeamVehicle(TEAM_LCN,1,545, 1491.3921, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	    					LCNCars[17] = CreateTeamVehicle(TEAM_LCN,1,545, 1486.9521, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	    					LCNCars[18] = CreateTeamVehicle(TEAM_LCN,1,545, 1482.4321, 2878.7532, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
						}
						OrgInfo[GetTeamID(playerid)][oBank] -= 25000;
		    			SaveOrg(GetTeamID(playerid));
						f(str,sizeof(str),"[F] %s[%i] Заспавнил транспорт организации!",PN(playerid),playerid);
						SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
					}
					case 6: {
	                    if(OrgInfo[GetTeamID(playerid)][oBank] < 35000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На счет вашей организации недостачно денег!");
						if(PI[playerid][pMember] == 11)
					    {
					    	vTemp[GroveCar[0]][Fuel] =
					    	vTemp[GroveCar[1]][Fuel] =
					    	vTemp[GroveCar[2]][Fuel] =
					    	vTemp[GroveCar[3]][Fuel] =
					    	vTemp[GroveCar[4]][Fuel] =
					    	vTemp[GroveCar[5]][Fuel] =
					    	vTemp[GroveCar[6]][Fuel] = 100.0;
					    }
						else if(PI[playerid][pMember] == 12)
						{
							vTemp[VagosCar[0]][Fuel] =
					    	vTemp[VagosCar[1]][Fuel] =
					    	vTemp[VagosCar[2]][Fuel] =
					    	vTemp[VagosCar[3]][Fuel] =
					    	vTemp[VagosCar[4]][Fuel] =
					    	vTemp[VagosCar[5]][Fuel] =
					    	vTemp[VagosCar[6]][Fuel] = 100.0;
						}
						else if(PI[playerid][pMember] == 13)
						{
							vTemp[BallasCar[0]][Fuel] =
					    	vTemp[BallasCar[1]][Fuel] =
					    	vTemp[BallasCar[2]][Fuel] =
					    	vTemp[BallasCar[3]][Fuel] =
					    	vTemp[BallasCar[4]][Fuel] =
					    	vTemp[BallasCar[5]][Fuel] =
					    	vTemp[BallasCar[6]][Fuel] =
					    	vTemp[BallasCar[7]][Fuel] = 100.0;
						}
						else if(PI[playerid][pMember] == 14)
						{
							vTemp[CoronosCar[0]][Fuel] =
					    	vTemp[CoronosCar[1]][Fuel] =
					    	vTemp[CoronosCar[2]][Fuel] =
					    	vTemp[CoronosCar[3]][Fuel] =
					    	vTemp[CoronosCar[4]][Fuel] =
					    	vTemp[CoronosCar[5]][Fuel] =
					    	vTemp[CoronosCar[6]][Fuel] = 100.0;
						}
						else if(PI[playerid][pMember] == 15)
						{
							vTemp[RifaCar[0]][Fuel] =
					    	vTemp[RifaCar[1]][Fuel] =
					    	vTemp[RifaCar[2]][Fuel] =
					    	vTemp[RifaCar[3]][Fuel] =
					    	vTemp[RifaCar[4]][Fuel] =
					    	vTemp[RifaCar[5]][Fuel] =
					    	vTemp[RifaCar[6]][Fuel] = 100.0;
						}
						else if(PI[playerid][pMember] == 25)
						{
							vTemp[CarWolfs[0]][Fuel] =
					    	vTemp[CarWolfs[1]][Fuel] =
					    	vTemp[CarWolfs[2]][Fuel] =
					    	vTemp[CarWolfs[3]][Fuel] =
					    	vTemp[CarWolfs[4]][Fuel] =
					    	vTemp[CarWolfs[5]][Fuel] =
					    	vTemp[CarWolfs[6]][Fuel] =
					    	vTemp[CarWolfs[7]][Fuel] =
					    	vTemp[CarWolfs[8]][Fuel] =
					    	vTemp[CarWolfs[9]][Fuel] =
					    	vTemp[CarWolfs[10]][Fuel] =
					    	vTemp[CarWolfs[11]][Fuel] = 100.0;
						}
	                    else if(PI[playerid][pMember] == 16)
						{
							vTemp[RMCars[0]][Fuel] =
					    	vTemp[RMCars[1]][Fuel] =
					    	vTemp[RMCars[2]][Fuel] =
					    	vTemp[RMCars[3]][Fuel] =
					    	vTemp[RMCars[4]][Fuel] =
					    	vTemp[RMCars[5]][Fuel] =
					    	vTemp[RMCars[6]][Fuel] =
					    	vTemp[RMCars[7]][Fuel] =
					    	vTemp[RMCars[8]][Fuel] =
					    	vTemp[RMCars[9]][Fuel] =
					    	vTemp[RMCars[10]][Fuel] =
					    	vTemp[RMCars[11]][Fuel] =
					    	vTemp[RMCars[12]][Fuel] = 100.0;
						}
	                    else if(PI[playerid][pMember] == 17)
						{
							vTemp[YakuzaCars[0]][Fuel] =
					    	vTemp[YakuzaCars[1]][Fuel] =
					    	vTemp[YakuzaCars[2]][Fuel] =
					    	vTemp[YakuzaCars[3]][Fuel] =
					    	vTemp[YakuzaCars[4]][Fuel] =
					    	vTemp[YakuzaCars[5]][Fuel] =
					    	vTemp[YakuzaCars[6]][Fuel] =
					    	vTemp[YakuzaCars[7]][Fuel] =
					    	vTemp[YakuzaCars[8]][Fuel] =
					    	vTemp[YakuzaCars[9]][Fuel] = 100.0;
						}
	                    else if(PI[playerid][pMember] == 18)
						{
							vTemp[LCNCars[0]][Fuel] =
					    	vTemp[LCNCars[1]][Fuel] =
					    	vTemp[LCNCars[2]][Fuel] =
					    	vTemp[LCNCars[3]][Fuel] =
					    	vTemp[LCNCars[4]][Fuel] =
					    	vTemp[LCNCars[5]][Fuel] =
					    	vTemp[LCNCars[6]][Fuel] =
					    	vTemp[LCNCars[7]][Fuel] =
					    	vTemp[LCNCars[8]][Fuel] =
					    	vTemp[LCNCars[9]][Fuel] =
					    	vTemp[LCNCars[10]][Fuel] =
					    	vTemp[LCNCars[11]][Fuel] =
					    	vTemp[LCNCars[12]][Fuel] =
					    	vTemp[LCNCars[13]][Fuel] =
					    	vTemp[LCNCars[14]][Fuel] =
					    	vTemp[LCNCars[15]][Fuel] =
					    	vTemp[LCNCars[16]][Fuel] =
					    	vTemp[LCNCars[17]][Fuel] =
					    	vTemp[LCNCars[18]][Fuel] = 100.0;
						}
						OrgInfo[GetTeamID(playerid)][oBank] -= 35000;
		    			SaveOrg(GetTeamID(playerid));
						f(str,sizeof(str),"[F] %s[%i] Заказал бензин для транспортов организации!",PN(playerid),playerid);
						SendTeamMessage(PI[playerid][pMember],COLOR_GREY,str);
					}
				}
			}
		}
		case 1216:
		{
			if(response)
			{
				if(PI[playerid][pLeader] > 0 || PI[playerid][pRank] >= 9)
				{
				    new id;
				    if(PI[playerid][pMember]==TEAM_FBI)return SCM(playerid, COLOR_RED, !"В FBI можно попасть только переводом из полиции!");
					if(sscanf(inputtextsave,"u",id)) return SPD(playerid,1216,DIALOG_STYLE_INPUT,"PLAYERID","Введите ид игрока которого хотите принять","Далее","Oтмена");
					if(IsPlayerConnected(id) && IsPlayerLogged{id})
					{
						if(!GetTeamID(id))
						{
							if(ProxDetectorS(5.0, playerid, id))
							{
                                if(IsAtFrakcia(playerid) && PI[id][pBL]!=0)
                                {
	                                SCM(playerid, COLOR_GREY, !"Вы не можете принять этого игрока. Возможные причины:");
									SCM(playerid, COLOR_GREY, !"- Этот игрок находится в чёрном списке закона");
									return 1;
								}
								///
								if(Clother[id]!=-1)return 0;
								if(GetPlayerVirtualWorld(playerid)!=GetPlayerVirtualWorld(id))return 0;
								///
								if(InviteOffer[id] == INVALID_PLAYER_ID)
								{
									static Leader[15];
									if(PI[playerid][pMember]==0 || PI[playerid][pMember] >= MAX_ORGS)return 0;
									if(PI[id][pWarns] > 0) return SCM(playerid, COLOR_RED, !"Игрока с варном нельзя принять в организацию");
									if(IsAtFrakcia(playerid, 1) && PI[id][pZKP] <35)
									{
									    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Законопослушность этого гражданина не позволяет ему вступить в организацию! (Необходимо 35 законопослушности!)");
									    SCM(id, COLOR_RED, !"[Ошибка] {FFFFFF}Вас не смогли принять в организацию, тк. у вас слишком мало законопослушности! (Необходимо 35 законопослушности!)");
									    return 0;
									}
									if(PI[playerid][pLeader] > 0) Leader = "Лидер";
									else Leader = "Зам. лидера";
									InviteOffer[id] = playerid;
									f(str,sizeof(str),"Вы приглашаете %s к себе в организацию",PN(id));
									SCM(playerid,COLOR_LIGHTBLUE,str);
									f(str,sizeof(str),"%s %s приглашает вас к себе в организацию %s",Leader, PN(playerid),OrgInfo[GetTeamID(playerid)][oName]);
									SPD(id,8,0,"Инвайт",str, !"Принять", !"Отмена");
								}
								else
								{
									SCM(playerid, COLOR_GREY, !"Этому игроку уже было выслано приглашение на вступление в организацию");
									return 1;
								}
							}
							else
							{
								SCM(playerid, COLOR_GREY, !"Вы должны находиться рядом с игроком");
								return 1;
							}
						}
						else
						{
							SCM(playerid, COLOR_GREY, !"Этот игрок уже состоит в одной из организаций");
							return 1;
						}
					}
				}
			}
		}
		case 1213:
		{
		    if(response)
			{
                new id = strval(inputtextsave);
                if(!IsPlayerConnected(id) || !IsPlayerLogged{id}) return SCM(playerid, COLOR_RED, !"Неверный ид!");
				if(!ProxDetectorS(5.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
				if(id==playerid)return 0;
				if(!IsAArmy(playerid) && PI[id][pMember] != TEAM_LSPD && PI[id][pMember] != TEAM_LVPD && PI[id][pMember] != TEAM_PDLV && PI[id][pMember] != TEAM_SFPD) return SCM(playerid, COLOR_RED, !"Этот игрок не состоит в нужной организации!");
				if(PI[id][pRank] < 4) return SCM(playerid, COLOR_RED, !"Этот игрок не достиг еще нужного (4-го) ранга!");
				if(PI[id][pRank] >= 9) return SCM(playerid, COLOR_RED, !"Вы не можете к себе перевести заместителя или лидера!");
				if(PI[playerid][pMember]==TEAM_FBI && PI[id][pMember]!=TEAM_LSPD && PI[id][pMember]!=TEAM_LVPD && PI[id][pMember]!=TEAM_PDLV && PI[id][pMember]!=TEAM_SFPD) return SCM(playerid, COLOR_RED, !"В FBI можно перевести только работников полиции!");
				if((PI[playerid][pMember] == TEAM_FBI) && PI[id][pRank] < 5) return SCM(playerid, COLOR_RED, !"В FBI можно перевести только работников полиции с 5-го ранга!");
				PI[id][pMember] = PI[playerid][pMember];
				UpdatePlayerDataInt(id, "Member", PI[playerid][pMember]);
                PI[id][pFWarns] = 0;
                UpdatePlayerDataInt(id, "FWarns", 0);
				PI[id][pRank] = 1;
				UpdatePlayerDataInt(id, "Rank", 1);
				PI[id][pDCTime] = 2;
				UpdatePlayerDataInt(id, "DCTime", 2);
    			SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначена организация. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
				SCM(playerid, COLOR_VALIK, !"Вы успешно перевели игрока к себе в организацию");
				SCMf(id, COLOR_VALIK, "Поздравляем вы были переведены в организацию: %s на должность: %s", OrgInfo[GetTeamID(id)][oName], GetRankName(GetTeamID(id), PI[id][pRank]));
				PlayerSpawn(id);
			}
		}
     	case RABOTABUS+1:
	    {
	        if(response)
	        {
	            if(GetMoney(playerid) < GLS[15]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]") && RemovePlayerFromVehicle(playerid);
	            GiveMoney(playerid,-GLS[15]);
	            aml(52, playerid, "", "аренду автомобиля", GLS[15]);
	            pTemp[playerid][pArendaCar] = GetPlayerVehicleID(playerid);
				switch(PI[playerid][pJob])
				{
				    case 1:
				    {
				        rabden[playerid]=1;
						SCM(playerid,COLOR_ACHAT,"Нажмите клавишу: 2 чтобы начать работу.");
						f(str, sizeof(str), "{E06C1F}Автобус\n{E11717}[Арендован]",vTemp[GetPlayerVehicleID(playerid)][vName],vTemp[GetPlayerVehicleID(playerid)][vCena]);
						UpdateDynamic3DTextLabelText(AutobCarText[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, str);
				    }
					case 3: SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Используйте /jobhelp, если вы не знаете как здесь работать!");
					case 4:
					{
					    if(BenzinCena[pTemp[playerid][pArendaCar]]==0 || BenzinCount[pTemp[playerid][pArendaCar]]==0)
						{
							SCM(playerid,COLOR_ACHAT,"Для начала работы, заключите контракт с ближайшей АЗС.");
							SCM(playerid,COLOR_ACHAT,"Используйте /jobhelp чтобы узнать подробности и описание работы.");
						}
					}
					case 5: SCM(playerid,COLOR_ACHAT,"Нажмите клавишу: 2 чтобы начать работу и установить тариф.");
					case 13:
					{
					    if(GetVehicleModel(pTemp[playerid][pArendaCar]) == 443)
					    {
					        SPD(playerid, 0, 0, !"", !"{AFAFAF}Отправляйтесь по чекпоинту для загрузки металла!", !"Принять", !"");
					        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) EnableGPSForPlayer(playerid,2224.5222,-2461.0154,13.4466);
							else EnableGPSForPlayer(playerid,1124.2776,1962.4742,10.8203);
					    }
					}
					case 14: SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Используйте /jobhelp, если вы не знаете как здесь работать!");
				}
				SCM(playerid,COLOR_ACHAT,"Используйте /jlock чтобы закрыть рабочий транспорт.");
				vTemp[pTemp[playerid][pArendaCar]][vPlayer]= playerid;
				vTemp[pTemp[playerid][pArendaCar]][Fuel] = 100;
			}
			else RemovePlayerFromVehicle(playerid);
	    }
	    case RABOTABUS+2:
	    {
	        new cena;
			if(sscanf(inputtextsave, "d",cena)) return SPD(playerid,RABOTABUS+2,DIALOG_STYLE_INPUT,"Стоимость","Цена за проезд ( от 0$ до 100$ )","Готово","Отмена");
	        if(cena > 100 || cena < 0) {
				SCM(playerid, COLOR_RED, !"Нельзя меньше 1 или больше 100.");
				return SPD(playerid,RABOTABUS+2,DIALOG_STYLE_INPUT,"Стоимость","Цена за проезд ( от 0$ до 100$ )","Готово","Отмена");
			}
	        vTemp[GetPlayerVehicleID(playerid)][vCena] = cena;
	        SPD(playerid,RABOTABUS+3,DIALOG_STYLE_LIST,"Маршрут","Городской ЛС\n{FAC64C}ЖД ЛС -> Jefferson -> Ферма -> Завод\nЖД ЛС -> Завод\nЖД ЛС -> Грузчики -> Лос Сантос\nЖД ЛС -> ЖД ЛВ -> Авиашкола\nЖД ЛВ -> Полиция ЛВ -> Больница\nЖД ЛВ -> Fort Carson -> Army LV -> Карьер LV\nЖД ЛС -> Jefferson -> ЖД СФ -> Автошкола\nЖД ЛВ -> Казино -> Fort Carson -> ЖД СФ\nГородской СФ\nЖД СФ -> Ферма -> RCPD -> Завод","Далее","Отмена");
	    }
		case RABOTABUS+3:
	    {
	        if(response)
	        {
	            rabden[playerid]=0;
	            pPressed[playerid] = 0;
	            new getcar = GetPlayerVehicleID(playerid);
	            if(pTemp[playerid][vReis]!=0) return SCM(playerid, COLOR_YELLOW, "{999999}Вы уже выбрали рейс");
	            if(response)
		    	{
		            switch(listitem)
		            {
		                case 0:
		                {
		                	pTemp[playerid][vReis] = 1;
			                strmid(vTemp[getcar][vName],"Городской ЛС",0,strlen("Городской ЛС"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusCityLS[0][BUSSTATION1],BusCityLS[0][BUS_COORD1][0],BusCityLS[0][BUS_COORD1][1],BusCityLS[0][BUS_COORD1][2],BusCityLS[1][BUS_COORD1][0],BusCityLS[1][BUS_COORD1][1],BusCityLS[1][BUS_COORD1][2],10.0);
		                }
		                case 1:
		                {
		                	pTemp[playerid][vReis] = 2;
			                strmid(vTemp[getcar][vName],"ЖД ЛС -> Jefferson -> Ферма -> Завод",0,strlen("ЖД ЛС -> Jefferson -> Ферма -> Завод"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusFarm[0][BUSSTATION2],BusFarm[0][BUS_COORD2][0],BusFarm[0][BUS_COORD2][1],BusFarm[0][BUS_COORD2][2],BusFarm[1][BUS_COORD2][0],BusFarm[1][BUS_COORD2][1],BusFarm[1][BUS_COORD2][2],10.0);
		                }
		                case 2:
		                {
		                	pTemp[playerid][vReis] = 3;
			                strmid(vTemp[getcar][vName],"ЖД ЛС -> Завод",0,strlen("ЖД ЛС -> Завод"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusZav[0][BUSSTATION3],BusZav[0][BUS_COORD3][0],BusZav[0][BUS_COORD3][1],BusZav[0][BUS_COORD3][2],BusZav[1][BUS_COORD3][0],BusZav[1][BUS_COORD3][1],BusZav[1][BUS_COORD3][2],10.0);
		                }
		                case 3:
		                {
		                	pTemp[playerid][vReis] = 4;
			                strmid(vTemp[getcar][vName],"ЖД ЛС -> Лос Сантос -> Грузчики",0,strlen("ЖД ЛС -> Лос Сантос -> Грузчики"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusAvto[0][BUSSTATION4],BusAvto[0][BUS_COORD4][0],BusAvto[0][BUS_COORD4][1],BusAvto[0][BUS_COORD4][2],BusAvto[1][BUS_COORD4][0],BusAvto[1][BUS_COORD4][1],BusAvto[1][BUS_COORD4][2],10.0);
		                }
		                case 4:
		                {
		                	pTemp[playerid][vReis] = 5;
			                strmid(vTemp[getcar][vName],"ЖД ЛС -> ЖД ЛВ -> Авиашкола",0,strlen("ЖД ЛС -> ЖД ЛВ -> Авиашкола"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusLv[0][BUSSTATION5],BusLv[0][BUS_COORD5][0],BusLv[0][BUS_COORD5][1],BusLv[0][BUS_COORD5][2],BusLv[1][BUS_COORD5][0],BusLv[1][BUS_COORD5][1],BusLv[1][BUS_COORD5][2],10.0);
		                }
		                case 5:
		                {
		                	pTemp[playerid][vReis] = 6;
			                strmid(vTemp[getcar][vName],"ЖД ЛВ -> Полиция ЛВ -> Спортзал -> Больница ЛВ",0,strlen("ЖД ЛВ -> Полиция ЛВ -> Спортзал -> Больница ЛВ"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusLvv[0][BUSSTATION6],BusLvv[0][BUS_COORD6][0],BusLvv[0][BUS_COORD6][1],BusLvv[0][BUS_COORD6][2],BusLvv[1][BUS_COORD6][0],BusLvv[1][BUS_COORD6][1],BusLvv[1][BUS_COORD6][2],10.0);
		                }
		                case 6:
		                {
		                	pTemp[playerid][vReis] = 7;
			                strmid(vTemp[getcar][vName],"ЖД ЛВ -> Fort Carson -> Army LV -> Карьер LV",0,strlen("ЖД ЛВ -> Fort Carson -> Army LV -> Карьер LV"),33);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,BusLvvv[0][BUSSTATION7],BusLvvv[0][BUS_COORD7][0],BusLvvv[0][BUS_COORD7][1],BusLvvv[0][BUS_COORD7][2],BusLvvv[1][BUS_COORD7][0],BusLvvv[1][BUS_COORD7][1],BusLvvv[1][BUS_COORD7][2],10.0);
		                }
		                case 7:
		                {
		                    pTemp[playerid][vReis] = 8;
			                strmid(vTemp[getcar][vName],"ЖД ЛС -> Jefferson -> ЖД СФ -> Автошкола",0,strlen("ЖД ЛС -> Jefferson -> ЖД СФ -> Автошкола"),50);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,bussf[0][BUSSTATION8],bussf[0][BUS_COORD8][0],bussf[0][BUS_COORD8][1],bussf[0][BUS_COORD8][2],bussf[1][BUS_COORD8][0],bussf[1][BUS_COORD8][1],bussf[1][BUS_COORD8][2],10.0);
		                }
		                case 8:
		                {
		                    pTemp[playerid][vReis] = 9;
			                strmid(vTemp[getcar][vName],"ЖД ЛВ -> Казино -> Fort Carson -> ЖД СФ",0,strlen("ЖД ЛВ -> Казино -> Fort Carson -> ЖД СФ"),50);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,buslvsf[0][BUSSTATION9],buslvsf[0][BUS_COORD9][0],buslvsf[0][BUS_COORD9][1],buslvsf[0][BUS_COORD9][2],buslvsf[1][BUS_COORD9][0],buslvsf[1][BUS_COORD9][1],buslvsf[1][BUS_COORD9][2],10.0);
		                }
		                case 9:
		                {
		                    pTemp[playerid][vReis] = 10;
			                strmid(vTemp[getcar][vName],"Городской СФ",0,strlen("Городской СФ"),50);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,bussfsf[0][BUSSTATION10],bussfsf[0][BUS_COORD10][0],bussfsf[0][BUS_COORD10][1],bussfsf[0][BUS_COORD10][2],bussfsf[1][BUS_COORD10][0],bussfsf[1][BUS_COORD10][1],bussfsf[1][BUS_COORD10][2],10.0);
		                }
		                case 10:
		                {
		                    pTemp[playerid][vReis] = 11;
			                strmid(vTemp[getcar][vName],"ЖД СФ -> Ферма -> RCPD -> Завод",0,strlen("ЖД СФ -> Ферма -> RCPD -> Завод"),50);
			                f(str, sizeof(str), "{E06C1F}Автобус\n{E06C1F}Рейс: {73B461}%s\n{E06C1F}Стоимость проезда: {73B461}%i$",vTemp[getcar][vName],vTemp[getcar][vCena]);
							UpdateDynamic3DTextLabelText(AutobCarText[getcar], 0xFFFFFFFF, str);
			                SetPlayerRaceCheckpoint(playerid,bussffa[0][BUSSTATION11],bussffa[0][BUS_COORD11][0],bussffa[0][BUS_COORD11][1],bussffa[0][BUS_COORD11][2],bussffa[1][BUS_COORD11][0],bussffa[1][BUS_COORD11][1],bussffa[1][BUS_COORD11][2],10.0);
		                }
		            }
				}
				f(str,sizeof(str),"Водитель автобуса %s начал маршрут %s. Стоимость проезда: %i$", PN(playerid), vTemp[getcar][vName],vTemp[getcar][vCena]);
				ProxDetector(25,playerid, str,COLOR_PURPLE);
			}
	    }
	    case RABOTABUS+4:
	    {
	        if(response)
	        {
         		if(GetPlayerVehicleID(playerid) == pTemp[playerid][pArendaCar]) return endrabavt(playerid);
	        }
	    }
	    case RABOTABUS+5:
	    {
	        if(response)
	        {
	            if(rabden[playerid] == 1) SPD(playerid,RABOTABUS+2,DIALOG_STYLE_INPUT,"Стоимость","Цена за проезд ( от 0$ до 100$ )","Готово","Отмена");
				else endrabavt(playerid);
	        }
	    }
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(_:clickedid == INVALID_TEXT_DRAW)
    {
    	if(GetPVarInt(playerid, !"SkipSelect"))
    	{
    		SetPVarInt(playerid, !"SkipSelect", 0);
    		return 0;
    	}
        HideTextDraws(playerid);
        ShowLogo(playerid);
        ShowSpeedometr(playerid);
        if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid] != -1) SelectTextDraw(playerid, -16776961);
        else if(ReconMenus[playerid]) HideReconMenu(playerid, ReconMenus[playerid]);
        else if(onkey[playerid] > 0) onkey[playerid]=0;
	    for(new A; A < 5; A++) TextDrawHideForPlayer(playerid, alcodraw[A]);
	  	for(new A; A < 7; A++) TextDrawHideForPlayer(playerid, alcodraw1[A]);
	  	for(new A; A < 5; A++) TextDrawHideForPlayer(playerid, alcodraw2[A]);
	  	if(telephoneon{playerid})
	  	{
	    	if(PI[playerid][pCalling] == -1)
			{
				callcmd::phone(playerid);
	        }
        }
        else if(Gambling[playerid]) SelectTextDraw(playerid, 0xFF9933FF);
        else if(ShowMap[playerid]) TogglePlayerMap(playerid, 0);
        return 1;
    }
	if(clickedid == boomtext[3])
	{
	    for(new i = 0; i < 16; i++) PlayerTextDrawHide(playerid, pboom[playerid][i]);
	    if(BoomUse[playerid] == 27) return ShowMenuBoom(playerid);
	    for(new i = 0; i < 9; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	    Music[playerid] += 8;
	    BoomUse[playerid] ++;
	    if(NumMusic[playerid] !=0) ShowMenuBoom(playerid);
		if(BoomUse[playerid] != 27)
		{
		    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
	    }
		else
		{
		    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
	    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
		}
		f(str_4, sizeof(str_4), "%i_/_27", BoomUse[playerid]);
		PlayerTextDrawSetString(playerid, boomtext_p[playerid][0], str_4);
		for(new i = 0; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
		if(BoomUse[playerid] == 27) for(new i = 1; i < 7; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	}
	if(clickedid == boomtext[2])
	{
	    for(new i = 0; i < 16; i++) PlayerTextDrawHide(playerid, pboom[playerid][i]);
        if(BoomUse[playerid] == 1) return ShowMenuBoom(playerid);
	    Music[playerid] -= 8;
	    BoomUse[playerid] --;
	    for(new i = 0; i < 9; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	    if(NumMusic[playerid] !=0) ShowMenuBoom(playerid);
	    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
		f(str_4, sizeof(str_4), "%i_/_27", BoomUse[playerid]);
		PlayerTextDrawSetString(playerid, boomtext_p[playerid][0], str_4);
		for(new i = 0; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
	}
 	if(clickedid == StallTD[9]) HideStall(playerid);
	if(clickedid == StallTD[8])
	{
	    if(SelectStallItem{playerid} == 1)
	    {
   	 		if(PI[playerid][pLevel] > 1) return SendBotMessage(playerid, "Извините, но эта еда только для игроков 1-го уровня!");
			SetFullness(playerid, 100);
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
			SCM(playerid, COLOR_VALIK, !"Вы немного перекусили. Посмотреть состояние голода можно {FFFFFF}/satiety");
			SendEatBot(playerid);
			HideStall(playerid);
	    }
	    if(SelectStallItem{playerid} == 2)
	    {
   			if(GetMoney(playerid) < 2000) return SendBotMessage(playerid, !"Извините, но у вас недостаточно денег!");
			if(Fullness[playerid] > 75) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не голодны!");
			GiveMoney(playerid, -2000);
			aml(52, playerid, "", "немного перекусил", 2000);
	        GiveFullness(playerid, 25);
			ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
			SCM(playerid, COLOR_VALIK, !"Вы немного перекусили. Посмотреть состояние голода можно {FFFFFF}/satiety");
			SCM(playerid, -1, !"Рекомендуем кушать в закусочных, там намного дешевле!");
			SendEatBot(playerid);
			HideStall(playerid);
		}
	}
	if(clickedid == boomtext[0])
	{
		DestroyDynamic3DTextLabel(b_box3D[playerid]);
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы слишком далеко от устройства!");
		DestroyDynamicObject(bumboxobject[playerid]);
		bumboxobject[playerid] = 0;
		NumMusic[playerid] = 0;
		BoomUse[playerid] = 0;
		Music[playerid] = 0;
		StopAudioStreamForPlayer(playerid);
  		for(new i = 0; i < 10; i++) TextDrawHideForPlayer(playerid, boomtext[i]);
		for(new i = 0; i < 16; i++) DestroyPlayerTD(playerid, pboom[playerid][i]);
		for(new i = 0; i < 9; i++) DestroyPlayerTD(playerid, boomtext_p[playerid][i]);
  		foreach(Player,i)
		{
			if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
		ApplyAnimation(playerid, !"BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][5]][ItemModel]);
		SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы забрали свою игрушку!");
		CancelSelectTextDraw(playerid);
		return 1;
	}
    /*for(new i; i < 88; i++)
    {
        if(clickedid == Donate_Global[i]) SCMf(playerid, -1, "Donate_Global[%i]", i);
    }*/
    if(clickedid == Donate_Global[71]) SPD(playerid, 900, DIALOG_STYLE_INPUT, !"", !"{FF733B}Внимание! {FFFFFF}Вы пытаетесь обменять {FF733B}AZ {FFFFFF}coin's\nна игровую валюту в доларах.\nКурс обмена зависит от\nсостояния экономики сервера и его акций. Курс обмена:\n{ff733B}1 {FFFFFF}az coin = {FF733B}5000${FFFFFF}.\n\nВведите в строчку сколько az coin's\nжелаете обменять!\n\n", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[68])
    {
        if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Покупать EXP можно только с 2-го уровня!");
		SPD(playerid, 8821, DIALOG_STYLE_INPUT, !"", !"{f0d52a}Внимание! {FFFFFF}Вы пытаетесь обменять {f0d52a}AZ {FFFFFF}coin's\nна игровой опыт. Курс обмена:\n{f0d52a}2 {FFFFFF}az coin = {f0d52a}1 EXP{FFFFFF}.\n\nВведите в строчку сколько опыта\nжелаете получить!\n\n", !"Обмен", !"Отмена");
    }
    if(clickedid == Donate_Global[66]) ShowDonateSelect(playerid, 54);//Телефоны
    if(clickedid == Donate_Global[64]) ShowDonateSelect(playerid, 56);//Аксы
    if(clickedid == Donate_Global[62]) SPD(playerid, 9003, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Все доступные лицензии\n{FFFFFF}Стоимость: {6bc02e}300 {FFFFFF}AZ Coins\n\nПосле покупки, ваш персонаж будет владеть\nвсеми {f0d52a}лицензиями{FFFFFF}, доступными в игре.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[14]) SPD(playerid, 8992, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Пятизначный номер для {6bc02e}телефона\n{FFFFFF}Стоимость: {6bc02e}600 {FFFFFF}AZ Coins\n\nДает возможность владеть рандомным 5-ти значным номером\nдля любых номеров\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[85]) SPD(playerid, 8993, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Предмет: {6bc02e}TWIN-TURBO\n{FFFFFF}Стоимость: {6bc02e}1200 {FFFFFF}AZ Coins\n\nПакет улучшений для вашего авто. При использовании,\nнаделяет ваш авто специальной наклейкой и улучшает\nтехнические характеристики двигателья и тормозов.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[81]) SPD(playerid, 8994, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6bc02e}Вечный навык вождения\n{FFFFFF}Стоимость: {6bc02e}400 {FFFFFF}AZ Coins\n\nПосле приобретения ваш навык вождения никогда не будет падать.\nНе имеет срока годности, покупается навсегда.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[79]) SPD(playerid, 8996, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6bc02e}Навыки стрельбы\n{FFFFFF}Стоимость: {6bc02e}400 {FFFFFF}AZ Coins\n\nПосле приобретения все навыки стрельбы будут улучшены\nдо максимального уровня.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[75]) SPD(playerid, 8990, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6BC02E}Дополнительные 6 ячеек{FFFFFF} инвентаря\nСтоимость: {6BC02E}500{FFFFFF} AZ Coins\n\nПосле приобретения количество ячеек в вашем инвентере\nбудет увеличено на 6 пунктов, а так-же появится 3 страница.\nВсего можно увеличить инвентарь на 36 пунктов (6 улучшений)\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[73]) SPD(playerid, 8997, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6bc02e}PREMIUM VIP\n{FFFFFF}Стоимость: {6bc02e}6500 {FFFFFF}AZ Coins\n\n{FF6547}Преимущества PREMIUM статуса{FFFFFF}\n1)Каждый payday вы будете получать 10 AZ Coin's (donat очки)\n2)Возможности всех VIP. \n3)PREMIUM Чат (Для всех владельцев этого VIP)(/vr)\n4)VIP статус не нужно продлевать ( {ffa300}Неограниченный срок действия {FFFFFF})\n5)Самый высокий процент депозита в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)4 очка репутации для семьи каждый payday\n8)Шанс крафта в 2 раза выше\n9)Вы практический не нуждаетесь в еде\n10)Вы бесплатно арендуете любой транспорт\n11)Законопослушность всегда 100\n12)Стоимость рекламы в билборде и в GPS в 2 раза ниже\n13)Возможность выбора точки спавна в любом месте карты\n{FF6547}14) Бесплатный МАВЕРИК комплекации ПРЕМИУМ со специальным\nтюнингом и красивыми наклейками", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[16]) SPD(playerid, 8999, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Улучшение: {6bc02e}Titan VIP\n{FFFFFF}Стоимость: {6bc02e}1500 {FFFFFF}AZ Coins\n\n{FFB252}Преимущества Titan статуса{FFFFFF}\n1)Каждый payday вы будете получать 3 AZ-Монет (donate очки)\n1)Возможности всех VIP.\n2)VIP Чат (Для всех богачей сервера) (/vr)\n3)VIP статус не нужно продлевать( {FFE741}Неограниченный срок действия{FFFFFF} )\n5)Больше процент в банке.\n6)В банке можно хранить больше 40 миллионов.\n7)Вы можете иметь 5 автомобилий/мото и вертолетов\n\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[35]) ShowDonateSelect(playerid, 126);//боксы
    if(clickedid == Donate_Global[39]) ShowDonateSelect(playerid, 4);//серты
    if(clickedid == Donate_Global[41]) ShowDonateSelect(playerid, 0);// debug - rouletts
    if(clickedid == Donate_Global[77]) ShowDonateSelect(playerid, 130);// debug - skins
    if(clickedid == Donate_Global[60]) SPD(playerid, 8991, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Семейная репутация: {6BC02E}1000 очков{FFFFFF}\nСтоимость: {6BC02E}3000{FFFFFF} AZ Coins\n\nНеобходима для покупки улучшений и семейных квартир.\nНажмите {6BC02E}Enter{FFFFFF} чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[37]) SPD(playerid, 9001, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Сменить пол\nСтоимость: {6bc02e}150 {FFFFFF}AZ Coins\n\nПосле приобретения, ваш {f0d52a}пол {FFFFFF}будет изменен.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[33]) SPD(playerid, 8995, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Пополнить навык вождения\n{FFFFFF}Стоимость: {6bc02e}50 {FFFFFF}AZ Coins\n\nПосле приобретения, ваш навык вождения будет\nполностью восстановлен до {f0d52a}100 {FFFFFF}единиц.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[31]) SPD(playerid, 9002, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Сбросить пробег с автомобиля.\n{FFFFFF}Стоимость: {6bc02e}500 {FFFFFF}AZ Coins\n\nНеобходимо находиться в транспорте. После покупки\nпробег вашего автомобиля будет полностью {f0d52a}снят.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[4]) SPD(playerid, 9012, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Сменить {6bc02e}Ник\n{FFFFFF}Стоимость: {6bc02e}20 {FFFFFF}AZ Coins\n\nДает возможность сменить Ник вашего персонажа.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[0]) SPD(playerid, 9011, DIALOG_STYLE_MSGBOX, !"", "{FFFFFF}Снять {6bc02e}варн\n{FFFFFF}Стоимость: {6bc02e}250 {FFFFFF}AZ Coins\n\nПри покупке, снимает 1 варн с вашего персонажа.\nНажмите {6bc02e}Enter {FFFFFF}чтобы приобрести.", !"Обмен", !"Отмена");
    if(clickedid == Donate_Global[12])
    {
    	SPD(playerid, 9502, DIALOG_STYLE_LIST, !"", !"Выйти из ЧС\t{faac58}275 AZ-монет\nМакс. навык фермера\t{faac58}80 AZ-монет\n+1 Законопослушность\t{faac58}3 AZ-монет\nСемейные талоны\t{faac58}5 AZ-монет\t{faac58}150 AZ-монет\n{FFF52B}200 Точильных камней\t{FFFFFF}100 AZ-RUB", !"Выбрать", !"Отмена");
        CancelSelectTextDraw(playerid);
    }

	/*if(clickedid == reconmenu[17]) callcmd::reoff(playerid);
	if(clickedid == reconmenu[2]) ShowStats(playerid, SERIU[playerid]);
	if(clickedid == reconmenu[6])
	{
	    if(ReconMenus[playerid]==1)for(new i=28;i<32;i++)TextDrawHideForPlayer(playerid,reconmenu[i]);
    	if(ReconMenus[playerid]==2)for(new i=20;i<28;i++)TextDrawHideForPlayer(playerid,reconmenu[i]);
	    ReconMenus[playerid]=1;
	    for(new i=28;i<32;i++)TextDrawShowForPlayer(playerid,reconmenu[i]);
	    SelectTextDraw(playerid, 0xFF9933FF);
	    return 1;
	}
	if(clickedid == reconmenu[16])
	{
	    if(ReconMenus[playerid]==1)for(new i=28;i<32;i++)TextDrawHideForPlayer(playerid,reconmenu[i]);
    	if(ReconMenus[playerid]==2)for(new i=20;i<28;i++)TextDrawHideForPlayer(playerid,reconmenu[i]);
    	ReconMenus[playerid]=2;
    	for(new i=20;i<28;i++)TextDrawShowForPlayer(playerid,reconmenu[i]);
    	SelectTextDraw(playerid, 0xFF9933FF);
    	return 1;
	}
	if(clickedid == reconmenu[20])
	{
	    valstr(stm, SERIU[playerid]);
  		callcmd::slap(playerid, stm);
  		return 1;
	}
	if(clickedid == reconmenu[21])
	{
	    Lastspec[playerid] = SERIU[playerid];
		callcmd::reoff(playerid);
		return 1;
	}
	if(clickedid == reconmenu[22]) return callcmd::spplayer(playerid, IntToStr(SERIU[playerid]));
	if(clickedid == reconmenu[23])
	{
	    valstr(stm, SERIU[playerid]);
  		callcmd::plveh(playerid, stm);
  		return 1;
	}
	if(clickedid == reconmenu[10]) return SPD(playerid, 129, 1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,ДМ )\n\nМаксимум 30 символов!","Посадить","Отмена");
	if(clickedid == reconmenu[8])  return SPD(playerid, 124, 1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку причину.\n\nМаксимум 30 символов!", !"Принять", !"Отмена");
	if(clickedid == reconmenu[30]) return SPD(playerid, 126, 1,"Введите причину","{73B461}Внимание!\n\n{FFFFFF}Введите причину бана IP\n\nМаксимум 30 символов!","Ок","Отмена");
	if(clickedid == reconmenu[28]) return SPD(playerid, 125, 1,"","{73B461}Внимание!\n\n{FFFFFF}Введите в строчку время и причину.\nВводить через запятую без пробелов ( 10,Чит )\n\nМаксимум 30 символов!", !"Принять", !"Отмена");
	if(clickedid == reconmenu[4])
	{
	    new Float:Health,Float:Armour,Float: vHealth;
		GetPlayerHealth(SERIU[playerid],Health);
		GetPlayerArmour(SERIU[playerid],Armour);
		if(!IsPlayerInAnyVehicle(SERIU[playerid]))f(str_2,sizeof(str_2),"[Infa] %s[%i]: Health: %f, Armour: %f, Ping: %i, LVL: %i EXP: %i.",PN(SERIU[playerid]),SERIU[playerid],Health,Armour,GetPlayerPing(SERIU[playerid]),PI[SERIU[playerid]][pLevel],PI[SERIU[playerid]][pExp]);
		else
		{
            GetVehicleHealth(GetPlayerVehicleID(SERIU[playerid]),vHealth);
			f(str_2,sizeof(str_2),"[Infa] %s[%i]: Health: %f, {FFFFFF}VEHICLE HEALTH: %f{6053F3}, Armour: %f, Ping: %i, LVL: %i EXP: %i",PN(SERIU[playerid]),SERIU[playerid],Health,vHealth,Armour,GetPlayerPing(SERIU[playerid]),PI[SERIU[playerid]][pLevel],PI[SERIU[playerid]][pExp]);
		}
	    SCM(playerid,COLOR_BLUE,str_2);
	    return 1;
	}*/
	if(clickedid == Bandito[3])
	{
	    if(Gambling[playerid] == 1)
        {
            Bet[playerid] = GetNextValidBet(Bet[playerid]);
            UpdateBetText(playerid);
        }
        return 1;
	}
	if(clickedid == Bandito[2])
	{
	    if(Gambling[playerid] == 1)
        {
			Bet[playerid] = GetNextValidMBet(Bet[playerid]);
		 	UpdateBetText(playerid);
		}
		return 1;
	}
	if(clickedid == Bandito[8])
	{
	    if(Gambling[playerid] == 1) return ExitPlayerFromSlotMachine(playerid);
	}
	if(clickedid == Bandito[6])
	{
	    if(Gambling[playerid] == 1)
        {
            new money = PI[playerid][pMoney];
            if(Bet[playerid] > money + Balance[playerid]) return GameTextForPlayer(playerid, "~r~You don't have enough money!",5000,4);
            if(Balance[playerid] - Bet[playerid] < 0) return GameTextForPlayer(playerid, "~r~Your balance is too low!",5000,4);
            SeccureAnimation(playerid, "CASINO", "Slot_Plyr");
            SlotCounter[playerid] = 30+random(18);
        	SlotTimer[playerid] = SetTimerEx("Gambler",100,1,"d",playerid);
        	Gambling[playerid] = 2;
            Balance[playerid]-=Bet[playerid];
            static prefix[4];
            if(Balance[playerid] == 0) strcat(prefix,"~y~");
            if(Balance[playerid]  > 0) strcat(prefix,"~g~");
            if(Balance[playerid]  < 0) strcat(prefix,"~r~");
			UpdateBetText(playerid);
        }
        return 1;
	}
	if(clickedid == telephonexiaomi[19] || clickedid == telephoneiphone[25] || clickedid == telephoneSamsung[33])
	{
	 	f(str_2, sizeof(str_2), "SELECT `PhoneBook`.`Namez`,`PhoneBook`.`Num`,`Qelksekm`.`TelNum`,`Qelksekm`.`Online_status`,`PhoneBook`.`Group` FROM `PhoneBook`,`Qelksekm` WHERE `PhoneBook`.`Name` = '%s' AND `Qelksekm`.`NickName`=`PhoneBook`.`Namez` ORDER BY `PhoneBook`.`Group` DESC", PN(playerid));
		mysql_pquery(mysql, str_2, "MysqlShowContacts", "d", playerid);
		return 1;
    }
    if(clickedid == telephonexiaomi[17] || clickedid == telephoneiphone[23] || clickedid == telephoneSamsung[22])
	{
		f(str_2,sizeof(str_2),"SELECT t.`Name`, t.`Namez`, t.`Text`, t.`read`, t.`time` FROM `PhoneMes` AS t JOIN (SELECT `Name`, `Text`, max(`time`) as `mtime` FROM `PhoneMes` WHERE `Namez`='%s' GROUP BY `Name`) as t1 ON t.`Name`= t1.`Name` AND t.`time` = t1.`mtime` ORDER BY t.`time` DESC;",PN(playerid));
		mysql_pquery(mysql, str_2, "ShowPlayerMessages", "d", playerid);
		return 1;
	}

	if(Phonestat{playerid}) {
		for(new i = 1; i < 11; i++)
		{
		    if(clickedid == PnumberXiaomi[i] || clickedid == PnumberSamsung[i])
		    {
		        if(i < 10) {
			        f(Pstroka[playerid], 8, "%s%i", Pstroka[playerid], i);
		        }
		        else {
		            f(Pstroka[playerid], 8, "%s%i", Pstroka[playerid], 0);
		        }
	            PlayerTextDrawSetString(playerid, Ppnumber[playerid], Pstroka[playerid]);
		    }
		}
	}
	if(clickedid == PnumberXiaomi[11] || clickedid == PnumberSamsung[11])
	{
	    if(!PI[playerid][pTelNum])
			return 0;

		if(!PI[playerid][pTelWork])
		    return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Телефон находится в режиме \"В самолете\"", !"x", !"");
	    if(strlen(Pstroka[playerid]) == 7)
	    {
			new number = strval(Pstroka[playerid]);
	        foreach(new id: Player)
	        {
				if(PI[id][pTelNum] == number)
				{
					if(PI[playerid][pTelBalance] < 15)
						return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"У вас недостаточно средств для совершения звонка", !"x", !"");

                    if(PI[id][pCalling] != -1)
						return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"Абонент уже разговаривает по телефону", !"x", !"");

					if(PI[id][pTelWork] != 1)
						return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{B03131}Ваш абонент вне зоны действия сети!\n{FFFFFF}Вы можете оставить ему сообщение, как только он появится в сети он его сможет прочитать.", !"Закрыть", !"");

					PI[playerid][pCalling] = id;
					PI[id][pCalling] = playerid;
					f(str_2, sizeof(str_2), "UPDATE `PhoneBook` SET `num`='0' WHERE `Name`='%s' AND `Namez`='%s'", PN(playerid), PN(PI[playerid][pCalling]));
	        		mysql_query(mysql, str_2);
					SetPlayerChatBubble(id, !"Звонит телефон", COLOR_PURPLE, 10.0, 10000);
					GameTextForPlayer(id, !"Press: y", 0, 1);
					PlayerPlaySound(id, 20600, 0.0, 0.0, 0.0);
					for(new i; i < 15; i++) TextDrawShowForPlayer(playerid, Calling[i]);
					TextDrawHideForPlayer(playerid, Calling[5]);
					TextDrawHideForPlayer(playerid, Calling[4]);
					TextDrawHideForPlayer(playerid, Calling[3]);
					TextDrawHideForPlayer(playerid, Calling[2]);
					f(str_2, sizeof(str_2), "~l~%s~n~~r~Outcoming", PN(id));
					callname[playerid] = CreatePlayerTextDraw(playerid, 88.399620, 243.825302, str_2);
					PlayerTextDrawLetterSize(playerid, callname[playerid], 0.185864, 0.915255);
					PlayerTextDrawTextSize(playerid, callname[playerid], 1280.000000, 1280.000000);
					PlayerTextDrawAlignment(playerid, callname[playerid], 2);
					PlayerTextDrawColor(playerid, callname[playerid], 0xFFFFFFFF);
					PlayerTextDrawUseBox(playerid, callname[playerid], 0);
					PlayerTextDrawBoxColor(playerid, callname[playerid], 0x80808080);
					PlayerTextDrawSetShadow(playerid, callname[playerid], 0);
					PlayerTextDrawSetOutline(playerid, callname[playerid], 0);
					PlayerTextDrawBackgroundColor(playerid, callname[playerid], 0x00000046);
					PlayerTextDrawFont(playerid, callname[playerid], 1);
					PlayerTextDrawSetProportional(playerid, callname[playerid], 1);
					PlayerTextDrawSetSelectable(playerid, callname[playerid], 0);
					PlayerTextDrawShow(playerid, callname[playerid]);
					pSvon{playerid} = true;
					f(str_2, sizeof(str_2), "~l~%s~n~~g~Incoming", PN(playerid));
					callname[id] = CreatePlayerTextDraw(id, 88.399620, 243.825302, str_2);
					PlayerTextDrawLetterSize(id, callname[id], 0.185864, 0.915255);
					PlayerTextDrawTextSize(id, callname[id], 1280.000000, 1280.000000);
					PlayerTextDrawAlignment(id, callname[id], 2);
					PlayerTextDrawColor(id, callname[id], 0xFFFFFFFF);
					PlayerTextDrawUseBox(id, callname[id], 0);
					PlayerTextDrawBoxColor(id, callname[id], 0x80808080);
					PlayerTextDrawSetShadow(id, callname[id], 0);
					PlayerTextDrawSetOutline(id, callname[id], 0);
					PlayerTextDrawBackgroundColor(id, callname[id], 0x00000046);
					PlayerTextDrawFont(id, callname[id], 1);
					PlayerTextDrawSetProportional(id, callname[id], 1);
					PlayerTextDrawSetSelectable(id, callname[id], 0);
					PlayerTextDrawShow(id, callname[id]);
					pSvon{id} = false;
					if(GetPVarInt(id, !"telephone") == 1)
					{
						for(new i; i < 58; i++)
						{
							TextDrawShowForPlayer(id, telephonexiaomi[i]);
							if(i < 15) TextDrawShowForPlayer(id, Calling[i]);
						}
					}
					else if(GetPVarInt(id, !"telephone") == 2)
					{
						for(new i; i < 67; i++)
						{
						    TextDrawShowForPlayer(id, telephoneiphone[i]);
							if(i < 15) TextDrawShowForPlayer(id, Calling[i]);
						}
					}
					else if(GetPVarInt(id, !"telephone") == 3)
					{
					    for(new i; i < 72; i++)
					    {
					        TextDrawShowForPlayer(id, telephoneSamsung[i]);
							if(i < 15) TextDrawShowForPlayer(id, Calling[i]);
					    }
					}
					if(Phonestat{playerid})
			        {
			            Phonestat{playerid} = false;
			            if(GetPVarInt(playerid, !"telephone") == 1 || GetPVarInt(playerid, !"telephone") == 2) for(new i; i < 32; i++) TextDrawHideForPlayer(playerid,PnumberXiaomi[i]);
			            if(GetPVarInt(playerid, !"telephone") == 3) for(new i; i < 34; i++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
			            DestroyPlayerTD(playerid, Ppnumber[playerid]);
			        }
					else if(Phonestat{id})
			        {
			            Phonestat{id} = false;
			            if(GetPVarInt(id, !"telephone") == 1 || GetPVarInt(id, !"telephone") == 2) for(new i; i < 32; i++) TextDrawHideForPlayer(id,PnumberXiaomi[i]);
			            if(GetPVarInt(playerid, !"telephone") == 3) for(new i; i < 34; i++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
			            DestroyPlayerTD(id, Ppnumber[id]);
			        }
			        if(GetPVarInt(playerid, !"telephone") == 1)
			        {
						for(new i = 2; i < 25; i++) TextDrawHideForPlayer(playerid, telephonexiaomi[i]);
						TextDrawHideForPlayer(playerid, telephonexiaomi[57]);
						TextDrawHideForPlayer(playerid, telephonexiaomi[56]);
					}
					if(GetPVarInt(id, !"telephone") == 1)
					{
						for(new i = 2; i < 25; i++) TextDrawHideForPlayer(id, telephonexiaomi[i]);
						TextDrawHideForPlayer(id, telephonexiaomi[57]);
						TextDrawHideForPlayer(id, telephonexiaomi[56]);
					}
				    if(GetPVarInt(playerid, !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawHideForPlayer(playerid, telephoneiphone[i]);
				    if(GetPVarInt(id, !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawHideForPlayer(id, telephoneiphone[i]);
					if(GetPVarInt(playerid, !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawHideForPlayer(playerid, telephoneSamsung[i]);
					if(GetPVarInt(id, !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawHideForPlayer(id, telephoneSamsung[i]);
					if(!telephoneon{id})
					{
					    if(GetPVarInt(id, !"telephone") == 1)
					    {
							f(str_2, sizeof(str_2), "%s достал(а) белый Xiaomi Mi 8 из кармана", cPN(id));
							ProxDetector(25, id, str_2, COLOR_ME);
							SelectTextDraw(id, -16776961);
							if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(id, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
						}
						else if(GetPVarInt(id, !"telephone") == 2)
						{
							f(str_2, sizeof(str_2), "%s достал(а) серебряный iPhone X из кармана", cPN(id));
							ProxDetector(25, id, str_2, COLOR_ME);
							SelectTextDraw(id, -16776961);
							if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(id, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
						}
						else if(GetPVarInt(id, !"telephone") == 3)
						{
							f(str_2, sizeof(str_2), "%s достал(а) белый Samsung Galaxy S10 из кармана", cPN(id));
							ProxDetector(25, id, str_2, COLOR_ME);
							SelectTextDraw(id, -16776961);
							if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(id, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
						}
					}
				}
	        }
	    }
	    if(!strcmp(Pstroka[playerid],"111",true) && !isnull(Pstroka[playerid]))
	    {
			f(str_2,sizeof(str_2),"На балансе вашего телефона: {73B461}%i${FFFFFF}.\n\n",PI[playerid][pTelBalance]);
			SPD(playerid,0,0, !"", str_2,"Закрыть","");
			SetPlayerChatBubble(playerid, "Набрал не известный номер.", COLOR_PURPLE, 10.0, 5000);
	    }
	    if(!strcmp(Pstroka[playerid],"060",true) && !isnull(Pstroka[playerid]))
	    {
			new hour,minuite,second;
			gettime(hour,minuite,second);
			new year, month,day;
			getdate(year, month, day);
			f(str_2,sizeof(str_2),"{FFFFFF}Здравствуйте!\nВы позвонили в службу точного времени\nСегодняшняя дата: \t{2EA42E}%i:%i:%i{FFFFFF}\nТекущее время: \t{345690}%i:%i:%i{FFFFFF}\n\n\n",day,month,year,hour,minuite,second);
			SPD(playerid,0,0, !"", str_2,"Закрыть","");
			SetPlayerChatBubble(playerid, "Позвонил в службу точного времени", COLOR_PURPLE, 10.0, 5000);
	    }
	    if(!strcmp(Pstroka[playerid],"911",true) && !isnull(Pstroka[playerid])) SPD(playerid,959,1,"Вызвать полицию","{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
	    if(!strcmp(Pstroka[playerid],"912",true) && !isnull(Pstroka[playerid])) SPD(playerid,958,1,"Вызвать скорую помощь","{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
	    if(!strcmp(Pstroka[playerid],"913",true) && !isnull(Pstroka[playerid])) SPD(playerid,960,1,"Вызвать такси","{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
        if(!strcmp(Pstroka[playerid],"914",true) && !isnull(Pstroka[playerid])) SPD(playerid,961,1,"Вызвать механика","{73B461}Опишите место где вы находитесь\n{B03131}Сообщение должно состоять из 6 до 20 символов!", !"Принять", !"Отмена");
		#if !defined isnull
		    #define isnull(%1) ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
		#endif
        return 1;
	}
	if(clickedid == telephonexiaomi[21] || clickedid == telephoneiphone[27] || clickedid == telephoneSamsung[32])
	{
	    Phonestat{playerid} = true;
	    f(Pstroka[playerid], 8, "");
		Ppnumber[playerid] = CreatePlayerTextDraw(playerid, 88.366341, 194.110031, "_");
		PlayerTextDrawLetterSize(playerid, Ppnumber[playerid], 0.192331, 1.583407);
		PlayerTextDrawTextSize(playerid, Ppnumber[playerid], 1280.000000, 1280.000000);
		PlayerTextDrawAlignment(playerid, Ppnumber[playerid], 2);
		PlayerTextDrawColor(playerid, Ppnumber[playerid], 0x282828FF);
		PlayerTextDrawUseBox(playerid, Ppnumber[playerid], 0);
		PlayerTextDrawBoxColor(playerid, Ppnumber[playerid], 0x80808080);
		PlayerTextDrawSetShadow(playerid, Ppnumber[playerid], 0);
		PlayerTextDrawSetOutline(playerid, Ppnumber[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, Ppnumber[playerid], 0x000000FF);
		PlayerTextDrawFont(playerid, Ppnumber[playerid], 2);
		PlayerTextDrawSetProportional(playerid, Ppnumber[playerid], 1);
		PlayerTextDrawSetSelectable(playerid, Ppnumber[playerid], 0);
	    if(GetPVarInt(playerid, !"telephone") == 1)
	    {
		    for(new i; i < 32; i++) TextDrawShowForPlayer(playerid, PnumberXiaomi[i]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[7]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[3]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[23]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[17]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[19]);
			TextDrawHideForPlayer(playerid, telephonexiaomi[21]);
		}
	    else if(GetPVarInt(playerid, !"telephone") == 2)
	    {
		    for(new i; i < 32; i++) TextDrawShowForPlayer(playerid, PnumberXiaomi[i]);
 			TextDrawHideForPlayer(playerid, telephoneiphone[25]);
			TextDrawHideForPlayer(playerid, telephoneiphone[23]);
			TextDrawHideForPlayer(playerid, telephoneiphone[16]);
			TextDrawHideForPlayer(playerid, telephoneiphone[27]);
			TextDrawHideForPlayer(playerid, telephoneiphone[3]);
			TextDrawHideForPlayer(playerid, telephoneiphone[7]);
			TextDrawHideForPlayer(playerid, telephoneiphone[1]);
		}
	    else if(GetPVarInt(playerid, !"telephone") == 3)
	    {
		    for(new i; i < 34; i++) TextDrawShowForPlayer(playerid, PnumberSamsung[i]);
 			TextDrawHideForPlayer(playerid, telephoneSamsung[4]);
			TextDrawHideForPlayer(playerid, telephoneSamsung[33]);
			TextDrawHideForPlayer(playerid, telephoneSamsung[22]);
			TextDrawHideForPlayer(playerid, telephoneSamsung[21]);
			TextDrawHideForPlayer(playerid, telephoneSamsung[32]);
			DestroyPlayerTD(playerid, Ppnumber[playerid]);
			Ppnumber[playerid] = CreatePlayerTextDraw(playerid, 89.566322, 198.910324, "_");
			PlayerTextDrawLetterSize(playerid, Ppnumber[playerid], 0.192331, 1.583407);
			PlayerTextDrawTextSize(playerid, Ppnumber[playerid], 1280.000000, 1280.000000);
			PlayerTextDrawAlignment(playerid, Ppnumber[playerid], 2);
			PlayerTextDrawColor(playerid, Ppnumber[playerid], 0xFFFFFFFF);
			PlayerTextDrawUseBox(playerid, Ppnumber[playerid], 0);
			PlayerTextDrawBoxColor(playerid, Ppnumber[playerid], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Ppnumber[playerid], 0);
			PlayerTextDrawSetOutline(playerid, Ppnumber[playerid], 0);
			PlayerTextDrawBackgroundColor(playerid, Ppnumber[playerid], 0x000000FF);
			PlayerTextDrawFont(playerid, Ppnumber[playerid], 2);
			PlayerTextDrawSetProportional(playerid, Ppnumber[playerid], 1);
			PlayerTextDrawSetSelectable(playerid, Ppnumber[playerid], 0);
		}
		PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		SCM(playerid, COLOR_LIGHTBLUE, !"[Подсказка] {FFFFFF}Номера телефонов государственных служб:");
		SCM(playerid, -1, !"{FFFFFF}1.{6495ED} 111 - {FFFFFF}Проверить баланс телефона");
		SCM(playerid, -1, !"{FFFFFF}2.{6495ED} 060 - {FFFFFF}Служба точного времени");
		SCM(playerid, -1, !"{FFFFFF}3.{6495ED} 911 - {FFFFFF}Полицейский участок");
		SCM(playerid, -1, !"{FFFFFF}4.{6495ED} 912 - {FFFFFF}Скорая помощь");
		SCM(playerid, -1, !"{FFFFFF}5.{6495ED} 913 - {FFFFFF}Такси");
		SCM(playerid, -1, !"{FFFFFF}6.{6495ED} 914 - {FFFFFF}Механик");
		return 1;
	}
	if(clickedid == Calling[9])
	{
		if(PI[playerid][pCalling] != -1)
		{
			if(PI[playerid][pONPhoneTalk] > 0)
			{
			    if(PI[playerid][pONPhoneTalk]) SCMf(playerid, COLOR_GREY, "[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%i секунд.", PI[playerid][pONPhoneTalk]);
				else SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы отменили звонок");
                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
                if(PI[PI[playerid][pCalling]][pCalling]) SCMf(PI[playerid][pCalling], COLOR_GREY, "[Информация] {FFFFFF}Звонок окончен! Время разговора {73B461}%i секунд.", PI[PI[playerid][pCalling]][pONPhoneTalk]);
				SetPlayerSpecialAction(PI[playerid][pCalling],SPECIAL_ACTION_STOPUSECELLPHONE);
			}
			if(!PI[PI[playerid][pCalling]][pONPhoneTalk]) mysql_pqueryf(mysql, "UPDATE `PhoneBook` SET `num`=`num`+1 WHERE `Namez`='%s' AND `Name`='%s'", PN(playerid), PN(PI[playerid][pCalling]));
			DestroyPlayerTD(PI[playerid][pCalling], callname[PI[playerid][pCalling]]);
			DestroyPlayerTD(playerid, callname[playerid]);
			PI[PI[playerid][pCalling]][pONPhoneTalk] = 0;
			PI[playerid][pONPhoneTalk] = 0;
			if(GetPVarInt(playerid, !"telephone") == 1)
			{
				for(new i = 2; i < 25; i++) TextDrawShowForPlayer(playerid, telephonexiaomi[i]);
				TextDrawShowForPlayer(playerid, telephonexiaomi[57]);
				TextDrawShowForPlayer(playerid, telephonexiaomi[56]);
			}
			if(GetPVarInt(PI[playerid][pCalling], !"telephone") == 1)
			{
				for(new i = 2; i < 25; i++) TextDrawShowForPlayer(PI[playerid][pCalling], telephonexiaomi[i]);
				TextDrawShowForPlayer(PI[playerid][pCalling], telephonexiaomi[57]);
				TextDrawShowForPlayer(PI[playerid][pCalling], telephonexiaomi[56]);
			}
		    if(GetPVarInt(playerid, !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawShowForPlayer(playerid, telephoneiphone[i]);
		    if(GetPVarInt(PI[playerid][pCalling], !"telephone") == 2) for(new i = 1; i < 30; i++) TextDrawShowForPlayer(PI[playerid][pCalling], telephoneiphone[i]);
			if(GetPVarInt(playerid, !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawShowForPlayer(playerid, telephoneSamsung[i]);
			if(GetPVarInt(PI[playerid][pCalling], !"telephone") == 3) for(new i = 4; i < 36; i++) TextDrawShowForPlayer(PI[playerid][pCalling], telephoneSamsung[i]);
 			if(pSvon{playerid}) pSvon{playerid} = false;
			if(pSvon{PI[playerid][pCalling]}) pSvon{PI[playerid][pCalling]} = false;
			telephoneon{PI[playerid][pCalling]} = true;
			SelectTextDraw(PI[playerid][pCalling], -16776961);
			telephoneon{playerid} = true;
			SelectTextDraw(playerid, -16776961);
		    for(new i; i < 15; i++)
		    {
		        TextDrawHideForPlayer(playerid, Calling[i]);
		        TextDrawHideForPlayer(PI[playerid][pCalling], Calling[i]);
		    }
			PI[playerid][pCalling] =
			PI[PI[playerid][pCalling]][pCalling] = -1;
			return 0;
		}
		return 1;
	}
	if(clickedid == Calling[5])
	{
	    new id = -1;
		foreach(new ids: Player)
		{
			if(PI[ids][pCalling] == playerid)
			{
				id = ids;
				break;
			}
		}
		if(id == -1) return 1;
		PI[id][pONPhoneTalk] = 1;

     	if(PlayerPlayed{playerid}) callcmd::radio(playerid);
	    TextDrawHideForPlayer(playerid, Calling[5]);
	    TextDrawHideForPlayer(playerid, Calling[4]);
	    TextDrawHideForPlayer(playerid, Calling[3]);
	    TextDrawHideForPlayer(playerid, Calling[2]);
	    PI[playerid][pONPhoneTalk] = 1;
		if(!PlayerLie[playerid] && !PlayerLieHeal[playerid]) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		if(!PlayerLie[id] && !PlayerLieHeal[id]) SetPlayerSpecialAction(id, SPECIAL_ACTION_USECELLPHONE);
		if(!IsPlayerAttachedObjectSlotUsed(playerid, 6)) SetPlayerAttachedObject(playerid, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
		if(!IsPlayerAttachedObjectSlotUsed(id, 6)) SetPlayerAttachedObject(playerid, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
		SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы подняли трубку");
		PI[id][pTelBalance] -= 15;
		SCM(id, COLOR_GREY, !"[Информация] {FFFFFF}Собеседник поднял трубку");
		return 1;
	}
	if(clickedid == PnumberXiaomi[12] || clickedid == PnumberSamsung[12])
	{
		DestroyPlayerTD(playerid, Ppnumber[playerid]);
		if(GetPVarInt(playerid, !"telephone") == 1)
		{
			for(new i; i < 32; i++) TextDrawHideForPlayer(playerid, PnumberXiaomi[i]);
			TextDrawShowForPlayer(playerid, telephonexiaomi[7]);
			TextDrawShowForPlayer(playerid, telephonexiaomi[3]);
			TextDrawShowForPlayer(playerid, telephonexiaomi[23]);
			TextDrawShowForPlayer(playerid, telephonexiaomi[17]);
			TextDrawShowForPlayer(playerid, telephonexiaomi[19]);
			TextDrawShowForPlayer(playerid, telephonexiaomi[21]);
		}
		else if(GetPVarInt(playerid, !"telephone") == 2)
		{
			for(new i; i < 32; i++) TextDrawHideForPlayer(playerid, PnumberXiaomi[i]);
 			TextDrawShowForPlayer(playerid, telephoneiphone[25]);
			TextDrawShowForPlayer(playerid, telephoneiphone[23]);
			TextDrawShowForPlayer(playerid, telephoneiphone[16]);
			TextDrawShowForPlayer(playerid, telephoneiphone[27]);
			TextDrawShowForPlayer(playerid, telephoneiphone[3]);
			TextDrawShowForPlayer(playerid, telephoneiphone[7]);
			TextDrawShowForPlayer(playerid, telephoneiphone[1]);
		}
		else if(GetPVarInt(playerid, !"telephone") == 3)
		{
		    for(new i; i < 34; i++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
 			TextDrawShowForPlayer(playerid, telephoneSamsung[4]);
			TextDrawShowForPlayer(playerid, telephoneSamsung[33]);
			TextDrawShowForPlayer(playerid, telephoneSamsung[22]);
			TextDrawShowForPlayer(playerid, telephoneSamsung[21]);
			TextDrawShowForPlayer(playerid, telephoneSamsung[32]);
		}
		Phonestat{playerid} = false;
	    return 1;
	}
	if(clickedid == PnumberXiaomi[28] || clickedid == PnumberSamsung[28])
	{
	    if(strlen(Pstroka[playerid]) > 1)
	    {
		    f(Pstroka[playerid],strlen(Pstroka[playerid]),"%s",Pstroka[playerid]);
		    PlayerTextDrawSetString(playerid, Ppnumber[playerid], Pstroka[playerid]);
	     	PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		}
		else
		{
		    f(Pstroka[playerid],strlen(Pstroka[playerid]),"");
		    PlayerTextDrawSetString(playerid, Ppnumber[playerid], "_");
	     	PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		}
	    return 1;
	}
	if(clickedid == telephonexiaomi[23] || clickedid == telephoneiphone[16] || clickedid == telephoneSamsung[21]) ShowPhoneMenu(playerid);
  	new biz = BizEntered[playerid];
	new Float:Health;
	GetPlayerHealth(playerid,Health);
    if(clickedid == alcodraw[0])
	{
	    if(J_GetPlayerDrunkLevel(playerid) >= 3000) return SendBotMessage(playerid,"Ох ну и ты напился уже, не продам я тебе, и не проси!");
	    if(HouseEntered[playerid] == -1)
	    {
        	if(GetMoney(playerid) < 20) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
        	if(biz != -1) GiveBizMoney(biz,20);
        	GiveMoney(playerid, -20);
        	aml(52, playerid, "", "покупка спранка дома", 20);
		}
		else
		{
		    if(HouseInfo[HouseEntered[playerid]][hProducts] < 1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не хватает продуктов, купить их можно в любой закусочной!");
		    HouseInfo[HouseEntered[playerid]][hProducts]-=1;
		}
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
        if(Health <= 95.0) J_SetPlayerHealth(playerid,Health+5);
        else J_SetPlayerHealth(playerid,100);
        SendBarBot(playerid);
        return 1;
    }
	if(clickedid == alcodraw[1])
	{
	    if(J_GetPlayerDrunkLevel(playerid) >= 3000) return SendBotMessage(playerid,"Ох ну и ты напился уже, не продам я тебе, и не проси!");
	    if(HouseEntered[playerid] == -1)
	    {
		    if(GetMoney(playerid) < 400) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
		    if(biz != -1)
			{
			    if(BizInfo[biz][bProducts]<5)return SendBotMessage(playerid,"Извините, но у нас закончились продукты!");
				GiveBizMoney(biz,400);
				BizInfo[biz][bProducts]-=5;
			}
			GiveMoney(playerid, -400);
			aml(52, playerid, "", "покупка водки дома", 400);
		}
		else
		{
		    if(HouseInfo[HouseEntered[playerid]][hProducts] < 5)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не хватает продуктов, купить их можно в любой закусочной!");
		    HouseInfo[HouseEntered[playerid]][hProducts]-=5;
		}
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
        J_SetPlayerDrunkLevel(playerid,J_GetPlayerDrunkLevel(playerid) + 300);
        if(Health <= 70.0) J_SetPlayerHealth(playerid,Health+30);
        else J_SetPlayerHealth(playerid,100);
        SendBarBot(playerid);
        return 1;
	}
	if(clickedid == alcodraw[2])
	{
	    if(J_GetPlayerDrunkLevel(playerid) >= 3000) return SendBotMessage(playerid,"Ох ну и ты напился уже, не продам я тебе, и не проси!");
	    if(HouseEntered[playerid] == -1)
	    {
   	 		if(GetMoney(playerid) < 500)return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
   	 		if(biz != -1)
			{
			    if(BizInfo[biz][bProducts]<7)return SendBotMessage(playerid,"Извините, но у нас закончились продукты!");
				GiveBizMoney(biz,500);
				BizInfo[biz][bProducts]-=7;
			}
			GiveMoney(playerid, -500);
			aml(52, playerid, "", "покупка коньяка дома", 500);
		}
		else
		{
		    if(HouseInfo[HouseEntered[playerid]][hProducts] < 7)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Не хватает продуктов, купить их можно в любой закусочной!");
		    HouseInfo[HouseEntered[playerid]][hProducts]-=7;
		}
        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
        J_SetPlayerDrunkLevel(playerid,J_GetPlayerDrunkLevel(playerid) + 350);
		SendBarBot(playerid);
        if(Health <= 50.0) J_SetPlayerHealth(playerid,Health+50);
        else J_SetPlayerHealth(playerid,100);
        return 1;
	}
	if(clickedid == alcodraw[3])
	{
	    if(GetMoney(playerid) < 200) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
		if(Fullness[playerid] >= 70) return SCM(playerid, COLOR_GREY, !"Вы не голодны!");
        if(biz != -1)
		{
		    if(BizInfo[biz][bProducts]<3)return SendBotMessage(playerid,"Извините, но у нас закончились продукты!");
			GiveBizMoney(biz,200);
			BizInfo[biz][bProducts]-=3;
		}
		GiveMoney(playerid, -200);
		aml(52, playerid, "", "покупка пиццы", 200);
		GiveFullness(playerid, 25);
		SCM(playerid, COLOR_VALIK, !"Вы взяли пиццу. Посмотреть состояние голода можно {FFFFFF}/satiety");
		ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		Send2BarBot(playerid);
		return 1;
	}
	if(clickedid == alcodraw[4])
	{
	    if(GetMoney(playerid) < 300) return SendBotMessage(playerid,"Извините, но у вас не хватает денег!");
        if(Fullness[playerid] >= 60) return SCM(playerid, COLOR_GREY, !"Вы не голодны!");
        if(biz != -1)
		{
		    if(BizInfo[biz][bProducts]<4)return SendBotMessage(playerid,"Извините, но у нас закончились продукты!");
			GiveBizMoney(biz,300);
			BizInfo[biz][bProducts]-=4;
		}
		GiveMoney(playerid, -300);
		aml(52, playerid, "", "покупка ланча", 300);
		GiveFullness(playerid, 40);
		SCM(playerid, COLOR_VALIK, !"Вы взяли ланч. Посмотреть состояние голода можно {FFFFFF}/satiety");
		ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		Send2BarBot(playerid);
		return 1;
	}
	if(clickedid == alcodraw1[5])
	{
		for(new A; A < 5; A++) TextDrawHideForPlayer(playerid, alcodraw[A]); //квадратики дисков
		for(new A; A < 7; A++) TextDrawHideForPlayer(playerid, alcodraw1[A]); //квадратики дисков
		for(new A; A < 5; A++) TextDrawHideForPlayer(playerid, alcodraw2[A]); //квадратики дисков
		CancelSelectTextDraw(playerid);
		return 1;
	}
	else if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1)
	{
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0xFFFFFFAA);
		else if(clickedid == ButtonLeft) callcmd::back(playerid);
		else if(clickedid == ButtonRight) callcmd::next(playerid);
		else if(clickedid == boxaccept) callcmd::cancel(playerid);
		else if(clickedid == boxcancel) callcmd::done(playerid);
		return true;
	}
	if(KindFuel[playerid] != -1)
 	{
   		if(clickedid == FillTD[9])
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new Float:maxfuel = 100.0 - vTemp[carid][Fuel];
		    if(CountFuel[playerid] < maxfuel)
		    {
			    CountFuel[playerid] += 1.0;
			    new fuelid = PlayerFuel[playerid];
			    new bizid = FuelInfo[fuelid][fBizzID];
			    new Float:cost = BizInfo[bizid][bEnterPrice];
			    new price = floatround( cost * CountFuel[playerid], floatround_floor );
			    f(str_2, sizeof(str_2), "$%i", price);
			    PlayerTextDrawSetString(playerid, FuelCostDraw[playerid], str_2);
			    f(str_2, sizeof(str_2), "%.0f/%.0f~g~L", CountFuel[playerid], maxfuel);
			    PlayerTextDrawSetString(playerid, FuelCountDraw[playerid], str_2);
			    new Float:part = 100.0 / float(100) * CountFuel[playerid];
				new Float:length = 243.0 + part * 1.64;
				if(length > 397.0) length = 397.0;
				PlayerTextDrawTextSize(playerid, PlayerFuelBar[playerid], length, 0.0);
				PlayerTextDrawShow(playerid, PlayerFuelBar[playerid]);
			}
		}
		else if(clickedid == FillTD[8])
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new Float:maxfuel = 100.0 - vTemp[carid][Fuel];
		    if(CountFuel[playerid] > 0.0)
		    {
			    CountFuel[playerid] -= 1.0;
			    new fuelid = PlayerFuel[playerid];
			    new bizid = FuelInfo[fuelid][fBizzID];
			    new Float:cost = BizInfo[bizid][bEnterPrice];
			    new price = floatround( cost * CountFuel[playerid], floatround_floor );
			    f(str_2, sizeof(str_2), "$%i", price);
			    PlayerTextDrawSetString(playerid, FuelCostDraw[playerid], str_2);
			    f(str_2, sizeof(str_2), "%.0f/%.0f~g~L", CountFuel[playerid], maxfuel);
			    PlayerTextDrawSetString(playerid, FuelCountDraw[playerid], str_2);
			    new Float:part = 100.0 / float(100) * CountFuel[playerid];
				new Float:length = 243.0 + part * 1.64;
				if(length < 243.0) length = 243.0;
				PlayerTextDrawTextSize(playerid, PlayerFuelBar[playerid], length, 0.0);
				PlayerTextDrawShow(playerid, PlayerFuelBar[playerid]);
			}
		}
		else if(clickedid == FillTD[14])
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(KindFuel[playerid] < sizeof(FuelName) - 1) KindFuel[playerid] ++;
			else KindFuel[playerid] = 0;
			new kind = KindFuel[playerid];
			if(kind == GetVehicleKindFuel(carid)) GameTextForPlayer(playerid,"~w~",1,3);
			else GameTextForPlayer(playerid,"~w~This type of fuel ~r~ is not suitable~w~~n~ for your vehicles!",10000,4);
		    PlayerTextDrawSetString(playerid, KindFuelDraw[playerid], FuelName[kind]);
		}
		else if(clickedid == FillTD[13])
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(KindFuel[playerid] > 0) KindFuel[playerid] --;
			else KindFuel[playerid] = sizeof(FuelName) - 1;
			new kind = KindFuel[playerid];
			if(kind == GetVehicleKindFuel(carid)) GameTextForPlayer(playerid,"~w~",1,3);
			else GameTextForPlayer(playerid,"~w~This type of fuel ~r~ is not suitable~w~~n~ for your vehicles!",10000,4);
		    PlayerTextDrawSetString(playerid, KindFuelDraw[playerid], FuelName[kind]);
		}
		else if(clickedid == FillTD[0])
		{
		    if(CountFuel[playerid] > 0.0)
		    {
			    new vehicleid = GetPlayerVehicleID(playerid);
			    new fuelid = PlayerFuel[playerid];
				new bizid = FuelInfo[fuelid][fBizzID];
				new Float:cost = BizInfo[bizid][bEnterPrice];
				new price = floatround( cost * CountFuel[playerid], floatround_floor );
				if(PI[playerid][pMoney] >= price)
				{
				    if(KindFuel[playerid] == GetVehicleKindFuel(vehicleid))
					{
						BeforeFill[vehicleid] = 0;
						GameTextForPlayer(playerid,"~w~",1,3);
						f(str_2, sizeof(str_2), "* Транспортное средство заправляется (( %s ))", cPN(playerid));
						ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
						SetTimerEx("Fillup",1000,false,"idf", playerid, vehicleid, CountFuel[playerid]);
						SetEngineStatus(vehicleid, false, -1);
						GiveMoney(playerid, -price);
						aml(52, playerid, "", "заправка транспорта", price);
						CancelSelectTextDraw(playerid);
						if(!GetString(BizInfo[bizid][bOwner],"The State"))
						{
							GiveBizMoney(bizid,price);
							BizInfo[bizid][bProducts] -= floatround(CountFuel[playerid]);
							SaveBiz(bizid);
						}
						CheckFuelDraws(playerid);
						PlayerFuel[playerid] = -1;
						KindFuel[playerid] = -1;
						CountFuel[playerid] = 0.0;
						UpdateFuels(bizid);
					}
					else SCM(playerid, COLOR_GREY, "Данный тип топлива не подходит для вашего транспорта.");
				}
				else
				{
				    f(str_2, sizeof(str_2), "Заправка стоит $%i, а у вас только $%i", price, PI[playerid][pMoney]);
					SCM(playerid, COLOR_GREY, str_2);
				}
			}
			else SCM(playerid, COLOR_GREY, "Не менее 1 литра.");
		}
 		else if(clickedid == FillTD[1])
		{
		    KindFuel[playerid] = -1;
			CountFuel[playerid] = 0.0;
			CheckFuelDraws(playerid);
			SCM(playerid, COLOR_GREY, "Вы отказались заправляться.");
			GameTextForPlayer(playerid,"~w~",1,3);
			TogglePlayerControllable(playerid, true);
			CancelSelectTextDraw(playerid);
        }
	}
    return 0;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(!IsPlayerLogged{playerid}) return AC_Bogdan(playerid, 53);
	if(RouletteOpen{playerid})
    {
        if(playertextid == RollTD[playerid][18]) RollUpdateModel(playerid, 0);
        if(playertextid == RollTD[playerid][23]) RollUpdateModel(playerid, 1);
        if(playertextid == RollTD[playerid][28]) RollUpdateModel(playerid, 2);
        if(playertextid == RollTD[playerid][48]) RollUpdateModel(playerid, 3);
        if(playertextid == RollTD[playerid][41]) BuyRoulette(playerid);
        if(playertextid == RollTD[playerid][43])
        {
            if(PI[playerid][pVirMoney] < 8) return 1;
            if(RollTimeUpdate[playerid]) return 1;
            new roll = GetPVarInt(playerid, "RollType");
            for(new i; i < 16; i++) RoulleteItem[playerid][roll][i] = 0, RoulleteItemAmount[playerid][roll][i] = 0, RoulleteItemMoney[playerid][roll][i] = false;
            PI[playerid][pVirMoney] -= 8;
            UpdatePlayerDataInt(playerid, "VirMoney", PI[playerid][pVirMoney]);
            RollUpdateModel(playerid, roll);
            PlayerTextDrawSetStringf(playerid, RollTD[playerid][41], "%i", PI[playerid][pVirMoney]), PlayerTextDrawShow(playerid, RollTD[playerid][41]); 
        }
        if(playertextid == RollTD[playerid][29])
        {
            new roll = GetPVarInt(playerid, "RollType");
            if(RollTimeUpdate[playerid]) return 1;
            if(roll != 3 && !GetInvCount(playerid, 313+roll) || !GetInvCount(playerid, Item_PlatinumRoullete) && roll == 3) return BuyRoulette(playerid);
            if(roll !=3) InvAdd(playerid, 313+roll, -1);
            else InvAdd(playerid, Item_PlatinumRoullete, -1);
            PlayerTextDrawSetStringf(playerid, RollTD[playerid][42], "%i", roll != 3 ? GetInvCount(playerid, 313+roll) : GetInvCount(playerid, Item_PlatinumRoullete));
            PlayerTextDrawShow(playerid, RollTD[playerid][42]);
            RollUpdate(playerid);
            for(new i; i < 16; i++)
            {
                new ID = RoulleteItem[playerid][roll][i];
                if(PlayerTextDrawGetBackgroundCol(playerid, RoulettePageSlot[playerid][i]) != 0xBABC49FF) continue;
                if(ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][i], ItemsInfo[ID][ItemColor]);
                else PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][i], 0x191919FF);
                PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][i]);
            }   
        }
    }
	if(ReconOpen{playerid})
	{
		if(playertextid == reconmenu[playerid][5])
		{
			switch(ReconMenus[playerid])
			{
				case 1:
				{
					f(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::check(playerid, str_1);
				}
				case 2:
				{
					f(str_1, sizeof(str_1), "%i 1", SERIU[playerid]);
					callcmd::slap(playerid, str_1);
				}
				case 3:
				{
					
				}
				case 4:
				{
					
				}
				case 5:
				{
					
				}
				case 6:
				{
					
				}
				case 7:
				{
					f(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::getip(playerid, str_1);
				}
				case 8:
				{
					callcmd::reoff(playerid);
					f(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::az(playerid, str_1);
				}
			}
		}
		if(playertextid == reconmenu[playerid][4])
		{
			switch(ReconMenus[playerid])
			{
				case 1:
				{

				}
				case 2:
				{
					
				}
				case 3:
				{
					
				}
				case 4:
				{
					
				}
				case 5:
				{
					format(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::flip(playerid, str_1);
				}
				case 6:
				{
					
				}
				case 7:
				{
					format(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::pgetip(playerid, str_1);
				}
				case 8:
				{
					callcmd::reoff(playerid);
					format(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::goto(playerid, str_1);
				}
			}
		}
		if(playertextid == reconmenu[playerid][3])
		{
			switch(ReconMenus[playerid])
			{
				case 1:
				{

				}
				case 2:
				{
					
				}
				case 3:
				{
					
				}
				case 4:
				{
					
				}
				case 5:
				{
					f(str_1, sizeof(str_1), "%i 100", SERIU[playerid]);
					callcmd::sethp(playerid, str_1);
				}
				case 6:
				{
					
				}
				case 7:
				{
					format(str_1, sizeof(str_1), "%s", PN(SERIU[playerid]));
			        GetPlayerNetworkStats(playerid, str_2, sizeof(str_2));
			        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, str_1, str_2, !"x", !"");
				}
				case 8:
				{
					callcmd::reoff(playerid);
					format(str_1, sizeof(str_1), "%d", SERIU[playerid]);
					callcmd::gethere(playerid, str_1);
				}
			}
		}
		if(playertextid == reconmenu[playerid][2])
		{
			switch(ReconMenus[playerid])
			{
				case 1:
				{

				}
				case 2:
				{
					format(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::weap(playerid, str_1);
				}
				case 3:
				{
					format(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::freeze(playerid, str_1);
				}
				case 4:
				{
					
				}
				case 5:
				{
					format(str_1, sizeof(str_1), "%i", SERIU[playerid]);
					callcmd::spplayer(playerid, str_1);
				}
				case 6:
				{
					
				}
				case 7:
				{

				}
				case 8: callcmd::reoff(playerid);
			}
		}
		if(playertextid == recon_p[playerid][48]) SpecPlayer(playerid, SERIU[playerid]);
		if(playertextid == recon_p[playerid][47])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 1);
		}
		if(playertextid == recon_p[playerid][46])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 2);
		}
		if(playertextid == recon_p[playerid][45])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 3);
		}
		if(playertextid == recon_p[playerid][44])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 4);
		}
		if(playertextid == recon_p[playerid][43])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 5);
		}
		if(playertextid == recon_p[playerid][42])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 6);
		}
		if(playertextid == recon_p[playerid][41])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 7);
		}
		if(playertextid == recon_p[playerid][40])
		{
			HideReconMenu(playerid, ReconMenus[playerid]);
			ShowReconMenu(playerid, 8);
		}
	}
 	if(playertextid == PlayerStallTD[playerid][0])
	{
	    PlayerTextDrawColor(playerid, PlayerStallTD[playerid][0], 0xA52A2AFF);
	    if(SelectStallItem{playerid} == 2)
	    {
			PlayerTextDrawColor(playerid, PlayerStallTD[playerid][3], 0xC0C0C018);
			PlayerTextDrawShow(playerid, PlayerStallTD[playerid][3]);
	    }
		PlayerTextDrawShow(playerid, PlayerStallTD[playerid][0]);
		return SelectStallItem{playerid} = 1;
	}
	if(playertextid == PlayerStallTD[playerid][3])
	{
	 	PlayerTextDrawColor(playerid, PlayerStallTD[playerid][3], 0xA52A2AFF);
	    if(SelectStallItem{playerid} == 1)
	    {
			PlayerTextDrawColor(playerid, PlayerStallTD[playerid][0], 0xC0C0C018);
			PlayerTextDrawShow(playerid, PlayerStallTD[playerid][0]);
	    }
		PlayerTextDrawShow(playerid, PlayerStallTD[playerid][3]);
		return SelectStallItem{playerid} = 2;
	}
	/*-------- [ Система контейнеров ] --------*/
	if(ContainerTakeOpen{playerid})
	{
		if(playertextid == ContainerTake[playerid][54]) ContainerCloseTake(playerid);
		for(new d; d < sizeof(ContainerInfo); d++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.1, ContainerInfo[d][ContPos][0], ContainerInfo[d][ContPos][1]-2.2787, ContainerInfo[d][ContPos][2]+1.0584))
			{
				for(new i ; i < 6; i++) if(playertextid == ContainerTake[playerid][i]) GiveItemContainer(playerid, i, d, gContainer[d][gPrize][i]);
			}
		}
	}
	/*-------- ====================== --------*/
    if(EnchantOpen{playerid})
    {
        if(playertextid == Invent_Enchant[playerid][27]) 
        {
			if(!ProccesEnchant[playerid])
			{
			    ItemEnchantStoneAmount[playerid] = 0;
			 	UpdateSlotsEnchant(playerid, ItemEnchantSlot[playerid], 1, 2); 
        	}
    	}
        if(playertextid == Invent_Enchant[playerid][26]) 
        {
			if(!ProccesEnchant[playerid])
			{
				ItemEnchant[playerid] = 0;
				ItemEnchantLvl[playerid] = 0;
				ItemEnchantStoneAmount[playerid] = 0;
				UpdateSlotsEnchant(playerid, 0, 2, 2);
			}

        }
        if(playertextid == Invent_Enchant[playerid][15])
        {
            if(!ItemEnchant[playerid] || !ItemEnchantStoneAmount[playerid]) return 1;
            if(!ProccesEnchant[playerid])
            {
				if(PI[playerid][pInvItemEnchant][ItemEnchantSlots[playerid]] < 12)
				{
	                if(GetMoney(playerid) < 10000) return SCM(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Не достаточно денег!");
	                ProgressWhiteEnchant[playerid] = 2.727182;//
	                for(new i = 2 ; i < 5; i++)  DestroyPlayerTD(playerid, ProgreesEnchantTD[playerid][i]);
	                CreateProgreesEnchantTD(playerid, 1);
	                for(new i = 2 ; i < 5; i++)  PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][i]);
	                EnchantTimer[playerid] = SetTimerEx("EnchantTime", 40, 1, "d", playerid);//
	                if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][16], "UNDO");
	                else PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][16], FixText("ОТМЕНИТЬ"));
    	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][26], 0);
	            	PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][27], 0);
	                ProccesEnchant[playerid] = true;
	            }
            }
            else
            {
                if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][16], "ENCHANT");
                else PlayerTextDrawSetString(playerid,  Invent_Enchant[playerid][16], FixText("ЗАТОЧИТЬ"));
                ProccesEnchant[playerid] = false;
                KillTimer(EnchantTimer[playerid]);
                EnchantTimer[playerid] = -1;
                ProgressWhiteEnchant[playerid] = 0.0;
	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][26], 1);
	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][27], 1);
                for(new i = 2; i < 5; i++) DestroyPlayerTD(playerid, ProgreesEnchantTD[playerid][i]);
            }
            PlayerTextDrawShow(playerid, Invent_Enchant[playerid][16]);
        }
        if(playertextid == Invent_Enchant[playerid][17]) HideEnchant(playerid);
        if(playertextid == Invent_Enchant[playerid][23]) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "{BFBBBA}", "{FFFFFF}Улучшение Аксессуаров:\nДля улучшения предметов, вам необходимы {FF9D41}точильные камни{FFFFFF}, найти их\nможно на семейном мероприятии - Зловещий дворец ({C64545}/GPS - Мероприятия{FFFFFF})\nили приобрести в игровом магазине или на центральном рынке.\n\nУлучшение предметов даст возможность вашему персонажу получить\nспециальные характеристики: {FF9D41}Урон, Защита, Удача и Восстановление.{FFFFFF}\nЭти характеристики появляются после улучшения аксессуара (от +4).\nМаксимальный уровень улучшения - {FF9D41}12{FFFFFF}! Если ваш персонаж будет одет\nв аксессуары, которые вместе имеют от {FF9D41}+50{FFFFFF} улучшений, вы начнёте \nсветиться специальной аурой, которая отобразит ваш достаток.\nТак-же в инвентаре будет отображаться уровень улучшения каждого аксессуара!", "Выход", "");
    }
	/*-------- [ Система крафта ] --------*/
	if(CraftOpened{playerid})
	{
		if(CraftColorOpened{playerid})
		{
			for(new i = 9; i >= 0; i--)
			{
				if(playertextid == Invent_CraftColor[playerid][i])
				{
					CraftSetColorItem(playerid, i);
					break;
				}
			}
		}
		for(new i = 56; i > 50 ; --i)
		{
			for(new j = 1; j < 6; j++) 
			{
				i--;
				if(playertextid == Invent_Craft[playerid][i])
				{
					CraftPageSelect{playerid} = 1;
					CraftItemSelect{playerid} = 0;
					CraftTabSelect{playerid} = j;
					CraftAmount{playerid} = 1;
					CraftOpen(playerid); 
					break;
				}
			}
		}
		if(playertextid == Invent_Craft[playerid][9]) ShowPlayerDialog(playerid, 8475, DIALOG_STYLE_INPUT, "{BFBBBA} ", "{FFFFFF}Введите количество, которое хотите изготовить", "Выбрать", "Отмена");
		if(playertextid == Invent_Craft[playerid][27]) 
		{ 
			if(CraftPageSelect{playerid} != IntRound(GetAllAmountCraft(playerid))) 
			{ 
				CraftPageSelect{playerid}++;
				CraftItemSelect{playerid} = 0;
				CraftOpen(playerid); 
			}
		}
		if(playertextid == Invent_Craft[playerid][1]) ShowCraftSelectColor(playerid);
		if(playertextid == Invent_Craft[playerid][8])
		{
			new ID = SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}+CraftItemSelect{playerid};
			if(CraftAmount{playerid} != CraftInfo[ID][CraftMax])
			{
				CraftAmount{playerid}++;
				CraftOpen(playerid); 
			}
		}
		if(playertextid == Invent_Craft[playerid][11])
		{	
			if(CraftAmount{playerid} != 1)
			{
				CraftAmount{playerid}--;
				CraftOpen(playerid); 
			}
		}
		if(playertextid == Invent_Craft[playerid][29]) 
		{ 
			if(CraftPageSelect{playerid} != 1) 
			{ 
				CraftPageSelect{playerid}--;
				CraftItemSelect{playerid} = 0;
				CraftOpen(playerid); 
			}
		}
		for(new i = 17; i > 11; i--)
		{
			if(playertextid == Invent_Craft[playerid][i]) 
			{
				new ID = SearchSelectItemCraft(playerid)+CraftItemSelect{playerid}+CraftItemSelect{playerid}, j = ((-i)-(-17)), Need = CraftInfo[ID][CraftNeed][j];
				SPD(playerid, 8236, 0, !"Информация о предмете", ItemsInfo[Need][ItemInfo], !"Выход", !"");
				break;
			}
		}
		if(playertextid == Invent_Craft[playerid][4]) StartCraft(playerid);
		for(new i = 40; i >= 30 ; --i)
		{
			for(new j ; j < 10; j++) 
			{
				i--;
				if(playertextid == Invent_Craft[playerid][i])
				{
					CraftItemSelect{playerid} = j;
					CraftOpen(playerid); 
					break;
				}
			}
		}
	}
	/*-------- ============= --------*/
	for(new j = 0; j < 16; j+=2)
	{
		if(playertextid == pboom[playerid][j])
		{
		    PlayerTextDrawHide(playerid, pboom[playerid][j+1]);
			PlayerTextDrawHide(playerid, pboom[playerid][j]);
			NumMusic[playerid] = 0;
      		foreach(Player,i)
			{
				if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
			}
		}
	}	
	if(playertextid == boomtext_p[playerid][0]) return SPD(playerid, 7000, DIALOG_STYLE_INPUT, !"Бумбокс/Колонка", !"{FFFFFF}Введите страницу на которую хотите перейти", !"Перейти", !"Отмена");
	//=============inv================
	if(InventStatus{playerid} || MenuStatus{playerid} || TradeOpen{playerid} || EnchantOpen{playerid})
	{
		if(GetPVarInt(playerid, !"antifloodinv")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Подождите немного..."); SetTimerEx("AntiFloodInv", 200, 0, "d", playerid);
		SetPVarInt(playerid, !"antifloodinv", 1);
		switch(GetPVarInt(playerid, !"InvType"))
		{
			case 1:
			{
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, MusorPos[TrashID[playerid]][0], MusorPos[TrashID[playerid]][1], MusorPos[TrashID[playerid]][2]))
				{
					if(MenuStatus{playerid} || playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
			case 2:
			{
				if(HouseEntered[playerid] != HouseID[playerid])
				{
					if(MenuStatus{playerid} || playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
			case 3:
			{
				new Float:X,Float:Y,Float:Z, idofcar = idaofcar[playerid];
				GetVehicleShiftPos(idofcar, 1, X, Y, Z, 2.0);
				if(!IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z) || !TrunkInfo[idofcar][tOpen])
				{
					if(MenuStatus{playerid} || playertextid == InventButton[playerid][0]) return CancelSelectTextDraw(playerid);
				}
			}
		}
		if(playertextid == Invent[playerid][3]) return CancelSelectTextDraw(playerid);
		if(InvLockItem{playerid}) return 1;
		for(new i; i < 150; i++)
		{
			if(playertextid == Invent_Menu_Page[playerid][i])
			{
				if(BuyStatus{playerid})
				{
					new ID = PI[playerid][pBuyItem][i], cost = GetCostID(ID);
					if(ID)
					{
						//SCMf(playerid, -1, "id item - %i", ID);
						InvLockItem{playerid} = true;
						SetPVarInt(playerid, !"BuyClick", i);
						switch(ID)
						{
							case IventCarSlot:
							{
								f(str_1, sizeof(str_1), "{FFFFFF}\n%s\n{67BE55}\nВ наличии: %i шт.\nСтоимость: $%i за 1 шт.", ItemsInfo[ID][ItemInfo], BizInfo[BizEntered[playerid]][bProducts]/10, cost);
								return SPD(playerid, 3082, DIALOG_STYLE_MSGBOX, "Покупка предмета", str_1, !"Купить", !"Отмена");
							}
							case Item_Aksioma:
							{
								f(str_1, sizeof(str_1), "{FFFFFF}\n%s\n{67BE55}\nВ наличии: 1 шт.\nСтоимость: %i семейных талонов за 1 шт.", ItemsInfo[ID][ItemInfo], cost);
								return SPD(playerid, 9060, DIALOG_STYLE_MSGBOX, "Покупка предмета", str_1, !"Купить", !"Отмена");
							}
						}
					}
					return 1;
				}
				InvLockItem{playerid} = true;
				new type = GetPVarInt(playerid, !"InvType");
				if(!PlayerTextDrawIsSelectable(playerid, Invent_Menu_Page[playerid][i])) return SendInfoBug(playerid),InvLockItem{playerid} = false;
				switch(type)
				{
					case 1:
					{
						new 
							id = TrashID[playerid], 
							Item = TrashInfo[id][TrashItem][i],
							Amount = TrashInfo[id][TrashItemAmount][i], 
							Color = TrashInfo[id][TrashItemColor][i],
							Enchant = TrashInfo[id][TrashItemEnchant][i],
							mining = TrashInfo[id][TrashItemMining][i];

						if(!Item) return InvLockItem{playerid} = false;
						if(Amount == 1)
						{
							if(!InvAdd(playerid, Item, Amount, 0, Color, Enchant, mining)) return InvLockItem{playerid} = false;
							aml(24, playerid, "", "", Amount, Item, id);

							TrashInfo[id][TrashItem][i] = 0;
							TrashInfo[id][TrashItemAmount][i] = 0;
							TrashInfo[id][TrashItemColor][i] = 0;
							TrashInfo[id][TrashItemEnchant][i] = 0;
							TrashInfo[id][TrashItemMining][i] = 1;

							MenuSlotsUpdate(TrashID[playerid], i, type);
							InvLockItem{playerid} = false;
						}
						else if(Amount > 1)
						{
						    InventClick{playerid} = i;
							SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
						}
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
					case 2:
					{
						new 
							id = HouseID[playerid], 
							Item = HouseInfo[id][hItem][i], 
							Amount = HouseInfo[id][hItemAmount][i], 
							Color = HouseInfo[id][hItemColor][i],
							Enchant = HouseInfo[id][hItemEnchant][i],
							mining = HouseInfo[id][hItemMining][i];

						if(!Item) return InvLockItem{playerid} = false;
						if(Amount == 1)
						{
							if(!InvAdd(playerid, Item, Amount, 0, Color, Enchant, mining)) return InvLockItem{playerid} = false;
							aml(64, playerid, "", "", Amount, Item, id);
							
							HouseInfo[id][hItem][i] = 0;
							HouseInfo[id][hItemAmount][i] = 0;
							HouseInfo[id][hItemColor][i] = 0;
							HouseInfo[id][hItemEnchant][i] = 0;
							HouseInfo[id][hItemMining][i] = 1;

							MenuSlotsUpdate(HouseID[playerid], i, type);
							InvLockItem{playerid} = false;

							SaveInv(id, 3, i);
						}
						else if(Amount > 1)
						{
						    InventClick{playerid} = i;
							SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
						}
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
					case 3:
					{
						new 
							id = idaofcar[playerid], 
							Item = TrunkInfo[id][TrunkItem][i], 
							Amount = TrunkInfo[id][TrunkItemAmount][i], 
							Color = TrunkInfo[id][TrunkItemColor][i],
							Enchant = TrunkInfo[id][TrunkItemEnchant][i],
							mining = TrunkInfo[id][TrunkItemMining][i];

						if(!Item) return InvLockItem{playerid} = false;
						if(Amount == 1)
						{
							if(!InvAdd(playerid, Item, Amount, 0, Color, Enchant, mining)) return InvLockItem{playerid} = false;
							aml(74, playerid, "", "", Amount, Item, id);

							TrunkInfo[id][TrunkItem][i] = 0;
							TrunkInfo[id][TrunkItemAmount][i] = 0;
							TrunkInfo[id][TrunkItemColor][i] = 0;
							TrunkInfo[id][TrunkItemEnchant][i] = 0;
							TrunkInfo[id][TrunkItemMining][i] = 1;

							MenuSlotsUpdate(idaofcar[playerid], i, type);
							InvLockItem{playerid} = false;

							SaveInv(GetVehicleID(id), 4, i);
						}
						else if(Amount > 1)
						{
						    InventClick{playerid} = i;
							SPD(playerid, 8251, DIALOG_STYLE_INPUT, !"", !"{FFFFFF}Введите количество, которое хотите забрать", !"Выбрать", !"Отмена");
						}
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
					case 4://трейд
					{
						if(TradeLock{playerid} || TradeLock{TradeID[playerid]}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сделка подтверждена с одной из сторон, изменения заблокированы!"),InvLockItem{playerid} = false;
						if(!PI[playerid][pTradeItem][i]) return InvLockItem{playerid} = false;

						new id = PI[playerid][pTradeInvID][i];

						PI[playerid][pInvItemLock][id] = 0;
						InvSlotUpdate(playerid, id);

					    PI[playerid][pTradeItem][i] = 0;
					    PI[playerid][pTradeItemAmount][i] = 0;
					    PI[playerid][pTradeItemColor][i] = 0;
					    PI[playerid][pTradeItemEnchant][i] = 0;
					    PI[playerid][pTradeItemMining][i] = 1;
					    MenuSlotUpdate(playerid, i, 4);

						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
						InvLockItem{playerid} = false;
					}
				}
			}
			if(i < PI[playerid][pInvCell])
			{
				if(playertextid == InventSlot[playerid][i])
			    {
					if(EnchantOpen{playerid})
					{
						if(!ProccesEnchant[playerid])
						{
			    			switch(PI[playerid][pInvItem][i])
							{
								case AcsSlot1, AcsSlot2, AcsSlot3, AcsSlot4, AcsSlot5, AcsSlot6: SetEnchantItem(playerid, i);
								case Item_StoneEnchant: SetEnchantItem(playerid, i);
							}
						}	
					}
			        else if(InventClick{playerid} == 255)
			        {
			        	if(PI[playerid][pInvItem][i])
			        	{
			        		InvLockItem{playerid} = true;
							if(!PlayerTextDrawIsSelectable(playerid, InventSlot[playerid][i])) return SendInfoBug(playerid),InvLockItem{playerid} = false;
			        		
							if(InventStatus{playerid})
			        		{
				        		SetSelectableForItem(playerid, i, 0);
				        		CreateInvMenu(playerid, i, ItemsInfo[PI[playerid][pInvItem][i]][ItemType]);
								PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
								InventClick{playerid} = i;
								CheckInvItem(playerid, 1);
								InvLockItem{playerid} = false;
							}
							else if(TradeOpen{playerid})
							{
								if(TradeLock{playerid} || TradeLock{TradeID[playerid]}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сделка подтверждена с одной из сторон, изменения заблокированы!"),InvLockItem{playerid} = false;

								new
									Item = PI[playerid][pInvItem][i],
							    	Amount = PI[playerid][pInvItemAmount][i],
							    	Color = PI[playerid][pInvItemColor][i],
							    	Enchant = PI[playerid][pInvItemEnchant][i],
							    	Mining = PI[playerid][pInvItemEnchant][i];

								if(CheckMenuItem(playerid, Item)) return InvLockItem{playerid} = false;
					    		if(Amount == 1)
					    		{
					    			if(!TradeAdd(playerid, Item, Amount, Color, Enchant, Mining)) return InvLockItem{playerid} = false;
					    			PI[playerid][pTradeInvID][GetPVarInt(playerid, !"InvItemLock")] = i;
					    			PI[playerid][pInvItemLock][i] = 1;
					    			InvSlotUpdate(playerid, i);
					    			InvLockItem{playerid} = false;
					    		}
					    		else if(Amount > 1)
					    		{
					    			InventClick{playerid} = i;
					    			SPD(playerid, 8249, DIALOG_STYLE_INPUT, !"Торговля", !"{FFFFFF}Введите количество, которое хотите передать", !"Выбрать", !"Отмена");
					    		}
								PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
							}
							else if(MenuStatus{playerid})
							{
								new 
									Item = PI[playerid][pInvItem][i],
							    	Amount = PI[playerid][pInvItemAmount][i],
							    	Color = PI[playerid][pInvItemColor][i],
							    	Enchant = PI[playerid][pInvItemEnchant][i],
									Mining = PI[playerid][pInvItemEnchant][i];

								if(CheckMenuItem(playerid, Item)) return InvLockItem{playerid} = false;
								switch(GetPVarInt(playerid, !"InvType"))
								{
									case 1:
									{
							    		if(Amount == 1)
							    		{
							    			new id = TrashID[playerid];
							    			if(!TrashAdd(playerid, id, Item, Amount, Color, Enchant, Mining)) return InvLockItem{playerid} = false;
							    			
							    			PI[playerid][pInvItem][i] = 0;
							    			PI[playerid][pInvItemAmount][i] = 0;
							    			PI[playerid][pInvItemColor][i] = 0;
							    			PI[playerid][pInvItemEnchant][i] = 0;
							    			PI[playerid][pInvItemMining][i] = 1;

							    			InvSlotUpdate(playerid, i);
							    			aml(23, playerid, "", "", Amount, Item, id);
							    			InvLockItem{playerid} = false;

							    			if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
							    		}
							    		else if(Amount > 1)
							    		{
							    			InventClick{playerid} = i;
							    			SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
							    		}
										PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
									}
									case 2:
									{
										if(Amount == 1)
										{
							    			new id = HouseID[playerid];
							    			if(!ShkafAdd(playerid, id, Item, Amount, Color, Enchant, Mining)) return InvLockItem{playerid} = false;

							    			PI[playerid][pInvItem][i] = 0;
							    			PI[playerid][pInvItemAmount][i] = 0;
							    			PI[playerid][pInvItemColor][i] = 0;
							    			PI[playerid][pInvItemEnchant][i] = 0;
							    			PI[playerid][pInvItemMining][i] = 1;

							    			InvSlotUpdate(playerid, i);
							    			aml(63, playerid, "", "", Amount, Item, id);
							    			InvLockItem{playerid} = false;

							    			if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
										}
										else if(Amount > 1)
										{
							    			InventClick{playerid} = i;
							    			SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
										}
										PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
									}
									case 3:
									{
										if(Amount == 1)
										{
											new id = idaofcar[playerid];
							    			if(!TrunkAdd(playerid, id, Item, Amount, Color, Enchant, Mining)) return InvLockItem{playerid} = false;
							    			
							    			PI[playerid][pInvItem][i] = 0;
							    			PI[playerid][pInvItemAmount][i] = 0;
							    			PI[playerid][pInvItemColor][i] = 0;
							    			PI[playerid][pInvItemEnchant][i] = 0;
							    			PI[playerid][pInvItemMining][i] = 1;

							    			InvSlotUpdate(playerid, i);
							    			aml(73, playerid, "", "", Amount, Item, id);
							    			InvLockItem{playerid} = false;

							    			if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
										}
										else if(Amount > 1)
										{
							    			InventClick{playerid} = i;
							    			SPD(playerid, 8248, DIALOG_STYLE_INPUT, !"", "{FFFFFF}Введите количество, которое хотите положить", !"Выбрать", !"Отмена");
										}
										PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
									}
								}
							}
							else if(BuyStatus{playerid}) InfoItem(playerid, i);
						}
					}
					else
					{
						if(InventClick{playerid} >= 108)
						{
							if(!PI[playerid][pInvItem][i])
							{
								new id = InventClick{playerid}-108, item, color, Enchant;
								if(InvCarOpen{playerid})
								{
									if(id >= 6) return 1;
									new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
									item = CarInfo[number][cSlotItem][id];


									CarInfo[number][cSlotItem][id] = 0;

									AttachDestroy(number, id, 1);
									UpdateSlotModCar(playerid, id, number);
									PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

									SaveInv(number, 5, id);
								}
								else
								{
									item = PI[playerid][pInvItemAcs][id];
									color = PI[playerid][pInvItemAcsColor][id];
									Enchant = PI[playerid][pInvItemAcsEnchant][id];

									PI[playerid][pInvItemAcs][id] = 0;
									PI[playerid][pInvItemAcsColor][id] = 0;
									PI[playerid][pInvItemAcsEnchant][id] = 0;

									UpdateSlotAcs(playerid, id);
									RemovePlayerAttachedObject(playerid, id);

									if(SAVE_PLAYER_INV) SaveInv(playerid, 2, id);
								}

								PI[playerid][pInvItem][i] = item;
								PI[playerid][pInvItemAmount][i] = 1;
								PI[playerid][pInvItemColor][i] = color;
								PI[playerid][pInvItemEnchant][i] = Enchant;

								InvSlotUpdate(playerid, i);
								Valik(playerid);
								PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

								if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
							}
							else Valik(playerid);
						}
						else if(InventClick{playerid} < 108)
						{
							CheckInvItem(playerid, 0);
							new Slot = InventClick{playerid};

							new Item_1 = PI[playerid][pInvItem][i];
							new Item_1_Amount = PI[playerid][pInvItemAmount][i];
							new Item_1_Color = PI[playerid][pInvItemColor][i];
							new Item_1_Enchant = PI[playerid][pInvItemEnchant][i];
                            new Item_1_Mining = PI[playerid][pInvItemMining][i];

							new Item_2 = PI[playerid][pInvItem][Slot];
							new Item_2_Amount = PI[playerid][pInvItemAmount][Slot];
							new Item_2_Color = PI[playerid][pInvItemColor][Slot];
				   		 	new Item_2_Enchant = PI[playerid][pInvItemEnchant][Slot];
				   		 	new Item_2_Mining = PI[playerid][pInvItemMining][Slot];

							if(Item_1 != Item_2)
							{
							    PI[playerid][pInvItem][Slot] = Item_1;
							    PI[playerid][pInvItemAmount][Slot] = Item_1_Amount;
							    PI[playerid][pInvItemColor][Slot] = Item_1_Color;
							    PI[playerid][pInvItemEnchant][Slot] = Item_1_Enchant;
                                PI[playerid][pInvItemMining][Slot] = Item_1_Mining;
                                
							    PI[playerid][pInvItem][i] = Item_2;
							    PI[playerid][pInvItemAmount][i] = Item_2_Amount;
							    PI[playerid][pInvItemColor][i] = Item_2_Color;
							    PI[playerid][pInvItemEnchant][i] = Item_2_Enchant;
                                PI[playerid][pInvItemMining][i] = Item_2_Mining;
                                
							    InvSlotUpdate(playerid, Slot);
							    InvSlotUpdate(playerid, i);

							    SetSelectableForItem(playerid, Slot, 1);
							    HideInventMenu(playerid);
				        		InventClick{playerid} = 255;
							    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

							    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, Slot);
							    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
							}
							else if(Slot == i)
							{
								SetSelectableForItem(playerid, Slot, 1);
								HideInventMenu(playerid);
								InventClick{playerid} = 255;
							}
							else if(Item_1 == Item_2)
							{
							    new Max_Amount = ItemsInfo[Item_1][MaxItem];
							    new amount = PI[playerid][pInvItemAmount][i] + PI[playerid][pInvItemAmount][Slot];
							    if(amount <= Max_Amount) PI[playerid][pInvItemAmount][i] += PI[playerid][pInvItemAmount][Slot];
							    else
							    {
							        if(PI[playerid][pInvItemAmount][i] != Max_Amount && PI[playerid][pInvItemAmount][Slot] != Max_Amount)
							        {
							            PI[playerid][pInvItemAmount][Slot] = amount - Max_Amount;
							            PI[playerid][pInvItemAmount][i] = Max_Amount;
							        }
							        else
							        {
							            new Item = PI[playerid][pInvItem][i];
							            new Amount = PI[playerid][pInvItemAmount][i];
							            new Color = PI[playerid][pInvItemColor][i];
							            new Enchant = PI[playerid][pInvItemEnchant][i];
										new Mining = PI[playerid][pInvItemMining][i];
										
							            PI[playerid][pInvItem][i] = PI[playerid][pInvItem][Slot];
							            PI[playerid][pInvItemAmount][i] = PI[playerid][pInvItemAmount][Slot];
							            PI[playerid][pInvItemColor][i] = PI[playerid][pInvItemColor][Slot];
							            PI[playerid][pInvItemEnchant][i] = PI[playerid][pInvItemEnchant][Slot];
							            PI[playerid][pInvItemMining][i] = PI[playerid][pInvItemMining][Slot];

							            PI[playerid][pInvItem][Slot] = Item;
							            PI[playerid][pInvItemAmount][Slot] = Amount;
							            PI[playerid][pInvItemColor][Slot] = Color;
							            PI[playerid][pInvItemEnchant][Slot] = Enchant;
							            PI[playerid][pInvItemMining][Slot] = Mining;
							        }
							    }
							    if(amount <= Max_Amount)
							    {
							        PI[playerid][pInvItem][Slot] = 0;
							        PI[playerid][pInvItemAmount][Slot] = 0;
							        PI[playerid][pInvItemColor][Slot] = 0;
							        PI[playerid][pInvItemEnchant][Slot] = 0;
							        PI[playerid][pInvItemMining][Slot] = 1;
							    }

							    InvSlotUpdate(playerid, Slot);
							    InvSlotUpdate(playerid, i);

				        		SetSelectableForItem(playerid, Slot, 1);
				        		HideInventMenu(playerid);
							    InventClick{playerid} = 255;
						    	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

							    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, Slot);
							    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
							}
						}	
					}
				}
			}
			if(i >= 1 && i < 9)
			{
				if(playertextid == boomtext_p[playerid][i])
				{
					if(NumMusic[playerid] != 0) return 1;
		      		foreach(Player, j)
					{
					    if(IsPlayerInRangeOfPoint(j, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(j);
							PlayAudioStreamForPlayerFix(j, BumInfo[Music[playerid]+8-i][bMusic], BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
					NumMusic[playerid] = Music[playerid]+8-i;
					ShowMenuBoom(playerid);
				}
			}
		}
		if(playertextid == Invent_Trade[playerid][19])//купира (сделать отображение цвета предмета которого передают)
		{
            str_2[0] = EOS, str_1[0] = EOS;
            f(str_1, 100, "{BEA555}Обмен с игроком %s\n\n{FFFFFF}Вы предлагаете:", PN(TradeID[playerid]));
            static count[32];
            count[0] = EOS;
            for(new i; i < 10; i++)
            {
                if(!PI[playerid][pTradeItem][i]) continue;
                if(PI[playerid][pTradeItemAmount][i] != 0) f(count, sizeof(count), "\t{8F8FDC}[%i шт]{FFFFFF}", PI[playerid][pTradeItemAmount][i]);
                f(str_1, sizeof(str_1), "%s\n - %s%s", str_1, ItemsInfo[PI[playerid][pTradeItem][i]][ItemName], count);
            }
            if(TradeMoney[playerid]) f(str_2, 100, "\n - {7BAF6D}%i$", TradeMoney[playerid]), strcat(str_1,str_2);
            if(TradeEURO[playerid]) f(str_2, 100, "\n - {7BAF6D}%i EURO", TradeEURO[playerid]), strcat(str_1,str_2);
            if(TradeBTC[playerid]) f(str_2, 100, "\n - {7BAF6D}%i BTC", TradeBTC[playerid]), strcat(str_1,str_2);
            strcat(str_1, "\n\n\n{FFFFFF}Вам предлагают:\n");
            new id = TradeID[playerid];
            count[0] = EOS;
            for(new i; i < 10; i++)
            {
                if(!PI[id][pTradeItem][i]) continue;
                if(PI[id][pTradeItemAmount][i] != 0) f(count, sizeof(count), "\t{8F8FDC}[%i шт]{FFFFFF}", PI[id][pTradeItemAmount][i]);
                f(str_1, sizeof(str_1), "%s\n - %s%s", str_1, ItemsInfo[PI[id][pTradeItem][i]][ItemName], count);
            }
            if(TradeMoney[id]) f(str_2, 100, "\n - {7BAF6D}%i$", TradeMoney[id]), strcat(str_1,str_2);
            if(TradeEURO[id]) f(str_2, 100, "\n - {7BAF6D}%i EURO", TradeEURO[id]), strcat(str_1,str_2);
            if(TradeBTC[id]) f(str_2, 100, "\n - {7BAF6D}%i BTC", TradeBTC[id]), strcat(str_1,str_2);
            SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Обмен", str_1, !"Выйти", !"");
		}
		if(playertextid == Invent_Trade[playerid][17])//отмена
		{
			HideTrade(playerid);
			HideTrade(TradeID[playerid]);
			CancelTrade(playerid);
		}
        if(playertextid == Invent_Trade[playerid][5]) //передача
        {
            if(TradeMoney[playerid]) TradeMoney[playerid] = 0, UpdateTradeMoney(playerid, 0);
            if(TradeEURO[playerid]) TradeEURO[playerid] = 0, UpdateTradeEURO(playerid, 0);
            if(TradeBTC[playerid]) TradeBTC[playerid] = 0, UpdateTradeBTC(playerid, 0);
            ShowTradeExchange(playerid);
        }
		if(playertextid == Invent_Trade[playerid][15])
		{
			new id = TradeID[playerid];
			if(TradeLock{playerid} == 0)
			{
				TradeLock{playerid} = 1;
				PlayerTextDrawColor(playerid, Invent_Trade[playerid][15], 0x68BE55FF);
				PlayerTextDrawShow(playerid, Invent_Trade[playerid][15]);
			}
			else if(TradeLock{playerid} == 1)
			{
				TradeLock{playerid} = 0;
				PlayerTextDrawColor(playerid, Invent_Trade[playerid][15], InvColor[PI[playerid][pInvColor]][1]);
				PlayerTextDrawShow(playerid, Invent_Trade[playerid][15]);
			}
			else if(TradeLock{playerid} == 2)
			{
				TradeLock{playerid} = 3;
				SCM(playerid, COLOR_GREY, !"Вы подтвердили сделку!");
				SCM(id, COLOR_GREY, !"Игрок подтвердил сделку!");
			}
			for(new i; i < 10; i++)
			{
				PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], !TradeLock{playerid} ? 1 : 0);
				PlayerTextDrawSetSelectable(id, Invent_Menu_Page[id][i+10], !TradeLock{playerid} ? 1 : 0);
				PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], TradeLock{playerid} ? 0x999999FF : 0xFFFFFFFF);
				PlayerTextDrawColor(id, Invent_Menu_Page[id][i+10], TradeLock{playerid} ? 0x999999FF : 0xFFFFFFFF);
				PlayerTextDrawShow(playerid, Invent_Menu_Page[playerid][i]);
				PlayerTextDrawShow(id, Invent_Menu_Page[id][i+10]);
			}
			if(TradeLock{playerid} == 1 && TradeLock{id} == 1)
			{
				SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{ff0000}Предупреждение!", !"{FFFFFF}Перед тем как подтвердить сделку, советуем всё тщательно перепроверить.", !"Закрыть", !"");
				if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Trade[playerid][16], "TRADE");
				else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][16], FixText("ТОРГ"));
				TradeLock{playerid} = 2;

				SPD(id, 0, DIALOG_STYLE_MSGBOX, !"{ff0000}Предупреждение!", !"{FFFFFF}Перед тем как подтвердить сделку, советуем всё тщательно перепроверить.", !"Закрыть", !"");
				if(!PI[id][pInvLang]) PlayerTextDrawSetString(id, Invent_Trade[id][16], "TRADE");
				else PlayerTextDrawSetString(id, Invent_Trade[id][16], FixText("ТОРГ"));
				TradeLock{id} = 2;
			}
			if(TradeLock{playerid} == 4 && TradeLock{id} != 4) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже подтвердили сделку! Для отмены нажмите - Отмена");
			if(TradeLock{playerid} == 4 && TradeLock{id} == 4)
			{
				SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Сделка прошла успешно.");
				SCM(id, COLOR_GREEN, !"[Информация] {FFFFFF}Сделка прошла успешно.");
				for(new i; i < 10; i++)
				{
					if(PI[playerid][pTradeItem][i])
					{
						new ID = PI[playerid][pTradeInvID][i];

						PI[playerid][pInvItemAmount][ID] -= PI[playerid][pTradeItemAmount][i];
						if(PI[playerid][pInvItemAmount][ID] <= 0) RefreshInv(playerid, ID, 0, 0);
						if(SAVE_PLAYER_INV) SaveInv(playerid, 1, ID);

						f(str_1, sizeof(str_1), "%s (id:%i)", ItemsInfo[PI[playerid][pTradeItem][i]][ItemName], PI[playerid][pTradeItem][i]);
						aml(60, playerid, PN(id), str_1, PI[playerid][pTradeItemAmount][i]);
					}
					if(PI[id][pTradeItem][i]) InvAdd(playerid, PI[id][pTradeItem][i], PI[id][pTradeItemAmount][i], 0, PI[id][pTradeItemColor][i], PI[id][pTradeItemEnchant][i], PI[id][pTradeItemMining][i]);
					if(PI[id][pTradeItem][i])
					{
						new ID = PI[id][pTradeInvID][i];

						PI[id][pInvItemAmount][ID] -= PI[id][pTradeItemAmount][i];
						if(PI[id][pInvItemAmount][ID] <= 0) RefreshInv(id, ID, 0, 0);
						if(SAVE_PLAYER_INV) SaveInv(id, 1, ID);

						f(str_1, sizeof(str_1), "%s (id:%i)", ItemsInfo[PI[id][pTradeItem][i]][ItemName], PI[id][pTradeItem][i]);
						aml(60, id, PN(playerid), str_1, PI[id][pTradeItemAmount][i]);
					}
					if(PI[playerid][pTradeItem][i]) InvAdd(id, PI[playerid][pTradeItem][i], PI[playerid][pTradeItemAmount][i], 0, PI[playerid][pTradeItemColor][i], PI[playerid][pTradeItemEnchant][i], PI[playerid][pTradeItemMining][i]);
				}
                new Float:total, Float:total2;
                if(PI[id][pWarns] > 0)
                {
                    if(TradeEURO[id] >= 1) total = TradeEURO[id] / 5 * PI[id][pWarns];
                    if(TradeMoney[id] >= 1) total = TradeMoney[id] / 10 * PI[id][pWarns];
                }
                else
                {
                    if(TradeEURO[id] >= 1) total = TradeEURO[id] / 3;
                    if(TradeMoney[id] >= 1) total = TradeMoney[id] / 6;
                }
                if(PI[playerid][pWarns] > 0)
                {
                    if(TradeEURO[playerid] >= 1) total2 = TradeEURO[playerid] / 5 * PI[playerid][pWarns];
                    if(TradeMoney[playerid] >= 1) total2 = TradeMoney[playerid] / 10 * PI[playerid][pWarns];
                }
                else
                {
                    if(TradeEURO[playerid] >= 1) total2 = TradeEURO[playerid] / 3;
                    if(TradeMoney[playerid] >= 1) total2 = TradeMoney[playerid] / 6;
                }
                if(TradeMoney[id] >= 1)
                {
                    GiveMoney(playerid, TradeMoney[id] - floatround(floatround(total, floatround_floor)));
                    GiveMoney(id, -TradeMoney[id]);
                    aml(50, id, PN(playerid), "передача денег (инвентарь)", TradeMoney[id]);
                }
                if(TradeMoney[playerid] >= 1)
                {
                    GiveMoney(id, TradeMoney[playerid] - floatround(floatround(total2, floatround_floor)));
                    GiveMoney(playerid, -TradeMoney[playerid]);
                    aml(50, playerid, PN(id), "передача денег (инвентарь)", TradeMoney[playerid]);
                }
                //
                if(TradeBTC[id] >= 1)
                {
                    f(str_1, sizeof(str_1), "BTC (amount:%i)", TradeBTC[id]);
                    aml(60, id, PN(playerid), str_1, TradeBTC[id]);
                    InvAdd(playerid, Item_Bitcoin, TradeBTC[id], 0);
                    InvAdd(id, Item_Bitcoin, -TradeBTC[id], 0);
                }
                if(TradeBTC[playerid] >= 1)
                {
                    f(str_1, sizeof(str_1), "BTC (amount:%i)", TradeBTC[playerid]);
                    aml(60, playerid, PN(id), str_1, TradeBTC[playerid]);
                    InvAdd(id, Item_Bitcoin, TradeBTC[playerid], 0);
                    InvAdd(playerid, Item_Bitcoin, -TradeBTC[playerid], 0);
                }
                //
                if(TradeEURO[id] >= 1)
                {
                    f(str_1, sizeof(str_1), "EURO (amount:%i)", TradeEURO[id]);
                    aml(60, id, PN(playerid), str_1, TradeEURO[id]);
                    InvAdd(playerid, 776, TradeEURO[id] - floatround(floatround(total, floatround_floor)), 0);
                    InvAdd(id, 776, -TradeEURO[id], 0);
                }
                if(TradeEURO[playerid] >= 1)
                {
                    f(str_1, sizeof(str_1), "EURO (amount:%i)", TradeEURO[playerid]);
                    aml(60, playerid, PN(id), str_1, TradeEURO[playerid]);
                    InvAdd(id, 776, TradeEURO[playerid] - floatround(floatround(total2, floatround_floor)), 0);
                    InvAdd(playerid, 776, -TradeEURO[playerid], 0);
                }

				HideTrade(playerid);
				HideTrade(id);
			}
			if(TradeLock{playerid} == 3 && TradeLock{id} == 3)
			{
				TradeLock{playerid} = 4;
				TradeLock{id} = 4;
			}
		}
		if(playertextid == Invent_Menu[playerid][1]) if(HouseEntered[playerid] == HouseID[playerid]) return SPD(playerid, 8255, DIALOG_STYLE_LIST, !"Выберите действие", "{42B02C}Положить\n{FF6347}Снять", !"Принять", !"Отмена");//Деньги в доме
		if(playertextid == Invent_Menu[playerid][2])//Смена страницы меню на 1
		{
			ShowMenuPage(playerid, 1, GetPVarInt(playerid, !"InvType"));
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent_Menu[playerid][3])//Смена страницы меню на 2
		{
			ShowMenuPage(playerid, 2, GetPVarInt(playerid, !"InvType"));
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent_Menu[playerid][4])//Смена страницы меню на 3
		{
			ShowMenuPage(playerid, 3, GetPVarInt(playerid, !"InvType"));
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent_Menu[playerid][5])//Смена страницы меню на 4
		{
			ShowMenuPage(playerid, 4, GetPVarInt(playerid, !"InvType"));
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent_Menu[playerid][6])//Смена страницы меню на 5
		{
			ShowMenuPage(playerid, 5, GetPVarInt(playerid, !"InvType"));
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent[playerid][13])//Смена страницы на 1
	    {
	        ShowInvPage(playerid, 1);
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	    }
	    if(playertextid == Invent[playerid][14])//Смена страницы на 2
	    {
	        ShowInvPage(playerid, 2);
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	    }
	    if(playertextid == Invent[playerid][15])//Смена страницы на 3
	    {
	        ShowInvPage(playerid, 3);
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	    }
	    if(playertextid == Invent[playerid][18])
	    {
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	        callcmd::help(playerid);
	    }
		if(playertextid == Invent[playerid][20])
		{
		    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::report(playerid);
		}
	    if(playertextid == Invent[playerid][22])
	    {
		    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	    	callcmd::gps(playerid);
	    }
	    if(playertextid == Invent[playerid][25])
	    {
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	        callcmd::menu(playerid);
	    }
		if(playertextid == Invent[playerid][27])
		{
		    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			ShowUpdateSettings(playerid);
		}
		if(playertextid == Invent[playerid][29])
		{
		    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::cars(playerid);
		}
		if(playertextid == Invent[playerid][31])
		{
		    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::bizinfo(playerid);
		}
	    if(playertextid == Invent[playerid][33])
	    {
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	        ShowDonate(playerid);
	    }
		if(playertextid == Invent[playerid][35])
		{
		    PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			callcmd::fammenu(playerid);
		}
	    if(playertextid == Invent[playerid][41])
	    {
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	        callcmd::quest(playerid);
	    }
	   	if(playertextid == Invent[playerid][48])
	    {
			if(UseAcsID[playerid]) return false;
	    	UseSkin(playerid);
			if(InventClick{playerid} < 108)
			{
			    SetSelectableForItem(playerid, InventClick{playerid}, 1);
			    HideInventMenu(playerid);
			    InventClick{playerid} = 255;
			}
	    }
	    if(playertextid == Invent[playerid][50])
	    {
	        PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	        callcmd::showpass(playerid, IntToStr(playerid));
	    }
	    if(playertextid == Invent[playerid][9] && !MenuStatus{playerid} && !TradeOpen{playerid})
	    {
			SetPVarInt(playerid, !"InvPage", InventPage[playerid]);
			CancelSelectTextDrawEx(playerid);
			HideInv(playerid);
			ShowInv(playerid, 0, GetPVarInt(playerid, !"InvPage"));
			if(PI[playerid][pInvBlack])
			{
				PI[playerid][pInvBlack] = 0;
		    	UpdatePlayerDataInt(playerid, "InvBlack", PI[playerid][pInvBlack]);
		    	PI[playerid][pInvColor] = 0;
		    	ChangeInvColor(playerid, PI[playerid][pInvColor]);
		    	SaveChangeInv(playerid);
		    }
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Изменение цвета", !"{FFFFFF}Вы включили редактор основного цвета инвентаря!\nДля изменения цвета используйте {FFBD3F}СТРЕЛКИ{FFFFFF} на вашей клавиатуре\nЕсли вы хотите сохранить изменения нажмите '{FFBD3F}F{FFFFFF}' или '{FFBD3F}ENTER{FFFFFF}'", !"Выход", !"");
			TogglePlayerControllable(playerid, false);
			InvTimer[playerid] = SetTimerEx("InvChangeColor", 100, true, "i", playerid);
			DeletePVar(playerid, !"InvPage");
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent[playerid][11] && !MenuStatus{playerid} && !TradeOpen{playerid} && InventClick{playerid} == 255) InventorySorting(playerid);
		if(playertextid == Invent[playerid][7] && !MenuStatus{playerid} && !TradeOpen{playerid})
		{
			SetPVarInt(playerid, !"InvPage", InventPage[playerid]);
		    CancelSelectTextDrawEx(playerid);
			HideInv(playerid);
			ShowInv(playerid, 0, GetPVarInt(playerid, !"InvPage"));
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Изменение позиций", "{FFFFFF}Вы включили редактор позиций инвентаря!\nДля изменения позиций используйте {FFBD3F}СТРЕЛКИ{FFFFFF} на вашей клавиатуре\nЗажимайте '{FFBD3F}ALT{FFFFFF}' чтобы двигать медленно или '{FFBD3F}SHIFT{FFFFFF}' чтобы быстрее\nЕсли вы хотите сохранить изменения нажмите '{FFBD3F}F{FFFFFF}' или '{FFBD3F}ENTER{FFFFFF}'", !"Выход", !"");
			TogglePlayerControllable(playerid, false);
			InvTimer[playerid] = SetTimerEx("InvChangePos", 100, true, "i", playerid);
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		if(playertextid == Invent[playerid][5] && !MenuStatus{playerid} && !TradeOpen{playerid})
		{
			SetPVarInt(playerid, !"InvPage", InventPage[playerid]);
		    CancelSelectTextDrawEx(playerid);
			HideInv(playerid);
			ShowInv(playerid, 0, GetPVarInt(playerid, !"InvPage"));
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Изменение размеров", !"{FFFFFF}Вы включили редактор размера инвентаря!\nДля изменения размера используйте {FFBD3F}СТРЕЛКИ{FFFFFF} на вашей клавиатуре\nЗажимайте '{FFBD3F}ALT{FFFFFF}' чтобы менять размер медленно или '{FFBD3F}SHIFT{FFFFFF}' чтобы быстрее\nЕсли вы хотите сохранить изменения нажмите '{FFBD3F}F{FFFFFF}' или '{FFBD3F}ENTER{FFFFFF}'", !"Выход", !"");
			TogglePlayerControllable(playerid, false);
			InvTimer[playerid] = SetTimerEx("InvChangeSize", 100, true, "i", playerid);
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		}
		for(new i; i < 6; i++) if(InventMenuButton[playerid][i] != -1 && playertextid == InventMenu[playerid][InventMenuButton[playerid][i]]) Bogdan(playerid, i);
		for(new i; i < 8; i++)
		{
			if(playertextid == InventAks[playerid][i])
			{
				if(!InvCarOpen{playerid}) 
				{
					switch(UseAcsID[playerid])
					{
						case AcsSlot1: UseAks(playerid, 1);//1-ый слот
						case AcsSlot2: UseAks(playerid, 2);//2-ый слот
						case AcsSlot3: UseAks(playerid, 3);//3-ый слот
						case AcsSlot4: UseAks(playerid, 4);//4-ый слот
						case AcsSlot5: UseAks(playerid, 5);//5-ый слот
						case AcsSlot6: UseAks(playerid, 6);//6-ый слот
						case AcsSlot7: UseAks(playerid, 7);//7-ый слот
						case AcsSlot8: UseAks(playerid, 8);//8-ый слот
						default: UseAks(playerid, i+1);
					}
				}
				else UseCarMod(playerid, i+1);
			}
		}
		if(playertextid == InventButton[playerid][0])
		{
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			if(MenuStatus{playerid} && !EnchantOpen{playerid})
			{
				new page = InventPage[playerid];
				HideInvMenu(playerid);
				ShowInv(playerid, 0, page);
				return 1;
			}
			new InvType = GetPVarInt(playerid, !"InvType");
			if(InvType == 2 && !IsAPlayerHouse(playerid, HouseID[playerid])) return false;
			if(InvType == 3 && !TrunkInfo[idaofcar[playerid]][tOpen]) return false;
			ShowInvMenu(playerid, InvType);
		}
	}
	if(playertextid == Item_Menu_Shop[playerid][2])
	{
		if(BuyPageSelectTable[playerid][1]) return false;
		ShowBuyPage(playerid, MenuPage[playerid]+1, GetPVarInt(playerid, !"BuyMenuType"));
		PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	}
	if(playertextid == Item_Menu_Shop[playerid][4])
	{
		if(BuyPageSelectTable[playerid][0]) return false;
		ShowBuyPage(playerid, MenuPage[playerid]-1, GetPVarInt(playerid, !"BuyMenuType"));
		PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	}
	//=============inv================
    if(donateopen{playerid})
    {
    	if(playertextid == Donate_Player[playerid][41]) return CancelSelectTextDraw(playerid);
		if(playertextid == Donate_Player[playerid][32])
		{
	    	if(Donate_Select[playerid] == -1) return SPD(playerid, 9159, DIALOG_STYLE_LIST, !"Выберите тип", !"{FFFFFF}[1] Перейти к выбору {73B461}аксессуаров\n{FFFFFF}[2] Перейти к выбору {73B461}скинов\n{FFFFFF}[3] Перейти к выбору {73B461}рулеток\n{FFFFFF}[4] Перейти к выбору {73B461}транспорта в Launch комплектации\n{FFFFFF}[5] Перейти к выбору {73B461}боксов\n{FFFFFF}[6] Перейти к выбору {73B461}телефонов", !"Выбрать", !"Отмена");
		    new ID = Donate_Select[playerid];
			SelectDonateItem(playerid, ID, -1);
		}
	    if(playertextid == Donate_Player[playerid][33])
		{
	    	if(Donate_Select[playerid] == -1) return SPD(playerid, 9159, DIALOG_STYLE_LIST, !"Выберите тип", !"{FFFFFF}[1] Перейти к выбору {73B461}аксессуаров\n{FFFFFF}[2] Перейти к выбору {73B461}скинов\n{FFFFFF}[3] Перейти к выбору {73B461}рулеток\n{FFFFFF}[4] Перейти к выбору {73B461}транспорта в Launch комплектации\n{FFFFFF}[5] Перейти к выбору {73B461}боксов\n{FFFFFF}[6] Перейти к выбору {73B461}телефонов", !"Выбрать", !"Отмена");
		    new ID = Donate_Select[playerid];
			SelectDonateItem(playerid, ID, 1);
	    }
		if(playertextid == Donate_Player[playerid][1])
		{
	    	if(Donate_Select[playerid] == -1) return 1;
		    new ID = Donate_Select[playerid];
		    BuyDonateItem(playerid, ID);
		}
		if(playertextid == Donate_Player[playerid][6])
		{
		    new ID = Donate_Select[playerid];
		    BuyDonateItem(playerid, ID);
		}
	    if(playertextid == Donate_Player[playerid][5])
		{
		    new ID = Donate_Select[playerid];
			SelectDonateItem(playerid, ID, 1, 1);
	    }
		if(playertextid == Donate_Player[playerid][7])
		{
		    new ID = Donate_Select[playerid];
			SelectDonateItem(playerid, ID, -1, 1);
		}
    }
    return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	//MapAndreas_FindAverageZ(fX, fY, fZ);
	fZ += 1;
	if(Taxi_GO[playerid] == 1)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsATaxi(carid))
	    {
	     	new driverid = GetVehicleSeat(carid, 0);
	     	if(PI[driverid][pJob] == JOB_TAXI)
			{
				if(TaxiTarif[driverid] > 0)
				{
				    EnableGPSForPlayer(driverid,fX, fY, fZ);
					SCMf(driverid, COLOR_GREY, "[Подсказка] {FFFFFF}%s выбрал(а) пункт. Он отмечен на карте .", cPN(playerid));
					SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}Вы выбрали пункт назначения.");
					Taxi_GO[playerid] = 2;
					return 1;
				}
			}
		}
	}
 	if(PI[playerid][pAdmin])
 	{
  		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) SetVehiclePos(GetPlayerVehicleID(playerid), fX, fY, fZ);
    	else J_SetPlayerPos(playerid, fX, fY, fZ);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
    }
    if(PI[playerid][pVIP] == 6)
    {
    	pTemp[playerid][pPosVIP][0] = fX;
    	pTemp[playerid][pPosVIP][1] = fY;
    	pTemp[playerid][pPosVIP][2] = fZ;
    }
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(!IsPlayerLogged{playerid}) return 0;
    if(result == -1)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Неизвестная команда! Введите /help для просмотра доступных функций.");
		return 0;
	}
    return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if(!IsPlayerLogged{playerid}) return 0;
	return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	new number = GetVehicleID(vehicleid);
    if(IsAOwnableCar(number))
	{
	    CarInfo[number][cColor_1] = color1;
	    CarInfo[number][cColor_2] = color2;
	    SaveOwnableCar(number);
	}
	return 1;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(!PI[playerid][pFeFinder])
    {
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsAVelik(carid) || GetVehicleInterior(carid) == 69 || IsARcCar(carid)) return 1;
		EngineStalled[playerid]++;
		if(EngineStalled[playerid] >= 3 && GetEngineStatus(carid))
		{
			SetEngineStatus(vehicleid, false, playerid);
			GameTextForPlayer(playerid, "ENGINE ~r~OFF", 1000, 6);
			EngineStalled[playerid]=0;
		}
	}
	if(IsACar(vehicleid)) {
	    if(PI[playerid][pCarSkillNo])
			return 1;

	    if(!PI[playerid][pCarSkill]) {
	        KillTimer(besttime[playerid]);
	        besttime[playerid] = 0;
		    besttime[playerid] = SetTimerEx("CarSkill", 600000, false, "d", playerid);
		    return 1;
	    }

		Carskill[playerid] ++;
		if(Carskill[playerid] == 4) {
		    GameTextForPlayer(playerid, !"CAR SKILL -2", 0, 1);
		    PI[playerid][pCarSkill] -= 2;
		    UpdatePlayerDataInt(playerid, "CarSkill", PI[playerid][pCarSkill]);
		    if(besttime[playerid]) {
		        KillTimer(besttime[playerid]);
		        besttime[playerid] = 0;
		    }
		    besttime[playerid] = SetTimerEx("CarSkill", 600000, false, "d", playerid);
		    Carskill[playerid] = 0;
	    }
    }
	return 1;
}
stock ShowInviteSettings(playerid)
{
	f(str_1, sizeof(str_1), "{FFFFFF}Инвайт во фракцию: %s\nРанг при авто-инвайте: %i", OrgInfo[PI[playerid][pMember]][oInvite] ? ("{73B461}Доступно") : ("{BE2D2D}Закрыто"), OrgInfo[PI[playerid][pMember]][oInviteRank]);
	return SPD(playerid, 1217, DIALOG_STYLE_LIST, !"{73B461}Авто-инвайт | {FFFFFF}Настройка", str_1, !"Принять", !"Отмена");
}
stock FindBizID(name[])
{
	new biz;
	for(new i; i < OWNABLEBIZES; i++)
	{
		if(GetString(BizInfo[i][bName], name))
		{
			biz = i;
			break;
		}
	}
	return biz;
}
stock ShowSletHouse(playerid)
{
    new house;
    str_2 = "{FFFFFF}";
    for(new i; i < OWNABLEHOUSES; i++)
	{
		if(house < 50)
		{
			if(HouseInfo[i][hNalog] >= 49000 || GetString(HouseInfo[i][hOwner], "The State")) house++;
		    if(HouseInfo[i][hNalog] >= 49000) f(str_2, sizeof(str_2), "%s\n%i. Дом\t\tСлетит через: {C9B931}%i{FFFFFF} Payday.", str_2, house, ((52000-HouseInfo[i][hNalog]) / GLS[2]) + 1);
		    if(GetString(HouseInfo[i][hOwner], "The State")) f(str_2, sizeof(str_2), "%s\n%i. Дом\t\tID: {C9B931}%i\t{FFFFFF}[{9ACD32}Слетел{FFFFFF}]", str_2, house, i);
		}
	}
	if(strlen(str_2) < 2) SPD(playerid, 0, 0, !"", !"{FFFFFF}На данный момент доступной информации нет.", !"Принять", !"");
	else
	{
	    f(str_2, sizeof(str_2), "%s\n\n{FFFFFF}Используйте {1EA3CC}/findihouse ID{FFFFFF}, чтобы найти нужный вам дом. Стоимость {1EA3CC}1.000.000$.{FFFFFF}\n\
	    {D35235}ID {FFFFFF}бизнеса отображается только у {D35235}слетевших {FFFFFF}домов!", str_2);
		SPD(playerid, 0, 0, !"", str_2, !"Принять", !"");
	}
	return 1;
}
stock ShowSletBiz(playerid)
{
    new biz;
    str_2 = "{FFFFFF}";
    for(new i; i < OWNABLEBIZES; i++)
	{
		if(biz < 50)
		{
			if(BizInfo[i][bNalog] >= 92000 || GetString(BizInfo[i][bOwner], "The State")) biz++;
		    if(BizInfo[i][bNalog] >= 92000) f(str_2, sizeof(str_2), "%s\n%i. Биз\t\tСлетит через: {C9B931}%i{FFFFFF} Payday.{FFFFFF}", str_2, biz, ((100000-BizInfo[i][bNalog]) / GLS[3]) + 1);
		    if(GetString(BizInfo[i][bOwner], "The State")) f(str_2, sizeof(str_2), "%s\n%i. Биз\t\tID: {C9B931}%i\t{FFFFFF}[{9ACD32}Слетел{FFFFFF}]\tТип: {C9B931}%s{FFFFFF}", str_2, biz, i, BizInfo[i][bName]);
		}
	}
	if(strlen(str_2) < 2) SPD(playerid, 0, 0, !"", !"{FFFFFF}На данный момент доступной информации нет.", !"Принять", !"");
	else
	{
	    f(str_2, sizeof(str_2), "%s\n\n{FFFFFF}Используйте {1EA3CC}/findibiz ID{FFFFFF}, чтобы найти нужный вам бизнес. Стоимость {1EA3CC}1.000.000$.{FFFFFF}\n\
	    {D35235}ID {FFFFFF}бизнеса отображается только у {D35235}слетевших {FFFFFF}бизнесов!", str_2);
		SPD(playerid, 0, 0, !"", str_2, !"Принять", !"");
	}
	return 1;
}
stock ShowPhoneMenu(playerid)
{
	f(str_1, sizeof(str_1), "{B03131}[1]{FFFFFF} Настройки\n{B03131}[2]{FFFFFF} Таймер (Будильник)\n{B03131}[3]{FFFFFF} Номера/мониторинг гос. работников\n{B03131}[4]{FFFFFF} Селфи{B03131}\n{B03131}[5]{FFFFFF} Радио[%s{FFFFFF}]\n{B03131}[6]{FFFFFF} Проверить баланс\n{B03131}[7]{FFFFFF} Перевести телефон в режим \"%s\"\n{B03131}[8]{FFFFFF} Убрать телефон\n{B03131}[9]{FFFFFF} Отдел коммерции\n{B03131}[10]{FFFFFF} Отдел недвижимости", PlayerPlayed{playerid} ? ("{7def58}ВКЛ") : ("{ef5858}ВЫКЛ"), PI[playerid][pTelWork] ? ("Самолет") : ("Обычный"));
	SPD(playerid, 966, DIALOG_STYLE_LIST, !"Меню", str_1, !"Принять", !"Отмена");
}
stock ShowPlayerBuyProd(playerid)
{
	return SPD(playerid, 7710, 1, !"", !"\
	{FFFFFF}Курс обмена:\n\n\
	{FFFF00}1 продукт = 200 AZ Coins\n\n\
	{FFFFFF}Введите количество продуктов, которое хотите купить", !"Изменить", !"Отмена");
}
stock GetCostID(ID)
{
	new cost;
	switch(ID)
	{
		case 849: cost = 500;//аксиома 1 стр
		case 850: cost = 500;
		case 851: cost = 500;
		case 852: cost = 500;
		case 853: cost = 500;
		case 854: cost = 500;
		case 855: cost = 350;
		case 856: cost = 200;
		case 857: cost = 210;
		case 858: cost = 200;
		case 859: cost = 380;
		case 860: cost = 320;
		case 861: cost = 370;
		case 862: cost = 370;
		case 863: cost = 320;
		case 864: cost = 360;
		case 865: cost = 130;
		case 866: cost = 370;
		case 867: cost = 390;
		case 868: cost = 390;
		case 869: cost = 180;
		case 870: cost = 190;
		case 871: cost = 270;
		case 872: cost = 220;
		case 873: cost = 290;
		case 874: cost = 320;
		case 875: cost = 240;
		case 876: cost = 160;
		case 877: cost = 350;
		case 878: cost = 200;
		case 879: cost = 200;//аксиома 2 стр
		case 880: cost = 130;
		case 881: cost = 320;
		case 882: cost = 300;
		case 883: cost = 130;
		case 884: cost = 260;
		case 885: cost = 290;
		case 886: cost = 350;
		case 887: cost = 180;
		case 888: cost = 320;
		case 889: cost = 190;
		case 890: cost = 330;
		case 891: cost = 260;
		case 892: cost = 260;
		case 893: cost = 130;
		case 894: cost = 230;
		case 895: cost = 240;
		case 896: cost = 160;
		case 897: cost = 230;
		case 898: cost = 210;
		case 899: cost = 200;
		case 900: cost = 240;
		case 901: cost = 340;
		case 902: cost = 140;
		case 903: cost = 130;
		case 904: cost = 150;
		case 905: cost = 200;
		case 906: cost = 230;
		case 907: cost = 150;
		case 908: cost = 280;
		case 909: cost = 200;//аксиома 3 стр
		case 910: cost = 300;
		case 911: cost = 190;
		case 912: cost = 210;
		case 913: cost = 300;
		case 914: cost = 310;
		case 915: cost = 170;
		case 916: cost = 140;
		case 917: cost = 360;
		case 918: cost = 380;
		case 919: cost = 180;
		case 920: cost = 370;
		case 921: cost = 150;
		case 922: cost = 180;
		case 923: cost = 140;
		case 924: cost = 270;
		case 925: cost = 160;
		case 926: cost = 240;
		case 927: cost = 280;
		case 928: cost = 270;
		case 929: cost = 260;
		case 930: cost = 350;
		case 931: cost = 330;
		case 932: cost = 220;
		case 933: cost = 210;
		case 934: cost = 350;
		case 935: cost = 160;
		case 936: cost = 380;
		case 937: cost = 170;
		case 938: cost = 200;
		case 939: cost = 350;//аксиома 4 стр
		case 940: cost = 250;
		case 941: cost = 390;
		case 942: cost = 200;
		case 943: cost = 1140;
		case 944: cost = 1000;
		case 945: cost = 160;
		case 946: cost = 160;
		case 947: cost = 230;
		case 948: cost = 340;
		case 949: cost = 300;
		case 950: cost = 280;
		case 951: cost = 270;
		case 952: cost = 200;
		case 953: cost = 350;
		case 954: cost = 160;
		case 955: cost = 350;
		case 956: cost = 140;
		case 957: cost = 5800000;//магаз запчестей 1 стр
		case 958: cost = 5400000;
		case 959: cost = 4400000;
		case 960: cost = 2400000;
		case 961: cost = 5400000;
		case 962: cost = 5200000;
		case 963: cost = 4000000;
		case 964: cost = 5600000;
		case 965: cost = 3800000;
		case 966: cost = 5800000;
		case 967: cost = 4400000;
		case 968: cost = 2800000;
		case 969: cost = 4000000;
		case 970: cost = 5800000;
		case 971: cost = 4200000;
		case 972: cost = 5400000;
		case 973: cost = 4800000;
		case 974: cost = 4400000;
		case 975: cost = 2600000;
		case 976: cost = 3800000;
		case 977: cost = 2200000;
		case 978: cost = 4600000;
		case 979: cost = 2400000;
		case 980: cost = 2900000;
		case 981: cost = 5200000;
		case 982: cost = 5400000;
		case 983: cost = 2200000;
		case 984: cost = 5400000;
		case 985: cost = 5400000;
		case 986: cost = 5400000;
		case 987: cost = 4400000;//магаз запчестей 2 стр
		case 988: cost = 5600000;
		case 989: cost = 2400000;
		case 990: cost = 5600000;
		case 991: cost = 3000000;
		case 992: cost = 4800000;
		case 993: cost = 4200000;
		case 994: cost = 2600000;
		case 995: cost = 5800000;
		case 996: cost = 3600000;
		case 997: cost = 4800000;
		case 998: cost = 5800000;
		case 999: cost = 4600000;
		case 1000: cost = 5200000;
		case 1001: cost = 4200000;
		case 1002: cost = 4000000;
		case 1003: cost = 4800000;
		case 1004: cost = 3800000;
		case 1005: cost = 5000000;
		case 1006: cost = 3000000;
		case 1007: cost = 3000000;
		case 1008: cost = 3200000;
		case 1009: cost = 2000000;
		case 1010: cost = 4000000;
		case 1011: cost = 4800000;
		case 1012: cost = 4400000;
		case 1013: cost = 2400000;
		case 1014: cost = 4600000;
		case 1015: cost = 3800000;
		case 1016: cost = 2600000;
		case 1017: cost = 3400000;//магаз запчестей 3 стр
		case 1018: cost = 5200000;
		case 1019: cost = 2000000;
		case 1020: cost = 5600000;
		case 1021: cost = 5800000;
		case 1022: cost = 5000000;
		case 1023: cost = 4600000;
		case 1024: cost = 4600000;
		case 1025: cost = 3000000;
		case 1026: cost = 2800000;
		case 1027: cost = 2400000;
		case 1028: cost = 3000000;
		case 1029: cost = 5200000;
		case 1030: cost = 5200000;
		case 1031: cost = 3600000;
		case 1032: cost = 2200000;
		case 1033: cost = 2800000;
		case 1034: cost = 5000000;
		case 1035: cost = 3600000;
		case 1036: cost = 2200000;
		case 1037: cost = 4400000;
		case 1038: cost = 2800000;
		case 1039: cost = 4600000;
		case 1040: cost = 2800000;
		case 1041: cost = 3800000;
		case 1042: cost = 2600000;
		case 1043: cost = 4800000;
		case 1044: cost = 2400000;
		case 1045: cost = 2600000;
		case 1046: cost = 3000000;
		case 1047: cost = 3400000;//магаз запчестей 4 стр
		case 1048: cost = 2200000;
		case 1049: cost = 5200000;
		case 1050: cost = 5200000;
		case 1051: cost = 4400000;
		case 1052: cost = 3800000;
		case 1053: cost = 2400000;
		case 1054: cost = 2600000;
		case 1055: cost = 5600000;
		case 1056: cost = 5600000;
		case 1057: cost = 3800000;
		case 1058: cost = 4600000;
		case 1059: cost = 3400000;
		case 1060: cost = 3600000;
		case 1061: cost = 4600000;
		case 1062: cost = 2800000;
		case 1063: cost = 4200000;
		case 1064: cost = 5200000;
		case 1065: cost = 3000000;
		case 1066: cost = 5800000;
		case 1067: cost = 3000000;
		case 1068: cost = 500000;
		case 1069: cost = 5800000;
		case 1070: cost = 2800000;
		case 1071: cost = 2200000;
		case 1072: cost = 3200000;
		case 1073: cost = 3400000;
		case 1074: cost = 4000000;
		case 1075: cost = 2200000;
	}
	return cost;
}
stock EditOwnableCarObject(playerid, slot)
{
	//SCM(playerid, -1, "EditOwnableCarObject");
	if(AttachEdit{playerid}) return 0;
	new Float:X,Float:Y,Float:Z, carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) return false;
	if(IsPlayerInHisVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		GetVehiclePos(carid, X, Y, Z);
		SetVehicleZAngle(carid, 0.0);
		if(CarInfo[number][cObjectPosX][slot]) X = CarInfo[number][cObjectPosX][slot];
		if(CarInfo[number][cObjectPosY][slot]) Y = CarInfo[number][cObjectPosY][slot];
		if(CarInfo[number][cObjectPosZ][slot]) Z = CarInfo[number][cObjectPosZ][slot];
		if(ObjectCarEdit[carid][slot]) DestroyDynamicObject(ObjectCarEdit[carid][slot]);
		ObjectCarSelect[playerid] = CreateDynamicObject(1934, X, Y, Z, CarInfo[number][cObjectRotX][slot], CarInfo[number][cObjectRotY][slot], CarInfo[number][cObjectRotZ][slot]);
		ObjectCarEdit[carid][slot] = CreateDynamicObject(CarInfo[number][cModelObject][slot], X, Y, Z, CarInfo[number][cObjectRotX][slot], CarInfo[number][cObjectRotY][slot], CarInfo[number][cObjectRotZ][slot]);
		PickObject[playerid] = slot;
		AttachEdit{playerid} = true;
		CarInfo[number][cLock] = 1;
		SetDoorsStatus(carid, 1, playerid);
		AttachDynamicObjectToVehicle(ObjectCarEdit[carid][slot], carid, X, Y, Z, CarInfo[number][cObjectRotX][slot], CarInfo[number][cObjectRotY][slot], CarInfo[number][cObjectRotZ][slot]);
		EditDynamicObject(playerid, ObjectCarSelect[playerid]);
		SetEngineStatus(carid, false, playerid);
	}
	SaveObjectVehicle(number);
	return 1;
}
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(!IsValidObject(objectid) || !IsValidObject(ObjectCarEdit[GetPlayerVehicleID(playerid)][PickObject[playerid]])) return CancelEdit(playerid);
	if(response == EDIT_RESPONSE_UPDATE)
	{
		if(objectid == ObjectCarSelect[playerid])
		{
			new carid = GetPlayerVehicleID(playerid);
			new Float:Tx,Float:Ty,Float:Tz,Float:Tr, ID = PickObject[playerid], obj = ObjectCarEdit[carid][ID];
			GetVehiclePos(carid,Tx,Ty,Tz);
			GetVehicleZAngle(carid, Tr);
			if(x-Tx >= 3.5 || y-Ty >= 3.5 || z-Tz >= 3.5) AttachDynamicObjectToVehicle(obj, carid, 3.5, 3.5, 3.5, rx, ry, rz-Tr);
			else AttachDynamicObjectToVehicle(obj, carid, x-Tx, y-Ty, z-Tz, rx, ry, rz-Tr);
		}
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		if(objectid == ObjectCarSelect[playerid])
		{
			new ID = PickObject[playerid];
			new carid = GetPlayerVehicleID(playerid);
			new number = GetVehicleID(carid);
			DestroyDynamicObject(ObjectCarSelect[playerid]);
			AttachDynamicObjectToVehicle
			(
				ObjectCarEdit[carid][ID],
				carid,
				CarInfo[number][cObjectPosX][ID],
				CarInfo[number][cObjectPosY][ID],
				CarInfo[number][cObjectPosZ][ID],
				CarInfo[number][cObjectRotX][ID],
				CarInfo[number][cObjectRotY][ID],
				CarInfo[number][cObjectRotZ][ID]
			);
			PickObject[playerid] = -1;
			AttachEdit{playerid} = false;
		}
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
		if(objectid == ObjectCarSelect[playerid])
		{
			new ID = PickObject[playerid];
			new Float:Tx,Float:Ty,Float:Tz,Float:Tr;
			new carid = GetPlayerVehicleID(playerid);
			new number = GetVehicleID(carid);
			DestroyDynamicObject(ObjectCarSelect[playerid]);
			if(ObjectCarEdit[carid][ID]) DestroyDynamicObject(ObjectCarEdit[carid][ID]);
			GetVehiclePos(carid,Tx,Ty,Tz);
			GetVehicleZAngle(carid, Tr);
			CarInfo[number][cObjectPosX][ID] = x-Tx;
			CarInfo[number][cObjectPosY][ID] = y-Ty;
			CarInfo[number][cObjectPosZ][ID] = z-Tz;
			CarInfo[number][cObjectRotX][ID] = rx;
			CarInfo[number][cObjectRotY][ID] = ry;
			CarInfo[number][cObjectRotZ][ID] = rz-Tr;
			CarInfo[number][cObjectUsed][ID] = 1;
			SaveObjectVehicle(number);
			ObjectCarEdit[carid][ID] = CreateDynamicObject(CarInfo[number][cModelObject][ID], Tx, Ty, Tz, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(ObjectCarEdit[carid][ID], carid, x-Tx, y-Ty, z-Tz, rx, ry, rz-Tr);
			PickObject[playerid] = -1;
			AttachEdit{playerid} = false;
		}
	}
	return true;
}

public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	if(type == SELECT_OBJECT_GLOBAL_OBJECT)
	{
	    for(new i; i < TOTALOBJECTS; i++)
	    {
	        if(objectid == ObjInfo[i][objectID])
	        {
	            f(str_1, sizeof(str_1), "Телепортироватся\nУдалить\n------------------------------\nUID объекта в базе: %i\nСоздатель: %s [uid: %i]\nДата создания: %s %s\nГруппа:Без названия [0]\nМетка: %s\nМодель обьекта: %i\nКоординаты: %f,%f,%f,%f,%f,%f",
				ObjInfo[i][objID],ObjInfo[i][objOwner],ObjInfo[i][objuidowner],ObjInfo[i][otime],ObjInfo[i][odate],ObjInfo[i][objName],ObjInfo[i][objModel],ObjInfo[i][objPosX],ObjInfo[i][objPosY],ObjInfo[i][objPosZ],ObjInfo[i][objRotX],ObjInfo[i][objRotY],ObjInfo[i][objRotZ]);
				SPD(playerid, 9073, 2, "Информация о выбранном объекте", str_1, "Выбрать", "Закрыть");
				CancelEdit(playerid);
				ObjectSelectMap[playerid] = i;
				break;
	        }
	    }
	}
	return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
    if(!playerobject)
    {
        if(!IsValidObject(objectid)) return 1;
        MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
    }
    if(response == EDIT_RESPONSE_FINAL)
    {
    	if(GetPVarInt(playerid, "obj_edit"))
    	{
    	    new id;
            if(ObjectSelectMap[playerid] == -1)
            {
				id = TOTALOBJECTS;
                new year,month,day,minuite,second,hour;
    			getdate(year,month,day);
   				gettime(hour,minuite,second);
	    	    f(str_1, 15, "%i:%i:%i",hour,minuite,second);
	    	    SetString(ObjInfo[id][otime], str_1);
	    	    f(str_1, 15, "%i/%i/%i",day,month,year);
	    	    SetString(ObjInfo[id][odate], str_1);
	    	    SetString(ObjInfo[id][objOwner], PN(playerid));
	    		SetString(ObjInfo[id][objName], ObjectNamePlayer[playerid]);
	    		ObjInfo[id][objuidowner] = PI[playerid][pID];
	    		if(id == 0) ObjInfo[id][objID] = 1;
	    		else ObjInfo[id][objID] = ObjInfo[id-1][objID]+1;
            }
			else id = ObjectSelectMap[playerid];

            ObjInfo[id][objModel] = GetPVarInt(playerid, "obj_model");
			ObjInfo[id][objPosX] = fX;
			ObjInfo[id][objPosY] = fY;
			ObjInfo[id][objPosZ] = fZ;

			ObjInfo[id][objRotX] = fRotX;
			ObjInfo[id][objRotY] = fRotY;
			ObjInfo[id][objRotZ] = fRotZ;

			DestroyObject(EditObjectPlayer[playerid]);
			ObjInfo[id][objectID] = CreateObject(ObjInfo[id][objModel], ObjInfo[id][objPosX], ObjInfo[id][objPosY], ObjInfo[id][objPosZ], ObjInfo[id][objRotX], ObjInfo[id][objRotY], ObjInfo[id][objRotZ]);

            if(ObjectSelectMap[playerid] == -1) mysql_pqueryf(mysql, "INSERT INTO `Objects` (`Owner`, `Name`, `Model`, `PosX`, `PosY`, `PosZ`, `RotX`, `RotY`, `RotZ`, `time`, `date`, `uidowner`) VALUES ('%s', '%s', '%i', '%f', '%f', '%f', '%f', '%f', '%f', '%s', '%s', '%i')", ObjInfo[id][objOwner], ObjInfo[id][objName], ObjInfo[id][objModel], ObjInfo[id][objPosX], ObjInfo[id][objPosY], ObjInfo[id][objPosZ], ObjInfo[id][objRotX], ObjInfo[id][objRotY], ObjInfo[id][objRotZ], ObjInfo[id][otime], ObjInfo[id][odate], ObjInfo[id][objuidowner]);
			else mysql_pqueryf(mysql, "UPDATE `Objects` SET `PosX` = '%f',`PosY` = '%f',`PosZ` = '%f',`RotX` = '%f',`RotY` = '%f',`RotZ` = '%f' WHERE `ID` = '%i'", ObjInfo[id][objPosX], ObjInfo[id][objPosY], ObjInfo[id][objPosZ], ObjInfo[id][objRotX], ObjInfo[id][objRotY], ObjInfo[id][objRotZ], ObjInfo[id][objID]);
			
			if(ObjectSelectMap[playerid] == -1)
			{
			    TOTALOBJECTS ++;
			    DeletePVar(playerid, "obj_edit");
				DeletePVar(playerid, "obj_model");
			}
			else ObjectSelectMap[playerid] = -1;
    	}
        return 1;
    }
    if(response == EDIT_RESPONSE_CANCEL)
    {
    	if(GetPVarInt(playerid, "obj_edit"))
    	{
    	    if(ObjectSelectMap[playerid] == -1)
			{
			    DeletePVar(playerid, "obj_edit");
				DeletePVar(playerid, "obj_model");
			    DestroyObject(EditObjectPlayer[playerid]);
	        	CancelEdit(playerid);
			}
			else ObjectSelectMap[playerid] = -1;
    	}
        return 1;
    }
    return 1;
}
//Войс
/*public SV_VOID:OnPlayerActivationKeyPress(
	SV_UINT:playerid,
	SV_UINT:keyid
) {
	if(keyid == 0x5A && BogdanVoice[playerid]) SvAttachSpeakerToStream(BogdanVoice[playerid], playerid);
}
public SV_VOID:OnPlayerActivationKeyRelease(
	SV_UINT:playerid,
	SV_UINT:keyid
) {
	if(keyid == 0x5A && BogdanVoice[playerid]) SvDetachSpeakerFromStream(BogdanVoice[playerid], playerid);
}*/
//Войс
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	printf("\n[MySQL Error]\nID соединения: %i\nID ошибки: %i\nОшибка: %s\nКоллбэк: %s\nЗапрос: %s\n",Float:handle, errorid, error, callback, query);
	return 1;
}
CMD:createcode(playerid)
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    return SPD(playerid, FREE_DLG, DIALOG_STYLE_INPUT, !"{73B461}Донат-коды | {FFFFFF}Создание", !"{FFFFFF}\
	- Введите кол-во активаций,кол-во аз рублей\n\
	Например: 50,20", !"Создать", !"Отмена");
}
CMD:code(playerid, params[])
{
	if(!CODE_CODE) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На данный момент не создано донат-кода!");
	if(PlayerUsedCode{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже использовали донат-код!");
	new code;
	if(sscanf(params,"d",code)) return SCM(playerid, COLOR_RED, !"Используйте: /code код"); 
	if(code != CODE_CODE) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный донат-код не создан!");
	if(!CODE_COUNT)
	{
		CODE_VALUE = 0;
		CODE_CODE = 0;
		CODE_COUNT = 0;
		foreach(new i: Player)
		{
			if(!PlayerUsedCode{i}) continue;
			PlayerUsedCode{i} = false;
		}
		return false;
	}
	CODE_COUNT--;
	PlayerUsedCode{playerid} = true;
	GiveDonateMoney(playerid, CODE_VALUE);
	aml(83, playerid, "", "активация кода", CODE_VALUE);
 	return SCMAllf(COLOR_RED, "[Внимание] {FFFF00}Только что игрок %s[%i] активировал донат-код на %i AZ-RUB. Осталось %i активаций, для активации: /code %i", PN(playerid), playerid, CODE_VALUE, CODE_COUNT, CODE_CODE);
}
CMD:captcha(playerid)
{
    SPD(playerid, 6235, DIALOG_STYLE_MSGBOX, "{FF6F00}Тренировка-Капчи", "{FFFFFF}Вы уверены, что начать проверку капчи?", "Да", "Нет");
    return true;
}
CMD:helpcars(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    extract params -> new numbers; else return SCM(playerid, COLOR_RED, "Используй: /helpcars [1-2]");
    if(numbers < 1 || numbers > 2) return SCM(playerid, COLOR_RED, "Используй: /helpcars [1-2]");
	if(numbers == 1)SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Car-List 1:\n\
	612 - Mercedes Акула\n 613 - Гелик\n 614 - Ауди РС6\n 662 - БМВ Х5\n 663 - Chevrolet Corvette\n 665 - Chevrolet Cruze\n 666 - Lexus LX\n 667 - Porsche 911\n 668 - Porsche Cayenne\n 699 - Bentley\n 793 - BMW M8\n 794 - Mercedes E63\n 909 - Mercedes C63\n 965 - Вольксваген Туарег\n 1194 - Ламборгини Урус\n 1195 - Audi Q8\n 1196 - Dodge Challenger\n 1197 - Acura NSX\n 1198 - Vovlo V60\n 1199 - Range Rover\n 1200 - Honda Civic\n 1201 - Lexus ES\n 1202 - Mustang GT\n 1203 - Volvo XC\n 1204 - Jaguar F-Pace\n 1205 - Kia Optima\n 3155 - BMW Cabriolet\n 3156 - Мерседес Кабан\n 3157 - БМВ Х5\n 3158 - Lexus rx450h\n 3194 - Diavel\n 3195 - Ducati\n 3196 - Ducnaked\n 3197 - ZX10RR\n 3198 - Western\n 3199 - Rolls Royce Cullinan\n 3200 - Вольксваген жук\n 3201 - Bugatti Divo\n 3202 - Buggati Chiron\n 3203 - Вольксваген Битли\n 3204 - Мерседес Бенз ГЛ\n 3205 - Мерседес Бенз Г65\n 3206 - Ламборгини Авентадор\n 3207 - Range Rover\n 3208 - BMW 530i\n 3209 - Mercedes Benz S600\n 3210 - Tesla Model X", !"ок", !"");
	if(numbers == 2) SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Car-List 2:\n\
	3211 - Nissan Leaf\n 3212 - Nissan Silvia\n 3213 - Subaru Forester XT\n 3215 - Subaru Legacy\n 3216 - Hyundai Sonata\n 3217 - BMW 750I\n 3218 - Mercedes-Benz E 55 AMG\n 3219 - Mercedes-Benz E500\n 3220 - JStorm\n 3222 - MCQueen\n 3223 - Fayzer\n 3224 - Buckingham\n 3232 - Infinity FX50S\n 3233 - Lexus RX450h\n 3234 - Kia Sportage\n 3235 - Volkswagen Golf\n 3236 - Audi R8\n 3237 - Toyota Camry 2010\n 3238 - Toyota Camry 2018\n 3239 - BMW M5 E60\n 3240 - BMW M5 F90\n 3245 - Mersedes Maybach S650\n 3247 - Mersedes AMG GT\n 3248 - Porsche Panamera\n 3251 - Volkswagen Passat\n 3254 - Chevrole Corvette 1980\n 3266 - Dodge SRT\n 3348 - GT500", !"ок", !"");

	return 1;
}
CMD:sobes(playerid)
{
	new string[1500];
	new str[256];
	new time[64];
	new mesto[64];
	new cont;
	strcat(string,"Организация\tЗапланировано\tМесто\n");
	for(new i = 1; i < MAX_ORGS; i++)
	{
		switch(i)
		{
		case TEAM_LSPD,TEAM_PDLV,TEAM_LVPD,TEAM_FBI,TEAM_ARMY,TEAM_ARMYLV,TEAM_LICENSERS,TEAM_SFPD,TEAM_MEDICLV,TEAM_MERIALS,TEAM_BANK,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMYSF: cont=1;
		default: cont=0;
		}
		if(cont==1)
		{
			if(SobesStatus[i]==1)
			{
				format(time,sizeof(time),"{CBEC39}%s{FFFFFF}",SobesTime[i]);
				format(mesto,sizeof(mesto),"{CBEC39}%s{FFFFFF}",SobesMesto[i]);
			}
			else
			{
				format(time,sizeof(time),"{D2D0C9}Не запланировано{FFFFFF}");
				format(mesto,sizeof(mesto),"{D2D0C9}Не назначено!{FFFFFF}");
			}
		    format(str,sizeof(str),"{FFFFFF}- %s\t%s\t%s\n",OrgInfo[i][oName],time,mesto);
			strcat(string,str);
		}
	}
	SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{E4DB5E}Собеседования", string, "Понял", "");
	return true;
}
CMD:vipmenu(playerid)
{
    if(PI[playerid][pVIP] < 6) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вам недоступна данная функция!");
    return SPD(playerid, 7760, DIALOG_STYLE_LIST, !"{FFFFFF}Выбор | {DC4747}Вип-меню", !"\
        {DC4747}1.{FFFFFF} Сменить префикс [/vr]\n\
        {DC4747}2.{FFFFFF} Заправить т/c\n\
        {DC4747}3.{FFFFFF} Телепортировать к себе личное т/c\n\
        {DC4747}4.{FFFFFF} Выдать себе NRG-500\n\
        {DC4747}5.{FFFFFF} Посмотреть список администрации онлайн\n\
		{DC4747}6.{FFFFFF} Флипнуть свой транспорт\n\
		{DC4747}7.{FFFFFF} Использовать \"Камень Телепортации\"", !"Выбрать", !"Выход");
}
CMD:setipbots(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new string:ip[16], number; else return SCMf(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Используйте: /setipbots [ip] [номер (0-%i)]", sizeof(IpForBots)-1);
	if(number < 0 || number > sizeof(IpForBots)-1) return SCMf(playerid, COLOR_RED, "[Ошибка] {FFFFFF}Используйте: /setipbots [ip] [номер (0-%i)]", sizeof(IpForBots)-1); 
	SetString(IpForBots[number], ip);
	SaveInforamtion();
	return SCMf(playerid, COLOR_VALIK, "[Информация] IP-адрес №%i %s успешно установлен!", number, ip);
}
CMD:map(playerid)
{
	if(!PI[playerid][pAccessCMD][38]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	return SPD(playerid, 9067, 2, !"Admin Mapping", !"{FFFFFF}\
	- создать обьект\n\
	- группы\n\
	- выбрать обьект курсором\n\
	- список моих обьектов\n\
	- список всех обьектов\n\
	- удаление\n\
	{FFD700}Help: /map, /mapg, /mapobj", !"Выбрать", !"Закрыть");
}
CMD:mapobj(playerid)
{
	if(!PI[playerid][pAccessCMD][38]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    return SelectObject(playerid);
}
CMD:ruslan(playerid)
{
	if(!Osnovat(PN(playerid))) return 1;
	Ruslan_Razdasha = !Ruslan_Razdasha;
	SCMf(playerid, COLOR_RED, "[Информация] Вы успешно %s раздачу в PayDay!", Ruslan_Razdasha ? "включили" : "выключили");
	return 1;
}
stock CreateTextDrawEnchant(playerid)
{
    #include ../library/TEXTDRAWS/inv/inv_menu
    #include ../library/TEXTDRAWS/inv/inv_enchant
}
stock CreateTextDrawOthersEnchant(playerid)
{
	for(new i = 2; i < 5; i++) 
	{
		ProgreesEnchantTD[playerid][i] = CreatePlayerTextDraw(playerid, 163.320450, 244.288101+1.0, "LD_SPAC:WHITE");
		PlayerTextDrawLetterSize(playerid, ProgreesEnchantTD[playerid][i], 2.727182, 1.120000);
		PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][i], ProgressWhiteEnchant[playerid], 6.761664);
		PlayerTextDrawAlignment(playerid, ProgreesEnchantTD[playerid][i], 1);
		PlayerTextDrawColor(playerid, ProgreesEnchantTD[playerid][i], InvColor[PI[playerid][pInvColor]][2]);
		PlayerTextDrawUseBox(playerid, ProgreesEnchantTD[playerid][i], 0);
		PlayerTextDrawBoxColor(playerid, ProgreesEnchantTD[playerid][i], 0xFFFFFFFF80808080);
		PlayerTextDrawSetShadow(playerid, ProgreesEnchantTD[playerid][i], 2);
		PlayerTextDrawSetOutline(playerid, ProgreesEnchantTD[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, ProgreesEnchantTD[playerid][i], 0x000000FF);
		PlayerTextDrawFont(playerid, ProgreesEnchantTD[playerid][i], 4);
		PlayerTextDrawSetProportional(playerid, ProgreesEnchantTD[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid, ProgreesEnchantTD[playerid][i], 0);
	}
}
stock ShowEnchant(playerid)
{
    if(EnchantOpen{playerid}) return false;
    HideTextDraws(playerid, 11);
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideLogo(playerid);
	CreateTextDrawEnchant(playerid);
	MenuStatus{playerid} = true;
	EnchantOpen{playerid} = true;
    if(PI[playerid][pInvLang]) 
    {
        PlayerTextDrawSetString(playerid,  Invent_Enchant[playerid][16], FixText("ЗАТОЧИТЬ"));
        PlayerTextDrawSetString(playerid,  Invent_Enchant[playerid][18], FixText("ЗАКРЫТЬ"));
        PlayerTextDrawSetString(playerid,  Invent_Enchant[playerid][24], FixText("ИНФОРМАЦИЯ"));
    }
    PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][22], "$100000");//cost
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
        if(i < 28) PlayerTextDrawShow(playerid, Invent_Enchant[playerid][i]);
        if(i < 2) PlayerTextDrawShow(playerid, InventButton[playerid][i]);
        if(i < 17 && i >= 2) PlayerTextDrawShow(playerid, Invent[playerid][i]);
        switch(PI[playerid][pInvItem][i])
        {
            case AcsSlot1,AcsSlot2,AcsSlot3,AcsSlot4,AcsSlot5,AcsSlot6,Item_StoneEnchant: PI[playerid][pInvItemLock][i] = 0;
            default: PI[playerid][pInvItemLock][i] = 3;
        }
	}
	if(InvLockItem{playerid}) InvLockItem{playerid} = false;
	CreateProgreesEnchantTD(playerid);
	ShowInvPage(playerid, page);
	return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
}
stock CreateProgreesEnchantTD(playerid, del = 0)
{
    for(new i = 2; i < 5; i++) 
    {
        ProgreesEnchantTD[playerid][i] = CreatePlayerTextDraw(playerid, 163.320450, 244.288101+1.0, "LD_SPAC:WHITE");
        PlayerTextDrawLetterSize(playerid, ProgreesEnchantTD[playerid][i], 2.727182, 1.120000);
        PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][i], ProgressWhiteEnchant[playerid], 6.761664);
        PlayerTextDrawAlignment(playerid, ProgreesEnchantTD[playerid][i], 1);
        PlayerTextDrawColor(playerid, ProgreesEnchantTD[playerid][i], InvColor[PI[playerid][pInvColor]][2]);
        PlayerTextDrawUseBox(playerid, ProgreesEnchantTD[playerid][i], 0);
        PlayerTextDrawBoxColor(playerid, ProgreesEnchantTD[playerid][i], 0xFFFFFFFF80808080);
        PlayerTextDrawSetShadow(playerid, ProgreesEnchantTD[playerid][i], 2);
        PlayerTextDrawSetOutline(playerid, ProgreesEnchantTD[playerid][i], 0);
        PlayerTextDrawBackgroundColor(playerid, ProgreesEnchantTD[playerid][i], 0x000000FF);
        PlayerTextDrawFont(playerid, ProgreesEnchantTD[playerid][i], 4);
        PlayerTextDrawSetProportional(playerid, ProgreesEnchantTD[playerid][i], 1);
        PlayerTextDrawSetSelectable(playerid, ProgreesEnchantTD[playerid][i], 0);
    }
    if(!del)
    {
        ProgreesEnchantTD[playerid][5] = CreatePlayerTextDraw(playerid, 171.120911, 245.466080, "_");
        PlayerTextDrawLetterSize(playerid, ProgreesEnchantTD[playerid][5], 0.124850, 0.695162);
        PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][5], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, ProgreesEnchantTD[playerid][5], 2);
        PlayerTextDrawColor(playerid, ProgreesEnchantTD[playerid][5], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, ProgreesEnchantTD[playerid][5], 0);
        PlayerTextDrawBoxColor(playerid, ProgreesEnchantTD[playerid][5], 0x80808080);
        PlayerTextDrawSetShadow(playerid, ProgreesEnchantTD[playerid][5], 0);
        PlayerTextDrawSetOutline(playerid, ProgreesEnchantTD[playerid][5], 0);
        PlayerTextDrawBackgroundColor(playerid, ProgreesEnchantTD[playerid][5], 0x00000000);
        PlayerTextDrawFont(playerid, ProgreesEnchantTD[playerid][5], 2);
        PlayerTextDrawSetProportional(playerid, ProgreesEnchantTD[playerid][5], 1);
        PlayerTextDrawSetSelectable(playerid, ProgreesEnchantTD[playerid][5], 0);
        
        ProgreesEnchantTD[playerid][6] = CreatePlayerTextDraw(playerid, 291.879089, 245.466080, "_");
        PlayerTextDrawLetterSize(playerid, ProgreesEnchantTD[playerid][6], 0.124850, 0.695162);
        PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][6], 1280.0, 1280.0);
        PlayerTextDrawAlignment(playerid, ProgreesEnchantTD[playerid][6], 2);
        PlayerTextDrawColor(playerid, ProgreesEnchantTD[playerid][6], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, ProgreesEnchantTD[playerid][6], 0);
        PlayerTextDrawBoxColor(playerid, ProgreesEnchantTD[playerid][6], 0x80808080);
        PlayerTextDrawSetShadow(playerid, ProgreesEnchantTD[playerid][6], 0);
        PlayerTextDrawSetOutline(playerid, ProgreesEnchantTD[playerid][6], 0);
        PlayerTextDrawBackgroundColor(playerid, ProgreesEnchantTD[playerid][6], 0x00000000);
        PlayerTextDrawFont(playerid, ProgreesEnchantTD[playerid][6], 2);
        PlayerTextDrawSetProportional(playerid, ProgreesEnchantTD[playerid][6], 1);
        PlayerTextDrawSetSelectable(playerid, ProgreesEnchantTD[playerid][6], 0);
    }
    return 1;
}
stock HideEnchant(playerid)
{    
	if(!EnchantOpen{playerid}) return false;
	if(ProccesEnchant[playerid]) return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
    EnchantOpen{playerid} = false;
    HideInvMenu(playerid);
    ShowLogo(playerid);
    Hunger(playerid, 0);
    if(InvLockItem{playerid}) InvLockItem{playerid} = false;
    for(new i; i < PI[playerid][pInvCell]; i++)
    {
        PI[playerid][pInvItemLock][i] = 0;
        if(i < 28) DestroyPlayerTD(playerid, Invent_Enchant[playerid][i]);
        if(i < 7) PlayerTextDrawHide(playerid, ProgreesEnchantTD[playerid][i]);
    }
    ItemEnchant[playerid] = 0;
    ItemEnchantStoneAmount[playerid] = 0;
    ItemEnchantSlots[playerid] = -1;
    ItemEnchantSlot[playerid] = -1;
    ProccesEnchant[playerid] = false;
    ProgressWhiteEnchant[playerid] = 0.0;
    return CancelSelectTextDraw(playerid);
}
stock UpdateEnchant(playerid, action)
{
    if(!PI[playerid][pInvLang]) PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][16], "ENCHANT");
    else PlayerTextDrawSetString(playerid,  Invent_Enchant[playerid][16], FixText("ЗАТОЧИТЬ"));
    PlayerTextDrawShow(playerid, Invent_Enchant[playerid][16]);

    new accessory_slot = ItemEnchantSlots[playerid], stone_slot = ItemEnchantSlot[playerid];
    ItemEnchantStoneAmount[playerid] --;
    PI[playerid][pInvItemAmount][stone_slot] --;

    if(!PI[playerid][pInvItemAmount][stone_slot])
    {
    	UpdateSlotsEnchant(playerid, stone_slot, 1, 2);
    	ItemEnchantStoneAmount[playerid] = 0;
    	PI[playerid][pInvItem][stone_slot] = 0;
    	ItemEnchantSlot[playerid] = -1;
    	PI[playerid][pInvItemLock][stone_slot] = 3;
    }
    InvSlotUpdate(playerid, stone_slot);

    if(!action) 
    {
        for(new i; i < 2; i++) PlayerTextDrawBoxColor(playerid, ProgreesEnchantTD[playerid][i], 0xFF4D4D5A), PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][i]);
        SCMf(playerid, COLOR_LIGHTRED, "Увы, вам не удалось улучшить предмет %s с +%i на +%i", ItemsInfo[PI[playerid][pInvItem][accessory_slot]][ItemName], PI[playerid][pInvItemEnchant][accessory_slot], PI[playerid][pInvItemEnchant][accessory_slot]+1);
    }
    else
    {
        for(new i; i < 2; i++) PlayerTextDrawBoxColor(playerid, ProgreesEnchantTD[playerid][i], 0x4DFF5A5A), PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][i]);
        PI[playerid][pInvItemEnchant][accessory_slot] ++;
		ItemEnchantLvl[playerid] ++;
        InvSlotUpdate(playerid, accessory_slot);
        SCMf(playerid, COLOR_GREEN, "Успех! Вам удалось улучшить предмет %s с +%i на +%i", ItemsInfo[PI[playerid][pInvItem][accessory_slot]][ItemName], PI[playerid][pInvItemEnchant][accessory_slot]-1, PI[playerid][pInvItemEnchant][accessory_slot]);
	}
    PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][26], 1);
    PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][27], 1);
    GiveMoney(playerid, -100000);
    EnchantClose[playerid] = SetTimerEx("EnchantHideProgress", 1500, false, "d", playerid);
    UpdateStringEnchant(playerid);
    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, stone_slot);
    if(SAVE_PLAYER_INV) SaveInv(playerid, 1, accessory_slot);
}

forward EnchantHideProgress(playerid);
public EnchantHideProgress(playerid)
{
    for(new i; i < 2; i++) PlayerTextDrawHide(playerid, ProgreesEnchantTD[playerid][i]);
    KillTimer(EnchantClose[playerid]);
    EnchantClose[playerid] = -1;
}
forward EnchantTime(playerid);
public EnchantTime(playerid)
{
    ProgressWhiteEnchant[playerid] += 1.5;
    new Float:progress = ProgressWhiteEnchant[playerid];
    if(floatround(progress, floatround_round) <= 17)
    {
        if(IsPlayerTextDrawVisible(playerid, ProgreesEnchantTD[playerid][2]))
        {
            PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][2], ProgressWhiteEnchant[playerid], 6.761664+1.0);
            PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][2]);
        }
    }
    else if(floatround(progress, floatround_round) >= 18 && floatround(progress, floatround_round) <= 120)
    {
        if(IsPlayerTextDrawVisible(playerid, ProgreesEnchantTD[playerid][3]))
        {
            PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][3], ProgressWhiteEnchant[playerid], 6.761664/2);
            PlayerTextDrawSetPos(playerid, ProgreesEnchantTD[playerid][3], 163.320450, 244.288101+3.0);
            PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][3]);
        }
    }
    else if(floatround(progress, floatround_round) >= 121 && floatround(progress, floatround_round) <= 136)
    {
        if(IsPlayerTextDrawVisible(playerid, ProgreesEnchantTD[playerid][4]))
        {
            PlayerTextDrawTextSize(playerid, ProgreesEnchantTD[playerid][4], ProgressWhiteEnchant[playerid]-120.0, 6.761664+1.0);
            PlayerTextDrawSetPos(playerid, ProgreesEnchantTD[playerid][4], 163.320450+120.0, 244.288101);
            PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][4]);
        }
    }
    if(floatround(progress, floatround_round) >= 137)
    {
        new Float:update = ProcentEnchant[ItemEnchantLvl[playerid]][0];
        ProccesEnchant[playerid] = false;
        KillTimer(EnchantTimer[playerid]);
        EnchantTimer[playerid] = -1;
        if(floatround(update, floatround_round) >= random(101)) UpdateEnchant(playerid, 1);
        else UpdateEnchant(playerid, 0);
        ProgressWhiteEnchant[playerid] = 0.0;
        for(new i = 2; i < 5; i++) DestroyPlayerTD(playerid, ProgreesEnchantTD[playerid][i]);
    }
}
stock SetEnchantItem(playerid, slot)
{
    new Item = PI[playerid][pInvItem][slot];
    switch(Item)
    {
    	case AcsSlot1,AcsSlot2,AcsSlot3,AcsSlot4,AcsSlot5,AcsSlot6:
    	{
    		if(ItemEnchantSlots[playerid] >= 0)
    		{
    			PI[playerid][pInvItemLock][ItemEnchantSlots[playerid]] = 0;
    			InvSlotUpdate(playerid, ItemEnchantSlots[playerid]);
    			ItemEnchantSlots[playerid] = -1;
    		}
    		ItemEnchantSlots[playerid] = slot;
            ItemEnchant[playerid] = Item;
            ItemEnchantLvl[playerid] = PI[playerid][pInvItemEnchant][slot];
    		UpdateSlotsEnchant(playerid, slot, 2, 1);
    	}
    	case Item_StoneEnchant:
    	{
    		if(ItemEnchantSlot[playerid] >= 0)
    		{
    			PI[playerid][pInvItemLock][ItemEnchantSlot[playerid]] = 0;
    			InvSlotUpdate(playerid, ItemEnchantSlot[playerid]);
    			ItemEnchantSlot[playerid] = -1;
    		}
    		ItemEnchantSlot[playerid] = slot;
			ItemEnchantStoneAmount[playerid] = PI[playerid][pInvItemAmount][slot];
    		UpdateSlotsEnchant(playerid, slot, 1, 1);
    	}
    }
    InvLockItem{playerid} = false;
    return 1;
}
stock UpdateSlotsEnchant(playerid, slot, i, type)
{
    if(i == 1)
    {
    	new Item = Item_StoneEnchant;
    	switch(type)
    	{
    		case 1:
    		{
	        	new slots = ItemEnchantSlot[playerid];
	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][27], 1);
	            PlayerTextDrawSetPreviewModel(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemModel]);
	            PlayerTextDrawSetPreviewRot(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemPosX], ItemsInfo[Item][ItemPosY], ItemsInfo[Item][ItemPosZ], ItemsInfo[Item][ItemPosC]);
	           	if(ItemsInfo[Item][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemColor]);
	            else PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][27], 0x333333FF);
	           	PlayerTextDrawColor(playerid, Invent_Enchant[playerid][27], 0xFFFFFFFF);
	            PlayerTextDrawShow(playerid, Invent_Enchant[playerid][27]);
	            PI[playerid][pInvItemLock][slots] = 4, InvSlotUpdate(playerid, slots);
    		}
    		case 2:
    		{
	        	new slots = ItemEnchantSlot[playerid];
	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][27], 0);
	            PlayerTextDrawSetPreviewModel(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemModel]);
	            PlayerTextDrawSetPreviewRot(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemPosX], ItemsInfo[Item][ItemPosY], ItemsInfo[Item][ItemPosZ], ItemsInfo[Item][ItemPosC]);
	           	if(ItemsInfo[Item][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemColor]);
	            else PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][27], 0x333333FF);
	           	PlayerTextDrawColor(playerid, Invent_Enchant[playerid][27], 0x999999FF);
	            PlayerTextDrawShow(playerid, Invent_Enchant[playerid][27]);
	            PI[playerid][pInvItemLock][slots] = 0, InvSlotUpdate(playerid, slots);
	            ItemEnchantSlot[playerid] = -1;
    		}
    	}
    }
    else if(i == 2)
    {
        new Item = ItemEnchant[playerid];
        switch(type)
        {
        	case 1:
        	{
	        	slot = ItemEnchantSlots[playerid];
	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][26], 1);
	            PlayerTextDrawSetPreviewModel(playerid, Invent_Enchant[playerid][26], ItemsInfo[Item][ItemModel]);
	            PlayerTextDrawSetPreviewRot(playerid, Invent_Enchant[playerid][26], ItemsInfo[Item][ItemPosX], ItemsInfo[Item][ItemPosY], ItemsInfo[Item][ItemPosZ], ItemsInfo[Item][ItemPosC]);
	            if(ItemsInfo[Item][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][26], ItemsInfo[Item][ItemColor]);
	            else PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][26], 0x333333FF);
	            PlayerTextDrawShow(playerid, Invent_Enchant[playerid][26]);
	            PI[playerid][pInvItemLock][slot] = 4, InvSlotUpdate(playerid, slot);
        	}
        	case 2:
        	{
	        	slot = ItemEnchantSlots[playerid];
	        	new slots = ItemEnchantSlot[playerid];
	            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][26], 0);
	            PlayerTextDrawSetPreviewModel(playerid, Invent_Enchant[playerid][26], ItemsInfo[Item][ItemModel]);
	            PlayerTextDrawSetPreviewRot(playerid, Invent_Enchant[playerid][26], ItemsInfo[Item][ItemPosX], ItemsInfo[Item][ItemPosY], ItemsInfo[Item][ItemPosZ], ItemsInfo[Item][ItemPosC]);
	            if(ItemsInfo[Item][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][26], ItemsInfo[Item][ItemColor]);
	            else PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][26], 0x333333FF);
	            PlayerTextDrawShow(playerid, Invent_Enchant[playerid][26]);
	            PI[playerid][pInvItemLock][slot] = 0, InvSlotUpdate(playerid, slot);
	            if(slots >= 0)
	            {
		            PlayerTextDrawSetSelectable(playerid, Invent_Enchant[playerid][27], 0);
		            PlayerTextDrawSetPreviewModel(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemModel]);
		            PlayerTextDrawSetPreviewRot(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemPosX], ItemsInfo[Item][ItemPosY], ItemsInfo[Item][ItemPosZ], ItemsInfo[Item][ItemPosC]);
		           	if(ItemsInfo[Item][ItemColor]) PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][27], ItemsInfo[Item][ItemColor]);
		            else PlayerTextDrawBackgroundColor(playerid, Invent_Enchant[playerid][27], 0x333333FF);
		           	PlayerTextDrawColor(playerid, Invent_Enchant[playerid][27], 0x999999FF);
		            PlayerTextDrawShow(playerid, Invent_Enchant[playerid][27]);
		            PI[playerid][pInvItemLock][slots] = 0, InvSlotUpdate(playerid, slots);
		            ItemEnchantSlot[playerid] = -1;
	            }
        	}
        }
    }
    return UpdateStringEnchant(playerid);
}
stock UpdateStringEnchant(playerid)
{
    if(ItemEnchantStoneAmount[playerid]) PlayerTextDrawSetStringf(playerid, Invent_Enchant[playerid][21], "X %i", ItemEnchantStoneAmount[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][21], "_");
    if(ItemEnchant[playerid]) PlayerTextDrawSetStringf(playerid, ProgreesEnchantTD[playerid][5], "+%i", PI[playerid][pInvItemEnchant][ItemEnchantSlots[playerid]]), PlayerTextDrawSetStringf(playerid, ProgreesEnchantTD[playerid][6], "+%i", PI[playerid][pInvItemEnchant][ItemEnchantSlots[playerid]] + 1), PlayerTextDrawSetStringf(playerid, Invent_Enchant[playerid][25], "CHANCE: %.1f", ProcentEnchant[ItemEnchantLvl[playerid]][0]);
    else PlayerTextDrawSetString(playerid, ProgreesEnchantTD[playerid][6], "_"), PlayerTextDrawSetString(playerid, ProgreesEnchantTD[playerid][5], "_"), PlayerTextDrawSetString(playerid, Invent_Enchant[playerid][25], "_");
    return PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][6]), PlayerTextDrawShow(playerid, ProgreesEnchantTD[playerid][5]), PlayerTextDrawShow(playerid, Invent_Enchant[playerid][21]), PlayerTextDrawShow(playerid, Invent_Enchant[playerid][22]), PlayerTextDrawShow(playerid, Invent_Enchant[playerid][25]);
}

CMD:startcont(playerid)
{
	if(PI[playerid][pAdmin] < 8) return 1;
	for(new i; i < sizeof(ContainerInfo); i++) ContainerAction(i, 1);
	return 1;
}
CMD:test(playerid)
{
	if(PI[playerid][pAdmin] < 8 && !Osnovat(PN(playerid))) return 1;
	for(new i ; i < sizeof(ContainerInfo); i++) gContainer[i][gTime] = 15;
	return 1;
}
CMD:test1(playerid)
{
	for(new i ; i < sizeof(ContainerInfo); i++) gContainer[i][gTimeClose] = 15;
	return 1;
}
CMD:testtd(playerid)
{
	return ContainerOpenTake(playerid, randomEx(1, 10 + 1));
}

CMD:enablecontainers(playerid)
{
	if(!Osnovat(PN(playerid))) return 1;
	EnableContainers = !EnableContainers;
	return SCMf(playerid, -1, "Контейнеры %s", EnableContainers ? ("вкл") : ("выкл"));
}
CMD:saveinv(playerid)
{
	if(!Osnovat(PN(playerid))) return 1;
	new currenttime = GetTickCount();
	SavePlayerInv(playerid);
	SCMf(playerid, -1, "SavePlayerInv загрузился за %i ms", GetTickCount() - currenttime);
	return 1;
}
CMD:saveinvall(playerid)
{
	if(!Osnovat(PN(playerid))) return 1;
	new currenttime = GetTickCount();
	foreach(new i: Player) SavePlayerInv(i);
	SCMf(playerid, -1, "SavePlayerInv(all) загрузился за %i ms", GetTickCount() - currenttime);
	return 1;
}
CMD:testfam(playerid)//Адм
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    return SCMf(playerid, -1, "Iter_Count Family: %i", Iter_Count(Family));
}
CMD:quest(playerid)
{
	new num;
	str_1[0] = EOS;
	for(new i;i < sizeof(QI); i++)
	{
		if(AcceptQuest[playerid][i] != 0 && QuestProgress[playerid][i] != 100)
		{
		    if(QuestProgress[playerid][i]<QI[i][LastProgress]) f(str_1, sizeof(str_1),"%s\n{FFFFFF}%s | {DA9815}Прогресс: %i/%i", str_1, QI[i][QuestName], QuestProgress[playerid][i],QI[i][LastProgress]);
		    else if(QuestProgress[playerid][i]==100) f(str_1, sizeof(str_1),"%s\n{FFFFFF}%s | {E81818}[Выполнен]", str_1, QI[i][QuestName]);
		    else f(str_1, sizeof(str_1),"%s\n{FFFFFF}%s | {DA9815}Прогресс: {DA9E30}[Можно завершить]", str_1, QI[i][QuestName]);
			QuestShow[playerid][num]=i;
			num++;
		}
	}
	if(strlen(str_1) > 0) SPD(playerid, 7650, 2, !"", str_1, !"{0F9435}Info{FFFFFF}", !"Отмена");
	else SPD(playerid, 0, 0, !"", !"{FFFFFF}У вас нет принятых квестов!", !"Принять", !"");
	return 1;
}
/*CMD:sletcar(playerid)//Адм
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new id = Iter_Random(SLETCAR);
	if(id != -1)
	{
		CreateOwnableCar(SellInfo[id][scModel], SellInfo[id][sc_Pos_X], SellInfo[id][sc_Pos_Y], SellInfo[id][sc_Pos_Z], SellInfo[id][sc_Pos_A], "The State", 0);
		SellInfo[id][scSpawn] = 0;
		Iter_Remove(SLETCAR, id);
		SCMf(playerid, -1, "Слетел кар %s", VehicleName[SellInfo[id][scModel] - 400]);
	}
	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нету лишнего кара для слета (все кары в автосалонах созданы).");
	return 1;
}*/
CMD:setprefix(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][27]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	{
		if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /setprefix [id]");
		SetPVarInt(playerid, !"PrefixID", params[0]);
		ShowPrefixDialog(playerid);
	}
	return true;
}
stock CheckOffStats(playerid, nickname[])
{
	new ID, Level, donate, donatemoney, money, telnum, bank, org, rank, warns, vips, houses[6], biznes[6];
	static vipname[24], orgname[14], rankname[14]; vipname[0] = EOS, orgname[0] = EOS, rankname[0] = EOS;
	str_1[0] = EOS;
	mysql_format(mysql, str_1, sizeof(str_1), "SELECT * FROM `Qelksekm` WHERE `NickName` = '%s'", nickname);
	mysql_query(mysql, str_1);
	if(cache_num_rows() > 0)
	{
		cache_get_value_name_int(0, "ID", ID);
		cache_get_value_name_int(0, "Level", Level);
		cache_get_value_name_int(0, "VirMoney", donate);
		cache_get_value_name_int(0, "DonateMoney", donatemoney);
		cache_get_value_name_int(0, "Money", money);
		cache_get_value_name_int(0, "TelNum", telnum);
		cache_get_value_name_int(0, "Bank", bank);
	    cache_get_value_name_int(0, "Warns", warns);
	    cache_get_value_name_int(0, "VIP", vips);
	    cache_get_value_name_int(0, "Member", org);
	    cache_get_value_name_int(0, "Rank", rank);
	}
	for(new i; i < OWNABLEHOUSES; i++)
	{
	    if(GetString(HouseInfo[i][hOwner],nickname))
	    {
	        if(!houses[0]) houses[0] = i;
			else if(!houses[1]) houses[1] = i;
			else if(!houses[2]) houses[2] = i;
			else if(!houses[3]) houses[3] = i;
			else if(!houses[4]) houses[4] = i;
			else if(!houses[5]) houses[4] = i;
		}
	}
	for(new i; i < OWNABLEBIZES; i++)
	{
	    if(GetString(BizInfo[i][bOwner],nickname))
	    {
	        if(!biznes[0]) biznes[0] = i;
			else if(!biznes[1]) biznes[1] = i;
			else if(!biznes[2]) biznes[2] = i;
			else if(!biznes[3]) biznes[3] = i;
			else if(!biznes[4]) biznes[4] = i;
			else if(!biznes[5]) biznes[5] = i;
		}
	}
	if(org > 0) f(orgname, 500,"%s",OrgInfo[org][oName]);
	else f(orgname, 500, "Нет");
	if(rank > 0) f(rankname, 500,"%s[%i]",GetRankName(org, rank),rank);
	else f(rankname, 500, "Нет");
	switch(vips)
	{
		case 0: vipname = "NONE";
		case 4: vipname = "TITAN";
	    case 5: vipname = "PREMIUM";
	    case 6:
	    {
			vipname = Mode_City_Caps;
	    }
	}
	f(str_2, sizeof(str_2), "ID в базе данных: %i\n\
	Ник: %s\n\
	Уровень: %i\n\
	Донат счет: %i\n\
	Донат рубли: %i\n\
	Деньги: %i\n\
	Номер телефона: %i\n\
	Деньги в банке: %i\n\
	Организация: %s\n\
	Должность: %s\n\
	Предупреждения: %i\n\
	Статус VIP: %s\n\n\
	Дома: [%i,%i,%i,%i,%i,%i]\n\n\
	Бизнесы: [%i,%i,%i,%i,%i,%i]", ID, nickname, Level, donate, donatemoney, money, telnum, bank, orgname, rankname, warns, vipname, houses[0], houses[1], houses[2], houses[3], houses[4], houses[5], biznes[0], biznes[1], biznes[2], biznes[3], biznes[4], biznes[5]);
	SPD(playerid,0, 0, !"{cccccc}Оффайл Сатистика Игрока", str_2, !"Зкрыть", !"");
	return true;
}
CMD:checkoff(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static name[24];
    if(sscanf(params,"s[24]", name)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /checkoff [name]");
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
    CheckOffStats(playerid, name);
    return 1;
}
CMD:checkitems(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new item, amount; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /checkitems [id предмета] [от какого кол-ва]");
    if(item <= 0 || item >= OWNABLEITEMS || amount <= 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /checkitems [id предмета] [от какого кол-ва]");
    new count;
    foreach(new i: Player)
    {
    	if(GetInvCount(i, item) < amount) continue;
		count = GetInvCount(i, item);
		SCMf(playerid, COLOR_YELLOW, "У игрока %s[%i] '%s' (%i шт)", PN(i), i, ItemsInfo[item][ItemName], count);
    }
    if(!count) SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игроков с таким предметом и кол-вом не найдено!");
	return 1;
}
CMD:loadfs(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static script[128];
    if(sscanf(params, "s[128]", script)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /loadfs [название скрипта]");
    if(LoadFilterScript(script)) SCMf(playerid, COLOR_VALIK, "Скрипт %s успешно загружен", script);
    else SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Не удалось загрузить скрипт %s", script);
    return 1;
}
CMD:unloadfs(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static script[128];
    if(sscanf(params, "s[128]", script)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /unloadfs [название скрипта]");
    if(UnLoadFilterScript(script)) SCMf(playerid, COLOR_VALIK, "Скрипт %s успешно выгружен", script);
    else SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Не удалось выгрузить скрипт %s", script);
    return 1;
}
CMD:reloadfs(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static script[128];
    if(sscanf(params, "s[128]", script)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /reloadfs [название скрипта]");
    UnLoadFilterScript(script);
    if(LoadFilterScript(script)) SCMf(playerid, COLOR_VALIK, "Скрипт %s успешно перезагружен", script);
    else SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Не удалось перезагрузить скрипт %s", script);
    return 1;
}
CMD:checkcars(playerid)//Адм
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    SCMf(playerid, -1, "Iter_Count OWNABLECARS: %i", Iter_Count(OWNABLECARS));
    new Cache:result = mysql_query(mysql, "SELECT * FROM `Ownable`");
    SCMf(playerid, -1, "Всего авто в БД: %i", cache_num_rows());
    cache_delete(result);
    SCMf(playerid, -1, "Iter_Free OWNABLECARS: %i", Iter_Free(OWNABLECARS));
    new number = GetVehicleID(GetPlayerVehicleID(playerid));
    if(number != INVALID_PLAYER_ID) SCMf(playerid, -1, "cID - %i", CarInfo[number][cID]);
    return SCMf(playerid, -1, "GetVehicleID - %i", number);
}
CMD:checkhouses(playerid)//Адм
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    SCMf(playerid, -1, "Домов на сервере: %i", OWNABLEHOUSES-1);
    new Cache:result = mysql_query(mysql, "SELECT * FROM `Houses`");
    SCMf(playerid, -1, "Всего Домов в БД: %i", cache_num_rows());
    cache_delete(result);
   	return SCMf(playerid, -1, "OWNABLEHOUSES: %i", OWNABLEHOUSES);
}
CMD:tet(playerid)
{
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return 0;
    foreach(new i: Vehicle)
	{
	    if(!IsACar(i)) continue;
	    new Float:X,Float:Y,Float:Z;
		GetVehicleShiftPos(i, 1, X, Y, Z, 2.0);
		if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
		{
		    new Float:angle = GetPlayerAngleToPoint(playerid, X, Y);
		    if(angle >= -55 && angle <= 55)
		    {
				f(str_2, sizeof(str_2), "Багажник: %s\n{C62929}Заглянуть в багажник", TrunkInfo[i][tOpen] ? ("{56A736}[Открыт]{FFFFFF}") : ("{C62929}[Закрыт]{FFFFFF}"));
		        SPD(playerid, 1966, 2, !">> Багажник", str_2, !"Принять", !"Отмена");
		        idaofcar[playerid] = i;
		        break;
		    }
		}
	}
	return 1;
}
CMD:faminvite(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
    if(PI[playerid][pFamily] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /faminvite [id]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(!ProxDetectorS(5.0, playerid, target))
	{
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок слишком далеко от вас!");
		return callcmd::fammenu(playerid);
	}
	if(PI[target][pFamilyMember] != -1 || PI[target][pFamily] == 1)
	{
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок состоит в другой семьи!");
		return callcmd::fammenu(playerid);
	}
	if(PI[target][pLevel] < 2)
	{
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок должен иметь уровень выше 2-го!");
		return callcmd::fammenu(playerid);
	}
	f(str_1, 25, "FamLastTargetInvite%i", target);
    if(GetPVarInt(playerid, str_1) > gettime())
	{
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, вы уже приглашали этого игрока!");
		return callcmd::fammenu(playerid);
	}
	SCMf(target, COLOR_ORANGE, "[Информация] {FFFFFF}Игрок %s[%i] приглашает вас в семью: {c8ec36}%s.", PN(playerid), playerid, FamilyInfo[PI[playerid][pFamilyMember]][famName]);
	SCM(target, -1, !"Введите {c8ec36}/acceptfam{FFFFFF} для того чтобы принять предложение, или {ec4636}/cancelfam{FFFFFF}, чтобы отклонить.");
	SCMf(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы успешно предложили %s[%i] вступить в вашу семью!", PN(target), target);
	AcceptFam{target} = true;
	SetPVarInt(target, !"IDInvite", playerid);
	return SetPVarInt(playerid, str_1, gettime() + 120);
}
CMD:famunmute(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
    if(PI[playerid][pFamily] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /famunmute [id]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(PI[target][pFamilyMember] != PI[playerid][pFamilyMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок не состоит в вашей семье!");
	if(PI[target][pFamilyMute] < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого игрока нет бана чата!");
	PI[target][pFamilyMute] = 0;
	return SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}снял бан семейного чата игроку: %s[%i]", FamColor, PN(playerid), playerid, PN(target), target);
}
CMD:famuninvite(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(PI[playerid][pFamily] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
	if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
	extract params -> new player:target; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /famuninvite [id]");
	if(target == INVALID_PLAYER_ID) return 1;
	if(PI[target][pFamilyMember] != PI[playerid][pFamilyMember])
	{
	    callcmd::fammenu(playerid);
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок не состоит в вашей семье!");
	}
	if(GetString(PN(target), FamilyInfo[PI[playerid][pFamilyMember]][famCreator]) || GetString(PN(target), FamilyInfo[PI[playerid][pFamilyMember]][famZam]) || GetString(PN(target), FamilyInfo[PI[playerid][pFamilyMember]][famZam2])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
	FamilyInfo[PI[target][pFamilyMember]][famMembersCount]--;
	SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}выгнал из семьи: %s[%i]!", FamColor, PN(playerid), playerid, PN(target), target);
	ac_ShowPlayerDialog(target, 0),ShowPlayerDialogf(target, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Информация", !"Принять", !"", "{FFFFFF}%s[%i] выгнал вас из семьи: %s.", PN(playerid), playerid, FamilyInfo[PI[playerid][pFamilyMember]][famName]);
	PI[target][pFamilyMember] = -1;
	PI[target][pFamilyMemberID] = -1;
	UpdatePlayerDataInt(target, "FamilyMemberID", -1);
	return Iter_Remove(Family, target);
}
CMD:famuninviteoff(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(PI[playerid][pFamily] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
	if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта команда доступна только лидеру и заместителю!");
 	static name[24];
 	if(sscanf(params,"s[24]", name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /famuninviteoff [NickName]");
 	if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
 	new player = GetPlayerID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Он онлайн! Увольняй через /famuninvite");
	if(GetString(name, FamilyInfo[PI[playerid][pFamilyMember]][famCreator]) || GetString(name, FamilyInfo[PI[playerid][pFamilyMember]][famZam]) || GetString(name, FamilyInfo[PI[playerid][pFamilyMember]][famZam2])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, из семьи нельзя выгнать лидера или заместителя!");
	mysql_format(mysql, str_1, 256, "SELECT 1 FROM `Qelksekm` WHERE FamilyMemberID=%i AND NickName='%e' LIMIT 1", PI[playerid][pFamilyMemberID], name);
	mysql_pquery(mysql, str_1, "OfflineUninvite", "ds", playerid, name);
	return 1;
}
CMD:acceptfam(playerid)
{
	if(!AcceptFam{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам никто не отправлял предложения вступить в семью!");
	if(!ProxDetectorS(5.0, playerid, GetPVarInt(playerid, !"IDInvite")))
	{
		SCM(GetPVarInt(playerid, !"IDInvite"), COLOR_RED, "[Ошибка] {FFFFFF}Вы слишком далеко от игрока, которого пригласили в семью!");
		SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы слишком далеко от игрока, который пригласил вас в семью!");
		return AcceptFam{playerid} = false;
	}
	PI[playerid][pFamilyMemberID] = PI[GetPVarInt(playerid, !"IDInvite")][pFamilyMemberID];
	PI[playerid][pFamilyMember] = GetFamilyID(PI[playerid][pFamilyMemberID]);
	UpdatePlayerDataInt(playerid, "FamilyMemberID", PI[playerid][pFamilyMemberID]);
	Iter_Add(Family, playerid);
    UpdatePlayerText[playerid] = false;
	FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount] ++;
	TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "memberscount", FamilyInfo[PI[playerid][pFamilyMember]][famMembersCount], "d");
	SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]: {B9C1B8}пригласил в семью нового члена: %s[%i]!", FamColor, PN(GetPVarInt(playerid, !"IDInvite")), GetPVarInt(playerid, !"IDInvite"), PN(playerid), playerid);
	SCMf(GetPVarInt(playerid, !"IDInvite"), COLOR_ORANGE, "[Информация] {FFFFFF}%s[%i] принял ваше предложение вступить в семью!", PN(playerid), playerid);
	SCMf(playerid, COLOR_ORANGE, "[Информация] {FFFFFF}Вы успешно приняли предложение вступить в семью: {e39f20}%s", FamilyInfo[PI[playerid][pFamilyMember]][famName]);
	SCM(playerid, -1, !"Используйте команду /fammenu для подробной информации.");
	return DeletePVar(playerid, !"IDInvite");
}
CMD:cancelfam(playerid)
{
	if(!AcceptFam{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам никто не отправлял предложения вступить в семью!");
	AcceptFam{playerid} = false;
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно отказались от вступления в семью!");
	SCMf(GetPVarInt(playerid, !"IDInvite"), COLOR_RED, "[Информация] {FFFFFF}Игрок %s[%i] отказался от вашего предложения на вступление в семью!", PN(playerid), playerid);
	return DeletePVar(playerid, !"IDInvite");
}
CMD:wi(playerid)//Адм
{
	if(PI[playerid][pAdmin] < 8) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	return SCMf(playerid, -1, "Вирт мир: %i Интерьер: %i", GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
}
CMD:buyfam(playerid)
{
    if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(PI[playerid][pFamily] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
    if(strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famCreator], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam], PN(playerid), false) && strcmp(FamilyInfo[PI[playerid][pFamilyMember]][famZam2], PN(playerid), false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не лидер и не заместитель в семьи!");
    if(FamilyInfo[PI[playerid][pFamilyMember]][famHouse]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вашей семьи уже есть семейная квартира!");
    if(FamEntered[playerid] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не возле семейной квартиры!");
    new i = FamEntered[playerid];
    if(strcmp(FamilyHouse[i][fhOwner], "The State", false)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Эта квартира принадлежит другой семье!");
   	if(FamilyInfo[PI[playerid][pFamilyMember]][famRep] < FamilyHouse[i][fhCost]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вашей семьи недостаточно репутации для покупки этой квартиры!");
   	FamilyInfo[PI[playerid][pFamilyMember]][famHouse] = FamilyHouse[i][fhID];
   	FamilyInfo[PI[playerid][pFamilyMember]][famRep] -= FamilyHouse[i][fhCost];
   	TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "rep", FamilyInfo[PI[playerid][pFamilyMember]][famRep], "d");
	TSave(FamilyInfo[PI[playerid][pFamilyMember]][famID], "Family", "house", FamilyInfo[PI[playerid][pFamilyMember]][famHouse], "d");
	strmid(FamilyHouse[i][fhOwner], FamilyInfo[PI[playerid][pFamilyMember]][famName], 0, 15);
	TSave(FamilyHouse[i][fhID], "FamilyHouse", "Owner", FamilyHouse[i][fhOwner], "s");
   	UpdateFamHouse(i);
	return SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья (Новости)] %s[%i]:{B9C1B8} приобрел семейную квартиру", FamColor, PN(playerid), playerid);
}
CMD:addfamhouse(playerid, params[])//Адм
{
	if(!PI[playerid][pAccessCMD][10]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new Float: X, Float: Y, Float: Z;
	extract params -> new HouseFamCost; else return SCM(playerid, COLOR_RED, !"Используй: /addfamhouse [Цена]");
	GetPlayerPos(playerid, X, Y, Z);
	FamilyHouse[FamilyHouses][fh_Enter_X] = X;
    FamilyHouse[FamilyHouses][fh_Enter_Y] = Y;
    FamilyHouse[FamilyHouses][fh_Enter_Z] = Z;
    FamilyHouse[FamilyHouses][fhCost] = HouseFamCost;

	mysql_format(mysql, str_query, sizeof(str_query), "INSERT INTO `FamilyHouse` (`Cost`, `Enter_X`, `Enter_Y`, `Enter_Z`) VALUES ('%i', '%.2f', '%.2f', '%.2f')", FamilyHouse[FamilyHouses][fhCost], FamilyHouse[FamilyHouses][fh_Enter_X], FamilyHouse[FamilyHouses][fh_Enter_Y], FamilyHouse[FamilyHouses][fh_Enter_Z]);
	mysql_query(mysql, str_query, false);

	new Cache:result = mysql_query(mysql, "SELECT * FROM `FamilyHouse` ORDER BY ID DESC LIMIT 1");
	LoadOwnableFamilyHouse(0, FamilyHouses);
	cache_delete(result);

	return FamilyHouses ++;
}
CMD:fammenu(playerid)
{
    if(PI[playerid][pNameFamily] == 1) return ac_ShowPlayerDialog(playerid, 493),ShowPlayerDialogf(playerid, 493, DIALOG_STYLE_LIST, !"{BFBBBA}Настройки семьи", !"Принять", !"Отмена", "Название семьи: {c0eb6b}%s\nСлоган семьи: {eb6b6b}[Нет слогана]", PI[playerid][pNameFamily2]);
	if(PI[playerid][pFamily] == 1) return SPD(playerid, 493, DIALOG_STYLE_LIST, "Настройки семьи", "Название семьи: {eb6b6b}[Нет названия]\nСлоган семьи: {eb6b6b}[Нет слогана]", "Принять", "Отмена");
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
	f(str_1, sizeof(str_1), "{BFBBBA}{e69e2a}%s", FamilyInfo[PI[playerid][pFamilyMember]][famName]);
	f(str_2, sizeof(str_2), 
    "\
    Управление семьей\n\
    Информация о семье\n\
    Члены семьи онлайн\n\
    Члены семьи оффлайн\n\
    Помощь/Команды семьи\n\
    Семейная квартира: %s\n\
    Галочка: %s\n\
    Бренд: %s\n\
    [{fd4c4c}X{FFFFFF}] Покинуть семью\
    ", FamilyInfo[PI[playerid][pFamilyMember]][famHouse] ? ("{c0eb6b}[Имеется]") : ("{eb6b6b}[Не Имеется]"), FamilyInfo[PI[playerid][pFamilyMember]][famGalka] ? ("{c0eb6b}[Имеется]") : ("{eb6b6b}[Не Имеется]"), FamilyInfo[PI[playerid][pFamilyMember]][famBrand] ? ("{c0eb6b}[Имеется]") : ("{eb6b6b}[Не Имеется]"));
    return SPD(playerid, 8881, DIALOG_STYLE_LIST, str_1, str_2, !"Принять", !"Отмена");
}
CMD:fam(playerid, params[])
{
	if(PI[playerid][pFamilyMember] == -1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в одной из семей!");
    if(PI[playerid][pFamily] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Семья еще не настроена! Используйте /fammenu");
	if(PI[playerid][pFamilyChat] == 1) return 0;
	if(PI[playerid][pFamilyMute] > 0) return SendMuteFamilyMessage(playerid);
	if(isnull(params)) return SCM(playerid, COLOR_RED, !"Используйте: /fam [text]");
	if(GetPVarInt(playerid, !"antifloodfam") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    if(CheckIsADomen(playerid, params)) return 1;
    SendFamilyMessagef(PI[playerid][pFamilyMember], COLOR_FAMILY, "{%s}[Семья] %s[%i]:{B9C1B8} %s", FamColor, PN(playerid), playerid, params);
    SetPlayerChatBubble(playerid, !"Сообщение по домашней рации", COLOR_PURPLE, 10.0, 5000);
    return SetPVarInt(playerid, !"antifloodfam", gettime() + 5);
}
CMD:phone(playerid)
{
	new phones;
	for(new i = Item_Xiaomi_Blue; i < Item_iPhone_DarkRed+1; i++) if(GetInvCount(playerid, i)) phones++;
	if(!phones) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У Вас отсутствует мобильное устройство!");
	if(!PI[playerid][pTelNum]) return SCM(playerid, COLOR_GREY, !"У вас нет sim-карты!");
	if(PI[playerid][pCalling] != -1 || PI[playerid][pONPhoneTalk] > 0) return SelectTextDraw(playerid, -16776961);
	str_1 = "{FFFFFF}Мобильное устройство\t{FFFFFF}Цветовая гамма";
	static phone[24], color[24];
	new item, model, count;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
	    item = PI[playerid][pInvItem][i];
	    if(count < 50) PhoneID[playerid][count] = item;
	    switch(item)
	    {
	        case Item_Xiaomi_Blue..Item_iPhone_DarkRed:
	        {
				model = ItemsInfo[item][ItemModel];
			    switch(item)
			    {
			        case Item_Xiaomi_Blue..Item_Xiaomi_DarkRed: phone = "Xiaomi Mi 8";
			        case Item_Samsung_Blue..Item_Samsung_DarkRed: phone = "Samsung Galaxy S10";
			        case Item_iPhone_Blue..Item_iPhone_DarkRed: phone = "iPhone X";
			    }
			    switch(model)
			    {
			        case 18866: color = "голубой";
			        case 18874: color = "белый";
			        case 18872: color = "синий";
			        case 18871: color = "зеленый";
			        case 18867: color = "красный";
			        case 19513: color = "серебряный";
			        case 18865: color = "оранжевый";
			        case 18873: color = "золотой";
			        case 18869: color = "розовый";
			        case 18868: color = "черный";
			        case 18870: color = "темно красный";
			    }
				f(str_1, sizeof(str_1), "%s\n%s\t%s",str_1, phone, color);
	        }
	        default: continue;
	    }
	    count ++;
	}
 	SPD(playerid, 1000, DIALOG_STYLE_TABLIST_HEADERS, !"{FFFFFF}Телефоны | {ae433d}Телефоны", str_1, !"»", !"x");
 	return 1;
}
/*CMD:phone(playerid)
{
	if(!CheckPhones(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У Вас отсутствует мобильное устройство!");
	if(PI[playerid][pCalling] != -1 || PI[playerid][pONPhoneTalk] > 0) return SelectTextDraw(playerid, -16776961);
	return UsePhone(playerid, Item_Xiaomi_White);
}*/
CMD:spark(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius;
    if(sscanf(params, "f", radius)) return SCM(playerid, COLOR_RED, !"Используйте: /spark [радиус]");
    if(!(1.0 <= radius <= 100.0)) return SCM(playerid, COLOR_RED, !"Используйте: /spark [радиус > 0 или < 100]");
    new Float:x, Float:y, Float:z, number;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Vehicle)
    {
        if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
        {
        	number = GetVehicleID(i);
            if(IsBazarVehicle(i) || !IsAOwnableCar(number) || IsASellCar(number)) continue;
            SetVehiclePosToStandartPark(i);
            CarInfo[number][cParkedInStanartParking] = 1;
            SetVehicleToRespawn(i);
        }
    }
    return SendAdminsMessagef(COLOR_ORANGE, "%s[%i] Припарковал на стандартную позицию личные авто в радиусе %.01f", PN(playerid), playerid, radius);
}
CMD:apark(playerid)
{
	if(PI[playerid][pAdmin] < 8) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Вы должны быть за рулём авто!");
	new carid = GetPlayerVehicleID(playerid);
	new number = GetVehicleID(carid);
	DeleteFromParking(number);
	new Float:car_x, Float: car_y, Float: car_z;
	GetVehiclePos(carid, car_x, car_y, car_z);
	CarInfo[number][cParkedInStanartParking] = 0;
	CarInfo[number][cPos_X] = car_x;
	CarInfo[number][cPos_Y] = car_y;
	CarInfo[number][cPos_Z] = car_z + 0.8;
	GetVehicleZAngle(carid, CarInfo[number][cPos_A]);
	CarInfo[number][cVirtualWorld] = GetVehicleVirtualWorld(carid);
	CarInfo[number][cInterior] = GetPlayerInterior(playerid);
	RespawnOwnableCar(playerid, carid, 1);
	if(GarageEntered[playerid] != -1)
	{
		if(GetPlayerVirtualWorld(playerid) != 0)
		{
			CarInfo[number][cParkedInGarage] = 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно припарковали ваш автомобиль в гараже!\nТеперь ваша машина будет {ECE146}спавнится{FFFFFF} в этом месте.\nТеперь вам не надо платить {ECE146}налог{FFFFFF} за авто, которое стоит в гараже!\n\n", !"Понял", !"");
		}
	}
	else if(ParkingEntered[playerid] != -1)
	{
		if(GetPlayerVirtualWorld(playerid) != 0)
		{
			CarInfo[number][cParkedInParking] = 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно припарковали ваш автомобиль в подземном паркинге!\nТеперь ваша машина будет {ECE146}спавнится{FFFFFF} в этом месте.\nТеперь вам не надо платить {ECE146}налог{FFFFFF} за авто, которое стоит в гараже!\n\n", !"Понял", !"");
		}
	}
	else if(CarInfo[number][cParkedInGarage]) CarInfo[number][cParkedInGarage] = 0;
	return SaveOwnableCar(number);
}
CMD:unbomb(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(BreakBomb[playerid] == -1)
		{
			for(new i; i < MAX_BOMBS; i ++)
			{
			    if(BombInfo[i][bbCreated] && !BombInfo[i][bbBreak])
			    {
			    	if(IsPlayerInRangeOfPoint(playerid, 1.0, BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2]))
			    	{
			    	    BombInfo[i][bbBreak] = true;
			    	    BreakBomb[playerid] = i;
			    	    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 0, 0, 0, 1);
						SetTimerEx("UnBombPlayer", 5000, false, "ii", playerid, i);
						TogglePlayerControllable(playerid,false);
			    	    break;
			    	}
			    }
			}
		}
	}
	return 1;
}
CMD:bomb(playerid, params[])
{
	if(PI[playerid][pBomb] > 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 100.0, 265.9013,78.3257,1001.0391) || IsPlayerInRangeOfPoint(playerid, 100.0, 1468.6514,-1741.8002,13.5469)|| IsPlayerInRangeOfPoint(playerid, 100.0, 2388.1479,-1926.6962,13.5500)|| IsPlayerInRangeOfPoint(playerid, 100.0, 2587.1738,-1236.9465,1212.7019) ||
		IsPlayerInRangeOfPoint(playerid, 100.0, 1914.9935,177.8372,37.2813) || IsPlayerInRangeOfPoint(playerid, 100.0, 2571.9922,-1303.6332,1044.1250) || IsPlayerInRangeOfPoint(playerid, 100.0, 2065.4238,-1374.4506,1001.2960)|| IsPlayerInRangeOfPoint(playerid, 100.0, 1497.3561,-1281.8790,14.5419 ) ||
		IsPlayerInRangeOfPoint(playerid, 100.0, 1789.8708,-1897.3647,13.3965) || IsPlayerInRangeOfPoint(playerid, 100.0, 191.0939,-108.1999,1.5488) || IsPlayerInRangeOfPoint(playerid, 100.0, 760.6195,-1418.3060,13.6124) || IsPlayerInRangeOfPoint(playerid, 100.0, 1976.8551,-1965.9889,13.5825) || IsPlayerInRangeOfPoint(playerid, 35.0, 200.8742,-239.7395,1.5744) ||
		IsPlayerInRangeOfPoint(playerid, 100.0, 1392.5906,-2267.2756,13.5469) || IsPlayerInRangeOfPoint(playerid, 100.0, 2804.7432,-1448.3627,20.1999) || IsPlayerInRangeOfPoint(playerid, 70.0, 2817.6655,1289.3645,10.9609)|| IsPlayerInRangeOfPoint(playerid, 50.0, 1595.0094,1825.6066,10.8203)|| IsPlayerInRangeOfPoint(playerid, 50.0, 2235.1648,1628.0640,1006.1799) ||
		IsPlayerInRangeOfPoint(playerid, 50.0, -72.6627,30.2661,3.1172)) return SCM(playerid, COLOR_GREY, !"Вы не можете здесь заложить бомбу!");
		extract params -> new time; else return SCM(playerid, COLOR_RED, !"Используйте: /bomb [таймер (сек)]");
		if(time >= 10 && time <= 900)
		{
		    new bombid = MAX_BOMBS;
		    for(new i; i < MAX_BOMBS;i ++)
		    {
		        if(!BombInfo[i][bbCreated])
		        {
	                bombid = i;
	                break;
		        }
		    }
		    if(bombid < MAX_BOMBS)
		    {
		        new Float:X, Float:Y, Float:Z;
		        GetPlayerPos(playerid, X, Y, Z);
		        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		        SCMf(playerid, COLOR_LIME, "Вы заложили бомбу. Таймер на %s", Convert(time));
		        CreteBomb[playerid] = 0;
		        RemovePlayerAttachedObject(playerid, 7);
		        BombInfo[bombid][bbCreated] = true;
		        BombInfo[bombid][bbTime] = time;
		        f(str_1, 100,"{FFFFFF} Бомба \n{FF9900}%s", Convert(time));
		        BombInfo[bombid][bbText] = CreateDynamic3DTextLabel(str_1, -1, X, Y, Z, 10.0);
		        BombInfo[bombid][bbObject] = CreateDynamicObject(1252, X, Y, Z, 0, 0, 0);
		        BombInfo[bombid][bbPos][0] = X;
		        BombInfo[bombid][bbPos][1] = Y;
		        BombInfo[bombid][bbPos][2] = Z;
		        PI[playerid][pBomb] --;
		    }
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не больше 900 и не меньше 10");
	}
	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет бомбы");
	return 1;
}
CMD:createbomb(playerid)
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"Вы не состоите ни в банде , ни в мафии.");
	if(GetInvCount(playerid, Item_Mats) < 900) return SCM(playerid, COLOR_RED, !"У вас недостаточно патронов для изготовления! (( 900 ))");
	if(PI[playerid][pBomb]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже сделали бомбу!");
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	InvAdd(playerid, Item_Mats, -900);
	aml(102, playerid, "", "создал бомбу", Item_Mats, 900);
	CreteBomb[playerid] = 30;
	return SCM(playerid, COLOR_GREY, !"Вы начали делать бомбу.");
}
CMD:setspawn(playerid)
{
	new house = GetPlayerHouse(playerid);
	if(PI[playerid][pDCTime] == 1 && house == -1)
	{
		PI[playerid][pDCTime] = 0;
		UpdatePlayerDataInt(playerid, "DCTime", 0);
	}
	if(PI[playerid][pDCTime] == 3)
	{
		if(PI[playerid][pFamilyMember] == -1)
		{
			PI[playerid][pDCTime] = 0;
			UpdatePlayerDataInt(playerid, "DCTime", 0);
		}
	}
	str_1[0] = EOS;
	switch(PI[playerid][pDCTime])
	{
	    case 0: str_1 = "{BE2D2D}Вокзал{FFFFFF}";
	    case 1: f(str_1,sizeof(str_1),"{33AA33}Дом №(%i)", house);
	    case 2: str_1 = "{33AA33}Организация{FFFFFF}";
	    case 3: str_1 = "{33AA33}Семейная квартира{FFFFFF}";
	    case 4: f(str_1,sizeof(str_1),"{FF7F50}%.2f %.2f %.2f{FFFFFF}",PI[playerid][pPos_X],PI[playerid][pPos_Y],PI[playerid][pPos_Z]);
	}
	return ac_ShowPlayerDialog(playerid, 1781),ShowPlayerDialogf(playerid, 1781, 2, !"Выберите место спавна", !"Принять", !"Закрыть", "Текущее место спавна: %s\nУстановить дом местом спавна.\nУстановить организацию местом спавна.\nУстановить вокзал местом спавна.\nУстановить семейную квартиру спавном.\nУстановить спавн в этой точке.", str_1);
}
CMD:setcost(playerid, params[])//Адм
{
    if(!PI[playerid][pAccessCMD][11]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new houseid, cost; else return SCM(playerid, COLOR_RED, !"Используй: /setcost [id] [cost]");
    if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 1;
    HouseInfo[houseid][hCost] = cost;
    SCM(playerid, -1, !"GATOVA");
    UpdateHouse(houseid);
	f(str_1, sizeof(str_1), "установил стоимость $%i дому <a href=/house?house=%i>%i</a>", cost, houseid, houseid);
	return aml(18, playerid, "", str_1, 7);
}
CMD:setklass(playerid, params[])//Адм
{
    if(!PI[playerid][pAccessCMD][12]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new houseid, klass; else return SCM(playerid, COLOR_RED, !"Используйте: /setklass [id] [klass]");
	if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 1;
	HouseInfo[houseid][hKlass] = klass;
	SCM(playerid, -1, !"GATOVA");
	UpdateHouse(houseid);
	f(str_1, sizeof(str_1), "установил клас %i дому <a href=/house?house=%i>%i</a>", klass, houseid, houseid);
	return aml(18, playerid, "", str_1, 7);
}
CMD:changehouse(playerid, params[])//Адм
{
    if(!PI[playerid][pAccessCMD][13]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new Float:X, Float:Y, Float:Z;
 	GetPlayerPos(playerid, X, Y, Z);
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /changehouse [id]");
    if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 1;
	DestroyDynamicMapIcon(HouseIcon[houseid]);
	DestroyDynamicCP(HouseCP[houseid]);
	DestroyDynamic3DTextLabel(House3DText[houseid]);
    HouseInfo[houseid][hEnter_X] = X;
    HouseInfo[houseid][hEnter_Y] = Y;
    HouseInfo[houseid][hEnter_Z] = Z;
    HouseIcon[houseid] = CreateDynamicMapIcon(HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z], 31, 0);
    HouseCP[houseid] = CreateDynamicCP(HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z], 2.0, -1, -1, -1, 10.0);
   	House3DText[houseid] = CreateDynamic3DTextLabel(!" Дом ", 0xE1AE3CFF, HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z], 10.0);
    UpdateHouse(houseid);
    SCM(playerid, -1, !"GATOVA");
	f(str_1, sizeof(str_1), "переместил дом <a href=/house?house=%i>%i</a> на координаты %.2f %.2f %.2f", houseid, houseid, X, Y, Z);
	return aml(18, playerid, "", str_1, 7);
}
CMD:changebiz(playerid, params[])//Адм
{
    if(!PI[playerid][pAccessCMD][14]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new Float:X, Float:Y, Float:Z;
 	GetPlayerPos(playerid, X, Y, Z);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /changebiz [id]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 1;
    BizInfo[bizid][bEnter_X] = X;
    BizInfo[bizid][bEnter_Y] = Y;
    BizInfo[bizid][bEnter_Z] = Z;
	UpdateBiz(bizid, 1, 1);
    SCM(playerid, -1, !"GATOVA");
	f(str_1, sizeof(str_1), "переместил бизнес <a href=/biz?biz=%i>%i</a> на координаты %.2f %.2f %.2f", bizid, bizid, X, Y, Z);
	return aml(18, playerid, "", str_1, 6);
}
CMD:setbiztype(playerid, params[])//Адм
{
	if(!PI[playerid][pAccessCMD][15]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
 	extract params -> new bizid, type; else return SCM(playerid, COLOR_RED, !"Используй: /setbiztype [id] [type]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 1;
    BizInfo[bizid][bState] = type;
    UpdateBiz(bizid, 1, 1);
    SCM(playerid, -1, !"GOTOVA");
	f(str_1, sizeof(str_1), "изменил тип бизнеса <a href=/biz?biz=%i>%i</a> на %i", bizid, bizid, type);
	return aml(18, playerid, "", str_1, 6);
}
#if AC_ON
CMD:cpanel(playerid, params[])//Адм
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    pAntiCheatSettingsPage{playerid} = 1; // Присваиваем переменной, хранящей номер страницы, на который находится игрок, значение 1 (т.е, теперь игрок на 1-ой странице)
    return ShowPlayer_AntiCheatSettings(playerid); // Показываем игрок главный диалог настроек анти-чита
}
#endif
CMD:sms(playerid, params[])
{
    if(!PI[playerid][pTelNum]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет SIM-карты!");
	f(str_1, 500, "SELECT t.`Name`, t.`Namez`, t.`Text`, t.`read`, t.`time` FROM `PhoneMes` AS t JOIN (SELECT `Name`, `Text`, max(`time`) as `mtime` FROM `PhoneMes` WHERE `Namez` = '%s' GROUP BY `Name`) as t1 ON t.`Name` = t1.`Name` AND t.`time` = t1.`mtime` ORDER BY t.`time` DESC;", PN(playerid));
	mysql_pquery(mysql, str_1, "ShowPlayerMessages", "d", playerid);
	return 1;
}
CMD:orgmembers(playerid)//Адм
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	str_1 = "Организация\tОнлайн";
	for(new i = 1; i < MAX_ORGS; i++)
	{
		f(str_2, 61, "\n{FFFFFF}%s\t{9ACD32}%i чел.", OrgInfo[i][oName], IsTeamConnected(i));
		strcat(str_1, str_2);
	}
	return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, !"", str_1, !"Закрыть", !"");
}
CMD:namestore(playerid, params[])//Адм
{
	if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24];
	if(sscanf(params,"s[24]",name)) return SCM(playerid, -1, !"/namestore [ Ник/ID ]");
	static oldname[MAX_PLAYER_NAME], data[16], str_namestore[MAX_PLAYER_NAME + 19 + 16], frmt_nickname[MAX_PLAYER_NAME];
	str_namestore[0] = EOS, str_1[0] = EOS;
	if(strlen(name) <= 3 && IsNums(name))
	{
		new player_id = strval(name);
		if(!IsPlayerConnected(player_id)) return SCM(playerid, -1, !"/namestore [ Ник/ID ]");
		
		static fmt_str[] = "SELECT * FROM `NameHistory` WHERE `nh_owner` = '%i'";
		mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 20, fmt_str, PI[player_id][pID]);
		new Cache:result = mysql_query(mysql, str_3);
		new num = cache_num_rows();

		if(!num)
		{
			f(frmt_nickname, sizeof(frmt_nickname), "%s", PN(player_id));
			SPD(playerid, 1488, DIALOG_STYLE_MSGBOX, frmt_nickname, !"Этот игрок не менял ник", !"OK", !"");
			SCM(playerid, -1, !"Этот игрок не менял ник");
		}
		else
		{
			f(frmt_nickname, sizeof(frmt_nickname), "%s", PN(player_id));
			strcat(str_1, "История ников:");
			for(new ns = 0 ; ns < num ; ns ++ )
			{
				cache_get_value_index(ns, 1, oldname);
				cache_get_value_index(ns, 2, data);
				if(strlen(oldname) || strlen(data)) f(str_namestore, sizeof str_namestore, "\n{FFFF00}%s\t{FFFFFF}%s", oldname, data);
				strcat(str_1, str_namestore);
			}
			SPD(playerid, 1488, DIALOG_STYLE_MSGBOX, frmt_nickname, str_1, !"OK", !"");
		}
		cache_delete(result);
	}
	else
	{
		static fmt_str[] = "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s'";
		mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, name);
		new Cache:result = mysql_query(mysql, str_3);
		new num = cache_num_rows(), id;
		if(num) cache_get_value_index_int(0, 0, id);
		cache_delete(result);

		if(num)
		{
			static fmt_str2[] = "SELECT * FROM `NameHistory` WHERE `nh_owner` = '%i'";
			mysql_format(mysql, str_3, sizeof(fmt_str2) - 2 + 20, fmt_str2, id);
			new Cache:result2 = mysql_query(mysql, str_3);
			num = cache_num_rows();

			if(!num)
			{
				f(frmt_nickname, sizeof(frmt_nickname), "%s", name);
				SPD(playerid, 1488, DIALOG_STYLE_MSGBOX, frmt_nickname, !"Этот игрок не менял ник", !"OK", !"");
				SCM(playerid, -1, !"Этот игрок не менял ник");
			}
			else
			{
				f(frmt_nickname, sizeof(frmt_nickname), "%s", name);
				strcat(str_1, "История ников:");
				for(new ns = 0 ; ns < num ; ns ++ )
				{
					cache_get_value_index(ns, 1, oldname);
					cache_get_value_index(ns, 2, data);
					if(strlen(oldname) || strlen(data)) f(str_namestore, sizeof str_namestore, "\n{FFFF00}%s\t{FFFFFF}%s", oldname, data);
					strcat(str_1, str_namestore);
				}
				SPD(playerid, 1488, DIALOG_STYLE_MSGBOX, frmt_nickname, !"OK", !"", str_1);
			}
			cache_delete(result2);
		}
		else SCM(playerid, COLOR_GREY, !"Неверный никнейм");
	}
	return 1;
}
CMD:buybiz(playerid)
{
	if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!"); 
	SetPVarInt(playerid, !"reloader", gettime()+5);
    for(new i; i < OWNABLEBIZES; i++)
    {
        new bool:cont=false;
	    if(BizInfo[i][bState] == 19) 
	    { 
	    	if(PI[playerid][pDonateMoney] >= BizInfo[i][bCost]) cont = true; 
		}
	    else if(BizInfo[i][bCost] != 0) 
	    { 
	    	if(GetMoney(playerid) >= BizInfo[i][bCost]) cont = true; 
		}
		else if(BizInfo[i][bCost] == 0) 
		{ 
			if(PI[playerid][pVirMoney]>=500000) cont = true; 
		}
        if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bEnter_X], BizInfo[i][bEnter_Y], BizInfo[i][bEnter_Z]))
    	{
    		if(PI[playerid][pAdmin] > ADM_NONE && !PI[playerid][pAccessCMD][39]) return SCM(playerid, COLOR_LIGHTRED, "[Подсказка] {ffffff}Администрации нельзя ловить имущество!");
        	if(GetPlayerBizes(playerid))
        	{
		        if(GetString(BizInfo[i][bOwner],"The State"))
	     	    {
					if(cont == true) Captch_OpenForPlayer(playerid, 2);
	     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	     	        InfoBiz[playerid] = i;
     	        }
     	        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот бизнес уже кем то куплен");
 	        }
			else SCM(playerid, COLOR_GREEN, !">>>>{FFFFFF} - Вы не можете приобрести больше бизнесов! Покупайте улучшение 'Бизнесмен' чтобы иметь до 5-ти бизнесов!");
 	    }
    }
    return 1;
}
CMD:ahelp(playerid, params[])//Адм
{
	if(PI[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid,COLOR_GREY,NO_DUTY_TEXT);
	extract params -> new lvl; else return SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Используйте /ahelp [LVL]");
	switch(lvl)
	{
		case 1:
		{
	    	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
			!"{FFFFFF}apanel - Админ. панель\n\
			tp - Телепорт по фракциям\n\
			slap - Слапнуть игрока\n\
			flip - флипнуть\n\
			jp - Джетпак\n\
			iskamen - Использует ли игрок камень неузвимости\n\
			lasttp - Использовал ли игрок камень пространства\n\
			freeze - Заморозить игрока\n\
			unfreeze - Разморозить игрока\n\
			ot - Ответ на репорт\n\
			pm - Сообщение игроку\n\
			queryaaceptadmin - отправить письмо\n\
			putboject - установить обьект\n\
			getwarn - Наказания игрока\n\
			az - Телепорт в админ. зону\n\
			a - Админ. чат\n\
			spplayer - Заспавнить игрока\n\
			re - Следить за игроком\n\
			goto - Телепорт к игроку\n\
			gotocar - Телепорт к машине\n\
			getherecar - Телепортировать к себе машину\n\
			spcar - Заспавнить машину\n\
			iwep - проверить оружие игрока\n\
			spawn - Заспавниться\n\
			gethere - Телепортировать к себе игрока\n\
			orgmembers - Количество людей во фракциях\n\
			check - Статистика игрока\n\
			showpilots - Просмотр пилотов на работе\n\
			checkpass - Просмотр паспорта игрока\n\
			checkinv - Просмотр предметов игрока\n\
			checkcarskill - проверить навык вождения\n\
			checkskills - Проверить скиллы/улучшения/аксессуары\n\
			sethp - Установить здоровье\n\
			checklic - Проверить лицензии\n\
			gotohouse - Телепорт к дому\n\
			gotobiz - Телепорт к бизнесу\n\
			gototrailer - телепорт к трейлеру\n\
			checkpunish - История наказаний\n\
			getplayerfamid - Узнать ID семьи игрока\n\
			gotoint - Телепорт в стандартный GTA интерьер\n\
			inv - Стать невидимым на радаре\n\
			gotozomb - Телепорт на МП 'Зловещий Дворец'\n\
			gototrash - Телепорт к мусорке по ID\n\
			gotolabel - Телепорт на закрепленный текст\n\
			unfirewood - Убрать костры\n\
			vehlimit - Количество занятых слотов авто\n\
			regmsg - Вкл/выкл сообщения о рег. новых игроков\n\
			famgzinfo - информация о семейной территории",
			!"Принять", !"");
		}
	    case 2:
	    {
	        if(PI[playerid][pAdmin] < lvl) return 1;
	    	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
	    	!"{FFFFFF}cure - Поднять игрока из стадии\n\
			weap - Забрать оружие\n\
			smp - Кричать на МП\n\
			gotobanner - Телепортироваться к банеру\n\
			unjail - Выпустить из деморгана\n\
			jail - Наказать игрока деморганом\n\
			unmute - Убрать бан чата\n\
			kick - Кикнуть игрока\n\
			mute - Выдать бан чата игроку\n\
			getip - Узнать ип игрока\n\
			pgetips - Узнать похожие ип\n\
			pgetip - Узнать похожие ип\n\
			checkfam - Проверить семью на деньги\n\
			findam - Найти название семьи по ид\n\
			adeldesc - Удалить описание персонажа у игрока",
			!"Принять", !"");
		}
	    case 3:
	    {
            if(PI[playerid][pAdmin] < lvl) return 1;
	    	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
			!"{FFFFFF}stream - режим стримера\n\
			factionlog - Посмотр логов организации\n\
			apunish - Посадить игрока в КПЗ с отработкой\n\
			eatall - Выдать голод в радиусе\n\
			plveh - Выдать пременную машину\n\
			weapall - Удалить оружие в радиусе\n\
			bail - Выпустить из кпз игрока\n\
			unwarn - Убрать варн у игрока\n\
			ban - Выдать бан\n\
			warn - Выдать варн\n\
			spcars - Заспавнить машины в радиусе\n\
			repcars - Отремонтировать машины в радиусе\n\
			spplayers - Заспавнить игроков в радиусе\n\
			unbegall - Убрать попрошаек в радиусе\n\
			freezeall - Заморозить в радиусе\n\
			unfreezeall - Разморозить в радиусе\n\
			accepttrade - Снять ограничение на торгу\n\
			azakon - Выдать игнор.звезд в радиусе\n\
			hpall - Выдать хп в радиусе\n\
			unarmourall - Снять броню в радиусе\n\
			armourall - Выдать броню в радиусе\n\
			gunall - Выдать оружие в радиусе\n\
			givegun - Выдать оружие\n\
			blacklistleader - Черный список лидеров\n\
			trspawn - Эвакуировать трейлер\n\
			eventmenu - Открыть эвент меню\n\
			removetune - удалить с транспорта весь тюнинг",
			!"Принять", !"");
		}
	    case 4:
	    {
	        if(PI[playerid][pAdmin] < lvl) return 1;
	    	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
			!"{FFFFFF}notif - Создать уведомление игроку (получит только при входе на сервер)\n\
			setfamgz - Сделать семью владельцеми территории\n\
			cancelfamgz - Отменить встречу семей на территории\n\
			label - Создать закрепленный текст на замле\n\
			listlabel - Список созданных закреп. текстов\n\
			removelabel - Удалить закрепленный текст\n\
			delhname - Удалить название дома\n\
			delbname - Удалить название бизнеса\n\
			checkoff - Оффлайн статистика игрока\n\
			warnoff - Выдать варн офф.\n\
			checkbiz - Проверить бизнес на деньги\n\
			checkhouse - Проверить дом\n\
			setdesc - Изменить описание игрока\n\
			unban - Разбанить игрока\n\
			amember - Принять себя в организацию\n\
			afkkick - Кикнуть игроков в афк\n\
			aparkcar - Отправить машину на штраф. стоянку и выдать штраф\n\
			weather - Изменить погоду\n\
			makeleader - Назначить лидером\n\
			setgangzone - Установить цвет зоны\n\
			setbizmafia - установить крышу бизнесу\n\
			cleardemoragne - Очистить попадение в деморган игроку\n\
			sban - Забанить тихо\n\
			banip - Забанить ИП\n\
			unbanip - Разбанить МП\n\
			jailoff - Посадить игрока в деморган офф.\n\
			muteoff - Выдать игроку мут офф.\n\
			skick - Тихо кикнуть\n\
			setskin - Выдать скин\n\
			uval - Уволить из фракции\n\
			skinall - Выдать скин в радиусе\n\
			ao - Общий чат\n\
			unapunishoff - выпустить с тюрьмы в офф.\n\
			unjailoff - выпустить с деморгана в офф.\n\
			unmuteoff - снять загрулшку в офф.\n\
			unwarnoff - убрать варн у игрока в оффлайне\n\
			bizlock - закрыть бизнес.\n\
			bizopen - открыть бизнес.\n\
			clearrp - Очистить обьекты оружия на полу\n\
			clearbarrel - Очистить бочки на полу\n\
			clearput - Очистить обьекты ПД вокруг себя",
			!"Принять", !"");
		}
	    case 5:
	    {
	        if(PI[playerid][pAdmin] < lvl) return 1;
	    	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
			!"{FFFFFF}setvw - Изменить вирт мир игроку (или узнать свой)\n\
			uvaloff - Уволить игрока в оффлайне\n\
			bizfin - Посмотреть финансовую статистику бизнеса\n\
			pobjectdel - Удалить обьекты недвижимости в радиусе\n\
			clearhotel - Выселить игрока из отеля (оффлайн)\n\
			admtrunk - Открыть/закрыть багажник любого авто\n\
			houseinv - Посмотреть предметы в шкафу дома\n\
			banipoff - Забанить ип оффлайн\n\
			layoutoff - Запретить/Разрешить проверку макетов\n\
			setname - Сменить ник\n\
			vote - Выборы\n\
			restartreport - Перезапустить репорт\n\
			rasform - Очистить зоны гетто\n\
			givedemotalon - Выдать талон выхода из деморгана (1 талон - 10 мин)\n\
			givedemotalonoff - Выдать талон выхода из деморгана в оффлайне\n\
			ungivedemotalonoff - Отменить оффлайн-выдачу талонов антидеморгана\n\
			banoff - Забанить в оффлайне (без обнуления)\n\
			plgmadmin - Вкл/выкл админу GM ADmin\n\
			removeitem - Отобрать предмет только в своём инвентаре\n\
			givemydonate - Передать свой донат\n\
			givemydonateoff - Передать свой донат в оффлайне\n\
			ungivemydonateoff - Отменить оффлайн-выдачу доната\n\
			agl - Выдать пакет лицензий/мед.карту/военный билет",
			!"Принять", !"");
		}
	    case 6:
	    {
			if(PI[playerid][pAdmin] < lvl) return 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
			!"{FFFFFF}veh - создать админское авто\n\
			delveh - удалить админское авто\n\
			delvehall - удалить все админские авто\n\
			agiveskin - Выдать вечный скин (в инвентарь)\n\
			setadmtag - Установить админ-тэг для /ao\n\
			changeservername - Изменить название сервера\n\
			dellfam - Удалить семью\n\
			settime - Установить время\n\
			x2zp - x2 зарплаты\n\
			changeadminint - Изменить интерьер админов\n\
			banoff - Забанить в оффлайне\n\
			makeadminoff - Изменить уровень адм. офф.\n\
			makeadmin - Назначить админом\n\
			tree - изменить цены на частной ферме\n\
			map - Маппинг\n\
			removeitem - Отобрать предмет в слоте у игрока\n\
			setrep - Установить репутацию админу\n\
			trremove - Продать чужой трейлер\n\
			clearbiz - очистить заместителя в бизнесе\n\
			clearfarmzam - удалить заместителя в ферме\n\
			clearhouse - очистить список жельцов в доме\n\
			makefamilyleader - Изменить владельца семьи\n\
			uvalall - расформировать организацию\n\
			startzomb - запустить МП 'Зловещий Дворец'\n\
			stopzomb - остановить МП 'Зловещий Дворец'\n\
			enablezomb - отключить МП 'Зловещий Дворец'\n\
			enablealliance - отключить систему Альянсов\n\
			enableworkshop - отключить систему Мастерской",
			!"Принять", !"");
		}
		case 7:
		{
			if(PI[playerid][pAdmin] < lvl) return 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"",
			!"{FFFFFF}veh - создать админское авто\n\
			delveh - удалить админское авто\n\
			delvehall - удалить все админские авто\n\
			agiveskin - Выдать вечный скин (в инвентарь)\n\
			setadmtag - Установить админ-тэг для /ao\n\
			changeservername - Изменить название сервера\n\
			dellfam - Удалить семью\n\
			settime - Установить время\n\
			x2zp - x2 зарплаты\n\
			changeadminint - Изменить интерьер админов\n\
			banoff - Забанить в оффлайне\n\
			makeadminoff - Изменить уровень адм. офф.\n\
			makeadmin - Назначить админом\n\
			tree - изменить цены на частной ферме\n\
			map - Маппинг\n\
			removeitem - Отобрать предмет в слоте у игрока\n\
			setrep - Установить репутацию админу\n\
			trremove - Продать чужой трейлер\n\
			clearbiz - очистить заместителя в бизнесе\n\
			clearfarmzam - удалить заместителя в ферме\n\
			clearhouse - очистить список жельцов в доме\n\
			makefamilyleader - Изменить владельца семьи\n\
			uvalall - расформировать организацию\n\
			startzomb - запустить МП 'Зловещий Дворец'\n\
			stopzomb - остановить МП 'Зловещий Дворец'\n\
			enablezomb - отключить МП 'Зловещий Дворец'\n\
			enablealliance - отключить систему Альянсов\n\
			enableworkshop - отключить систему Мастерской",
			!"Принять", !"");
		}
	}
	return 1;
}
CMD:sethousegarage(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][16]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	extract params -> new house_id, house_garage_status; else return SCM(playerid, COLOR_RED, !"Используй: /sethousegarage [house id] [0/1]");
	if(!(0 <= house_garage_status <= 1)) return SCM(playerid, COLOR_RED, !"Используй: /sethousegarage [house id] [0/1]");
	if(house_garage_status == HouseInfo[house_id][hGarage]) return SCM(playerid, COLOR_LIGHTRED, (HouseInfo[house_id][hGarage]) ? ("[Ошибка] {FFFFFF}Дом уже с гаражом") : ("[Ошибка] {FFFFFF}Дом и так без гаража"));
	if(house_id < 0 || house_id > OWNABLEHOUSES-1) return 1;

	new
		Float:X,
		Float:Y,
		Float:Z;
	GetPlayerPos(playerid, X, Y, Z);

	HouseInfo[house_id][hGarage] = house_garage_status;
	if(house_garage_status)
	{
		HouseInfo[house_id][hGarage_X] = X;
		HouseInfo[house_id][hGarage_Y] = Y;
		HouseInfo[house_id][hGarage_Z] = Z;
	}
	UpdateHouse(house_id);
	UpdateHouseGarage(house_id);
	SCM(playerid, COLOR_RED, (HouseInfo[house_id][hGarage]) ? ("Вы добавили гараж к указанному вами дому") : ("Вы убрали гараж у указанного вами дома"));
	return 1;
}
CMD:satiety(playerid, param[])
{
    switch(Fullness[playerid])
	{
	    case 0..10: str_1 = "{E12525}очень голодны{A6A9A7}";
	    case 11..50: str_1 = "{F99C32}голодны{A6A9A7}";
	    case 51..70: str_1 = "{6ED947}немного проголодались{A6A9A7}";
	    case 71..150: str_1 = "{54C977}сыты{A6A9A7}";
	}
	f(str_2,sizeof(str_2),"{A6A9A7}На данный момент вы %s.\nВаша сытость: {FFFFFF}%i/100.{A6A9A7}\n\n\nПополнить сытость можно в любой закусочной штата.\nЕсли долго не есть ваше здоровье начнет ухудшаться.", str_1, Fullness[playerid]);
	SPD(playerid,0,0, !"", str_2,"Закрыть","");
	return 1;
}
CMD:ffarm(playerid, param[])
{
	switch(PI[playerid][pContractTime])
	{
	    case 0..499: str_2 = "начинаюшим фермером\n\n{928C85}Для работы трактористом необходимо: 500 очк. фермера\nДля работы комбайнером необходимо: 3200 очк. фермера\nДля работы на кукурузнике необходимо: 7000 очк. фермера.";
        case 500..3199: str_2 = "трактористом\n\n{36972E}Для работы трактористом необходимо: 500 очк. фермера - [ Открыто ]\n{928C85}Для работы комбайнером необходимо: 3200 очк. фермера\nДля работы на кукурузнике необходимо: 7000 очк. фермера.";
		case 3200..6999: str_2 = "комбайнером\n\n{36972E}Для работы трактористом необходимо: 500 очк. фермера - [ Открыто ]\nДля работы комбайнером необходимо: 3200 очк. фермера - [ Открыто ]\n{928C85}Для работы на кукурузнике необходимо: 7000 очк. фермера.";
		default: str_2 = "водителем кукурузника\n\n{36972E}Для работы трактористом необходимо: 500 очк. фермера - [ Открыто ]\nДля работы комбайнером необходимо: 3200 очк. фермера - [ Открыто ]\nДля работы на кукурузнике необходимо: 7000 очк. фермера. - [ Открыто ]";
	}
	f(str_1,sizeof(str_1),"{D38A37}Навык фермера: %i очк.{FFFFFF}\nНа данный момент вы можете работать:{D38A37} %s\n\n{D38A37}- Хорошей работы.",PI[playerid][pContractTime],str_2);
	SPD(playerid,0,0,"",str_1,"Закрыть","");
}
CMD:carm(playerid, params[])
{
	if(!IsAArmy(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не состоите в военных войсках!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_VALIK, !"Вы не на дежурстве");
    if(GetVehicleModel(GetPlayerVehicleID(playerid))==433)
    {
    	f(str_2,500,"Загрузиться\nРазгрузить на склад ЛСПД [%i/30к.] bank: {73B461}%i${FFFFFF}\nРазгрузить на склад Областной полиции [%i/30к.] bank: {73B461}%i${FFFFFF}\nРазгрузка в FBI [%i/30к.] bank: {73B461}%i${FFFFFF}\nРазгрузка SFPD [%i/30к.] bank: {73B461}%i$\nРазгрузка Полиция LV [%i/30к.] bank: {73B461}%i$",OrgInfo[TEAM_LSPD][oMats],OrgInfo[TEAM_LSPD][oBank],OrgInfo[TEAM_LVPD][oMats],OrgInfo[TEAM_LVPD][oBank],OrgInfo[TEAM_FBI][oMats],OrgInfo[TEAM_FBI][oBank],
		OrgInfo[TEAM_SFPD][oMats],OrgInfo[TEAM_SFPD][oBank],OrgInfo[TEAM_PDLV][oMats],OrgInfo[TEAM_PDLV][oBank]);
    	SPD(playerid,9653,2, !"", str_2,"Принять","Закрыть");
	}
	else if(GetVehicleModel(GetPlayerVehicleID(playerid))==548) SPD(playerid,9663,2,"","Загрузить вертолет [ с завода ]\nРазгрузить в Армии LS\nРазгрузить в Армии LV\nРазгрузить в Армии SF","Принять","Закрыть");
	return 1;
}
CMD:strafs(playerid, params[])
{
	if(!IsACop(playerid)) return  SCM(playerid, COLOR_RED, !"Вы не полицейский!");
    if(PI[playerid][pRank] < 4) return SCM(playerid, COLOR_RED, !"Эта возможность доступна с 4 ранга");
    if(GetPlayerState(playerid)!=2)return SCM(playerid, COLOR_RED, !"Вы должны находится за рулем!");
   	if(GetVehicleModelEx(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_RED, !"Вы должны находится в евакуаторе!");
	SPD(playerid,193,1,"Введите сумму","Введите сумму залога\n\n{9ACD32}- Не менее $800 и не более $10000","Ок","Отмена");
	return 1;
}
CMD:tp(playerid, params[])
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new meber;
    if(sscanf(params, "d", meber)) return SCM(playerid, COLOR_RED, !"Используй: /tp [id фракции]");
    if(meber > 27 || meber < 1) return SCM(playerid, COLOR_GREY, !"OT 1 DO 27");
 	SetPlayerInterior(playerid,SpawnIntWorld[meber][0]);
    SetPlayerVirtualWorld(playerid,SpawnIntWorld[meber][1]);
	J_SetPlayerPos(playerid, SpawnInfo[meber][0], SpawnInfo[meber][1], SpawnInfo[meber][2]);
	return 1;
}
CMD:tpcor(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	new Float:x, Float:y, Float:z;
	if(sscanf(params, "p<,>fff", x, y, z)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /tpcor [x] [y] [z]");
	SetPlayerPos(playerid, x, y, z);
	return 1;
}
CMD:showtatu(playerid)
{
	if(GetPVarInt(playerid, !"antifloodtatu") > gettime())
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");

	f(str_2, sizeof(str_2), "%s[%i] снимает верхнюю одежду.", PN(playerid), playerid);
	ProxDetector(25.0, playerid, str_2, COLOR_ME);
	ApplyAnimation(playerid, !"PED", !"SHOVE_PARTIAL", 4.0, 0, 0, 0, 0, 0, 1);
	SetPVarInt(playerid, !"antifloodtatu", gettime() + 9);
	f(str_2, sizeof(str_2), "{8C6F6F}<< {AFAFAF}На шее: {FFFFFF}%s{AFAFAF}, На туловище: {FFFFFF}%s{AFAFAF}.", TATTOO_NAME[player_tattoos[playerid][0]], TATTOO_NAME[player_tattoos[playerid][1]]);
	ProxDetector(25.0, playerid, str_2, COLOR_GREY);
	f(str_2, sizeof(str_2), "{8C6F6F}<< {AFAFAF}На руках: {FFFFFF}%s{AFAFAF}, На спине: {FFFFFF}%s{AFAFAF}.", TATTOO_NAME[player_tattoos[playerid][2]], TATTOO_NAME[player_tattoos[playerid][3]]);
	ProxDetector(25.0, playerid, str_2, COLOR_GREY);
	return 1;
}
CMD:beg(playerid)
{
    if(PI[playerid][pLevel] > 4) return 1;
    if(!PI[playerid][pBeg][1])
    {
        if(IsPlayerInRangeOfPoint(playerid, 50.0, 1755.4108, -1893.7559, 13.5567)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На территории спавна, нельзя просить деньги!");
        if(IsPlayerInAnyVehicle(playerid)) return 1;
        if(PI[playerid][pBeg][0] > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Попрошайничать можно раз в 10 секунд!");

        new tmpobjid, Float:pos_x, Float:pos_y, Float:pos_z, Float:angle;

        GetPlayerPos(playerid, pos_x, pos_y, pos_z);
        GetXYInFrontOfPlayer(playerid, pos_x, pos_y, 1.0);
        GetPlayerFacingAngle(playerid, angle);

        tmpobjid = CreateDynamicObject(2599, pos_x, pos_y, pos_z - 0.6, 0.0, 0.0, angle, -1, -1, -1, 300.0, 300.0);
		SetDynamicObjectMaterial(tmpobjid, 1, 1413, !"break_f_mesh", !"CJ_CORRIGATED", 0);
		SetDynamicObjectMaterialText(tmpobjid, 0, !"Подайте\nбомжу на\nлечение", 140, !"Ariel", 75, 1, -1, 0, 1);

        GetXYInFrontOfPlayer(playerid, pos_x, pos_y, 2.0);
        CreateDynamicObject(11744, pos_x, pos_y, pos_z - 0.9, 0.0, 0.0, angle, -1, -1, -1, 300.0, 300.0);
        Streamer_Update(playerid);

        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"Псс Инфа!", " \n \n{FFFFFF}Вы начали попрошайничать деньги. Каждые 40 секунд вы будете получать по 10$.\
    	\nА если вы будете под руководством мафии, то сможете получать до 15$ в 40 секунд!\
    	\nДля того чтобы подключится к бизнесу мафии, достаточно найти одного их представителя\
    	\n \n{e8793e}Попрошайничать вы можете даже в афк, это даст вам возможность заработать деньги,\
    	\nпока вы занимаетесь делами в реальной жизни. Попрошайничать можно до 24 часов афк!\n ", !"Понял", !"");

        PI[playerid][pBeg][0] = 10 + gettime();
        PI[playerid][pBeg][1] = 1;
        PI[playerid][pBeg][2] = tmpobjid;
        PI[playerid][pBeg][4] = 0;

        TogglePlayerControllable(playerid, 0);
        ApplyAnimation(playerid, !"BEACH", !"ParkSit_W_loop", 4.1, 0, 1, 1, 1, 1);

        GameTextForPlayer(playerid, !"successfull", 5000, 1);
        return SCM(playerid, -1, !">> {FAAC58}Используйте {FFFFFF}/beg{FAAC58}, чтобы закончить попрошайничать!");
    }

    TogglePlayerControllable(playerid, 1);

    DestroyDynamicObject(PI[playerid][pBeg][2]);
    DestroyDynamicObject(PI[playerid][pBeg][2] + 1);

    PI[playerid][pBeg][1] = 0;
    ApplyAnimation(playerid, !"CARRY", !"crry_prtial", 4.0, 0, 0, 0, 0, 0);

    return SCM(playerid, -1, !">> {73B461}Вы забрали табличку и перестали {FFFFFF}попрошайничать.");
}

CMD:minvite(playerid, params[])
{
    if(!IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в мафии!");
    if(isnull(params)) return SCM(playerid, -1, !"Используйте команду: /minvite [id игрока]");
    new targetid = strval(params);
    if(!IsPlayerConnected(targetid) || playerid == targetid) return SCM(playerid, -1, !"Данный игрок не подключён");
    if(PI[playerid][pLevel] > 4) return SCM(playerid, -1, !"Данный игрок не подключён");
    SCMf(playerid, -1, "%s теперь попрошайничает под Вашим покровительством.", PN(targetid));
    return SCMf(playerid, -1, "%s взял Вас под покровительство мафии.", PN(playerid));
}
CMD:stuff(playerid, params[])
{
	if(PI[playerid][pRank] < 9) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Набить татурировку может только заместитель и лидер!");
    if(!IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в мафии!");
    new target, bodypart;
    if(sscanf(params, "ii", target, bodypart))
    {
        SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /stuff [ID] [Часть тела [1-4]]");
        SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Выберите место куда набить татурировку!");
        SCM(playerid, -1, !" ");
        SCM(playerid, -1, !" ");
        SCM(playerid, -1, !"<<На шею: 'Эмблема семья'");
        SCM(playerid, -1, !"<<На туловище: 'Рисунок - Крёстного отца'");
        SCM(playerid, -1, !"<<На руку: 'Изображение - Роза обвивающая кинжал'");
        SCM(playerid, -1, !"<<На спину: 'Рисунок - Ганстер закован в кандалы'");
        return 1;
    }

    if(!(1 <= bodypart <= 4)) return SCM(playerid, -1, !"Ошибка: Часть тела может быть от 1 до 4!");
	if(PI[playerid][pMember] != PI[target][pMember]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Он не состоит в вашей мафии!");
    if(!ProxDetectorS(5.0, playerid, target)) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вы должны находиться рядом с игроком");

    player_tattoos[target][bodypart - 1] = bodypart;
    UpdatePlayerDataInt(playerid, "tattoo1", player_tattoos[playerid][0]);
    UpdatePlayerDataInt(playerid, "tattoo2", player_tattoos[playerid][1]);
    UpdatePlayerDataInt(playerid, "tattoo3", player_tattoos[playerid][2]);
    UpdatePlayerDataInt(playerid, "tattoo4", player_tattoos[playerid][3]);

    ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Принять", !"", "\n\n{FFFFFF}Вы успешно набили татуировку члену организации: {FF6347}%s\n\n", PN(target));
	ac_ShowPlayerDialog(target, 0),ShowPlayerDialogf(target, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Принять", !"", "{FFFFFF}\n\n%s[%i] набил вам татурировку: {FF6347}%s\n\n{42AAFF}Теперь вы на долго связаны со своей организацией\nи вам не легко будет начать новую жизнь!\n\n", PN(playerid), playerid, TATTOO_NAME[bodypart]);

	SetPlayerChatBubble(playerid, !"Набил татурировку", COLOR_PURPLE, 10.0, 5000);
	SetPlayerChatBubble(target, !"Скривился", COLOR_PURPLE, 10.0, 5000);
	ApplyAnimation(playerid, !"PED", !"SHOVE_PARTIAL", 4.0, 0, 0, 0, 0, 0, 1);
	ApplyAnimation(target, !"PED", !"IDLE_CHAT", 4.0, 0, 0, 0, 0, 0, 1);
    GameTextForPlayer(playerid, !"Successful", 5000, 1);
    return GameTextForPlayer(target, !"Successful", 5000, 1);
}
CMD:amember(playerid,params[])
{
   	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
   	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /amember [id]");
    if(params[0] > 27 || params[0] < 1) return SCM(playerid,COLOR_GREY, !"OT 1 DO 27");
    if(CheckIsASuccesIP(playerid)) return 0;
	PI[playerid][pMember] = params[0];
	UpdatePlayerDataInt(playerid, "Member", params[0]);
	PI[playerid][pRank] = 9;
	UpdatePlayerDataInt(playerid, "Rank", 9);
	TeamDuty{playerid} = true;
	SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
	SendAdminsMessagef(COLOR_GREY, "Админ %s(%i) вступил за зама в организацию %s",PN(playerid), playerid, OrgInfo[GetTeamID(playerid)][oName]);
    f(str_1, sizeof(str_1), "вступил за зама в организацию %s", OrgInfo[GetTeamID(playerid)][oName]);
	return aml(18, playerid, "", str_1);
}
CMD:dellfam(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    if(isnull(params)) return SCM(playerid, COLOR_RED, !"Используй: /dellfam [название семьи]");
    if(strlen(params) > 15) return 0;
    f(str_3, sizeof(str_3), "SELECT id FROM Family WHERE name = '%s' LIMIT 1", params);
    return mysql_pquery(mysql, str_3, "@DeleteFamily", "d", playerid);
}
CMD:delhname(playerid, params[])
{
    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /delhname [houseid]");
    if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 0;
	if(GetString(HouseInfo[houseid][hOwner], "The State")) return 0;
	if(!HouseInfo[houseid][hDescription]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У данного дома отсутствует название!");
	SetString(HouseInfo[houseid][hDescription], "");
	SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы успешно обнулили название дома!");
	SaveHouse(houseid);
	//aml
	return UpdateHouse(houseid);
}
CMD:delbname(playerid, params[])
{
    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /delbname [bizid]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	if(GetString(BizInfo[bizid][bOwner], "The State")) return 0;
	if(!BizInfo[bizid][bDescription]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У данного бизнеса отсутствует название!");
	SetString(BizInfo[bizid][bDescription], "");
	SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Вы успешно обнулили название бизнеса!");
	SaveBiz(bizid);
	UpdateBiz(bizid);
	f(str_1, sizeof(str_1), "обнулил название бизнеса <a href=/biz?biz=%i>%i</a>", bizid, bizid);
	return aml(18, playerid, "", str_1, 6);
}
CMD:bizlock(playerid, params[])
{
    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /bizlock [bizid]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	if(GetString(BizInfo[bizid][bOwner], "The State")) return 0;
	BizInfo[bizid][bLock] = !BizInfo[bizid][bLock];
	SCMf(playerid, COLOR_LIGHTRED, "[Информация] {FFFFFF}Вы успешно %s {FFFFFF}бизнес!", BizInfo[bizid][bLock] ? ("{008000}открыли") : ("{FF0000}закрыли"));
	SaveBiz(bizid);
	UpdateBiz(bizid);
	f(str_1, sizeof(str_1), "%s бизнес %i", BizInfo[bizid][bLock] ? ("открыл") : ("закрыл"), bizid);
	return aml(18, playerid, "", str_1, 6);
}
CMD:asellbiz(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][17]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /asellbiz [bizid]");
	if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	if(GetString(BizInfo[bizid][bOwner], "The State")) return 0;
	aml(10, playerid, BizInfo[bizid][bOwner], BizInfo[bizid][bName], bizid);
	if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] продал бизнес %i!", PN(playerid), playerid, bizid);
   	SCM(playerid, COLOR_LIGHTBLUE, !"Вы продали бизнес");
	return SellBiz(bizid);
}
CMD:asellhouse(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][18]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /asellhouse [houseid]");
	if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 0;
	if(GetString(HouseInfo[houseid][hOwner], "The State")) return 0;
	foreach(new i: Player)
	{
	    if(GetPlayerHouse(i) == houseid)
	    {
	    	DeletePlayerHouse(playerid, houseid);
	    	new house = GetPlayerFirstHouse(i);
			PI[i][pHouseSpawn] = house;
			UpdatePlayerDataInt(i, "HouseSpawn", house);
			PI[i][pDCTime] = 0;
			UpdatePlayerDataInt(i, "DCTime", 0);
			break;
		}
	}
	SCM(playerid, COLOR_LIGHTBLUE, !"Вы продали дом");
   	SetString(HouseInfo[houseid][hDescription], "");
    if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] продал дом %i!", PN(playerid), playerid, houseid);
	aml(11, playerid, HouseInfo[houseid][hOwner], "", houseid);
	return SellHouse(houseid);
}
CMD:asellcar(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][19]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new carid; else return SCM(playerid, COLOR_RED, !"Используй: /asellcar [carid]");
	new number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) return 0;
	if(IsASellCar(number)) return 0;
 	if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] продал транспорт %i!", PN(playerid), playerid, carid);
	aml(12, playerid, CarInfo[number][cOwner], "", number);
	return SellCar(number, number, GetPlayerID(CarInfo[number][cOwner]));
}
CMD:passwd(playerid, params[])
{
	static oldpass[50], newpass[50], newpass2[50];
	oldpass[0] = EOS, newpass[0] = EOS, newpass2[0] = EOS;
	if(sscanf(params, "s[50]s[50]s[50]", oldpass, newpass, newpass2)) return SCM(playerid, COLOR_LIGHTBLUE, !"/passwd [oldpass] [newpass] [newpass2]");
 	
	static fmt_str[] = "SELECT `Password` FROM `Qelksekm` WHERE `ID` = '%i' LIMIT 1";
	mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 20, fmt_str, PI[playerid][pID]);
	new Cache:result = mysql_query(mysql, str_3);
	
	static sqlpass[50];
	sqlpass[0] = EOS;

	cache_get_value_index(0, 0, sqlpass);
	cache_delete(result);

	if(strcmp(MD5_Hash(oldpass), sqlpass, true)!=0) return SCM(playerid, COLOR_LIGHTBLUE, !"Текущий пароль с введенным вами не совпадает!");
    if(strcmp(newpass, newpass2, true)!=0) return SCM(playerid, COLOR_LIGHTBLUE, !"Новые пароли между собой не совпадают!");
    if(strcmp("No Mail Adress", PlayerMail[playerid], true)!=0)
    {
        if(GetPVarInt(playerid, !"remail") > gettime()) return SCM(playerid, -1, !"Повторно отправить письмо можно раз в 1 минуту.");
        mysql_escape_string(rePassword[playerid], newpass);
        SPD(playerid, 168, DIALOG_STYLE_INPUT, !"", "{FFFFFF}\n\nНа ваш {FFD450}E-MAIL{FFFFFF} было отправлено\nписьмо с {FFD450}кодом{FFFFFF}, которое необходимо\nввести в строку ниже.\n\n{FF5E50}Для того чтобы свернуть игру и\nзайти в браузер, используйте\nкомбинацию клавиш: ALT+TAB!\n\n", !"Отправить", !"Закрыть");
        SetPVarInt(playerid,"remail",gettime()+60);
        new code = 1000 + random(9000);
        static str[100];
        f(str, sizeof(str), "Данный адрес эл.почты указали при регистрации на "SITE". Код для смены пароля: %i", code);
        SendMail(PlayerMail[playerid], ""MAIL"", "webmaster",""SITE" смена пароля", str);
        SetPVarInt(playerid, "authcode", code);
        return 1;
    }
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Password`= '%s' WHERE `ID` = '%i'", MD5_Hash(newpass), PI[playerid][pID]);
    SCM(playerid, COLOR_LIGHTBLUE, !"Пароль изменен!");
    return aml(103, playerid, "", "изменил пароль");
}
CMD:mbiz(playerid)
{
    if(!IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в мафии");
    str_2[0] = EOS;
    for(new i;i<OWNABLEBIZES;i++)
	{
 		if(BizInfo[i][bKrasher] != PI[playerid][pMember] || strcmp(BizInfo[i][bOwner],"The State",true) == 0 ) continue;
		f(str_2,sizeof(str_2),"{FFFFFF}%s Бизнес:{42B02C} %s{FFFFFF}\t\t\tВладелец{42B02C} %s{FFFFFF}\n",str_2,BizInfo[i][bName],BizInfo[i][bOwner]);
	}
	if(strlen(str_2) > 0 ) SPD(playerid,0,0,"Бизнесы",str_2,"Закрыть","");
	else SPD(playerid,0,0,"Информация","{FFFFFF}На данный момент под вашем контролем нет бизнесов!", !"Закрыть", !"");
	return 1;
}
CMD:bizwar(playerid)
{
    if(!IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"Вы не в мафии");
    if(PI[playerid][pLeader] == 0 && PI[playerid][pRank] < 9) return SCM(playerid, COLOR_RED, !"Доступно только лидеру и зместителю!");
    if(BizWarState > 0) return SCM(playerid, COLOR_RED, !"Вы не можете сейчас провести стрелу!");
	for(new i;i<OWNABLEBIZES;i++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid,10.0,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z])) continue;
	    if(GetString(BizInfo[i][bOwner],"The State")) return SCM(playerid, COLOR_GREY, !"Этим бизнесом никто не владеет!");
	    if(BizInfo[i][bKrasher] == PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Вы и так крешуете этот бизнес!");
	    if(RecoveryTime[PI[playerid][pMember]] > 0) return SCM(playerid, COLOR_GREY, !"Вы не восстановили еще силы после последнего захвата!");
	    if(BizInfo[i][bKrasher] == 0)
	    {
			BizInfo[i][bKrasher] = PI[playerid][pMember];
	        SCM(playerid, COLOR_VALIK, !"Теперь вы крышуете этот бизнес!");
	        UpdateBiz(i);
	        RecoveryTime[PI[playerid][pMember]] = 7200;
	    }
	    else
	    {
	        if(RecoveryTime[BizInfo[i][bKrasher]] > 0) return SCM(playerid, COLOR_GREY, !"Вражественная организация еще не восстановила силы!");
	        ClickBiz[playerid] = i;
	        SPD(playerid,9612,2,"Место проведения стрелы:","- Лесопилка\n- Заброшенный Аэродром\n- Ферма Fort Carson\n- Заброшенная деревня", !"Принять", !"Отмена");
			//SPD(playerid,591,0,"Информация","Вы хотите начать войну за этот бизнес?\nЕсли вы согласитесь вам придётся провести переговоры на лесопилке, взяв собой более 4 человек!\nПосле чего ждать 10 минут пока все соберутся и\nесли на точке соберутся по 4 человека с каждой мафии ,вы начнете войну!","Да","Нет");
	    }
	}
    return 1;
}
alias:plveh("veh");
CMD:plveh(playerid, params[])
{
	if(PI[playerid][pVIP] == 6 && !PI[playerid][pAdmin])
	{
		if(GetPlayerState(playerid) != 1) return 0;
	    new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		new carid = PI[playerid][plveh];
		if(carid != -1) DestroyVehicle(carid);
	    PI[playerid][plveh] = J_AddStaticVehicleEx(522, X, Y, Z, A, 1, 1);
	    carid = PI[playerid][plveh];
	    vTemp[carid][Fuel] = 100.00;
		TwinTurboInstall(carid);
	    vTemp[carid][vAntiRepair] = 2;
		VehicleHealth[carid] = 1000;
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
	 	return PutPlayerInVehicle(playerid, carid, 0);
	}
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id = playerid, veh = 503, tt = 1;
    sscanf(params, "udd", id, veh, tt);
    if(veh < 400 || veh > 4803 && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_VALIK, !"Номер Транспортного средства не может быть ниже 400 или выше 4803 !");
 	//else if(!IsValidModel(veh)) return SCM(playerid, COLOR_RED, !"Невалидная модель");
	if(id == INVALID_PLAYER_ID) id = playerid;
    if(GetPlayerState(id) != 1) return SCM(playerid, COLOR_GREY, !"Не нехочу!");
	SCM(playerid, -1, !"/plveh [id] [idcar] [TT 0/1]");
    new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(id, X, Y, Z);
	GetPlayerFacingAngle(id, A);
	new carid = PI[id][plveh];
	if(carid != -1) DestroyVehicle(carid);
    PI[id][plveh] = J_AddStaticVehicleEx(veh, X, Y, Z, A, 1, 1);
    carid = PI[id][plveh];
    vTemp[carid][Fuel] = 100.00;
	if(tt) TwinTurboInstall(carid);
    vTemp[carid][vAntiRepair] = 2;
	VehicleHealth[carid] = 1000;
	SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
 	PutPlayerInVehicle(id, carid, 0);
	SendAdminsMessagef(COLOR_GREY, "[A] Администратор %s[%i] выдал временную машину игроку %s[%i] [%i]", PN(playerid), playerid, PN(id), id, carid);
    if(!IsAVelik(carid)) SetEngineStatus(carid, false, playerid);
    f(str_1, sizeof(str_1), "выдал временную машину %s игроку", GetNameCar(carid));
	return aml(1, playerid, PN(id), str_1);
}
CMD:plvehall(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius, veh, tt;
    if(sscanf(params, "fii", radius, veh, tt)) return SCM(playerid, -1, !"/plvehall [радиус] [idcar] [TT 0/1]");
    else if(!IsValidModel(veh)) return SCM(playerid, COLOR_RED, !"Невалидная модель");
    new Float:X, Float:Y, Float:Z, Float:A, num;
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
    	GetPlayerPos(playerid, X, Y, Z);
    	if(IsPlayerInRangeOfPoint(i, radius, X, Y, Z))
    	{
		    if(GetPlayerState(i) != 1) continue;
			GetPlayerPos(i, X, Y, Z);
			GetPlayerFacingAngle(i, A);
			if(PI[i][plveh] != -1) DestroyVehicle(PI[i][plveh]);
		    PI[i][plveh] = J_AddStaticVehicleEx(veh, X, Y, Z, A, 1, 1);
		    vTemp[PI[i][plveh]][Fuel] = 100.00;
			if(tt) TwinTurboInstall(PI[i][plveh]);
		    vTemp[PI[i][plveh]][vAntiRepair] = 2;
			VehicleHealth[PI[i][plveh]] = 1000;
		 	PutPlayerInVehicle(i, PI[i][plveh], 0);
			if(!IsAVelik(PI[i][plveh])) SetEngineStatus(PI[i][plveh], false, playerid);
			num++;
		}
	}
	SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал временные машины %i игрокам!",PN(playerid), num);
    f(str_1, sizeof(str_1), "выдал временную машину %s %i игрокам", num, GetNameCar(veh));
	return aml(18, playerid, "", str_1);
}
CMD:wedding(playerid, params[])
{
	if(Merrit[0] != 0) return SCM(playerid, COLOR_RED, !"Свадьба уже проводится!");
    if(sscanf(params,"dd",params[0],params[1])) return SCM(playerid, COLOR_RED, !"Используйте: /wedding [id/Жениха] [id/Невесты]");
 	if(!Isameria(playerid))return SCM(playerid, COLOR_RED, !"Вы не сотрудник Мэрии");
	if(PI[playerid][pRank] < 8) return SCM(playerid, COLOR_RED, !"Провести помолвку может только человек имеющий должность 'Нач.юридического отдела' и выше");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2363.9543,-1958.5900,1601.0859 )) return SCM(playerid, COLOR_RED, !"Вы не возле места проведения помолвки");
	if(!IsPlayerInRangeOfPoint(params[0], 10.0, 2363.9543,-1958.5900,1601.0859 )) return SCM(playerid, COLOR_RED, !"Жених не в церкови!");
	if(!IsPlayerInRangeOfPoint(params[1], 10.0, 2363.9543,-1958.5900,1601.0859 )) return SCM(playerid, COLOR_RED, !"Невеста не в церкови!");
	if(params[0] == playerid) return SCM(playerid, COLOR_RED, !"Вы не можете поженить человека на себе!");
	if(params[1] == playerid) return SCM(playerid, COLOR_RED, !"Вы не можете поженить человека на себе!");
	if(PI[params[0]][pSex] != 1) return SCM(playerid, COLOR_RED, !"Сначало укажите жениха , потом невесту");
	if(PI[params[1]][pSex] != 2) return SCM(playerid, COLOR_RED, !"Сначало укажите жениха , потом невесту");
	if(strcmp(PI[params[0]][pMerrit], "None") || strcmp(PI[params[1]][pMerrit], "None")) return SCM(playerid, COLOR_RED, !"Опачки а кто-то уже женат или замужем");
 	if(!Ring[params[0]]) return SCM(playerid, COLOR_RED, !"Похоже кто-то не купил кольца!");
	Merrit[0] = 1;
	Merrit[1] = playerid;
	Merrit[2] = params[0];
	Merrit[3] = params[1];
	f(str_2, sizeof(str_2), "%s: Жених %s готовы ли вы взять в жены %s?", PN(playerid), PN(params[0]), PN(params[1]));
	ProxDetector(25, playerid, str_2, COLOR_SCHAT, 1);
	SCM(params[0], COLOR_GREY, "Для того чтобы сделать свой выбор напиши в игровой чат да/нет");
	return 1;
}
CMD:unwedding(playerid, params[])
{
	if(GetMoney(playerid) < 4000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, 2363.9543,-1958.5900,1601.0859)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Развестись можно только в церкови!");
	if(!strcmp(PI[playerid][pMerrit], "None")) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет супруги/супруга");
	foreach(new i: Player)
    {
        if(!strcmp(PN(playerid), PI[i][pMerrit], true) && IsPlayerConnected(i))
		{
			SCM(i, COLOR_RED, !"Ваш супруг/супруга покинула вас.");
			strmid(PI[i][pMerrit], "None", 0, MAX_PLAYER_NAME);
			strmid(PI[playerid][pMerrit], "None", 0, MAX_PLAYER_NAME);
			UpdatePlayerDataStr(i, "Merrit", PI[i][pMerrit]);
			UpdatePlayerDataStr(playerid, "Merrit", PI[playerid][pMerrit]);
			return 1;
		}
    }
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Merrit` = 'None' WHERE `NickName` = '%s'", PI[playerid][pMerrit]);
	strmid(PI[playerid][pMerrit], "None", 0, MAX_PLAYER_NAME);
	UpdatePlayerDataStr(playerid, "Merrit", PI[playerid][pMerrit]);
	return 1;
}
CMD:weather(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /weather [id]");
    f(str_2, sizeof(str_2), "%s сменил погоду.", PN(playerid));
	SendAdminsMessage(COLOR_GREY, str_2);
    Weather = params[0];
    SetWeather(Weather);
    return aml(18, playerid, "", "сменил погоду");
}
CMD:redice(playerid)
{
    if(KostiName[playerid] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не предлагали никому игру!");
	Predlog{playerid} = false;
	Predlog{KostiName[playerid]} = false;
	KostiMoney[playerid] =
	KostiMoney[KostiName[playerid]] =
	ZapretDice[playerid] =
	ZapretDice[KostiName[playerid]] = 0;
	SCM(KostiName[playerid], COLOR_VALIK, !"[Информация] {FFFFFF}Игрок отказался от ставки!");
	SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы отказались играть!");
	KostiName[KostiName[playerid]] =
	KostiName[playerid] = INVALID_PLAYER_ID;
	return 1;
}
CMD:dice(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 2.4, 2238.0413,1443.3271,1008.8525)) return SCM(playerid, COLOR_RED, !"Вы должны находиться у игрального стола!");
    if(KostiMoney[playerid] != 0 || ZapretDice[playerid] != 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам уже предложили игру!");
    if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте /dice [id игрока] [ставка (в фишках)]");
    if(params[1] < 20 || params[1] > 200000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 20 фишек, максимальная 20000 фишек.");
    if(PI[params[0]][pGameRate] == 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок запретил ему кидать предложение об игре!");
 	if(GetInvCount(playerid, Item_CasinoChips) < params[1]) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно фишек. Вы можете купить фишки в обменнике казино.");
    if(params[0] == 1001)
    {
        if(GetPVarInt(playerid, !"timebot") > gettime())
            return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Играть с ботом можно раз в 20 секунд!");

	    str_1[0] = EOS;
 	    new
		 	dice = random(5)+2,
	    	dice1 = random(5)+2;
	    f(str_1, sizeof(str_1), "[Информация] {FFFFFF}Вы предложили Оливии бросить кости. Ставка: %i", params[1]);
	    SCM(playerid, COLOR_LIGHTBLUE, str_1);
	    f(str_1, sizeof(str_1), "Оливия и %s бросили кости. Результат: {CC9900}%i : %i", PN(playerid), dice, dice1);
	    ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	    if(dice > dice1)
	    {
	        InvAdd(playerid, Item_CasinoChips, -params[1]);
	        aml(102, playerid, "", "игра в кости", Item_CasinoChips, params[1]);

			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}К сожалению, вы проиграли!", !"Понял", !"");
	        f(str_1, 20, "~r~-%i", params[1]);
	        GameTextForPlayer(playerid, str_1, 3000, 1);
	    }
	    else if(dice < dice1)
	    {
	        InvAdd(playerid, Item_CasinoChips, params[1]);
	        aml(101, playerid, "", "игра в кости", Item_CasinoChips, params[1]);

			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Поздравляем, вы выиграли!", !"Понял", !"");
	        f(str_1, 20, "~g~+%i", params[1]);
	        GameTextForPlayer(playerid, str_1, 3000, 1);
	    }
	    else if(dice == dice1) SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Игра закончилась в ничью!");
	    switch(dice1)
		{
		    case 1: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);
		    case 2: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);
		    case 3: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);
		    case 4: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
		    case 5: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000);
		    case 6: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000);
		}
	    new
			Float:x,
			Float:y,
			Float:z,
			Float:x1,
			Float:y1,
			Float:z1,
	    	Float:minDist,
			minA = -1;
	    GetPlayerPos(playerid, x1, y1, z1);
	    foreach(new i: Actor)
		{
			if(!IsActorStreamedIn(i, playerid))
				continue;

			if(GetActorVirtualWorld(i) != GetPlayerVirtualWorld(playerid))
				continue;

			GetActorPos(i, x, y, z);
			new Float:Dist = PointToPoint(x, y, z, x1, y1, z1);
			if(Dist < 30)
			{
				if (minDist > Dist || !minDist)
				{
				    minA = i;
				    minDist = Dist;
				}
			}
		}
		if(minA != -1)
		{
			f(str_1, sizeof(str_1), "Выпало: {FFFFFF}%i", dice);
		    Update3DTextLabelText(tActor[minA], COLOR_ORANGE, str_1);
		    actortime[minA] = 10;
		}
		f(str_1, sizeof(str_1), "Выпало: {FFFFFF}%i", dice1);
		SetPlayerChatBubble(playerid, str_1, COLOR_ORANGE, 30.0, 10000);
		kostiKos[playerid] = 5;
		SetPVarInt(playerid, !"timebot", gettime()+20);
		return 1;
    }
    if(params[0] == playerid)
		return 1;

	if(!ProxDetectorS(6.0, playerid, params[0]))
		return 1;

    if(!IsPlayerConnected(params[0]) || !IsPlayerLogged{params[0]})
		return 1;

    if(ZapretDice[params[0]] == 1)
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В данный момент игрок не может играть!");

	if(kostiKos[playerid] > 0)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сейчас вы не можете начать игру!");

    if(PI[playerid][pJob] == JOB_GUIDE && InJob[playerid] == 1)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Крупье не может играть в кости!");

    new
		num;
	foreach(new i: Player)
	{
	    if(PI[i][pJob] == JOB_GUIDE && InJob[i] == 1)
	    {
	        if(ProxDetectorS(4.0, playerid, i, 1))
			{
			    num ++;
			    break;
			}
	    }
	}
	SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Для того чтобы отказатся от своей ставки введите [/redice]");
    str_1[0] = EOS;
    f(str_1, sizeof(str_1), "[Информация] {FFFFFF}Вы предложили %s бросить кости. Ставка: %i", PN(params[0]), params[1]);
    SCM(playerid, COLOR_LIGHTBLUE, str_1);
    f(str_1, sizeof(str_1), "[Информация] {FFFFFF}%s предлагает бросить кости. Ставка: %i", PN(playerid), params[1]);
    SCM(params[0], COLOR_LIGHTBLUE, str_1);
    SCM(params[0], -1, !"Введите {48FC23}'/Yes'{FFFFFF}чтобы согласиться {FF0000}'/No' {FFFFFF}для отказа");
	ZapretDice[playerid] = 1;
	ZapretDice[params[0]] = 1;
	KostiName[playerid] = params[0];
	KostiName[params[0]] = playerid;
	KostiMoney[params[0]] = params[1];
	KostiMoney[playerid] = params[1];
    Predlog{playerid} = true;
    return 1;
}
CMD:no(playerid)
{
	if(KostiName[playerid] == INVALID_PLAYER_ID)
		return 1;
		
	Predlog{playerid} = false;
	Predlog{KostiName[playerid]} = false;
	KostiMoney[playerid] = 0;
	ZapretDice[playerid] = 0;
	ZapretDice[KostiName[playerid]] = 0;
	SCM(KostiName[playerid], COLOR_VALIK, !"[Информация] {FFFFFF}Игрок отказался от ставки!");
	SCM(playerid, COLOR_ORANGE, !"[Информация] {FFFFFF}Вы отказались играть!");
	KostiName[KostiName[playerid]]= INVALID_PLAYER_ID;
	KostiName[playerid] = INVALID_PLAYER_ID;
	return 1;
}
CMD:yes(playerid)
{
    if(KostiName[playerid] == INVALID_PLAYER_ID)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам никто не предлагал бросить кости");

    if(kostiKos[playerid] > 0)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сейчас вы не можете принять игру!");

    if(PI[playerid][pJob] == JOB_GUIDE && InJob[playerid] == 1)
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Крупье не может играть в кости!");

    new
		dice = random(5)+2,
    	dice1 = random(5)+2;
	str_1[0] = EOS;
	if(!ProxDetectorS(6.0, playerid, KostiName[playerid]))
		return 1;

	if(Predlog{playerid})
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете принять игру!");

	if(GetInvCount(playerid, Item_CasinoChips) < KostiMoney[playerid] || GetInvCount(KostiName[playerid], Item_CasinoChips) < KostiMoney[KostiName[playerid]])
	{
	    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У одного из вас не хватает фишек для игры в кости.");
	    SCM(KostiName[playerid], COLOR_RED, !"[Ошибка] {FFFFFF}У одного из вас не хватает фишек для игры в кости.");
	    callcmd::redice(playerid);
		callcmd::redice(KostiName[playerid]);
	    return 0;
	}
	new num;
	foreach(new i: Player)
	{
	    if(PI[i][pJob] == JOB_GUIDE && InJob[i] == 1)
	    {
            if(ProxDetectorS(5.5, playerid, i, 1) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
            {
                deal[i]++;
                f(str_2, sizeof(str_2), "[Информация] {FFFFFF}Вы уже заработали %i$ за то что следите за игрой в кости!", (deal[i]*120));
                SCM(i, COLOR_VALIK, str_2);
                GameTextForPlayer(i, !"+120$", 0, 1);
                num++;
				break;
            }
	    }
	}
    f(str_1, 110, "%s и %s бросили кости. Результат: {CC9900}%i : %i",PN(KostiName[playerid]),PN(playerid),dice,dice1);
    ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
    if(dice > dice1)
    {
        InvAdd(KostiName[playerid], Item_CasinoChips, KostiMoney[playerid]);
        aml(101, KostiName[playerid], "", "игра в кости", Item_CasinoChips, KostiMoney[playerid]);
        InvAdd(playerid, Item_CasinoChips, -KostiMoney[playerid]);
        aml(102, playerid, "", "игра в кости", Item_CasinoChips, KostiMoney[playerid]);

		SPD(KostiName[playerid], 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Поздравляем, вы выиграли!", !"Понял", !"");
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}К сожалению, вы проиграли!", !"Понял", !"");
        f(str_1, 20, "~g~+%i", KostiMoney[playerid]);
        GameTextForPlayer(KostiName[playerid], str_1, 3000, 1);
        f(str_1, 20, "~r~-%i", KostiMoney[playerid]);
        GameTextForPlayer(playerid, str_1, 3000, 1);
    }
    else if(dice < dice1)
    {
        InvAdd(KostiName[playerid], Item_CasinoChips, -KostiMoney[playerid]);
        aml(102, KostiName[playerid], "", "игра в кости", Item_CasinoChips, KostiMoney[playerid]);
        InvAdd(playerid, Item_CasinoChips, KostiMoney[playerid]);
        aml(101, playerid, "", "игра в кости", Item_CasinoChips, KostiMoney[playerid]);

		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Поздравляем, вы выиграли!", !"Понял", !"");
		SPD(KostiName[playerid], 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}К сожалению, вы проиграли!", !"Понял", !"");
        f(str_1, 20, "~g~+%i", KostiMoney[playerid]);
        GameTextForPlayer(playerid, str_1, 3000, 1);
        f(str_1, 20, "~r~-%i", KostiMoney[playerid]);
        GameTextForPlayer(KostiName[playerid], str_1, 3000, 1);
    }
    else if(dice == dice1)
    {
		SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Игра закончилась в ничью!", !"Понял", !"");
		SPD(KostiName[playerid], 0, DIALOG_STYLE_MSGBOX, !"{F1951B}Информация", !"{FFFFFF}Игра закончилась в ничью!", !"Понял", !"");
    }
	if(dice != dice1) GiveBizMoney(FindBizID(SHOP_CASINO), KostiMoney[playerid]*100);
    switch(dice1)
	{
	    case 1: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
	    case 2: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
	    case 3: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
	    case 4: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
	    case 5: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
	    case 6: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
	}
	switch(dice)
	{
     	case 1: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
	    case 2: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
	    case 3: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
	    case 4: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
	    case 5: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
	    case 6: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
	}
	kostiKos[KostiName[playerid]] =
    kostiKos[playerid] = 5;
	f(str_1, sizeof(str_1), "Выпало: %i", dice1);
	SetPlayerChatBubble(playerid, str_1,COLOR_ORANGE, 30.0, 10000);
	f(str_1, sizeof(str_1), "Выпало: %i", dice);
	SetPlayerChatBubble(KostiName[playerid], str_1, COLOR_VALIK, 30.0, 10000);
	ZapretDice[playerid] = 0;
	ZapretDice[KostiName[playerid]] = 0;
	KostiMoney[playerid] = 0;
	KostiMoney[KostiName[playerid]] = 0;
	KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
	KostiName[playerid] = INVALID_PLAYER_ID;
	Predlog{playerid} = false;
	Predlog{KostiName[playerid]} = false;
    return 1;
}
CMD:armour(playerid)
{
	if (!GetInvCount(playerid, Item_Armour))
		return SCM(playerid, COLOR_GREY, !"У вас нет бронежилета");

	new Float:armour;
	GetPlayerArmour(playerid, armour);
	if (armour)
	{
		SCM(playerid, COLOR_LIGHTBLUE, !"Вы сняли бронежилет!");
		J_SetPlayerArmour(playerid, 0);
		f(str_2, sizeof(str_2), "%s[%i] снял бронежилет.", cPN(playerid), playerid);
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	}
	else
	{
		if (GetPVarInt(playerid, !"armourtime") > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Можно использовать раз в минуту!");
		InvAdd(playerid, Item_Armour, -1);
		aml(102, playerid, "", "надел бронежилет", Item_Armour, 1);
		SCM(playerid, COLOR_LIGHTBLUE, !"Вы надели бронежилет. Используйте /armour чтобы снять его или надеть ещё раз.");
		J_SetPlayerArmour(playerid, 100);
		f(str_2, sizeof(str_2), "%s[%i] одел бронежилет.", cPN(playerid), playerid);
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		SetPVarInt(playerid, !"armourtime", gettime() + 60);
	}
	return 1;
}
CMD:house(playerid)
{
    if(PI[playerid][pDemorgan]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать эту команду в этом месте!");
    PI[playerid][pHouseTemp] = GetPlayerHouse(playerid);
    new house = PI[playerid][pHouseTemp];
    if(house == -1) house = GetPlayerFirstHouse(playerid);
	if(house == -1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не живете ни в 1 из домов");
	if(!IsPlayerInRangeOfPoint(playerid, 100.0, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]) && !IsPlayerInRangeOfPoint(playerid, 20.0, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z]))
	{
		new houseid;
		for(new i; i < MAX_PLAYER_HOUSE; i++)
		{
			houseid = PI[playerid][pHouseKey][i];
			if(houseid == -1) continue;
			if(house == houseid) continue;
			if(!IsPlayerInRangeOfPoint(playerid, 20.0, HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z])) continue;
			house = houseid;
			PI[playerid][pHouseTemp] = house;
			break;
		}
	}
	if(HouseEntered[playerid] != house && GetPlayerVirtualWorld(playerid) != 0)
	{
		new houseid;
		for(new i; i < MAX_PLAYER_HOUSE; i++)
		{
			houseid = PI[playerid][pHouseKey][i];
			if(houseid == -1) continue;
			if(house == houseid) continue;
			if(!IsPlayerInRangeOfPoint(playerid, 100.0, HouseInfo[houseid][hExit_X], HouseInfo[houseid][hExit_Y], HouseInfo[houseid][hExit_Z])) continue;
			house = houseid;
			PI[playerid][pHouseTemp] = house;
			break;
		}
	}
	if(HouseEntered[playerid] != house && GetPlayerVirtualWorld(playerid) != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в своём доме!");
	if(!IsPlayerInRangeOfPoint(playerid, 100.0, HouseInfo[house][hExit_X], HouseInfo[house][hExit_Y], HouseInfo[house][hExit_Z]) && !IsPlayerInRangeOfPoint(playerid, 20.0, HouseInfo[house][hEnter_X], HouseInfo[house][hEnter_Y], HouseInfo[house][hEnter_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у своего дома!");
	if(HouseEntered[playerid] == -1)
	{
	    static idhouse[10];
        f(idhouse, sizeof(idhouse), "Дом №%i", house);
		f(str_1, sizeof(str_1), "{42B02C}- %s\n{42B02C}-{FFFFFF} Продать дом игроку", (HouseInfo[house][hLock] == 1) ? ("{A5EC67}Открыть {FFFFFF}дом") : "{EC6767}Закрыть {FFFFFF}дом");
		return SPD(playerid, 6698, DIALOG_STYLE_LIST, idhouse, str_1, "Выбор", "Отмена");
	}
	if(GetString(HouseInfo[house][hOwner], PN(playerid)))
	{
	    f(str_1, sizeof(str_1), "{42B02C}- %s\n{42B02C}-{FFFFFF} Меню дома\n{42B02C}-{FFFFFF} Улучшить дом\n{42B02C}-{FFFFFF} Продать дом\n{42B02C}-{FFFFFF} Продать дом игроку\n{42B02C}-{FFFFFF} Налоги\n{42B02C}-{FFFFFF} Продукты\n{42B02C}-{FFFFFF} Подселить игрока\n{42B02C}-{FFFFFF} Список жителей\n{42B02C}-{FFFFFF} Аптечек в доме: {DEAF79}%i\n{42B02C}-{FFFFFF} Изменить название дома", (HouseInfo[house][hLock] == 1) ? ("{A5EC67}Открыть {FFFFFF}дом") : "{EC6767}Закрыть {FFFFFF}дом", HouseInfo[house][hMed]);
		SPD(playerid, 174, DIALOG_STYLE_LIST, "", str_1, "Выбор", "Отмена");
	}
	else
	{
		f(str_1, sizeof(str_1), "{42B02C}- %s\n{42B02C}-{FFFFFF} Меню дома", (HouseInfo[house][hLock] == 1) ? ("{A5EC67}Открыть {FFFFFF}дом") : "{EC6767}Закрыть {FFFFFF}дом");
        SPD(playerid, 174, DIALOG_STYLE_LIST, "", str_1, "Выбор", "Отмена");
	}
	return 1;
}
alias:house("home", "hmenu");
CMD:med(playerid)//Купира переписать под выдачу аптечки в шкаф дома
{
	new house = HouseEntered[playerid];
	if(house ==-1)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ни в одном из домов!");
	if(HouseInfo[house][hMed]<1)return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В доме нет аптечек!");
	HouseInfo[house][hMed]--;
	SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно использовали аптечку. В доме осталось: {DEAF79}%i{FFFFFF} аптечек!", HouseInfo[house][hMed]);

	new Float:Health = PI[playerid][pHealth];
	if(Health <= 50.0) J_SetPlayerHealth(playerid,Health+50);
	else J_SetPlayerHealth(playerid,100);
	PI[playerid][pHospital]=25;
	UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
 	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
 	return GameTextForPlayer(playerid, "Health +50", 0, 1);
}
CMD:usemed(playerid)
{
	if(!GetInvCount(playerid, Item_MedKit)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У тебя нет аптечек!");
	if(GetPlayerVirtualWorld(playerid)==534) return 1;
	if(PI[playerid][pHeal] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы находитесь на лечении, аптечки тут не помогут!");
	new Float: Health = PI[playerid][pHealth];
	InvAdd(playerid, Item_MedKit, -1);
	aml(102, playerid, "", "употребил лекарство", Item_MedKit, 1);
	f(str_2, sizeof(str_2), "%s употребил(а) лекарство", cPN(playerid));
	ProxDetector(25, playerid, str_2, COLOR_PURPLE);
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы выпили лекарство");
	if(Health <= 50) J_SetPlayerHealth(playerid, Health + 50);
	else J_SetPlayerHealth(playerid, 100);
	PI[playerid][pHospital] = 25;
	UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
 	return ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 0, 0, 0, 0, 1);
}
CMD:exit(playerid)
{
    new i = GetPlayerVirtualWorld(playerid) - 50;
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hExit_X], HouseInfo[i][hExit_Y], HouseInfo[i][hExit_Z])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не у двери дома!");
    if(HouseInfo[i][hGarage] >= 1) SPD(playerid, 9989, DIALOG_STYLE_LIST, "", "Выход на улицу\n{FFFFFF}Войти в подвал\n{9FFF29}Войти в подвал с вентиляцией\n{ffc729}Войти в гараж", "Принять", "Отмена");
    else SPD(playerid, 9999, DIALOG_STYLE_LIST, "", "Выход на улицу\n{FFFFFF}Войти в подвал\n{9FFF29}Войти в подвал с вентиляцией", "Принять", "Отмена");
    return 1;
}
CMD:blacklist(playerid, params[])
{
	if(IsAtFrakcia(playerid) && PI[playerid][pLeader]>0)
	{
	    if(sscanf(params,"us[72]",params[0],params[1])) return SCM(playerid, COLOR_RED, !"Используйте: /blacklist [id] [причина]");
     	if(!ProxDetectorS(4.0, playerid, params[0], 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
		if(PI[params[0]][pLeader] > 0 ) return SCM(playerid, COLOR_RED, !"Вы не можете добавить лидера в чс");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
		if(!IsAtFrakcia(params[0]) && PI[params[0]][pMember]!=0) return SCM(playerid, COLOR_GREY, !"Игрок должен быть вне гос. организации!");
		if(PI[params[0]][pBL]) return SCM(playerid, COLOR_GREY, !"Игрок уже в черном списке организации");
		if(params[0]==playerid)return 0;
		PI[params[0]][pBL] = 1;
		UpdatePlayerDataInt(params[0], "BlackList", 0);
		SCMf(playerid, COLOR_LIGHTBLUE, "Вы занесли %s(%i) в чёрный список закона. Причина: %s", PN(params[0]), params[0], params[1]);
		SCMf(params[0], COLOR_GREY, "%s занёс вас в чёрный список закона. Причина: %s", PN(playerid), params[1]);
		SCM(params[0],COLOR_GREY,"Чтобы выйти из него необходимо набрать 50 очков законопослушности");
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет доступа к этой системе!");
    return 1;
}
CMD:unblacklist(playerid, params[])
{
	if(IsAtFrakcia(playerid) && PI[playerid][pLeader]>0)
	{
		if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /unblacklist [id]");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
		if(!PI[params[0]][pBL]) return SCM(playerid, COLOR_GREY, !"Этого игрока нет в черном списке!");
		PI[params[0]][pBL] = 0;
		UpdatePlayerDataInt(params[0], "BlackList", 0);
		SCMf(playerid, COLOR_LIGHTBLUE, "Вы удалили %s(%i) чёрного списка закона", PN(params[0]), params[0]);
		SCMf(params[0], COLOR_GREY, "%s удалил вас из чёрного списка закона", PN(playerid));
    }
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет доступа к этой системе!");
    return 1;
}
CMD:lights(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 0;
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid) || IsARcCar(carid)) return 0;
	if(GetEngineStatus(carid)) SetLightsStatus(carid, !GetLightsStatus(carid), playerid);
	return 1;
}
CMD:rules(playerid) return ShowRules(playerid);
CMD:setcmd(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используйте: /setcmd [ID]");
   	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден");
   	if(PI[id][pAdmin] == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не является администраторм!");
   	SetPVarInt(playerid, !"SetCmdID", id);
   	return ShowSetCmdDialog(playerid, id);
}
CMD:setcmdall(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new player:id, type; else return SCM(playerid, COLOR_RED, !"Используйте: /setcmdall [ID] [0 - забрать все кмд / 1 - выдать все кмд]");
   	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден");
   	if(PI[id][pAdmin] == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не является администраторм!");
	if(type < 0 || type > 1) return SCM(playerid, COLOR_RED, !"Используйте: /setcmdall [ID] [0 - забрать все кмд / 1 - выдать все кмд]");
	for(new i; i < sizeof(aAccessCMD); i++) PI[id][pAccessCMD][i] = type;
	SaveDostupPlayer(id);
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно выдали доступ ко всем командам %s[%i]", PN(id), id);
	SCMf(id, COLOR_VALIK,"[Информация] {FFFFFF}Администратор %s[%i] выдал вам доступ ко всем командам", PN(playerid), playerid);
	f(str_1, sizeof(str_1), "%s все команды у игрока", type ? ("установил") : ("забрал"));
	return aml(1, playerid, PN(id), str_1);
}
CMD:makeleader(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][39]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /makeleader [id]");
    if(CheckIsASuccesIP(playerid)) return 0;
	static org[31], allorgs[425];
	allorgs[0] = EOS;
	for(new i = 1; i < MAX_ORGS; i++)
	{
		f(org, 25, "%s\n", OrgInfo[i][oName]);
		strcat(allorgs, org);
	}
	f(str_4, 55, "%s", PN(params[0]));
	SPD(playerid, 26, DIALOG_STYLE_LIST, str_4, allorgs, !"Выбор", !"Отмена");
	MLPlayer[playerid] = params[0];
	return 1;
}
CMD:free(playerid, params[])
{
	if(PI[playerid][pJob]!=JOB_ADVOKAT) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не адвокат.");
	new id;
    if(sscanf(params,"ud",id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /free [id]");
    if(id == playerid)return 1;
    if(!ProxDetectorS(2.5, playerid, id)) return SCM(playerid, COLOR_RED, !"Ошибка] {FFFFFF}Вы слишком далеко от заключенного!");
    if(OldFreePlayer[playerid] == id) return SCM(playerid, COLOR_GREY, !"Ошибка] {FFFFFF}Вы уже сокращали срок этому игроку.");
	new time = PI[id][pJailTime],price = PI[id][pBailPrice];
    if(time == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок не в тюрьме.");
    if(LawyerOffer[playerid] != INVALID_PLAYER_ID)
    {
        f(str_2, sizeof(str_2), "Адвокат %s отменил свое предложение на сокращение срока", PN(playerid));
        SCM(LawyerOffer[playerid], COLOR_GREY, str_2);
    }
 	f(str_2,sizeof(str_2),"{FFFFFF}Адвокат {E4AE25}%s{FFFFFF} предлагает вам сократить ваш срок.\nВремя {E4AE25}%s{FFFFFF}\nСтоимость: {E4AE25}$%i{FFFFFF}", PN(playerid), Convert(time/2), price);
 	SPD(id, 259, 0, "Сокращение срока", str_2, "Согласен", "Отмена");
    LawyerOffer[playerid] = id;
    LawyerOffer[id] = playerid;
    f(str_2,sizeof(str_2),"Вы предлагаете сократить срок %s на %s за $%i", PN(id), Convert(time/2), price);
 	SCM(playerid,COLOR_LIGHTBLUE,str_2);
    return 1;
}
CMD:showlic(playerid, params[])
{
	new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /showlic [id]");
	if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_RED, !"Вы далеко от цели!");
    if(PI[playerid][pShowDokument]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок отключил возможность показать ему что-либо!");
	if(ShowLicenses(id, playerid))
	{
		f(str_2, sizeof(str_2), "%s показал(а) свои лицензии %s", PN(playerid), PN(id));
		SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
		SCMf(playerid, COLOR_GREEN, "Вы успешно показали свои лицензии игроку {FFFFFF}%s", cPN(id));
	}
	else SCM(playerid, COLOR_GREY, !"Недоступно в данный момент");
 	SetPVarInt(playerid, !"reloader",gettime()+10);
	return 1;
}
CMD:showbizinfo(playerid, param[])
{
    new id, id2;
    str_1[0] = EOS;
    if(sscanf(param, "ud", id, id2)) return SCM(playerid, COLOR_RED, !"Используйте: /showbizinfo [ID] [ID бизнеса]");
    if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
    if(playerid == id) return SCM(playerid, COLOR_GREY, !"Себе нельзя! /bizinfo - Дополнительно - Статистика бизнеса");
    if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, !"Игрок не найден");
    if(!ProxDetectorS(3.0, playerid, id, 1)) return SCM(playerid, COLOR_GREY, "[Ошибка] {FFFFFF}Вы далеко от игрока");
	if(!GetString(PN(playerid), BizInfo[id2][bOwner]) || GetString(PN(playerid), BizInfo[id2][bZam])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Это не ваш бизнес!");
	str_1 = "День\tПрибыль\n";
	ac_ShowPlayerDialog(id, 0),ShowPlayerDialogf(id,0,DIALOG_STYLE_TABLIST_HEADERS,"{BFBBBA}","Окей","","%s{FFFFFF}Понедельник\t{73B461}%i$\n{FFFFFF}Вторник\t{73B461}%i$\n{FFFFFF}Среда\t{73B461}%i$\n{FFFFFF}Четверг\t{73B461}%i$\n{FFFFFF}Пятница\t{73B461}%i$\n{FFFFFF}Суббота\t{73B461}%i$\n{FFFFFF}Воскресенье\t{73B461}%i$",str_1,BizInfo[id2][bDayOfWeak0],BizInfo[id2][bDayOfWeak1],BizInfo[id2][bDayOfWeak2],BizInfo[id2][bDayOfWeak3],BizInfo[id2][bDayOfWeak4],BizInfo[id2][bDayOfWeak5],BizInfo[id2][bDayOfWeak6]);
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно показали финансовую статистику %s.", PN(id));
	SCMf(id, COLOR_VALIK,"[Уведомление] {FFFFFF}Игрок %s показал вам финансовую статистику своего бизнеса.", PN(playerid));
	return true;
}
CMD:showbadge(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"У вас нет этого документа");
	if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	new id;
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /showbadge [id]");
	if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	new team = GetTeamID(playerid);
	new rank = PI[playerid][pRank];
	f(str_2, sizeof(str_2), "{FF9900}%s{FFFFFF}\n\nИмя: %s\nРанг: %s",OrgInfo[team][oName], PN(playerid), GetRankName(team, rank));
	SPD(id,0,0,"Удостоверение",str_2,"Ок","");
	f(str_2, sizeof(str_2), "%s показывает своё удостоверение %s", cPN(playerid), cPN(id));
	ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
	SetPVarInt(playerid, !"reloader",gettime()+2);
	return 1;
}
CMD:showpass(playerid, params[])
{
	if(!IsValidPassport(playerid)) return SCM(playerid, COLOR_GREY, !"У вас нет паспорта");
	if(GetPVarInt(playerid, !"reloader") > gettime())return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    new id;
    if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, !"Используйте: /showpass [id]");
    if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
    if(PI[playerid][pShowDokument]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок отключил возможность показать ему что-либо!");
	ShowPassport(playerid, id);
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s показывает свой паспорт %s", cPN(playerid), cPN(id));
	SCMf(playerid, COLOR_LIGHTRED, "[Подсказка] {FFFFFF}Вы успешно показали свой паспорт игроку {FF6347}%s", cPN(id));
	SetPVarInt(playerid, !"reloader", gettime() + 10);
	return 1;
}
CMD:carpass(playerid, params[])
{
	if(GetPVarInt(playerid, !"reloader") > gettime())
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");

    extract params -> new player:target, car; else
		return SCM(playerid, COLOR_RED, !"Используйте: /carpass [id игрока] [id машины]");

	if(target == INVALID_PLAYER_ID)
	    return 0;

    if(!ProxDetectorS(5.0, playerid, target))
		return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока!");

    new number = GetVehicleID(car);

    if(!IsPlayerHaveCar(playerid, number))
		return SCM(playerid, COLOR_GREY, !"Это не ваш транспорт");

    f(str_1, sizeof(str_1), "%s показывает тех. паспорт %s", cPN(playerid), cPN(target));
	ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	static nomeraa[64];
	if(!GetString(CarInfo[number][cNumber], ""NAME" ST"))
		f(nomeraa, sizeof(nomeraa), "{A63737}%s{FFFFFF}", CarInfo[number][cNumber]);
	else
		nomeraa = "{991717}Без номеров [X2 налог]{FFFFFF}";

    if(IsAPlane(car))
    	f(str_1, sizeof(str_1), "{FFFFFF}Транспорт: {73B461}%s%s{FFFFFF}\nВладелец: {73B461}%s{FFFFFF}\nПосредник: {73B461}%s{FFFFFF}\nНалог: {73B461}%i{FFFFFF} / 35 000\nШтраф: {73B461}%i{FFFFFF} / 60 000\nНомер автомобиля: %s\n\n{B03131}Обратите внимание что за ваш авто необходимо\nплатить налоги или его отберут гос. служащие!\nОплатить налог можно в банке.", GetNameCar(GetVehicleModelEx(car)), (CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{EAD064}[TT]") : (""), CarInfo[number][cOwner], CarInfo[number][cKeyer], CarInfo[number][cShtrafer], CarInfo[number][cShtraf], nomeraa);

    else
        f(str_1, sizeof(str_1), "{FFFFFF}Транспорт: {73B461}%s%s{FFFFFF}\nВладелец: {73B461}%s{FFFFFF}\nПосредник: {73B461}%s{FFFFFF}\nПробег: {73B461}%.0f км.{FFFFFF}\nНалог: {73B461}%i{FFFFFF} / 35 000\nШтраф: {73B461}%i{FFFFFF} / 60 000\nНомер автомобиля: %s\n\n{B03131}Обратите внимание что за ваш авто необходимо\nплатить налоги или его отберут гос. служащие!\nОплатить налог можно в банке.", GetNameCar(GetVehicleModelEx(car)), (CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{EAD064}[TT]") : (""), CarInfo[number][cOwner], CarInfo[number][cKeyer], CarInfo[number][cMilage], CarInfo[number][cShtrafer], CarInfo[number][cShtraf], nomeraa);

    SPD(target, 0, DIALOG_STYLE_MSGBOX, !"Информация", str_1, !"Принять", !"");
    f(str_1, sizeof(str_1), "Вы успешно показали документы на транспорт игроку {FFFFFF}%s", cPN(target));
	SCM(playerid, COLOR_GREEN, str_1);
	SetPVarInt(playerid, !"reloader", gettime() + 2);
	return 1;
}
CMD:showskill(playerid, params[])
{
    new id;
	if(GetPVarInt(playerid, !"reloader") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /showskill [id]");
    if(!ProxDetectorS(5.0, playerid, id))  return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	ShowSkills(id, playerid);
	SetPlayerChatBubble(playerid, "Что-то показал(а).", COLOR_PURPLE, 10.0, 5000);
	f(str_1,sizeof(str_1),"Вы успешно показали свои навыки игроку %s",cPN(id));
	SCM(playerid,COLOR_GREEN,str_1);
	SetPVarInt(playerid, !"reloader",gettime()+2);
	return 1;
}
CMD:showmc(playerid, params[])
{
	if(!IsValidPassport(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет этого документа");
	if(GetPVarInt(playerid, !"reloader") > gettime())return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    new id;
    if(sscanf(params, "u", id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /showmc [id]");
    if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(PI[playerid][pShowDokument]) {
    	return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок отключил возможность показать ему что-либо!");
    }
    static Med[30];
	switch(MedCardInfo[playerid][mcState])
	{
	    case -1: return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет мед. карты!");
	   	case 0: Med = "Не определен";
	   	case 1: Med = "Психически не здоров(а)";
	   	case 2: Med = "Наблюдаются отклонения";
	   	case 3: Med = "Полностью здоровый(ая)";
	}
	str_1[0] = EOS;
    strcat(str_1,"{FFFFFF}");
	f(str_2, sizeof(str_2), "Имя: %s\n\n", PN(playerid));
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "Дата: %s\n", MedCardInfo[playerid][mcDate]);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "Статус: %s\n", Med);
	strcat(str_1, str_2);
	f(str_2, sizeof(str_2), "{CEAD2A}Наркозависимость: %i", PI[playerid][pAllRepl]);
	strcat(str_1, str_2);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, "Мед. карта", str_1, "Ок", "");
	f(str_1, sizeof(str_1), "%s показывает свою мед. карту %s", cPN(playerid), cPN(id));
	ProxDetector(25.0, playerid, str_1, COLOR_PURPLE);
	f(str_1, sizeof(str_1), "Вы успешно показали свою мед. карту игроку {FFFFFF}%s", cPN(id));
	SCM(playerid, COLOR_GREEN, str_1);
	SetPVarInt(playerid, !"reloader",gettime() + 10);
	return 1;
}
CMD:setgangzone(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new gang;
	if(sscanf(params,"d",gang)) return SCM(playerid, COLOR_RED, !"Используйте: /setgangzone [11 - 15 или 25]");
	if((11 > gang || gang > 15) && gang != 25) return SCM(playerid, COLOR_RED, !"Используйте: /setgangzone [11 - 15]");
	new zone = GetPlayerGangZone(playerid);
	if(CaptureZone == zone) return SCM(playerid, COLOR_GREY, !"Эту зону уже захватывают");
	new lastgang = GZInfo[zone][gzFracID];
	GangZoneHideForAll(GangZone[zone]);
    GangZoneShowForAll(GangZone[zone],TeamColors[gang]);
    GZInfo[zone][gzFracID] = gang;
    SendTeamMessage(gang,COLOR_VALIK,"[Информация] {FFFFFF}Ваша банда захватила новую территорию");
    UpdateDorm(gang);
    UpdateDorm(lastgang);
    SaveGangZone(zone);
    SendAdminsMessagef(COLOR_RED, "%s[%i] перекрасил %i территорию на %s", PN(playerid), playerid, zone, OrgInfo[gang][oName]);
    f(str_1, sizeof(str_1), "перекрасил %i территорию на %s", zone, OrgInfo[gang][oName]);
	return aml(18, playerid, "", str_1);
}
CMD:givebiz(playerid, params[])
{
    new giveplayerid;
    if(sscanf(params, "ud", giveplayerid)) return SCM(playerid, COLOR_GREY, !"Используй: /givebiz [ID/Name]");
    if(PI[playerid][pRank] < 9) return SCM(playerid, COLOR_RED, !"Доступно только лидеру и заместителю!");
    if(!IsAtMafia(playerid) || !IsAtMafia(giveplayerid))return SCM(playerid, COLOR_GREY, !"Либо вы либо тот кому вы хотите продать бизнес , не состоит в мафии!");
    if(giveplayerid == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете отдать самому себе!");
    if(!ProxDetectorS(5.0, playerid, giveplayerid, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
    if(BizWarState > 0)return SCM(playerid, COLOR_GREY, !"У кого то сейчас стрела ,пока она идет вы не можете отдать бизнес!");
    for(new i;i<OWNABLEBIZES;i++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid,10.0,BizInfo[i][bEnter_X],BizInfo[i][bEnter_Y],BizInfo[i][bEnter_Z])) continue;
	    if(BizInfo[i][bKrasher] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Вы не крешуете этот бизнес!");
	    BizInfo[i][bKrasher] = PI[giveplayerid][pMember];
     	SCM(giveplayerid,COLOR_VALIK,"Теперь вы крышуете этот бизнес!");
     	SCM(playerid, COLOR_VALIK, !"Вы отдали свой бизнес!");
     	UpdateBiz(i);
	}
	SCMf(giveplayerid,COLOR_RED,"Игрок %s отдал вам контроль над своим бизнесом!",PN(playerid));
	return 1;
}
CMD:sellgangzone(playerid, params[])
{
    new zone = GetPlayerGangZone(playerid);
    new giveplayerid, count;
    if(sscanf(params, "ud", giveplayerid, count)) return SCM(playerid, COLOR_GREY, !"Используй: /sellgangzone [ID/Name] [Цена]");
    if(!ProxDetectorS(2.0, playerid, giveplayerid, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
	if(!IsAtGang(playerid) || !IsAtGang(giveplayerid))return SCM(playerid, COLOR_GREY, !"Либо вы либо тот кому вы хотите продать зону , не состоит в банде!");
	if(GZInfo[zone][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Это не ваша зона");
	if(giveplayerid == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете продать самому себе!");
	if(PI[playerid][pLeader]==0 || PI[giveplayerid][pLeader]==0) return SCM(playerid, COLOR_GREY, !"Только лидер лидеру может продавать зоны!");
	if(CaptureZone == zone) return SCM(playerid, COLOR_GREY, !"Эту зону уже захватывают");
	if(count<0)return SCM(playerid, COLOR_RED, !"Вы указываете отрицательную сумму? серьезно? вы хотите ему заплатить?");
	if(PI[giveplayerid][pMoney]< count)return SCM(playerid, COLOR_RED, !"У этого бандита недостаточно денег чтобы оплатить!");
 	SellGzone[giveplayerid] = count;
	SellPGzone[giveplayerid] = playerid;
 	SCM(playerid, COLOR_GREY, !"Вы отправили предложение о покупке территории!");
	f(str_2,sizeof(str_2),"Игрок %s предлагает купить у него территорию за %i$\nВы согласны?",PN(playerid),count);
	SPD(giveplayerid,377,0,"Информация",str_2,"Согласен","Отклонить");
	return 1;
}
CMD:capture(playerid, params[])
{
	if(!IsAtGang(playerid)) return SCM(playerid, COLOR_GREY, !"Вы должны быть в банде чтоб использовать эту функцию.");
	if(PI[playerid][pRank] < 9) return SCM(playerid, COLOR_GREY, !"Для захвата зоны необходимо иметь ранг не менее 9-го");
	new h, m, s; gettime(h,m,s);
	if(h<11 || 22<h) return SCM(playerid, COLOR_GREY, !"Слишком рано проводить нападение.");
	if(CaptureTime[0]>0 || CaptureTime[1]>0) return SCM(playerid, COLOR_GREY, !"Уже идет атака на один из районов города.");
    new Atac = GetTeamID(playerid);
    if(RecoveryTime[Atac]>0) return SCM(playerid, COLOR_GREY, !"Ваша банда ещё не восстановила силы");
    new zone = GetPlayerGangZone(playerid);
    if(zone == -1) return SCM(playerid, COLOR_GREY, !"Вы не находитесь ни в одной из зон");
	if(!IsGangToZone(Atac, zone, 50.0)) return SCM(playerid, COLOR_GREY, !"Для захвата зоны хотябы половина всех членов банды должны присутствовать на захвате");
    if(GZInfo[zone][gzFracID] == Atac) return SCM(playerid, COLOR_GREY, !"Это ваша зона");
    if(RecoveryTime[GZInfo[zone][gzFracID]]>0) return SCM(playerid, COLOR_GREY, !"Вы не можете каптить эту территорию, так-как эта банда востанавлевает силы.");
	if(!GZInfo[zone][gzFracID])
	{
	    GangZoneHideForAll(GangZone[zone]);
        GangZoneShowForAll(GangZone[zone],TeamColors[Atac]);
        GZInfo[zone][gzFracID] = Atac;
        RecoveryTime[Atac] = 1800;
        SendTeamMessage(Atac,COLOR_VALIK,"Ваша банда захватила новую территорию");
        UpdateDorm(Atac);
        SaveGangZone(zone);
	}else{
	    if(IsTeamConnected(GZInfo[zone][gzFracID])<3) return SCM(playerid, COLOR_GREY, !"Для захвата зоны должен быть онлайн хотябы 3 членов банды владеющей этой зоной");
	    if(IsTeamConnected(Atac)<3) return SCM(playerid, COLOR_GREY, !"Для захвата зоны должен быть онлайн хотябы 3 членов банды.");
		SendTeamMessage(Atac,COLOR_VALIK,"Ваша банда начала захват зоны, продержитесь 10 минут");
		SendTeamMessage(GZInfo[zone][gzFracID],COLOR_RED,"На 1-у из ваших зон напали, у вас 10 минут чтобы отбить зону");
		//
		SendAdminsMessagef(COLOR_ORANGE,"[A] Банда %s [%s(%i)] начала захват территории банды %s",OrgInfo[Atac][oName], PN(playerid), playerid,OrgInfo[GZInfo[zone][gzFracID]][oName]);
		///
		CaptureZone = zone;
		CaptureDef = GZInfo[zone][gzFracID];
		CaptureAtac = Atac;
		CaptureAtacKill = 0;
		CaptureDefKill = 0;
		CaptureTime[0] = 10;
		CaptureTime[1] = 0;//10 минут
		GangZoneFlashForAll(GangZone[CaptureZone],TeamColors[CaptureAtac]);
	}
	return 1;
}
CMD:slap(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid,COLOR_GREY,NO_DUTY_TEXT);
	extract params -> new player:id, type; else return SCM(playerid, COLOR_RED, !"Используй: /slap [id] [1 - вверх/2 - вниз]");
	if(type > 2 || type < 1) return SCM(playerid, COLOR_RED, !"Используй: /slap [id] [1 - вверх/2 - вниз]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"Игрок не законектился еще!");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(id,X,Y,Z);
	if(type == 1) SetPlayerPos(id,X,Y,Z+5);
	else SetPlayerPos(id,X,Y,Z-5);
	SendAdminsMessagef(COLOR_GREY, "[A] Администратор %s[%i] дал поджопник %s[%i]", PN(playerid),playerid,PN(id),id);
	return aml(1, playerid, PN(id), "подкинул игрока");
}
CMD:slapall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /slapall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /slapall [радиус > 0 или < 100]");
    static param[6];
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
        GetPlayerPos(playerid, x, y, z);
        f(param, sizeof(param), "%i 1", i);
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z)) callcmd::slap(playerid, param);
    }
    return 1;
}
CMD:weap(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /weap [id]");
	if(target == INVALID_PLAYER_ID) return 0;
   	ResetGun(target);
   	return SCMf(playerid, COLOR_LIGHTBLUE, "Вы отобрали оружие у игрока %s[%i]", PN(target), target);
}
CMD:sprunk(playerid)
{
	if(!GetInvCount(playerid, Item_Sprunk)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У тебя нет спранка!");
    new Float:Health;
    GetPlayerHealth(playerid, Health);
    if(Health <= 92.0) J_SetPlayerHealth(playerid, Health + 8);
    else J_SetPlayerHealth(playerid, 100);
	InvAdd(playerid, Item_Sprunk, -1);
	aml(102, playerid, "", "выпил банку спранка", Item_Sprunk, 1);
    f(str_2, sizeof(str_2), "%s выпил(а) банку спранка", cPN(playerid));
    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
    return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
}
CMD:beer(playerid)
{
	if(!GetInvCount(playerid, Item_Beer)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У тебя нет пива!");
    new Float:Health;
    GetPlayerHealth(playerid, Health);
    if(Health <= 90.0) J_SetPlayerHealth(playerid, Health + 10);
    else J_SetPlayerHealth(playerid, 100);
    InvAdd(playerid, Item_Beer, -1);
    aml(102, playerid, "", "выпил бутылку пива", Item_Beer, 1);
    f(str_2, sizeof(str_2), "%s выпил(а) бутылку пива", cPN(playerid));
    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
    return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
}
CMD:eat(playerid)
{
	if(PI[playerid][pHeal] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
    f(str_2, sizeof(str_2), "Еда\tКоличество\nЧипсы\t%i\nРыбу\t%i", GetInvCount(playerid, Item_Chips), GetInvCount(playerid, Item_FriedFish));
	SPD(playerid, 3303, 5, "{e4db5e}Кушать", str_2, "Принять", "Отмена");
	return 1;
}
CMD:drink(playerid)
{
	if(HouseEntered[playerid] == -1) return SCM(playerid, COLOR_GREY, !"Вы не находитесь ни в 1-ом из домов");
	if(!HouseInfo[HouseEntered[playerid]][hBar]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В вашем доме нет минибара!");
    for(new A; A < 3; A++) TextDrawShowForPlayer(playerid, alcodraw[A]);
	TextDrawShowForPlayer(playerid, alcodraw1[0]);
	TextDrawShowForPlayer(playerid, alcodraw1[1]);
 	TextDrawShowForPlayer(playerid, alcodraw1[2]);
	TextDrawShowForPlayer(playerid, alcodraw1[5]);
	TextDrawShowForPlayer(playerid, alcodraw1[6]);
  	SelectTextDraw(playerid, 0xFF9933FF);
	return 1;
}
CMD:fwarn(playerid, params[])
{
	if(PI[playerid][pLeader] == 0 && PI[playerid][pRank] < 8) return SCM(playerid, COLOR_GREY, !"Вы не можете это сделать!");
	static reason[150];
	new id;
	if(sscanf(params,"us[150]",id,reason)) return SCM(playerid, COLOR_RED, !"Используй: /fwarn [id] [причина]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
    if(!IsGiveWarn(playerid, id)) return SCM(playerid, COLOR_RED, !"Вы не можете ему дать выговор!");
    if(PI[id][pLeader] > 0 ) return SCM(playerid, COLOR_RED, !"Вы не можете выдать варн лидеру");
    if(PI[playerid][pRank]==PI[id][pRank])return SCM(playerid, COLOR_RED, !"Вы не можете ему дать выговор!");
    if(CheckIsADomen(playerid,reason)) return 0;
    if(IsAIP(playerid, reason))return 1;
    PI[id][pFWarns] ++;
    UpdatePlayerDataInt(id, "FWarns", PI[id][pFWarns]);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы дали выговор игроку %s с причиной %s",PN(id),reason);
    SCMf(id, COLOR_LIGHTRED, "%s дал вам выговор с причиной %s",PN(playerid),reason);
	if(PI[id][pFWarns] >= 3)
	{
	    SCM(id,COLOR_GREY,"Вы были автоматически выгнаны из организации т.к у вас больше 2-х выговоров");
	    f(str_2,sizeof(str_2),"%s покидает нашу организацию т.к у него больше 2-х выговоров",PN(id));
	    SendTeamMessage(PI[id][pMember],COLOR_GREY,str_2);
	    PI[id][pFWarns] =
        PI[id][pRank] =
        PI[id][pJob] =
	    PI[id][pMember] =
	    PI[id][pDCTime] = 0;
	    UpdatePlayerDataInt(id, "DCTime", 0);
	    UpdatePlayerDataInt(id, "Job", 0);
	    UpdatePlayerDataInt(id, "FWarns", 0);
	    UpdatePlayerDataInt(id, "Rank", 0);
	    UpdatePlayerDataInt(id, "Member", 0);
	    SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
        SetBumSkin(id);
    	PlayerSpawn(id);
	}
	return 1;
}
CMD:unfwarn(playerid, params[])
{
	if(PI[playerid][pLeader] == 0 && PI[playerid][pRank] < 9) return SCM(playerid, COLOR_GREY, !"Вы не можете это сделать!");
	new id;
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /unfwarn [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
    if(GetTeamID(id) != GetTeamID(playerid)) return SCM(playerid, COLOR_RED, !"Вы не можете снять выговор этому человеку");
	if(PI[id][pFWarns] == 0) return SCM(playerid, COLOR_RED, !"У этого человека нет выговоров!");
	if(id==playerid)return SCM(playerid, COLOR_RED, !"Вы не можете снять выговор самому себе!");
    PI[id][pFWarns] --;
    UpdatePlayerDataInt(id, "FWarns", PI[id][pFWarns]);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы сняли выговор игроку %s",PN(id));
    SCMf(id, COLOR_LIGHTRED, "%s снял вам выговор",PN(playerid));
	return 1;
}
CMD:Newsredak(playerid)
{
   	if(!IsANews(playerid)) return SCM(playerid, COLOR_GREY, !"Только для сотрудников СNN!");
	if(PI[playerid][pRank]<2)return SCM(playerid, COLOR_RED, !"Отказано в доступе! (Доступно с 2 ранга!)");
	static bstr[4096];
	bstr[0] = EOS;
	foreach(new id: Player)
	{
		if(AddTimeMessages[id] > 0)
		{
			if(vipob[id] > 0) f(bstr,sizeof(bstr),"{fcaa4d}[VIP] {FFFFFF}%s Отправитель: %s			%ic\n",bstr,PN(id),gettime() - AddTimeMessages[id]);
            else f(bstr,sizeof(bstr),"%s Отправитель: %s			%ic\n",bstr,PN(id),gettime() - AddTimeMessages[id]);
		}
	}
	if(strlen(bstr) > 0) SPD(playerid, 556, 2, !"Редакция", bstr, !"Выбрать", !"Закрыть");
	else SPD(playerid, 0, 0, !"Редакция", !"На данный момент сообщений нет", !"Закрыть", !"");
	return 1;
}
CMD:ad(playerid, params[])
{
    if(!PI[playerid][pTelNum] || !CheckPhones(playerid)) return SCM(playerid, COLOR_GREY, !"У вас нет мобильного телефона или sim карты!");
    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, !"Подавать рекламу можно только с 2-го уровня");
    if(AddTimeMessages[playerid] > 0) return SCM(playerid, COLOR_RED, !"Вы уже подавали объявление на редакцию!");
    if(TimeMessage[playerid] > gettime()) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете так часто подавать объявления!");
    if(PI[playerid][pPlanshet])
    {
    	new type;
        static text[100];
		if(sscanf(params,"ds[100]",type, text))
        {
            SCM(playerid, -1, !"Используй: /ad [Тип: 1 - обычное, 2 - VIP] [Текст]");
            SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость Standart обьявления - 5 000$");
            return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость VIP обьявления - 25 000$");
        }
	    if(!(1 <= strlen(text) <= 100)) return SCM(playerid, COLOR_GREY, !"Количество символов в объявлении не может быть менее 1 или более 100.");
        if(type == 1)
        {
            if(GetMoney(playerid) < 5000)
	            return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");

            SCM(playerid, COLOR_YELLOW, !"Ваше сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = gettime();
            TimeMessage[playerid] = gettime() + 20;
            f(AddMessages[playerid], 128, "%s", text);
        }
        else if(type == 2)
        {
            if(GetMoney(playerid) < 25000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас не достаточно денег на покупку VIP объявления. [25 000$]");
            SCM(playerid, -1, !"{C17C2D}Ваше VIP сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = gettime();
            TimeMessage[playerid] = gettime() + 5;
            vipob[playerid] = 1;
            f(AddMessages[playerid], 128, "%s", text);
		}
	    else return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Используйте 1 - обычное обьявление, 2 - VIP обьявление!");
    }
    else
    {
        if(!IsPlayerInRangeOfPoint(playerid, 50.0, -190.27, 1338.79, 1500.98)) return SCM(playerid, COLOR_GREY, !"Вы не можете тут подать объявление! Отправляйтесь в LS/SF/LV-Радиостанции");
        new type;
        static text[100];
		if(sscanf(params,"ds[100]",type, text))
        {
            SCM(playerid, -1, !"Используй: /ad [Тип: 1 - обычное, 2 - VIP] [Текст]");
            SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость Standart обьявления - 5 000$");
            return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Стоимость VIP обьявления - 25 000$");
        }
	    if(!(1 <= strlen(text) <= 100)) return SCM(playerid, COLOR_GREY, !"Количество символов в объявлении не может быть менее 1 или более 100.");
        if(type == 1)
        {
            if(GetMoney(playerid) < 5000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
            SCM(playerid, COLOR_YELLOW, !"Ваше сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "На обработку объявлений пришло сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = gettime();
            TimeMessage[playerid] = gettime() + 20;
            f(AddMessages[playerid], 128, "%s", text);
        }
        else if(type == 2)
        {
            if(GetMoney(playerid) < 25000) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас не достаточно денег на покупку VIP объявления. [25 000$]");
            SCM(playerid, -1, !"{C17C2D}Ваше VIP сообщение зарегистрировано в системе и будет опубликовано после редакции!");
            SendTeamMessagef(TEAM_RADIO, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOLV, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            SendTeamMessagef(TEAM_RADIOSF, -1, "{C17C2D}На обработку объявлений пришло VIP сообщение от: %s", PN(playerid));
            AddTimeMessages[playerid] = gettime();
            TimeMessage[playerid] = gettime() + 5;
            vipob[playerid] = 1;
            f(AddMessages[playerid], 128, "%s", text);
        }
	    else return SCM(playerid, COLOR_ORANGE, !">>>>{FFFFFF} - Используйте 1 - обычное обьявление, 2 - VIP обьявление!");
    }
    return 1;
}
CMD:heal(playerid, params[])
{
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не доктор!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Чтобы лечить пациентов вы должны быть на дежурстве!");
    extract params -> new player:target; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /heal [id]");
	if(target == INVALID_PLAYER_ID) return 0;
	if(!ProxDetectorS(4.0, playerid, target)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
   	new carid = GetPlayerVehicleID(playerid);
	if(vTemp[carid][vTeam] == TEAM_MEDICLS || vTemp[carid][vTeam] == TEAM_MEDICSF || vTemp[carid][vTeam] == TEAM_MEDICLV || IsPlayerInRangeOfPoint(playerid, 70, -1772.20, -2009.65, 1500.79) || IsPlayerInRangeOfPoint(playerid, 70, -1354.0164, 8.2145, 1601.0859))
	{
	    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отправили предложение о лечении.");
		ac_ShowPlayerDialog(target, 131),ShowPlayerDialogf(target, 131, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Лечение", !"Ок", !"Отмена", "\n\nМедик {dad540}%s {FFFFFF}хочет вылечить вас за {dad540}$400\n\n", cPN(playerid));
		HealOffer[target] = playerid;
	}
	else SCM(playerid, COLOR_GREY, !"{FF0000}x {AFAFAF}Вы должны находится в больнице или машине!");
	return 1;
}
CMD:number(playerid, params[])
{
	if(!GetInvCount(playerid, Item_PhoneBook)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет телефонной книжки");
	extract params -> new player:targetid; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /number [id] чтобы узнать номер игрока!");
    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
	if(PI[targetid][pAdmin]) return 0;
    if(!PI[targetid][pTelNum]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет sim карты!");
    SetPlayerChatBubble(playerid, !"Смотрит телефонную книгу", COLOR_PURPLE, 10.0, 5000);
    SCMf(playerid, -1, "{FFFFFF}%s[%i]:    {33CCFF}%i", PN(targetid), targetid, PI[targetid][pTelNum]);
	return 1;
}
CMD:fishes(playerid)
{
	str_2[0] = EOS;
	for(new i;i < 5;i ++)
	{
		f(str_1,sizeof(str_1),"%s\n",FishName[PlayerFish[playerid][i]]);
		strcat(str_2,str_1);
	}
	if(!SPD(playerid,0,0,"Список рыб",str_2,"Ок",""))SCM(playerid, COLOR_GREY, !"Недоступно в данный момент.");
	return 1;
}
CMD:go_fished(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    if(!InJob[playerid])
	    {
		    if(GetInvCount(playerid, Item_FishingRod))
		    {
		        if(GetInvCount(playerid, Item_Worms))
		        {
		            if(!Fishing{playerid})
		            {
						for(new i;i < sizeof(FishZone);i ++)
						{
						    if(IsPlayerInRangeOfPoint(playerid,2.0,FishZone[i][0],FishZone[i][1],FishZone[i][2]))
						    {
						        SetPlayerArmedWeapon(playerid, 0);
						        if(!IsPlayerAttachedObjectSlotUsed(playerid, 7))SetPlayerAttachedObject(playerid, 7,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
						        TogglePlayerControllable(playerid, false);
						        ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
								f(str_2,sizeof(str_2),"* %s закидывает крючок и ловит рыбу",cPN(playerid));
								ProxDetector(25,playerid, str_2,COLOR_PURPLE);
								SetPlayerTimer(playerid,"PlayerFishing",15000 + random(10000),false);
								Fishing{playerid} = true;
						    }
						}
					}
					else SCM(playerid, COLOR_GREY, !"Вы уже ловите рыбу");
				}
				else SCM(playerid, COLOR_GREY, !"У вас нет наживки");
			}
			else SCM(playerid, COLOR_GREY, !"У вас нет удочки");
		}
		else SCM(playerid, COLOR_GREY, !"Нельзя рыбачить во время работы");
	}
	return 1;
}
CMD:mask(playerid)
{
    if(Cuffed{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
	if(IsANotControllable(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете двигаться");
    if(PI[playerid][pMaskON]==0)
    {
		if(!GetInvCount(playerid, Item_Mask)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет маски!");
		InvAdd(playerid, Item_Mask, -1);
		aml(102, playerid, "", "одел маску", Item_Mask, 1);
		SetPlayerColor(playerid,0x665E5E01);

		if(PI[playerid][pFamilyMember] != -1)
		{
			if(!FamilyInfo[PI[playerid][pFamilyMember]][famShadow])
			{
			    PI[playerid][pMaskON] = 600;
			    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно одели маску.");
			    SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Время действия маски 10 минут, после исхода времени ее придётся выбросить.");
			}
		}
		else
		{
		    PI[playerid][pMaskON] = 1800;
		    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно одели маску.");
		    SCM(playerid, COLOR_BLUE, !"[Информация] {FFFFFF}Время действия маски 30 минут, после исхода времени ее придётся выбросить.");
		}
		ApplyAnimation( playerid, "SHOP", "ROB_shifty", 4.1, 0, 1, 1, 0, 0 );
    }
    else
	{
	    PI[playerid][pMaskON]=0;
		if(TeamDuty{playerid}) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
		else SetPlayerColor(playerid,0xFFFFFF80);
        SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно выкинули маску.");
	}
	return 1;
}
CMD:settime(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new hour;
    if(sscanf(params,"d",hour)) return SCM(playerid, COLOR_RED, !"Используй: /settime [hour]");
    SetWorldTime(hour);
	f(str_1, sizeof(str_1), "сменил время сервера на %i", hour);
	return aml(18, playerid, "", str_1);
}
CMD:unban(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
 	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static name[MAX_PLAYER_NAME];
    if(sscanf(params, "s[24]", name)) return SCM(playerid, COLOR_RED, !"Используй: /unban [name]");
    if(CheckIsASuccesIP(playerid)) return 0;
    if(!IsBannedName(name)) return SCMf(playerid, COLOR_GREY, "Игрок %s не забанен", name);
    mysql_escape_string(name, UnbanName[playerid]);
    static reason[100], admin[24];
    new seconds;
    mysql_format(mysql, str_1, 100, "SELECT * FROM `BanNames` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
	new Cache:result = mysql_query(mysql, str_1);
	if(cache_num_rows() > 0)
	{
		cache_get_value_index(0, 2, admin);
		cache_get_value_index(0, 3, reason);
		cache_get_value_index_int(0, 4, seconds);

		new times = gettime();

		static tima[20];
		new dima;
		if(floatround((seconds-times) / 60 / 60 / 24) > 1)
		{
			tima = "дней";
			dima = floatround((seconds-times) / 60 / 60 / 24, floatround_ceil);
		}
		else if(floatround((seconds-times) / 60 / 60) > 1)
 	    {
	 		tima = "час(ов)";
	 		dima = floatround((seconds-times) / 60 / 60, floatround_ceil);
		}
		else
		{
	 		tima = "минут";
	 		dima = floatround((seconds-times) / 60, floatround_ceil);
		}

	    f(str_1, sizeof(str_1), "\
		{FFFFFF}Блокиратор: \t{FF0000}%s\n\
		{FFFFFF}Причина: \t{FF0000}%s\n\
		{FFFFFF}До разблокировки: \t\t{FF0000}%i %s",
		admin, reason, dima, tima);
		SPD(playerid, 91, 0, UnbanName[playerid], str_1, !"Разбан", !"Отмена");
	}
	cache_delete(result);
	return 1;
}
CMD:cars(playerid)
{
    str_1[0] = EOS, str_2[0] = EOS;
    mysql_format(mysql, str_query, sizeof(str_query), "SELECT * FROM `Ownable` WHERE `Owner` = '%s'", PN(playerid));
    new Cache:result = mysql_query(mysql, str_query);
    new cars, item[8], tun[50], shtrafer, model, carid, ID, connect;
    for(new i; i < cache_num_rows(); i++)
    {
        cache_get_value_name_int(i, "Model", model);
        cache_get_value_name_int(i, "VehicleID", carid);
        cache_get_value_name_int(i, "LoadConnect", connect);
        cache_get_value_name_int(i, "ID", ID);
        GetVehicle[playerid][cars] = ID;
        if(carid == -1) f(str_1, sizeof(str_1), "%s\n{FF6347}[Не загружен]{FFFFFF} %s   %s\n", str_1, GetNameCar(model), connect == 1 ? "{cccccc}- загружаеться при входе{FFFFFF}" : "");
        else
        {
            cache_get_value_name(i, "SlotItem", str_2), sscanf(str_2, "p<,>a<i>[8]", item);
            cache_get_value_name_int(i, "Shtraf", shtrafer);
            ShowCar[playerid][cars] = carid;
            switch(item[6])
            {
                case Item_TwinTurbo: tun = "{FED748}[Twin Turbo]{FFFFFF}";
                case Item_Launch: tun = "{FED748}[Launch]{FFFFFF}";
                case Item_Premium: tun = "{F345FC}[Premium]{FFFFFF}";
                case Item_Mod_Halloween: tun = "{EAD064}[Halloween]{FFFFFF}";
                case Item_Mod_Classic: tun = "{EAD064}[Classic]{FFFFFF}";
                case Item_Mod_Futuristic: tun = "{EAD064}[Future]{FFFFFF}";
                case Item_Mod_Cyberpunk: tun = "{EAD064}[Cyber Punk]{FFFFFF}";
                case Item_Mod_FutureTaxi: tun = "{EAD064}[Future Taxi]{FFFFFF}";
            }
            if(IsAOwnableInParking(GetVehicleID(carid))) f(str_1, sizeof(str_1), "%s\n%s %s(%i)\n", str_1, shtrafer ? "{FF6347}[X]{FFFFFF}" : "{FF6347}[Не припаркован]{FFFFFF}", GetNameCar(model), carid);
            else f(str_1, sizeof(str_1), "%s\n%s %s(%i)\n", str_1, shtrafer ? "{FF6347}[X]{FFFFFF}" : tun, GetNameCar(model), carid);
        }
        cars ++;
    }
    cache_delete(result);
    if(!cars) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет личного транспорта!");
    return SPD(playerid, 162, DIALOG_STYLE_LIST, !"Мой транспорт", str_1, !"Выбор", !"");
}
CMD:bizinfo(playerid)
{
    if(PI[playerid][pDemorgan]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете использовать эту команду в этом месте!");
    if(GetPlayerBiz(playerid) == -1) return SCM(playerid, COLOR_GREY, !"У вас нет бизнеса");
    new bizs, num = 1;
    str_2[0] = EOS;
    for(new i = 0; i < OWNABLEBIZES; i++)
	{
		if(GetString(BizInfo[i][bOwner], PN(playerid)) || GetString(BizInfo[i][bZam], PN(playerid)))
		{
		    ShowBiz[playerid][bizs] = i;
		    f(str_1, sizeof(str_1), "{FFFFFF}%i. %s %s\n", num, BizInfo[i][bName], BizInfo[i][bLock] ? ("{FF6347}[Закрыт]") : ("{9ACD32}[Открыт]"));
		    strcat(str_2, str_1);
		    bizs ++;
		    num ++;
		}
	}
	SPD(playerid, 9761, DIALOG_STYLE_LIST, !"Мои бизнесы", str_2, !"Выбор", !"Отмена");
	return 1;
}
CMD:unjail(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static reason[100];
	new id;
	if(sscanf(params,"us[100]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /unjail [id] [reason]");
    if(CheckIsASuccesIP(playerid)) return 0;
	if(id == INVALID_PLAYER_ID) return 1;
	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s выпустил игрока %s, причина: %s", PN(playerid), PN(id), reason);
	PI[id][pDemorgan] =
	PI[id][pJailTime] = 0;
	aml(21, playerid, PN(id), reason);
	return PlayerSpawn(id);
}
CMD:jail(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static reason[100];
    new time;
	if(CheckIsASuccesIP(playerid)) return 0;
    if(sscanf(params,"uds[100]",params[0],time,reason)) return SCM(playerid, COLOR_RED, !"Используй: /jail [id] [time] [reason]");
    if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    if(strlen(reason) > 45) return SCM(playerid, COLOR_RED, !"Не больше 45 символов!");
    if(PI[params[0]][pJailTime] > 0) return SCM(playerid, COLOR_RED, !"Этот игрок уже в КПЗ!");
    if(PI[params[0]][pDemorgan] > 0) return SCM(playerid, COLOR_RED, !"Этот игрок уже в ДЕМОРГАНЕ!");
    if(time == 0) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя посадить на 0 минут");
    if(time > 3000) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя посадить больше чем на 3000 минут");
    if(PI[params[0]][pDemorgan] > 0 && PI[playerid][pAdmin] < ADM_ADMIN) return SCM(playerid, COLOR_RED, !"Ваш уровень не дает возможность менять время отсидки этого игрока.");
	SetSpawnInfo(params[0], 255, 8, -799.1370,2831.1130,1501.9896, 90.0, 6, 6, 6, 6, 6, 6);
	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s[%i] посадил игрока %s[%i] в деморган на %i минут, причина: %s",PN(playerid), playerid,PN(params[0]), params[0],time,reason);
	PlayerPlaySound(params[0], 1058, 0.0, 0.0, 0.0);
	ResetGun(params[0]);
	PI[params[0]][pDemorgan] = time*60;
	PI[params[0]][pWanted] = 0;
	J_SetPlayerWantedLevel(params[0], 0);
	PI[params[0]][pPcix] ++;
	UpdatePlayerDataInt(playerid, "Pcix", PI[playerid][pPcix]);
	J_SetPlayerHealth(params[0],100);
	PlayerSpawn(params[0]);
	return aml(6, playerid, PN(params[0]), reason, time);
}
CMD:take(playerid, params[])
{
	if(!IsACop(playerid) ) return SCM(playerid, COLOR_GREY, !"Вы не можете забрать лицензии");
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /take [id]");
    if(PI[playerid][pRank] < 6) return SCM(playerid, COLOR_GREY, !"Вы не можете забрать лицензии");
    if(!ProxDetectorS(2.0,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    TakeOffer[playerid] = id;
    SPD(playerid,88,2,"Что забрать","Наркотики\nПатроны\nОружие\nЛицензию","Забрать","Отмена");
	return 1;
}
CMD:incar(playerid, params[])
{
	new id,mesto;
	if(sscanf(params,"ud",id,mesto) || mesto < 1 || mesto > 3) return SCM(playerid, COLOR_RED, !"Используй: /incar [id] [id места(1-3)]");
	if(!ProxDetectorS(4,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	new imcop = IsACop(playerid);
	new cuffed = (imcop && Cuffed{id});
	if( !cuffed ) return SCM(playerid, COLOR_GREY, !"Этот игрок не обездвижен");
	foreach(new i: Vehicle)
	{
		if(!IsACar(i)) continue;
		if(GetVehicleSeat(i, mesto) != INVALID_PLAYER_ID) continue;
		if( mesto > GetVehicleMaxSeat(i) ) continue;
		if( !( IsACopCar(i) && imcop )) continue;
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(i,X,Y,Z);
		if(!IsPlayerInRangeOfPoint(playerid,2.5,X,Y,Z)) continue;
		PutPlayerInVehicle(id, i, mesto);
		TogglePlayerControllable(id, false);
		f(str_2,sizeof(str_2)," %s затащил игрока %s в машину.",cPN(playerid),cPN(id));
		ProxDetector(25,playerid, str_2,COLOR_PURPLE);
		break;
	}
	return 1;
}
CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    new Float:Distance[sizeof(PrisonPos)];
    Distance[0] = GetPlayerDistanceFromPoint(playerid,PrisonPos[0][0],PrisonPos[0][1],PrisonPos[0][2]);
    Distance[1] = GetPlayerDistanceFromPoint(playerid,PrisonPos[1][0],PrisonPos[1][1],PrisonPos[1][2]);
    Distance[2] = GetPlayerDistanceFromPoint(playerid,PrisonPos[2][0],PrisonPos[2][1],PrisonPos[2][2]);
    Distance[3] = GetPlayerDistanceFromPoint(playerid,PrisonPos[3][0],PrisonPos[3][1],PrisonPos[3][2]);
    Distance[4] = GetPlayerDistanceFromPoint(playerid,PrisonPos[4][0],PrisonPos[4][1],PrisonPos[4][2]);
    SCM(playerid, COLOR_LIGHTBLUE, !"Едьте на место обозначенное на карте красным маркером");
	for(new i;i<5;i++) TogglePlayerDynamicCP(playerid,JailCP[i],false);
    if(Distance[0] < Distance[1] && Distance[0] < Distance[2] && Distance[0] < Distance[3] && Distance[0] < Distance[4])
    {
        PlayerJailCP[playerid] = 0;
        TogglePlayerDynamicCP(playerid,JailCP[0],true);
    }
    else if(Distance[1] < Distance[0] && Distance[1] < Distance[2] && Distance[1] < Distance[3] && Distance[1] < Distance[4])
    {
        PlayerJailCP[playerid] = 1;
        TogglePlayerDynamicCP(playerid,JailCP[1],true);
    }
    else if(Distance[2] < Distance[0] && Distance[2] < Distance[1] && Distance[2] < Distance[3] && Distance[2] < Distance[4])
    {
        PlayerJailCP[playerid] = 2;
        TogglePlayerDynamicCP(playerid,JailCP[2],true);
    }
    else if(Distance[3] < Distance[0] && Distance[3] < Distance[1] && Distance[3] < Distance[2] && Distance[3] < Distance[4])
    {
        PlayerJailCP[playerid] = 3;
        TogglePlayerDynamicCP(playerid,JailCP[3],true);
    }
    else if(Distance[4] < Distance[0] && Distance[4] < Distance[1] && Distance[4] < Distance[2] && Distance[1] < Distance[3])
    {
        PlayerJailCP[playerid] = 4;
        TogglePlayerDynamicCP(playerid,JailCP[4],true);
    }
	return 1;
}
CMD:engine(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return 0;
	if(engines[playerid]>gettime())return SCM(playerid, COLOR_GREY, !"Нельзя так часто заводить двигатель");
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || GetVehicleInterior(carid) == 69 || IsARcCar(carid)) return 0;
	if(GetEngineStatus(carid) < 1)
	{
	    if(IsAArendCar(carid))
	    {
	        new rentid = GetArendCarID(carid);
	        if(ArendInfo[rentid][aRentID] != playerid) return 0;
	    }
	    if(GetPlayerVirtualWorld(playerid)!=1228)
	    {
		    if(IsACar(carid) && !GetInvCount(playerid, Item_Car_Lic) && CarTest[playerid] == -1) return 0;
		    if(IsABike(carid) && !GetInvCount(playerid, Item_Bike_Lic) && MotoTest[playerid] == -1) return 0;
		    if(IsABoat(carid) && !GetInvCount(playerid, Item_Boat_Lic)) return 0;
	    }
	    if(vTemp[carid][Fuel] > 0.0)
	    {
	    	new number = GetVehicleID(carid);
	        if(IsASellCar(number)) return 1;
   			if(!IsAOwnableCar(number) || CarInfo[number][cKeyIN])
		    {
			    new Float:Health;
			    GetVehicleHealth(carid, Health);
			    if(Health > 1000) Health = 1000.0;
			    else if(Health < 400) return SCM(playerid, COLOR_GREY, !"Вы не можете завести двигатель. Для его починки вызовите механика");
			    new UNEngine = floatround(2000.0 - Health);
			    if(UNEngine < 0) UNEngine = 0;
			    else if(UNEngine > 2000) UNEngine = 2000;
			    SetTimerEx("EngineVehicle", UNEngine, false, "ii", playerid, carid);
			    f(str_2, sizeof(str_2), " %s пытается завести двигатель", cPN(playerid));
			    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
			    engines[playerid]=gettime()+4;
			    new i = pTemp[playerid][pSellCar];
			    if(i != -1 && autoBazarInfo[i][autoBazarplayerid] == playerid) {
				    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Транспорт снят с продажи, из-за того что вы или транспорт покинули место!");
					autoBazarInfo[i][autoBazar2PosX] =
					autoBazarInfo[i][autoBazar2PosY] =
					autoBazarInfo[i][autoBazar2PosZ] = 0.0;
				    autoBazarInfo[i][autoBazarCarID] = INVALID_VEHICLE_ID;
				    autoBazarInfo[i][autoBazarCarID_Ownable] = INVALID_VEHICLE_ID;
				    autoBazarInfo[i][autoBazarplayerid] = INVALID_PLAYER_ID;
				    DestroyDynamic3DTextLabel(autoBazarInfo[i][autoBazarLabel2]);
         			DestroyAutoBazarTable(i);
				    DestroyDynamicArea(autoBazarInfo[i][autoBazarArea]);
			    	if(autoBazarInfo[i][autoBazarType] == 1) {
			    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вело/авто/мото\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
			    	}
			    	else {
			    		UpdateDynamic3DTextLabelText(autoBazarInfo[i][autoBazarLabel], -1, "Место для продажи {33aa33}[Свободно]\n{d1ca61}Тип: вертолёты\n{FFFFFF}Нажмите 'H' (сигнал) чтобы занять");
			    	}
					pTemp[playerid][pSellCar] = -1;
				}
		    }
		    else return SCM(playerid, COLOR_GREY, !"Ключи не вставлены");
	    }
	    else return SCM(playerid, COLOR_GREY, !"Нет топлива");
	}
	else
	{
		SetEngineStatus(carid,false, playerid);
		f(str_2,sizeof(str_2)," %s заглушил(а) двигатель",cPN(playerid));
		ProxDetector(25.0,playerid, str_2,COLOR_PURPLE);
	}
	return 1;
}
CMD:live(playerid, params[])
{
	if(!IsANews(playerid)) return SCM(playerid, COLOR_RED, !"Вы не репортёр!");
	if(PI[playerid][pRank]<6)return SCM(playerid, COLOR_RED, !"Отказано в доступе! (Доступно с 6 ранга!)");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    new carid = GetPlayerVehicleID(playerid);
	if(IsANewsCar(carid) || IsPlayerInRangeOfPoint(playerid,50,-161.72, 1340.78, 1500.99))
	{
	    if(LiveOffer[playerid] != INVALID_PLAYER_ID) return 0;
	    new id;
	    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /live [id/name]");
	    if(!IsPlayerConnected(id) || id == playerid) return 0;
        if(!IsPlayerInVehicle(id,GetPlayerVehicleID(playerid))) return 0;
	    f(str_2,sizeof(str_2),"Репортер %s предлагает вам провести с ним беседу в прямом эфире",PN(playerid));
	    SPD(id,146,0,"Беседа",str_2,"Согласен","Ненадо");
		LiveOfferID[id] = playerid;
	}
	else SCM(playerid, COLOR_GREY, !"Вы должны находится в машине радио студии или в знании новосного агентства!");
	return 1;
}
CMD:endlive(playerid, params[])
{
	if(!IsANews(playerid)) return SCM(playerid, COLOR_RED, !"Вы не репортёр!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(LiveOffer[playerid] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Недоступно в данный момент");
    new id = LiveOffer[playerid];
    static getradio[40];
    switch(PI[playerid][pMember])
    {
        case TEAM_RADIO: getradio = "LS";
        case TEAM_RADIOSF: getradio = "SF";
        case TEAM_RADIOLV: getradio = "LV";
        default: getradio = "";
    }
    if(!IsPlayerConnected(id) || id == playerid) return SCM(playerid, COLOR_GREY, !"Неверный id");
    TogglePlayerControllable(LiveOfferID[id], true);
    SCMAllf(COLOR_LIME, "[Radio %s ]Репортер %s закончил беседу с %s.", getradio, PN(playerid), PN(id));
    SCMf(id, COLOR_GREY, "Репортер %s %s закончил беседу с вами.", getradio, PN(playerid));
	SCMf(playerid, COLOR_GREY, "Вы закончили беседу с %s.", PN(playerid));
	LiveOfferID[playerid] = INVALID_PLAYER_ID;
	LiveOfferID[id] = INVALID_PLAYER_ID;
	return 1;
}
CMD:advokats(playerid)
{
	SCM(playerid, COLOR_ORANGE, !"Адвокаты онлайн:");
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PI[i][pJob] == 6 && PI[i][pTelNum] != 0)
			{
			    f(str_2, sizeof(str_2), "Адвокат %s(%i) | Номер телефона: %i", PN(i), i, PI[i][pTelNum]);
				SCM(playerid, COLOR_LIGHTBLUE, str_2);
			}
		}
	}
	return 1;
}
CMD:zeks(playerid, params[])
{
	if(PI[playerid][pJob]!=JOB_ADVOKAT) return SCM(playerid, COLOR_GREY, !"Вы не адвокат.");
	static fgs[25];
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PI[i][pJailTime] > 0)
			{
				switch(GetPlayerVirtualWorld(i))
				{
				    case 11: fgs ="Red Country PD";
				    case 12: fgs ="Las-Venturas PD";
				    case 13: fgs ="San Fierro PD";
				}
				f(str_2,sizeof(str_2),"%s(%i) | Время: %i мин | Залог: $%i | Местоположение: %s.",PN(i),i,PI[i][pJailTime]/60,PI[i][pBailPrice],fgs);
				SCM(playerid,COLOR_GREY,str_2);
			}
		}
	}
	return 1;
}
CMD:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве");
	new id;
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /cuff [id/name]");
 	if(IsACop(id))return SCM(playerid, COLOR_GREY, !"Нельзя надеть наручники на  полицейского");
	if(!ProxDetectorS(1.5,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	if(CuffedTime[id] <= 0 || PlayerSpeed(id)) return SCM(playerid, COLOR_GREY, !"Сначала нужно оглушить игрока");
    if(Cuffed{id}) return SCM(playerid, COLOR_GREY, !"Игрок уже скован");
    if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Вы уже кого-то сковываете");
    if(PlayerOfCuff[id] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Игрока уже сковывают");
    PlayerOfCuff[playerid] = id;
    PlayerOfCuff[id] = playerid;
    TimeOfCuff[playerid] = 4;
    Recuffer[id]=playerid;
	CuffedTime[id] = 30;
	Cuffed{id} = true;
    f(str_2,sizeof(str_2)," %s начинает сковывать %s",cPN(playerid),cPN(id));
    ProxDetector(25,playerid, str_2,COLOR_PURPLE);
    ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, 0, 1, 1, 1, 0, 1);
	return 1;
}
CMD:uncuff(playerid, params[])
{
	if(!IsACop(playerid) && PI[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
	new id;
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /uncuff [id/name]");
	if(!ProxDetectorS(2.5,playerid,id)) return SCM(playerid, -1, !"Вы далеко от игрока!");
	if(!Cuffed{id}) return SCM(playerid, -1, !"Игрок не скован");
	f(str_2,sizeof(str_2)," %s расковал %s",cPN(playerid),cPN(id));
	ProxDetector(25,playerid, str_2,COLOR_PURPLE);
	Cuffed{id} = false;
	CuffedTime[id] = 0;
	Recuffer[id]=INVALID_PLAYER_ID;
	TogglePlayerControllable(id,true);
	SetPlayerSpecialAction(id, 0);
	if(GotoInfo[playerid][gtID] == id)
	{
	    CheckPlayerGoCuff(id);
		CheckPlayerGoCuff(playerid);
	}
	return 1;
}
CMD:bot(playerid, params[])
{
    if(!IsACop(playerid) && PI[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
    if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /bot [id/name]");
    if(!ProxDetectorS(1.5,playerid,params[0])) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(pTemp[params[0]][BreakCount]==0) return SCM(playerid, COLOR_RED, !"Этот игрок не пытается взломать наручники!");
    CheckBreakCuff(params[0]);
    CheckTheftCar(params[0]);
	SetItem(params[0], Item_Clips);
    SCM(params[0],COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас отобрали скрепки!");
	SCM(playerid, COLOR_VALIK, !"Вы успешно отобрали скрепки.");
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
	return 1;
}
CMD:break(playerid)
{
	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID)return SCM(playerid, COLOR_GREY, !"Вы не можете использовать скрепки во время конвоя!");
	if(!GetInvCount(playerid, Item_Clips)) return SCM(playerid, COLOR_GREY, !"У вас нет скрепок");
	if(!Cuffed{playerid}) return SCM(playerid, COLOR_GREY, !"Вы не скованы");
    if(CuffedTime[playerid]) return SCM(playerid, COLOR_RED, !"Вы парализованы!");
    CheckMiner(playerid);
    CheckBreakCuff(playerid);
    CheckTheftCar(playerid);
    SetPlayerRandomKey(playerid, pTemp[playerid][BreakKey], true);
    ShowPlayerActionBand(playerid, 0, 20);
    f(str_2,sizeof(str_2)," %s достал скрепки для взлома наручников",cPN(playerid));
    SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
	return 1;
}
CMD:breakcar(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return 1;
    if(IsANotControllable(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы неможете двигаться");
    if(!GetInvCount(playerid, Item_BreakCar)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет отмычки, купите её в магазине автозапчастей");
    if(TheftCarID[playerid] != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже взламываете транспорт");
    new Float:X, Float:Y, Float:Z;
    foreach(new i: OWNABLECARS)
    {
        new carid = OwnableCar[i];
        if(!IsAOwnableCar(i)) continue;
        GetVehiclePos(carid, X, Y, Z);
        if(CarInfo[i][cLock] != 1) continue;
        if(IsABike(carid) || IsAVelik(carid) || Isamoped(carid) || IsARcCar(carid)) continue;
        if(!IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) continue;
        if(!IsPlayerAimingAt(playerid, X, Y, Z, 2.0)) continue;
        CheckTheftCar(playerid);
        CheckMiner(playerid);
        CheckBreakCuff(playerid);
        TheftCarID[playerid] = carid;
        TheftCount[playerid] = 0;
        TogglePlayerControllable(playerid, false);
        ApplyAnimation(playerid, !"ROB_BANK", !"CAT_Safe_Rob", 4.1, 0, 1, 1, 1, 0, 1);
        SetPlayerRandomKey(playerid, TheftKey[playerid], true);
        ShowPlayerActionBand(playerid, 0, 10);
        return 1;
    }
    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Рядом с вами нету подходящего транспорта!");
    return 1;
}
CMD:freeze(playerid, params[])
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /freeze [id/name]");
	SendAdminsMessagef(COLOR_YELLOW, " Администратор %s заморозил игрока %s", PN(playerid), PN(id));
	TogglePlayerControllable(id, false);
	return aml(1, playerid, PN(id), "заморозил игрока");
}
CMD:unfreeze(playerid, params[])
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /unfreeze [id/name]");
	SendAdminsMessagef(COLOR_YELLOW, " Администратор %s разморозил игрока %s", PN(playerid), PN(id));
	TogglePlayerControllable(id, true);
	return aml(1, playerid, PN(id), "розморозил игрока");
}
CMD:clear(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
    if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_GREY, !"Ваш ранг мал для этой операции. Необходим 5-й ранг.");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /clear [id/name]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Неверный id игрока!");
    PI[id][pWanted] = 0;
    J_SetPlayerWantedLevel(id, 0);
    f(str_2, 82, "Полицейский %s очистил розыск %s[%i]", PN(playerid), PN(id), id);
    SendCopsMessage(COLOR_LIGHTBLUE, str_2);
    SCMf(id, COLOR_LIGHTBLUE, "Полицейский %s очистил ваш розыск", PN(playerid));
    return SCMf(playerid, COLOR_LIGHTBLUE,"Вы очистили розыск %s[%i]", PN(id), id);
}
CMD:setskin(playerid, params[])
{
    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id, skin, eternal;
    if(sscanf(params, "udd", id, skin, eternal)) return SCM(playerid, COLOR_RED, !"Используй: /setskin [id] [0 - 311] [0/1]");
    if(!IsValidSkin(skin)) return SCM(playerid, COLOR_RED, !"Невалидный скин!"); 
    if(eternal < 0 || eternal > 1) return 0;
    if(eternal == 1 && PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, !"Ты не можешь выдать вечный скин!");
    if(!Osnovat(PN(playerid)) && eternal == 1 && skin > 311) return SCM(playerid, COLOR_RED, !"Ты не можешь выдать новый вечный скин!");
    //if(skin < 1 || skin > 311) return 0;
    if(!IsPlayerConnected(id)) return 0;
	if(eternal == 1)
	{
	    PI[id][pSkin] = skin;
	    UpdatePlayerDataInt(id, "Skin", skin);
	    SetPlayerSkinEx(id, skin);
	    TogglePlayerControllable(id, true);
	    SCMf(id, COLOR_RED, "Администратор %s выдал вам вечный скин.", PN(playerid));
        SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] установил вечный скин [ID: %i] игроку %s[%i]", PN(playerid), playerid, skin, PN(id), id);
		f(str_1, sizeof(str_1), "установил вечный скин %i игроку", skin);
		aml(1, playerid, PN(id), str_1);
	}
	else
	{
        SetPlayerSkinEx(id, skin);
	    TogglePlayerControllable(id, true);
	    SCMf(id, COLOR_RED, "Администратор %s выдал вам временный скин.", PN(playerid));
        SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] установил временный скин [ID: %i] игроку %s[%i]", PN(playerid), playerid, skin, PN(id), id);
		f(str_1, sizeof(str_1), "установил временный скин %i игроку", skin);
		aml(1, playerid, PN(id), str_1);
	}
	return SCMf(playerid, -1, "Вы дали %s скин %i", PN(id), skin);
}
alias:setskin("skin");
CMD:givemoney(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][20]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new id, money; else return SCM(playerid, COLOR_RED, !"Используй: /givemoney [id/name] [money]");
    if(id == INVALID_PLAYER_ID) return 0;
	GiveMoney(id, money);
	SCMf(playerid, -1, "Вы дали игроку %s $%i",PN(id), money);
	if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] выдал игроку %s[%i] %i$", PN(playerid), playerid, PN(id), id, money);
	return aml(2, playerid, PN(id), "выдал деньги", money, 5);
}
CMD:id(playerid, params[])
{
	static name[MAX_PLAYER_NAME + 18 + 3 + 3];
	new insert_pos = -1, type_search = 1, count;
	if(sscanf(params, "s[24]", name)) return SCM(playerid, COLOR_RED, !"Используй: /id [id/name]");
	if((params[0] >= 'a' && params[0] <= 'z') || (params[0] >= 'A' && params[0] <= 'Z')) type_search = 2;
	new id = strval(name);
	if(type_search == 1 && (!IsPlayerConnected(id) || IsPlayerNPC(id) || !PI[playerid][pAdmin])) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Игрок не в сети!");
	if(type_search == 2 && strlen(params) < 3) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Введите минимум 3 символа для поиска!");
	if(IsPlayerLauncher(id)) str_1 = "лаунчер";
	else if(IsPlayerMobile(id)) str_1 = "мобайл";
	else str_1 = "клиент";
	if(type_search == 1) return SCMf(playerid, -1, "[%i] %s | Уровень: %i | UID: %i | packetloss: %.2f% (%s)", id, PN(id), GetPlayerScore(id), PI[id][pID], NetStats_PacketLossPercent(id), str_1);
	foreach(new i: Player)
	{
		if((insert_pos = strfind(PN(i),params,true)) == -1) continue;
		SetString(name, PN(i));
		strins(name, "{FFFFFF}", strlen(params) + insert_pos);
		strins(name, "{FF8888}", insert_pos);
		if(IsPlayerLauncher(i)) str_1 = "лаунчер";
		else if(IsPlayerMobile(i)) str_1 = "мобайл";
		else str_1 = "клиент";
		SCMf(playerid, -1, "[%i] %s | Уровень: %i | UID: %i | packetloss: %.2f% (%s)", i, name, GetPlayerScore(i), PI[i][pID], NetStats_PacketLossPercent(i), str_1);
		count++;
	}
	if(!count) SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	return 1;
}
CMD:admins(playerid)
{
 	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
 	new alladmin = 0, adminafk = 0;
	foreach(new i: Admin)
	{
		if(PlayerAFKTime[i] != 0) adminafk++;
		alladmin++;
	}
	SCMf(playerid, 0x33CC00FF, "Администрация онлайн: (в сети: %i, из них в АФК: %i)", alladmin, adminafk);
	static const admrank[8][19] =
    {
		{"[1 lvl]"},
		{"[2 lvl]"},
		{"[3 lvl]"},
		{"[4 lvl]"},
		{"[5 lvl]"},
		{"[6 lvl]"},
		{"[7 lvl]"},
		{"[8 lvl]"}
    };
	foreach(new i: Admin)
	{
		//if(Osnovat(PN(i)) && !Osnovat(PN(playerid))) continue;
		if(SERIU[i] != INVALID_PLAYER_ID) SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - %s  {FFFFFF} - {DC2020}/re %i- [AFK: %i]. Репутация: %i - Выговоры [%i/3]", PN(i), i, Osnovat(PN(i)) ? ("{FF0000}Начальник") : admrank[PI[i][pAdmin] - 1], SERIU[i], PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
		else SCMf(playerid, 0xFEFE22FF, "{fefe22}%s[%i] - %s -{FFFFFF} [AFK: %i]{FFFFFF}. Репутация: %i - Выговоры [%i/3]", PN(i), i, Osnovat(PN(i)) ? ("{FF0000}Начальник") : admrank[PI[i][pAdmin] - 1], PlayerAFKTime[i], PI[i][pReputation], PI[i][pAWarns]);
	}
	return 1;
}
CMD:boom(playerid)
{
	if(PI[playerid][pInvItemAcs][5] != Item_Column && PI[playerid][pInvItemAcs][5] != Item_Boombox_Red) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На вас должна быть одета колонка/бумбокс!");
	if(bumboxobject[playerid])
	{
	    DestroyDynamicObject(bumboxobject[playerid]);
	    bumboxobject[playerid] = 0;
	    if(bumboxopen{playerid}) HideBoom(playerid);
		NumMusic[playerid] = 0;
		BoomUse[playerid] = 0;
		Music[playerid] = 0;
		StopAudioStreamForPlayer(playerid);
	    DestroyDynamic3DTextLabel(b_box3D[playerid]);
	    DestroyDynamicArea(area_boombox[playerid]);
		foreach(new i: Player)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
	}
	else
	{
	    if(IsPlayerInAnyVehicle(playerid))
			return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете поставить бумбокс/колонку в машине!");

		foreach(new i: Player)
		{
			if(!bumboxobject[i]) {
				continue;
			}
			if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[i][0], BumBoxPos[i][1], BumBoxPos[i][2])) {
			    return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Кто-то по близости уже поставил бумбокс/колонку!");
			}
   		}
		GetPlayerPos(playerid, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]);
		ApplyAnimation(playerid, !"BOMBER", !"BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		SCM(playerid, COLOR_GREEN, !"Вы успешно установили бумбокс на пол.");
		SCM(playerid, COLOR_GREEN, !"Для того чтобы открылся плейлист, нажмите ALT у бумбокса.");
		SetPlayerChatBubble(playerid, (PI[playerid][pInvItemAcs][5] == Item_Boombox_Red) ? ("Положил бумбокс на землю") : ("Положил колонку на землю"), COLOR_PURPLE, 10.0, 5000);
		BumBoxPos[playerid][0] += 1.0;
	 	BumBoxPos[playerid][1] += 1.0;
	  	BumBoxPos[playerid][2] -= 1.0;
		bumboxobject[playerid] = CreateDynamicObject(ItemsInfo[PI[playerid][pInvItemAcs][5]][ItemModel], BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 0.0, 0.0, 0.0);
		area_boombox[playerid] = CreateDynamicCircle(BumBoxPos[playerid][0], BumBoxPos[playerid][1], 30.0, 0, 0, -1);
        f(str_4, sizeof(str_4), "{2E8B57}Поставил: {FFFFFF}%s", PN(playerid));
        b_box3D[playerid] = CreateDynamic3DTextLabel(str_4, 0xFFFFFFDD, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]+0.2, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 5.0);
	    RemovePlayerAttachedObject(playerid, 5);
	}
	return 1;
}
CMD:leaders(playerid)
{
	SCM(playerid, COLOR_RED, !"Лидеры онлайн:");
    static const leadrank[27][25] =
    {
		{"{FFBF00}Полиция LS"},
		{"{FFCC00}RCPD"},
		{"{FFBF00}FBI"},
		{"{FFBF00}Полиция SF"},
		{"{F7819F}Больница LS"},
		{"{FF0000}Правительство"},
		{"{996633}Армия LV"},
		{"{F7819F}Больница SF"},
		{"{2E9AFE}Лицензеры"},
		{"{FF8000}Radio LS"},
		{"{04B404}Grove"},
		{"{DBA901}Vagos"},
		{"{DF01D7}Ballas"},
		{"{00FFFF}Aztecas"},
		{"{0489B1}Rifa"},
		{"{08298A}Russian Mafia"},
		{"{DF0101}Yakuza"},
		{"{DBA901}La Cosa Nostra"},
		{"{585858}Warlock MC"},
		{"{996633}Армия LS"},
		{"{2E9AFE}Центральный Банк"},
		{"{F7819F}Больница LV"},
		{"{FFBF00}Полиция LV"},
	    {"{FF8000}Radio LV"},
		{"{7F6464}Night Wolfs"},
		{"{FF8000}Radio SF"},
		{"{996633}Армия SF"}
    };
	foreach(new i: Player)
	{
		if(!PI[i][pLeader]) continue;
		static dirit[12];
		if(!PI[i][pTelNum]) dirit = "Не имеется";
		else valstr(dirit, PI[i][pTelNum]);
		if(!PlayerAFKTime[i]) SCMf(playerid, 0x99CCFFFF, "{FFFFFF}%s[%i] - %s | Номер: %s", PN(i), i, leadrank[PI[i][pLeader] - 1], dirit);
		else SCMf(playerid, 0x99CCFFFF, "{FFFFFF}%s[%i] - %s | Номер: %s{FFFFFF} | AFK: %i секунд", PN(i), i, leadrank[PI[i][pLeader] - 1], dirit, PlayerAFKTime[i]);
	}
	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Используйте /phone - menu, чтобы найти членов организаций.");
	return 1;
}
CMD:help(playerid) return SPD(playerid, 64, DIALOG_STYLE_LIST, !"Помощь по серверу", !"{B03131}Частые вопросы\n{AFAFAF}[CMD] Телефон\n{AFAFAF}[CMD] Работа\n{AFAFAF}[CMD] Организация\n{AFAFAF}[CMD] Дом\n{AFAFAF}[CMD] Бизнес\n{AFAFAF}[CMD] Личный транспорт\n{AFAFAF}[CMD] Транспорт\n{AFAFAF}[CMD] Анимации\n{AFAFAF}[CMD] Чаты\n{AFAFAF}[CMD] Админ\n{AFAFAF}[CMD] Похищение\n{AFAFAF}[CMD] Другое\n{AFAFAF}[FAQ] Скиллы оружий\n{AFAFAF}[FAQ] Работа\n{B03131}[FAQ] Правила проекта\n{B03131}[FAQ] Преимущества VIP\n{AFAFAF}[CMD] Отель\n{AFAFAF}[FAQ] Однорукий бандит\n{B03131}[INFO] Сайт/Форум/VK\n{AFAFAF}[INFO] Ответы на тесты\n{AFAFAF}[FAQ] Воровство материалов\n{AFAFAF}[FAQ] Развитие на ферме\n{AFAFAF}[FAQ] Банковская карта\n{AFAFAF}[FAQ] Рыболовля\n{AFAFAF}[FAQ] Ограбление матовозов\n{AFAFAF}[FAQ] Багажник\n{AFAFAF}[FAQ] Наркопритоны и Банды\n{AFAFAF}[CMD] Семья\n{AFAFAF}[FAQ] Ограбление банка\n{AFAFAF}[FAQ] Автозавод\n{AFAFAF}[FAQ] Спортивный зал/Навыки\n{AFAFAF}[FAQ] РП отыгровки\n{AFAFAF}[FAQ] Система трейлеров\n{AFAFAF}[FAQ] Галочка для семьи\n{AFAFAF}[FAQ] Бренд для семьи\n{AFAFAF}[FAQ] Улучшения для семьи\n{AFAFAF}[FAQ] Спортивный зал\n{AFAFAF}[FAQ] Заработок на нефтевышках\n", !"Выбор", !"Отмена");
CMD:settings(playerid) return ShowUpdateSettings(playerid);
CMD:stats(playerid) return ShowStats(playerid, playerid);
CMD:menu(playerid)
{
    if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid] != -1) return 0;
	if(CuffedTime[playerid] > 0) return SCM(playerid, COLOR_LIGHTRED, !"Вы обездвижены и не можете двигаться");
	if(Cuffed{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"Вы скованы и не можете двигаться");
	return SPD(playerid, 722, DIALOG_STYLE_LIST, !"Игровое меню", !"{B03131}[1]{FFFFFF} Действие персонажа\n{B03131}[2]{FFFFFF} Навыки персонажа\n{B03131}[3]{FFFFFF} Связь с администрацией\n{B03131}[4]{FFFFFF} Помощь по серверу\n{B03131}[5]{FFFFFF} Настройки персонажа\n{B03131}[6]{FFFFFF} Донат\n{B03131}[7]{FFFFFF} Телефон\n{B03131}[8]{FFFFFF} Открыть рулетку\n{b03131}[9]{FFFFFF} Инвентарь рулетки\n{B03131}[10]{FFFFFF} Промо-код", !"Выбор", !"Отмена");
}
alias:menu("mm", "mn");
CMD:jobhelp(playerid) return ShowJobInfo(playerid, PI[playerid][pJob]);
CMD:quitjob(playerid)
{
    if(!IsPlayerInRangeOfPoint(playerid, 30.0, 1294.1500, -1267.7587, 13.5939))
		return SCM(playerid, COLOR_GREY, !"Уволится с работы можно только в центре занятости!");

	else if(PI[playerid][pJob] == JOB_NONE)
		return SCM(playerid, COLOR_GREY, !"Вы и так уже безработный.");

    else if(InJob[playerid] != 0)
		return SCM(playerid, COLOR_GREY, !"В данный момент вы работаете. Закончите работу и введите /quitjob");

    PI[playerid][pJob] = JOB_NONE;
    UpdatePlayerDataInt(playerid, "Job", JOB_NONE);
    SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно уволились с работы.");
    ResetGun(playerid);
    J_SetPlayerArmour(playerid, 0);
    ResetDynamicCPs(playerid);
	return 1;
}
CMD:unmute(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static reason[100];
	if(sscanf(params, "us[100]", params[0], reason)) return SCM(playerid, COLOR_RED, !"Используй: /unmute [id] [reason]");
    if(CheckIsASuccesIP(playerid)) return 0;
	if(PI[params[0]][pMuteTime]==0) return SCM(playerid, COLOR_RED, !"У игрока нету мута!");
	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s снял заглушку с игрока %s, причина: %s", PN(playerid), PN(params[0]), reason);
	PI[params[0]][pMuteTime] = 0;
	//SvMutePlayerDisable(params[0]); //Войс
	f(str_1, sizeof(str_1), "снял мут игроку. Причина %s", reason);
	return aml(1, playerid, PN(params[0]), str_1);
}
CMD:getherecar(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new car; else return SCM(playerid, COLOR_RED, !"Используй: /getherecar [id]");
	new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    LinkVehicleToInterior(car, GetPlayerInterior(playerid));
    SetVehicleVirtualWorld(car, GetPlayerVirtualWorld(playerid));
    SetVehiclePos(car, X - 4, Y, Z + 1);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы телепортировали к себе авто, index: %i", car);
	SendAdminsMessagef(COLOR_GREY, "[%s] Телепортировал к себе авто, index: %i", PN(playerid), car);
	f(str_1, sizeof(str_1), "т/п к себе авто, id: %i", car);
	return aml(18, playerid, "", str_1);
}
CMD:gethere(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id, Float:X, Float:Z, Float:Y, Float:A;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /gethere [id]");
    if(id == INVALID_PLAYER_ID) return 0;
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    ShiftCords(0, X, Y, A, 3.0);
    SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
    SetPlayerInterior(id,GetPlayerInterior(playerid));
    if(GetPlayerState(id) != 2) J_SetPlayerPos(id, X, Y, Z);
    else SetVehiclePos(GetPlayerVehicleID(id), X, Y, Z);
    BizEntered[id] = BizEntered[playerid];
    HouseEntered[id] = HouseEntered[playerid];
    ParkingEntered[id] = ParkingEntered[playerid];
    SCMf(id,COLOR_LIGHTBLUE, " Вы были телепортированы администратором  %s",PN(playerid));
    SCMf(playerid,COLOR_LIGHTBLUE, "Вы телепортировали к себе игрока %s",PN(id));
	SendAdminsMessagef(COLOR_GREY, "[%s] Телепортировал к себе игрока %s[%i]",PN(playerid),PN(id),id);
	return aml(1, playerid, PN(id), "т/п к себе");
}
CMD:gethereall(playerid)
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:X, Float:Z, Float:Y, Float:A;
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    ShiftCords(0, X, Y, A, 3.0);
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
	    SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(playerid));
	    SetPlayerInterior(i,GetPlayerInterior(playerid));
	    if(GetPlayerState(i) != 2) J_SetPlayerPos(i, X + randomEx(15, 20), Y + random(10), Z);
	    else SetVehiclePos(GetPlayerVehicleID(i), X + randomEx(20, 30), Y + random(30), Z);
	    BizEntered[i] = BizEntered[playerid];
	    HouseEntered[i] = HouseEntered[playerid];
	    ParkingEntered[i] = ParkingEntered[playerid];
	    SCMf(i, COLOR_LIGHTBLUE, " Вы были телепортированы администратором  %s",PN(playerid));
	}
    SCM(playerid, COLOR_LIGHTBLUE, !"Вы телепортировали к себе всех игроков");
	SendAdminsMessagef(COLOR_GREY, "[%s] Телепортировал к себе всех игроков", PN(playerid));
	return aml(18, playerid, "", "Телепортировал к себе всех игроков");
}
CMD:getwarn(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /getwarn [id]");
    return ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, 0, !"{BFBBBA}", !"Закрыть", !"", "Игрок: %s\n___________________\n\n\nКПЗ: %i\nДеморган: %i\nЗаглушка: %i\nВарны: %i\n\n___________________", PN(params[0]),PI[params[0]][pJailTime],PI[params[0]][pDemorgan],PI[params[0]][pMuteTime],PI[params[0]][pWarns]);
}
CMD:spcar(playerid, params[])
{
    if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new car;
    if(sscanf(params,"d",car)) return SCM(playerid, COLOR_RED, !"Используй: /spcar [id]");
	SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] зареспавнил авто под id: %i",PN(playerid), playerid, car);
	SetVehicleToRespawn(car);
	f(str_1, sizeof(str_1), "зареспавнил авто, id: %i", car);
	return aml(18, playerid, "", str_1);
}
CMD:rasform(playerid)
{
	//if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	for(new i = 1; i < GANGZONES; i++)
	{
		UpdateDorm(GZInfo[i][gzFracID]);
		GZInfo[i][gzFracID] = 0;
		GangZoneHideForAll(GangZone[i]);
		GangZoneShowForAll(GangZone[i], TeamColors[0]);
		SaveGangZone(i);
	}
	SCM(playerid, COLOR_VALIK, !"Вы успешно перекрасили все территории");
	return aml(18, playerid, "", "сделал расформ всех територий гетто");
}
CMD:buydrugs(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /buydrugs [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    if(params[0]<1)return 1;
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
            if(GLS[45]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара!");
            if(GetMoney(playerid)<(GLS[50]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить!");
            GiveMoney(playerid,-(GLS[50]*params[0]));
            aml(52, playerid, "", "покупка наркотиков", GLS[50]*params[0]);
            GLS[45]-=params[0];
            GLS[60]+=GLS[50]*params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, params[0]);
            aml(101, playerid, "", "покупка наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свою траву!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
            UpdateDynamic3DTextLabelText(NarkoText[0], -1, str_2);
        }
        case 2:
        {
            if(GLS[46]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара!");
            if(GetMoney(playerid)<(GLS[51]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить!");
            GiveMoney(playerid,-(GLS[51]*params[0]));
            aml(52, playerid, "", "покупка наркотиков", GLS[51]*params[0]);
            GLS[46]-=params[0];
            GLS[61]+=GLS[51]*params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, params[0]);
            aml(101, playerid, "", "покупка наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свою траву!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
            UpdateDynamic3DTextLabelText(NarkoText[1], -1, str_2);
        }
        case 3:
        {
            if(GLS[47]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара!");
            if(GetMoney(playerid)<(GLS[52]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить!");
            GiveMoney(playerid,-(GLS[52]*params[0]));
            aml(52, playerid, "", "покупка наркотиков", GLS[52]*params[0]);
            GLS[47]-=params[0];
            GLS[62]+=GLS[52]*params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, params[0]);
            aml(101, playerid, "", "покупка наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свою траву!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
            UpdateDynamic3DTextLabelText(NarkoText[2], -1, str_2);
        }
        case 4:
        {
            if(GLS[48]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара!");
            if(GetMoney(playerid)<(GLS[53]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить!");
            GiveMoney(playerid,-(GLS[53]*params[0]));
            aml(52, playerid, "", "покупка наркотиков", GLS[53]*params[0]);
            GLS[48]-=params[0];
            GLS[63]+=GLS[53]*params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, params[0]);
            aml(101, playerid, "", "покупка наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свою траву!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
            UpdateDynamic3DTextLabelText(NarkoText[3], -1, str_2);
        }
        case 5:
        {
            if(GLS[49]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара!");
            if(GetMoney(playerid)<(GLS[54]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить!");
            GiveMoney(playerid,-(GLS[54]*params[0]));
            aml(52, playerid, "", "покупка наркотиков", GLS[54]*params[0]);
            GLS[49]-=params[0];
            GLS[64]+=GLS[54]*params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, params[0]);
            aml(101, playerid, "", "покупка наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свою траву!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
            UpdateDynamic3DTextLabelText(NarkoText[4], -1, str_2);
        }
        default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    }
	return 1;
}
CMD:selldrugs(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /selldrugs [количество]");
    if(GetInvCount(playerid, Item_Drugs) < params[0]) return SendBotMessage(playerid,"Брат, ну у тебя же нету столько товара на продажу!");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    if(params[0]<1)return 1;
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
            if(GLS[60]<(params[0]*GLS[55])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить!");
            GiveMoney(playerid,(GLS[55]*params[0]));
            aml(51, playerid, "", "продажу наркотиков", GLS[55]*params[0]);
            GLS[60]-=(GLS[55]*params[0]);
            GLS[45]+=params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, -params[0]);
            aml(102, playerid, "", "продажа наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свои деньги!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
            UpdateDynamic3DTextLabelText(NarkoText[0], -1, str_2);
        }
        case 2:
        {
            if(GLS[61]<(params[0]*GLS[56])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить!");
            GiveMoney(playerid,(GLS[56]*params[0]));
            aml(51, playerid, "", "продажу наркотиков", GLS[56]*params[0]);
            GLS[61]-=(GLS[56]*params[0]);
            GLS[46]+=params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, -params[0]);
            aml(102, playerid, "", "продажа наркоты", Item_Drugs, params[0]);
           	SendBotMessage(playerid,"Вот, держи свои деньги!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
            UpdateDynamic3DTextLabelText(NarkoText[1], -1, str_2);
        }
        case 3:
        {
            if(GLS[62]<(params[0]*GLS[57])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить!");
            GiveMoney(playerid,(GLS[57]*params[0]));
            aml(51, playerid, "", "продажу наркотиков", GLS[57]*params[0]);
            GLS[62]-=(GLS[57]*params[0]);
            GLS[47]+=params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, -params[0]);
            aml(102, playerid, "", "продажа наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свои деньги!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
            UpdateDynamic3DTextLabelText(NarkoText[2], -1, str_2);
        }
        case 4:
        {
            if(GLS[63]<(params[0]*GLS[58])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить!");
            GiveMoney(playerid,(GLS[58]*params[0]));
            aml(51, playerid, "", "продажу наркотиков", GLS[58]*params[0]);
            GLS[63]-=(GLS[58]*params[0]);
            GLS[48]+=params[0];
            SaveInforamtion();
            InvAdd(playerid, Item_Drugs, -params[0]);
            aml(102, playerid, "", "продажа наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свои деньги!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
            UpdateDynamic3DTextLabelText(NarkoText[3], -1, str_2);
        }
        case 5:
        {
            if(GLS[64]<(params[0]*GLS[59])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить!");
            GiveMoney(playerid,(GLS[59]*params[0]));
            aml(51, playerid, "", "продажу наркотиков", GLS[59]*params[0]);
            GLS[64]-=(GLS[59]*params[0]);
            GLS[49]+=params[0];
			SaveInforamtion();
            InvAdd(playerid, Item_Drugs, -params[0]);
            aml(102, playerid, "", "продажа наркоты", Item_Drugs, params[0]);
            SendBotMessage(playerid,"Вот, держи свои деньги!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
            UpdateDynamic3DTextLabelText(NarkoText[4], -1, str_2);
        }
        default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    }
	return 1;
}
CMD:putmoney(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /putmoney [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    if(CanUse[playerid]==0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не имеете возможности управлять этим наркопритоном!");
    if(GetMoney(playerid)<params[0]) return SendBotMessage(playerid,"Брат, как ты мне можешь дать столько денег, если у тебя их нет?");
    if(params[0]<1)return 1;
	if(params[0]>5000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете за раз взять столько денег!");
    if(PI[playerid][pRank]<9)return 1;
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
			GiveMoney(playerid,-params[0]);
			aml(52, playerid, "", "положил на склад наркопритона", params[0]);
			SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву!");
			GLS[60]+=params[0];
			SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость продажи наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
            UpdateDynamic3DTextLabelText(NarkoText[0], -1, str_2);
        }
        case 2:
        {
            GiveMoney(playerid,-params[0]);
            aml(52, playerid, "", "положил на склад наркопритона", params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву!");
            GLS[61]+=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
            UpdateDynamic3DTextLabelText(NarkoText[1], -1, str_2);
        }
        case 3:
        {
            GiveMoney(playerid,-params[0]);
            aml(52, playerid, "", "положил на склад наркопритона", params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву!");
            GLS[62]+=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
            UpdateDynamic3DTextLabelText(NarkoText[2], -1, str_2);
        }
        case 4:
        {
            GiveMoney(playerid,-params[0]);
            aml(52, playerid, "", "положил на склад наркопритона", params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву!");
            GLS[63]+=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
            UpdateDynamic3DTextLabelText(NarkoText[3], -1, str_2);
        }
        case 5:
        {
            GiveMoney(playerid,-params[0]);
            aml(52, playerid, "", "положил на склад наркопритона", params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву!");
            GLS[64]+=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
            UpdateDynamic3DTextLabelText(NarkoText[4], -1, str_2);
        }
        default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    }
	return 1;
}
CMD:narkfull(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5)
		return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid})
		return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	
	GLS[45] += 100000;
	GLS[46] += 100000;
	GLS[47] += 100000;
	GLS[48] += 100000;
	GLS[49] += 100000;
	
	SendClientMessage(playerid, COLOR_GREY, "Вы успешно пополнили наркопритоны!");
	return 1;
}
CMD:narkprice(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5)
		return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid})
		return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);

	GLS[50] = 10000;
	GLS[51] = 10000;
	GLS[52] = 10000;
	GLS[53] = 10000;
	GLS[54] = 10000;
	
	GLS[55] = 10000;
	GLS[56] = 10000;
	GLS[57] = 10000;
	GLS[58] = 10000;
	GLS[59] = 10000;

	SendClientMessage(playerid, COLOR_GREY, "Вы успешно установили цены в наркопритонах!");
	return 1;
}
CMD:vad(playerid, params[])
{
	if(PI[playerid][pVIP] < 1)
		return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	
	new text[128], stringg[256];
	if(vadtime[playerid] > gettime())
		return SCM(playerid, COLOR_RED, !"Объявление можно подавать один раз в 1 минуту.");
	if(sscanf(params, "s[128]", text))
		return SCM(playerid, COLOR_RED, !"Используй: /vad [объявление]");
	if(strlen(text) > 128 || strlen(text) < 10)
		return SCM(playerid, COLOR_RED, !"Объявление должно содержать от 10 до 128 символов!");
    if(CheckIsADomen(playerid, text))
		return 1;

	format(stringg, sizeof(stringg), "[VIP-AD] %s. Автор: %s[%d].", text, PN(playerid), playerid);
	SetPVarString(playerid, "vadtext", stringg);
	
	VadAdvert[playerid] = 20;
	vadtime[playerid] = gettime()+60;

	SendAdminsMessagef(COLOR_LIGHTRED, "[VAD-CHECK] {FFFFFF}Игрок %s[%d]: %s. (/novad)", PN(playerid), playerid, text);
	SendAdminsMessage(COLOR_LIGHTRED, "[VAD-CHECK] {FFFFFF}У вас есть 20 секунд, чтобы отклонить объявление.");
	return 1;
}
CMD:novad(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2)
		return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid})
		return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);

	new string[500];
    if(sscanf(params, "us[64]", params[0], params[1]))
		return SCM(playerid, COLOR_RED, !"Используй: /novad [id] [причина]");
	if(!IsPlayerConnected(params[0]))
	    return SCM(playerid, COLOR_RED, "Игрока с данным ID нет на сервере!");
	if(VadAdvert[params[0]] == 0)
	    return SCM(playerid, COLOR_RED, "Данный игрок не подавал VIP-объявление!");
	if(strlen(params[1]) < 5 || strlen(params[1]) > 64)
	    return SCM(playerid, COLOR_RED, "Причина должна быть от 5 до 64 символов!");
	    
	SendClientMessagef(playerid, COLOR_LIGHTRED, "[VAD-CHECK] {FFFFFF}Вы отклонили объявление игрока %s[%d].", PN(params[0]), params[0]);
	
	SendClientMessagef(params[0], COLOR_LIGHTRED, "[Информация] {FFFFFF}Ваше объявление отклонено администратором %s[%d].", PN(playerid), playerid);
	SendClientMessagef(params[0], COLOR_LIGHTRED, "[Информация] {FFFFFF}Причина отклонения: %s.", params[1]);

	format(string, sizeof(string), "\
		{FF6347}[VAD-CHECK] {FFFFFF}Администратор %s[%d] отклонил объявление игрока %s[%d].\n\
		{FF6347}[VAD-CHECK] {FFFFFF}Причина: %s.", PN(playerid), playerid, PN(params[0]), params[0], params[1]);
	SendAdminsMessage(COLOR_LIGHTRED, string);

	VadAdvert[params[0]] = -1;
	DeletePVar(params[0], "vadtext");
	return 1;
}
CMD:setdbuy(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /setdbuy [Стоимость продажи наркотиков]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    if(CanUse[playerid]==0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не имеете возможности управлять этим наркопритоном!");
    if(params[0]<1)return 1;
    if(params[0]>5000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену!");
    if(PI[playerid][pRank]<9)return 1;
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
			SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене!");
			GLS[50]=params[0];
			SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
            UpdateDynamic3DTextLabelText(NarkoText[0], -1, str_2);
        }
        case 2:
        {
            SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене!");
            GLS[51]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
            UpdateDynamic3DTextLabelText(NarkoText[1], -1, str_2);
        }
        case 3:
        {
            SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене!");
            GLS[52]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
            UpdateDynamic3DTextLabelText(NarkoText[2], -1, str_2);
        }
        case 4:
        {
            SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене!");
            GLS[53]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
            UpdateDynamic3DTextLabelText(NarkoText[3], -1, str_2);
        }
        case 5:
        {
           	SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене!");
            GLS[54]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
            UpdateDynamic3DTextLabelText(NarkoText[4], -1, str_2);
        }
        default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    }
	return 1;
}

CMD:setdsell(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /setdsell [Стоимость скупки наркотиков]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    if(CanUse[playerid]==0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не имеете возможности управлять этим наркопритоном!");
    if(params[0]<1)return 1;
    if(params[0]>5000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете установить такую цену!");
    if(PI[playerid][pRank]<9)return 1;
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
			SendBotMessage(playerid,"Окей, будем продавать траву по такой цене!");
			GLS[55]=params[0];
			SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость покупки наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
            UpdateDynamic3DTextLabelText(NarkoText[0], -1, str_2);
        }
        case 2:
        {
            SendBotMessage(playerid,"Окей, будем продавать траву по такой цене!");
            GLS[56]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
            UpdateDynamic3DTextLabelText(NarkoText[1], -1, str_2);
        }
        case 3:
        {
            SendBotMessage(playerid,"Окей, будем продавать траву по такой цене!");
            GLS[57]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость продажи наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
            UpdateDynamic3DTextLabelText(NarkoText[2], -1, str_2);
        }
        case 4:
        {
            SendBotMessage(playerid,"Окей, будем продавать траву по такой цене!");
            GLS[58]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
            UpdateDynamic3DTextLabelText(NarkoText[3], -1, str_2);
        }
        case 5:
        {
           	SendBotMessage(playerid,"Окей, будем продавать траву по такой цене!");
            GLS[59]=params[0];
            SaveInforamtion();
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
            UpdateDynamic3DTextLabelText(NarkoText[4], -1, str_2);
        }
        default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    }
	return 1;
}
CMD:iwep(playerid, params[])
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /iwep [id]");
	f(str_2, sizeof(str_2), "На данный момент у игрока имеется данный вид оружия, которое он получил без помощи читов:\n\n");
    for(new i = 0; i < 13; i++) if(PI[target][pGuns][i] > 0 && PI[target][pAmmos][i] > 0) f(str_2,sizeof(str_2),"%s\nID оружия/патроны - %i[%i]", str_2, PI[target][pGuns][i], PI[target][pAmmos][i]);
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_2, !"Принять", !"");
	return 1;
}
CMD:dropgun(playerid, param[])
{
    if(IsPlayerInAnyVehicle(playerid)) return 0;
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	new slot = GetWeaponSlot(weapon);
	if(ammo<1)return 0;
	if(weapon < 1) return SCM(playerid, COLOR_GREY, !"[Подсказка] {FFFFFF}У тебя в руках нет оружия");
	if(PI[playerid][pGuns][GetWeaponSlot(weapon)] != weapon)return 0;
	if(PI[playerid][pAmmos][slot]!=GetPlayerAmmo(playerid))return 0;
    new Float:x, Float:y, Float:z,Float:eagle;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFAngle(playerid,eagle);
	new idgun;
	switch(weapon)
    {
        case 17:idgun=343;
		case 22:idgun=346;
		case 23:idgun=347;
		case 24:idgun=348;
		case 25:idgun=349;
		case 28:idgun=352;
		case 29:idgun=353;
		case 30:idgun=355;
		case 31:idgun=356;
		case 32:idgun=372;
		case 33:idgun=357;
		case 34:idgun=358;
		case 42:idgun=366;
		case 43:idgun=367;
		default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Это оружие нельзя выкинуть!");
    }
	new idobject=-1;
    for(new i;i<MAX_DGUNS;i++)
    {
        if(dguns[i]==-1)
		{
 			idobject=i;
	 		break;
		}
    }
    if(idobject==-1)
    {
        new min1=gettime();
        for(new i;i<MAX_DGUNS;i++)
        {
            if(dguntime[i]<min1)
            {
                min1=dguntime[i];
                idobject=i;
            }
        }
        DestroyDynamicObject(dguns[idobject]);
    }
    dguntime[idobject]=gettime();
    dpatrons[idobject]=ammo;
    dgunn[idobject]=weapon;
    dguns[idobject] = CreateDynamicObject(idgun, x, y, z-0.97, 96, 110, eagle, GetPlayerVirtualWorld(playerid));
	GiveGun(playerid,weapon,-ammo);
	PI[playerid][pGuns][slot] = 0;
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы положили оружие на землю.");
	PI[playerid][pLastGun]=0;
	PI[playerid][pLastAmmo]=0;
    return 1;
}
CMD:firewood(playerid)
{
    if(IsANotControllable(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете двигаться!");
	if(!GetInvCount(playerid, Item_Firewood)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет дров! Купить их можно в магазине АЗС!");
    if(!GetInvCount(playerid, Item_Lighter)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет зажигалки! Купить можно в магазине 24/7!");
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Использовать в здании запрещено!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В транспорте нельзя");
	if(IsPlayerToKvadrat(playerid, 850, 590, 2914, 2902) || IsPlayerToKvadrat(playerid, -2918, -1010, -1210, 1378) || IsPlayerToKvadrat(playerid, 82, -1882, 2906, -870) || IsPlayerToKvadrat(playerid, 1358, -2742, 2910, -1882)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В городе нельзя розжигать костры!");
	new Float:x, Float:y, Float:z, Float:a;
	for(new i; i < MAX_WOODS; i++)
	{
	    if(wwoods[i] != -1)
	    {
	        GetDynamicObjectPos(wwoods[i], x, y, z);
			if(IsPlayerInRangeOfPoint(playerid, 2, x, y, z)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете здесь розжечь костер, так как рядом уже есть один!");
		}
	}
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
	new idobject = -1;
    for(new i; i < MAX_WOODS; i++)
    {
        if(wwoods[i] == -1)
		{
 			idobject = i;
	 		break;
		}
    }
    if(idobject == -1)
    {
        new min1 = gettime();
        for(new i; i < MAX_WOODS; i++)
        {
            if(wwoodtime[i] < min1)
            {
                min1 = wwoodtime[i];
                idobject = i;
            }
        }
        DestroyDynamicObject(wwoods[idobject]);
    }
    wwoodtime[idobject] = gettime();
   	wwTimer[idobject] = 1800;
    wwoods[idobject] = CreateDynamicObject(19632, x, y, z - 1.0, 0, 0, a);
	wOwner[idobject] = PN(playerid);

    f(str_2, sizeof(str_2), "Костер\nРазжёг: %s\n{FFFFFF}Горит. Осталось: {FAAC58}%i {FFFFFF}минут(ы).\n\nПожарить рыбу: /cook", wOwner[idobject],floatround(float(wwTimer[idobject]) / 60.0));
	wwText[idobject] = CreateDynamic3DTextLabel(str_2, -1, x, y, z, 4.0);

	InvAdd(playerid, Item_Firewood, -1);
	aml(102, playerid, "", "разжигание костра", Item_Firewood, 1);
    InvAdd(playerid, Item_Lighter, -1);
    aml(102, playerid, "", "разжигание костра", Item_Lighter, 1);
 	ApplyAnimation(playerid, !"CHAINSAW", !"CSAW_G", 4.0, 0, 0, 0, 0, 0, 1);
 	GameTextForPlayer(playerid, !"SUCCESSFUL", 0, 1);
	return 1;
}
CMD:cook(playerid, params[])
{
    new Float:x[MAX_WOODS], Float:y[MAX_WOODS], Float:z[MAX_WOODS], count;
    for(new i; i < MAX_WOODS; i++)
    {
		GetDynamicObjectPos(wwoods[i], x[i], y[i], z[i]);
        if(IsPlayerInRangeOfPoint(playerid, 2.0, x[i], y[i], z[i])) count ++;
    }
    if(!count) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Возле вас нет костра!");
    for(new i; i < 5; i ++)
    {
        if(!PlayerFish[playerid][i]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет рыбы!");
        PlayerFish[playerid][i] --;
        break;
    }
    InvAdd(playerid, Item_FriedFish, 1);
    aml(101, playerid, "", "приготовил жаренную рыбу", Item_FriedFish, 1);
    GameTextForPlayer(playerid, !"fried fish + 1", 0, 1);
    return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"{FFFFFF}Вы успешно приготовили {9ACD32}1{FFFFFF}-ну жаренную рыбу!\nЧтобы покушать, используйте {9ACD32}/eat{FFFFFF}!", !"Понял", !"");
}
CMD:drug(playerid)
{
	if(GetPlayerWeapon(playerid)!=6)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вам нужна лопата чтобы посадить коноплю, купить ее можно в магазине механики!");
    if(!IsAtGang(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Садить коноплю могут только члены банд!");

    if(!IsPlayerToKvadrat(playerid,2163.3979,-1697.2588,  2166.3228,-1687.7272) && !IsPlayerToKvadrat(playerid,2165.2397,-1510.9233,  2171.0142,-1504.9988) &&
    !IsPlayerToKvadrat(playerid,1790.4725,-2014.1749,  1799.6927,-2004.0822) && !IsPlayerToKvadrat(playerid,1790.5725,-1989.2954,  1799.8381,-1978.8665) &&

    !IsPlayerToKvadrat(playerid,2306.3516,-2008.3705,  2320.1846,-2005.4993) && !IsPlayerToKvadrat(playerid,2351.5613,-1926.0016,  2360.9636,-1915.7379) &&
    !IsPlayerToKvadrat(playerid,2351.4980,-1904.1448,  2360.9351,-1893.7114)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Посадить семена можно только на огороде возле наркопритона!");
	///////////////
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(GetInvCount(playerid, Item_DrugSeeds)<1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Для того чтобы посадить коноплю, необходимо иметь семя, которые можно найти в лесу за городом");
	new zone = GetPlayerGangZone(playerid),num=0;
	if(GZInfo[zone][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Посадить коноплю можно только в своем наркопритоне!");
	//////////
	new Float:x, Float:y, Float:z,Float:eagle;
	for(new i;i<MAX_NARKO;i++)
	{
	    if(ddrugs[i]!=-1)
	    {
	        GetDynamicObjectPos(ddrugs[i],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете здесь посадить коноплю, так как рядом есть уже саженец/конопля.");
			if(IsPlayerInRangeOfPoint(playerid,20,x,y,z)) num++;
		}
	}
	if(num>4)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}На этом огороде растет больше 5-ти саженцев! Соберите урожай или сажайте на другом огороде!");
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFAngle(playerid,eagle);
	new idgun = 859;

	new idobject=-1;
    for(new i;i<MAX_NARKO;i++)
    {
        if(ddrugs[i]==-1)
		{
 			idobject=i;
	 		break;
		}
    }
    if(idobject==-1)
    {
        new min1=gettime();
        for(new i;i<MAX_NARKO;i++)
        {
            if(ddrugtime[i]<min1)
            {
                min1=ddrugtime[i];
                idobject=i;
            }
        }
        DestroyDynamicObject(ddrugs[idobject]);
    }
    ddrugtime[idobject]=gettime();
   	ddTimer[idobject] = 5000;
    ddrugs[idobject] = CreateDynamicObject(idgun, x,y,z-1.0,0, 0, eagle);


    f(str_2, sizeof(str_2), "Саженец конопли\nВ процессе созревания. Осталось: {FAAC58}%i{FFFFFF} минут(ы).",floatround(float(ddTimer[idobject])/60.0));
	ddText[idobject] = CreateDynamic3DTextLabel(str_2,-1,x, y, z,4.0);

	InvAdd(playerid, Item_DrugSeeds, -1);
	aml(102, playerid, "", "собрал сажанец конопли", Item_DrugSeeds, 1);
 	ApplyAnimation(playerid,"CHAINSAW","CSAW_G",4.0,0,0,0,0,0,1);
 	return GameTextForPlayer(playerid, "planted", 0, 1);
}
CMD:getmoney(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /getmoney [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    if(CanUse[playerid]==0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не имеете возможности управлять этим наркопритоном!");
	if(params[0]<1)return 1;
	if(PI[playerid][pRank]<9)return 1;
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
            if(GLS[60]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег!");
			GiveMoney(playerid,params[0]);
			aml(51, playerid, "", "взятие со склада наркопритона", params[0]);
			GLS[60]-=params[0];
			SaveInforamtion();
			SendBotMessage(playerid,"Вот, держи свою прибыль!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[45],GLS[60],GLS[55],GLS[50] );
            UpdateDynamic3DTextLabelText(NarkoText[0], -1, str_2);
        }
        case 2:
        {
            if(GLS[61]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег!");
            GiveMoney(playerid,params[0]);
            aml(51, playerid, "", "взятие со склада наркопритона", params[0]);
            GLS[61]-=params[0];
            SaveInforamtion();
            SendBotMessage(playerid,"Вот, держи свою прибыль!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[46],GLS[61],GLS[56],GLS[51]  );
            UpdateDynamic3DTextLabelText(NarkoText[1], -1, str_2);
        }
        case 3:
        {
        	if(GLS[62]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег!");
            GiveMoney(playerid,params[0]);
            aml(51, playerid, "", "взятие со склада наркопритона", params[0]);
            GLS[62]-=params[0];
            SaveInforamtion();
            SendBotMessage(playerid,"Вот, держи свою прибыль!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[47],GLS[62],GLS[57],GLS[52]  );
            UpdateDynamic3DTextLabelText(NarkoText[2], -1, str_2);
        }
        case 4:
        {
            if(GLS[63]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег!");
            GiveMoney(playerid,params[0]);
            aml(51, playerid, "", "взятие со склада наркопритона", params[0]);
            GLS[63]-=params[0];
            SaveInforamtion();
            SendBotMessage(playerid,"Вот, держи свою прибыль!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[48],GLS[63],GLS[58],GLS[53]  );
            UpdateDynamic3DTextLabelText(NarkoText[3], -1, str_2);
        }
        case 5:
        {
            if(GLS[64]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег!");
            GiveMoney(playerid,params[0]);
            aml(51, playerid, "", "взятие со склада наркопритона", params[0]);
            GLS[64]-=params[0];
            SaveInforamtion();
            SendBotMessage(playerid,"Вот, держи свою прибыль!");
            f(str_2, sizeof(str_2), "Наркопритон\nВ наличии: {D38A37}%i{FFFFFF} товара\nНа балансе: {D38A37}%i{FFFFFF}$\n\nСтоимость скупки наркотиков: {D38A37}%i{FFFFFF}\nСтоимость наркотиков: {D38A37}%i{FFFFFF}\n\nКупить наркотики - {10F441}/buydrugs{FFFFFF}\nПродать наркотики - {10F441}/selldrugs{FFFFFF}",GLS[49],GLS[64],GLS[59],GLS[54]  );
            UpdateDynamic3DTextLabelText(NarkoText[4], -1, str_2);
        }
        default: return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не находитесь в вашем наркопритоне!");
    }
	return 1;
}
CMD:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
	new wantedlevel;
	if(sscanf(params, "d", wantedlevel)) return SCM(playerid, COLOR_RED, !"Используй: /wanted [уровень розыска 1-6]");
	if(wantedlevel > 6) return SCM(playerid, COLOR_RED, !"Используй: /wanted [уровень преступления 1-6]");
	new num;
	str_1[0] = EOS;
	foreach(new i: Player)
	{
		if(PI[i][pWanted] == wantedlevel)
	    {
	        if(num == 25) break;
	        f(str_1, sizeof(str_1), "%s{FFFFFF}%s(%i) - %i-й уровень розыска\n", str_1, PN(i), i, PI[i][pWanted]);
	        num++;
		}
	}
	SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", str_1, !"Закрыть", !"");
	return 1;
}
CMD:orderlist(playerid, params[])
{
	if(PI[playerid][pJob]!=3)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не развозчик продуктов!");
	for(new i; i < 22; i ++) DBizitem[playerid][i] = -1;
	new num;
	str_1[0] = EOS;
	for(new i;i<OWNABLEBIZES;i++)
	{
	    if(!GetString(BizInfo[i][bOwner],"The State"))
    	{
		    if(BizInfo[i][bState] == 7 || BizInfo[i][bState] == 1 || BizInfo[i][bState] == 2 || BizInfo[i][bState] == 3 || BizInfo[i][bState] == 9)
			{
			    if(num < 21)
	      		{
				    if(BizInfo[i][bBuyCost]>0 && BizInfo[i][bNeedItem]>0)
				    {
				        f(str_1,sizeof(str_1),"%s{FFFFFF}- %s {CBB42F}(%i$).{FFFFFF} Закупает: {CBB42F}%i п.{FFFFFF} Цена: {CBB42F}%i$\n",str_1,BizInfo[i][bName],BizInfo[i][bMoney],BizInfo[i][bNeedItem],BizInfo[i][bBuyCost]);
				        DBizitem[playerid][num] = i;
				        num++;
				    }
				}
				else break;
			}
		}
	}
	if(num) SPD(playerid, 8761, 2, !"Поиск предпринимателя", str_1, !"Принять", !"Отмена");
	else SPD(playerid, 0, 0, !"Поиск предпринимателя", !"{FFFFFF}К сожалению на данный момент нет заказов!", !"Принять", !"");
	return 1;
}
CMD:checkbiz(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используйте: /checkbiz [id]");
 	if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	return SCMf(playerid, -1, "Владелец: %s Деньги: %i$", BizInfo[bizid][bOwner],BizInfo[bizid][bMoney]);
}
CMD:checkhouse(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используйте: /checkhouse [id]");
 	if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 0;
	return SCMf(playerid, -1, "Владелец: %s Деньги: %i$", HouseInfo[houseid][hOwner],HouseInfo[houseid][hMoney]);
}
CMD:checkfam(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new fam; else return SCM(playerid, COLOR_RED, !"Используйте: /checkfam [id]");
 	if(fam < 1 || fam >= Iter_Count(OWNABLEFAMILYS)) return 0;
	return SCMf(playerid, -1, "Владелец: %s Деньги: %i$", FamilyInfo[fam][famCreator], FamilyInfo[fam][famMoney]);
}
CMD:findfam(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new fam; else return SCM(playerid, COLOR_RED, !"Используйте: /findfam [id]");
 	if(fam < 1 || fam >= Iter_Count(OWNABLEFAMILYS)) return 0;
	return SCMf(playerid, -1, "Название семьи %s", FamilyInfo[fam][famName]);
}
CMD:checkcarskill(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new id; else return SCM(playerid, COLOR_RED, !"Используйте: /checkcarskill [id]");
 	if(id == INVALID_PLAYER_ID) return 0;
	return SCMf(playerid, COLOR_LIGHTBLUE, "Игрок %s[%i] показал отчет по своему навыку вождения. Навык вождения: {FFFFFF}[%i/100]", PN(id), id, PI[id][pCarSkill]);
}
CMD:unfirewood(playerid, params[])
{
    if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /unfirewood [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /unfirewood [радиус > 0 или < 100]");
    new num;
    for(new i; i < MAX_WOODS; i++)
	{
	    if(wwoods[i] != -1)
	    {
	        GetDynamicObjectPos(wwoods[i], x, y, z);
			if(IsPlayerInRangeOfPoint(playerid, radius, x, y, z))
			{
			    DestroyDynamicObject(wwoods[i]);
                DestroyDynamic3DTextLabel(wwText[i]);
                wwTimer[i] = 0;
                wwoods[i] = -1;
				num ++;
			}
		}
	}
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно убрали %i костров в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s убрал %i костров!",PN(playerid), num);
}
CMD:adeldesc(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id, string:text[20]; else return SCM(playerid, COLOR_RED, !"Используй: /adeldesc [id] [text]");
	if(!DescriptionTextCreate{id}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У игрока нету опписания персонажа!");
	UpdateCharacterDescription(id, 1);
	SendAdminsMessagef(COLOR_YELLOW, "{FFFFFF}Администратор %s удалил описание персонажа у %s[ID: %i], причина: %s", PN(playerid), PN(id), id, text);
	SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}Администратор %s[%i] удалил вам описание персонажа, причина: %s", PN(playerid), playerid, text);
	SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы успешно удалили описание игроку %s[%i], причина: %s", PN(id), id, text);
	return aml(1, playerid, PN(id), "удалил описание персонажа");
}
CMD:eatall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /eatall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /eatall [радиус > 0 или < 100]");
    new num;
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
		{
            SetFullness(i, 100);
			num++;
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали голод %i игрокам в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал голод %i игрокам!",PN(playerid), num);
}
CMD:unbegall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /unbegall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /unbegall [радиус > 0 или < 100]");
    new num;
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
		{
            if(PI[playerid][pBeg][1])
            {
	            TogglePlayerControllable(playerid, 1);
			    DestroyDynamicObject(PI[playerid][pBeg][2]);
			    DestroyDynamicObject(PI[playerid][pBeg][2] + 1);
			    PI[playerid][pBeg][1] = 0;
			    ApplyAnimation(playerid, !"CARRY", !"crry_prtial", 4.0, 0, 0, 0, 0, 0);
				num++;
			}
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно убрали %i попрошаек в вашем радиусе.", num);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s убрал %i попрошаек!",PN(playerid), num);
}
CMD:aparkcar(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new carid;
    if(sscanf(params,"d",carid)) return SCM(playerid, COLOR_RED, !"Используйте: /aparkcar [id]");
    new number = GetVehicleID(carid);
	SetString(CarInfo[number][cShtrafName], PN(playerid));
	new Float:Health;
	GetVehicleHealth(carid, Health);
	CarInfo[number][cShtraf] = 10000;
	CarInfo[number][cKeyIN] = 0;
	GetVehiclePos(carid,CarInfo[number][cPos_X],CarInfo[number][cPos_Y],CarInfo[number][cPos_Z]);
	GetVehicleZAngle(carid,CarInfo[number][cPos_A]);
	vTemp[carid][vAntiRepair]=2;
	VehicleHealth[carid] = Health;
    RespawnOwnableCar(playerid, carid);
	SaveOwnableCar(number);
	SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно отправили %i т/с на штраф. стоянку.", carid);
    return SendAdminsMessagef(COLOR_GREEN, "[A] %s отправили %i т/с на штраф. стоянку!",PN(playerid), carid);
}
CMD:setbizmafia(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new bizid, type; else return SCM(playerid, COLOR_RED, !"Используй: /setbizmafia [1 - Русская Мафия/2 - Якудза/3 - ЛКН/4 - Байкеры]");
    if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
    if(!(1 <= type <= 4)) return SCM(playerid, COLOR_RED, !"Используй: /setbizmafia [1 - Русская Мафия/2 - Якудза/3 - ЛКН/4 - Байкеры]");
    switch(type)
    {
    	case 1: BizInfo[bizid][bKrasher] = TEAM_RM;
    	case 2: BizInfo[bizid][bKrasher] = TEAM_YAKUZA;
    	case 3: BizInfo[bizid][bKrasher] = TEAM_LCN;
    	case 4: BizInfo[bizid][bKrasher] = TEAM_BIKERS;
    }
    UpdateBiz(bizid);
    f(str_1, sizeof(str_1), "изменил крышу бизнеса %i на %i", bizid, OrgInfo[BizInfo[bizid][bKrasher]][oName]);
	return aml(18, playerid, "", str_1, 6);
}
CMD:restartreport(playerid)
{
	if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(CheckIsASuccesIP(playerid)) return 0;
	for(new i; i < sizeof(Reports); i++)
	{
		if(Reports[i] != -1)
		{
			pTemp[Reports[i]][NumReports] = -1;
			Reports[i] = -1;
		}
	}
	SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Вы успешно перезапустили репорт!");
	SendAdminsMessagef(COLOR_GREY, "%s[%i] перезапустил репорт", PN(playerid), playerid);
    return aml(18, playerid, "", "перезапустил репорт");
}
CMD:changeservername(playerid)
{
    //if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    if(CheckIsASuccesIP(playerid)) return 0;
    ac_ShowPlayerDialog(playerid, 1111),ShowPlayerDialogf(playerid, 1111, 2, "{BFBBBA}Название сервера", !"Принять", !"Отмена",\
    "\
		1. "NAME" RP | %s | X2 Payday\n\
		2. "NAME" RP | %s | X3 Payday\n\
		3. "NAME" RP | %s | X5 Payday\n\
		4. "NAME" RP | %s | Обновление!\n\
		{FFFF00}5. "NAME" Role Play | %s\n\
		6. "NAME" RP | %s | Скоро обновление!\n\
		7. "NAME" RP | %s | Акция для новичков!\n\
		8. "NAME" RP | %s | Праздничное обновление!\n\
		9. "NAME" RP | %s | Новогоднее обновление!\n\
		10. Свое название\
	",
	Mode_City,Mode_City,Mode_City,Mode_City,Mode_City,Mode_City,Mode_City,Mode_City,Mode_City);
    return 1;
}
CMD:lzal(playerid, params[])
{
    if(!GetString(BuildsInfo[0][blArenderID],PN(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не арендуете концертный зал!");
	if(BuildsInfo[0][blTime]<1)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Концертный зал никто не арендует");
	if(!IsPlayerInRangeOfPoint(playerid, 30, 649.3248, -1353.8834, 13.5470) && !IsPlayerInRangeOfPoint(playerid,30,-575.709, 2594.2, 1705.09)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится у входа или выхода из концертного зала!");
	if(BuildsInfo[0][blClosed] == 0) return 0;
	static enter[90];
	switch(BuildsInfo[0][blCanEnter])
	{
	    case 0: enter = "{49A430}Свободный{FFFFFF}";
	    case 1: f(enter,sizeof(enter),"{E37A45}Платный: %i${FFFFFF}",BuildsInfo[0][blCanEnter]);
	    case 2: enter = "{A48330}По приглашению{FFFFFF}";
	    default: f(enter,sizeof(enter),"{E37A45}Платный: %i${FFFFFF}",BuildsInfo[0][blCanEnter]);
	}
	if(BuildsInfo[0][blCanEnter]==2) enter = "[ {46AB2A}Доступно{FFFFFF} ]";
	else enter = "[ {AB2A2A}НЕДоступно{FFFFFF} ]";
	return ac_ShowPlayerDialog(playerid, 798),ShowPlayerDialogf(playerid, 798, 2, !"{BFBBBA}", !"Принять", !"Отмена", "Вход: %s [Изменить]\nОбьявить о начале мероприятия\nОтчеты по {46AB2A}доходам{FFFFFF}\nЗабрать прибыль: {46AB2A}%i${FFFFFF}\nВыдать пропуск %s", enter, ZallFunction[1], enter);
}
CMD:gotobiz(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new bizid; else return SCM(playerid, COLOR_RED, !"Используй: /gotobiz [id]");
	if(bizid < 0 || bizid > OWNABLEBIZES-1) return 0;
	SetPlayerPos(playerid, BizInfo[bizid][bEnter_X], BizInfo[bizid][bEnter_Y], BizInfo[bizid][bEnter_Z]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return SCMf(playerid, -1, "Вы телепортировались к бизнесу ID:%i", bizid);
}
CMD:gotohouse(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new houseid; else return SCM(playerid, COLOR_RED, !"Используй: /gotohouse [id]");
	if(houseid < 0 || houseid > OWNABLEHOUSES-1) return 0;
	SetPlayerPos(playerid, HouseInfo[houseid][hEnter_X], HouseInfo[houseid][hEnter_Y], HouseInfo[houseid][hEnter_Z]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return SCMf(playerid, -1, "Вы телепортировались к дому ID:%i", houseid);
}
CMD:gotocar(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new carid;
    if(sscanf(params, "d", carid)) return SCM(playerid, COLOR_RED, !"Используй: /gotocar [id]");
    if(!IsValidVehicle(carid)) return 0;
	new Float:x, Float:y, Float:z;
	GetVehiclePos(carid, x, y, z);
	SetPlayerPos(playerid, x, y, z);
	SetPlayerInterior(playerid, GetVehicleInterior(carid));
	SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(carid));
	return SCMf(playerid, -1, "Вы телепортировались к авто ID:%i", carid);
}
CMD:gototrash(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new trash; else return SCM(playerid, COLOR_RED, !"Используй: /gototrash [id]");
    if(!(0 <= trash <= MAX_TRASH-1)) return 0;
	SetPlayerPos(playerid, MusorPos[trash][0]+2, MusorPos[trash][1], MusorPos[trash][2]);
	return SCMf(playerid, -1, "Вы телепортировались к мусорке ID:%i", trash);
}
CMD:gotoklad(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new idklad; else return SCM(playerid, COLOR_RED, !"Используй: /gotoklad [id]");
    if(!(0 <= idklad <= sizeof(KladeInfo)-1)) return 0;
	SetPlayerPos(playerid, KladeInfo[idklad][Klad_X]+2, KladeInfo[idklad][Klad_Y], KladeInfo[idklad][Klad_Z]);
	return SCMf(playerid, -1, "Вы телепортировались до клада ID:%i", idklad);
}
CMD:az(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id;
	if(!isnull(params)) 
	{
		SetPlayerPos(playerid, AdminZone[GLS[65]][Zone_posX], AdminZone[GLS[65]][Zone_posY], AdminZone[GLS[65]][Zone_posZ]);
		SetPlayerInterior(playerid, AdminZone[GLS[65]][Zone_Interior]);
		SetPlayerVirtualWorld(playerid, AdminZone[GLS[65]][Zone_VirtualWorld]);
		SCMf(id, COLOR_LIGHTBLUE, "Администратор %s[%i] телепортировал вас на собеседование.", PN(playerid), playerid);
	}
	else id = playerid, SCMf(id, COLOR_GREY, "Вы были телепортированы в админ-зону №%i (%s)", AdminZone[GLS[65]][Zone_ID], AdminZone[GLS[65]][Zone_Name]);
	SetPlayerPos(id, AdminZone[GLS[65]][Zone_posX], AdminZone[GLS[65]][Zone_posY], AdminZone[GLS[65]][Zone_posZ]);
	SetPlayerInterior(id, AdminZone[GLS[65]][Zone_Interior]);
	return SetPlayerVirtualWorld(id, AdminZone[GLS[65]][Zone_VirtualWorld]);
}
CMD:changeadminint(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][33]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    f(str_2, sizeof(str_2), "Используй: /changeadminint [id (0-%i)]", sizeof(AdminZone)-1);
	extract params -> new adminint; else return SCM(playerid, COLOR_RED, str_2);
    if(!(0 <= adminint <= sizeof(AdminZone))) return SCMf(playerid, COLOR_RED, str_2);
	GLS[65] = adminint;
   	SendAdminsMessagef(COLOR_GREY, "Администратор %s[%i] сменил админ зону на №%i (%s)", PN(playerid), playerid, AdminZone[adminint][Zone_ID], AdminZone[adminint][Zone_Name]);
	return SaveInforamtion();
}
CMD:scutes(playerid, params[])
{
	if(PI[playerid][pMember]!=TEAM_FBI)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не состоите в FBI!");
	if(!TeamDuty{playerid})return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не в рабочем состоянии!");
	new id;
	if(PI[playerid][pMScutes]!=-1)
	{
	 	f(str_2,sizeof(str_2),"{4D7D22}-{FFFFFF} Носитель: {4D7D22}%s{FFFFFF}\n\n{FFFFFF}Вы будете получать сообщения как только человек за которым включена\nслежка позвонит кому-либо или напишет смс.",PN(PI[playerid][pMScutes]));
		SPD(playerid,1081,0, !"", str_2,"{DE3737}Отключить{FFFFFF}","Отмена");
		return 0;
	}
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /scutes [id]");
	if(PI[id][pTelNum]<=0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого игрока нет телефона!");
	if(id==playerid)return 0;
	if(!IsPlayerConnected(id)) return 0;
	if(!ProxDetectorS(2.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
	if(PI[id][pScutes]==-1)
	{
		PI[id][pScutes]=playerid,f(str_2,sizeof(str_2),"Вы успешно прикрепили жучек к мобильному телефону игрока %s.",PN(id));
		PI[playerid][pMScutes]=id;
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}К этому игроку уже прикреплен жучек!");
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	SetPlayerChatBubble(playerid, "Сделал что-то странное", COLOR_PURPLE, 10.0, 5000);
	SCM(playerid,COLOR_GREEN,str_2);
	return 1;
}
CMD:goto(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new player:target; else return SCM(playerid, COLOR_RED, !"Используй: /goto [id]");
	if(target == INVALID_PLAYER_ID) return 1;
    if(SERIU[target] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Админ за кем-то следит!");
	new Float:X, Float:Z, Float:Y;
    GetPlayerPos(target, X, Y, Z);
    if(GetPlayerState(playerid) != 2) SetPlayerPos(playerid, X+2, Y+2, Z);
    else SetVehiclePos(GetPlayerVehicleID(playerid), X+2, Y+2, Z);
    BizEntered[playerid] = BizEntered[target];
    HouseEntered[playerid] = HouseEntered[target];
    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(target));
    SetPlayerInterior(playerid, GetPlayerInterior(target));
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы телепортировались к игроку %s", PN(target));
	return aml(1, playerid, PN(target), "т/п к игроку");
}
alias:goto("g");
CMD:kick(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static reason[30], id;
    if(sscanf(params,"us[30]",id,reason)) return SCM(playerid, COLOR_RED, !"Используй: /kick [id] [Причина]");
    if(CheckIsASuccesIP(playerid)) return 0;
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    //if(PI[playerid][pAdmin] < PI[id][pAdmin]) SetAdminLevel(playerid, 0, "кикнул старшего админа");
	if(id == playerid) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя кикать самого себя");
	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s[%i] кикнул игрока %s[%i]. Причина: %s",PN(playerid),playerid,PN(id),id,reason);
   	static reason2[50];
   	f(reason2, sizeof(reason2), "<b>Причина:</b> %s", reason);
   	aml(20, playerid, PN(id), reason2);
   	return J_Kick(id);
}
CMD:scare(playerid, param[])
{
	new id;
 	if(sscanf(param,"d",id)) return SCM(playerid,COLOR_RED,"Используйте: /scare [ID]");
 	if(PI[playerid][pInvItemAcs][1] != 777) return SCM(playerid,COLOR_RED,"У вас нет этого прдемета!");
 	if(!IsPlayerConnected(id)) return SCM(playerid,COLOR_RED,"Игрок не найден");
 	if(!ProxDetectorS(5.0, playerid, id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Произошла ошибка, игрок слишком далеко от вас!");
    SetPlayerChatBubble(playerid, "Заглянул в карман.", COLOR_PURPLE, 10.0, 1500);
    f(str_1,sizeof(str_1),"%s[%i] напугал %s",cPN(playerid),playerid,PN(id));
	ProxDetector(25,playerid, str_1,COLOR_ME);
	HideLogo(playerid);
	SetPlayerChatBubble(playerid, "Достал маску", COLOR_PURPLE, 10.0, 5000);
	maskademon[id] = SetTimerEx("Closedemon", 5000, 1, "d", id);
	TextDrawShowForPlayer(id, demon_TD);
	return true;
}
forward Closedemon(playerid);
public Closedemon(playerid)
{
	TextDrawHideForPlayer(playerid, demon_TD);
    KillTimer(maskademon[playerid]);
    return true;
}
CMD:setrep(playerid, params[])
{
	//if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    new id, amount;
	if(sscanf(params, "ud", id, amount)) return SCM(playerid, COLOR_RED, !"Используй: /setrep [ID игрока] [кол-во репутации]");
	if(!PI[id][pAdmin]) return 0;
	PI[id][pReputation] = amount;
	UpdatePlayerDataInt(id, "Reputation", PI[id][pReputation]);
	SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] назначил %s[%i] %i репутации!", PN(playerid), playerid, PN(id), id, amount);
	f(str_1, sizeof(str_1), "назначил %i репутации", amount);
	return aml(1, playerid, PN(id), str_1);
}
CMD:smute(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(sscanf(params, "uds[30]", params[0], params[1], params[2])) return SCM(playerid, COLOR_RED, !"Используй: /smute [id] [время] [причина]");
	if(strlen(params[2]) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(params[0] == INVALID_PLAYER_ID) return 0;
    if(CheckIsADomen(playerid, params[2])) return 1;
    if(IsAIP(playerid, params[2])) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
 	if(params[1] < 1) return SCM(playerid, COLOR_RED, !"Используй: /mute [id] [время > 1] [причина]");
 	if(strlen(params[2]) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(params[1] > 300) return SCM(playerid, COLOR_RED, !"Нельзя выдать БЧ больше чем на 300 минут!");
 	if(PI[params[0]][pMuteTime] > 0) return SCM(playerid, COLOR_RED, !"У этого игрока уже есть бан чата!");
	SendAdminsMessagef(COLOR_LIGHTRED, " Администратор %s[%i] тихо заглушил игрока %s[%i] на %i минут. Причина: %s", PN(playerid), playerid, PN(params[0]), params[0], params[1], params[2]);
	SPD(params[0], 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан чата, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
	PI[params[0]][pMuteTime] = params[1] * 60;
	//SvMutePlayerEnable(params[0]); //Войс
	return aml(7, playerid, PN(params[0]), params[2], params[1]);
}
CMD:mute(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(sscanf(params, "uds[30]", params[0], params[1], params[2])) return SCM(playerid, COLOR_RED, !"Используй: /mute [id] [время] [причина]");
	if(strlen(params[2]) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(params[0] == INVALID_PLAYER_ID) return 0;
	if(CheckIsADomen(playerid, params[2])) return 1;
    if(IsAIP(playerid, params[2])) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
 	if(params[1] < 1) return SCM(playerid, COLOR_RED, !"Используй: /mute [id] [время > 1] [причина]");
 	if(strlen(params[2]) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(params[1] > 300) return SCM(playerid, COLOR_RED, !"Нельзя выдать БЧ больше чем на 300 минут!");
 	if(PI[params[0]][pMuteTime] > 0) return SCM(playerid, COLOR_RED, !"У этого игрока уже есть бан чата!");
	ASCMToAllf(COLOR_LIGHTRED, "Администратор %s[%i] заглушил игрока %s[%i] на %i минут. Причина: %s", PN(playerid), playerid, PN(params[0]), params[0], params[1], params[2]);
	SPD(params[0], 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан чата, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
	PI[params[0]][pMuteTime] = params[1]*60;
	//SvMutePlayerEnable(params[0]); //Войс
	return aml(7, playerid, PN(params[0]), params[2], params[1]);
}
CMD:sban(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][36]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static reason[30];
    new id, days;
    if(sscanf(params, "uds[30]", id, days, reason)) return SCM(playerid, COLOR_RED, !"Используй: /sban [id] [days 1-30] [Причина]");
   	if(Osnovat(PN(id))) return 1;
	if(id == INVALID_PLAYER_ID) return 0;
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(IsAIP(playerid, reason)) return 1;
 	if(CheckIsASuccesIP(playerid)) return 0;
 	if(CheckIsADomen(playerid, reason)) return 1;
	if(!(1 <= days <= 30)) return SCM(playerid, COLOR_RED, !"Используй: /sban [id] [days 1-30] [Причина]");
    SendAdminsMessagef(COLOR_LIGHTRED, "Администратор %s[%i] тихо забанил игрока %s[%i] на %i дней. Причина: %s", PN(playerid), playerid, PN(id), id, days, reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
    UpdatePlayerDataInt(id, "Warns", 0);
    J_Kick(id);
    BanName(PN(id), PN(playerid), days, reason);
	return aml(8, playerid, PN(id), reason, days);
}
CMD:gravitaciabb(playerid, params[])
{
 	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new Float:gravity;
	if(sscanf(params, "f", gravity)) return SCM(playerid, COLOR_RED, !"Используйте: /gravitaciabb [FLOAT]| Стандарт - 0.012");
	SetGravity(gravity);
	SCM(playerid, -1, !"[Информация] Готово. Гравитация изменена, не забудьте вернуть как было!");
	f(str_1, sizeof(str_1), "изменил гравитацию сервера на %.2f", gravity);
	return aml(18, playerid, "", str_1);
}
CMD:fakesms(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static targetid, text[144];
	if(sscanf(params, "us[144]", targetid, text)) return SCM(playerid, COLOR_RED, !"Используй: /fakesms [id/name] [text]");
	if(targetid == INVALID_PLAYER_ID) return 0;
	SCMf(targetid, COLOR_LIGHTRED, "%s", text);
    f(str_1, sizeof(str_1), "[/fakesms] (%s)", text);
    return aml(1, playerid, PN(targetid), str_1, 10);
}
CMD:fakeban(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, days, reason[30];
    if(sscanf(params, "uds[30]", id, days, reason)) return SCM(playerid, COLOR_RED, !"Используй: /fakeban [id] [days 1-30] [Причина]");
	if(id == INVALID_PLAYER_ID) return 0;
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(CheckIsASuccesIP(playerid)) return 0;
	if(!(1 <= days <= 30)) return SCM(playerid, COLOR_RED, !"Используй: /faleban [id] [days 1-30] [Причина]");
    ASCMToAllf(COLOR_LIGHTRED, "Администратор %s[%i] забанил игрока %s[%i] на %i дней. Причина: %s", PN(playerid), playerid, PN(id), id, days, reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
	return 1;
}
CMD:ban(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][28]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, days, reason[30];
    if(sscanf(params, "uds[30]", id, days, reason)) return SCM(playerid, COLOR_RED, !"Используй: /ban [id] [days 1-30] [Причина]");
  	if(Osnovat(PN(id))) return SendAdminsMessagef(COLOR_GREY, "Пидорас %s[%d] пытался заблокировать основу %s[%d]!", PN(playerid), playerid, PN(id), id);
	if(id == INVALID_PLAYER_ID) return 0;
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(CheckIsASuccesIP(playerid)) return 0;
 	if(IsAIP(playerid, reason)) return 1;
    if(CheckIsADomen(playerid, reason)) return 1;
	if(!(1 <= days <= 30)) return SCM(playerid, COLOR_RED, !"Используй: /ban [id] [days 1-30] [Причина]");
	if(PI[playerid][pAdmin] <= PI[id][pAdmin] && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"хуй те");
    ASCMToAllf(COLOR_LIGHTRED, "Администратор %s[%i] забанил игрока %s[%i] на %i дней. Причина: %s", PN(playerid), playerid, PN(id), id, days, reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
    UpdatePlayerDataInt(id, "Warns", 0);
    BanName(PN(id), PN(playerid), days, reason);
	aml(8, playerid, PN(id), reason, days);
	return J_Kick(id);
}
CMD:banex(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, reason[100];
    if(sscanf(params, "us[100]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /banex [id] [Причина]");
  	if(Osnovat(PN(id))) return 1;
	if(id == INVALID_PLAYER_ID) return 0;
	if(PI[playerid][pAdmin] <= PI[id][pAdmin] && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"хуй те");
	if(strlen(reason) > 100) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    ASCMToAllf(COLOR_LIGHTRED, "Администратор %s[%i] навсегда забанил игрока %s[%i]. Причина: %s", PN(playerid), playerid, PN(id), id, reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
    BanNameEx(id, PN(playerid), reason);
	aml(1, playerid, PN(id), "выдал вечный бан");
	return J_Kick(id);
}
CMD:agl(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /agl [id]");
	if(id == INVALID_PLAYER_ID) return false;
    GiveLiccenses(id, 365);
	SCMf(playerid, COLOR_VALIK, "[Информация]{FFFFFF} Вы успешно выдали игроку %s[%i] все лицензии!", PN(id), id);
	SCMf(id, COLOR_VALIK, "[Информация]{FFFFFF} Администратор %s[%i] выдал вам все лицензии!", PN(playerid), playerid);
	return aml(1, playerid, PN(id), "выдал все лицензии");
}
CMD:aglall(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /aglall [радиус]");
	new Float:radius, num;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	foreach(new i: Player)
    {
    	if(i == playerid) continue;
        if(IsPlayerInRangeOfPoint(i, radius, X, Y, Z))
		{
			GiveLiccenses(i, 365);
			num ++;
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали все лицензии %i игрокам в вашем радиусе.", num);
	SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал все лицензии %i игрокам!", PN(playerid), num);
    f(str_1, sizeof(str_1), "выдал все лицензии %i игрокам", num);
	return aml(18, playerid, "", str_1);
}
CMD:banip(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][29]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, reason[30];
    if(sscanf(params, "us[30]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /banip [id] [Причина]");
    if(Osnovat(PN(id))) return SendAdminsMessagef(COLOR_GREY, "Пидорас %s[%d] пытался заблокировать IP %s[%d]!", PN(playerid), playerid, PN(id), id);
	if(id == INVALID_PLAYER_ID) return 0;
	if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(CheckIsASuccesIP(playerid)) return 0;
 	if(IsAIP(playerid, reason)) return 1;
 	if(CheckIsADomen(playerid, reason)) return 1;
 	
    ASCMToAllf(COLOR_LIGHTRED, " Администратор %s[%i] забанил игрока %s[%i]. Причина: %s", PN(playerid), playerid, PN(id), id, reason);
    SCMf(playerid, 0xEFEFF7AA, "Забанен: %s. IP: %s. REGIP: %s", PN(id), PlayerIP(id), PlayerRegIP[id]);
	UpdatePlayerDataInt(id, "Warns", 0);
    BanIP(PlayerIP(id));
    BanName(PN(id), PN(playerid), 10, reason);
    J_Kick(id);
	return aml(9, playerid, PN(id), reason);
}
CMD:banipoff(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][31]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static ip[16], reason[30];
    if(sscanf(params,"s[16]s[30]",ip, reason)) return SCM(playerid, COLOR_RED, !"Используй: /banipoff [ip] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    
    SendAdminsMessagef(COLOR_LIGHTRED, " Администратор %s забанил ip %s. Причина: %s", PN(playerid),ip,reason);
    BanIP(ip);
	return aml(5, playerid, ip, reason);
}
CMD:muteoff(playerid, params[])
{
    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24],reason[30], time;
    if(sscanf(params, "s[24]ds[30]", name, time, reason)) return SCM(playerid, COLOR_GREY, !"/muteoff [nick] [time] [reason]");
 	if(strlen(reason)>30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
 	if(time>300)return SCM(playerid, COLOR_RED, !"Нельзя выдать БЧ больше чем на 300 минут!");
	if(Osnovat(name)) return 1;
	if(CheckIsASuccesIP(playerid)) return 0;
	if(CheckIsADomen(playerid, reason)) return 1;
    if(GetPlayerID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `MuteTime`='%i' WHERE `NickName`='%s';", time*60, name);
    ASCMToAllf(COLOR_LIGHTRED, " Администратор %s установил в оффлайне %i минут молчанки игроку %s, причина: %s", PN(playerid), time, name, reason);
    return aml(7, playerid, name, reason, time);
}
CMD:jailoff(playerid, params[])
{
    if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static name[MAX_PLAYER_NAME], reason[30], time;
    if(sscanf(params, "s[24]ds[45]", name, time, reason)) return SCM(playerid, COLOR_RED, !"Используй: /jailoff [nick] [time] [reason]");
    if(strlen(reason) > 45) return SCM(playerid, COLOR_RED, !"Не больше 45 символов!");
    if(Osnovat(name)) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
    if(CheckIsADomen(playerid, reason)) return 1;
    if(strlen(reason) > 45) return SCM(playerid, COLOR_RED, !"Не больше 45 символов!");
	if(time < 0) return SCM(playerid, COLOR_RED, !"Используйте: /jailoff [nick] time > 0 [reason]");
    if(time > 3000) return SCM(playerid, COLOR_RED, !"Используйте: /jailoff [nick] time < 3000 [reason]");
    if(GetPlayerID(name) != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Demorgan` = '%i', `Pcix` = `Pcix` + 1 WHERE `NickName` = '%s'", time*60, name);
    ASCMToAllf(COLOR_LIGHTRED, " Администратор %s установил в оффлайне %i минут тюрьмы игроку %s. Причина: %s", PN(playerid), time, name, reason);
    return aml(6, playerid, name, reason, time);
}
CMD:unjailoff(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24], reason[100];
	if(sscanf(params, "s[24]s[100]", name, reason)) return SCM(playerid, COLOR_RED, !"Используй: /unjailoff [nick] [reason]");
    if(CheckIsASuccesIP(playerid)) return 0;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s выпустил игрока %s. Причина: %s", PN(playerid), name, reason);
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Demorgan` = '0' WHERE `NickName` = '%s'", name);
	return aml(21, playerid, name, reason);
}
CMD:unmuteoff(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24];
	if(sscanf(params, "s[24]", name)) return SCM(playerid, COLOR_RED, !"Используй: /unmuteoff [nick]");
    if(CheckIsASuccesIP(playerid)) return 0;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s снял заглушку с игрока %s.", PN(playerid), name);
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `MuteTime` = '0' WHERE `NickName` = '%s'", name);
	return aml(1, playerid, name, "снял мут");
}
CMD:banoff(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][30]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static name[24], dell, day, reason[30];
    if(sscanf(params,"us[24]ds[30]",dell, name, day, reason)) return SCM(playerid, COLOR_RED, !"Используй: /banoff [0 Без обнуления/ 1 с обнулением] [name] [дней] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(day < 1) return SCM(playerid, COLOR_RED, !"Используй: /banoff [0 Без обнуления/ 1 с обнулением] [name] [дней] [Причина]");
	if(day > 2000) return SCM(playerid, COLOR_RED, !"Максимум 2000 дней!");
	if(Osnovat(name)) return SCM(playerid, COLOR_RED, !"Пшел нах!");
	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    if(CheckIsASuccesIP(playerid)) return 1;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
	new player = GetPlayerID(name);
	ASCMToAllf(COLOR_LIGHTRED, "Администратор %s забанил в оффлайне игрока %s. Причина: %s",PN(playerid),name,reason);
	if(player != INVALID_PLAYER_ID)
	{
		SPD(player, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"FORUM"", !"Закрыть", !"");
		J_Kick(player);
	}
	BanName(name, PN(playerid), day, reason);
	if(dell) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Admin`='0', `Money`='0', `VirMoney`='0', `Bank`='0'  WHERE `NickName`='%s'", name);
	return aml(8, playerid, name, reason, day);
}
CMD:sbanoff(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][35]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static name[24], day, reason[30];
    if(sscanf(params,"s[24]ds[30]",name,day, reason)) return SCM(playerid, COLOR_RED, !"Используй: /sbanoff [name] [дней] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(day < 1 && 30 < day) return SCM(playerid, COLOR_RED, !"Используй: /sbanoff [name] [дней] [Причина]");
	if(Osnovat(name)) return 1;
	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
 	new player = GetPlayerID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"ОН ОНЛАЙН!");
    SendAdminsMessagef(COLOR_LIGHTRED, " Администратор %s тихо забанил в оффлайне игрока %s. Причина: %s", PN(playerid), name, reason);
	BanName(name, PN(playerid), day, reason);
	return aml(8, playerid, name, reason, day);
}
CMD:unbanip(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static ip[16];
	if(sscanf(params, "s[16]", ip)) return SCM(playerid, COLOR_GREY, !"/unbanip [ip]");
	mysql_pqueryf(mysql, "DELETE FROM `BanIP` WHERE `IP` = '%s'", ip);
	SendAdminsMessagef(COLOR_RED, "[A] %s[%i] разблокировал IP: %s", PN(playerid), playerid, ip);
	f(str_1, sizeof(str_1), "разблокировал IP: <a href=/ip?ip=%s>%s</a>", ip, ip);
	return aml(18, playerid, "", str_1);
}
CMD:swarn(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][37]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, reason[30];
    if(sscanf(params, "us[30]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /swarn [id] [Причина]");
    if(id == INVALID_PLAYER_ID) return 0;
	if(Osnovat(PN(id))) return 1;
	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(IsACop(id))
	{
		if(UsingShield[id]) RemovePlayerAttachedObject(id, 7);
		PI[id][pShield] = 0.0;
	}
    if(CheckIsASuccesIP(playerid)) return 0;
    PI[id][pLeader] =
    PI[id][pMember] =
    PI[id][pDCTime] =
    PI[id][pRank] =
    PI[id][pJob] = JOB_NONE;
    UpdatePlayerDataInt(id, "DCTime", 0);
    UpdatePlayerDataInt(id, "Job", 0);
    UpdatePlayerDataInt(id, "Rank", 0);
    UpdatePlayerDataInt(id, "Member", 0);
    UpdatePlayerDataInt(id, "Leader", 0);
    SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    PlayerUnleader(id, PN(id));
    SetPlayerColor(id, TeamColors[0]);
    ResetSpawnInfo(id, 0);
    SetBumSkin(id);
    PI[id][pTimeToLastWarn] = gettime();
    UpdatePlayerDataInt(id, "TimeToLastWarn", PI[id][pTimeToLastWarn]);
	PI[id][pWarns] ++;
	UpdatePlayerDataInt(id, "Warns", PI[id][pWarns]);
    ASCMToAllf(COLOR_LIGHTRED, "Администратор %s[%i] тихо выдал предупреждение игроку %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(id), id, PI[id][pWarns], reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили предупреждение, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\nВарн можно снять с помощью /donate.\n{2D8E35}"FORUM"", !"Закрыть", !"");
    if(PI[id][pWarns] > 2)
	{
	    UpdatePlayerDataInt(id, "Warns", 0);
		BanName(PN(id), PN(playerid), 10, reason);
		J_Kick(id);
		return 1;
	}
	aml(19, playerid, PN(id), reason);
    return J_Kick(id);
}
CMD:warn(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][32]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id;
    static reason[30];
    if(sscanf(params,"us[30]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /warn [id] [Причина]");
    if(id == INVALID_PLAYER_ID) return 0;
  	if(Osnovat(PN(id))) return 1;

	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(IsACop(id))
	{
		if(UsingShield[id]) RemovePlayerAttachedObject(id, 7);
		PI[id][pShield] = 0.0;
	}
    if(CheckIsASuccesIP(playerid)) return 0;
    PI[id][pLeader] =
    PI[id][pMember] =
    PI[id][pRank] =
    PI[id][pJob] =
    PI[id][pDCTime] = 0;
    UpdatePlayerDataInt(id, "DCTime", 0);
    UpdatePlayerDataInt(id, "Job", 0);
    UpdatePlayerDataInt(id, "Rank", 0);
    UpdatePlayerDataInt(id, "Member", 0);
    UpdatePlayerDataInt(id, "Leader", 0);
    SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    PlayerUnleader(id, PN(id));
    SetPlayerColor(id, TeamColors[0]);
    ResetSpawnInfo(id, 0);
    SetBumSkin(id);
    PI[id][pTimeToLastWarn] = gettime();
    UpdatePlayerDataInt(id, "TimeToLastWarn", PI[id][pTimeToLastWarn]);
	PI[id][pWarns] ++;
	UpdatePlayerDataInt(id, "Warns", PI[id][pWarns]);
    ASCMToAllf(COLOR_LIGHTRED, "Администратор %s[%i] выдал предупреждение игроку %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(id), id, PI[id][pWarns], reason);
	SPD(id, 0, DIALOG_STYLE_MSGBOX, !"", !"Вы получили предупреждение, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\nВарн можно снять с помощью /donate.\n{2D8E35}"FORUM"", !"Закрыть", !"");
    if(PI[id][pWarns] > 2)
	{
	    UpdatePlayerDataInt(id, "Warns", 0);
		BanName(PN(id), PN(playerid), 10, reason);
		return J_Kick(id);
	}
	aml(19, playerid, PN(id), reason);
    return J_Kick(id);
}
CMD:warnoff(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][34]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24], reason[30], admin;
    if(sscanf(params, "s[24]ds[30]", name, admin, reason)) return SCM(playerid, COLOR_RED, !"Используй: /warnoff [nick] [количество] [reason]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(Osnovat(name)) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
    if(CheckIsADomen(playerid, reason)) return 1;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
 	new player = GetPlayerID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Warns`='%i', `TimeToLastWarn`='%i' WHERE `NickName`='%s';", admin, gettime(), name);
    aml(19, playerid, name, reason);
    return ASCMToAllf(COLOR_LIGHTRED, " Администратор %s установил в оффлайне %i варнов игроку %s. Причина: %s",PN(playerid),admin,name, reason);
}
CMD:unwarn(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id;
    static reason[100];
	if(sscanf(params, "us[100]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /unwarn [id/name] [reason]");
    if(CheckIsASuccesIP(playerid)) return 0;
	if(id == playerid) return 1;
	if(!PI[id][pWarns]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У него нет предупреждений!");
	SendAdminsMessagef(COLOR_YELLOW, " Администратор %s снял 1 варн игроку %s, причина: %s", PN(playerid), PN(id), reason);
	SCMf(id, COLOR_GREEN, "[Информация] {FFFFFF}Администратор снял вам 1 предупреждение, причина: %s", reason);
	PI[id][pWarns] -= 1;
	UpdatePlayerDataInt(id, "Warns", PI[id][pWarns]);
	return aml(22, playerid, PN(id), reason);
}
CMD:unwarnoff(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24], reason[30];
    if(sscanf(params, "s[24]s[30]", name, reason)) return SCM(playerid, COLOR_RED, !"Используй: /unwarnoff [nick] [reason]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(Osnovat(name)) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
    if(CheckIsADomen(playerid, reason)) return 1;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
 	new player = GetPlayerID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Warns` = `Warns`-1 WHERE `NickName`='%s';", name);
 	ASCMToAllf(COLOR_LIGHTRED, " Администратор %s снял в оффлайне 1 варн у игрока %s, причина: %s", PN(playerid), name, reason);
    return aml(1, playerid, name, "снял в оффлайне 1 варн у администратора");
}
CMD:awarn(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][24]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, reason[100];
    if(sscanf(params, "us[100]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /awarn [id] [reason]");
    if(id == INVALID_PLAYER_ID) return 0;
  	if(Osnovat(PN(id))) return 1;

  	if(!PI[id][pAdmin]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный игрок не администратор!");

	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
    if(strlen(reason) > 100) return SCM(playerid, COLOR_RED, !"Не больше 100 символов!");
    if(IsACop(id))
	{
		if(UsingShield[id]) RemovePlayerAttachedObject(id, 7);
		PI[id][pShield] = 0.0;
	}
    if(CheckIsASuccesIP(playerid)) return 0;
	PI[id][pAWarns] ++;
    SendAdminsMessagef(COLOR_RED, "Администратор %s[%i] выдал выговор администратору %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(id), id, PI[id][pAWarns], reason);
	SCMf(id, COLOR_LIGHTRED, "[AWarn] %s[%i] выдал вам административное предупреждение! Причина: %s",PN(playerid),playerid, reason);
	if(PI[id][pAWarns]>2)
	{
		PI[id][pAWarns] = 0;
		SetAdminLevel(id, 0, "3 awarn");
		SCM(id, COLOR_LIGHTRED, !"[Информация]{FFFFFF} Вы были сняты с поста администратора!");
		J_Kick(id);
	}
	UpdatePlayerDataInt(id, "AWarns", PI[id][pAWarns]);
    return aml(28, playerid, PN(id), reason);
}
CMD:awarnoff(playerid, params[])
{
    if(PI[playerid][pAdmin] < 8) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static name[24], reason[30];
    if(sscanf(params,"s[24]s[30]", name, reason)) return SCM(playerid, COLOR_RED, "Используй: /awarnoff [name] [Причина]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
    if(Osnovat(name)) return SCM(playerid, COLOR_RED, !"Пшел нах!");
    if(CheckIsASuccesIP(playerid)) return 0;
    if(CheckIsADomen(playerid, reason)) return 1;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
    new player = GetPlayerID(name);
    if(player != INVALID_PLAYER_ID)
    {
        if(!PI[player][pAdmin]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный игрок не администратор!");
        PI[player][pAWarns] ++;
        SendAdminsMessagef(COLOR_YELLOW, "Администратор %s[%i] выдал выговор администратору %s[%i] [%i/3] Причина: %s", PN(playerid), playerid, PN(player), player, PI[player][pAWarns], reason);
        SCMf(player, COLOR_RED, "[Выговор] %s[%i] выдал вам Выговор! Причина: %s",PN(playerid), playerid, reason);
        if(PI[player][pAWarns] > 2) PI[player][pAWarns] = 0, SetAdminLevel(player, 0, "/awarnoff - 3 awarn"), SCM(player, COLOR_YELLOW, !"[Информация]{FFFFFF} Вы были сняты с поста администратора!");
        UpdatePlayerDataInt(player, "AWarns", PI[player][pAWarns]);
    }
    else
    {
        mysql_format(mysql, str_query, sizeof(str_query), "SELECT `Admin` FROM `Qelksekm` WHERE `NickName` = '%s' AND `Admin` > '0' LIMIT 1", name);
        new Cache:results = mysql_query(mysql, str_query);
        if(!cache_num_rows()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данный игрок не администратор!");
        cache_delete(results);
        mysql_format(mysql, str_query, sizeof(str_query), "SELECT `AWarns` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", name);
        new Cache:result = mysql_query(mysql, str_query);
        new amount;
		cache_get_value_name_int(0, "AWarns", amount);
        cache_delete(result);
        SendAdminsMessagef(COLOR_YELLOW, "Администратор %s[%i] выдал выговор в оффайлне администратору %s [%i/3] Причина: %s", PN(playerid), playerid, PN(player), name, amount, reason);
        mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `AWarns`= `AWarns` + '1' WHERE `NickName` = '%s'", name);
        if(amount > 2) mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Admin` = '0' WHERE `NickName` = '%s'", name);

    }
    return aml(28, playerid, name, reason);
}
CMD:unawarn(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][21]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, reason[100];
	if(sscanf(params, "us[100]", id, reason)) return SCM(playerid, COLOR_RED, !"Используй: /unawarn [id/name] [reason]");
    if(CheckIsASuccesIP(playerid)) return 0;
	if(id == playerid) return 1;
	if(!PI[id][pAWarns]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У него нету выговоров!");
	if(strlen(reason) > 100) return SCM(playerid, COLOR_RED, !"Не больше 100 символов!");
	SendAdminsMessagef(COLOR_YELLOW, " Администратор %s снял 1 выговор у администратора %s, причина: %s", PN(playerid), PN(id), reason);
	SCM(id, COLOR_GREEN, !"[Информация] {FFFFFF}Администратор снял вам 1 выговор!");
	PI[id][pAWarns]--;
	UpdatePlayerDataInt(id, "AWarns", PI[id][pAWarns]);
	return aml(29, playerid, PN(id), reason);
}
CMD:unawarnoff(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[24], reason[30];
    if(sscanf(params, "s[24]s[30]", name, reason)) return SCM(playerid, COLOR_RED, !"Используй: /unawarnoff [nick] [reason]");
    if(strlen(reason) > 30) return SCM(playerid, COLOR_RED, !"Не больше 30 символов!");
	if(Osnovat(name)) return 1;
    if(CheckIsASuccesIP(playerid)) return 0;
    if(CheckIsADomen(playerid, reason)) return 1;
    if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
 	new player = GetPlayerID(name);
    if(player != INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"Игрок онлайн!");
    mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `AWarns` = `AWarns`-1 WHERE `NickName`='%s';", name);
 	SendAdminsMessagef(COLOR_RED, "Администратор %s снял в оффлайне 1 выговор у администратора %s, причина: %s", PN(playerid), name, reason);
    return aml(1, playerid, name, "снял в оффлайне 1 выговор у администратора");
}
CMD:bankmenu(playerid, params[])
{
	if(GetTeamID(playerid) != TEAM_BANK)
		return SCM(playerid, COLOR_LIGHTRED, !"Отказано в доступе");

	extract params -> new player:target; else
		return SCM(playerid, COLOR_RED, !"Используй: /bankmenu [id]");

    if(target == INVALID_PLAYER_ID)
		return SCM(playerid, COLOR_LIGHTRED, !"Игрок не в сети!");

	if(!IsPlayerInRangeOfPoint(playerid, 8.0, -2683.8354, 807.3682, 1500.9688))
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Воспользоватся этой командой вы можете только в Банке!");

    if(!TeamDuty{playerid})
		return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");

	PanelPlayerID[playerid] = target;
	new rank = PI[playerid][pRank];
	if(rank < 5)
		return SCM(playerid, COLOR_LIGHTRED, !"Отказано в доступе");

    SPD(playerid, 713, DIALOG_STYLE_LIST, !"Выберите действие",
		!"{B03131}[1]{73B461} Выдать кредит [6]\n\
		{B03131}[2]{73B461} Узнать долг банку [1]\n\
		{B03131}[3]{73B461} Узнать количество денег в банке [1]\n\
		{B03131}[4]{73B461} Выдать банковскую карту [1]\n\
		{B03131}[5]{73B461} Восстановить банковскую карту [5]\n\
		{B03131}[6]{73B461} Принять деньги на депозит [4]\n\
		{B03131}[7]{73B461} Снять деньги с депозита [4]",
		!"Выбрать", !"Отмена");

	return 1;
}
CMD:givelicense(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4 && GetTeamID(playerid) != TEAM_LICENSERS) return SCM(playerid, COLOR_GREY, !"Отказано в доступе!");
	new id;
    if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, !"Используй: /givelicense [id]");
    if(!ProxDetectorS(10, playerid, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока.");
    if(!IsPlayerConnected(id) || !IsPlayerLogged{id}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    if(id == playerid && PI[playerid][pAdmin] == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете выдать лицензии сами себе!");
    if(PI[playerid][pAdmin] == 0 && !IsPlayerInRangeOfPoint(playerid, 70, -2034.9714, -115.2961, 35.2599)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Лицензии можно продавать только в автошколе!");
	PanelPlayerID[playerid] = id;
	PanelPlayerID[id] = playerid;
	new rank = PI[playerid][pRank];
	if(rank >= 3)
	{
        SPD(playerid, 6, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите лицензию", !"Лицензия\tСтоимость\t\n\
			На вождение авто\t{52A32A}1000${FFFFFF}\n\
			На вождение мото\t{52A32A}2000${FFFFFF}\n\
			На полеты\t{52A32A}\n\
			{FFFFFF}На рыбалку\t{52A32A}1000${FFFFFF}\n\
			На вождение водного транспорта\t{52A32A}5000${FFFFFF}\n\
			На оружие\t{52A32A}10000${FFFFFF}", !"Выдать", !"Отмена");
	}
	else
	{
	    if(GetTeamID(playerid) == TEAM_LICENSERS) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш ранг слишком мал");
	    SPD(playerid, 6, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите лицензию", !"Лицензия\tСтоимость\t\n\
			На вождение авто\t{52A32A}1000${FFFFFF}\n\
			На вождение мото\t{52A32A}2000${FFFFFF}", !"Выдать", !"Отмена");
	}
	return 1;
}
CMD:re(playerid, params[])
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}С транспорта нельзя следить!");
	new targetid;
    if(sscanf(params, "u", targetid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Введите: /re [ид игрока]");
	if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    if(SERIU[playerid] == INVALID_PLAYER_ID)
	{
		PI[playerid][preOrg] = PI[playerid][pMember];
		PI[playerid][preOrgg] = PI[playerid][pRank];
		GetPlayerPos(playerid, PI[playerid][Admin_X], PI[playerid][Admin_Y], PI[playerid][Admin_Z]);
		avir[playerid] = GetPlayerVirtualWorld(playerid);
		aint[playerid] = GetPlayerInterior(playerid);
	}
	TeamDuty{playerid} = true;
	PI[playerid][pMember] = PI[targetid][pMember];
	UpdatePlayerDataInt(playerid, "Member", PI[playerid][pMember]);
	PI[playerid][pRank] = 9;
	UpdatePlayerDataInt(playerid, "Rank", 9);
	PI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	SpecPlayer(playerid, targetid);
	ShowRecon(playerid);
    SelectTextDraw(playerid, 0xFF9933FF);
	return 1;
}
CMD:reoff(playerid)
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
 	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) SpecPl(playerid, false);
	return 1;
}
CMD:skick(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
   	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    if(CheckIsASuccesIP(playerid)) return 0;
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /skick [id]");
    if(id == INVALID_PLAYER_ID) return 1;
	if(id == playerid) return SCM(playerid, COLOR_LIGHTRED, !"Нельзя кикать самого себя");
    J_Kick(id);
    aml(20, playerid, PN(id));
	return SendAdminsMessagef(COLOR_YELLOW, "[A] %s[%i] тихо кикнул игрока %s [ID:%i]", PN(playerid), playerid, PN(id), id);
}
CMD:getip(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Введите: /getip [id]");
    if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    if(Osnovat(PN(id))) return 1;
	SCMf(playerid, 0x6ab1ffaa, "Nik [%s]  R-IP [%s]  IP | A-IP [{FF6A78}%s | %s{6ab1ff}]",PN(id), PlayerRegIP[id], PlayerIp[id], PlayerRegIP[id]);
	return aml(1, playerid, PN(id), "посмотрел IP игрока");
}
CMD:givemydonate(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id, value; else return SCM(playerid, COLOR_RED, !"Используйте: /givemydonate [id] [кол-во]");
	if(GetDonate(playerid) < value || value < 1 || value > 1000000) return SCM(playerid,COLOR_LIGHTRED,"[Ошибка] {FFFFFF}У вас не достаточно AZ-монет!");
	GiveDonate(id, value);
	GiveDonate(playerid, -value);
	aml(25, playerid, PN(id), "передача доната", value);
	SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно передали %i доната, игроку %s[%i]!", value, PN(id), id);
	return SendAdminsMessagef(COLOR_VALIK, "[A] %s[%i] передал %i доната, игроку %s[%i]", PN(playerid), playerid, value, PN(id), id);
}
CMD:setstat(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][22]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id, param1, param2;
    if(sscanf(params,"udd",id,param1,param2))
	{
		SCM(playerid, -1, !"Используй: /setstat [id] [код] [значение]");
		SCM(playerid, -1, !"[0]Уровень | [1]Уважения | [2]Пол | [3]Подарок | [4]Предупреждения | [5]VIP | [6]Выговоры");
		SCM(playerid, -1, !"[7]Номер телефона | [8]Ключи от дома | [9]Ключи от бизнеса | [10]Патроны | [11]Детали");
		SCM(playerid, -1, !"[12]Работа | [13]Наркотики | [14]Счет в банке" );
		SCM(playerid, -1, !"[15]Очки фермы | [16]Спавн[0/3] | [17]Чемодан[0/1] | [18]Семейные талоны");
		return 1;
	}
	switch(param1)
	{
	    case 0:
	    {
	        J_SetPlayerScore(id,param2);
			SCMf(playerid, -1, "Вы изменили уровень игрока %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил уровень", param2);
	    }
	    case 1:
	    {
	        PI[id][pExp] = param2;
			SCMf(playerid, -1, "Вы изменили уважения игрока %s(%i) на %i", PN(id), id, param2);
			CheckNextLevel(id);
			aml(2, playerid, PN(id), "изменил уважения", param2);
	    }
	    case 2:
	    {
	        PI[id][pSex] = param2;
	        UpdatePlayerDataInt(id, "Sex", PI[id][pSex]);
			SCMf(playerid, -1, "Вы изменили пол игрока %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил пол", param2);
	    }
	    case 3:
	    {
	        SetItem(id, Item_Gift, param2);
			SCMf(playerid, -1, "Вы изменили подарков %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил подарки", param2);
	    }
	    case 4:
	    {
	        PI[id][pWarns] = param2;
	        UpdatePlayerDataInt(id, "Warns", param2);
			SCMf(playerid, -1, "Вы изменили кол-во предупреждений игрока %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил кол-во предупреждений", param2);
	    }
	    case 5:
	    {
	    	if(!Osnovat(PN(playerid)) && param2 == 6) return SCM(playerid, COLOR_RED, !"Мелкий еще!");
	        J_SetPlayerVIP(id, param2);
	        PI[id][pVipTime] = gettime()+(30*24*60*60);
	        UpdatePlayerDataInt(id, "VipTime", PI[id][pVipTime]);
			SCMf(playerid, -1, "Вы изменили VIP статус игрока %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил VIP статус", param2);
	    }
	    case 6:
	    {
	        PI[id][pFWarns] = param2;
	        UpdatePlayerDataInt(id, "FWarns", param2);
			SCMf(playerid, -1, "Вы изменили кол-во выговоров %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил кол-во выговоров", param2);
	    }
	    case 7:
	    {
	    	if(CheckTelNum(playerid, param2, 1)) return false;
		    PI[id][pTelNum] = param2;
		    UpdatePlayerDataInt(id, "TelNum", param2);
			SCMf(playerid, -1, "Вы изменили телефон %s(%i) на %i", PN(id), id, param2);
			aml(2, playerid, PN(id), "изменил телефон", param2);
	    }
	    case 8:
	    {
			SCMf(playerid, -1, "Вы изменили ключи от дома игрока %s(%i) на %i", PN(id), id, param2);
			PI[id][pHouseSpawn] = param2;//пиздарики
			UpdatePlayerDataInt(id, "HouseSpawn", param2);
			aml(2, playerid, PN(id), "изменил ключи от дома", param2);
	    }
	    case 9: return true;
	    case 10:
	    {
	        SCMf(playerid, -1, "Вы изменили кол-во патронов игрока %s(%i) на %i", PN(id), id, param2);
			SetItem(id, Item_Mats, param2);
			aml(2, playerid, PN(id), "изменил кол-во патронов", param2);
	    }
	    case 11:
	    {
	        SCMf(playerid, -1, "Вы изменили кол-во ингредиентов игрока %s(%i) на %i",PN(id),id,param2);
			SetItem(id, Item_Ingredients, param2);
			aml(2, playerid, PN(id), "изменил кол-во ингредиентов", param2);
	    }
	    case 12:
	    {
			SCMf(playerid, -1, "Вы изменили работу игрока %s(%i) на %i", PN(id), id, param2);
			PI[id][pJob] = param2;
			UpdatePlayerDataInt(id, "Job", param2);
			aml(2, playerid, PN(id), "изменил работу", param2);
	    }
	    case 13:
	    {
			SCMf(playerid, -1, "Вы изменили кол-во наркотиков игрока %s(%i) на %i", PN(id), id, param2);
			SetItem(playerid, Item_Drugs, param2);
			aml(2, playerid, PN(id), "изменил кол-во наркотиков", param2);
	    }
	    case 14:
	    {
			SCMf(playerid, -1, "Вы изменили счет в банке игрока %s(%i) на %i", PN(id), id, param2);
			PI[id][pBank] = param2;
			UpdatePlayerDataInt(playerid, "Bank", PI[playerid][pBank]);
			aml(2, playerid, PN(id), "назначил банковский счет", param2, 5);
	    }
	    case 15:
	    {
	        SCMf(playerid, -1, "Вы изменили Очки фермера игрока %s(%i) на %i", PN(id), id, param2);
			PI[id][pContractTime] = param2;
			UpdatePlayerDataInt(id, "ContractTime", PI[id][pContractTime]);
			aml(2, playerid, PN(id), "изменил Очки фермера", param2);
	    }
	    case 16:
	    {
	        if(param2 > 3 || param2 < 0) return SCM(playerid, -1, !"Error");
			SCMf(playerid, -1, "Вы изменили спавн игрока %s(%i) на %i", PN(id), id, param2);
			PI[id][pDCTime] = param2;
			UpdatePlayerDataInt(id, "DCTime", param2);
			SCM(id, -1, !">> {FF6347} Место спавна изменилось. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	    	aml(2, playerid, PN(id), "изменил спавн", param2);
	    }
	    case 17:
	    {
	        SCMf(playerid, -1, "Вы изменили коричневый чемодан %s(%i) на %i шт", PN(id), id, param2);
			SetItem(id, Item_Bag_Brown, param2);
			aml(2, playerid, PN(id), "изменил коричневый чемодан", param2);
	    }
	    case 18:
	    {
	        SCMf(playerid, -1, "Вы изменили семейные талоны %s(%i) на %i", PN(id), id, param2);
	        SetItem(id, Item_FamilyTalon, param2);
	        aml(2, playerid, PN(id), "изменил семейные талоны", param2);
	    }
	}
	if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] изменил игроку %s[%i] статистику #%i. Значение: %i", PN(playerid), playerid, PN(id), id, param1, param2);
	return 1;
}
CMD:radio(playerid)
{
	if(!GetInvCount(playerid, Item_Radio) && !IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, !"{FF0000}x {AFAFAF}У вас нет радио");
	if(!PlayerPlayed{playerid}) SPD(playerid, 9811, DIALOG_STYLE_LIST, !"Радио", !"[1] Radio Electron\n[2] Radio LaserStar\n[3] Radio Record FM\n[4] Radio Europa Plus FM\n[5] Radio Premium FM\n[6] Radio Zaycev FM\n[7] Radio Dorognoe\n[8] Radio Chanson FM\n[9] Radio Zabawa FM\n[10] Radio Nawe FM\n[11] Radio Pioner FM\n[12] Radio Jazz FM", !"Выбрать", !"Отмена");
	else
 	{
		StopAudioStreamForPlayer(playerid);
		RemovePlayerAttachedObject(playerid, 6);
		PlayerPlayed{playerid} = false;
		SCM(playerid, COLOR_LIGHTRED, !"[Подсказка] {FFFFFF}Вы выключили радио.");
	}
	return 1;
}
CMD:news(playerid, params[])
{
    static text[150];
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(!IsANews(playerid)) return SCM(playerid, COLOR_GREY, !"Вам не доступна эта команда!");
    if(PI[playerid][pRank]<5)return SCM(playerid, COLOR_GREY, !"Вам не доступна эта команда! (Необходим 5-тый ранг!)");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[150]", text)) return SCM(playerid, COLOR_RED, !"Используйте: /news [текст]");
	if(CheckIsADomen(playerid, text)) return 1;
    if(IsAIP(playerid, text))return 1;
    if(GetPVarInt(playerid,"newser")>gettime())return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	new carid = GetPlayerVehicleID(playerid);
	static getradio[40];
    switch(PI[playerid][pMember])
    {
        case TEAM_RADIO: getradio = "LS";
        case TEAM_RADIOSF: getradio = "SF";
        case TEAM_RADIOLV: getradio = "LV";
        default: getradio = "";
    }
	if(IsANewsCar(carid) || IsPlayerInRangeOfPoint(playerid,50,1716.1687,-1663.5651,20.2279)|| IsPlayerInRangeOfPoint(playerid,50,1654.9037,-1640.4658,57.1529))
	{
	 	f(str_2,sizeof(str_2),"[ News %s ] %s %s[%i]:{FFFFFF} %s",getradio,GetRankName(TEAM_RADIO,PI[playerid][pRank]),PN(playerid),playerid,text);
		SCMAll(0x73B461FF,str_2);
		SetPVarInt(playerid,"newser",gettime()+4);
		f(str_1, sizeof(str_1), "[/news] %s", text);
		aml(100, playerid, "", str_1);
	}
	else SCM(playerid, COLOR_BLUENEW, !"Вы не находитесь в транспорте радио студии");
	return 1;
}
CMD:gov(playerid, params[])
{
    static text[150];
    if(!IsAtFrakcia(playerid)) return 0;
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(PI[playerid][pLeader] == 0 && PI[playerid][pRank] < 9) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	if(sscanf(params,"s[150]",text)) return SCM(playerid, COLOR_RED, !"Используйте: /gov [текст]");
    if(GLS[36]>=3)return SCM(playerid, COLOR_RED, !"Все организации имеют право только на 3 гос. строки в 10 минут!");
    if(govtime[playerid] > gettime())return SCM(playerid, COLOR_RED, !"Отправлять объявления в гос. волну можно раз в 10 минут!");
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(PI[playerid][pRank] < 9 && !IsAtFrakcia(playerid)) return false;
    if(CheckIsADomen(playerid, text)) return 0;
    if(IsAIP(playerid, text)) return 0;
    
	SendGovMessage(playerid,text);
	GLS[36]++;
	f(str_1, sizeof(str_1), "[/gov] %s", text);
    if(GLS[36] >= 3) govtime[playerid] = gettime()+600;
	return aml(100, playerid, "", str_1);
}
CMD:m(playerid, params[])
{
	static text[100];
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_RED, !"Используйте: /m [текст]");
	if(IsAIP(playerid, text)) return 0;
	new carid = GetPlayerVehicleID(playerid);
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	if(!IsPlayerInAnyVehicle(playerid) && !IsACopCar(carid)) return SCM(playerid, COLOR_GREY, !"Не могу!");
	f(str_2,sizeof(str_2),"[M] %s %s(%i): %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),cPN(playerid),playerid,text);
	ProxDetector(30,playerid, str_2,COLOR_YELLOW);
	SetPlayerChatBubble(playerid, str_2, COLOR_YELLOW, 10.0, 5000);
	f(str_1, sizeof(str_1), "[M] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:megafon(playerid, params[])
{
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_RED, !"Используйте: /megafon [текст]");
	if(IsAIP(playerid, text)) return 0;
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	f(str_2,sizeof(str_2),"[Рупор] %s %s(%i): %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),cPN(playerid),playerid,text);
	ProxDetector(30,playerid, str_2,COLOR_YELLOW);
	SetPlayerChatBubble(playerid, str_2, COLOR_YELLOW, 10.0, 5000);
	f(str_1, sizeof(str_1), "[Рупор] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:s(playerid, params[])
{
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_RED, !"Используйте: /s [текст]");
	if(IsAIP(playerid, text)) return 0;
	if(GetPVarInt(playerid,"payer")>gettime())return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	SetPVarInt(playerid,"payer",gettime()+3);
	SetPlayerChatBubble(playerid, text, COLOR_SCHAT, 25.0, 5000);
	f(str_2,sizeof(str_2),"%s[%i] кричит: %s!!",cPN(playerid),playerid,text);
	ProxDetector(25,playerid, str_2,COLOR_SCHAT,1);
	if(!IsPlayerInAnyVehicle(playerid) && !PlayerLie[playerid] && !PlayerLieHeal[playerid]) ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	f(str_1, sizeof(str_1), "[/s] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:b(playerid, params[])
{
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /b [текст]");
	if(IsAIP(playerid, text)) return 0;
	f(str_2,sizeof(str_2),"%s[%i] (( {FFE6E6}%s{FFFFFF} ))",cPN(playerid),playerid,text);
	ProxDetector(10,playerid, str_2,-1,1);
	f(str_1, sizeof(str_1), "[/b] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:n(playerid, params[]) return callcmd::b(playerid,params);
CMD:c(playerid, params[])
{
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /c [текст]");
	if(IsAIP(playerid, text)) return 0;
	f(str_2,sizeof(str_2),"%s[%i] говорит шепотом: {FFFFFF}%s",cPN(playerid),playerid,text);
	ProxDetector(2,playerid, str_2,COLOR_BLUE);
	f(str_1, sizeof(str_1), "[/c] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:todo(playerid, params[])
{
    static text[128], text2[128];
   	if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(sscanf(params, "p<*>s[128]s[128]", text, text2)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}/todo Фраза*Действие");
    if(IsAIP(playerid, text) || IsAIP(playerid, text2) ) return 0;
    f(text2, sizeof(text2), "\"%s\", - сказал %s,{FF99FF} %s.",text,cPN(playerid),text2);
    ProxDetector(30.0, playerid, text2, -1);
	f(str_1, sizeof(str_1), "[/todo] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:me(playerid, params[])
{
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]", text)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /me [действие]");
	if(IsAIP(playerid, text)) return 0;
	f(str_2,sizeof(str_2),"%s[%i] %s", cPN(playerid), playerid, text);
	ProxDetector(25, playerid, str_2, COLOR_ME);
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s", text);
	f(str_1, sizeof(str_1), "[/me] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:do(playerid, params[])
{
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /do [действие]");
	if(IsAIP(playerid, text)) return 0;
	f(str_2,sizeof(str_2)," %s  - |  %s[%i] ",text, cPN(playerid), playerid);
	ProxDetector(25, playerid, str_2, COLOR_DOCHAT);
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s", text);
	f(str_1, sizeof(str_1), "[/do] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:try(playerid, params[])
{
    new rand = random(10);
    static text[100];
    if(!IsPlayerLogged{playerid}) return SCM(playerid, COLOR_GREY, !"Сначала нужно авторизироваться");
	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",text)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /try [действие]");
	if(IsAIP(playerid, text)) return 0;
	if(rand < 5)
	{
		f(str_2,sizeof(str_2)," %s[%i] %s -{9ACD32} Удачно ", cPN(playerid), playerid, text);
		f(str_1, sizeof(str_1), "[/try] %s - Удачно", text);
	}
	else
	{
		f(str_2,sizeof(str_2)," %s[%i] %s - {FF0000} Неудачно ", cPN(playerid), playerid, text);
		f(str_1, sizeof(str_1), "[/try] %s - Неудачно", text);
	}
	ProxDetector(25, playerid, str_2, COLOR_ME);
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s", text);
	return aml(100, playerid, "", str_1);
}
CMD:lmenu(playerid,params[])
{
	if(!IsAtMafia(playerid)&& !IsAtGang(playerid))
	{
		if((PI[playerid][pLeader] > 0 || PI[playerid][pRank] >= 9)&& IsACop(playerid)) return SPD(playerid,1214,2,"Меню лидера","1. {AFAFAF}Авто-инвайт\n2. {AFAFAF}Пригласить в организацию\n3. {AFAFAF}Игроки онлайн\n4. {AFAFAF}Назначить собеседование\n5.{AFAFAF}Перевод","Далее","Отмена");
		else if(PI[playerid][pLeader] > 0 || PI[playerid][pRank] >= 9) return SPD(playerid,1214,2,"Меню лидера","1. {AFAFAF}Авто-инвайт\n2. {AFAFAF}Пригласить в организацию\n3.{AFAFAF}Игроки онлайн\n4. {AFAFAF}Назначить собеседование","Далее","Отмена");
		else SCM(playerid, COLOR_GREY, !"Вы не лидер и не зам. лидера");
	}
	else
	{
		if(PI[playerid][pLeader] > 0 || PI[playerid][pRank] >= 9)
		{
			static str[50];
		    f(str,sizeof(str),"{FFFFFF}Банк: {009327}%i$",OrgInfo[GetTeamID(playerid)][oBank]);
			f(str_2,sizeof(str_2),"{AFAFAF}Авто-инвайт\n{AFAFAF}Пригласить в организацию\n{AFAFAF}Игроки онлайн\n{AFAFAF}Общак [%s]\n{AFAFAF}Спавн транспорта [{009327}25 000${AFAFAF}]\n{AFAFAF}Заправка транспорта [{009327}35 000${AFAFAF}]", !OrgInfo[PI[playerid][pMember]][oOb4ak] ? ("{407930}Открыт") : ("{D24449}Закрыт"));
			SPD(playerid,1214,2,str,str_2,"Далее","Отмена");
		}
	}
	return 1;
}
CMD:invite(playerid, params[])
{
    if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /invite [id]");
	if(CuffedTime[params[0]] > 0) return SCM(playerid, COLOR_RED, !"Игрок находится в шоковом состоянии!");
 	if(PI[playerid][pLeader] == 0 && PI[playerid][pRank] < 9) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	if(PI[params[0]][pMember] > 0) return SCM(playerid, COLOR_GREY, !"Игрок состоит в другой организации!");
	if(!IsPlayerConnected(params[0]) || !IsPlayerLogged{params[0]}) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
	if(PI[playerid][pMember] == TEAM_FBI) return SCM(playerid, COLOR_RED, !"В FBI можно попасть только переводом из полиции!");
	if(IsAtFrakcia(playerid) && PI[params[0]][pBL] != 0)
    {
        SCM(playerid, COLOR_GREY, !"Вы не можете принять этого игрока. Возможные причины:");
		SCM(playerid, COLOR_GREY, !"- Этот игрок находится в чёрном списке закона");
		return 1;
	}
	if(Clother[params[0]] != -1) return 0;
	if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return 0;
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Вы должны находиться рядом с игроком");
	if(InviteOffer[params[0]] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Этому игроку уже было выслано приглашение на вступление в организацию");
	static Leader[15];
	str_1[0] = EOS;
	if(PI[params[0]][pWarns] > 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрока с варном нельзя принять в организацию!");
	if(IsAtFrakcia(playerid, 1) && PI[params[0]][pZKP] < 35)
	{
	    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Законопослушность этого гражданина не позволяет ему вступить в организацию! (Необходимо 35 законопослушности!)");
	    SCM(params[0], COLOR_RED, !"[Ошибка] {FFFFFF}Вас не смогли принять в организацию, тк. у вас слишком мало законопослушности! (Необходимо 35 законопослушности!)");
	    return 0;
	}
	if(PI[playerid][pLeader] > 0) Leader = "Лидер";
	else Leader = "Зам. лидера";
	InviteOffer[params[0]] = playerid;
	f(str_1, 100, "Вы приглашаете игрока %s к себе в организацию", PN(params[0]));
	SCM(playerid, COLOR_LIGHTBLUE, str_1);
	f(str_1, 100, "%s %s приглашает вас к себе в организацию %s", Leader, PN(playerid), OrgInfo[GetTeamID(playerid)][oName]);
	SPD(params[0], 8, DIALOG_STYLE_MSGBOX, !"Инвайт", str_1, !"Принять", !"Отмена");

	return 1;
}
CMD:frisk(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский");
	static id,Drugs[20],Mats[20],Gun[20];
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /frisk [id]");
    if(!ProxDetectorS(1.0,playerid,id)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    str_2[0] = EOS;
    strcat(str_2,"{FFFFFF}");
    if(GetInvCount(id, Item_Mats)) Mats = "{33AA33}[Есть]\n";
    else Mats = "{FF0000}[Нет]";
    if(GetInvCount(id, Item_Drugs)) Drugs = "{33AA33}[Есть]\n";
    else Drugs = "{FF0000}[Нет]";
    new gunid, ammo;
    Gun = "{FF0000}[Нет]";
    for(new i;i < 13;i ++)
    {
        GetPlayerWeaponData(id, i, gunid, ammo);
        if(!gunid || !ammo) continue;
        Gun = "{33AA33}[Есть]\n";
        break;
    }
    f(str_2, sizeof(str_2), "Патроны: \t%s\n", Mats);
    f(str_2, sizeof(str_2), "%sНаркотики: \t%s\n", str_2, Drugs);
    f(str_2, sizeof(str_2), "%sОружие: \t%s\n", str_2, Gun);
    SPD(playerid,0,0,PN(id),str_2,"Ок","");
    f(str_2,sizeof(str_2)," %s обыскивает %s",cPN(playerid),cPN(id));
	ProxDetector(25,playerid, str_2,COLOR_PURPLE);
    return 1;
}
CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
	static id,ticket,reason[50];
    if(sscanf(params,"uds[50]",id,ticket,reason)) return SCM(playerid, COLOR_RED, !"Используйте: /ticket [id] [сумма] [причина]");
    if(!ProxDetectorS(5.0,playerid,id)) return SCM(playerid, -1, !"Вы далеко от игрока");
    if(PI[id][pLevel] < 2) return SCM(playerid, COLOR_RED, !"Нельзя выписывать штраф игрокам с 1-ым уровнем");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(ticket < 1 || ticket > 10000) return SCM(playerid, COLOR_RED, !"Штраф не менее $1 и не более $10000");
	f(str_2,sizeof(str_2),"Полицейский %s выписал вам штраф.\n\n{FF9900}Сумма: $%i\nПричина: %s",cPN(playerid),ticket,reason);
	SPD(id,87,0,"Штраф",str_2,"Оплатить","Отмена");
	f(str_2,sizeof(str_2),"Вы выписали штраф %s. Сумма: $%i | Причина: %s",PN(id),ticket,reason);
	SCM(playerid,COLOR_LIGHTBLUE,str_2);
	TicketOffer[id] = playerid;
	TicketPrice[id] = ticket;
	return 1;
}
CMD:throwfish(playerid, params[])
{
	static massa, Fish[20];
	str_2[0] = EOS;
	for(new i; i < 5; i ++)
 	{
 		new fish = PlayerFish[playerid][i];
 		if(fish == 0) strcat(str_2, "{AFAFAF}None\n");
 		else
 		{
 			f(Fish, sizeof(Fish), "{33CCFF}%s %i Kg\n", FishName[fish], FishMassa[playerid][fish]);
 			strcat(str_2, Fish);
 			massa += FishMassa[playerid][fish];
 		}
 	}
	if(massa > 0)
	{
		f(Fish, sizeof(Fish), "{33CCFF}Всю рыбу %i Kg\n", massa);
		strcat(str_2, Fish);
	}
 	SPD(playerid,263,2,"Что выбросить?",str_2,"Выбросить","Отмена");
 	return 1;
}
CMD:credit(playerid, params[])
{
	if(PI[playerid][pMember]!=TEAM_BANK) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в фракции БАНК!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(PI[playerid][pLeader]==0 && PI[playerid][pRank]<9) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данная функция доступна только лидеру и заместителю банка!");
	return SPD(playerid, 329, 2, !"Меню банка", !"{B03131}[1]{FFFFFF} Процент\n{B03131}[2]{FFFFFF} Процента\n{B03131}[3]{FFFFFF} Процента\n{B03131}[4]{FFFFFF} Процента\n{B03131}[5]{FFFFFF} Процентов\n{B03131}[6]{FFFFFF} Процентов", !"Принять", !"Отмена");
}
CMD:orel(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 506.2321,-69.8461,999.6721) && !IsPlayerInRangeOfPoint(playerid, 2.0, -2654.4612,1427.0135,907.3604) && !IsPlayerInRangeOfPoint(playerid, 2.0, 496.5649,-16.8896,1001.1519)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится возле стола!");
    extract params -> new player:id, amount; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте /orel [id игрока] [ставка]");
    if(!ProxDetectorS(4.5,playerid,id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
    if(PI[id][pGameRate]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок запретил ему кидать предложение об игре!");
	if(BlockOrel{playerid} || BlockOrel{id}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Кому-то из вас уже предложили игру!");
   	if(amount < 1000 || amount > 250000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 1.000$, максимальная 250.000.000$.");
	if(PI[playerid][pMoney] < amount) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У кого-то из вас не хватает денег!");
	if(id == playerid) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Нельзя кинуть самому себе предложение!");
	BlockOrel{playerid} = true;
	BlockOrel{id} = true;
	OrelID[id] = playerid;
	OrelMoney[id] = amount;
	StatusMoneta[playerid] = "Орёл";
	StatusMoneta[id] = "Решка";
	SCMf(playerid, COLOR_VALIK, "[Информация]{FFFFFF} Вы предложили игроку {FFFF00}%s{FFFFFF} сыграть в игру 'Орёл и Решка', ставка: {FFFF00}%i${FFFFFF}.", PN(id), amount);
	return ac_ShowPlayerDialog(id, 3724),ShowPlayerDialogf(id, 3724, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Орёл и Решка", !"Играть", !"Отказать", "{FFFF00}%s{FFFFFF} предлагает сыграть в игру ''Орёл и Решка''.\nСтавка: {FFFF00}%i${FFFFFF}\nИгрок выбрал сторону: {FFFF00}Орёл{FFFFFF}", PN(playerid), amount);
}
CMD:reshka(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 506.2321,-69.8461,999.6721) && !IsPlayerInRangeOfPoint(playerid, 2.0, -2654.4612,1427.0135,907.3604) && !IsPlayerInRangeOfPoint(playerid, 2.0, 496.5649,-16.8896,1001.1519)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится возле стола!");
    extract params -> new player:id, amount; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте /reshka [id игрока] [ставка]");
    if(!ProxDetectorS(4.5,playerid,id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
    if(PI[id][pGameRate]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок запретил ему кидать предложение об игре!");
	if(BlockOrel{playerid} || BlockOrel{id}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Кому-то из вас уже предложили игру!");
   	if(amount < 1000 || amount > 250000000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Минимальная ставка 1.000$, максимальная 250.000.000$.");
	if(PI[playerid][pMoney] < amount) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У кого-то из вас не хватает денег!");
	if(id == playerid) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Нельзя кинуть самому себе предложение!");
	BlockOrel{playerid} = true;
	BlockOrel{id} = true;
	OrelID[id] = playerid;
	OrelMoney[id] = amount;
	StatusMoneta[playerid] = "Решка";
	StatusMoneta[id] = "Орёл";
	SCMf(playerid, COLOR_VALIK, "[Информация]{FFFFFF} Вы предложили игроку {FFFF00}%s{FFFFFF} сыграть в игру 'Орёл и Решка', ставка: {FFFF00}%i${FFFFFF}.", PN(params[0]), params[1]);
	return ac_ShowPlayerDialog(id, 3724),ShowPlayerDialogf(id, 3724, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Орёл и Решка", !"Играть", !"Отказать", "{FFFF00}%s{FFFFFF} предлагает сыграть в игру ''Орёл и Решка''.\nСтавка: {FFFF00}%i${FFFFFF}\nИгрок выбрал сторону: {FFFF00}Решка{FFFFFF}", PN(playerid), params[1]);
}
CMD:pay(playerid, params[])
{
    if(PI[playerid][pDemorgan]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете обмениваться/передавать деньги в этом месте!");
	static id, money;
	if(GetPVarInt(playerid,"payer") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    if(sscanf(params,"ud",id,money)) return SCM(playerid, COLOR_RED, !"Используйте: /pay [id] [сумма]");
    if(!ProxDetectorS(3.0,playerid,id)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
	if(playerid == id) return SCM(playerid, COLOR_GREY, !"Нельзя передавать деньги самому себе");
	if(money < 1 || PI[playerid][pMoney] < money) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	if(PI[playerid][pLevel] == 1 && money > 200) return SCM(playerid, COLOR_RED, !"Игроки ниже 2 уровня могут передавать только по 200$");
	if(money > 50000) return SCM(playerid, COLOR_VALIK, !"Нельзя передавать больше $50000");
	GiveMoney(playerid, -money);
	GiveMoney(id, money);
	SetPVarInt(playerid, "payer", gettime()+2);
	ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
	SetPlayerChatBubblef(playerid, COLOR_PURPLE, 10.0, 5000, "%s передаёт конверт с деньгами %s", cPN(playerid), cPN(id));
	SCMf(id, COLOR_GREY, "%s передал вам $%i", cPN(playerid), money);
	SCMf(playerid, COLOR_GREY, "Вы передали $%i %s", money, cPN(id));
	return aml(50, playerid, PN(id), "передача денег", money);
}
CMD:putobject(playerid, params[])
{
	if(!IsACop(playerid) && !PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, !"Вы не сотрудник PD/FBI!");
	if(PI[playerid][pRank]<5)return SCM(playerid, COLOR_RED, !"Эта возможность доступна с 5 ранга.");
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid)!=0) return SCM(playerid, COLOR_RED, !"Использовать в здании запрещено!");
	f(str_2,sizeof(str_2),"{FFFFFF}Осталось: {94B0C1}%i{FFFFFF} обьектов.",PI[playerid][pObjikt]);
	return SPD(playerid, 399, 2, str_2, !"-{B03131} Ограждние [1]\n-{B03131} Отбойник\n-{B03131} Конус\n-{B03131} Ограждние [2]\n-{B03131} Табличка\n-{B03131} Лежачий полицеский\nЖелезный заборчик\nЖелезный заборчик [2]\n[ЗНАК] Ограничение скорости\n[ЗНАК] Запрет движения прямо\n[ЗНАК] Закрыто\n[ЗНАК] Stop\n[ЗНАК] Уступить дорогу\n[ЗНАК] Ремонт дороги\n[ЗНАК] Ехать прямо!\n[ЗНАК] Поворот налево\n[ЗНАК] Поворот направо\n- Радар\nУбрать обьект\nУбрать радар", !"Принять", !"Отмена");
}
CMD:demoute(playerid, params[])
{
	if(PI[playerid][pMember]!=TEAM_FBI && PI[playerid][pMember]!=TEAM_MERIALS)return SCM(playerid, COLOR_RED, !"Доступно только правительству и FBI!");
    if(PI[playerid][pLeader] == 0) return SCM(playerid, COLOR_RED, !"Отказано в доступе! (Доступно только лидеру)");
    if(!IsPlayerConnected(playerid) ||  !IsPlayerLogged{playerid}) return 0;
    static id,reason[100];
    if(sscanf(params,"us[100]",id,reason)) return SCM(playerid, COLOR_RED, !"Используйте: /demoute [id] [причина]");
    if(!ProxDetectorS(5.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"Вы далеко от игрока!");
	if(!IsAtFrakcia(id)) return SCM(playerid, COLOR_RED, !"Вы можете уволить только гос.служащих!");
	if(id == playerid) return SCM(playerid, COLOR_GREY, !"Вы не можете уволить сами себя!");
	if(PI[id][pLeader] > 0 ) return SCM(playerid, COLOR_RED, !"Вы не можете уволить лидера");
	if(IsACop(id) && UsingShield[id]) RemovePlayerAttachedObject(id, 7);
	PI[id][pMember] =
	PI[id][pDCTime] =
	PI[id][pRank] =
	pSportZal[id] = 0;
	UpdatePlayerDataInt(id, "DCTime", 0);
	UpdatePlayerDataInt(id, "Rank", 0);
	UpdatePlayerDataInt(id, "Member", 0);
	SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	TeamDuty{id} = false;
	f(str_2,sizeof(str_2),"{FFFFFF}%s выгнал вас из организации.\nПричина: %s",PN(playerid), reason);
	SCM(id,COLOR_LIGHTBLUE,str_2);
	f(str_2,sizeof(str_2),"Вы выгнали %s. Причина: %s",PN(id), reason);
	SCM(playerid,COLOR_LIGHTBLUE,str_2);
	f(str_2,sizeof(str_2),"[D]%s[%i] Уволил %s, Причина: %s",PN(playerid),playerid,PN(id), reason);
	SendGosMessage(COLOR_DEPAR,str_2);
	SetPlayerColor(id,0xFDFCFC15);
	ResetGun(id);
	J_SetPlayerArmour(id,0);
	ResetSpawnInfo(id, 0);
	SetBumSkin(id);
	return 1;
}
CMD:uninvite(playerid, params[])
{
	if(PI[playerid][pRank] < 9 && PI[playerid][pLeader] == 0) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	if(!IsPlayerConnected(playerid) ||  !IsPlayerLogged{playerid}) return 0;
	static id, reason[100];
	if(sscanf(params,"us[100]",id,reason)) return SCM(playerid, COLOR_RED, !"Используйте: /uninvite [id] [причина]");
	if(CheckIsADomen(playerid, reason)) return 1;
    if(IsAIP(playerid, reason)) return 1;
	if(PI[playerid][pRank] == PI[id][pRank])return 0;
	if(!IsGiveWarn(playerid, id)) return SCM(playerid, COLOR_GREY, !"Этот игрок состоит в другой организации");
	if(id == playerid) return SCM(playerid, COLOR_GREY, !"Себя нельзя");
	if(PI[id][pLeader] > 0 ) return SCM(playerid, COLOR_RED, !"Вы не можете уволить лидера");
	if(IsACop(id))
	{
		if(UsingShield[id]) RemovePlayerAttachedObject(id, 7);
		PI[id][pShield] = 0.0;
	}
	PI[id][pMember] =
	PI[id][pDCTime] =
	PI[id][pRank] =
	pSportZal[id] = 0;
	UpdatePlayerDataInt(id, "DCTime", 0);
	UpdatePlayerDataInt(id, "Rank", 0);
	UpdatePlayerDataInt(id, "Member", 0);
	SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
	TeamDuty{id} = false;
	SCMf(id,COLOR_LIGHTBLUE, "{FFFFFF}%s выгнал вас из организации.\nПричина: %s",PN(playerid), reason);
	SendTeamMessagef(PI[playerid][pMember], COLOR_LIGHTBLUE, "{FFFFFF}%s выгнал %s из организации.\nПричина: %s",PN(playerid),PN(id), reason);
	SCMf(playerid,COLOR_LIGHTBLUE, "Вы выгнали %s. Причина: %s",PN(id), reason);
	SetPlayerColor(id,0xFDFCFC15);
	ResetSpawnInfo(id, 0);
	ResetGun(id);
	return SetBumSkin(id);
}
CMD:giverank(playerid, params[])
{
	if(PI[playerid][pMember]<=0)return 0;
    if(PI[playerid][pRank] < 9 && PI[playerid][pLeader] == 0) return SCM(playerid, COLOR_RED, !"Отказано в доступе!");
	if(sscanf(params,"ud",params[0],params[1])) return SCM(playerid, COLOR_RED, !"Используйте: /giverank [id] [rank]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, !"Вы должны находиться рядом с игроком!");
    if(PI[params[0]][pLeader] > 0 ) return SCM(playerid, COLOR_RED, !"Вы не можете изменять ранг лидеру");
    if(params[1] < 1) return SCM(playerid, COLOR_GREY, !"Нельзя повысть до этого ранга");
    if(Clother[params[0]]!=-1)return 0;
	if(GetPlayerVirtualWorld(playerid)!=GetPlayerVirtualWorld(params[0]))return 0;
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, !"Игрок не найден");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, !"Вы не можете повысить/понизить этого игрока");
	if(PI[playerid][pRank] == 9 && params[1] > 8) return SCM(playerid, COLOR_RED, !"Нельзя выдать ранг больше 8");
 	if(params[1] > 9) return SCM(playerid, COLOR_GREY, !"Нельзя повысть до этого ранга");
	if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid, COLOR_GREY, !"Игрок находиться в другой организации!");
	str_1[0] = EOS;
	f(str_1,100,"Лидер %s %s до %i ранга",PN(playerid),PI[params[0]][pRank] > params[1] ? ("понизил"):("повысил"),params[1]);
	SCM(params[0],COLOR_LIGHTBLUE,str_1);
	f(str_1,100,"Вы %sи игрока %s до %i ранга",PI[params[0]][pRank] > params[1] ? ("понизил"):("повысил"),PN(params[0]),params[1]);
	SCM(playerid,COLOR_LIGHTBLUE,str_1);
	PI[params[0]][pRank] = params[1];
	UpdatePlayerDataInt(params[0], "Rank", params[1]);
	if(PI[params[0]][pSex] == 2)
	{
	    if(TeamDuty{params[0]})
		{
			SetPlayerSkinEx(params[0],GOrgSkins[GetTeamID(params[0])][params[1]]);
			TogglePlayerControllable(params[0],true);
		}
	}
	else
	{
	    if(TeamDuty{params[0]})
		{
			SetPlayerSkinEx(params[0],MOrgSkins[GetTeamID(params[0])][params[1]]);
			TogglePlayerControllable(params[0],true);
		}
	}
	return 1;
}
CMD:acceptadmin(playerid, params[])
{
	if(PI[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return 0;
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /acceptadmin [id]");
	if(!PI[params[0]][pAdmin]) return 0;
	if(params[0] == playerid) return 0;
	PlayerRegIP[params[0]] = PlayerIp[params[0]];
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `RegIP` = '%s' WHERE `ID` = '%i'",PlayerRegIP[params[0]], PI[params[0]][pID]);
	SCM(playerid, COLOR_VALIK, !"Ты подтвердил права на админа.");
	return SCM(params[0], COLOR_VALIK, !"Вам подтвердили права на админа.");
}
CMD:spawn(playerid)
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(SERIU[playerid] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Не доступно! [/reoff]");
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	return PlayerSpawn(playerid);
}
CMD:cc(playerid)
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new time = GetPVarInt(playerid, !"clearchat");
    if(time > gettime()) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Подождите %i секунд!", time - gettime());
    for(new i; i < 20; i++) SCMAll(-1, !" ");
    SendAdminsMessagef(COLOR_LIGHTBLUE, "%s Очистил Чат", PN(playerid));
	return SetPVarInt(playerid, !"clearchat", gettime() + 5);
}
CMD:jp(playerid)
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
    return 1;
}
CMD:carskill(playerid)
{
	SCMf(playerid, COLOR_LIGHTBLUE, " Текущий навык вождения автомобилем: {FFFFFF}%i/100.", PI[playerid][pCarSkill]),
	SCM(playerid, -1, !"Чтобы повысить навык вождения необходимо адекватно передвигаться на своем авто,");
	SCM(playerid, -1, !"держать своё авто в отличном состоянии и не сбивать пешеходов.");
	SCM(playerid, COLOR_GREY, !"Чтобы показать свой навык другому игроку, используйте /showcarskill.");
	return 1;
}
CMD:showcarskill(playerid, params[])
{
	new targetid;
	if(sscanf(params, "d", targetid)) return SCM(playerid, COLOR_RED, !"Используйте: /showcarskill [id]");
	if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
    if(!ProxDetectorS(5.0, playerid, targetid)) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока!");
	SCMf(targetid, COLOR_LIGHTBLUE, "Игрок %s[%i] показал отчет по своему навыку вождения. Навык вождения: {FFFFFF}[%i/100]", PN(playerid), playerid, PI[playerid][pCarSkill]);
	SCMf(targetid, COLOR_GREY, "Вы успешно показали отчет по вождению игроку {FFFFFF}%s[%i]", PN(targetid), targetid);
	return 1;
}
CMD:apanel(playerid)
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(GetString(PI[playerid][pAPass], "default"))
	{
		SetPVarInt(playerid, !"alogin", 1);
		return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Придумайте и введите админ-пароль\n\nПримечание:\n\t{FF6347}- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля может быть от 5 до 16 символов", !"Ввод", !"Отмена");
	}
	if(!ADuty{playerid}) return SPD(playerid, 211, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите админ-пароль", !"Ок", !"Отмена");
	ac_ShowPlayerDialog(playerid, 265),ShowPlayerDialogf(playerid, 265, 2, !"{BFBBBA}", !"Выбор", !"Отмена", "\
	{FFFFFF}[1] Admins\n\
	[2] Очистить Чат\n\
	[5] Заправить машины\n\
	{ABEB58}[1]{FFFFFF} Блатеры\n\
	[2] Починить машину\n\
	[3] Спавн Транспорта\n\
	{FF0000}[3] BANLIST{FFFFFF}\n\
	[4] Лидеры/Снять лидера\n\
	[4] Устроить гонку\n\
	[6] Настройки\n\
	[3] Мониторинг домов\n\
	[3] Мониторинг баннеров\n\
	{F2C934}[6]{FFFFFF} Теракты [%s]\n\
	{E98E52}[6]{FFFFFF} Падение метеорита: [%s]\n\
	{E98E52}[3]{FFFFFF} Пополнить склад фермы и грузчиков и завода\n\
	{E98E52}[3]{FFFFFF} Пополнить склад для организации.\n\
	{E98E52}[4]{FFFFFF} Обязательные ответы ХЕЛП. [%s]\n\
	{E98E52}[5]{FFFFFF} Управление ZZ\n\
	{E98E52}[4]{FFFFFF} Подтверждение E-mail [{45FB66}%i заявок{FFFFFF}]\n\
	{E98E52}[5]{FFFFFF} Изменить название сервера\n\
	{E98E52}[5]{FFFFFF} Пополнить продукты для гос. бизнесов.\n\
	{E98E52}[1]{FFFFFF} Статистика денег.\n\
	{E98E52}[5]{FFFFFF} Лотерейная: [%s]\n\
	{E98E52}[5]{FFFFFF} Пополнить банкоматы\n\
	{E98E52}[5]{FFFFFF} Античит миниган [%s]\n\
	{E98E52}[6]{FFFFFF} Слет каров в PayDay [%s]\n\
	[4]{FFFFFF} Авто респаун транспорта: [%s]\n\
	[4]{FFFFFF} Система репорта: [%s]\n\
	[5]{FFFFFF} Распродажа ВИРТОВ: [%s]\n\
	{F2C934}[3]{FFFFFF} FastAnswer [%s]\n\
	{F2C934}[1]{FFFFFF} КилЛист [{E95252}ВКЛ{FFFFFF}]\n\
	{F2C934}[1]{FFFFFF} Онлайн организаций\n\
	{F2C934}[1]{FFFFFF} IP адреса в сообщениях [%s]\n\
	{F2C934}[1]{FFFFFF} Ежедневные админские квесты\n\
	{F2C934}[6]{FFFFFF} Аминистия",\
	Terakt ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	Meteorit ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	OtvetHelper ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	0,\
	Lotery ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	Minigun ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	SletCars ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	AutoRespawn ? ("{AAE952}Вкл{FFFFFF}") : ("{E95252}Откл{FFFFFF}"),\
	SystemReport ? ("{AAE952}Новая{FFFFFF}") : ("{E95252}Старая{FFFFFF}"),\
	SellVirt ? ("{E95252}ВКЛЮЧЕНО{FFFFFF}") : ("{AAE952}ВЫКЛЮЧЕНО{FFFFFF}"),\
	FastAnswer ? ("{E95252}work{FFFFFF}") : ("{AAE952}disable{FFFFFF}"),\
	ShowIP{playerid} ? ("{E95252}ВКЛ{FFFFFF}") : ("{AAE952}ВЫКЛЮЧЕНО{FFFFFF}"));
	return true;
}
CMD:sethp(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new player:id, Float:hp; else return SCM(playerid, COLOR_RED, !"Используйте: /sethp [id] [ammount]");
	if(hp < 0.0) return SCM(playerid, COLOR_RED, !"Используйте: /sethp [id] hp > 0");
    if(hp > 1000.0) return SCM(playerid, COLOR_RED, !"Используйте: /sethp [id] hp < 1000");
    if(id == INVALID_PLAYER_ID) return 0;
	J_SetPlayerHealth(id, hp);
	SendAdminsMessagef(COLOR_GREY, "[%s] установил игроку %s[%i] %.0f ХП", PN(playerid), PN(id), id, hp);
	return aml(2, playerid, PN(id), "дал hp", floatround(hp));
}
alias:sethp("hp");
CMD:a(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static result[109], prefix[73];
    result[0] = EOS, prefix[0] = EOS;
    if(sscanf(params,"s[109]", result)) return SCM(playerid, COLOR_RED, !"Используйте: /a [текст]");
	if(strlen(result) > 109) return 0;
	SendAdminsMessagef(COLOR_ACHAT, "[A] %s[%i]: %s", PN(playerid), playerid, result);
	f(str_1, sizeof(str_1), "[A] %s", result);
	return aml(18, playerid, "", str_1, 10);
}
CMD:iint(playerid, params[])
{
    if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new interiorid;
    if(sscanf(params, "d", interiorid)) return SCM(playerid, COLOR_RED, !"Используй: /iint [id]");
    SetPlayerInterior(playerid, interiorid);
	return 1;
}
CMD:vv(playerid, params[])
{
    if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new virtualworld;
    if(sscanf(params, "d", virtualworld)) return SCM(playerid, COLOR_RED, !"Используй: /vv [id]");
    SetPlayerVirtualWorld(playerid, virtualworld);
	return 1;
}
CMD:spcars(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius;
    if(sscanf(params, "f", radius)) return SCM(playerid, COLOR_RED, !"Используйте: /spcars [радиус]");
    if(!(1.0 <= radius <= 100.0)) return SCM(playerid, COLOR_RED, !"Используйте: /spcars [радиус > 0 или < 100]");
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Vehicle)
    {
        if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
        {
            if(IsBazarVehicle(i)) continue;
            SetVehicleToRespawn(i);
        }
    }
    SendAdminsMessagef(COLOR_ORANGE, "%s[%i] Заспавнил транспорт в радиусе %.01f", PN(playerid), playerid, radius);
    f(str_1, sizeof(str_1), "Заспавнил транспорт в радиусе %.01f", radius);
	return aml(18, playerid, "", str_1);
}
CMD:skinall(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new Float:radius, skinid; else return SCM(playerid, COLOR_RED, !"Используй: /skinall [radius] [skinID]");
    if(!(1.0 <= radius <= 100.0)) return SCM(playerid, COLOR_RED, !"Используйте: /skinall [радиус > 0 или < 100]");
    //if(!(1 <= skinid <= 311)) return 0;
	new Float:x, Float:y, Float:z, num = 0;
	GetPlayerPos(playerid, x, y, z);
	foreach(new i: Player)
    {
    	if(i == playerid) continue;
        if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
		{
			SetPlayerSkinEx(i, skinid);
			num ++;
			TogglePlayerControllable(i, true);
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали скин %i игрокам в вашем радиусе.", num);
	SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал временный скин %i игрокам!", PN(playerid), num);
    f(str_1, sizeof(str_1), "выдал временный скин %i игрокам", num);
	return aml(18, playerid, "", str_1);
}
CMD:gunall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:x,Float:y,Float:z;
    new Float:id,mid,did;
    if(sscanf(params,"fii",id,mid,did)) return SCM(playerid, COLOR_RED, !"Используй: /gunall [radius] [gunid] [ammo]");
    if(id < 1 || id > 100) return SCM(playerid, COLOR_RED, !"Используйте: /gunall [радиус > 0 или < 100]");
 	switch(mid)
 	{
 		case 35..40: if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_GREY, !"Данное оружие нельзя выдавать!");
 	}
    GetPlayerPos(playerid, x, y, z);
    new num;
    foreach(new i: Player) if(IsPlayerInRangeOfPoint(i,id,x,y,z)) GiveGun(i,mid,did),num++;
    f(str_2,sizeof(str_2),"[A] %s выдал оружие %s %i игрокам!",PN(playerid),WeaponNames[mid],num);
    SendAdminsMessage(COLOR_GREEN,str_2);
    f(str_1, sizeof(str_1), "выдал оружие %s %i игрокам", WeaponNames[mid], num);
	return aml(18, playerid, "", str_1);
}
CMD:spplayers(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /spplayers [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /spplayers [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
            PlayerSpawn(i);
			num++;
		}
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно заспавнили %i игроков в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s заспавнил %i игроков!",PN(playerid), num);
    f(str_1, sizeof(str_1), "заспавнил %i игроков", num);
	return aml(18, playerid, "", str_1);
}
CMD:azakon(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /azakon [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /azakon [радиус > 0 или < 100]");
	new num;
	GetPlayerPos(playerid, x, y, z);
	foreach(new i: Player)
	{
		if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
	        r_wanted = radius;
	        position_unjail[0] = x;
	        position_unjail[1] = y;
	        position_unjail[2] = z;
			num++;
		}
	}
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали игнор звезд %i игроков в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал игнор звезд %i игрокам!",PN(playerid),num);
    f(str_1, sizeof(str_1), "выдал игнор звезд %i игрокам", num);
	return aml(18, playerid, "", str_1);
}
CMD:freezeall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /freezeall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /freezeall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
		    TogglePlayerControllable(i,false);
			num++;
		}
	}
    SCMf(playerid,COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно заморозили %i игроков в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s заморозил %i игроков!",PN(playerid), num);
    f(str_1, sizeof(str_1), "заморозил %i игроков", num);
	return aml(18, playerid, "", str_1);
}
CMD:unfreezeall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /unfreezeall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /unfreezeall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
	foreach(new i: Player)
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		{
		    TogglePlayerControllable(i,true);
			num++;
		}
	}
    SCMf(playerid,COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно разморзил %i игроков в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s разморозил %i игроков!", PN(playerid), num);
    f(str_1, sizeof(str_1), "разморозил %i игроков", num);
	return aml(18, playerid, "", str_1);
}
CMD:armourall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /armourall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /armourall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            J_SetPlayerArmour(i,100);
            num++;
        }
    }
    SCMf(playerid,COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали броню %i игрокам в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал броню %i игрокам!", PN(playerid), num);
    f(str_1, sizeof(str_1), "выдал броню %i игрокам", num);
	return aml(18, playerid, "", str_1);
}
CMD:unarmourall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /unarmourall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /unarmourall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            J_SetPlayerArmour(i,0);
            num++;
        }
    }
    SendAdminsMessagef(COLOR_GREEN, "[A] %s забрал броню %i игрокам!", PN(playerid), num);
    f(str_1, sizeof(str_1), "забрал броню %i игрокам", num);
	return aml(18, playerid, "", str_1);
}
CMD:setarmour(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new target, Float:armour;
	if(sscanf(params, "uf", target, armour)) return SCM(playerid, COLOR_RED, !"Используйте: /setarmour [id] [ammount]");
	if(armour > 1000.0) return SCM(playerid, COLOR_RED, !"Используйте: /setarmour [id] am < 1000");
	if(armour < 0.0) return SCM(playerid, COLOR_RED, !"Используйте: /setarmour [id] am > 0");
	if(target == INVALID_PLAYER_ID) return 0;
	J_SetPlayerArmour(target, armour);
	SendAdminsMessagef(COLOR_GREY, "[A] Администратор %s установил игроку %s[%i] показатель брони на %.0f", PN(playerid), PN(target), target, armour);
    f(str_1, sizeof(str_1), "установил показатель брони на %.0f игроку", armour);
	return aml(1, playerid, PN(target), str_1);
}
CMD:hpall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",radius)) return SCM(playerid, COLOR_RED, !"Используйте: /hpall [радиус]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /hpall [радиус > 0 или < 100]");
    new num;
    GetPlayerPos(playerid, x, y, z);
    foreach(new i: Player)
    {
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            J_SetPlayerHealth(i, 100);
            num++;
        }
    }
    SCMf(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы успешно выдали хп %i игрокам в вашем радиусе.", num);
    SendAdminsMessagef(COLOR_GREEN, "[A] %s выдал здоровье %i игрокам!", PN(playerid), num);
    f(str_1, sizeof(str_1), "выдал здоровье %i игрокам", num);
	return aml(18, playerid, "", str_1);
}
CMD:weapall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new Float:radius, Float:x, Float:y, Float:z;
    if(sscanf(params,"f", radius)) return SCM(playerid, COLOR_RED, !"Используй: /weapall [radius]");
    if(radius < 1 || radius > 100) return SCM(playerid, COLOR_RED, !"Используйте: /weapall [радиус > 0 или < 100]");
    GetPlayerPos(playerid, x, y, z);
    new num;
    foreach(new i: Player)
    {
    	if(i == playerid) continue;
        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
        {
            ResetGun(i);
            num++;
        }
    }
    SendAdminsMessagef(COLOR_GREEN, "[A] %s удалил оружие у %i игроков!",PN(playerid), num);
    f(str_1, sizeof(str_1), "удалил оружие у %i игроков", num);
	return aml(18, playerid, "", str_1);
}
CMD:givegun(playerid, params[])
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(sscanf(params, "udd", params[0], params[1], params[2])) return SCM(playerid, COLOR_RED, !"Используй: /givegun [id] [gunid] [ammo]");
	if(params[0] == INVALID_PLAYER_ID) return 0;
    if(CheckIsASuccesIP(playerid)) return 0;
    if(params[1] < 0 || params[1] > 47) return SCM(playerid, COLOR_GREY, !"ID оружия не может быть ниже 0 и больше 47!");
 	if(params[2] > 500) return SCM(playerid, COLOR_GREY, !"Не больше 500 патронов!");
 	switch(params[1])
 	{
 		case 35..40: if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_GREY, !"Данное оружие нельзя выдавать!");
 	}
	GiveGun(params[0], params[1], params[2]);
	SendAdminsMessagef(COLOR_GREY, "[A] %s [ID: %i] выдал %s игроку %s[%i] !", PN(playerid), playerid, WeaponNames[params[1]], PN(params[0]), params[0]);
	return aml(13, playerid, PN(params[0]), WeaponNames[params[1]], params[2]);
}
alias:givegun("ggun");
CMD:smp(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(sscanf(params,"s[100]",params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /smp [текст]");
	if(IsAIP(playerid, params[0])) return 0;
	f(str_4, 145,"[МП] %s: %s!!", cPN(playerid), params[0]);
	ProxDetector(100, playerid, str_4, COLOR_GOLD, 1);
	f(str_1, sizeof(str_1),"[МП] %s", params[0]);
    return aml(18, playerid, "", str_1, 10);
}
CMD:eventmenu(playerid)
{
	if(PI[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	return ac_ShowPlayerDialog(playerid, 4690),ShowPlayerDialogf(playerid, 4690, DIALOG_STYLE_LIST, !"{BFBBBA}{9ACD32}Teleport Event", !"Выбрать", !"Закрыть",
	"\
		{9ACD32}» {FFFFFF}Позиция телепорта\n\
	    {9ACD32}» {FFFFFF}\"%s\"\n\
	    {9ACD32}» {FFFFFF}Выдача HP: %i\n\
	    {9ACD32}» {FFFFFF}Выдача Брони: %i\n\
	    {9ACD32}» {FFFFFF}Отбирать оружие при телепорте: %s\n\
	    {9ACD32}» {FFFFFF}Повторный телепорт: %s\n\
	    {9ACD32}» {FFFFFF}Лимит игроков: %i игроков\n\
		{9ACD32}» {FFFFFF}Время действия телепорта: %i секунд\n\
		{9ACD32}» %s{FFFFFF} телепорт\
	", MPName, MPHealth, MPArmour, MPWeapon ? ("{05B212}Нет{FFFFFF}") : ("{FF1C05}Да{FFFFFF}"), MPTeleport ? ("{FF1C05}Запрещён{FFFFFF}") : ("{05B212}Разрешён{FFFFFF}"), MPPlayerLimit, MPTimeStatic, Teleport ? ("{FF1C05}Остановить{FFFFFF}") : ("{05B212}Запустить{FFFFFF}"));
}
CMD:gotp(playerid)
{
	if(!Teleport) return SCM(playerid, -1, !"[Ошибка] Мероприятие еще не начиналось или время телепорта уже вышло.");
    if(MPTeleport) return SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}По правилам мероприятия повторно телепортироватся запрещено.");
	if(!MPWeapon) return SPD(playerid, 4697, DIALOG_STYLE_MSGBOX, !"Предупреждение", !"{FFFFFF}По правилам мероприятия Ваше оружие будет изьято.\n\nВы согласны с этим?", !"Да", !"Нет");
	J_SetPlayerArmour(playerid, MPArmour);
	J_SetPlayerHealth(playerid, MPHealth);
    SetPlayerInterior(playerid, TeleportInfoq[1]);
	SetPlayerVirtualWorld(playerid, TeleportInfoq[0]);
	J_SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
	SCM(playerid, COLOR_LIGHTBLUE, !"[Мероприятие] {FFFFFF}Вы телепортированы на мероприятие.");
	MPPlayersLimit --;
	if(!MPPlayersLimit)
	{
	    SCMAll(0x40FF00FF, !"[Мероприятие]{FFFFFF} Телепорт на мероприятие закрыт, лимит игроков закончился.");
		Teleport = false;
		MPTime = 60;
		for(new i; i < 14; i++) TextDrawHideForAll(TeleportEvent[i]);
	}
	if(MPTeleport) MPTeleportPlayer{playerid} = true;
	return 1;
}
alias:speak("sp");
CMD:speak(playerid, params[])
{
    if(PI[playerid][pAdmin] < 8) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new targetid;
    static text[64];
    if(sscanf(params, "us[64]", targetid, text)) return SCM(playerid, COLOR_RED, !"Используй: /speak [id] [Текст]");
    if(targetid == INVALID_PLAYER_ID || targetid == playerid) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
	if(PI[playerid][pAdmin] < 8) SendAdminsMessagef(COLOR_GREY, "[A] %s[%i] сказал (%s) от имени игрока %s[%i]",PN(playerid), playerid, text, PN(targetid), targetid);
    f(str_1, sizeof(str_1), "сказал (%s) от имени игрока", text);
    aml(1, playerid, PN(targetid), str_1);
    return OnPlayerText(targetid, text);
}
CMD:cmd(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, cmd[145];
    if(sscanf(params, "us[145]", id, cmd)) return SCM(playerid, COLOR_RED, !"Используй: /cmd [id] [cmd]");
    if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден!");
    PC_EmulateCommand(id, cmd);
    f(str_1, sizeof(str_1), "ввел команду (%s) от имени игрока", cmd);
    return aml(1, playerid, PN(id), str_1);
}
CMD:ao(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static Admin[73], text[94];
    Admin[0] = EOS;
    if(CheckIsASuccesIP(playerid)) return 0;
	if(sscanf(params, "s[94]", text)) return SCM(playerid, COLOR_RED, !"Используйте: /ao [текст]");
	if(strlen(text) > 94) return SCM(playerid, COLOR_RED, !"Используйте: /ao [текст]");
    if(CheckIsADomen(playerid, text)) return 1;
    if(IsAIP(playerid, text)) return 1;
	switch(PI[playerid][pAdmin])
	{
		case ADM_MODER: Admin = "Младший Модератор";
		case ADM_SUPER_MODER: Admin = "Модератор";
		case ADM_ADMIN: Admin = "Старший Модератор";
		case ADM_SUPER_ADMIN: Admin = "Администратор";
		case ADM_GRAND_ADMIN: Admin = "Куратор";
		case ADM_DEPUTY_ADMIN: Admin = "Заместитель ГА";
		case ADM_MAIN_ADMIN: Admin = "Главный Администратор";
		case ADM_GRAND: Admin = "Основатель";
	}
	if(strlen(PI[playerid][pPrefix])) f(Admin, sizeof(Admin), "%s{FFD700}", PI[playerid][pPrefix]);
    SCMAllf(COLOR_GOLD, " %s %s: %s", Admin, PN(playerid), text);
    f(str_1, sizeof(str_1), "написал в /ao: %s", text);
    return aml(18, playerid, "", str_1, 10);
}
CMD:taxi(playerid, params[])
{
	new carid = GetPlayerVehicleID(playerid);
	if(PI[playerid][pJob] != JOB_TAXI) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не таксист!");
	if(!IsATaxi(carid))return 0;
	if(!TaxiTarif[playerid]) SPD(playerid, 56, 1, !"Тариф", !"{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{9ACD32}- Тариф не менее $1 и не более $70\nСлоган не более 30-и символов", !"Ок", !"Отмена");
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже установили тариф!");
	return 1;
}
CMD:kiss(playerid, params[])
{
	extract params -> new player:target; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /kiss [id]");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(target)) return 1;
	if(animan{playerid} || animan{target}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже используете анимации!");
 	if(PI[playerid][pHeal] > 0 || PI[target][pHeal] > 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
    if(Cuffed{playerid} || Cuffed{target}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
    if(CuffedTime[playerid] || CuffedTime[target]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы парализованы!");
	if(GetPlayerVirtualWorld(playerid) == 534 || GetPlayerVirtualWorld(target) == 534) return 0;
	if(target == INVALID_PLAYER_ID) return 0;
	if(PI[target][pAdmin]) return 0;
	if(playerid == target) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете поцеловать сами себя!");
	if(!ProxDetectorS(3.0, playerid, target)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
	if(IsPlayerInRangeOfPoint(playerid, 100.0, 36.26, 2242.85, 1501.65) || IsPlayerInRangeOfPoint(target, 100.0, 36.26, 2242.85, 1501.65)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Тут нельзя целоваться!");
    if(GetPVarInt(playerid, !"payer") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    SetPVarInt(playerid, !"payer", gettime() + 5);
    SetPlayerChatBubblef(playerid, COLOR_PURPLE, 30.0, 5000, "Поцеловал(a) %s", PN(target));
    SetPlayerChatBubblef(target, COLOR_PURPLE, 30.0, 5000, "Поцеловал(a) %s", PN(playerid));
    new Float:angle;
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(target, angle + 180);
	ApplyAnimation(playerid, !"BD_FIRE", !"GRLFRD_KISS_03", 4.0, 0, 0, 0, 0, 0);
	return ApplyAnimation(target, !"BD_FIRE", !"PLAYA_KISS_03", 4.0, 0, 0, 0, 0, 0);
}
CMD:anims(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid) == 534) return 0;
	if(PlayerLieHeal[playerid]) return 0;
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В машине вы не можете использовать анимации!");
    if(animan{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже используете анимации!");
	if(PI[playerid][pHeal]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}В больнице нельзя!");
    if(Cuffed{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
    if(CuffedTime[playerid]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы парализованы!");
    extract params -> new animid; else SCM(playerid, COLOR_LIGHTRED, !"Используй: {FFFFFF}( /anims id ) чтобы быстрей переключаться.");
	switch(animid)
	{
        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
        case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
        case 5: ApplyAnimation(playerid, !"DANCING", !"DAN_Left_A", 4.1, 1, 0, 0, 0, 0, 0);
        case 6: ApplyAnimation(playerid, !"DANCING", !"dnce_M_a", 4.1, 1,0, 0, 0, 0, 0);
        case 7: ApplyAnimation(playerid, !"ON_LOOKERS", !"wave_loop", 4.1, 1, 1, 1, 0, 0);
        case 8: ApplyAnimation(playerid, !"BEACH", !"bather", 4.0, 1, 0, 0, 0, 0);
        case 9: ApplyAnimation(playerid, !"ped", !"endchat_03", 4.1, 1, 0, 0, 0, 0, 0);
        case 10: ApplyAnimation(playerid, !"benchpress", !"gym_bp_celebrate", 4.0, 0, 0, 0, 0, 0);
		case 11: ApplyAnimation(playerid, !"PED", !"COWER", 4.1, 0, 0, 0, 0, 0, 1);
		case 12: ApplyAnimation(playerid, !"SHOP", !"ROB_SHIFTY", 4.1, 0, 0, 0, 0, 0, 1);
		case 13: ApplyAnimation(playerid, !"SHOP", !"ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0, 1);
		case 14: ApplyAnimation(playerid, !"COP_AMBIENT", !"Coplook_loop", 4.0, 0, 1, 1, 1, -1);
		case 15: ApplyAnimation(playerid, !"FOOD", !"EAT_VOMIT_P", 4.1, 0, 0, 0, 0, 0, 1);
		case 16: ApplyAnimation(playerid, !"FOOD", !"EAT_BURGER", 4.1, 0, 0, 0, 0, 0, 1);
		case 17: ApplyAnimation(playerid, !"DEALER", !"DEALER_DEAL", 4.1, 0, 0, 0, 0, 0, 1);
		case 18: ApplyAnimation(playerid, !"CRACK", !"CRCKDETH2", 4.1, 0, 0, 0, 0, 0, 1);
		case 19: ApplyAnimation(playerid, !"LOWRIDER", !"M_SMKLEAN_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 20: ApplyAnimation(playerid, !"LOWRIDER", !"F_SMKLEAN_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 21: ApplyAnimation(playerid, !"BEACH", !"ParkSit_M_loop", 4.0, 0, 0, 0, 1, 1, 1);
		case 22: ApplyAnimation(playerid, !"PARK", !"Tai_Chi_Loop",4.0,1,0,0,0,0,1);
		case 23: ApplyAnimation(playerid, !"BAR", !"dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
		case 24: ApplyAnimation(playerid, !"DANCING", !"DAN_RIGHT_A", 4.1, 0, 0, 0, 0, 0, 1);
		case 25: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_DEF_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 26: ApplyAnimation(playerid, !"MISC", !"PLYR_SHKHEAD", 4.1, 0, 0, 0, 0, 0, 1);
		case 27: ApplyAnimation(playerid, !"BSKTBALL", !"BBALL_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
		case 28: ApplyAnimation(playerid, !"CAMERA", !"camstnd_cmon", 4.0, 0, 0, 0, 0, 0);
		case 29: ApplyAnimation(playerid, !"SHOP", !"SHP_ROB_HANDSUP", 4.1, 0, 0, 0, 0, 0, 1);
		case 30: ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE2", 4.1, 0, 0, 0, 0, 0, 1);
		case 31: ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE4", 4.1, 0, 0, 0, 0, 0, 1);
		case 32: ApplyAnimation(playerid, !"DEALER", !"DEALER_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
		case 33: ApplyAnimation(playerid, !"GANGS", !"LEANIDLE", 4.1, 0, 0, 0, 0, 0, 1);
		case 34: ApplyAnimation(playerid, !"GANGS", !"SHAKE_CARSH", 4.1, 0, 0, 0, 0, 0, 1);
		case 35: ApplyAnimation(playerid, !"GANGS", !"SMKCIG_PRTL", 4.1, 0, 0, 0, 0, 0, 1);
		case 36: ApplyAnimation(playerid, !"BEACH", !"ParkSit_W_loop", 3.0, 0, 1, 1, 1, 0);
		case 37: ApplyAnimation(playerid, !"INT_HOUSE", !"LOU_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 38: ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_BORED_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 39: ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_IDLE_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 40: ApplyAnimation(playerid, !"INT_OFFICE", !"OFF_SIT_TYPE_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 41: ApplyAnimation(playerid, !"INT_SHOP", !"SHOP_SHELF", 4.1, 0, 0, 0, 0, 0, 1);
		case 42: ApplyAnimation(playerid, !"JST_BUISNESS", !"girl_02", 4.1, 0, 0, 0, 1, 1, 1);
		case 43: ApplyAnimation(playerid, !"KISSING", !"GF_STREETARGUE_02", 4.1, 0, 0, 0, 0, 0, 1);
		case 44: ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0, 1);
		case 45: ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_01", 4.0, 0, 0, 0, 0, 0, 1);
		case 46: ApplyAnimation(playerid, !"KISSING", !"Grlfrd_Kiss_02", 4.0, 0, 0, 0, 0, 0, 1);
		case 47: ApplyAnimation(playerid, !"LOWRIDER", !"RAP_B_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 48: ApplyAnimation(playerid, !"MEDIC", !"CPR", 4.0, 0, 0, 0, 0, 0);
		case 49: ApplyAnimation(playerid, !"MISC", !"BITCHSLAP", 4.1, 0, 0, 0, 0, 0, 1);
		case 50: ApplyAnimation(playerid, !"MISC", !"BNG_WNDW", 4.1, 0, 0, 0, 0, 0, 1);
		case 51: ApplyAnimation(playerid, !"MISC", !"KAT_THROW_K", 4.1, 0, 0, 0, 0, 0, 1);
		case 52: ApplyAnimation(playerid, !"MISC", !"SEAT_LR", 4.1, 0, 0, 0, 0, 0, 1);
		case 53: ApplyAnimation(playerid, !"PED", !"SEAT_IDLE", 4.1, 0, 0, 0, 0, 0, 1);
		case 54: ApplyAnimation(playerid, !"ON_LOOKERS", !"LKUP_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 55: ApplyAnimation(playerid, !"ON_LOOKERS", !"POINTUP_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 56: ApplyAnimation(playerid, !"ON_LOOKERS", !"PANIC_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 57: ApplyAnimation(playerid, !"ON_LOOKERS", !"SHOUT_02", 4.1, 0, 0, 0, 0, 0, 1);
		case 58: ApplyAnimation(playerid, !"GHANDS", !"gsign1LH", 4.0, 0, 0, 0, 0, 1, 1);
		case 59: ApplyAnimation(playerid, !"PED", !"IDLE_taxi", 4.0, 0, 0, 0, 0, 0);
		case 60: ApplyAnimation(playerid, !"POLICE", !"DOOR_KICK", 4.1, 0, 0, 0, 0, 0, 1);
		case 61: ApplyAnimation(playerid, !"POLICE", !"COPTRAF_STOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 62: ApplyAnimation(playerid, !"RIOT", !"RIOT_ANGRY_B", 4.1, 0, 0, 0, 0, 0, 1);
		case 63: ApplyAnimation(playerid, !"LOWRIDER", !"RAP_C_Loop", 4.0, 1, 0, 0, 0, 0);
		case 64: ApplyAnimation(playerid, !"SWAT", !"GNSTWALL_INJURD", 4.1, 0, 0, 0, 0, 0, 1);
		case 65: ApplyAnimation(playerid, !"SWEET", !"SWEET_INJUREDLOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 66: ApplyAnimation(playerid, !"RIOT", !"RIOT_ANGRY", 4.0, 0, 0, 0, 0, 0);
		case 67: ApplyAnimation(playerid, !"GHANDS", !"GSIGN2", 4.1, 0, 0, 0, 0, 0, 1);
		case 68: ApplyAnimation(playerid, !"GHANDS", !"GSIGN4", 4.1, 0, 0, 0, 0, 0, 1);
		case 69: ApplyAnimation(playerid, !"GHANDS", !"GSIGN5", 4.1, 0, 0, 0, 0, 0, 1);
		case 70: ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE1", 4.1, 0, 0, 0, 0, 0, 1);
		case 71: ApplyAnimation(playerid, !"SPRAYCAN", !"spraycan_full", 4.0, 0, 0, 0, 0, 0);
		case 72: ApplyAnimation(playerid, !"GRAFFITI", !"SPRAYCAN_FIRE", 4.1, 0, 0, 0, 0, 0, 1);
		case 73: ApplyAnimation(playerid, !"SMOKING", !"M_SMKSTND_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 74: ApplyAnimation(playerid, !"RIOT", !"RIOT_CHANT", 4.1, 0, 0, 0, 0, 0, 1);
		case 75: ApplyAnimation(playerid, !"RIOT", !"RIOT_PUNCHES", 4.1, 0, 0, 0, 0, 0, 1);
		case 76: ApplyAnimation(playerid, !"PED", !"fucku", 4.0, 0, 0, 0, 0, 0, 1);
		case 77: ApplyAnimation(playerid, !"LOWRIDER", !"RAP_A_Loop", 4.0, 1, 0, 0, 0, 0);
		case 78: ApplyAnimation(playerid, !"CAR", !"FIXN_CAR_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 79: ApplyAnimation(playerid, !"CAR_CHAT", !"CAR_TALKM_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		case 80: ApplyAnimation(playerid, !"CRACK", !"BBALBAT_IDLE_01", 4.1, 0, 0, 0, 0, 0, 1);
		case 81: ApplyAnimation(playerid, !"CRACK", !"BBALBAT_IDLE_02", 4.1, 0, 0, 0, 0, 0, 1);
		case 82: ApplyAnimation(playerid, !"GHANDS", !"GSIGN1", 4.0, 0, 0, 0, 0, 1, 1);
		case 83: ApplyAnimation(playerid, !"GHANDS", !"GSIGN3", 4.0, 0, 0, 0, 0, 1, 1);
		case 84: ApplyAnimation(playerid, !"GRAVEYARD", !"mrnF_loop", 4.1, 0, 1, 1, 0, 0);
		case 85: ApplyAnimation(playerid, !"MISC", !"scratchballs_01", 4.0, 0, 0, 0, 0, 0);
		case 86: ApplyAnimation(playerid, !"INT_HOUSE", !"LOU_In", 4.1, 0, 0, 0, 1, 1, 1);
		case 87: ApplyAnimation(playerid, !"SUNBATHE", !"Lay_Bac_in", 3.0, 0, 1, 1, 1, 0);
		case 88: ApplyAnimation(playerid, !"BEACH", !"SitnWait_loop_W", 4.0, 1, 0, 0, 0, 0);
		case 89: ApplyAnimation(playerid, !"PED", !"DLE_armed", 4.1, 0, 1, 1, 1, 1, 1);
		case 90: ApplyAnimation(playerid, !"PED", !"Gun_stand", 4.1, 0, 1, 1, 1, 1, 1);
		case 91: ApplyAnimation(playerid, !"KISSING", !"gfwave2", 4.1, 0, 1, 1, 0, 0);
		case 92: ApplyAnimation(playerid, !"PED", !"BIKE_fall_off", 4.1, 0, 1, 1, 1, 1, 1);
		case 93: ApplyAnimation(playerid, !"PED", !"BIKE_pickupL", 4.1, 0, 0, 0, 0, 0, 1);
		case 94: ApplyAnimation(playerid, !"GANGS", !"hndshkaa", 4.0, 0, 0, 0, 0, 0, 1);
		case 95: ApplyAnimation(playerid, !"GANGS", !"hndshkfa", 4.0, 0, 0, 0, 0, 0, 1);
		case 96: ApplyAnimation(playerid, !"GANGS", !"hndshkfa_swt", 4.0, 0, 0, 0, 0, 0, 1);
		case 97: ApplyAnimation(playerid, !"GANGS", !"shake_carK", 4.0, 0, 0, 0, 0, 0);
		case 98: ApplyAnimation(playerid, !"GANGS", !"shake_cara", 4.0, 0, 0, 0, 0, 0);
		case 99: ApplyAnimation(playerid, !"PED", !"KO_shot_stom", 4.0, 0, 1, 1, 1, 0);
		case 100: ApplyAnimation(playerid, !"PED", !"EV_DIVE", 4.0, 0, 1, 1, 1, 0);
		case 101: ApplyAnimation(playerid, !"PED", !"BIKE_fallR", 4.0, 0, 1, 1, 1, 0);
		case 102: ApplyAnimation(playerid, !"GYMNASIUM", !"GYMshadowbox", 4.0, 1, 1, 1, 1, 0);
		case 103: ApplyAnimation(playerid, !"PED", !"gang_gunstand", 3.0, 0, 1, 1, 1, 0);
		default:
		{
		    return SPD(playerid, 133, DIALOG_STYLE_LIST, !"Анимации",
		        !"[1] Танцевать (1)\n\
		        [2] Танцевать (2)\n\
		        [3] Танцевать (3)\n\
		        [4] Танцевать (4)\n\
		        [5] Танцевать (5)\n\
		        [6] Танцевать (6)\n\
		        [7] Махать рукой\n\
		        [8] Лечь на землю\n\
		        [9] Попрощаться\n\
		        [10] Читать рэп\n\
		        [11] Сесть закрыв руками голову\n\
		        [12] Надеть маску\n\
		        [13] Вытянуть руки перед собой\n\
		        [14] Сложить руки вмести\n\
		        [15] Блювать (съел что-то не то...)\n\
		        [16] Перекусить\n\
		        [17] Предложить наркотики\n\
		        [18] Лежать на земле (подёргиваясь)\n\
		        [19] Курить по мужски\n\
		        [20] Курить по женски\n\
		        [21] Присесть на землю\n\
		        [22] Восточное единоборство\n\
		        [23] Выпить напиток\n\
		        [24] Танцевать на одной ноге\n\
		        [25] Встать в позу вратаря\n\
		        [26] Facepalm\n\
		        [27] Элемент восточного танца\n\
		        [28] Позвать кого-то\n\
		        [29] Поднять руки вверъ\n\
		        [30] Лежать на боку на земле\n\
		        [31] Лежать на спине на земле\n\
		        [32] Стоять как диллер (оборачиваясь)\n\
		        [33] Облокотиться спиной\n\
		        [34] Толкнуть боком\n\
		        [35] Съесть что-то (правой рукой)\n\
		        [36] Лечь, оперевшись на ладонь\n\
		        [37] Сесть на стул\n\
		        [38] Сидеть уставшим за компьютером\n\
		        [39] Сидеть за столлом\n\
		        [40] Сидеть и печатать\n\
		        [41] Взять что-то и рассмотреть\n\
		        [42] Сесть, закинув ногу на ногу\n\
		        [43] Отказаться от чего-либо\n\
		        [44] Поцелуй 1\n\
		        [45] Поцелуй 2\n\
		        [46] Поцелуй 3\n\
		        [47] Размахивать руками на месте\n\
		        [48] Искуственное дыхание\n\
		        [49] Пощёчины для лежачего\n\
		        [50] Подглядывать через что-то\n\
		        [51] Элемент восточных единоборств\n\
		        [52] Сесть на стул (2)\n\
		        [53] Сесть на стул (3)\n\
		        [54] Смотреть в небо\n\
		        [55] Указать рукой наверх\n\
		        [56] Очковать чего-то (быть в страхе)\n\
		        [57] Призывать к чему-то (забастовка)\n\
		        [58] Гангстерский жест\n\
		        [59] Голосовать на остановке\n\
		        [60] Удар ногой\n\
		        [61] Стучаться в дверь\n\
		        [62] Устроить бунт\n\
		        [63] Пританцовывать\n\
		        [64] Лежать на земле (как быдло)\n\
		        [65] Плохое самочувствие\n\
		        [66] Приветствие (гангста)\n\
		        [67] Приветствие\n\
		        [68] Жестикулировать (1)\n\
		        [69] Жестикулировать (2)\n\
		        [70] Сидеть раненым\n\
		        [71] Наносить граффити (1)\n\
		        [72] Наносить граффити (2)\n\
		        [73] Курить\n\
		        [74] Болельщик (2)\n\
		        [75] Болельщик (3)\n\
		        [76] Показать фак\n\
		        [77] Читать реп\n\
		        [78] Чинить машину\n\
		        [79] Облокотиться на машину\n\
		        [80] Держать биту (1)\n\
		        [81] Держать биту (2)\n\
		        [82] Жестикулировать (3)\n\
		        [83] Жестикулировать (4)\n\
		        [84] Плакать\n\
		        [85] Чесать яйца\n\
		        [86] Сесть [3]\n\
		        [87] Ложиться [2]\n\
		        [88] Ложиться [4]\n\
		        [89] Встать в стойку с AK-47\n\
		        [90] Встать в стойку с Deagle\n\
		        [91] Махать рукой\n\
		        [92] Упасть\n\
		        [93] Подняться\n\
		        [94] Поздороваться [1]\n\
		        [95] Поздороваться [2]\n\
		        [96] Поздороваться [3]\n\
		        [97] Ударить с ноги\n\
		        [98] Толкнуть\n\
		        [99] Умирать\n\
		        [100] Прыгнуть\n\
		        [101] Перекатиться\n\
		        [102] Бокс\n\
		        [103] Навести пушку",
		        !"Выбрать", !"Отмена");
		}
	}
	if(animid != 0)
	{
		animan{playerid} = true;
		TextDrawShowForPlayer(playerid, StopAnimation);
	}
	return 1;
}
alias:anims("anim", "animlist");
CMD:park(playerid)
{
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Вы должны быть за рулём cвоего авто!");
	if(!IsPlayerInHisVehicle(playerid)) return SCM(playerid, COLOR_RED, !"Это не ваша машина!");
	for(new i; i < MAX_ZONE; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, nzone[i][zDistance], nzone[i][zEnter_x], nzone[i][zEnter_y], nzone[i][zEnter_z]))
	    {
	        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"{B8F64D}Подсказка", !"{FFFFFF}В этом месте {B8F64D}нельзя {FFFFFF}припарковать личный авто!", !"Понял", !"");
	        return 1;
	    }
	}
	new carid = GetPlayerVehicleID(playerid);
	new number = GetVehicleID(carid);
	DeleteFromParking(number);
	new Float: car_x, Float: car_y, Float: car_z;
	GetVehiclePos(carid, car_x, car_y, car_z);
	CarInfo[number][cParkedInStanartParking] = 0;
	CarInfo[number][cPos_X] = car_x;
	CarInfo[number][cPos_Y] = car_y;
	CarInfo[number][cPos_Z] = car_z + 0.8;
	GetVehicleZAngle(carid, CarInfo[number][cPos_A]);
	CarInfo[number][cVirtualWorld] = GetVehicleVirtualWorld(carid);
	CarInfo[number][cInterior] = GetPlayerInterior(playerid);
	RespawnOwnableCar(playerid, carid, 1);
	if(GarageEntered[playerid] != -1)
	{
		if(GetPlayerVirtualWorld(playerid) != 0)
		{
			CarInfo[number][cParkedInGarage] = 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно припарковали ваш автомобиль в гараже!\nТеперь ваша машина будет {ECE146}спавнится{FFFFFF} в этом месте.\nТеперь вам не надо платить {ECE146}налог{FFFFFF} за авто, которое стоит в гараже!\n\n", !"Понял", !"");
		}
	}
	else if(ParkingEntered[playerid] != -1)
	{
		if(GetPlayerVirtualWorld(playerid) != 0)
		{
			CarInfo[number][cParkedInParking] = 1;
			SPD(playerid, 0, DIALOG_STYLE_MSGBOX, !"", !"\n\n{FFFFFF}Вы успешно припарковали ваш автомобиль в подземном паркинге!\nТеперь ваша машина будет {ECE146}спавнится{FFFFFF} в этом месте.\nТеперь вам не надо платить {ECE146}налог{FFFFFF} за авто, которое стоит в гараже!\n\n", !"Понял", !"");
		}
	}
	else if(CarInfo[number][cParkedInGarage]) CarInfo[number][cParkedInGarage] = 0;
	SaveOwnableCar(number);
	return 1;
}
CMD:sellcar(playerid)
{
    new carid = GetPlayerVehicleID(playerid);
    new number = GetVehicleID(carid);
	if(!IsAOwnableCar(number)) return 0;
	if(!IsPlayerInHisVehicle(playerid) || !IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_GREY, !"Вы должны сидеть в личном транспорте");
	if((pTemp[playerid][pSellCar] != -1 && autoBazarInfo[pTemp[playerid][pSellCar]][autoBazarCarID] == carid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете продать транспорт, пока вы торгуете на автобазаре");
	return SPD(playerid, 803, DIALOG_STYLE_MSGBOX, !"Предупреждение", !"{FFFFFF}Вы действительно хотите продать свой автомобиль?\nВнимание при продаже авто вам дадут только\nне большую часть от его гос. стоимости", !"Дальше", !"Отмена");
}
CMD:tradecar(playerid, params[])
{
    new id,dop;
    new carid = GetPlayerVehicleID(playerid);
    new caridd = GetVehicleID(carid);
    if(!IsABoat(carid))
    {
	    if(IsPlayerInRangeOfPoint(playerid, 250, -2123.6548,-854.3079,32.0939))
		{
		    if(sellcarto[playerid]>gettime())return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Делать предложение о покупке/обмене можно раз в минуту!");
		    if(sscanf(params,"ud",id,dop)) return SCM(playerid, COLOR_RED, !"Используйте: /tradecar [id] [Доплата (если без доплаты то ставьте 0)]");

			if(!PI[id][pObmen]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок отключил возможность предлагать ему продажу/обмен!");
			if(dop>12000000)return SCM(playerid,COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Доплата не может превышать 12 000 000$");
		    if(!IsPlayerRegCar(playerid, caridd)) return SCM(playerid, COLOR_RED, !"Вы не в своем авто!");
		    new pcaridd = GetPlayerVehicleID(id);
		    new pcariddd = GetVehicleID(pcaridd);
		    if(!IsPlayerRegCar(id, pcariddd)) return SCM(playerid, COLOR_RED, !"Игрок с которым вы хотите обменятся авто, не в своем транспорте.");
		    if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, !"Неверный id игрока!");
		    if(id == playerid) return 0;
		    if(dop<0 || dop > 100000000)return 0;
		    if(!ProxDetectorS(10.0, playerid, id)) return SCM(playerid, COLOR_GREY, !"Игрок должен находится рядом с вами.");

			f(str_2,sizeof(str_2),"{FFFFFF}Вы предлагаете %s обменяться транспортом\n\n_____________________\nВаша модель: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\n\n{C16060}Модель %s: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\nДоплата: %i\n\n{FFFFFF}_____________________",PN(id),GetNameCar(GetVehicleModelEx(carid)),(CarInfo[caridd][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток"),carid,PN(id),GetNameCar(GetVehicleModelEx(pcariddd)),(CarInfo[pcariddd][cSlotItem][6] == Item_TwinTurbo) ? ("{dd565f}TT") : ("{9ACD32}Сток"),pcaridd,dop);
			SPD(playerid,0,0,"Обмен транспортом",str_2,"Ок","");
			f(str_2,sizeof(str_2),"{FFFFFF}%s предлагает вам обменяться транспортом\n\n_____________________\nВаша модель: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\n\n{C16060}Модель %s: %s\nКомплектация: %s\n{FFFFFF}Номер: %i\nДоплата: %i\n\n{FFFFFF}_____________________",
			PN(playerid),GetNameCar(GetVehicleModelEx(GetPlayerVehicleID(id))),(CarInfo[pcariddd][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток"),pcaridd,PN(playerid),GetNameCar(GetVehicleModelEx(carid)),(CarInfo[caridd][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток"),carid,dop);
			SPD(id,2999,0,"Обмен транспортом",str_2,"Принять","Отменить");
		 	caoffer[id]=playerid;
		 	caoffer[playerid]=id;
		 	cardop[playerid] = dop;
		 	cartrade[playerid]= GetPlayerVehicleID(playerid);
            cartrade[id] = GetPlayerVehicleID(id);
		 	sellcarto[playerid]=gettime()+60;
		}
		else
		{
		    SCM(playerid, COLOR_RED, !"Продавать/обменеваться транспортом можно только на автобазаре! /GPS -> Другое -> Автобазар!");
		    EnableGPSForPlayer(playerid,-2154.3662,-970.6815,32.0234);
		}
	}
	return 1;
}
CMD:sellcarto(playerid, params[])
{
	if(!IsPlayerInHisVehicle(playerid)) return SCM(playerid, COLOR_RED, !"Вы не в своем авто!");
	new carid = GetPlayerVehicleID(playerid);
    {
		if(!IsABoat(playerid) && IsPlayerInRangeOfPoint(playerid, 250, -2123.6548,-854.3079,32.0939))
		{
			if(sellcarto[playerid]>gettime())return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Делать предложение о покупке/обмене можно раз в минуту!");
		    new number = GetVehicleID(carid);
		    if(!IsPlayerRegCar(playerid, number)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не в своем авто!");
		    new id, cost;
		    if(sscanf(params,"ud",id,cost)) return SCM(playerid, COLOR_RED, !"Используйте: /sellcarto [id] [цена]");

			if(!PI[id][pObmen]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок отключил возможность предлагать ему продажу/обмен!");
			if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Неверный id игрока!");
			if(id == playerid) return 0;
			if(cost < 1) return 1;
			if(!ProxDetectorS(7.0, playerid, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок должен быть рядом с транспортом");
			sellcarto[playerid]=gettime()+60;
			f(str_2,sizeof(str_2),"{FFFFFF}Вы предлагаете %s купить у вас транспорт\n\nМодель: %s\nНомер: %i\nЦена: %i$\nКомплектация: %s",
			PN(id),GetNameCar(GetVehicleModelEx(carid)),carid,cost, (CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток") );
			SPD(playerid,0,0,"Продажа транспорта",str_2,"Ок","");
			f(str_2,sizeof(str_2),"{FFFFFF}%s предлагает вам купить у него транспорт\n\nМодель: %s\nНомер: %i\nЦена: %i$\nКомплектация: %s",
			PN(id),GetNameCar(GetVehicleModelEx(carid)),carid,cost, (CarInfo[number][cSlotItem][6] == Item_TwinTurbo) ? ("{e54c4c}TT") : ("{96e54c}Сток") );
			SPD(id,3000,0,"Покупка транспорта",str_2,"Купить","Отмена");
			CarOffer[id] = playerid;
			CarOffer[playerid] = id;
			CarPrice[id] = cost;
		}
		else
		{
		    SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Продавать/обменеваться транспортом можно только на автобазаре! /GPS -> Другое -> Автобазар!");
		    EnableGPSForPlayer(playerid,-2154.3662,-970.6815,32.0234);
		}
	}
	return 1;
}
CMD:key(playerid)
{
	if(!IsPlayerInHisVehicle(playerid) && !PI[playerid][pAdmin]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в своем авто!");
	if(IsANotControllable(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не можете двигаться в данный момент.");
	new carid = GetPlayerVehicleID(playerid), number = GetVehicleID(carid);

	if(IsAVelik(carid)) return 1;
	if(CarInfo[number][cShtraf]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот транспорт стоит на штрафстоянке!");
	if(CarInfo[number][cKeyIN])
	{
		CarInfo[number][cKeyIN] = 0;
	    f(str_2, sizeof(str_2), " %s вытащил(а) ключи из замка зажигания", cPN(playerid));
	    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	    SetEngineStatus(carid, false, playerid);
 	}
	else
	{
	    CarInfo[number][cKeyIN] = 1;
	    f(str_2, sizeof(str_2), " %s вставил(а) ключи в замок зажигания", cPN(playerid));
	    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	}
	return 1;
}
CMD:alarm(playerid, params[])
{
	extract params -> new car; else
		return SCM(playerid, COLOR_RED, !"Используйте: /alarm [id]");

    new
		number = GetVehicleID(car);

	if(!IsPlayerHaveCar(playerid, number))
		return 0;


	if(!CarInfo[number][cAlarmON])
	{
		CarInfo[number][cAlarmON] = 1;
		SCM(playerid, COLOR_YELLOW, !"Сигнализация включена");
	}
	else
	{
		CarInfo[number][cAlarmON] = 0;
		SCM(playerid, COLOR_RED, !"Сигнализация выключена");
		SetAlarmStatus(car, false);
	}
	return 1;
}
CMD:jlock(playerid, params[])
{
    new Float: x, Float: y, Float: z, tyk = jlock[playerid];
    if(tyk != 0) GetVehiclePos(tyk, x, y, z);
    if(vTemp[tyk][vLock] && IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
	{
	    if(vTemp[tyk][vJob] == 0 && !IsAArendCar(tyk)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Закрывать/Открывать можно только рабочий и арендованый транспорт!");
	    vTemp[tyk][vLock] = 0;
	    SetDoorsStatus(tyk, 0, playerid);
		GameTextForPlayer(playerid, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~g~ UNLOCK~n~/jlock", 3000, 3);
		SetPlayerChatBubble(playerid, "* Открывает рабочий транспорт", COLOR_PURPLE, 10.0, 5000);
		tyk = 0;
		jlock[playerid] = tyk;
	}
	else
	{
	    if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Доступно только на водительском месте!");
	    if(vTemp[GetPlayerVehicleID(playerid)][vJob] == 0 && !IsAArendCar(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Закрывать/Открывать можно только рабочий и арендованый транспорт!");
	    vTemp[GetPlayerVehicleID(playerid)][vLock] = 1;
		SetDoorsStatus(GetPlayerVehicleID(playerid), 1, playerid);
		GameTextForPlayer(playerid, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~r~ LOCK~n~/jlock", 3000, 3);
		SetPlayerChatBubble(playerid, "* Закрывает рабочий транспорт", COLOR_PURPLE, 10.0, 5000);
		tyk = GetPlayerVehicleID(playerid);
		jlock[playerid] = tyk;
	}
	return 1;
}
CMD:style(playerid)
{
    if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находиться на водительском месте!");
    new vehid = GetPlayerVehicleID(playerid);
	if(!TwinTurbo[vehid][Engine]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Изменить стиль езды можно только на авто с Twin-Turbo!");
    TwinTurbo[vehid][cStatus] = !TwinTurbo[vehid][cStatus];
    GameTextForPlayer(playerid, TwinTurbo[vehid][cStatus] ? ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~r~ SPORT!") : ("~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~STYLE:~g~ COMFORT!"), 3000, 3);
    PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
    return 1;
}
CMD:lock(playerid)
{
	new Float:X, Float:Y, Float:Z, carid = INVALID_VEHICLE_ID, number = INVALID_VEHICLE_ID;
	foreach(new i: OWNABLECARS)
	{
		GetVehiclePos(OwnableCar[i], X, Y, Z);
		if(IsPlayerInRangeOfPoint(playerid, 9.0, X, Y, Z))
		{
			carid = OwnableCar[i];
			number = i;
			break;
		}
	}
	if(carid == INVALID_VEHICLE_ID || number == INVALID_VEHICLE_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны стоять рядом с транспортом");
	if(!IsPlayerHaveCar(playerid, number) && PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт");
	CarInfo[number][cLock] = !CarInfo[number][cLock];
	SetDoorsStatus(carid, CarInfo[number][cLock], playerid);
	GameTextForPlayer(playerid, !CarInfo[number][cLock] ? (!"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~g~ UNLOCK~n~/lock") : (!"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~r~ LOCK~n~/lock"), 3000, 3);
	return SetPlayerChatBubble(playerid, !CarInfo[number][cLock] ? (!"открывает личный транспорт") : (!"закрывает личный транспорт"), COLOR_PURPLE, 10.0, 5000);
}
CMD:findibiz(playerid, params[])
{
	new car;
	if(sscanf(params,"d",car)) return SCM(playerid, COLOR_RED, !"Используйте: /findibiz [id]");
	if(GetMoney(playerid) < 1000000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
	EnableGPSForPlayer(playerid,BizInfo[car][bEnter_X],BizInfo[car][bEnter_Y],BizInfo[car][bEnter_Z]);
	GiveMoney(playerid,-1000000);
	GiveBizMoney(FindBizID("Информационный центр"), 1000000);
	aml(52, playerid, "", "отметка бизнеса на карте", 1000000);
	return SCM(playerid, COLOR_LIGHTBLUE, !"[Подсказка] {FFFFFF}На миникарте отмечено место где будет продаваться бизнес.");
}
CMD:findihouse(playerid, params[])
{
	new car;
	if(sscanf(params,"d",car)) return SCM(playerid, COLOR_RED, !"Используйте: /findihouse [id]");
	if(GetMoney(playerid) < 100000)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно денег!");
	EnableGPSForPlayer(playerid,HouseInfo[car][hEnter_X],HouseInfo[car][hEnter_Y],HouseInfo[car][hEnter_Z]);
	GiveMoney(playerid, -1000000);
	GiveBizMoney(FindBizID("Информационный центр"), 1000000);
	aml(52, playerid, "", "отметка дома на карте", 1000000);
	return SCM(playerid, COLOR_LIGHTBLUE, !"[Подсказка] {FFFFFF}На миникарте отмечено место где будет продаваться дом.");
}
CMD:findcar(playerid, params[])
{
	extract params -> new car; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /findcar [id транспорта]");
	if(car == INVALID_VEHICLE_ID) return 0;
	new number = GetVehicleID(car);
	if(number == INVALID_VEHICLE_ID) return 0;
	if(!IsPlayerHaveCar(playerid, number)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт");
	new Float:X, Float:Y, Float:Z;
	GetVehiclePos(car, X, Y, Z);
	if(CarInfo[number][cParkedInGarage])
	{
		SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Ваша машина в гараже. На миникарте отмечен гараж!");
		SCM(playerid, -1, !"Если этот гараж не принадлежит вам, тогда: /cars - машина - припарковать - вернуть на стандартное..");
		new i = CarInfo[number][cVirtualWorld] - 50;
		EnableGPSForPlayer(playerid, HouseInfo[i][hGarage_X], HouseInfo[i][hGarage_Y], HouseInfo[i][hGarage_Z]);
	    return 1;
	}
	else if(CarInfo[number][cParkedInParking])
	{
		SCM(playerid, COLOR_VALIK, !"[Подсказка]{FFFFFF} Ваша машина в подземном паркинге. На миникарте отмечен вход!");
		SCM(playerid, -1, !"Если вы не нашли там машины, тогда: /cars - машина - припарковать - вернуть на стандартное..");
		new i = CarInfo[number][cVirtualWorld] - 1;
		EnableGPSForPlayer(playerid, parking[i][pEnter_x], parking[i][pEnter_y], parking[i][pEnter_z]);
		return 1;
	}
	EnableGPSForPlayer(playerid, X, Y, Z);
	SCM(playerid, COLOR_LIGHTBLUE, !"Ваш транспорт отмечен на карте");
	return 1;
}
CMD:setname(playerid, params[])
{
 	//if(PI[playerid][pAdmin] < 5) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
 	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, name[MAX_PLAYER_NAME];
    if(sscanf(params, "us[24]", id, name)) return SCM(playerid, COLOR_RED, !"Используй: /setname [id] [name]");
    mysql_format(mysql, str_2, sizeof(str_2), "SELECT `ID` FROM `Qelksekm` WHERE `NickName` = '%s' LIMIT 1", name);
    mysql_pquery(mysql, str_2, "MysqlCheckNameSetName", "dds", playerid, id, name);
    return 1;
}
CMD:uval(playerid, params[])
{
	if(PI[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /uval [id]");
	if(id == INVALID_PLAYER_ID) return 0;
    if(IsACop(id))
	{
		if(UsingShield[id]) RemovePlayerAttachedObject(id, 7);
		PI[id][pShield] = 0.0;
	}
	new member = PI[id][pMember];
    PI[id][pLeader] =
    PI[id][pMember] =
    PI[id][pRank] =
    PI[id][pDCTime] = 0;
    UpdatePlayerDataInt(id, "DCTime", 0);
    UpdatePlayerDataInt(id, "Rank", 0);
    UpdatePlayerDataInt(id, "Member", 0);
    UpdatePlayerDataInt(id, "Leader", 0);
    SCM(id, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    TeamDuty{id} = false;
    SendAdminsMessagef(COLOR_RED, "[A] %s[ID: %i] Уволил игрока %s [%i] из организации", PN(playerid), playerid, PN(id), id);
	ResetGun(id);
	J_SetPlayerArmour(id, 0);
    SCMf(playerid, COLOR_LIGHTBLUE, "Вы выгнали %s из организации", PN(id));
    SetPlayerColor(id, 0xFDFCFC15);
    ResetSpawnInfo(id, 0);
    aml(15, playerid, PN(id), OrgInfo[member][oName]);
    return SetBumSkin(id);
}
CMD:out(playerid)
{
	if(PI[playerid][pVIP] < 4)
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Команда доступна с 5 уровня VIP!");
    if(PI[playerid][pLeader] > 0)
		return SCM(playerid, COLOR_RED, !"Вы не можете уволится с лидерки!");
    if(!PI[playerid][pMember])
		return SCM(playerid, COLOR_RED, !"Вы не состоите не в одной организации!");
    if(IsACop(playerid))
	{
		if(UsingShield[playerid])
			RemovePlayerAttachedObject(playerid, 7);
		PI[playerid][pShield] = 0.0;
	}
	f(str_2, sizeof(str_2), "[Важно] {FFFFFF}%s[%i] покинул организацию по собственному желанию!", PN(playerid), playerid);
	SendTeamMessage(PI[playerid][pMember], COLOR_RED, str_2);
    PI[playerid][pLeader] =
    PI[playerid][pMember] =
    PI[playerid][pRank] =
    PI[playerid][pDCTime] =
    pSportZal[playerid] =
    PI[playerid][pJob] = JOB_NONE;
    UpdatePlayerDataInt(playerid, "DCTime", 0);
    UpdatePlayerDataInt(playerid, "Job", 0);
    UpdatePlayerDataInt(playerid, "Rank", 0);
    UpdatePlayerDataInt(playerid, "Member", 0);
    UpdatePlayerDataInt(playerid, "Leader", 0);
    if(TeamDuty{playerid}) {
		ResetGun(playerid);
    }
    TeamDuty{playerid} = false;
    SCM(playerid, -1, !">> {FF6347} Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна {FFFFFF}>> {FF6347}/setspawn!");
    SetBumSkin(playerid);
 	SCM(playerid, COLOR_LIGHTBLUE, !"Вы ушли из организации");
    SetPlayerColor(playerid, 0xFDFCFC15);
    ResetSpawnInfo(playerid, 0);
	return 1;
}
CMD:su(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, !"Вы не полицейский!");
	if(PI[playerid][pRank]<5 ) return SCM(playerid, COLOR_RED, !"Подавать в розыск доступно с 5 ранга!");
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	static reason[100], id, wanted;
    if(sscanf(params, "uds[100]", id, wanted, reason)) return SCM(playerid, COLOR_RED, !"Используйте: /su [id] [розыск] [причина]");
    if(CheckIsADomen(playerid, reason)) return 0;
    if(IsAIP(playerid, reason))return 1;
    if(PI[id][pWanted]>=6)return SCM(playerid, COLOR_GREY, !"У этого игрока уже 6-ой уровень розыска!");
    if(PI[id][pWanted]==wanted) return SCM(playerid, COLOR_GREY, !"Этот игрок и так уже имеет такой уровень розыска.");
    if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_GREY, !"Неверный id игрока!");
    if(IsACop(id))return SCM(playerid, COLOR_GREY, !"Нельзя объявить в розыск полицейского");
    if(PI[id][pJailTime]) return SCM(playerid, COLOR_GREY, !"Нельзя объявить в розыск заключенного");
    if(wanted < 1 || wanted > 6) return SCM(playerid, COLOR_GREY, !"Нельзя дать меньше 1 и больше 6 звезд");
	return SetPlayerCriminal(playerid,id,PI[id][pWanted]+wanted,reason);
}
CMD:f(playerid, params[])
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid))return 1;
	if(GetTeamID(playerid) == 0) return 0;
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /f чат");
    if(sscanf(params,"s[150]",params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /f [text]");
    if(CheckIsADomen(playerid, params[0])) return 0;
    if(IsAIP(playerid, params[0]))return 1;
	SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[F] %s %s[%i]: %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,params[0]);
	f(str_1, sizeof(str_1), "[F] %s", params[0]);
	return aml(100, playerid, "", str_1);
}
CMD:r(playerid, params[])
{
	if(IsAtGang(playerid) || IsAtMafia(playerid))return SCM(playerid, COLOR_RED, !"Используйте [/f]");
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /r чат");
	if(GetTeamID(playerid) == 0) return 1;
    if(sscanf(params,"s[150]",params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /r [text]");
    if(CheckIsADomen(playerid, params[0])) return 0;
    if(IsAIP(playerid, params[0]))return 1;
	SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[R] %s %s[%i]: %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,params[0]);
	SetPlayerChatBubble(playerid, "Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
	f(str_1, sizeof(str_1), "[R] %s", params[0]);
	return aml(100, playerid, "", str_1);
}
CMD:fb(playerid, params[])
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return 0;
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /fb чат");
	if(GetTeamID(playerid) == 0) return 0;
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(sscanf(params,"s[150]",params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /fb [text]");
    if(CheckIsADomen(playerid, params[0])) return 0;
    if(IsAIP(playerid, params[0])) return 1;
	if(!PI[playerid][pAdmin]) SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[F] %s %s[%i]:(( %s ))",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,params[0]);
	else SendTeamMessagef(GetTeamID(playerid),COLOR_RACIO,"[F] Администратор %s[%i]:(( %s ))",PN(playerid),playerid,params[0]);
	f(str_1, sizeof(str_1), "[F] %s", params[0]);
	return aml(100, playerid, "", str_1);
}
CMD:rb(playerid, params[])
{
	if(IsAtGang(playerid) || IsAtMafia(playerid)) return SCM(playerid, COLOR_RED, !"Используйте [/fb]");
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PI[playerid][pFMuteTime] > 0) return SCM(playerid, COLOR_GREY, !"Лидер заглушил(а) вас и вы не можете писать в /rb чат");
	if(GetTeamID(playerid) == 0) return 0;
	if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
    if(sscanf(params,"s[150]",params[0])) return SCM(playerid, COLOR_RED, !"Используйте: /rb [text]");
    if(CheckIsADomen(playerid, params[0])) return 0;
    if(IsAIP(playerid, params[0])) return 1;
	if(!PI[playerid][pAdmin]) SendTeamMessagef(GetTeamID(playerid), COLOR_RACIO, "[R] %s %s[%i]:(( %s ))",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),PN(playerid),playerid,params[0]);
	else SendTeamMessagef(GetTeamID(playerid), COLOR_RACIO, "[R] Администратор %s[%i]:(( %s ))",PN(playerid),playerid,params[0]);
	SetPlayerChatBubble(playerid, "Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
	f(str_1, sizeof(str_1), "[R] %s", params[0]);
	return aml(100, playerid, "", str_1);
}
CMD:rt(playerid, params[])
{
	static tttext[128];
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
   	if(PI[playerid][pJob] != JOB_TAXI && PI[playerid][pJob] != JOB_TRUCKER) return SCM(playerid, COLOR_GREY, !"Вам не доступна эта функция");
	if(!IsPlayerInAnyVehicle(playerid))return SCM(playerid, COLOR_GREY, !"Вы должны находится в транспорте!");
   	if(sscanf(params,"s[128]",tttext)) return SCM(playerid, COLOR_RED, !"Используйте: /rt [text]");
    if(CheckIsADomen(playerid, tttext)) return 0;
    if(IsAIP(playerid, tttext)) return 1;
	foreach(new i: Player)
	{
        if(PI[i][pRabRacia]==0)
		{
			if(IsPlayerConnected(i))
	        {
			    if(PI[i][pJob] == JOB_TAXI || PI[i][pJob] == JOB_TRUCKER)
			    {
		            SCMf(i, COLOR_GOLD, "[%s]%s[%i]: %s", GetJobName(PI[playerid][pJob]), PN(playerid), playerid, tttext);
					SetPlayerChatBubble(playerid, "Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
		        }
			}
	    }
    }
	foreach(new ch: Player){if(SERIU[ch] == playerid) SCM(ch,COLOR_RACIO,str_1);}
	f(str_1, sizeof(str_1), "[/rt] %s", tttext);
	return aml(100, playerid, "", str_1);
}
CMD:d(playerid, params[])
{
	if(!IsAtFrakcia(playerid, 1)) return SCM(playerid, COLOR_GREY, !"Вы не уполномочены писать в государственный чат");
	if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_RED, !"Писать можно с 5-го ранга!");
    if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	static text[118];
    if(sscanf(params,"s[118]",text)) return SCM(playerid, COLOR_RED, !"Используйте /d [text]");
    if(CheckIsADomen(playerid, text)) return 0;
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"Вы не на дежурстве!");
	if(!PI[playerid][pAdmin]) f(str_2, sizeof(str_2), "[D] %s %s[%i]: %s", GetRankName(GetTeamID(playerid),PI[playerid][pRank]), PN(playerid), playerid, text);
	else f(str_2, sizeof(str_2), "[D] Администратор %s[%i]: %s", PN(playerid), playerid, text);
	SendGosMessage(COLOR_DEPAR, str_2);
	f(str_1, sizeof(str_1), "[D] %s", text);
	return aml(100, playerid, "", str_1);	
}
CMD:vr(playerid, params[])
{
	if(PI[playerid][pVIP] < 4) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} Вам недоступна данная функция!");
	if(PI[playerid][pVipChat]) return SCM(playerid, COLOR_RED, !"[Ошибка]{FFFFFF} У вас выключен VIP чат!");
	static text[100];
	new bool:set;
	if(sscanf(params, "s[100]", text)) return SCM(playerid, COLOR_RED, !"Используйте: /vr [text]");
    if(CheckIsADomen(playerid, text)) return 0;
    if(IsAIP(playerid, text)) return 0;
  	if(PI[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(GetPVarInt(playerid, !"vr") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Отправлять сообщения в этот чат, можно раз в 10 секунд!");
	if(PI[playerid][pVIP] < 5 || !PI[playerid][pAdmin]) set = true;
	if(set) SetPVarInt(playerid, !"vr", gettime() + 10);
	static prefix[73];
	prefix[0] = EOS;
	switch(PI[playerid][pVIP])
	{
		case 4: prefix = "{6495ED}[VIP]";
		case 5: prefix = "{F345FC}[PREMIUM]";
		case 6: f(prefix, sizeof(prefix), "%s", PI[playerid][pPrefix]);
	}
	if(PI[playerid][pAdmin])
	{
		if(strlen(PI[playerid][pPrefix])) f(prefix, sizeof(prefix), "%s{FFFFFF}", PI[playerid][pPrefix]);
		else prefix = "{FCC645}[ADMIN]";
	}
	f(str_2, sizeof(str_2), "%s {FFFFFF}%s[%i]{FFFFFF}: %s", prefix, PN(playerid), playerid, text);
	SendVIPMessage(-1, str_2);
	f(str_1, sizeof(str_1), "[/vr] %s", text);
	return aml(100, playerid, "", str_1);
}
CMD:tow(playerid, params[])
{
    if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_RED, !"Вы не за рулём!");
    new carid = GetPlayerVehicleID(playerid);
	if(GetVehicleModelEx(carid) != 525) return SCM(playerid, COLOR_RED, !"Вы не за рулём эвакуатора!");
    if(IsTrailerAttachedToVehicle(carid)) DetachTrailerFromVehicle(carid);
	else
	{
	    foreach(new i: Vehicle)
	    {
	        new Float:X,Float:Y,Float:Z;
	        GetVehiclePos(i,X,Y,Z);
	        if(IsPlayerInRangeOfPoint(playerid,7.0,X,Y,Z) && i != carid)
			{
				AttachTrailerToVehicle(i,carid);
				break;
			}
			else continue;
	    }
    }
	return 1;
}
CMD:stopjob(playerid, params[])
{
	switch(PI[playerid][pJob])
	{

	    case JOB_NALOG:
	    {
	        HouseNalogState2[playerid] = 0;
		    HouseNalog[playerid] = -1;
		    SCM(playerid, COLOR_VALIK, !"Вы успешно закончили работу.");
	    }
	    case JOB_PIZZA:
	    {
	        if(InJob[playerid]==0)return SCM(playerid, COLOR_RED, !"Вы не работаете сейчас!");
	        InJobs[playerid]=0;
	        NumInc_CP[playerid]=-1;
	        if(PI[playerid][pOldSkin]!=0)SetPlayerSkinEx(playerid,PI[playerid][pOldSkin]);
	        if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	        ClearAnims(playerid);
	        SCM(playerid, COLOR_VALIK, !"Вы успешно закончили работу.");
	    }
	}
	InJob[playerid]=0;

	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	return 1;
}
CMD:gotaxi(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_TAXI) return SCM(playerid, COLOR_RED, !"Вы не таксист");
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /gotaxi [id]");
    if(!IsPlayerConnected(id)) return 0;
    if(TaxiTarif[playerid]==0)return SCM(playerid, COLOR_LIGHTBLUE, !"Принять вызов можно только с автомобиля такси с настроеным тарифом!");
    if(!TaxiON[id]) return SCM(playerid, COLOR_LIGHTBLUE, !"Этот игрок не заказывал такси либо его заказ уже приняли");
    f(str_2,sizeof(str_2),"Таксист %s принял ваш вызов, ждите",PN(playerid));
    SCM(id,COLOR_LIGHTBLUE,str_2);
    f(str_2,sizeof(str_2),"Игрок %s отмечен на карте",PN(id));
    SCM(playerid,COLOR_LIGHTBLUE,str_2);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    TaxiON[id] = false;
    f(str_2,sizeof(str_2),"Таксист %s принял вызов игрока %s",PN(playerid),PN(id));
	foreach(new i: Player) if(PI[i][pJob] == JOB_TAXI) SCM(i,COLOR_LIGHTBLUE, str_2);
	return 1;
}
CMD:gomechanic(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"Вы не механик!");
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /gomechanic [id]");
    if(!IsPlayerConnected(id)) return 0;
    if(!MehanON[id]) return SCM(playerid, COLOR_LIGHTBLUE, !"Этот игрок не вызывал механика либо его заказ уже приняли");
    f(str_2,sizeof(str_2),"Механик %s принял ваш вызов, ждите",PN(playerid));
    SCM(id,COLOR_LIGHTBLUE,str_2);
    f(str_2,sizeof(str_2),"Игрок %s отмечен на карте",PN(id));
    SCM(playerid,COLOR_LIGHTBLUE,str_2);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    MehanON[id] = false;
    f(str_2,sizeof(str_2),"Механик %s принял вызов игрока %s",PN(playerid),PN(id));
	foreach(new i: Player) if(PI[i][pJob] == JOB_MECHANIC) SCM(i,COLOR_LIGHTBLUE,str_2);
	return 1;
}
CMD:gomedik(playerid, params[])
{
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_RED, !"Вы не врач!");
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /gomedik [id]");
    if(!IsPlayerConnected(id)) return 0;
    if(!MedikON[id]) return SCM(playerid, COLOR_LIGHTBLUE, !"Этот игрок не вызывал скорую помощь либо его заказ уже приняли");
    f(str_2,sizeof(str_2),"Медик %s принял ваш вызов, ждите",PN(playerid));
    SCM(id,COLOR_LIGHTBLUE,str_2);
    f(str_2,sizeof(str_2),"Игрок %s отмечен на карте",PN(id));
    SCM(playerid,COLOR_LIGHTBLUE,str_2);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    MedikON[id] = false;
	return 1;
}
CMD:gopolice(playerid, params[])
{
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы полицейский!");
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используйте: /gopolice [id]");
    if(!IsPlayerConnected(id)) return 0;
    if(!PoliseON[id]) return SCM(playerid, COLOR_LIGHTBLUE, !"Этот игрок не вызывал полицию либо его заказ уже приняли");
    f(str_2,sizeof(str_2),"Дежурный %s принял ваш вызов, ждите",PN(playerid));
    SCM(id,COLOR_LIGHTBLUE,str_2);
    f(str_2,sizeof(str_2),"Игрок %s отмечен на карте",PN(id));
    SCM(playerid,COLOR_LIGHTBLUE,str_2);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    PoliseON[id] = false;
	return 1;
}
CMD:flowers(playerid,params[])
{
	if(PI[playerid][pJailTime] > 0) return SCM(playerid, COLOR_GREY, !"На время пребывания в тюрьме нельзя подарить цветы!");
	if(sscanf(params,"u",params[0])) return SCM(playerid, COLOR_GREY, !"Используй: /flowers [id]");
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	if(weapon != 14) return SCM(playerid, COLOR_GREY, !"У тебя в руках нет цветов!");
	if(PI[playerid][pGuns][GetWeaponSlot(weapon)] != weapon)return 0;
	if(IsPlayerConnected(params[0]))
	{
		if(playerid == params[0]) return SCM(playerid, COLOR_GREEN, !"Вы не можете передать цветы сами себе!");
		if(!ProxDetectorS(3.0,playerid,params[0])) return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");
		f(str_2,sizeof(str_2),"Подарил цветы %s",PN(params[0]));
	    SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 30.0, 5000);
	    GiveGun(params[0],weapon,ammo);

	    static rguns[13], sguns[13];
		for(new i;i<13;i++)
		{
		    rguns[i] = PI[playerid][pAmmos][i];
			sguns[i] = PI[playerid][pGuns][i];
		}
		ResetGun(playerid);

		for(new x; x < 13; x ++)
		{
		    if(sguns[x]!=14) 	GiveGun(playerid,sguns[x],rguns[x]);
		}

	    f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы успешно подарили цветы игроку %s.",PN(params[0]));
	    SCM(playerid,COLOR_VALIK,str_2);
	    f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Игрок %s[%i] подарил вам цветы!",PN(playerid),playerid);
	    SCM(params[0],COLOR_VALIK,str_2);
	    PI[playerid][pLastGun]=0;
		PI[playerid][pLastAmmo]= 0;

		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		SetPlayerFacingAngle(params[0], angle + 180);

		ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
		ApplyAnimation(params[0],"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);

	}
	return 1;
}
CMD:giveweapon(playerid, params[])
{
	if(PI[playerid][pJailTime] > 0)
		return SCM(playerid, COLOR_GREY, !"На время пребывания в тюрьме, твоё оружие было изъято");

	extract params -> new player:target, patrons; else
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /giveweapon [id] [патроны]");

	new
		weapon = GetPlayerWeapon(playerid),
		ammo = GetPlayerAmmo(playerid),
		slot = GetWeaponSlot(weapon);
	if(ammo < patrons)
		return SCM(playerid, COLOR_GREY, !"У тебя в руках нет оружия");

	if(PI[playerid][pGuns][slot] != weapon || target == INVALID_PLAYER_ID)
		return 0;

	if(!IsAFireGun(weapon))
		return SCM(playerid, COLOR_GREY, !"Передавать можно только огнестрельное оружие!");

	if(playerid == target)
		return SCM(playerid, COLOR_GREEN, !"Вы не можете передать оружие сами себе!");

	if(!ProxDetectorS(3.0, playerid, target))
		return SCM(playerid, COLOR_GREY, !"Вы далеко от игрока");

	SetPlayerChatBubble(playerid, !"Что-то передал", COLOR_PURPLE, 30.0, 5000);
	SetPlayerChatBubble(playerid, !"Взял оружие", COLOR_GREY, 30.0, 5000);
	GiveGun(target, weapon, patrons);
	GiveGun(playerid, weapon, -patrons);
	return 1;
}
CMD:ekonom(playerid, params[])
{
	if(PI[playerid][pMember] != TEAM_MERIALS && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Данная возможность доступна только Правительству!");
	if(!PI[playerid][pLeader] && !Osnovat(PN(playerid)))return SCM(playerid, COLOR_RED, !"Проводить изменения в экономике может только губернатор!");
	if(!IsPlayerInRangeOfPoint(playerid, 100, 1536.4718, 1087.1722, 1034.7385) && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится в здании мэрии!");
 	return SPD(playerid,401,2,"Управление штатом","{73B461}[1]{FFFFFF} Внести изменения в налоги.\n{73B461}[2]{FFFFFF} Изменить цены на аренду транспорта\n{73B461}[3]{FFFFFF} Изменить премию за службу закону\n{73B461}[4]{FFFFFF} Глобальные настройки", !"Принять", !"Отмена");
}
CMD:findcollectors(playerid)
{
	EnableGPSForPlayer(playerid,-2263.4514,177.9965,35.3056);
	return SCM(playerid, -1, !"->> Место проведения мероприятия отмечено на карте! Начало: {BCE63B}20.15.");
}
CMD:gps(playerid)
{
    if(InJob[playerid] != 0) return SCM(playerid, COLOR_RED, !"Вы не можете включить GPS во время работы.");
    if(vTemp[GetPlayerVehicleID(playerid)][vJob] == 1) return SCM(playerid, COLOR_RED, !"Сейчас вы не можете открыть GPS");
    return SPD(playerid, 705, DIALOG_STYLE_LIST, !"GPS Навигатор",
        !"{B03131}-{FFFFFF} Важные места\n\
        {B03131}-{FFFFFF} Работы для новичков\n\
        {B03131}-{FFFFFF} По работе\n\
        {B03131}-{FFFFFF} Автосалоны\n\
        {B03131}-{FFFFFF} Разное\n\
        {B03131}-{FFFFFF} Автомастерские\n\
        {B03131}-{FFFFFF} Бизнес/игровые организации\n\
        {B03131}-{FFFFFF} Ближайшая АЗС\n\
        {B03131}-{FFFFFF} Ближайший магазин 24/7\n\
        {B03131}-{FFFFFF} Ближайший магазин аксессуаров\n\
        {B03131}-{FFFFFF} Ближайшая закусочная\n\
        {B03131}-{FFFFFF} Ближайший магазин одежды\n\
        {B03131}-{FFFFFF} Ближайшая аренда\n\
        {B03131}-{FFFFFF} Ближайший магазин оружия\n\
        {B03131}-{FFFFFF} Ближайший банкомат\n\
        {B03131}-{FFFFFF} Ближайший паркинг\n\
        {B03131}-{FFFFFF} Мероприятия ({eca63c}Ивенты{FFFFFF})\n\
        {B03131}-{FFFFFF} Эдвард ({FAAC58}Подарки{FFFFFF})\n\
        {B03131}-{FFFFFF} Найти свой дом ({FAAC58}500${FFFFFF})\n\
        - {A2F549}Green {FFFFFF}Town\n\
        {B03131}-{FFFFFF} Отключить",
        !"Выбор", !"Отмена");
}
CMD:time(playerid)
{
    if(CreateMats[playerid] == 4 || CreateMats[playerid] == 3) return 1;
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PI[playerid][pHeal] == 0 && !PlayerLie[playerid] && !PlayerLieHeal[playerid]) ApplyAnimation(playerid, !"COP_AMBIENT", !"Coplook_watch", 4.1, 0, 0, 0, 0, 0, 1);

    static const mtext[12][20] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};

    new month, day, hour, minuite;
    gettime(hour, minuite, _); getdate(_, month, day);

	if(PI[playerid][pJailTime] > 0) f(str_2, sizeof(str_2), "~y~%i ~y~%s~n~~w~%02i:%02i~n~ ~g~ concluded ~w~%i~n~~g~played: ~w~%i min.", day, mtext[month - 1], hour, minuite, PI[playerid][pJailTime] - 10, floatround(float(PI[playerid][pPlayedTime]) / 60.0));
	else if(PI[playerid][pMaskON] > 0) f(str_2, sizeof(str_2), "~y~%i ~y~%s~n~~w~%02i:%02i~n~~g~played ~w~%i min.~n~~r~mask: %i", day, mtext[month - 1], hour, minuite, floatround(float(PI[playerid][pPlayedTime]) / 60.0), PI[playerid][pMaskON]);
	else f(str_2, sizeof(str_2), "~y~%i ~y~%s~n~~w~%02i:%02i~n~~g~played ~w~%i min.", day, mtext[month - 1], hour, minuite, floatround(float(PI[playerid][pPlayedTime]) / 60.0));
	GameTextForPlayer(playerid, str_2, 4000, 1);

    f(str_2, sizeof(str_2), "%s взглянул(a) на часы", PN(playerid));
    SetPlayerChatBubble(playerid, str_2, COLOR_PURPLE, 10.0, 5000);
    return 1;
}
CMD:donate(playerid) return ShowDonate(playerid);
CMD:adonate(playerid) return ShowADonate(playerid);
CMD:licensers(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(GetTeamID(i) == TEAM_LICENSERS) SCMf(playerid, -1, "%s[%i] | Тел: %i\n",PN(i), i, PI[i][pTelNum]);
	}
	return 1;
}
CMD:blackplayers(playerid, params[])
{
    if(IsAtFrakcia(playerid) && PI[playerid][pLeader] > 0)
	{
	    new kol;
	    str_1[0] = EOS;
		foreach(new i: Player)
		{
		    if(PI[i][pBL] != 0) f(str_1, sizeof(str_1), "%s{FFFFFF}%s[%i]{FFFFFF}\n", str_1, PN(i), i), kol ++;
		}
		ac_ShowPlayerDialog(playerid, 0),ShowPlayerDialogf(playerid, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Черный список закона штата.", !"Принять", !"", "%s\n\n\n{FAAC58}Всего: %i человек.", str_1, kol);
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет доступа к этой системе!");
	return 1;
}
CMD:members(playerid)
{
 	if(!PI[playerid][pMember]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в фракции!");
	str_1[0] = EOS;
	foreach(new i: Player) if(GetTeamID(i) == GetTeamID(playerid) && !PI[i][pAdmin]) f(str_1, sizeof(str_1), "%s{FFFFFF}%s[%i] - %s(%i) {BE2D2D}- [Выговоров: %i] - [Время АФК: %i сек.]{FFFFFF}\n", str_1, PN(i), i, GetRankName(GetTeamID(i), PI[i][pRank]), PI[i][pRank], PI[i][pFWarns], PlayerAFKTime[i]);
	return SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", str_1, !"Закрыть", !"");
}
CMD:flip(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /flip [ID]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не найден");
	if(!IsPlayerLogged{id}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не авторизирован");
	if(GetPlayerState(id) != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в машине!");
	new veh = GetPlayerVehicleID(id);
	new Float:X,Float:Y,Float:Z,Float:A;
	GetVehiclePos(veh,X,Y,Z);
	SetVehiclePos(veh,X,Y,Z);
	GetVehicleZAngle(veh, A);
	SetVehicleZAngle(veh, A);
	J_RepairVehicle(veh);
	SendAdminsMessagef(COLOR_YELLOW, "[A] %s[%i] флип'нул игрока %s[ID:%i]", PN(playerid), playerid, PN(id), id);
	return aml(1, playerid, PN(id), "флипнул игрока");
}
CMD:limit(playerid, params[])
{
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны быть в машине!");
	if(!IsACar(GetPlayerVehicleID(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта функция доступна только в авто!");
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /limit [ скорость ( 0 - чтобы выключить ) ]");
	if(params[0] == 0)
	{
		pTemp[playerid][pLimit] = 0;
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~LIMIT:~g~ OFF!",3000,3);
		return 1;
	}
	if(params[0] < 30 || params[0] > 150) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте число от 30 до 150!");
	pTemp[playerid][pLimit] = params[0];
	GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~LIMIT:~r~ ON!",3000,3);
	SCM(playerid, COLOR_ORANGE, !"[Подсказка] {FFFFFF}Используйте /limit для установки ограничителя скорости!");
	return SCM(playerid, -1, !"/limit 0, отключить ограничитель!");
}
CMD:hi(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid))
		return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя использовать в машине");

	new id;
	if(sscanf(params, "u", id))
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /hi [id]");

	if(id == INVALID_PLAYER_ID)
		return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не найден");

	if(PI[id][pAdmin])
	    return 1;

    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(id, X, Y, Z);
    new Float:distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
	if(distance < 1.5 && distance > 0.5 )
	{
    	if(PlayerLie[id] || PlayerLieHeal[playerid] || !GetPlayerFaceToPlayer(playerid, id, 25.0)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Повернитесь лицом к игроку");
    	if(!GetPlayerFaceToPlayer(id, playerid, 25.0)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Этот игрок не повернут к вам лицом");
		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		SetPlayerFacingAngle(id, angle + 180);
		f(str_2, sizeof(str_2), " %s пожал(а) руку %s", cPN(playerid),cPN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		ApplyAnimation(playerid, !"GANGS", !"hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
		ApplyAnimation(id, !"GANGS", !"hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
		return 1;
	}
	else if(distance < 20.0)
	{
		f(str_2, sizeof(str_2), " %s машет рукой %s", PN(playerid), PN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		ApplyAnimation(playerid, !"PED", !"endchat_03", 4.1, 0, 1, 1, 0, 0, 1);
	}
	else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы находитесь либо слишком близко от игрока, либо слишком далеко от игрока");
	return 1;
}
CMD:killme(playerid)
{
	if(!GetInvCount(playerid, Item_Syringe)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет яда или шприца!");
	if(PI[playerid][pHealth] > 40.0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Использовать яд можно только при смерти!");
	if(!Crack{playerid} && !IsPlayerInAnyVehicle(playerid))
	{
	    f(str_2, sizeof(str_2), " %s принял дозу яда", cPN(playerid));
	    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	    SetPlayerDrunkLevel(playerid, 50000);
		ApplyAnimation(playerid, !"KNIFE", !"KILL_Knife_Ped_Damage", 4.1, 0, 1, 1, 0, 0, 1);
		InvAdd(playerid, Item_Syringe, -1);
		aml(102, playerid, "", "употребил яд", Item_Syringe, 1);
		SetPlayerTimer(playerid, "DeathPlayer", 1700, false);
	}
	else DeathPlayer(playerid);
	return 1;
}
CMD:smoke(playerid)
{
	if(PI[playerid][pHeal]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Пока вы находитесь на лечении вам запрещено курить");
	if(Cuffed{playerid})return 0;
	if(!GetInvCount(playerid, Item_Cigarettes)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет сигарет");
	if(!GetInvCount(playerid, Item_Lighter)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет зажигалки");
    if(!Smoke[playerid])
    {
        new randsig = random(2);
	    if(!randsig)
	    {
	        f(str_2,sizeof(str_2)," %s[%i] достал сигарету с зажигалкой и попытался закурить (Неудачно)",cPN(playerid),playerid);
	        ProxDetector(25.0,playerid, str_2,COLOR_PURPLE);
	    }
	    else
	    {
	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	        f(str_2,sizeof(str_2)," %s[%i] достал сигарету с зажигалкой и закурил",cPN(playerid),playerid);
	        ProxDetector(25.0,playerid, str_2,COLOR_PURPLE);
	        InvAdd(playerid, Item_Lighter, -1);
	        aml(102, playerid, "", "закурил", Item_Lighter, 1);
	        InvAdd(playerid, Item_Cigarettes, -1);
	        aml(102, playerid, "", "закурил", Item_Cigarettes, 1);
	        Smoke[playerid] = 1;
			SmokeTime[playerid] = 10;
			Smokes[playerid] = 0;
	    }
    }
	return 1;
}
CMD:skill(playerid) return ShowSkills(playerid, playerid, 0);
CMD:repcar(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны быть за рулём!");
    if(!GetInvCount(playerid, Item_Repair)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет набора для починки!");
    J_RepairVehicle(GetPlayerVehicleID(playerid));
    InvAdd(playerid, Item_Repair, -1);
    aml(102, playerid, "", "отремонтировал свою машину", Item_Repair, 1);
    f(str_2, sizeof(str_2), " %s отремонтировал свою машину.", cPN(playerid));
	ProxDetector(25, playerid, str_2, COLOR_ME);
    return GameTextForPlayer(playerid, !"~w~CAR IS ~g~REPAIRED", 5000, 6);
}
CMD:report(playerid)
{
	if(PI[playerid][pMuteTime]) return SendMuteMessage(playerid);
	if(pTemp[playerid][ReReport] > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Писать репорт можно раз в 3 минуты!");
	if(pTemp[playerid][NumReports] != -1)
	{
		SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете задать вопрос в репорт!");
		return SCM(playerid, -1, !"Ожидайте ответа от администрации!");
	}
	return ShowReportDialog(playerid);
}
alias:report("rep", "ask");
CMD:ot(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	if(SystemReport)
	{
		if(!TotalReport()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Сейчас нет вопросов в репорт!");
		for(new i; i < sizeof(Reports); i++)
		{
			new id = Reports[i];
			if(id != -1)
			{
				SCMf(id, COLOR_LIGHTRED, "[Подсказка]{FFFFFF} Администратор %s принялся за ваш репорт!", PN(playerid));
	    		ac_ShowPlayerDialog(playerid, 6370),ShowPlayerDialogf(playerid, 6370, DIALOG_STYLE_INPUT, !"{BFBBBA}", !"Принять", !"Отмена", "{FFFFFF}Жалоба/Вопрос от: %s[%i]\n\n{BFE54C}%s\n\n", PN(id), id, ReportMessage[id]);
				pTemp[playerid][ReportID] = id;
				pTemp[id][ReportID] = playerid;
				pTemp[id][NumReports] = -1;
				Reports[i] = -1;
				break;
			}
		}
	}
	else
	{
		static result[55];
		new id;
		if(sscanf(params,"us[55]", id, result)) return SCM(playerid, COLOR_RED, !"Используй: /ot [id/name] [answer]");
		if(!IsPlayerConnected(id)) return false;
		SCMf(id, COLOR_ORANGE, "Администратор %s ответил вам:{FFFFFF} %s", PN(playerid), result);
		SendAdminsMessagef(COLOR_ORANGE, "[A] %s[%i] ответил игроку %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, result);
	}
	return 1;
}
CMD:pm(playerid, params[])
{
    if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id, type, result[84];
	if(sscanf(params, "dds[84]",id, type, result)) return SCM(playerid, COLOR_RED, !"Используй: /pm [id/name] [0 - message/1 - dialog] [answer]");
    if(CheckIsASuccesIP(playerid)) return 0;
    if(id == INVALID_PLAYER_ID) return 0;
    switch(type)
    {
    	case 0: SCMf(id, COLOR_ORANGE, "Администратор %s ответил вам:{FFFFFF} %s", PN(playerid), result);
    	case 1:
    	{
    		pmID[id] = playerid;
    		ac_ShowPlayerDialog(id, 0),ShowPlayerDialogf(id, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Понял", !"", "Администратор %s ответил вам: {FFFFFF}%s", PN(playerid), result);
    	}
    	default: return SCM(playerid, COLOR_RED, !"Используй: /pm [id/name] [0 - message/1 - dialog] [answer]");
    }
    aml(3, playerid, PN(id), result);
    return SendAdminsMessagef(COLOR_LIGHTBLUE, "[A] %s[%i] написал игроку %s[%i]:{FFFFFF} %s", PN(playerid), playerid, PN(id), id, result);
}
CMD:creategun(playerid)
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Вы не находитесь в банде или мафии!");
	if(IsAtGang(playerid))
	{
		new zona = GetPlayerGangZone(playerid);
		if(zona < 0 || GZInfo[zona][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете создавать оружие вне своей территории!");
	}
    if(IsANotControllable(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете двигаться!");
    return SPD(playerid, 353, DIALOG_STYLE_TABLIST_HEADERS, "", "Номер\tОружие\tРасход патронов\n{A0FF80}1.{FFFFFF}\tDeagle\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}2.{FFFFFF}\tShotgun\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}3.{FFFFFF}\tMp5\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}4.{FFFFFF}\tM4\t{FBAD2F}2{FFFFFF}к1\n{A0FF80}5.{FFFFFF}\tAk47\t{FBAD2F}3{FFFFFF}к1\n{A0FF80}6.{FFFFFF}\tRifle\t{FBAD2F}10{FFFFFF}к1", "Принять", "Отмена");
}
CMD:sellgun(playerid, params[])
{
	if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Вы не находитесь в банде или мафии!");
	if(IsAtGang(playerid))
	{
		new zona = GetPlayerGangZone(playerid);
		if(zona < 0 || GZInfo[zona][gzFracID] != PI[playerid][pMember]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете создавать оружие вне своей территории!");
	}
	if(GetPVarInt(playerid, !"sellgun") > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
	if(IsANotControllable(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете двигаться!");
	new id, ammo, price;
    static name[30];
    if(id == playerid)
	{
	    SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете продавать себе оружие!");
		return SCM(playerid, -1, !"Используйте /creategun, чтобы сделать себе оружие.");
	}
	if(sscanf(params, "us[10]dd", id, name, ammo, price))
	{
		SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Используйте: /sellgun [id] [Название] [Кол-во] [цена]");
		SCM(playerid, COLOR_GREEN, !"[Ошибка] {FFFFFF}Названия: deagle,shotgun,mp5,m4,ak47,rifle,sniper,uzi");
		return 1;
	}
	if(PI[id][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Продавать оружие можно игрокам, выше 1-го уровня!");
	if(ammo > 300) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сразу сделать больше 300 патронов!");
	if(PI[playerid][pJailTime] > 0 || PI[playerid][pDemorgan] > 0) return 1;
	if(!ProxDetectorS(3, playerid, id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(price > 0 && ammo > 0)
	{
		if(price > 15000) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}За свои услуги вы можете брать не более $15000");
		SGunOffer[id] = playerid;
		SGunPrice[id] = price;
		SGunAmmo[id] = ammo;
		if(GetString(name, "deagle"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 24;
		}
		else if(GetString(name, "shotgun"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 25;
		}
		else if(GetString(name, "mp5"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 29;
		}
		else if(GetString(name, "m4"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 31;
		}
		else if(GetString(name, "ak47"))
		{
			SGunMats[id] = ammo * 3;
			SGunID[id] = 30;
		}
		else if(GetString(name, "rifle"))
		{
			SGunMats[id] = ammo * 10;
			SGunID[id] = 33;
		}
		else if(GetString(name, "sniper"))
		{
			SGunMats[id] = ammo * 50;
			SGunID[id] = 34;
		}
		else if(GetString(name, "uzi"))
		{
			SGunMats[id] = ammo * 2;
			SGunID[id] = 28;
		}
		else return 1;
        SetPVarInt(playerid, "sellgun", gettime() + 5);
		if(GetInvCount(playerid, Item_Mats) >= SGunMats[id])
		{
			f(str_2, sizeof(str_2), "{FFFFFF}\
				%s предлагает вам купить у него оружие.\n\n\
				Оружие: \t%s\n\
				Боеприпасы: \t%i\n\
				Цена: \t\t$%i",
				PN(playerid),
				WeaponNames[SGunID[id]],
				ammo,
				price);
			SPD(id, 24, DIALOG_STYLE_MSGBOX, !"Вам предложили купить оружие", str_2, !"Купить", !"Отмена");
		}
		else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас недостаточно патронов для изготовления этого оружия!");
	}
	return 1;
}
CMD:fightstyle(playerid, params[]) return SPD(playerid, 58, 2, !"Выберите стиль боя", !"Обычный\nBoxing\nKungfu\nKeenhead\nElbow\nКак изучить?", !"Выбрать", !"Отмена");
CMD:next(playerid)
{
   	if(BuyInt[playerid] != -1)
	{
	    if(BuyInt[playerid] == (sizeof(IntInfo)-1)) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyInt[playerid] == (sizeof(IntInfo)-2)) TextDrawHideForPlayer(playerid, ButtonRight);
		TextDrawShowForPlayer(playerid, ButtonLeft);
     	BuyInt[playerid] ++;
		new dnt = BuyInt[playerid];
		f(str_2,sizeof(str_2),"Level: %i~n~Cost: $%i",1,IntInfo[dnt][iCost]);
		PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
		SetPlayerCameraPos(playerid,IntInfo[dnt][iCam_X],IntInfo[dnt][iCam_Y],IntInfo[dnt][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[dnt][iCamAt_X],IntInfo[dnt][iCamAt_Y],IntInfo[dnt][iCamAt_Z]); //
		SetPlayerInterior(playerid,IntInfo[dnt][iInterior]);
	}
	else if(Clother[playerid] != -1)
	{
	    ClearChatForPlayer(playerid);
	    new nskin = PI[playerid][pSkin];
		if(IsPlayerInRangeOfPoint(playerid,2.0,199.1063, -128.3574, 1003.5152) && PI[playerid][pSkin] != 0)
		{
		    new race = PI[playerid][pRace];
		    new clother = Clother[playerid];
			if(PI[playerid][pSex] < 2)
			{
				if( (clother + 1) == sizeof(MSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(MSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				else if(!MSkins[race][clother + 1]) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if(!MSkins[race][clother + 2]) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				if(MSkins[race][clother] != 0)
				{
					SetPlayerSkinEx(playerid,MSkins[race][clother]);
					f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",MSkinCost[clother]);
				}
			}
			else
			{
			    if( (clother + 1) == sizeof(GSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(GSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				SetPlayerSkinEx(playerid,GSkins[race][clother]);
				f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",GSkinCost[clother]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
		else if(!nskin)
		{
		   	new race = PI[playerid][pRace];
		    new clother = Clother[playerid];
			if(PI[playerid][pSex] < 2)
			{
				if( (clother + 1) == sizeof(MBomzSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(MBomzSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				else if(!MBomzSkins[race][clother + 1]) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if(!MBomzSkins[race][clother + 2]) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				if(MSkins[race][clother] != 0) SetPlayerSkinEx(playerid,MBomzSkins[race][clother]);
			}
			else
			{
			    if( (clother + 1) == sizeof(GBomzSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(GBomzSkins[]) ) TextDrawHideForPlayer(playerid, ButtonRight);
				TextDrawShowForPlayer(playerid, ButtonLeft);
				Clother[playerid] ++;
				clother = Clother[playerid];
				SetPlayerSkinEx(playerid,GBomzSkins[race][clother]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PI[playerid][pType];
 		if(ItemsId[race][Buyitem[playerid]+2]==1) TextDrawHideForPlayer(playerid, ButtonRight);
 		if(ItemsId[race][Buyitem[playerid]+1]==1) return 0;
 		ClearChatForPlayer(playerid);
 		TextDrawShowForPlayer(playerid, ButtonLeft);
 		Buyitem[playerid] ++;
 		DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		new price = ItemsCost[race][Buyitem[playerid]];//SetPlayerBuyItem'

		switch(ItemsId[race][Buyitem[playerid]])
		{
			case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
			case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
			case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2006,331.0000, -94.0000, 89.0000);
			case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,342.0000, -94.0000, 89.0000);
			case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
			case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
			case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -90.0000,42.2641);
			case 19104,19105,19106,19107,19108,19109: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
			case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
			case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.8487, 2231.0430, 1801.5002,180.0000, 86.0000, 18.0000);
			case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
			case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
			//шляпы
			case 18947,18948,18949,18950,18951: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
			//часы
			case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
			//портфели
			case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
			case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.1604,270.0000, -76.0000, 13.8877);
			case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.0804,270.0000, -76.0000, 16.9056);
			case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
			case 18970, 18973, 18972, 18971: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
		}
		PlayerTextDrawSetStringf(playerid, InfoText[playerid], "~g~Cost: ~r~$%i", price);
	}

	else if(BuyGuns[playerid] != -1)
	{
	    if(BuyGuns[playerid] == MAX_GUNS) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyGuns[playerid] == MAX_GUNS-1) TextDrawHideForPlayer(playerid, ButtonRight);
	    TextDrawShowForPlayer(playerid, ButtonLeft);
		BuyGuns[playerid] ++;
		BuyGunAmmo[playerid] = 0;
	    new bgid = BuyGuns[playerid];
		new gunid = BuyGunInfo[bgid][bgGunid];
	    new model = GetWeaponModel(gunid);
	    new price = BuyGunInfo[bgid][bgPrice];
  		price += BuyGunInfo[bgid][bgGPrice];
     	if(BuyGunInfo[bgid][bgAmmo][1] != 0) TextDrawShowForPlayer(playerid, ButtonUp);
	    else TextDrawHideForPlayer(playerid, ButtonUp);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		TextDrawHideForPlayer(playerid, ButtonDown);
	    if(IsAFireGun(BuyGunInfo[bgid][bgGunid])) TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 5.0);
	    else TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, GUN_ROT);
        f(str_2, sizeof(str_2), "~w~Name: %s~n~Ammo: %i~n~Cost: $%i", WeaponNames[gunid], BuyGunInfo[bgid][bgAmmo][0], price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
	}
	return 1;
}
CMD:back(playerid)
{
    if(BuyInt[playerid] != -1)
	{
	    if(BuyInt[playerid] == 1) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyInt[playerid] == 2) TextDrawHideForPlayer(playerid, ButtonLeft);
		TextDrawShowForPlayer(playerid, ButtonRight);
	    BuyInt[playerid] --;
		new dnt = BuyInt[playerid];
		SetPlayerInterior(playerid,IntInfo[dnt][iInterior]);
		SetPlayerCameraPos(playerid,IntInfo[dnt][iCam_X],IntInfo[dnt][iCam_Y],IntInfo[dnt][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[dnt][iCamAt_X],IntInfo[dnt][iCamAt_Y],IntInfo[dnt][iCamAt_Z]); //
		PlayerTextDrawSetStringf(playerid, InfoText[playerid], "Level: 1~n~Cost: $%i", IntInfo[dnt][iCost]);
	}
	else if(Clother[playerid] != -1)
	{
	    ClearChatForPlayer(playerid);
	    new nskin = PI[playerid][pSkin];
		if(IsPlayerInRangeOfPoint(playerid,2.0,199.1063, -128.3574, 1003.5152) && PI[playerid][pSkin] != 0)
		{
	        new race = PI[playerid][pRace];
	        if(Clother[playerid] == 0 ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	        else if(Clother[playerid] == 1 ) TextDrawHideForPlayer(playerid, ButtonLeft);
			TextDrawShowForPlayer(playerid, ButtonRight);
			Clother[playerid] --;
			if(PI[playerid][pSex] < 2)
			{
				SetPlayerSkinEx(playerid,MSkins[race][Clother[playerid]]);
				f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",MSkinCost[Clother[playerid]]);
			}
			else
			{
				SetPlayerSkinEx(playerid,GSkins[race][Clother[playerid]]);
				f(str_2,sizeof(str_2),"~g~Cost: ~r~$%i",GSkinCost[Clother[playerid]]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
		else if(!nskin)
		{
		    new race = PI[playerid][pRace];
	        if(Clother[playerid] == 0 ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	        else if(Clother[playerid] == 1 ) TextDrawHideForPlayer(playerid, ButtonLeft);
			TextDrawShowForPlayer(playerid, ButtonRight);
			Clother[playerid] --;
			if(PI[playerid][pSex] < 2)
			{
				SetPlayerSkinEx(playerid,MBomzSkins[race][Clother[playerid]]);
			}
			else
			{
				SetPlayerSkinEx(playerid,GBomzSkins[race][Clother[playerid]]);
			}
  	 		if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],str_2);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PI[playerid][pType];
 		if(Buyitem[playerid]==1) TextDrawHideForPlayer(playerid, ButtonLeft);
 		if(Buyitem[playerid]==0) return 0;
 		ClearChatForPlayer(playerid);
 		TextDrawShowForPlayer(playerid, ButtonRight);
 		Buyitem[playerid] --;
 		DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		new price = ItemsCost[race][Buyitem[playerid]];//SetPlayerBuyItem'
 		switch(ItemsId[race][Buyitem[playerid]])
		{
			case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1407,0.0000, 0.0000, 198.9623);
			case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 30.0000, 93.3478);
			case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2006,331.0000, -94.0000, 89.0000);
			case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,342.0000, -94.0000, 89.0000);
			case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1606,360.0000, 11.0000, 215.0000);
			case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -328.0000, 153.0000);
			case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.1406,360.0000, -90.0000,42.2641);
			case 19104,19105,19106,19107,19108,19109: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 153.0000);
			case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3705, 2230.6846, 1801.2004,349.0000, 271.0000, 342.2888);
			case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.8487, 2231.0430, 1801.5002,180.0000, 86.0000, 18.0000);
			case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1604,360.0000, -2.0000, 213.3229);
			case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.2166,61.0000, 10.0000, 226.0000);
			//шляпы
			case 18947,18948,18949,18950,18951: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1564,350.0000, 270.0000, 107.3994);
			//часы
			case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.3884, 2230.6755, 1801.1364,158.0000, 360.0000, 278.0000);
			//портфели
			case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.2441, 2230.6956, 1801.1604,270.0000, -76.0000, 105.0000);
			case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.1604,270.0000, -76.0000, 13.8877);
			case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],-397.4285, 2230.7007, 1801.0804,270.0000, -76.0000, 16.9056);
			case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5894, 2230.7183, 1801.1122, 106.1400, -2.6400, -110.5800 );
			case 18970, 18973, 18972, 18971: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], -397.5000, 2230.7065, 1801.1350, -0.3000, 11.7600, -24.9600 );
		}
		f(str_2, sizeof(str_2), "~g~Cost: ~r~$%i", price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    if(BuyGuns[playerid] == 0) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyGuns[playerid] == 1) TextDrawHideForPlayer(playerid, ButtonLeft);
		TextDrawShowForPlayer(playerid, ButtonRight);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		TextDrawHideForPlayer(playerid, ButtonDown);
		BuyGuns[playerid] --;
	    BuyGunAmmo[playerid] = 0;
	    new bgid = BuyGuns[playerid];
		new gunid = BuyGunInfo[bgid][bgGunid];
	    new model = GetWeaponModel(gunid);
	    new price = BuyGunInfo[bgid][bgPrice];
 		price += BuyGunInfo[bgid][bgGPrice];
		if(BuyGunInfo[bgid][bgAmmo][1] != 0) TextDrawShowForPlayer(playerid, ButtonUp);
	    else TextDrawHideForPlayer(playerid, ButtonUp);
	    if(IsAFireGun(BuyGunInfo[bgid][bgGunid])) TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, 90.0, 0.0, 5.0);
	    else TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, GUN_ROT);
        f(str_2, sizeof(str_2), "~w~Name: %s~n~Ammo: %i~n~Cost: $%i", WeaponNames[gunid], BuyGunInfo[bgid][bgAmmo][0], price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], str_2);
	}
	return 1;
}
CMD:addhouse(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][23]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new cost, klass;
    if(sscanf(params, "ii", cost, klass)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /addhouse [цена] [класс]");
	if(!(1 <= klass <= 6)) return SCM(playerid, -1, !"ID класса от 1 до 6");
    if(OWNABLEHOUSES+1 >= MAX_HOUSES) return SCM(playerid, -1, !"Превышен лимит домов");
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    
	mysql_format(mysql, str_3, sizeof(str_3), "INSERT INTO `Houses`(`Enter_X`, `Enter_Y`, `Enter_Z`, `Cost` , `Klass`, `Level`) VALUES ('%.2f', '%.2f', '%.2f', '%i', '%i', '%i')", X, Y, Z, cost, klass, 1);
	mysql_query(mysql, str_3, false);

	new Cache:result = mysql_query(mysql, "SELECT * FROM Houses ORDER BY ID DESC LIMIT 1");
	LoadOwnableHouse(0, OWNABLEHOUSES);
	cache_delete(result);

    HouseIcon[OWNABLEHOUSES] = CreateDynamicMapIcon(HouseInfo[OWNABLEHOUSES][hEnter_X], HouseInfo[OWNABLEHOUSES][hEnter_Y], HouseInfo[OWNABLEHOUSES][hEnter_Z], 31, 0,500);
	HouseCP[OWNABLEHOUSES] = CreateDynamicCP(HouseInfo[OWNABLEHOUSES][hEnter_X], HouseInfo[OWNABLEHOUSES][hEnter_Y], HouseInfo[OWNABLEHOUSES][hEnter_Z], 2.0, -1, -1, -1, 25.0);
	House3DText[OWNABLEHOUSES] = CreateDynamic3DTextLabel(!" Дом ",0xE1AE3CFF,HouseInfo[OWNABLEHOUSES][hEnter_X], HouseInfo[OWNABLEHOUSES][hEnter_Y],HouseInfo[OWNABLEHOUSES][hEnter_Z],25.0);
    
    UpdateHouseGarage(OWNABLEHOUSES);
	UpdateHouse(OWNABLEHOUSES, 0);
	if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] создал дом %i(%i класc). Цена: %i$", PN(playerid), playerid, OWNABLEHOUSES, klass, cost);
    SCM(playerid, -1, !"Дом успешно создан");
    static fmt_str2[] = "создал дом ID: <a href=/house?house=%i>%i</a> за $%i класс: %i";
    static text[sizeof(fmt_str2) + 30];
    f(text, sizeof(text), fmt_str2, OWNABLEHOUSES, OWNABLEHOUSES, cost, klass);
    aml(18, playerid, "", text, 7);
    return OWNABLEHOUSES ++;
}
CMD:addbiz(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new cost, type;
    if(sscanf(params, "ii", cost, type))
    {
    	SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /addbiz [цена] [тип]");
    	SCM(playerid, -1, !"[0]Амуниция/Тир | [1]Бар | [2]Магазин 24/7 | [3]Магазин одежды | [4]Предприятие");
    	SCM(playerid, -1, !"[5]Тюнинг салон | [6]АЗС/Магазин механики | [7]Закусочная | [8]Аренда транспорта | [9]Магазин аксессуаров | [11]Предприятие");
    	SCM(playerid, -1, !"[12]Концертный зал | [13]Шахта | [14]Автосалон СФ | [15]Автосалон ЛВ | [16]"SHOP_TUNE" | [17]"SHOP_CONTAINER"");
    	return SCM(playerid, -1, !"[18]"SHOP_CASINO" | [19]"SHOP_LUXE" | [20]Ремонт одежды");
    }
	if(!(0 <= type <= 20)) return SCM(playerid, -1, !"Тип от 0 до 19");
    if(OWNABLEBIZES >= MAX_BIZ) return SCM(playerid, -1, !"Превышен лимит бизнесов");
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    
	static fmt_str[] = "INSERT INTO `Businesses`(`State`, `Enter_X`, `Enter_Y`, `Enter_Z`, `Cost`) VALUES ('%i','%.2f','%.2f','%.2f','%i')";

	mysql_format(mysql, str_3, sizeof(str_3), fmt_str, type, X, Y, Z, cost);
	mysql_query(mysql, str_3, false);

	new Cache:result = mysql_query(mysql, "SELECT * FROM Businesses ORDER BY ID DESC LIMIT 1");
	LoadOwnableBiz(0, OWNABLEBIZES);
	cache_delete(result);

    UpdateBiz(OWNABLEBIZES, 1, 1);

    SCM(playerid, -1, !"Бизнес успешно создан");
    static fmt_str2[] = "создал бизнес ID: <a href=/biz?biz=%i>%i</a> за $%i тип: %i";
    static text[sizeof(fmt_str2) + 30];
    f(text, sizeof(text), fmt_str2, OWNABLEBIZES, OWNABLEBIZES, cost, type);
    aml(18, playerid, "", text, 7);
    return OWNABLEBIZES ++;
}
CMD:done(playerid)
{
	if(BuyInt[playerid] != -1)
 	{
 		new house = PI[playerid][pHouseTemp];
 	    if(house != -1)
 	    {
		    new inte = BuyInt[playerid];
			if(GetMoney(playerid) >= IntInfo[inte][iCost])
		    {
		        switch(HouseInfo[house][hKlass])
		        {
					case 1: if(HouseRooms[inte]>1)return SPD(playerid, 0, 0, !"", !"Увы, но в ваш дом не поместится такой ремонт!", !"Принять", !"");
				    case 2: if(HouseRooms[inte]>2)return SPD(playerid, 0, 0, !"", !"Увы, но в ваш дом не поместится такой ремонт!", !"Принять", !"");
				    case 3: if(HouseRooms[inte]>3)return SPD(playerid, 0, 0, !"", !"Увы, но в ваш дом не поместится такой ремонт!", !"Принять", !"");
					case 4: if(HouseRooms[inte]>4)return SPD(playerid, 0, 0, !"", !"Увы, но в ваш дом не поместится такой ремонт!", !"Принять", !"");
		        }
		        if(PI[playerid][pDCTime] != 1)
		        {
		        	PI[playerid][pDCTime] = 1;
		        	UpdatePlayerDataInt(playerid, "DCTime", 1);
		        }
		        TogglePlayerControllable(playerid, true);
				SCM(playerid, COLOR_GREEN, !"Поздравляю вас с покупкой нового интерьера!");
				GiveMoney(playerid,-IntInfo[inte][iCost]);
				aml(52, playerid, "", "покупка интерьера для дома", IntInfo[inte][iCost]);
				SetHouseInt(house, inte);
				BuyInt[playerid] = -1;
     			SettingSpawn(playerid);
				if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
				PlayerTextDrawHide(playerid,InfoText[playerid]);
				SaveHouse(house);
				PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				return 1;
			}
		}
	}
	else if(Clother[playerid] != -1)
	{
	    new nskin = PI[playerid][pSkin];
	    new skin = Clother[playerid];
	    if(nskin != 0)
	    {
		    new cost;
		    new race = PI[playerid][pRace];
		    new clother = Clother[playerid];//tika
		    if(PI[playerid][pSex]==1)
			{
				if(MSkins[race][clother]!=GetPlayerSkin(playerid))return 0;
			}
			if(PI[playerid][pSex]==2)
			{
			    if(GSkins[race][clother]!=GetPlayerSkin(playerid))return 0;
			}
            new bizid = BizEntered[playerid];
		    if(PI[playerid][pSex] == 2) cost = GSkinCost[skin];
		    else cost = MSkinCost[skin];
		    if(cost <= 0) cost = 140;
		    if(GetMoney(playerid) < cost) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		    if(BizInfo[bizid][bProducts]<(cost/100))return SCM(playerid, -1, !"{FFFFFF}Извините, но у нас закончился товар!");
			if(!InvAdd(playerid, GetPlayerSkin(playerid), 1)) return 1;
			aml(101, playerid, "", "купил в магазине одежды", GetPlayerSkin(playerid), 1);
			Clother[playerid] = -1;
			TogglePlayerControllable(playerid, true);
			J_SetPlayerPos(playerid, 199.0545,-131.5248,1003.5152);
			TogglePlayerDynamicCP(playerid, Binko_CP, true);
			SetPlayerSkinEx(playerid, PI[playerid][pSkin]);
			GiveMoney(playerid,-cost);
			aml(52, playerid, "", "Покупка скина", cost);
   			GiveBizMoney(bizid,cost);
			BizInfo[bizid][bProducts]-=(cost/100);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid,OldWorld[playerid]);
			SendPedBot(playerid);

			if(QuestProgress[playerid][8]==0 && AcceptQuest[playerid][8]!=0)
		    {
		        QuestProgress[playerid][8]=1;
		        SPD(playerid, 0, 0, !"", !"{FFFFFF}Вы успешно купили новую одежду как просил Майкл.\nВозращайтесь обратно, чтобы получить награду за выполненое задание.\n\n{82A3DF}Теперь вы можете приобрести одежду в любом магазине.", !"Принять", !"");
		        NextStapQI(playerid,8);
		    }
		}
		else
		{
		    TutState[playerid] = -1;
			GangZoneShowForPlayer(playerid, HideMapZone, 0x000000FF);
			SetFullness(playerid, 100);
			SetPlayerWeather(playerid, Weather);
			Clother[playerid] = -1;
			PI[playerid][pSkin] = GetPlayerSkin(playerid);
			UpdatePlayerDataInt(playerid, "Skin", GetPlayerSkin(playerid));
		    if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
		    SetPlayerVirtualWorld(playerid, 0);
 			SetPlayerInterior(playerid, 0);

			if(PI[playerid][pRace]==0)
		    {
				switch(random(4))
				{
      				case 0:J_SetPlayerPos(playerid,1765.5046,-1892.7008,13.5611);
		  			case 1:J_SetPlayerPos(playerid,1765.3536,-1902.9863,13.5661);
		  			case 2:J_SetPlayerPos(playerid,1758.8562,-1903.0684,13.5646);
		  			case 3:J_SetPlayerPos(playerid,1758.8551,-1892.5815,13.5559);
				}
				SetPlayerFacingAngle(playerid, 199.2585);
			}
			else
			{
				J_SetPlayerPos(playerid, 2229.4236,-1156.9237,25.8201);
				SetPlayerFacingAngle(playerid,39.4635);
			}
			GangZoneHideForPlayer(playerid, HideMapZone);
			StopAudioStreamForPlayer(playerid);
			ClearChatForPlayer(playerid);

            SCM(playerid, -1, !"{DFCFCF}[Подсказка] {DC4747}На сервере есть инвентарь, используйте клавишу Y для работы с ним.");
            SCM(playerid, -1, !"{DFCFCF}[Подсказка] {DC4747}Вы можете задать вопрос в нашу техническую поддержку /report.");
            SCM(playerid, -1, !"{DFCFCF}[Подсказка] {DC4747}Советуем получить паспорт, а затем отправится на ферму или завод для заработка денег на права.");
            if(strcmp("No Mail Adress", PlayerMail[playerid], true)==0) SCM(playerid, -1, !"{DFCFCF}[Подсказка]{8F1E1E} У вас не привязан e-mail адрес. Привяжите его дабы подтвердить ваш аккаунт /mm - Настройки - e-mail.");
            SCM(playerid, -1, !"{DFCFCF}>>>{DC4747} Пока вы малоимущий {DFCFCF}(до 4-го уровня){DC4747}, на улице вы можете попрошайничать деньги.");
            SCM(playerid, -1, !"{DC4747}Используйте команду {DFCFCF}/beg{DC4747}, чтобы поставить табличку и банку для денег!");

			SPD(playerid, 234, 0, !"Дополнительная информация", !"{FFFFFF}Желаете ли вы просмотреть дополнительную информацию о нашем сервере?", !"Да", !"Нет");
			TogglePlayerControllable(playerid,true);

		   	PI[playerid][pHungryShow] = 0;
		   	UpdatePlayerDataInt(playerid, "HungryShow", PI[playerid][pHungryShow]);
		   	SetFullness(playerid, 100);
		   	Hunger(playerid, 0);
		   	PI[playerid][pObmen] =
			PI[playerid][pRabRacia] = 1;
			UpdatePlayerDataInt(playerid, "RabRacia", PI[playerid][pRabRacia]);
			UpdatePlayerDataInt(playerid, "Obmen", PI[playerid][pObmen]);
            PI[playerid][pZKP] = 20;
            UpdatePlayerDataInt(playerid, "ZKP", 20);
	   		PI[playerid][pHospital] = 25;
	   		UpdatePlayerDataInt(playerid, "Hospital", PI[playerid][pHospital]);
			J_SetPlayerHealth(playerid, 100);
		    SetCameraBehindPlayer(playerid);

		    if(!PI[playerid][pRace]) CheckPointForPlayer(playerid,1773.6903,-1891.7493,13.5504);
			else CheckPointForPlayer(playerid,2211.0706,-1142.9728,25.8084);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PI[playerid][pType],price = ItemsCost[race][Buyitem[playerid]];
	    new item = ItemsId[race][Buyitem[playerid]];
	    new biz = BizEntered[playerid];
        if(GetMoney(playerid)<price)return SendBotMessage(playerid,"Извините, но у вас не достаточто денег для покупки!");
        if(BizInfo[biz][bProducts]<(price/100))return SendBotMessage(playerid,"Извините, но у нас закончился товар!");
	    if(!InvAdd(playerid, GetItemID(item), 1)) return 0;
	    SendBotMessage(playerid,"Спасибо за покупку, приходите еще!");
        ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
		GiveMoney(playerid,-price);
		aml(52, playerid, "", "Покупка аксесуара", price);
		GiveBizMoney(biz,price);
		BizInfo[biz][bProducts]-=(price/100);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
        TogglePlayerControllable(playerid, true);
        PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		SetCameraBehindPlayer(playerid);
		Buyitem[playerid] = -1;
		PI[playerid][pType]=-1;
		SetPVarInt(playerid,"timetobuy2",0);
	}
    else if(BuyGuns[playerid] != -1)
	{
	    new bgid = BuyGuns[playerid];
	    new ammo = BuyGunAmmo[playerid];
	    new Float:flprice = float(BuyGunInfo[bgid][bgPrice]);
	    new Float:flammo = float(BuyGunInfo[bgid][bgAmmo][0]);
	    new weaponid = BuyGunInfo[bgid][bgGunid];
		new ammos = BuyGunInfo[bgid][bgAmmo][ammo];
	    new money = floatround( (flprice / flammo) * float(BuyGunInfo[bgid][bgAmmo][ammo]) );
	    money += BuyGunInfo[bgid][bgGPrice];
     	new biz = BizEntered[playerid];
	    if(biz != -1)
		{
			if(BizInfo[biz][bProducts] < (money/10) ) return SendBotMessage(playerid,"Приносим свои извинения, так как у нас закончились продукты.");
			if(GetMoney(playerid)<money)return SendBotMessage(playerid,"Извините, но у вас недостаточно денег!");
		    BizInfo[biz][bProducts] -= (money/10);
			GiveBizMoney(biz,money);
		}
	    if(GiveGun(playerid, weaponid, ammos) != -1)
	    {
	        if(GetMoney(playerid)<money) return SendBotMessage(playerid,"Извините, но у вас недостаточно денег!");
		    GiveMoney(playerid, -money);
		    aml(52, playerid, "", "покупка оружия", money);
		    SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы купили %s с %i боеприпасами за $%i", WeaponNames[weaponid], ammos, money);
		    SendAmmoBot(playerid);
		    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			return 0;
		}
	}
	PlayerTextDrawHide(playerid,InfoText[playerid]);
	TextDrawHideForPlayer(playerid,Boxmenu0);
	TextDrawHideForPlayer(playerid,Boxmenu1);
	TextDrawHideForPlayer(playerid,Boxmenu2);
	TextDrawHideForPlayer(playerid,ButtonLeft);
	TextDrawHideForPlayer(playerid,ButtonRight);
	TextDrawHideForPlayer(playerid,ButtonUp);
	TextDrawHideForPlayer(playerid,ButtonDown);
	TextDrawHideForPlayer(playerid,ButtonCancel);
	TextDrawHideForPlayer(playerid,ButtonSelect);
	TextDrawHideForPlayer(playerid,boxaccept);
	TextDrawHideForPlayer(playerid,boxcancel);
	TextDrawHideForPlayer(playerid,Boxmenu3);
	CancelSelectTextDraw(playerid);
	return 0;
}
CMD:cancel(playerid)
{
    if(BuyInt[playerid] != -1)
 	{
 	    if(PI[playerid][pDCTime] != 1)
 	    {
 	    	PI[playerid][pDCTime] = 1;
 	    	UpdatePlayerDataInt(playerid, "DCTime", 1);
 	    }
        TogglePlayerControllable(playerid, true);
		BuyInt[playerid] = -1;
		SettingSpawn(playerid);
		SpecPl(playerid, false);
		PlayerTextDrawHide(playerid,InfoText[playerid]);
		PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
	}
	else if(Clother[playerid] != -1)
	{
	    new nskin = PI[playerid][pSkin];
	    if(nskin != 0)
	    {
	        J_SetPlayerPos(playerid, 199.0545, -131.5248, 1003.5152);
			TogglePlayerControllable(playerid, false);
			SetCameraBehindPlayer(playerid);
	  		SetPlayerVirtualWorld(playerid,OldWorld[playerid]);
			TogglePlayerDynamicCP(playerid, Binko_CP, true);
			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			Clother[playerid] = -1;
			SetPlayerSkinEx(playerid,PI[playerid][pSkin]);
	    }
		else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны выбрать скин!");
	}
	else if(Buyitem[playerid] != -1)
	{
        TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		Buyitem[playerid] = -1;
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		PI[playerid][pType]=-1;
		SetPVarInt(playerid,"timetobuy2",0);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    BuyGuns[playerid] = -1;
	    PlayerTextDrawHide(playerid, InfoText[playerid]);
	    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отказались покупать оружие");
	    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		SetCameraBehindPlayer(playerid);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
	}
	PlayerTextDrawHide(playerid,InfoText[playerid]);
	TextDrawHideForPlayer(playerid,Boxmenu0);
	TextDrawHideForPlayer(playerid,Boxmenu1);
	TextDrawHideForPlayer(playerid,Boxmenu2);
	TextDrawHideForPlayer(playerid,ButtonLeft);
	TextDrawHideForPlayer(playerid,ButtonRight);
	TextDrawHideForPlayer(playerid,ButtonUp);
	TextDrawHideForPlayer(playerid,ButtonDown);
	TextDrawHideForPlayer(playerid,ButtonCancel);
	TextDrawHideForPlayer(playerid,ButtonSelect);
	TextDrawHideForPlayer(playerid,boxaccept);
	TextDrawHideForPlayer(playerid,boxcancel);
	TextDrawHideForPlayer(playerid,Boxmenu3);
	CancelSelectTextDraw(playerid);
	return 1;
}
CMD:opengate(playerid)
{
    if(GetPVarInt(playerid,"OGReset") > gettime()) return 1;
    SetPVarInt(playerid,"OGReset",gettime() + 2);
	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
	    new forcount = MuchNumber(sizeof(GateInfo), sizeof(BarrierInfo), sizeof(DoorInfo));
	    for(new i;i < forcount;i ++)
		{
		    if(i < sizeof(GateInfo))
		    {
		        if(GateInfo[i][gCreated])
		        {
					if(IsPlayerInRangeOfPoint(playerid,6.2,GateInfo[i][gClose_X],GateInfo[i][gClose_Y],GateInfo[i][gClose_Z]))
					{
					    if(GateInfo[i][gWorld]==-1 || GetPlayerVirtualWorld(playerid)==GateInfo[i][gWorld])
					    {
							if(GateInfo[i][gOrg] == TEAM_NONE || GetTeamID(playerid) == GateInfo[i][gOrg] || ( IsACopGate(i) && IsACop(playerid) ) || PI[playerid][pAdmin] >= ADM_GRAND_ADMIN)
							{
								if(!GateInfo[i][gOpen])
								{
									MoveDynamicObject(gGate[i],GateInfo[i][gOpen_X],GateInfo[i][gOpen_Y],GateInfo[i][gOpen_Z],3.0);
									SetTimerEx("GateClose",7000,0,"i",i);
									GateInfo[i][gOpen] = true;
									if(GateInfo[i][gForGateid] != -1)
									{
									    new gateid = GateInfo[i][gForGateid];
									    MoveDynamicObject(gGate[gateid],GateInfo[gateid][gOpen_X],GateInfo[gateid][gOpen_Y],GateInfo[gateid][gOpen_Z],3.0);
										GateInfo[gateid][gOpen] = true;
										SetPlayerChatBubble(playerid, "Открыл ворота", COLOR_GREEN, 10.0, 5000);
									}
								}
							}
							else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этих ворот!");
							break;
						}
					}
				}
			}
			if(i < sizeof(DoorInfo))
		    {
		        if(DoorInfo[i][dCreated])
		        {
					if(IsPlayerInRangeOfPoint(playerid,2.0,DoorInfo[i][dClose_X],DoorInfo[i][dClose_Y],DoorInfo[i][dClose_Z]))
					{
					    if(DoorInfo[i][dWorld]==-1 || GetPlayerVirtualWorld(playerid)==DoorInfo[i][dWorld])
					    {
							if(DoorInfo[i][dOrg] == TEAM_NONE || GetTeamID(playerid) == DoorInfo[i][dOrg] || ( IsACopDoor(i) && IsACop(playerid) ) || PI[playerid][pAdmin] >= ADM_GRAND_ADMIN)
							{
								if(!DoorInfo[i][dOpen])
								{
									MoveDynamicObject(dDoor[i],DoorInfo[i][dOpen_X],DoorInfo[i][dOpen_Y],DoorInfo[i][dOpen_Z],3.0);
									SetTimerEx("DoorClose", 6000, false, "i", i);
									DoorInfo[i][dOpen] = true;
									if(DoorInfo[i][dForDoorid] != -1)
									{
									    new doorid = DoorInfo[i][dForDoorid];
									    MoveDynamicObject(dDoor[doorid],DoorInfo[doorid][dOpen_X],DoorInfo[doorid][dOpen_Y],DoorInfo[doorid][dOpen_Z],3.0);
										DoorInfo[doorid][dOpen] = true;
										SetPlayerChatBubble(playerid, !"Открыл дверь", COLOR_GREEN, 10.0, 5000);
									}
								}
							}
							else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этой двери!");
							break;
						}
					}
				}
			}
			if(i < sizeof(BarrierInfo))
			{
				if(IsPlayerInRangeOfPoint(playerid, 8.0 ,BarrierInfo[i][brPos_X], BarrierInfo[i][brPos_Y], BarrierInfo[i][brPos_Z]))
				{
					if(BarrierInfo[i][brOrg] == TEAM_NONE || GetTeamID(playerid) == BarrierInfo[i][brOrg] || ( IsACopBarrier(i) && IsACop(playerid) ) || PI[playerid][pAdmin] >= ADM_GRAND_ADMIN)
					{
						if(!BarrierInfo[i][brOpen])
						{
                            if(IsPlayerInRangeOfPoint(playerid, 8.0, -2154.069580, -745.830383, 31.006355) || IsPlayerInRangeOfPoint(playerid,8.0,-2154.069580, -967.349243, 31.006355))
						    {
								if(GetMoney(playerid) < 300) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег чтобы оплатить комиссию авторынка!");
								GiveMoney(playerid,-300);
								aml(52, playerid, "", "открытие шлагбаума", 300);
						        GiveBizMoney(AutoMarket, 300);
							    MoveDynamicObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
							    SetTimerEx("BarrierClose",15000,0,"i",i);
							    BarrierInfo[i][brOpen] = true;
							    SCM(playerid, COLOR_LIGHTGREEN, !"[В] Шлагбаум закроется через 15 секунд");
							    SetPlayerChatBubble(playerid, "Открыл шлагбаум", COLOR_GREEN, 10.0, 5000);
							    if(BarrierInfo[i][brForBarrierID] != -1)
							    {
							        new barrierid = BarrierInfo[i][brForBarrierID];
							        MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[barrierid][brPos_A]+180);
								    BarrierInfo[barrierid][brOpen] = true;
							    }
							}
							else if(IsPlayerInRangeOfPoint(playerid, 8.0, 1792.503540, 811.798828, 9.843500) || IsPlayerInRangeOfPoint(playerid, 8.0, 1808.153442, 811.798828, 9.793500) || IsPlayerInRangeOfPoint(playerid, 8.0, 57.626400, -1536.844482, 3.944200) || IsPlayerInRangeOfPoint(playerid, 8.0, 59.734100, -1521.458862, 3.944200)) {
								if(GetMoney(playerid) < 100)
									return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас недостаточно денег чтобы оплатить проезд!");

								GiveMoney(playerid, -100);
								aml(52, playerid, "", "открытие шлагбаума", 100);
							    MoveDynamicObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
							    SetTimerEx("BarrierClose", 15000, false, "i", i);
							    BarrierInfo[i][brOpen] = true;
							    SCM(playerid, COLOR_LIGHTGREEN, !"[В] Шлагбаум закроется через 15 секунд");
							    SetPlayerChatBubble(playerid, !"Открыл шлагбаум", COLOR_GREEN, 10.0, 5000);
							    if(BarrierInfo[i][brForBarrierID] != -1)
							    {
							        new barrierid = BarrierInfo[i][brForBarrierID];
							        MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[barrierid][brPos_A]+180);
								    BarrierInfo[barrierid][brOpen] = true;
							    }
							}
							else
							{
                                MoveDynamicObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
							    SetTimerEx("BarrierClose", 15000, false, "i", i);
							    BarrierInfo[i][brOpen] = true;
							    SCM(playerid, COLOR_LIGHTGREEN, !"[В] Шлагбаум закроется через 15 секунд");
							    SetPlayerChatBubble(playerid,  !"Открыл шлагбаум", COLOR_GREEN, 10.0, 5000);
							    if(BarrierInfo[i][brForBarrierID] != -1)
							    {
							        new barrierid = BarrierInfo[i][brForBarrierID];
							        MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[barrierid][brPos_A]+180);
								    BarrierInfo[barrierid][brOpen] = true;
							    }
							}
						}
					}
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет ключей от этого шлагбаума!");
					break;
				}
			}
		}
	}
	return 1;
}
CMD:eject(playerid, params[])
{
	new id;
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /eject [ID/Name]");
	if(playerid == id) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя выкинуть самого себя.");
	if(GetPlayerState(playerid) != 2) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Только водитель может сделать это");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return 0;
	new power = random(10);
	if(power > 5)
	{
		f(str_2, sizeof(str_2), " %s неудачно попытался выкинуть из транспорта игрока %s", cPN(playerid), cPN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
	}
	else
	{
	    GangZoneHideForPlayer(id, HideMapZone);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(id,true);
		f(str_2, sizeof(str_2), " %s выкинул из транспорта %s", cPN(playerid), cPN(id));
		ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
		RemovePlayerFromVehicle(id);
	}
	return 1;
}
CMD:medcard(playerid, params[])
{
	if(!IsAMedic(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не состоите в больнице штата!");
    if(PI[playerid][pRank] < 3) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш ранг недостаточно высок для этого.");
    new id, status;
    if(sscanf(params, "ui", id, status))
	{
		SCM(playerid, COLOR_LIGHTRED, !"Используйте: /medcard [id] [статус]");
		SCM(playerid, -1, !"__________ Статусы __________");
		SCM(playerid, COLOR_GREY, !" 0. Не определен");
		SCM(playerid, -1, !" 1. Психически не здоров(а)");
		SCM(playerid, -1, !" 2. Наблюдаются отклонения");
		return SCM(playerid, -1, !" 3. Полностью здоровый(ая)");
	}
	if(!(-1 <= status <= 3)) return 1;
	if(!ProxDetectorS(3.0, playerid, id, 1)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
    if(!IsValidPassport(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У этого игрока нет паспорта.");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    static Med[30];
    Med[0] = EOS;
    MedCardInfo[id][mcState] = status;
	switch(MedCardInfo[id][mcState])
	{
	    case 0: Med = "Не определен";
	    case 1: Med = "Психически не здоров(а)";
	    case 2: Med = "Наблюдаются отклонения";
	    case 3: Med = "Полностью здоровый(ая)";
	}
    new year, month, day;
    getdate(year, month, day);
    static str[20];
    f(str, sizeof(str), "%i/%i/%i", day, month, year);
    SetString(MedCardInfo[id][mcDate], str);
    if(status == 3) ac_ShowPlayerDialog(id, 0),ShowPlayerDialogf(id, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Понял", !"", "{FFFFFF}Медик %s выдал вам медицинскую карту: %s\nПоказать карту: '/showmc'\n{D84343}Список посещений псих. больницы, очищен!", PN(playerid), Med);
    else ac_ShowPlayerDialog(id, 0),ShowPlayerDialogf(id, 0, DIALOG_STYLE_MSGBOX, !"{BFBBBA}", !"Понял", !"", "{FFFFFF}Медик %s выдал вам медицинскую карту: %s\nПоказать карту: '/showmc'", PN(playerid), Med);
    SCMf(playerid, COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы выдали медицинскую карту %s: %s", PN(id), Med);
    if(status == 3)
    {
    	PI[id][pPcix] = 0;
    	UpdatePlayerDataInt(playerid, "Pcix", PI[playerid][pPcix]);
    }
   	return mysql_pqueryf(mysql, "UPDATE `Passports` SET `McDate` = '%s', `McState` = '%i' WHERE `Name` = '%s'", MedCardInfo[id][mcDate], MedCardInfo[id][mcState], PN(id));
}
CMD:fmute(playerid, params[])
{
	if(!PI[playerid][pLeader] && PI[playerid][pRank] < 8) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам не доступна эта команда!");
    static id, time, reason[100];
    if(sscanf(params,"dds[100]", id, time, reason)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /fmute [id] [time] [reason]");
    if(CheckIsADomen(playerid, reason)) return 0;
    if(IsAIP(playerid, reason)) return 1;
    if(PI[playerid][pMuteTime]>0) return 0;
    if(time > 180) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Установить время заглушки можно не более на 60 минут!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    if(GetTeamID(id) != GetTeamID(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок не состоит в твоей организации!");
    if(time == 0) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На 0 минут нельзя!");
    if(PI[id][pLeader] > 0 ) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете выдать мут лидеру");
    f(str_2,sizeof(str_2),"Сотрудник %s заглушил(а) игрока %s на %i минут. Причина: %s",PN(playerid),PN(id),time,reason);
    SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTRED, str_2);
    PI[id][pFMuteTime] = time*60;
	return 1;
}
CMD:funmute(playerid, params[])
{
	if(!PI[playerid][pLeader] && PI[playerid][pRank] < 8) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вам не доступна эта команда!");
    new id;
    if(sscanf(params,"d", id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /funmute [id]");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    if(GetTeamID(id) != GetTeamID(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этот игрок не состоит в твоей организации!");
    f(str_2,sizeof(str_2),"Сотрудник %s разглушил игрока %s",PN(playerid),PN(id));
	SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTRED, str_2);
	PI[id][pFMuteTime] = 0;
	return 1;
}
CMD:referals(playerid) return ac_ShowPlayerDialog(playerid, 13300),ShowPlayerDialogf(playerid, 13300, DIALOG_STYLE_LIST, !"{BFBBBA}{FFFFFF}Перечень | {ae433d}Рефералы", !"»", !"x", "{85bb65}[0]{FFFFFF} Проверить реферала\n{85bb65}[1]{FFFFFF} Мои рефералы\n{85bb65}[2]{FFFFFF} Возвращать рефералам: {85bb65}${FFFFFF}%i", PI[playerid][pReferalReturn]);
CMD:unrentcar(playerid, params[])
{
    new car = ArendKey[playerid];
	new vehid = ArendCar[0] + car;
	if(ArendInfo[car][aRentID] == playerid)
	{
		ArendInfo[car][aRentID] = INVALID_PLAYER_ID;
		SetVehicleToRespawn(vehid);
	}
	ArendKey[playerid] = INVALID_VEHICLE_ID;
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы отказались от аренды транспорта");
	return 1;
}
CMD:fillcar(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы должны находится в транспорте!");
    if(!GetInvCount(playerid, Item_Canister)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет канистры!");
    new carid = GetPlayerVehicleID(playerid);
    vTemp[carid][Fuel] += 15;
    if(vTemp[carid][Fuel] >= 100) vTemp[carid][Fuel] = 100;
    InvAdd(playerid, Item_Canister, -1);
    aml(102, playerid, "", "заправил свою машину", Item_Canister, 1);
    f(str_1, sizeof(str_1), " %s заправил свою машину.", cPN(playerid));
	ProxDetector(25, playerid, str_1, COLOR_ME);
    return GameTextForPlayer(playerid, !"~w~CAR IS ~g~REFUELED", 5000, 6);
}
CMD:fixmycar(playerid, params[])
{
	if(PI[playerid][pVIP] < STATUS_PLATIN) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Эта функция доступна только для игроков с VIP статусом выше 3-го уровня!");
	extract params -> new car; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используйте: /fixmycar [id]");
	if(!IsPlayerHaveCar(playerid, GetVehicleID(car))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Это не ваш транспорт!");
	if(GetMoney(playerid) < 1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно денег! Необходимо 1000$");
	GiveMoney(playerid, -1000);
	aml(52, playerid, "", "доставка машины к дому", 1000);
	SetVehicleToRespawn(car);
	return GameTextForPlayer(playerid, !"Car is returned", 0, 1);
}
CMD:deltun(playerid, params[])
{
	extract params -> new car; else return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /deltun [id транспорта]");
	new number = GetVehicleID(car);
	if(number != INVALID_VEHICLE_ID) if(!IsPlayerHaveCar(playerid, number)) return 0;
	if(GetMoney(playerid) < 10000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно денег! Необходимо 10 000$");
	GiveMoney(playerid, -10000);
	aml(52, playerid, "", "удаление тюнинга с авто", 10000);
	DelTunCar(car);
	SetVehicleToRespawn(car);
	SaveOwnableCar(number);
	return SCM(playerid, COLOR_LIGHTBLUE, !"[Информация] {FFFFFF}Вы удалили тюнинг с вашего транспорта");
}
CMD:fill(playerid)
{
	if(GetPlayerState(playerid) == 2)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(GetVehicleKindFuel(carid) != -1)
	    {
	 		if(IsAtGasStation(playerid))
			{
	  			new fuelid = GetGasStation(playerid);
				new bizid = FuelInfo[fuelid][fBizzID];
				if(BizInfo[bizid][bProducts] >= 100)
				{
		 			if(vTemp[carid][Fuel] < 100.0)
		 			{
		 			    if(KindFuel[playerid] == -1)
		 			    {
           					if(GetVehicleKindFuel(carid) != 0) GameTextForPlayer(playerid,"~w~This type of fuel ~r~is not suitable~w~~n~for your vehicles!",10000,4);
							PlayerFuel[playerid] = fuelid;
			 			    CountFuel[playerid] = 0.0;
					        KindFuel[playerid] = 0;
					        new Float:fuel = 100.0 - vTemp[carid][Fuel];
					        f(str_2, sizeof(str_2), "0/%.1f~g~L", fuel);
					        SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Используйте курсор чтобы выбрать тип топлива и его кол-во");
							SCM(playerid, COLOR_GREEN, !"[Информация] {FFFFFF}Так же вы можете нажать на \"кол-во топлива\" для вызова доп. окна ввода");
						 	PlayerTextDrawSetString(playerid,FuelCostDraw[playerid], "$0");
						 	PlayerTextDrawSetString(playerid,KindFuelDraw[playerid], FuelName[0]);
							PlayerTextDrawTextSize(playerid,PlayerFuelBar[playerid], 243.0, 0.0);
							
							for(new i; i < 30; i++)
							{
							 	TextDrawShowForPlayer(playerid, FillTD[i]);
							} 	
							PlayerTextDrawShow(playerid, FuelCostDraw[playerid]);
							PlayerTextDrawShow(playerid, KindFuelDraw[playerid]);
							SelectTextDraw(playerid, 0xAFAFAFFF);
						}
					}
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Ваш транспорт полностью заправлен");
				}
				else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}На этой заправке не осталось топлива");
			}
			else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы ни на 1-й из заправок...");
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Топлива для вашего вида транспорта у нас нет");
	}
	return 1;
}
CMD:find(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SCM(playerid, COLOR_RED, !"Используй: /find [id]");
	if(!IsACop(playerid)) return SCM(playerid, COLOR_RED, !"Вы не полицейский!");
    if(IsANotControllable(playerid)) return SCM(playerid, COLOR_RED, !"Вы не можете двигаться!");
	if(playerid == params[0]) return 0;
	if(PI[params[0]][pMaskON]>0) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Невозможно найти местонахождение этого человека!");
	if(GetPlayerInterior(params[0]) != GetPlayerInterior(playerid)) return SCM(playerid, COLOR_VALIK, !"[Ошибка] {FFFFFF}Игрок находится в каком-то здании");
	if(PI[params[0]][pWanted]==0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете разыскивать игрока который не преступник!");
	if(!IsPlayerConnected(params[0])) return 0;
	new Float:POS[3];
	GetPlayerPos(params[0], POS[0], POS[1], POS[2]);
	EnableGPSForPlayer(playerid, POS[0], POS[1], POS[2]);
	return 1;
}
CMD:usebad(playerid)
{
    if(!GetInvCount(playerid, Item_DrugPills)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет лекарства для лечения наркозависимости!");
    if(medlomka[playerid]>0)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы уже приняли лекарство!");
	if(PI[playerid][pAllRepl]==0)return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы не больны наркозависимостью!");
	if(startlomka[playerid]==1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете принять лекарства во время ломки!");
	if(CuffedTime[playerid]!=0 || Cuffed{playerid})return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете сейчас принять лекарства!");
	if(!IsPlayerInRangeOfPoint(playerid, 100.0,2065.5859,-1374.3174,1001.2960))return SCM(playerid, COLOR_RED, !"Принять лекарства можно только в больнице!");
	InvAdd(playerid, Item_DrugPills, -1);
	aml(102, playerid, "", "принял лекарство", Item_DrugPills, 1);
	SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы приняли лекарство для лечения от наркозависимости!");
	SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Скоро могут начатся побочные эфекты!");
	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	medlomka[playerid]=240;
	return 1;
}
CMD:recept(playerid, params[])
{
	new id;
	if(CuffedTime[playerid]!=0 || Cuffed{playerid})return 0;
	if(!IsAMedic(playerid))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Рецепт может выдать только доктор!");
	if(PI[playerid][pRank]<4)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Рецепт может выдать только доктор с 4-го ранга!");
	if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используй: /recept [id]");
    if(!ProxDetectorS(3.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве!");
    f(str_2,sizeof(str_2),"%s выдал %s рецепт для покупки лекарств.",PN(playerid),PN(id));
    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Вы успешно выдали рецепт.");
    SCM(id,COLOR_GREY,"[Информация] {FFFFFF}Вам выдали рецепт, благодаря которому вы можете купить аптечки или лекарство от нарк.зависимости.");
 	PlayerDrunkLevel[id] = 1;
 	UpdatePlayerDataInt(id, "Drunk", 1);
	return 1;
}
CMD:usedrugs(playerid, params[])
{
    if(GetPlayerVirtualWorld(playerid)==534)return 0;
	if(GetInvCount(playerid, Item_Drugs) < 1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет наркотиков");
    if(Cuffed{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы скованы и не можете двигаться");
	if(PI[playerid][pHeal] > 0) return SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Пока ты в больнице , ты не можешь использовать наркотики!");
    if(UseDrugsTime[playerid] > 120) return 0;
    if(GetPVarInt(playerid,"narko")>gettime())return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Подождите несколько секунд!");
    new Float:Health;
    GetPlayerHealth(playerid,Health);
	Health += 30;
	if(Health > 100) Health = 100;
    J_SetPlayerHealth(playerid,Health);
    if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	InvAdd(playerid, Item_Drugs, -1);
	aml(102, playerid, "", "принял дозу наркотиков", Item_Drugs, 1);
	UseDrugsTime[playerid] += 60;
	PI[playerid][pAllRepl]++;
	UpdatePlayerDataInt(playerid, "AllRepl", PI[playerid][pAllRepl]);
	if(startlomka[playerid]==1)
	{
		PI[playerid][pOldRepl]=0;
		UpdatePlayerDataInt(playerid, "OldRepl", 0);
	}
	startlomka[playerid]=0;
	SetPlayerDrunkLevel (playerid, 3900);
	f(str_2,sizeof(str_2)," %s принимает дозу наркотиков",cPN(playerid));
	ProxDetector(30,playerid, str_2,COLOR_PURPLE);
	if(!IsPlayerInAnyVehicle(playerid))ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPVarInt(playerid,"narko",gettime()+6);
    ClearAnimations(playerid);
	return 1;
}
CMD:balon(playerid, params[])
{
    if(GetInvCount(playerid, Item_Spray) < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет балончика с краской");
    new color_1, color_2;
    if(sscanf(params, "dd", color_1, color_2)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /balon [цвет 1] [цвет 2]");
    if(color_1 < 0 || color_2 < 0) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /balon [цвет 1 > 0] [цвет 2 > 0]");
    SCM(playerid, COLOR_GREY, !"[Информация] {FFFFFF}Подойдите к машине и переодически жмите левую клавишу мышки , для того чтобы ее покрасить!");
    SCM(playerid, COLOR_GOLD, !"[Информация] {FFFFFF}Узнать цвета можно на форуме "FORUM"");
    GiveGun(playerid, 41, 300);
    SetPVarInt(playerid, !"balon",color_1);
    SetPVarInt(playerid, !"balon1",color_2);
    InvAdd(playerid, Item_Spray, -1);
    return aml(102, playerid, "", "заюзал балончик с краской", Item_Spray, 1);
}
CMD:gotome(playerid, params[])
{
	if(IsACop(playerid))
	{
	    new id;
		if(sscanf(params,"u",id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /gotome [id]");
		if(!TeamDuty{playerid}) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не на дежурстве");
		if(ProxDetectorS(2.0, playerid, id))
		{
		    if(GotoInfo[playerid][gtID] == INVALID_PLAYER_ID)
		    {
		        if(GotoInfo[id][gtGoID] == INVALID_PLAYER_ID)
		        {
					if(Cuffed{id})
					{
                        CheckPlayerGoCuff(playerid);
                        CheckPlayerGoCuff(id);
					    GotoInfo[id][gtID] = INVALID_PLAYER_ID;
					    GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
					    GotoInfo[playerid][gtID] = id;
					    GotoInfo[id][gtGoID] = playerid;
					    GotoInfo[id][gtState] = GetPlayerState(playerid);
					    GetPlayerPos(id, GotoInfo[id][gtX], GotoInfo[id][gtY], GotoInfo[id][gtZ]);
					    SCM(playerid, -1, !"[Информация] {FFFFFF}Чтобы перестать тащить игрока введите {33AA33}/ungotome");
					    f(str_2, sizeof(str_2), "* %s потащил игрока %s за собой", cPN(playerid), cPN(id));
					    ProxDetector(25.0, playerid, str_2, COLOR_PURPLE);
					    TogglePlayerControllable(id, true);
					}
					else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не скован");
		        }
		        else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Этого игрока уже кто-то ведет за собой");
		    }
		    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы уже кого-то ведете за собой");
		}
		else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
	}
	return 1;
}
CMD:ungotome(playerid, params[])
{
	if(IsACop(playerid))
	{
		new id;
		if(sscanf(params,"u",id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /ungotome [id/name]");
		if(ProxDetectorS(1.5,playerid,id))
		{
			if(Cuffed{id} && GotoInfo[playerid][gtID] == id)
			{
				f(str_2,sizeof(str_2),"* %s перестал тащить за собой игрока %s",cPN(playerid),cPN(id));
				ProxDetector(25,playerid, str_2,COLOR_PURPLE);
				TogglePlayerControllable(id, Cuffed{id});
				CheckPlayerGoCuff(id);
				CheckPlayerGoCuff(playerid);
			}
			else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не скован, либо вы не тащите его");
		}
	}
	return 1;
}
CMD:pgetip(playerid, params[])
{
	if(PI[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	new id;
	if(sscanf(params,"d", id)) return SCM(playerid, -1, !"Введите: /pgetip [id]");
	if(PI[playerid][pAdmin] < PI[id][pAdmin] || Osnovat(PN(id))) return SCM(playerid, COLOR_RED, !"Пшел нах!");
	SCMf(playerid, COLOR_ACHAT, "- - - - Совпадение с: %s. - - - -", PlayerIp[id]);
	SCM(playerid, COLOR_ACHAT, !" ");
	foreach(new i: Player) if(GetString(PlayerIp[i], PlayerIp[id])) SCMf(playerid, COLOR_ORANGE, "- %s[%i]", PN(i), i, PlayerIp[i]);
	return aml(1, playerid, PN(id), "посмотрел IP игрока");
}
CMD:check_twink(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3)
		return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid})
		return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);

	new ip[16];
	if(sscanf(params, "s[16]", ip))
	    return SCM(playerid, COLOR_RED, !"Используй: /check_twink [ip]");
    if(IsAIP(playerid, ip))
		return 1;
	return 1;
}
CMD:dm(playerid)
{
	if(!IsPlayerLogged{playerid}) return 0;
	
	new string[200];
	format(string, sizeof(string), "{B03131}[1]{FFFFFF} Деревня-1\tОнлайн: %d чел.\n{B03131}[2]{FFFFFF} ТОП-15 DM-щиков\n{B03131}[3]{FFFFFF} Личная статистика\n{B03131}[4]{FFFFFF} Выход", DmZonePlayers);
	ShowPlayerDialog(playerid, 10209, DIALOG_STYLE_LIST, "{FFFFFF}DM-зоны | {BE2D2D}Меню", string, "»", "x");
	return 1;
}
CMD:accept(playerid,param[])
{
	new id = PanelPlayerID[playerid], Float: money = CenaRaboti[playerid];
    if(!IsPlayerLogged{id}) return 0;
    if(PI[id][pTelNum] <= 0) return 0;
    new price = floatround(money, floatround_floor);
    if(GetMoney(playerid) < price) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас не достаточно денег чтобы заплатить продавцу!");
    if(!ProxDetectorS(9.0, playerid, id, 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(price < 1) return 0;
    switch(Ingatre[playerid])
    {
        case 1:
        {
            f(str_2,sizeof(str_2),"[Информация]{FFFFFF} %s успешно продал вам SIM карту с номером {52A32A}%i{FFFFFF} за {52A32A}%i$.",PN(id),PI[id][pTelNum],price);
			SCM(playerid,COLOR_VALIK,str_2);
			f(str_2,sizeof(str_2),"[Информация] {FFFFFF}%s принял ваше предложение о покупке SIM карты. Вы получили {52A32A}%i$.",PN(playerid),price);
		    SCM(id,COLOR_VALIK,str_2);
		    if(price > 10000)
		    {
            	foreach(new i: Admin)
            	{
            		if(ShowIP{i}) SCMf(i, COLOR_RED, "Игрок %s[%i] продал симку игроку %s[%i] на счет $%i [$%i]", PN(id), id, PN(playerid), playerid, price);
            		else SCMf(i, COLOR_RED, "Игрок %s[%i] [IP: %s] продал симку игроку %s[%i] [IP: %s] на счет $%i [$%i]", PN(id), id, PlayerIP(id), PN(playerid), playerid, PlayerIP(playerid), price);
            	}
		    }
			PI[playerid][pTelNum] = PI[id][pTelNum];
			UpdatePlayerDataInt(playerid, "TelNum", PI[id][pTelNum]);
			PI[id][pTelNum] = 0;
			UpdatePlayerDataInt(id, "TelNum", 0);
		    GiveMoney(playerid, -price);
			GiveMoney(id, price);
			aml(50, playerid, PN(id), "продажа сим-карты", price);
        }
    }
    CenaRaboti[playerid] = 0;
	Ingatre[playerid] = 0;
	PanelPlayerID[playerid] = -1;
	return 1;
}
CMD:nope(playerid,param[])
{
	if(CenaRaboti[playerid]==0)return SCM(param[0], -1, !"[Ошибка] {FFFFFF}Вам никто не предлагал купить SIM карту!");
	if(PanelPlayerID[playerid]==-1)return SCM(param[0], -1, !"[Ошибка] {FFFFFF}Вам никто не предлагал купить SIM карту!");
	SCM(playerid, COLOR_RED, !"[Информация] {FFFFFF}Вы успешно отказались от предложения купить SIM карту.");
	SCMf(PanelPlayerID[playerid], COLOR_RED, "[Информация] {FFFFFF} %s отказался от вашего предложения!",PN(playerid));
	CenaRaboti[playerid] = 0;
	Ingatre[playerid] = 0;
	PanelPlayerID[playerid] = -1;
	return 1;
}
CMD:sellcard(playerid,param[])
{
    if(Getemer[playerid] > gettime()) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Не флуди!");
    if(sscanf(param,"ud",param[0],param[1])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /sellcard [id] [цена]");
    if(param[1] < 1) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте цену больше 1$!");
    if(PI[param[0]][pMoney] < param[1]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет столько денег чтобы вам заплатить!");
    if(!ProxDetectorS(9.0, playerid, param[0], 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
    if(param[0] == playerid) return 0;
    if(!PI[playerid][pTelNum]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У вас нет SIM карты!");
	if(!IsPlayerLogged{param[0]}) return 0;
	PanelPlayerID[param[0]] = playerid;
	CenaRaboti[param[0]] = param[1];
	SCMf(param[0], COLOR_GREEN, "[Информация] {52A32A}%s{FFFFFF} предлагает продать SIM карту {52A32A}%i{FFFFFF} ,за {52A32A}%i${FFFFFF}.",PN(playerid),PI[playerid][pTelNum],param[1]);
	SCM(param[0], -1, !"[Информация] {FFFFFF}/accept - чтобы принять предложение /nope - чтобы отклонить.");
	SCMf(playerid, -1, "Вы предложили {52A32A}%s{FFFFFF} продать свою SIM карту за {52A32A}%i${FFFFFF}.", PN(param[0]), param[1]);
	Ingatre[param[0]] = 1;
	Getemer[playerid] = gettime() + 5;
	return 1;
}
CMD:repare(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не механик!");
	new carid = GetPlayerVehicleID(playerid);
	if(vTemp[carid][vJob] != JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится в машине механика!");
	if(sscanf(params, "ud", params[0], params[1])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /repare [id] [цена]");
	if(params[1] < 1 || params[1] > 1000) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Цена не может быть меньше $1 и не больше $1000!");
	if(PI[params[0]][pMoney] < params[1]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет столько денег чтобы вам заплатить!");
	if(GetPlayerState(params[0]) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок которому вы хотите помочь, должен быть за рулем!");
 	if(!ProxDetectorS(9.0, playerid, params[0], 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
	if(params[0] == playerid) return 0;
	if(!IsPlayerLogged{params[0]}) return 0;
	PanelPlayerID[params[0]] = playerid;
	CenaRaboti[params[0]] = params[1];
	ac_ShowPlayerDialog(params[0], 1898),ShowPlayerDialogf(params[0], 1898, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Вы согласны?", !"Принять", !"Отмена", "Механик {52A32A}%s{FFFFFF} предлагает починить ваш транспорт за {52A32A}%i${FFFFFF}.", PN(playerid), params[1]);
    SCMf(playerid, -1, "Вы предложили {52A32A}%s{FFFFFF} починить транспорт за {52A32A}%i${FFFFFF}.", PN(params[0]), params[1]);
	Ingatre[params[0]] = 1;
    return 1;
}
CMD:filscar(playerid, params[])
{
	if(PI[playerid][pJob] != JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не механик!");
	new carid = GetPlayerVehicleID(playerid);
	if(vTemp[carid][vJob] != JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится в машине механика!");
	if(sscanf(params, "ud", params[0], params[1])) return SCM(playerid ,COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /filscar [id] [количество в литрах]");
	if(params[1] < 1 || params[1] > 100) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не можете продать меньше 1-го литра и не больше 100 литров!");
	if(PI[params[0]][pMoney] < (params[1] * BenzinCena[carid])) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}У этого человека нет столько денег чтобы вам заплатить!");
	if(params[0] == playerid) return 0;
	if(GetPlayerState(params[0]) != 2) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок которому вы хотите помочь, должен быть за рулем!");
	if(!ProxDetectorS(9.0, playerid, params[0], 1)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы далеко от игрока!");
	if(!IsPlayerLogged{params[0]}) return 0;
	if(BenzinCount[carid] < params[1]) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В вашей машине не достаточно бензина для продажи!");
	PanelPlayerID[params[0]] = playerid;
	CenaRaboti[params[0]] = (params[1] * BenzinCena[carid]);
	f(str_2, sizeof(str_2), "Механик {52A32A}%s{FFFFFF} предлагает заправить ваш транспорт на {52A32A}%i{FFFFFF}л. за {52A32A}%.1f${FFFFFF}.", PN(playerid), params[1], (params[1] * BenzinCena[carid]));
	SPD(params[0], 1898, DIALOG_STYLE_MSGBOX, !"Вы согласны?", str_2, !"Принять", !"Отмена");

    f(str_2, sizeof(str_2), "Вы предложили {52A32A}%s{FFFFFF} заправить транспорт за {52A32A}%.1f${FFFFFF}.", PN(params[0]), (params[1] * BenzinCena[carid]));
	SCM(playerid, -1, str_2);

	Ingatre[params[0]] = 2;
	return 1;
}
CMD:azsmonitor(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid);
    if(PI[playerid][pJob]!= JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не механик!");
	if(vTemp[carid][vJob]!=JOB_MECHANIC)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится в машине механика!");
    SCM(playerid, COLOR_GREY, !"Мониторинг АЗС.");
	for(new i;i<OWNABLEBIZES;i++) if(BizInfo[i][bState] == 6 && !GetString(BizInfo[i][bOwner],"The State")) SCMf(playerid, COLOR_GREY, "-{FFFFFF} Номер заправки: %i. Стоимость {AFAFAF}1-го{FFFFFF} литра бензина: {AFAFAF}$%.1f${FFFFFF}",i,BizInfo[i][bEnterPrice]);
	return 1;
}
CMD:contractfill(playerid,param[])
{
	new carid = GetPlayerVehicleID(playerid);
	if(PI[playerid][pJob]!= JOB_MECHANIC) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы не механик!");
	if(vTemp[carid][vJob]!=JOB_MECHANIC)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится в машине механика!");
    if(!IsAtGasStation(playerid)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Вы должны находится возле одной из заправок!");
    new fuelid = GetGasStation(playerid);
	new bizid = FuelInfo[fuelid][fBizzID];
	new Float:cost = BizInfo[bizid][bEnterPrice],benz = BizInfo[bizid][bProducts];
	if(benz< (1000-BenzinCount[carid]))return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этой заправке не достаточно бензина чтобы заполнить ваш автомобиль!");
	if(cost<2)return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}В этой заправке слишком дешевый бензин для продажи!");
	if(BenzinCount[carid]>950)return 0;
	BizInfo[bizid][bProducts]-=(1000-BenzinCount[carid]);
	UpdateFuels(bizid);

	Contracter[carid] = bizid;
	BenzinCount[carid]= 1000;
	BenzinCena[carid]=cost;

	f(str_2,sizeof(str_2),"{57B22C}Заправка %.1f$\n{FFFFFF}Бензина: %i/1000",BenzinCena[carid],BenzinCount[carid]);
	UpdateDynamic3DTextLabelText(Benzin[carid], 0xFFFFFFFF, str_2);
	f(str_2,sizeof(str_2),"[Информация] {FFFFFF}Вы успешно заключили контракт с этой АЗС и вы будете получать по {52A32A}%.1f${FFFFFF} за каждый литр бензина!",BenzinCena[carid]/2);
	SCM(playerid,COLOR_VALIK,str_2);
	SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Чтобы прервать контракт с этой АЗС достаточно заключить его с другой!");

	return 1;
}
CMD:dellacc(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return 1;
    static playername[24];
    if(sscanf(params, "s[24]", playername)) return SCM(playerid, COLOR_RED, !"Используйте: /dellacc [ник игрока]");
    static fmt_str[] = "SELECT * FROM `Qelksekm` WHERE `NickName` = '%s'";
	f(str_2, sizeof(str_2), fmt_str, playername);
	return mysql_pquery(mysql, str_2, "OnDelAccount", "ds", playerid, playername);
}
CMD:spplayer(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new player:id; else return SCM(playerid, COLOR_RED, !"Используй: /spplayer [id]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    SendAdminsMessagef(COLOR_RED, "<<<<< %s[%i] Заспавнил игрока %s[%i]!", PN(playerid), playerid, PN(id), id);
    SCMf(id, COLOR_RED, "Администратор %s[%i] вас заспавнил", PN(playerid), playerid);
	PlayerSpawn(id);
	return aml(1, playerid, PN(id), "заспавнил");
}
CMD:check(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new targetid;
    if(sscanf(params, "u", targetid)) return SCM(playerid, COLOR_RED, !"Используй: /check [id]");
	if(targetid == INVALID_PLAYER_ID || targetid == playerid) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    if(PI[playerid][pAdmin] < PI[targetid][pAdmin]) return SCM(playerid, COLOR_GREY, !"Нельзя смотреть статистику админа");
    setcheck[playerid] = targetid;
    return ShowStats(playerid, targetid);
}
CMD:checklic(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /checklic [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return ShowLicenses(playerid, id);
}
CMD:checkpass(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /checkpass [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return ShowPassport(playerid, id);
}
CMD:checkskills(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /checkskills [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return ShowSkills(playerid, id);
}
CMD:checkinv(playerid, params[])
{
	if(!PI[playerid][pAdmin]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id;
    if(sscanf(params,"u",id)) return SCM(playerid, COLOR_RED, !"Используй: /checkinv [id]");
    if(CheckIsASuccesIP(playerid)) return 0;
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_GREY, !"Этот игрок не в сети");
    return TShowStats(playerid, id);
}
CMD:givekey(playerid, params[])
{
	new id, car;
	if(sscanf(params,"ud",id,car)) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Используйте: /givekey [id] [carid]");
	if(!IsPlayerRegCar(playerid, GetVehicleID(car))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не владелец этого транспорта!");
	if(ProxDetectorS(10.0,playerid,id))
	{
	    if(IsPlayerHaveCar(playerid, GetVehicleID(car)))
	    {
	        if(IsValidNumberCars(id))
			{
		        SetCarKeyer(car,PN(id));
		        SCMf(id,COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Игрок %s дал вам копию ключей от транспорта № %i",cPN(playerid),car);
		        SCMf(playerid,COLOR_LIGHTBLUE, "[Информация] {FFFFFF}Вы дали игроку %s копию ключей от транспорта № %i",cPN(id),car);
		        GetNumberCars(id,PI[id][pCars]);
	        }
			else SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок которому вы хотите дать ключи, не может их взять!");
	    }
	}
	return 1;
}
cmd:itemsinfo(playerid)
{
	if(!PI[playerid][pAccessCMD][0]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	//if(!Osnovat(PN(playerid))) return false;
	return ShowItemsInfo(playerid, 1);
}
stock ShowItemsInfo(playerid, page, plus = 0)
{
	str_1[0] = EOS;
    PageItems[playerid] = page;
    if(page == 1) PlusItems[playerid] = plus*page;
    else PlusItems[playerid] = plus*page-60;
    new xuy, xuyy;
    if(60*page+312 > sizeof(ItemsInfo)) xuy = sizeof(ItemsInfo), xuyy = 0;
    else xuy = 60*page+312, xuyy = 1;
    for(new i = 312+PlusItems[playerid]; i < xuy;i ++) f(str_1,sizeof(str_1),"%s{FFFFFF}%i - {FFFFFF}%s\n", str_1, i, ItemsInfo[i][ItemName]);
    if(xuyy)
    {
        strcat(str_1, "{FFD700}Следующая страница >>>");
        if(PageItems[playerid] != 1) strcat(str_1, "\n{FFD700}Предыдущая страница <<<");
    }
    return SPD(playerid,10002,DIALOG_STYLE_LIST,"{ffcd66}ID - Название",str_1,"Добавить","Отмена");
}
CMD:setcartime(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	extract params -> new sec; else return SCM(playerid, COLOR_RED, !"Используйте: /setcartime [секунды]");
	if(sec > 28800) return SCM(playerid, COLOR_RED, !"Используйте: /setcartime [id] [секунды - 28800]");
	scSpawnTimer = sec;
	SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно установили %i секунд до слета люкс автомобиля.", sec);
	return 1;
}
CMD:giverub(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	extract params -> new player:target_to, amount; else return SCM(playerid, COLOR_RED, !"Используйте: /giverub [id] [amount]");
	if(amount > 5000) return SCM(playerid, COLOR_RED, !"Используйте: /giverub [id] [amount - 5000]");
 	if(!IsPlayerConnected(target_to)) return false;
	GiveDonateMoney(target_to, amount);
	aml(83, playerid, "", "выдали через /giverub", amount);

	aml(2, playerid, PN(target_to), "выдал AZ-RUB", amount, 5);

	SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно выдали %i AZ-RUB, игроку %s[%i]!", amount, PN(target_to), target_to);
	return SendAdminsMessagef(COLOR_VALIK, "[A] %s[%i] выдал %i AZ-RUB, игроку %s[%i]", PN(playerid), playerid, amount, PN(target_to), target_to);
}
/*CMD:setplayertime(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	extract params -> new player:target_to, amount; else return SCM(playerid, COLOR_RED, !"Используйте: /setplayertime [id] [amount]");
	if(amount > 500) return SCM(playerid, COLOR_RED, !"Используйте: /setplayertime [id] [amount - 500]");
	if(!IsPlayerConnected(target_to)) return false;
	PI[target_to][pPlayerAllTime] = amount;
	UpdatePlayerDataInt(target_to, "PlayerAllTime", PI[target_to][pPlayerAllTime]);
	SCMf(playerid, COLOR_VALIK, "[Подсказка] {FFFFFF}Вы успешно установили %i отыгранного времени, игроку %s[%i]!", amount, PN(target_to), target_to);
	return SendAdminsMessagef(COLOR_VALIK, "[A] %s[%i] установил %i отыгранного времени, игроку %s[%i]", PN(playerid), playerid, amount, PN(target_to), target_to);
}*/
CMD:wipehouse(playerid)
{
    if(PI[playerid][pAdmin] < 8 && !Osnovat(PN(playerid))) return 1;
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new num;
    for(new i; i < OWNABLEHOUSES; i++) if(!GetString(HouseInfo[i][hOwner], "The State")) SellHouse(i), num ++;
    if(num)
    {
        foreach(new i: Player)
        {
            PI[i][pHouseKey] = -1;
            UpdatePlayerDataInt(i, "HouseKey", -1);
            PI[i][pDCTime] = 0;
            UpdatePlayerDataInt(i, "DCTime", 0);
            break;
        }
        mysql_pquery(mysql, "UPDATE `Qelksekm` SET `HouseKey` = -1");
    }
    //  aml(3, playerid, "", "Сделал вайп всех домов!");
    return SendAdminsMessagef(COLOR_RED, "[A] Администратор %s продал в гос. %i домов.", PN(playerid), num);
}
CMD:wipebiz(playerid)
{
    if(PI[playerid][pAdmin] < 8 && !Osnovat(PN(playerid))) return 1;
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new num;
    for(new i; i < OWNABLEBIZES; i++) if(!GetString(BizInfo[i][bOwner], "The State")) SellBiz(i), num ++;
    //  aml(3, playerid, "", "Сделал вайп всех бизнесов!");
    return SendAdminsMessagef(COLOR_RED, "[A] Администратор %s продал в гос. %i бизнесов.", PN(playerid), num);
}
CMD:wipecar(playerid)
{
    if(PI[playerid][pAdmin] < 8 && !Osnovat(PN(playerid))) return 1;
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new num;
    foreach(new i: OWNABLECARS) if(!IsASellCar(i)) SellCar(i, i, GetPlayerID(CarInfo[i][cOwner])), num ++;
    //  aml(3, playerid, "", "Сделал вайп всех машин!");
    return SendAdminsMessagef(COLOR_RED, "[A] Администратор %s продал в гос. %i личных Т/С.", PN(playerid), num);
}
CMD:makeadmin(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][0]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    new id, admin;
    if(sscanf(params, "dd", id, admin)) return SCM(playerid, COLOR_RED, !"Используйте: /makeadmin [id] [level (0 - 8)]");
    if(!IsPlayerConnected(id)) return false;
    if(PI[playerid][pAdmin] <= PI[id][pAdmin] && !Osnovat(PN(playerid)))
    {
    	SCM(playerid, COLOR_RED, !"Пшел нах!");
		return SendAdminsMessagef(COLOR_RED, "%s[%i] пидор пытается снять админа %s", PN(playerid), playerid, PN(id));
    }
    if(CheckIsASuccesIP(playerid)) return 0;
    if(Osnovat(PN(id))) return SCM(playerid, COLOR_RED, !"Пшел нах!");
    if(admin < PI[id][pAdmin] && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, !"Пшел нах!");
    if(admin < 0 || admin > 8) return SCM(playerid, COLOR_RED, !"Используйте: /makeadmin [id] [level (0 - 8)]");
	//if(PI[playerid][pAdmin] == 5 && !Osnovat(PN(playerid)) && admin > 4) return SCM(playerid, COLOR_RED, !"net!");
	static Adm[30];
	Adm[0] = EOS;
	switch(PI[playerid][pAdmin])
	{
		case ADM_GRAND_ADMIN: Adm = "[Куратор]";
		case ADM_DEPUTY_ADMIN: Adm = "[Заместитель ГА]";
		case ADM_MAIN_ADMIN: Adm = "[Главный Администратор]";
		case ADM_GRAND: Adm = "[Основатель]";
	}
	static Adm2[30];
	Adm2[0] = EOS;
	switch(admin)
	{
		case ADM_MODER: Adm2 = " [Младший Модератор]";
		case ADM_SUPER_MODER: Adm2 = " [Модератор]";
		case ADM_ADMIN: Adm2 = " [Старший Модератор]";
		case ADM_SUPER_ADMIN: Adm2 = " [Администратор]";
		case ADM_GRAND_ADMIN: Adm2 = " [Куратор]";
		case ADM_DEPUTY_ADMIN: Adm2 = " [Заместитель ГА]";
		case ADM_MAIN_ADMIN: Adm2 = " [Главный Администратор]";
		case ADM_GRAND: Adm2 = " [Основатель]";
	}
	SCMf(playerid, 0x6495EDFF, "Вы выдали игроку %s %i-й уровень администрирования%s", PN(id), admin, Adm2);
    SendAdminsMessagef(COLOR_RED, "[MakeAdmin] %s %s[%i] установил %i%s уровень администратора игроку %s (был: %i ур)", Adm, PN(playerid), playerid, admin, Adm2, PN(id), PI[id][pAdmin]);
    aml(16, playerid, PN(id), "", admin);
    SetAdminLevel(id, admin, "/makeadmin");
    if(!admin) Kick(id);
    return 1;
}
CMD:makeadminoff(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][1]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	static name[MAX_PLAYER_NAME], admin;
    if(sscanf(params, "s[24]d", name, admin)) return SCM(playerid, COLOR_RED, !"Используйте: /makeadminoff [name] [level (0 - 8)]");
 	if(admin < 0 || admin > 8) return SCM(playerid, COLOR_RED, !"Используйте: /makeadminoff [name] [level (0 - 8)]");
	new targetid = GetPlayerID(name);
	if(targetid != INVALID_PLAYER_ID)
	{
		f(str_1, sizeof(str_1), "%i %i", targetid, admin);
		return callcmd::makeadmin(playerid, str_1);
	}
	if(!IsAAccountCreate(name)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок с указанным ником не найден в базе данных!");
	
	mysql_format(mysql, str_1, sizeof(str_1), "SELECT * FROM `Qelksekm` WHERE `NickName` = '%s'", name);
	new Cache:result = mysql_query(mysql, str_1);
	new lvl;
	cache_get_value_name_int(0, "Admin", lvl);
	cache_delete(result);

	static Adm[30];
	Adm[0] = EOS;
	switch(PI[playerid][pAdmin])
	{
		case ADM_GRAND_ADMIN: Adm = "[Куратор]";
		case ADM_DEPUTY_ADMIN: Adm = "[Заместитель ГА]";
		case ADM_MAIN_ADMIN: Adm = "[Главный Администратор]";
		case ADM_GRAND: Adm = "[Основатель]";
	}
	static Adm2[30];
	Adm2[0] = EOS;
	switch(admin)
	{
		case ADM_MODER: Adm2 = " [Младший Модератор]";
		case ADM_SUPER_MODER: Adm2 = " [Модератор]";
		case ADM_ADMIN: Adm2 = " [Старший Модератор]";
		case ADM_SUPER_ADMIN: Adm2 = " [Администратор]";
		case ADM_GRAND_ADMIN: Adm2 = " [Куратор]";
		case ADM_DEPUTY_ADMIN: Adm2 = " [Заместитель ГА]";
		case ADM_MAIN_ADMIN: Adm2 = " [Главный Администратор]";
		case ADM_GRAND: Adm2 = " [Основатель]";
	}
	SendAdminsMessagef(COLOR_RED, "[MakeAdminOff] %s %s установил %i уровень администратора игроку %s, до этого был %i уровень.", Adm, PN(playerid), admin, name, lvl);
	aml(16, playerid, name, "", admin);
	return mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `Admin`='%i'  WHERE `NickName`='%s';", admin, name);
}
CMD:createvehicleforbuy(playerid,params[])
{
	if(!PI[playerid][pAccessCMD][2]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new Float:X, Float:Y, Float:Z, Float:A, model, cost;
	if(sscanf(params, "dd", model, cost)) return SCM(playerid, -1, !"/createvehicleforbuy [model] [cost]");
    if(model < 400 || model > 4548 && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_VALIK, !"/createvehicleforbuy [model - 611] [cost]");
 	//else if(!IsValidModel(model)) return SCM(playerid, COLOR_RED, !"Невалидная модель");
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	SCM(playerid, -1, !"Транспорт создан не забывайте /apark для парковки транспорта.");
	new id = Iter_Free(OWNABLECARS);
	CreateOwnableCar(model, X, Y, Z, A, "The State", cost);
	CarInfo[id][cAddCar] = 1;
	PutPlayerInVehicle(playerid,OwnableCar[id], 0);
	if(!cost) cost = GetCarPrice(model);
	static fmt_str[] = "создал авто ID: <a href=/car?car=%i>%i</a> за $%i.";
    static text[sizeof(fmt_str) + 30];
    f(text, sizeof(text), fmt_str, CarInfo[id][cID], CarInfo[id][cID], cost);
    return aml(18, playerid, "", text, 8);
}
CMD:modellimit(playerid)
{
	if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!PI[playerid][pAccessCMD][3]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	return SPD(playerid, 5010, 2, !"{AFAFAF}Количество доступных тачек", "{FFFFFF}Бюджетный класс\nСредний класс\nЭлитный класс\nЛюкс класс", !"Выбрать", !"Закрыть");
}
CMD:modellimitadd(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(PI[playerid][pAdmin] < 8) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    extract params -> new class, total; else
    {
        SCM(playerid, -1, !"/modellimitadd [0 - бюджетный класс; 1 - средний класс; 2 - элитный класс; 3 - особый транспорт; 4 - люкс транспорт] [количество]");
        return SCM(playerid, -1, !"Если количество указать ноль то все лимиты обнулятся.");
    }
    if(class < 0 || class > 4 || total < 0) return false;
    new num;
    switch(class)
    {
        case 0: for(new i = 92; i < 131; i++) UpdateModelLimit(total, i), num++;
        case 1: for(new i = 39; i < 69; i++) UpdateModelLimit(total, i), num++;
        case 2:
        {
            for(new i; i < 20; i++) UpdateModelLimit(total, i), num ++;
            for(new i = 35; i < 39; i++) UpdateModelLimit(total, i), num++;
        }
        case 3: for(new i = 20; i < 35; i++) UpdateModelLimit(total, i), num++;
        case 4: for(new i = 69; i < 87; i++) UpdateModelLimit(total, i), num++;
    }
    return SCMf(playerid, -1, "Обновлено %i лимитов для выдачи моделей.", total*num);
}
stock UpdateModelLimit(total, i)
{
    SellInfo[i][scCount] = total;
    if(total && !SearchModelLimit(i)) SellInfo[i][scSpawn] = 1;
    else SellInfo[i][scSpawn] = 0;
    SaveSletCar(i);
}
stock SearchModelLimit(i)
{
	new bool:ret;
    foreach(new j: OWNABLECARS)
	{
		if(IsVehicleInRangeOfPoint(j, 0.2, SellInfo[i][sc_Pos_X], SellInfo[i][sc_Pos_Y], SellInfo[i][sc_Pos_Z]))
		{
			ret = true;
			break;
		}
	}
	return ret;
}
CMD:musicall(playerid, params[])
{
	if(!Osnovat(PN(playerid))) return false;
	if(!ADuty{playerid}) return SCM(playerid,COLOR_GREY,NO_DUTY_TEXT);
	if(MusicAll)
	{
		foreach(new i: Player) StopAudioStreamForPlayer(i);
		MusicAll = false;
		return SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вы успешно отключили музыку для всех!");
	}
	static url[1024];
	if(sscanf(params,"s[1024]", url)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /musicall [url (прямая ссылка на аудио-файл)]");
	foreach(new i: Player) PlayAudioStreamForPlayer(i, url);
	return MusicAll = true;
}
CMD:payday(playerid)
{
	if(!PI[playerid][pAccessCMD][5]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	return PayDayer();
}
CMD:xpayday(playerid,params[])
{
	if(!PI[playerid][pAccessCMD][6]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid,COLOR_GREY,NO_DUTY_TEXT);
	extract params -> new value; else return SCM(playerid, COLOR_RED, !"Используйте: /xpayday [x]");
	if(value < 1 && value > 10) return SCM(playerid, COLOR_RED, !"Используйте: /xpayday [x]");
	if(!(1 <= value <= 10)) return SCM(playerid, COLOR_RED, !"Используйте: /xpayday [x > 0 или < 10]");
	GLS[40] = value;
	return SCM(playerid, COLOR_RED, !"you are on xpayday");
}
CMD:trade(playerid, params[])
{
	extract params -> new player:id; else return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /trade [id]");
	if(InventStatus{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сейчас начать торговлю!");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
	if(!ProxDetectorS(10.0, playerid, id, 1)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы далеко от игрока");
	if(PlayerAFKTime[id]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок в AFK!");
	//проверка на аренду лавки SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок занят, попробуйте позже!");
	if(id == playerid && !Osnovat(PN(playerid))) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Нельзя начать торговлю с собой!");
	if(TradeOpen{playerid}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не можете сейчас начать торговлю!");
	if(TradeOpen{id}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок уже торгует!");
	if(TradeSend{playerid} || TradeSend{id}) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}От вас кто-то уже рассматривает предложение, ожидайте ответа!");
	if(!PI[id][pObmen]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Игрок отключил возможность предлагать ему продажу/обмен!");
	if(TradeTimeCD[playerid] > gettime()) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Подождите %i секунд!", TradeTimeCD[playerid] - gettime());
	if(TradeTimeCD[id] > gettime()) return SCMf(playerid, COLOR_LIGHTRED, "[Ошибка] {FFFFFF}Игрок совсем недавно совершал торговлю. Подождите ещё %i секунд", TradeTimeCD[id] - gettime());
	SCMf(playerid, COLOR_YELLOW, "Вы предложили %s[%i] совершить торговлю, ожидайте ответа!", PN(id), id);
	ac_ShowPlayerDialog(id, 8252),ShowPlayerDialogf(id, 8252, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Торговля", !"Принять", !"Отмена", "{FFFFFF}Игрок %s[%i] предлагает вам торговлю.\nУ вас есть 10 секунд на ответ", PN(playerid), playerid);
	SetPlayerChatBubblef(playerid, COLOR_VALIK, 10.0, 5000, "Предложил %s[%i] совершить торговлю", PN(id), id);
	TradeID[id] = playerid;
	TradeID[playerid] = id;
	TradeSend{playerid} = true;
	TradeTimeCD[playerid] = gettime() + 10;
	TradeTimeCD[id] = gettime() + 10;
	return TradeTime[id][0] = SetTimerEx("TradeTimer", 1000, true, "d", id);
}
forward TradeTimer(id);
public TradeTimer(id)
{
	TradeTime[id][1] --;
	if(!TradeTime[id][1]) return TradeClose(id);
	new playerid = TradeID[id];
	return ac_ShowPlayerDialog(id, 8252),ShowPlayerDialogf(id, 8252, DIALOG_STYLE_MSGBOX, !"{BFBBBA}Торговля", !"Принять", !"Отмена", "{FFFFFF}Игрок %s[%i] предлагает вам торговлю.\nУ вас есть %i секунд на ответ", PN(playerid), playerid, TradeTime[id][1]);
}
CMD:cl(playerid, params[])
{
    extract params -> new player:targetid; else return SCM(playerid, COLOR_RED, !"Используй: /cl [id]");
    if(targetid == INVALID_PLAYER_ID) return SCM(playerid, COLOR_RED, !"[Ошибка] {FFFFFF}Игрок не в сети!");
    if(IsPlayerLauncher(targetid)) SCMf(playerid, -1, "Игрок %s[%i] {4EFF2B}Использует лаунчер!", PN(targetid), targetid);
	else if(IsPlayerMobile(targetid)) SCMf(playerid, -1, "Игрок %s[%i] {4EFF2B}Использует мобильный лаунчер!", PN(targetid), targetid);
	else SCMf(playerid, -1, "Игрок %s[%i] {FF2B2B}Не использует лаунчер и мобильный лаунчер!", PN(targetid), targetid);
    return 1;
}
CMD:invent(playerid) return ShowInv(playerid);
CMD:removeitem(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][7]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid,COLOR_GREY,NO_DUTY_TEXT);
	new id, slot;
	if(sscanf(params,"dd", id, slot)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
	if(id == INVALID_PLAYER_ID) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    if(!PI[id][pInvItem][slot]) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    if(slot > PI[playerid][pInvCell]-1) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeitem [id игрока] [slot]");
    SCMf(id, COLOR_LIGHTRED, "Администратор %s забрал у вас %s", PN(playerid), ItemsInfo[PI[id][pInvItem][slot]][ItemName]);
    SCMf(playerid, COLOR_GREEN, "Вы успешно забрали у %s %s из слота %i", PN(id), ItemsInfo[PI[id][pInvItem][slot]][ItemName], slot);
    SendAdminsMessagef(COLOR_GREY, "[%s] забрал у игрока %s[%i] предмет %s (%i шт.) из слота %i", PN(playerid), PN(id), id, ItemsInfo[PI[id][pInvItem][slot]][ItemName], PI[id][pInvItemAmount][slot], slot);
    
    PI[id][pInvItem][slot] = 0;
    PI[id][pInvItemAmount][slot] = 0;
    PI[id][pInvItemColor][slot] = 0;
    PI[id][pInvItemEnchant][slot] = 0;
    PI[id][pInvItemMining][slot] = 1;

	InvSlotUpdate(id, slot);

	f(str_1, sizeof(str_1), "забрал %s (%i шт) из слота %i у игрока", ItemsInfo[PI[id][pInvItem][slot]][ItemName], PI[id][pInvItemAmount][slot], slot);
	aml(1, playerid, PN(id), str_1, 9);

	if(SAVE_PLAYER_INV) SaveInv(id, 1, slot);
	return 1;
}
CMD:removeallinv(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][8]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
    if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
    static id;
    if(sscanf(params, "d", id)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /removeallinv [id]");
	if(!IsPlayerConnected(id)) return false;

    SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Все предметы были успешно удалены.");
    SCM(id, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Ваш инвентарь был полностью очищен за нарушение правил сервера!");
	aml(1, playerid, PN(id), "очистил весь инвентарь игроку", 9);

    for(new i; i < PI[id][pInvCell]; i++)
    {
        if(!PI[id][pInvItem][i] && !PI[id][pInvItemAmount][i]) continue;
        if(PI[id][pInvItem][i] == 312 && PI[id][pInvItemAmount][i]) continue;
        PI[id][pInvItem][i] = 0;
        PI[id][pInvItemAmount][i] = 0;
        PI[id][pInvItemColor][i] = 0;
        PI[id][pInvItemEnchant][i] = 0;
        PI[id][pInvItemMining][i] = 1;
        InvSlotUpdate(id, i);
        if(SAVE_PLAYER_INV) SaveInv(playerid, 1, i);
    }

    return 1;
}
CMD:giveitem(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][9]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new id, item, amount, bool:set;
	if(sscanf(params,"ddd",id, item, amount)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /giveitem [id игрока] [id предмета] [amount]");
	if(item <= 0 || item >= OWNABLEITEMS) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /giveitem [id игрока] [id предмета] [amount]");
    if(id == INVALID_PLAYER_ID) return 1;
    new count = GetInvSlot(id, item);
	if(!count) return SCMf(playerid, -1, "[/giveitem] Не удалось выдать игроку %s[ID: %i], предмет: %s[itemid: %i], есть место под: %iшт", PN(id), id, ItemsInfo[item][ItemName], item, count);
	switch(item)
	{
		case Item_Liccenses:
		{
			if(amount > 0)
			{
				set = true;
				GiveLiccenses(id, 365, item);
			}
			else if(amount <= 0) ResetLiccenses(playerid, item);
		}
		default:
		{
			if(amount == 0) return SetItem(playerid, item);
			else if(amount <= 0) set = true;
		    InvAdd(id, item, amount);
		    aml(101, id, "", "/giveitem", item, amount);
		}
	}
	if(count < amount) SCMf(playerid, -1, "[/giveitem] Выдано игроку %s[ID: %i], предмет: %s[itemid: %i], количество: %iшт (влезло из %i)", PN(id), id, ItemsInfo[item][ItemName], item, count, amount);
	else SCMf(playerid, -1, "[/giveitem] Выдано игроку %s[ID: %i], предмет: %s[itemid: %i], количество: %iшт", PN(id), id, ItemsInfo[item][ItemName], item, amount);
	if(!Osnovat(PN(playerid))) SendAdminsMessagef(COLOR_VALIK, "[A] Администратор %s[%i] %s игроку %s[%i] %s. Кол-во: %i", PN(playerid), playerid, set ? ("забрал") : ("выдал"), PN(id), id, ItemsInfo[item][ItemName], amount);
	f(str_1, sizeof(str_1), "%s %s шт (%i) игроку", set ? ("забрал") : ("выдал"), ItemsInfo[item][ItemName], amount);
	return aml(1, playerid, PN(id), str_1, 9);
}
CMD:giveitem2(playerid, params[])
{
    if(!Osnovat(PN(playerid))) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new id, item, amount, color, enchant, bool:set;
	if(sscanf(params,"ddddd",id, item, amount, color, enchant)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /giveitem2 [id игрока] [id предмета] [amount] [color] [enchant]");
	if(item <= 0 || item >= OWNABLEITEMS) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Используй: /giveitem2 [id игрока] [id предмета] [amount] [color] [enchant]");
    if(id == INVALID_PLAYER_ID) return 1;
    new count = GetInvSlot(id, item);
	if(amount > count) return SCMf(playerid, -1, "Не удалось выдать %i, у игрока есть место под %i", item, count);
	switch(item)
	{
		case Item_Liccenses:
		{
			if(amount > 0)
			{
				set = true;
				GiveLiccenses(id, 365, item);
			}
			else if(amount <= 0) ResetLiccenses(playerid, item);
		}
		default:
		{
			if(amount == 0) return SetItem(playerid, item);
			else if(amount <= 0) set = true;
		    InvAdd(id, item, amount, 1, color, enchant);
		    aml(101, id, "", "/giveitem", item, amount);
		}
	}
	SCMf(playerid, -1, "Успешно %s %i шт (%i) игроку", set ? ("забрали") : ("выдали"), item, amount);
	f(str_1, sizeof(str_1), "%s %s шт (%i) игроку", set ? ("забрал") : ("выдал"), ItemsInfo[item][ItemName], amount);
	return aml(1, playerid, PN(id), str_1, 9);
}
CMD:giveitemall(playerid, params[])
{
	if(!PI[playerid][pAccessCMD][25]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new item, amount;
	if(sscanf(params,"dd",item, amount)) return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Используй: /giveitemall [id item] [amount]");
	if(item <= 0 || item >= OWNABLEITEMS) return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Используй: /giveitemall [id item] [amount]");
    foreach(new i: Player)
	{
		if(amount > GetInvSlot(i, item)) continue;
    	InvAdd(i, item, amount);
    	aml(101, i, "", "/giveitemall", item, amount);
    }
    SCMAllf(COLOR_LIGHTRED, "[Информация] {FFFFFF}Администратор: %s[%i] выдал всему серверу %s %i",PN(playerid),playerid,ItemsInfo[item][ItemName],amount);
	f(str_1, sizeof(str_1), "выдал всему серверу %s %i", ItemsInfo[item][ItemName], amount);
	return aml(18, playerid, "", str_1, 9);
}
CMD:giveazall(playerid, params[])
{
    if(!PI[playerid][pAccessCMD][25]) return SCM(playerid, COLOR_RED, NO_DOSTUP_TEXT);
	if(!ADuty{playerid}) return SCM(playerid, COLOR_GREY, NO_DUTY_TEXT);
	new amount;
	if(sscanf(params,"i", amount)) return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Используй: /giveazall [amount]");
	if(amount < 1 || amount > 100000) return SCM(playerid, COLOR_LIGHTRED, !"[Информация] {FFFFFF}Используй: /giveazall [1-100000]");
    foreach(new i: Player)
	{
		GiveDonate(i, amount);
		aml(53, i, "", "/giveazall", amount);
		GameTextForPlayerf(playerid, 3000, 3, "~g~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%iAZ", amount);
    }
    f(str_1, sizeof(str_1), "раздал всему серверу %i AZ", amount);
    aml(18, playerid, "", str_1, 5);
    SCM(playerid, COLOR_VALIK, !"[Информация] {FFFFFF}Вам были выданы AZ-Coins");
    return SCMAllf(COLOR_VALIK, "[Информация] {FFFFFF}Администратор: %s[%i] выдал всему серверу %i AZ-Coins", PN(playerid), playerid, amount);
}
CMD:remkey(playerid)
{
	return playerid;
}

CMD:leyka(playerid)
{
	return playerid;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	new model = GetVehicleModel(vehicleid);
	if(!IsPlayerLauncher(forplayerid) && model > 611)
	{
	    if(v_Vehicle_LabelID[vehicleid][forplayerid] == Text3D:-1)
	    {
	        format(str_1, sizeof(str_1),"{85bb65}Модель: {FFFFFF}%s\n{85bb65}[{FFFFFF}Доступно с лаунчера{85bb65}]", GetNameCar(model));
	        v_Vehicle_LabelID[vehicleid][forplayerid] = CreateDynamic3DTextLabel(str_1, -1, 0.0, 0.0, 0.5, 10.0, .attachedvehicle = vehicleid, .playerid = forplayerid);
	    }
	}
    return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid)
{
    if(v_Vehicle_LabelID[vehicleid][forplayerid] != Text3D:-1)
    {
        DestroyDynamic3DTextLabel(v_Vehicle_LabelID[vehicleid][forplayerid]);
        v_Vehicle_LabelID[vehicleid][forplayerid] = Text3D:-1;
    }
    return 1;
}
stock GetItemID(model)
{
	new item;
	for(new i = 659; i < 755; i++)//юзаю ток для аксов в магазе
	{
		if(ItemsInfo[i][ItemModel] == model)
		{
			item = i;
			break;
		}
	}
	return item;
}

stock IsAAccountCreate(name[])
{
	mysql_format(mysql, str_query, sizeof(str_query), "SELECT * FROM `Qelksekm` WHERE `NickName` = '%s'", name);
	new Cache:result = mysql_query(mysql, str_query);
	new num = cache_num_rows();
	cache_delete(result);
	if(!num) return 0;
	return 1;
}
stock SendCharacterDescription(playerid)
{
	static Description[83];
	f(Description, 83, "%s", PI[playerid][pDescription]);
	for(new i; i < 83; i++) if(Description[i] == '/') Description[i] = ' ';
	return SCM(playerid, 0xCCCCCCFF, Description);
}

stock UpdateCharacterDescription(playerid, del = 0)
{
	if(del)
	{
		SetString(PI[playerid][pDescription], "(нажмите чтобы установить)");
		UpdatePlayerDataStr(playerid, "Description", PI[playerid][pDescription]);
		DescriptionTextCreate{playerid} = false;
		return DestroyDynamic3DTextLabel(DescriptionText[playerid]);
	}
	if(!GetString(PI[playerid][pDescription], "(нажмите чтобы установить)"))
	{
		static Description[83];
		f(Description, 83, "%s", PI[playerid][pDescription]);
		for(new i; i < 83; i++) if(Description[i] == '/') Description[i] = '\n';
		DescriptionText[playerid] = CreateDynamic3DTextLabel(Description, 0xCCCCCCFF, 0.0, 0.0, -1.0, 5, playerid, -1, 0, -1, -1, -1);
		DescriptionTextCreate{playerid} = true;
	}
	return 1;
}

stock ShowUpdateStock(playerid)
{
	str_1[0] = EOS;
	for(new x = 1; x < MAX_ORGS; x++) f(str_1, sizeof(str_1), "%s{FFFFFF}%s:\t{9ACD32}%i материалов\n", str_1, OrgInfo[x][oName], OrgInfo[x][oMats]);
	return SPD(playerid, 116, DIALOG_STYLE_LIST, !"Пополнение складов", str_1, !"Выбрать", !"Отмена");
}

stock ResetLiccenses(playerid, lic, days = 0)
{
	if(!GetInvCount(playerid, lic)) return 0;
	SetItem(playerid, lic);
	new day;
	if(days == 0) day = 1;
	else if(day == -1) day = 0;
	switch(lic)
	{
		case Item_Car_Lic: 
		{
			PI[playerid][pCarLic] = day;
			UpdatePlayerDataInt(playerid, "CarLic", day);
		}
		case Item_Bike_Lic: 
		{
			PI[playerid][pBikeLic] = day;
			UpdatePlayerDataInt(playerid, "BikeLic", day);
		}
		case Item_Fly_Lic: 
		{
			PI[playerid][pFlyLic] = day;
			UpdatePlayerDataInt(playerid, "FlyLic", day);
		}
		case Item_Boat_Lic: 
		{
			PI[playerid][pBoatLic] = day;
			UpdatePlayerDataInt(playerid, "BoatLic", day);
		}
		case Item_Fish_Lic: 
		{
			PI[playerid][pFishLic] = day;
			UpdatePlayerDataInt(playerid, "FishLic", day);
		}
		case Item_Gun_Lic: 
		{
			PI[playerid][pGunLic] = day;
			UpdatePlayerDataInt(playerid, "GunLic", day);
		}
		case Item_Hunt_Lic: 
		{
			PI[playerid][pHuntLic] = day;
			UpdatePlayerDataInt(playerid, "HuntLic", day);
		}
	}
	return 1;
}

stock GiveLiccenses(playerid, days, lic = 0)
{
	new time = gettime() + (days*24*60*60);
	if(!lic)
	{
		new bool:give;
		if(!GetInvCount(playerid, Item_Car_Lic)) 
		{	
			InvAdd(playerid, Item_Car_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Car_Lic, 1);
			PI[playerid][pCarLic] = time;
			UpdatePlayerDataInt(playerid, "CarLic", time);
			give = true;
		}
		if(!GetInvCount(playerid, Item_Bike_Lic)) 
		{
			InvAdd(playerid, Item_Bike_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Bike_Lic, 1);
			PI[playerid][pBikeLic] = time;
			UpdatePlayerDataInt(playerid, "BikeLic", time);
			give = true;
		}
		if(!GetInvCount(playerid, Item_Fly_Lic))
		{
			InvAdd(playerid, Item_Fly_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Fly_Lic, 1);
			PI[playerid][pFlyLic] = time;
			UpdatePlayerDataInt(playerid, "FlyLic", time);
			give = true;
		}
		if(!GetInvCount(playerid, Item_Boat_Lic))
		{
			InvAdd(playerid, Item_Boat_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Boat_Lic, 1);
			PI[playerid][pBoatLic] = time;
			UpdatePlayerDataInt(playerid, "BoatLic", time);
			give = true;
		}
		if(!GetInvCount(playerid, Item_Fish_Lic))
		{
			InvAdd(playerid, Item_Fish_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Fish_Lic, 1);
			PI[playerid][pFishLic] = time;
			UpdatePlayerDataInt(playerid, "FishLic", time);
			give = true;
		}
		if(!GetInvCount(playerid, Item_Gun_Lic))
		{	
			InvAdd(playerid, Item_Gun_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Gun_Lic, 1);
			PI[playerid][pGunLic] = time;
			UpdatePlayerDataInt(playerid, "GunLic", time);
			give = true;
		}
		if(!GetInvCount(playerid, Item_Hunt_Lic))
		{	
			InvAdd(playerid, Item_Hunt_Lic, 1);
			aml(101, playerid, "", "GiveLiccenses", Item_Hunt_Lic, 1);
			PI[playerid][pHuntLic] = time;
			UpdatePlayerDataInt(playerid, "HuntLic", time);
			give = true;
		}
		if(!give) return false;
	}
	else
	{
		if(GetInvCount(playerid, lic)) return 1;
		InvAdd(playerid, lic, 1);
		aml(101, playerid, "", "GiveLiccenses", lic, 1);
		switch(lic)
		{
			case Item_Car_Lic:
			{
				PI[playerid][pCarLic] = time;
				UpdatePlayerDataInt(playerid, "CarLic", time);
			}
			case Item_Bike_Lic:
			{
				PI[playerid][pBikeLic] = time;
				UpdatePlayerDataInt(playerid, "BikeLic", time);
			}
			case Item_Fly_Lic:
			{
				PI[playerid][pFlyLic] = time;
				UpdatePlayerDataInt(playerid, "FlyLic", time);
			}
			case Item_Boat_Lic:
			{
				PI[playerid][pBoatLic] = time;
				UpdatePlayerDataInt(playerid, "BoatLic", time);
			}
			case Item_Fish_Lic:
			{
				PI[playerid][pFishLic] = time;
				UpdatePlayerDataInt(playerid, "FishLic", time);
			}
			case Item_Gun_Lic:
			{
				PI[playerid][pGunLic] = time;
				UpdatePlayerDataInt(playerid, "GunLic", time);
			}
			case Item_Hunt_Lic:
			{
				PI[playerid][pHuntLic] = time;
				UpdatePlayerDataInt(playerid, "HuntLic", time);
			}
		}
	}
	return 1;
}
stock ShowTrade(playerid)
{
	if(bumboxopen{playerid}) return 1;
	if(TradeOpen{playerid}) return false;
	new page = InventPage[playerid];
	if(!page) page = 1;
	HideTextDraws(playerid, 8);
	HideLogo(playerid);
	#include ../library/TEXTDRAWS/inv/inv_trade
	PlayerTextDrawSetString(playerid, Invent_Trade[playerid][3], PN(playerid));
	PlayerTextDrawSetString(playerid, Invent_Trade[playerid][10], PN(TradeID[playerid]));
	TradeOpen{playerid} = true;
	for(new i; i < 21; i++)
	{
		if(i < 18) PlayerTextDrawShow(playerid, Invent[playerid][i]);
		PlayerTextDrawShow(playerid, Invent_Trade[playerid][i]);
		if(i < 20)
		{
			PlayerTextDrawLetterSize(playerid, Invent_Menu_Page[playerid][i], 0.480000, 1.120000);
			PlayerTextDrawTextSize(playerid, Invent_Menu_Page[playerid][i], 25.500000, 29.500000);
			PlayerTextDrawAlignment(playerid, Invent_Menu_Page[playerid][i], 1);
			PlayerTextDrawColor(playerid, Invent_Menu_Page[playerid][i], 0x999999FF);
			PlayerTextDrawUseBox(playerid, Invent_Menu_Page[playerid][i], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu_Page[playerid][i], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu_Page[playerid][i], 2);
			PlayerTextDrawSetOutline(playerid, Invent_Menu_Page[playerid][i], 0);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu_Page[playerid][i], 0x333333FF);
			PlayerTextDrawFont(playerid, Invent_Menu_Page[playerid][i], 5);
			PlayerTextDrawSetProportional(playerid, Invent_Menu_Page[playerid][i], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], 1);
			PlayerTextDrawSetPreviewModel(playerid, Invent_Menu_Page[playerid][i], 1649);
			PlayerTextDrawSetPreviewRot(playerid, Invent_Menu_Page[playerid][i], 0.000000, 0.000000, 90.000000, 2.000000);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_Page[playerid][i], false);
			PlayerTextDrawShow(playerid, Invent_Menu_Page[playerid][i]);

			PlayerTextDrawLetterSize(playerid, Invent_Menu_PageAmount[playerid][i], 0.126499, 0.625000);
			PlayerTextDrawTextSize(playerid, Invent_Menu_PageAmount[playerid][i], 1280.000000, 1280.000000);
			PlayerTextDrawAlignment(playerid, Invent_Menu_PageAmount[playerid][i], 3);
			PlayerTextDrawColor(playerid, Invent_Menu_PageAmount[playerid][i], 0xAAAAAAFF);
			PlayerTextDrawUseBox(playerid, Invent_Menu_PageAmount[playerid][i], 0);
			PlayerTextDrawBoxColor(playerid, Invent_Menu_PageAmount[playerid][i], 0x80808080);
			PlayerTextDrawSetShadow(playerid, Invent_Menu_PageAmount[playerid][i], 0);
			PlayerTextDrawSetOutline(playerid, Invent_Menu_PageAmount[playerid][i], 1);
			PlayerTextDrawBackgroundColor(playerid, Invent_Menu_PageAmount[playerid][i], 0x00000000);
			PlayerTextDrawFont(playerid, Invent_Menu_PageAmount[playerid][i], 2);
			PlayerTextDrawSetProportional(playerid, Invent_Menu_PageAmount[playerid][i], 1);
			PlayerTextDrawSetSelectable(playerid, Invent_Menu_PageAmount[playerid][i], 0);
			
			PlayerTextDrawLetterSize(playerid, Invent_Menu_PageEnchant[playerid][i], 0.126499, 0.625000);
            PlayerTextDrawTextSize(playerid, Invent_Menu_PageEnchant[playerid][i], 1280.0, 1280.0);
            PlayerTextDrawAlignment(playerid, Invent_Menu_PageEnchant[playerid][i], 3);
            PlayerTextDrawColor(playerid, Invent_Menu_PageEnchant[playerid][i], 0xAAAAAAFF);
            PlayerTextDrawUseBox(playerid, Invent_Menu_PageEnchant[playerid][i], 0);
            PlayerTextDrawBoxColor(playerid, Invent_Menu_PageEnchant[playerid][i], 0x80808080);
            PlayerTextDrawSetShadow(playerid, Invent_Menu_PageEnchant[playerid][i], 0);
            PlayerTextDrawSetOutline(playerid, Invent_Menu_PageEnchant[playerid][i], 1);
            PlayerTextDrawBackgroundColor(playerid, Invent_Menu_PageEnchant[playerid][i], 0x00000000);
            PlayerTextDrawFont(playerid, Invent_Menu_PageEnchant[playerid][i], 2);
            PlayerTextDrawSetProportional(playerid, Invent_Menu_PageEnchant[playerid][i], 1);
            PlayerTextDrawSetSelectable(playerid, Invent_Menu_PageEnchant[playerid][i], 0);
		}
	}
	SetPVarInt(playerid, !"InvType", 4);
	ShowInvPage(playerid, page);
	SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
	return 1;
}
stock HideTrade(playerid)
{
	if(!TradeOpen{playerid}) return false;
	for(new i; i < PI[playerid][pInvCell]; i++)
	{
		if(PI[playerid][pInvItemLock][i]) PI[playerid][pInvItemLock][i] = 0;
		if(i < 10) if(PI[playerid][pTradeInvID][i] != -1) PI[playerid][pTradeInvID][i] = -1;
		if(i < 18) DestroyPlayerTD(playerid, Invent[playerid][i]);
		if(i < 21) DestroyPlayerTD(playerid, Invent_Trade[playerid][i]);
		if(i < 20)
		{
			DestroyPlayerTD(playerid, Invent_Menu_Page[playerid][i]);
			DestroyPlayerTD(playerid, Invent_Menu_PageAmount[playerid][i]);
			DestroyPlayerTD(playerid, Invent_Menu_PageEnchant[playerid][i]);
		}
		if(i < 10)
		{
			PI[playerid][pTradeItem][i] = 0;
			PI[playerid][pTradeItemAmount][i] = 0; 
			PI[playerid][pTradeItemColor][i] = 0;
			PI[playerid][pTradeItemEnchant][i] = 0; 
			PI[playerid][pTradeItemMining][i] = 0;
		}
	}
	DeletePVar(playerid, "InvType");
	HideInvPage(playerid);
	TradeLock{playerid} = 0;
	TradeOpen{playerid} = false;
	TradeSend{playerid} = false;
	TradeMoney[playerid] = 0;
 	TradeBTC[playerid] = 0;
    TradeEURO[playerid] = 0;
	CancelSelectTextDrawEx(playerid);
	return 1;
}
stock TradeClose(playerid)
{
	KillTimer(TradeTime[playerid][0]);
	TradeTime[playerid][0] = 0;
	TradeTime[playerid][1] = 10;
	SCM(playerid, COLOR_YELLOW, "Вы отказались от предложения торговли.");
	new id = TradeID[playerid];
	SCMf(id, COLOR_YELLOW, "Игрок %s[%i] отказался от вашего предложения торговли.", PN(id), id);
	TradeID[id] = -1;
	TradeID[playerid] = -1;
	TradeSend{playerid} = false;
	TradeSend{id} = false;
	return 1;
}
stock CancelTrade(playerid)
{
	new id = TradeID[playerid];
	TradeTime[playerid][1] = 10;
	TradeID[id] = -1;
	TradeID[playerid] = -1;
	TradeSend{playerid} = false;
	TradeSend{id} = false;
	TradeTimeCD[playerid] = gettime() + 10;
	TradeTimeCD[id] = gettime() + 10;
	SCM(playerid, COLOR_RED, !"Вы отменили сделку");
	SCMf(id, COLOR_RED, "%s[%i] отменил сделку", PN(playerid), playerid);
	CancelSelectTextDrawEx(id);
	return 1;
}
stock PutModCar(playerid, i)
{
	if(IsPlayerInHisVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
		new 
			UseModCarID = UseModCar[playerid][i],
			carid = GetPlayerVehicleID(playerid),
			number = GetVehicleID(carid),
			OldModCarID = CarInfo[number][cSlotItem][i],
			id = InventClick{playerid};

		switch(UseModCarID)
		{
			case Item_Premium: if(GetVehicleModelEx(carid) != 487) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Данную модификацию нельзя установить на данный вид транспорта.");	
		}	
		if(UseModCarID)
		{
			if(!OldModCarID)//Надевание акса на тачку
			{
				CarInfo[number][cSlotItem][i] = UseModCarID;
				AttachInstall(number, i);
				UseModCar[playerid][i] = 0;
				RefreshInv(playerid, id);
				Valik(playerid);
				UpdateSlotModCar(playerid, i, number);
				PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
				SaveInv(number, 5, i);
			}
			else//Замена акса на тачку
			{
				if(id != 255)
				{
					if(CarInfo[number][cSlotItem][i] != Item_TwinTurbo && i == 6) SetColorMod(playerid, 0, number);
					AttachDestroy(number, i);

					PI[playerid][pInvItem][id] = OldModCarID;

					CarInfo[number][cSlotItem][i] = UseModCarID;

					AttachInstall(number, i);
					UseModCar[playerid][i] = 0;

					Valik(playerid);
					UpdateSlotModCar(playerid, i, number);
					PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

					if(SAVE_PLAYER_INV) SaveInv(playerid, 1, id);
					SaveInv(number, 5, i);
				}
			}
		}
		else if(OldModCarID)
		{
		    switch(CarInfo[number][cSlotItem][i])
		    {
		        case Item_Aksioma,IventCarSlot:
		        {
		            CreateAcsMenu(playerid, i);
					return PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
		        }
		    }
			TakeModCar(playerid, i, number);//Снятие акса на тачку
		}
	}
	else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Вы не в своем авто!");
	return 1;
}
stock TakeModCar(playerid, i, number)
{
	new UseModCarID = CarInfo[number][cSlotItem][i];
	if(!GetInvSlot(playerid, UseModCarID)) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять модификацию.");
	AttachDestroy(number, i, 1);
	if(CarInfo[number][cSlotItem][i] != Item_TwinTurbo && i == 6) SetColorMod(playerid, 0, number);
	CarInfo[number][cSlotItem][i] = 0;
	InvAdd(playerid, UseModCarID, 1, 0);
	UpdateSlotModCar(playerid, i, number);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	SaveInv(number, 5, i);
	return 1;
}
stock SetColorMod(playerid, id, number)
{
    for(new i; i < 6; i++)
    {
    	PI[playerid][pModCellLock][i] = id;
        PlayerTextDrawSetSelectable(playerid, InventAks[playerid][i], id ? false : true);
        PlayerTextDrawColor(playerid, InventAks[playerid][i], id ? 0x999999FF : 0xFFFFFFFF);
        if(CarInfo[number][cSlotItem][i] && CarInfo[number][cObjectUsed][i] == 0 && id == 0)
        {
            PlayerTextDrawColor(playerid, InventAks[playerid][i], 0x999999FF);
            PlayerTextDrawBoxColor(playerid, InventAks[playerid][i], 0x80808080);
            PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][i], 0x333333FF);
        }
        PlayerTextDrawShow(playerid, InventAks[playerid][i]);
    }
    return 1;
}
stock UpdateSlotModCar(playerid, slot, number)
{
	if(!InvCarOpen{playerid}) return 0;
	if(IsPlayerTextDrawVisible(playerid, InventAksSlot[playerid][slot])) PlayerTextDrawHide(playerid, InventAksSlot[playerid][slot]);

    if(!CarInfo[number][cSlotItem][slot])
    {
	    PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], 1649);
	    PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], 0.0, 0.0, 90.0, 2.0);
	    PlayerTextDrawColor(playerid, InventAks[playerid][slot], 0xFFFFFFFF);
        PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
        PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
        PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "_");
        PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        return true;
    }
    PlayerTextDrawColor(playerid, InventAks[playerid][slot], 0xFFFFFFFF);
    PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
    new ID = CarInfo[number][cSlotItem][slot];
	PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], ItemsInfo[ID][ItemModel]);
	PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
    new bool:modification, Float:X, Float:Y;
    switch(CarInfo[number][cSlotItem][slot])
    {
        case Item_Aksioma,IventCarSlot:
        {
            if(CarInfo[number][cObjectUsed][slot] == 0)
            {
                PlayerTextDrawColor(playerid, InventAks[playerid][slot], 0x999999FF);
                PlayerTextDrawBoxColor(playerid, InventAks[playerid][slot], 0x80808080);
                PlayerTextDrawBackgroundColor(playerid, InventAks[playerid][slot], 0x333333FF);
            }
            PlayerTextDrawGetPos(playerid, InventAks[playerid][slot], X, Y);
            PlayerTextDrawSetPos(playerid, InvOwnableCar[playerid][slot+9], 13.3+X, 0.525+Y);
            PlayerTextDrawColor(playerid, InvOwnableCar[playerid][slot+9], 0x000000FF);
            PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "TUNING");
            PlayerTextDrawAlignment(playerid, InvOwnableCar[playerid][slot+9], 2);
            PlayerTextDrawSetShadow(playerid, InvOwnableCar[playerid][slot+9], 0);
            PlayerTextDrawSetOutline(playerid, InvOwnableCar[playerid][slot+9], 0);
            PlayerTextDrawFont(playerid, InvOwnableCar[playerid][slot+9], 1);
            PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        }
        case Item_Supreme:
        {
            PlayerTextDrawSetPreviewModel(playerid, InventAks[playerid][slot], 1288), PlayerTextDrawSetPreviewRot(playerid, InventAks[playerid][slot], 180.0, 90.0, 0.0, 0.930656);
            PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~w~SUPREME");
            PlayerTextDrawColor(playerid, InvOwnableCar[playerid][slot+9], 0xAAAAAAFF);
            PlayerTextDrawBackgroundColor(playerid, InvOwnableCar[playerid][slot+9], 0x00000000);
            PlayerTextDrawFont(playerid, InvOwnableCar[playerid][slot+9], 1);
            PlayerTextDrawSetShadow(playerid, InvOwnableCar[playerid][slot+9], 0);
            PlayerTextDrawAlignment(playerid, InvOwnableCar[playerid][slot+9], 2);
            PlayerTextDrawSetOutline(playerid, InvOwnableCar[playerid][slot+9], 0);
            PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        }
        case Item_TwinTurbo: 
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~r~Twin~n~Turbo");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        }
        case Item_Launch:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~y~LAUNCH");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
        case Item_Premium:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~p~PREMIUM");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
        case Item_Mod_Halloween:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~r~HALLOWEEN");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
        case Item_Mod_Classic:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~y~CLASSIC");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
        case Item_Mod_Futuristic:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~y~FUTURE");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
        case Item_Mod_Cyberpunk:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~y~CyberPunk");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
        case Item_Mod_FutureTaxi:  
        {
        	PlayerTextDrawSetString(playerid, InvOwnableCar[playerid][slot+9], "~y~Future~n~TAXI");
        	PlayerTextDrawShow(playerid, InvOwnableCar[playerid][slot+9]);
        	modification = true;
        }
    }
    if(modification == true) SetColorMod(playerid, 1, number);
    return PlayerTextDrawShow(playerid, InventAks[playerid][slot]);
}
stock UpdateOwnableCar(number, type = 1)
{
	new carid = OwnableCar[number];
	if(type)
	{
		vTemp[carid][Fuel] = CarInfo[number][cFuel];
		for(new i; i < 30; i++)
		{
			TrunkInfo[carid][TrunkItem][i] = CarInfo[number][cTrunkItem][i];
			TrunkInfo[carid][TrunkItemAmount][i] = CarInfo[number][cTrunkItemAmount][i];
			TrunkInfo[carid][TrunkItemColor][i] = CarInfo[number][cTrunkItemColor][i];
			TrunkInfo[carid][TrunkItemEnchant][i] = CarInfo[number][cTrunkItemEnchant][i];
			TrunkInfo[carid][TrunkItemMining][i] = CarInfo[number][cTrunkItemMining][i];
		}
	}
	else
	{
		CarInfo[number][cFuel] = vTemp[carid][Fuel];
		for(new i; i < 30; i++)
		{
			CarInfo[number][cTrunkItem][i] = TrunkInfo[carid][TrunkItem][i];
			CarInfo[number][cTrunkItemAmount][i] = TrunkInfo[carid][TrunkItemAmount][i];
			CarInfo[number][cTrunkItemColor][i] = TrunkInfo[carid][TrunkItemColor][i];
			CarInfo[number][cTrunkItemEnchant][i] = TrunkInfo[carid][TrunkItemEnchant][i];
			CarInfo[number][cTrunkItemMining][i] = TrunkInfo[carid][TrunkItemMining][i];
		}
	}
}

stock AttachInstall(number, slot)
{
	new carid = OwnableCar[number], item = CarInfo[number][cSlotItem][slot];
	//SCMAllf(-1, "AttachInstall carid - %i item - %i slot - %i", carid, item, slot);
	switch(item)
	{
		case Item_TwinTurbo: return TwinTurboInstall(carid);
		case Item_Supreme: return SupremeInstall(carid);
		case Item_Launch: return LaunchInstall(carid);
		case Item_Premium: return PremiumInstall(carid);
		case Item_Mod_Halloween: return HalloweenInstall(carid);
		case Item_Mod_Classic: return ClassicInstall(carid);
		case Item_Mod_Futuristic: return FuturisticInstall(carid);
		case Item_Mod_Cyberpunk: return CyberpunkInstall(carid);
		case Item_Mod_FutureTaxi: return FutureTaxiInstall(carid);
		//case 796..800: return KovshInstall(carid, item);
	}
	if(CarInfo[number][cObjectUsed][slot])
	{
		ObjectCarEdit[carid][slot] = CreateDynamicObject(CarInfo[number][cModelObject][slot], CarInfo[number][cObjectPosX][slot], CarInfo[number][cObjectPosY][slot], CarInfo[number][cObjectPosZ][slot], 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle
		(
			ObjectCarEdit[carid][slot],
			carid,
			CarInfo[number][cObjectPosX][slot],
			CarInfo[number][cObjectPosY][slot],
			CarInfo[number][cObjectPosZ][slot],
			CarInfo[number][cObjectRotX][slot],
			CarInfo[number][cObjectRotY][slot],
			CarInfo[number][cObjectRotZ][slot]
		);
	}
	return 1;
}
stock AttachDestroy(number, slot, take = 0)
{
	new carid = OwnableCar[number];
	//SCMAllf(-1, "AttachDestroy carid - %i slot - %i", carid, slot);
	switch(CarInfo[number][cSlotItem][slot])
	{
		case Item_TwinTurbo: TwinTurboDestroy(carid);
		case Item_Supreme: SupremeDestroy(carid);
		case Item_Launch: LaunchDestroy(carid);
		case Item_Premium: PremiumDestroy(carid);
		case Item_Mod_Halloween: HalloweenDestroy(carid);
		case Item_Mod_Classic: ClassicDestroy(carid);
		case Item_Mod_Futuristic: FuturisticDestroy(carid);
		case Item_Mod_Cyberpunk: CyberpunkDestroy(carid);
		case Item_Mod_FutureTaxi: FutureTaxiDestroy(carid);
		case Item_Aksioma,IventCarSlot:
		{
			if(slot < 6)
			{
				if(CarInfo[number][cObjectUsed][slot])
				{
					if(ObjectCarEdit[carid][slot])
					{
						DestroyDynamicObject(ObjectCarEdit[carid][slot]);
						ObjectCarEdit[carid][slot] = 0;
					}
					if(take) CarInfo[number][cObjectUsed][slot] = 0;
				}
			}
		}
	}
	return 1;
}

stock PutAcs(playerid, i)
{
	new click = InventClick{playerid};
	if(UseAcsID[playerid])
	{
		if(!PI[playerid][pInvItemAcs][i])//Надевание акса
		{
			PI[playerid][pInvItemAcs][i] = UseAcsID[playerid];
			PI[playerid][pInvItemAcsColor][i] = UseAcsColor[playerid];
			PI[playerid][pInvItemAcsEnchant][i] = UseAcsEnchant[playerid];

			GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][i]][ItemModel]);
			UseAcsID[playerid] = 0;
			UseAcsColor[playerid] = 0;
			UseAcsEnchant[playerid] = 0;
			RefreshInv(playerid, InventClick{playerid});
			Valik(playerid);
			UpdateSlotAcs(playerid, i);
			PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			if(SAVE_PLAYER_INV) SaveInv(playerid, 2, i);
		}
		else//Замена акса
		{
			if(click != 255)
			{
				PI[playerid][pInvItem][click] = PI[playerid][pInvItemAcs][i];
				PI[playerid][pInvItemColor][click] = PI[playerid][pInvItemAcsColor][i];
				PI[playerid][pInvItemEnchant][click] = PI[playerid][pInvItemAcsEnchant][i];

				PI[playerid][pInvItemAcs][i] = UseAcsID[playerid];
				PI[playerid][pInvItemAcsColor][i] = UseAcsColor[playerid];
				PI[playerid][pInvItemAcsEnchant][i] = UseAcsEnchant[playerid];

				GiveItem(playerid, ItemsInfo[PI[playerid][pInvItemAcs][i]][ItemModel]);
				UseAcsID[playerid] = 0;
				UseAcsColor[playerid] = 0;
				UseAcsEnchant[playerid] = 0;
				Valik(playerid);
				UpdateSlotAcs(playerid, i);
				PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);

				if(SAVE_PLAYER_INV) SaveInv(playerid, 1, click);
				if(SAVE_PLAYER_INV) SaveInv(playerid, 2, i);
			}
		}
	}
	else if(PI[playerid][pInvItemAcs][i])//Снятие акса
	{
		switch(PI[playerid][pInvItemAcs][i])
		{
			case AcsMenuUse:
			{
				CreateAcsMenu(playerid, i);
				return PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
			}
		}
		TakeAcs(playerid, i);
	}
	return true;
}
stock TakeAcs(playerid, i)
{
	if(InvCarOpen{playerid})
	{
		new number = GetVehicleID(GetPlayerVehicleID(playerid));
		return TakeModCar(playerid, InventClick{playerid}-108, number);
	}
	if(!GetInvSlot(playerid, PI[playerid][pInvItemAcs][i])) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}У вас нет свободного места в инвентаре чтобы снять аксессуар.");
	switch(PI[playerid][pInvItemAcs][i])
	{
		case Item_Radio_Vehicle: if(RCVehicle[playerid]) return DestroyRadioVehicle(playerid);
		case Item_Balloons: if(BalloonVehicle[playerid]) return DestroyBalloon(playerid);
		case Item_Skate: if(InfoSkate[playerid][sActive]) return DestroySkate(playerid);
	}
	if(IsPlayerTextDrawVisible(playerid, InventAksEnchant[playerid][i])) DestroyPlayerTD(playerid, InventAksEnchant[playerid][i]);
	if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	
	InvAdd(playerid, PI[playerid][pInvItemAcs][i], 1, 0, PI[playerid][pInvItemAcsColor][i], PI[playerid][pInvItemAcsEnchant][i]);
	
	PI[playerid][pInvItemAcs][i] = 0;
	PI[playerid][pInvItemAcsColor][i] = 0;
	PI[playerid][pInvItemAcsEnchant][i] = 0;

	new all_slots = PI[playerid][pInvItemAcsEnchant][0] + PI[playerid][pInvItemAcsEnchant][1] + PI[playerid][pInvItemAcsEnchant][2] + PI[playerid][pInvItemAcsEnchant][3] + PI[playerid][pInvItemAcsEnchant][4] +PI[playerid][pInvItemAcsEnchant][5];
	if(all_slots < 50) RemovePlayerAttachedObject(playerid, 6); 
	UpdateSlotAcs(playerid, i);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	if(SAVE_PLAYER_INV) SaveInv(playerid, 2, i);

	return 1;
}
stock CancelSelectTextDrawEx(playerid)
{
	SetPVarInt(playerid, !"SkipSelect", 1);
	return CancelSelectTextDraw(playerid);
}
stock SafeRemoveFam(playerid, &next) Iter_SafeRemove(Family, playerid, next);
stock SafeRemoveCar(number, &next)
{
	for(new i; i < 8; i++) if(CarInfo[number][cSlotItem][i]) AttachDestroy(number, i);
	mysql_pqueryf(mysql, "UPDATE `Ownable` SET `VehicleID` = '-1' WHERE `ID` = '%i'", CarInfo[number][cID]);
	UpdateOwnableCar(number, 0);
	DestroyDynamic3DTextLabel(CarText[number]);
	DestroyDynamic3DTextLabel(CarTextTrunk[number]);
	CarTextTrunk[number] = NONE_3D_TEXT;
	CarText[number] = NONE_3D_TEXT;
	DestroyVehicleEx(OwnableCar[number]);
	ResetCarArrays(number);
	Iter_SafeRemove(OWNABLECARS, number, next);
	DeleteFromParking(number);
	return 1;
}
stock SellHouse(houseid)
{
	SetString(HouseInfo[houseid][hOwner], "The State");
	HouseInfo[houseid][hLock] = 0;
	HouseInfo[houseid][hMoney] = 0;
	HouseInfo[houseid][hDrugs] = 0;
	HouseInfo[houseid][hMats] = 0;
	HouseInfo[houseid][hBar] = 0;
	HouseInfo[houseid][hPodval] = 0;
	HouseInfo[houseid][hNalog] = 0;
	HouseInfo[houseid][hNalog2] = 0;
	HouseInfo[houseid][hProducts] = 0;
	HouseInfo[houseid][hMed] = 0;
	UpdateHouse(houseid);
	return true;
}
stock SellBiz(bizid)
{
	SetString(BizInfo[bizid][bOwner], "The State");
	BizInfo[bizid][bLock] = 0;
	BizInfo[bizid][bNalog] = 0;
	BizInfo[bizid][bMoney] = 0;
	BizInfo[bizid][bEnterPrice] = 0;
	BizInfo[bizid][bProducts] = 10000;
	BizInfo[bizid][bProdPrice] = 0;
	BizInfo[bizid][bKrasher] = 0;
	BizInfo[bizid][bBuyCost] = 0;
	BizInfo[bizid][bNeedItem] = 0;
	BizInfo[bizid][bNum] = 0;
	BizInfo[bizid][bVisit] = 0;
	BizInfo[bizid][bWin] = 0;
	UpdateBiz(bizid, 1);
	return true;
}
stock PlayerReg(playerid)
{
	OnPlayerRegister(playerid, RegPass[playerid]);
	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Благодарим вас за регистрацию на нашем сервере");
	SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}Сейчас вам желательно добраться до мэрии и получить паспорт");
	if(!IsABot(playerid)) foreach(new i: Admin) SCMf(i, -1, "Приветствуем нового игрока нашего сервера: {FF9900}%s {FFFFFF}(ID: %i)  {cccccc}IP: %s", PN(playerid), playerid, ShowIP{i} ? ("скрыто") : PlayerIP(playerid));
	SetFullness(playerid, 30);
	return J_SetPlayerHealth(playerid, 100);
}

stock aml(type, playerid, Name2[], text[] = "", value = 1, value2 = 1, value3 = 1)
{
	//GetMoney(id), GetBankMoney(id), 0, GetDonate(id),
	/*if(!mysql_logs)
	{
     	mysql_logs = mysql_connect("77.222.42.28", "gs117627", "KcfHU5jCurkz", "gs117627");
	    mysql_set_charset("cp1251", mysql_logs);
	    printf("=======> mysql_logs connect %i", Float:mysql_logs);
	}*/
	new iddb = -1, iddb2 = -1, id;
	static Name[MAX_PLAYER_NAME], IP2[16];
	if(IsPlayerConnected(playerid))
	{
		iddb = PI[playerid][pID];
		Name[0] = EOS;
		SetString(Name, PN(playerid));
	}
	else if(playerid == -1)
	{
		static fmt_str[] = "SELECT ID FROM Qelksekm WHERE NickName = '%e'";
		mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, Name2);
		new Cache:result = mysql_query(mysql, str_3);
		if(cache_num_rows()) cache_get_value_name_int(0, "ID", iddb);
		cache_delete(result);
		SetString(Name, Name2);
	}

	if(IsPlayerConnected(GetPlayerID(Name2)))
	{
		id = GetPlayerID(Name2);
		iddb2 = PI[id][pID];
		IP2[0] = EOS;
		SetString(IP2, PlayerIP(id));
	}
	else
	{
		static fmt_str[] = "SELECT ID FROM Qelksekm WHERE NickName = '%e'";
		mysql_format(mysql, str_3, sizeof(fmt_str) - 2 + 24, fmt_str, Name2);
		new Cache:result = mysql_query(mysql, str_3);
		if(cache_num_rows()) cache_get_value_name_int(0, "ID", iddb2);
		cache_delete(result);
	}
	//1 - обычные
	//2 - адм
	//3 - смена ника
	//4 - не юзается
	//5 - логи денег
	//6 - логи бизов
	//7 - логи домов
	//8 - логи тачек
	//9 - логи инвентаря/трейда
	//10 - логи чата
    new year, month, day;
    getdate(year, month, day);
    static href_ip[100];
    f(href_ip, sizeof(href_ip), "<a href=/ip?ip=%q>%q</a>", text, text);
    static href_ip2[100];
    f(href_ip2, sizeof(href_ip2), "<a href=/ip?ip=%q>%q</a>", IP2, IP2);
    static href[100];
    f(href, sizeof(href), "<a href=/nickname?iddb=%i&date=%i-%02i-%02i>%q</a>", iddb, year, month, day, Name);
    static href2[100];
    f(href2, sizeof(href2), "<a href=/nickname?iddb=%i&date=%i-%02i-%02i>%q</a>", iddb2, year, month, day, Name2);
    static moneys[120];
	f(moneys, sizeof(moneys), "(Money:%i) (Bank:%i) (Depozit:%i) (Donat:%i)", GetMoney(playerid), PI[playerid][pBank], PI[playerid][pDeposit], GetDonate(playerid));
	static href3[100];
	f(href3, sizeof(href3), "<a href=/money?name=%q>%i</a>", Name, value);
	static href4[100];
	f(href4, sizeof(href4), "<a href=/car?vehicle=%i>%i</a>", value, value);
	static href5[100];
	f(href5, sizeof(href5), "<a href=/biz?biz=%i>%i</a>", value, value);
	static href6[100];
	f(href6, sizeof(href6), "<a href=/house?house=%i>%i</a>", value, value);
	static href7[100];
	f(href7, sizeof(href7), "<a href=/car?vehicle=%i>%i</a>", value3, value3);
	static href8[100];
	f(href8, sizeof(href8), "<a href=/money?name=%q>%i</a>", Name, value2);
	static dbname[100];
	f(dbname, sizeof(dbname), "Logs_Arizona");
	/*switch(type)
	{
		case -4: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`) VALUES ('Игрок %e неудачный вход. IP: %e %e.', '%e')", dbname, href, href_ip, Name2, Name);
		case -3: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`) VALUES ('Игрок %e зарегистрировался. IP: %e.', '%e')", dbname, href, href_ip, Name);
		case -2: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`) VALUES ('Игрок %e вышел c сервера. IP: %e %e.', '%e')", dbname, href, href_ip, Name2, Name);
		case -1: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`) VALUES ('Игрок %e вошел на сервер. IP: %e.', '%e')", dbname, href, href_ip, Name);
		case 1: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `PN2`) VALUES ('Администратор %e %e %e', '2', '%i', '%e', '%e')", dbname, href, text, href2, value, Name, Name2);
		case 2: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `PN2`) VALUES ('Администратор %e %e %e %i', '2', '%i', '%e', '%e')", dbname, href, text, href2, value, value2, Name, Name2);
		case 3: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e написал %e %e.', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 4: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e назначил %e лидером организации %e.', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 5: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`) VALUES ('Администратор %e забанил IP: %e. <b>Причина:</b> %e', '2', '%e')", dbname, href, href_ip2, text, Name);
		case 6: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e посадил %e в деморган на %i минут. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, value, text, Name, Name2);
		case 7: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e заглушил %e на %i минут. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, value, text, Name, Name2);
		case 8: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e выдал бан %e на %i дней. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, value, text, Name, Name2);
		case 9: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e выдал бан %e. <b>Причина:</b> %e. IP: %e.', '2', '%e', '%e')", dbname, href, href2, text, href_ip2, Name, Name2);
		case 10: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `PN2`, `Value`) VALUES ('Администратор %e продал бизнес %e (%e) игрока %e в гос.', '2', '6', '%e', '%e', '%i')", dbname, href, href5, text, href2, Name, Name2, value);
		case 11: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `PN2`, `Value`) VALUES ('Администратор %e продал дом %e игрока %e в гос.', '2', '7', '%e', '%e', '%i')", dbname, href, href6, href2, Name, Name2, value);
		case 12: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `PN2`, `Value`) VALUES ('Администратор %e продал авто %e игрока %e в гос.', '2', '8', '%e', '%e', '%i')", dbname, href, href4, href2, Name, Name2, value);
		case 13: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e выдал %e(%i) %e.', '2', '%e', '%e')", dbname, href, text, value, href2, Name, Name2);
		case 14: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e розбанил %e.', '2', '%e', '%e')", dbname, href, href2, Name, Name2);
		case 15: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e уволил %e из организации %e.', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 16: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e установил %i уровень администратора %e', '2', '%e', '%e')", dbname, href, value, href2, Name, Name2);
		case 17: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `PN2`) VALUES ('Игрок %e поменял ник на %e, помог сменить имя %e', '3', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 18: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`) VALUES ('Администратор %e %e.', '2', '%i', '%e')", dbname, href, text, value, Name);
		case 19: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e выдал предупреждение %e. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 20: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e кикнул %e. %e', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 21: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e выпустил %e. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 22: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e снял предупреждение %e. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 23: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`, `Value`) VALUES ('Игрок %e положил в мусорку (ID: %i) предмет %e в кол-ве %i.', '%e', '%i')", dbname, href, value3, ItemsInfo[value2][ItemName], value, Name, value3);
		case 24: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`, `Value`) VALUES ('Игрок %e взял из мусорки (ID: %i) предмет %e в кол-ве %i.', '%e', '%i')", dbname, href, value3, ItemsInfo[value2][ItemName], value, Name, value3);
		case 25: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `PN2`) VALUES ('Администратор %e передал донат %e %e <b>Назначение:</b> %e %e.', '2', '5', '%e', '%e')", dbname, href, href2, href3, text, moneys, Name, Name2);
		case 26: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e ответил на репорт %e. Вопрос:%e Ответ:%e', '2', '%e', '%e')", dbname, href, href2, ReportMessage[pTemp[playerid][ReportID]], text, Name, Name2);
		case 27: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`, `PN2`) VALUES ('Полицейский %e объявил %e в розыск. <b>Причина:</b> %e', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 28: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e выдал выговор %e. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 29: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `PN`, `PN2`) VALUES ('Администратор %e снял выговор %e. <b>Причина:</b> %e', '2', '%e', '%e')", dbname, href, href2, text, Name, Name2);
		case 50: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `Type3`, `PN`, `PN2`) VALUES ('Игрок %e передал деньги %e %e <b>Назначение:</b> %e %e.', '5', '%i', '%e', '%e')", dbname, href, href2, href3, text, moneys, value2, Name, Name2);
		case 51: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e получил деньги $%e за %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 52: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e потерял деньги $%e по причине %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 53: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e получил донат $%e за %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 54: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e потерял донат $%e по причине %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 55: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `PN2`) VALUES ('Игрок %e перевел со своего счета на счет %e %e', '5', '%e', '%e')", dbname, href, href2, href3, Name, Name2);
		case 56: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e купил дом ID: %e по гос. цене $%e за %e ms.', '7', '%e', '%i')", dbname, href, href6, text, Name2, Name, value);
		case 57: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e купил бизнес ID: %e по гос. цене $%e за %e ms.', '6', '%e', '%i')", dbname, href, href5, text, Name2, Name, value);
		case 58: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e купил авто ID: %e по гос. цене за $%e.', '8', '%e', '%i')", dbname, href, href4, href8, Name, value);
		case 59: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e обменялся т/с %e на %e Следствие: %e Доплата %e: $%e. %e', '8', '%e', '%i')", dbname, href, href4, href7, href2, href, href8, moneys);
		case 60: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`, `PN2`) VALUES ('Игрок %e передал %e предмет инвентаря %e в кол-во %i', '9', '%e', '%e')", dbname, href, href2, text, value, Name, Name2);
		case 61: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e получил деньги в банк $%e за %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 62: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e потерял деньги с банка $%e по причине %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 63: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e положил в домашний шкаф (ID: %i) предмет %e в кол-ве %i.', '%e', '7', '9', '%i')", dbname, href, value3, ItemsInfo[value2][ItemName], value, Name, value3);
		case 64: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e взял из домашнего шкафа (ID: %i) предмет %e в кол-ве %i.', '%e', '7', '9', '%i')", dbname, href, value3, ItemsInfo[value2][ItemName], value, Name, value3);
		case 73: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e положил в багажник авто (ID: %i) предмет %e в кол-ве %i.', '%e', '8', '9', '%i')", dbname, href, value3, ItemsInfo[value2][ItemName], value, Name, value3);
		case 74: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type`, `Type2`, `PN`, `Value`) VALUES ('Игрок %e взял из багажника авто (ID: %i) предмет %e в кол-ве %i.', '%e', '8', '9', '%i')", dbname, href, value3, ItemsInfo[value2][ItemName], value, Name, value3);
		case 83: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e получил донат рубли $%e за %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 84: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e потерял донат рубли $%e по причине %e %e.', '5', '%e')", dbname, href, href3, text, moneys, Name);
		case 100: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e %e.', '10', '%e')", dbname, href, text, Name);
		case 101: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e получил предмет инвентаря %e (ID:%i) в кол-во %i. <b>Причина:</b> %e', '9', '%e')", dbname, href, ItemsInfo[value][ItemName], value, value2, text, Name);
		case 102: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `Type2`, `PN`) VALUES ('Игрок %e потерял предмет инвентаря %e (ID:%i) в кол-во %i. <b>Причина:</b> %e', '9', '%e')", dbname, href, ItemsInfo[value][ItemName], value, value2, text, Name);
		case 103: mysql_pqueryf(mysql_logs, "INSERT INTO `%s` (`Action`, `PN`) VALUES ('Игрок %e %e.', '%e')", dbname, href, text, Name);
	}*/
	/*
	101 - получил придмет
	101 - потерял придмет
	доделать лог увал чела с орг (лидер и зам)
	*/
	return 1;
}
stock ShowSetCmdDialog(playerid, iddostup)
{
	str_1[0] = EOS;
	str_1 = "№\tНазвание\tСтатус\n";
	for(new i; i < sizeof(aAccessCMD); i++) 
	{	
		f(str_1, sizeof(str_1), "%s{FFFF00}%i.\t{FFFFFF}%s\t%s\n", str_1, i+1, aAccessCMD[i][CMDName], PI[iddostup][pAccessCMD][i] ? ("{42B02C}[Есть]") : ("{BE2D2D}[Нету]"));
	}
	return SPD(playerid, 20050, DIALOG_STYLE_TABLIST_HEADERS, !"Выберите пункт", str_1, !"Выбрать", !"Отмена");
}
stock SaveDostupPlayer(playerid)
{
	if(!IsPlayerLogged{playerid}) return 0;
	str_1[0] = EOS;
	for(new i; i < sizeof(aAccessCMD); i++) f(str_1, 600, "%s%i,", str_1, PI[playerid][pAccessCMD][i]);
	mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `AccessCMD` = '%s' WHERE `ID` = '%i'", str_1, PI[playerid][pID]);
	return 1;
}
forward OrelTimer(playerid);
public OrelTimer(playerid) return OrelAndReshkaWin(playerid);
stock OrelAndReshkaWin(playerid)
{
	new dice = random(11), orel[11] = "Орёл", reshka[11] = "Решка", id = OrelID[playerid], total = OrelMoney[playerid], biz_money = total/10;
	str_1[0] = EOS;
	switch(dice)
	{
		case 0..5:
	    {
  			f(str_1,60,"%s поймал(а) монетку, выпал: Орёл.",PN(playerid));
			ProxDetector(25,playerid, str_1,COLOR_ME);
			if(!strcmp(orel, StatusMoneta[playerid], true))
			{
				f(str_1,45,"Победил %s - %s.",PN(playerid),StatusMoneta[playerid]);
				ProxDetector(25,playerid, str_1,COLOR_DOCHAT);
				GiveMoney(playerid, total - biz_money);
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Комиссия бара составила 10 процентов от всей суммы (Комиссия: $%i).", biz_money);
				GiveMoney(id, -total);
				aml(50, id, PN(playerid), "орёл и решка", total);
				GameTextForPlayer(playerid, "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(id, "~r~YOU LOSE!", 4200, 3);
			}
			else
			{
				f(str_1,45,"Победил %s - %s.",PN(id),StatusMoneta[id]);
				ProxDetector(25,playerid, str_1,COLOR_DOCHAT);
				GiveMoney(id, total - biz_money);
				SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}Комиссия бара составила 10 процентов от всей суммы (Комиссия: $%i).", biz_money);
				GiveMoney(playerid, -total);
				aml(50, playerid, PN(id), "орёл и решка", total);
				GameTextForPlayer(id, "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(playerid, "~r~YOU LOSE!", 4200, 3);
			}
		}
		case 6..11:
		{
			f(str_1,60,"%s поймал(а) монетку, выпал: Решка.",PN(playerid));
			ProxDetector(25,playerid, str_1,COLOR_DOCHAT);
			if(!strcmp(reshka, StatusMoneta[playerid], true))
			{
				f(str_1,45,"Победил %s - %s.",PN(playerid),StatusMoneta[playerid]);
				ProxDetector(25,playerid, str_1,COLOR_DOCHAT);
				GiveMoney(playerid, total - biz_money);
				SCMf(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Комиссия бара составила 10 процентов от всей суммы (Комиссия: $%i).", biz_money);
				GiveMoney(id, -total);
				aml(50, id, PN(playerid), "орёл и решка", total);
				GameTextForPlayer(playerid, "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(id, "~r~YOU LOSE!", 4200, 3);
			}
			else
			{
				f(str_1,45,"Победил %s - %s.",PN(id),StatusMoneta[id]);
				ProxDetector(25,playerid, str_1,COLOR_DOCHAT);
				GiveMoney(id, total - biz_money);
				SCMf(id, COLOR_VALIK, "[Информация] {FFFFFF}Комиссия бара составила 10 процентов от всей суммы (Комиссия: $%i).", biz_money);
				GiveMoney(playerid, -total);
				aml(50, playerid, PN(id), "орёл и решка", total);
				GameTextForPlayer(id, "~g~YOU WIN!", 4200, 3);
				GameTextForPlayer(playerid, "~r~YOU LOSE!", 4200, 3);
			}
		}
	}
	GiveBizMoney(BizEntered[playerid], biz_money);
	return 1;
}
stock UpdateTradeMoney(playerid, money = 1)
{
    if(money) PlayerTextDrawSetStringf(playerid, Invent_Trade[playerid][6], "%i\t$", TradeMoney[playerid]), PlayerTextDrawSetStringf(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "%i\t$", TradeMoney[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][6], "_"), PlayerTextDrawSetString(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "_");
}
stock UpdateTradeEURO(playerid, money = 1)
{
    if(money) PlayerTextDrawSetStringf(playerid, Invent_Trade[playerid][6], "~y~%i\tEURO", TradeEURO[playerid]), PlayerTextDrawSetStringf(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "~y~%i\tEURO", TradeEURO[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][6], "_"), PlayerTextDrawSetString(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "_");
}
stock UpdateTradeBTC(playerid, money = 1)
{
    if(money) PlayerTextDrawSetStringf(playerid, Invent_Trade[playerid][6], "~y~%i\tBTC", TradeBTC[playerid]), PlayerTextDrawSetStringf(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "~y~%i\tBTC", TradeBTC[playerid]);
    else PlayerTextDrawSetString(playerid, Invent_Trade[playerid][6], "_"), PlayerTextDrawSetString(TradeID[playerid], Invent_Trade[TradeID[playerid]][13], "_");
}
stock ShowTradeExchange(playerid)
{
    f(str_2, sizeof(str_2), "{FFFFFF}Валюта\t{73B461}Баланс\t{cccccc}Комиссия (с варном)\n\
    Ввести сумму в валюте $$$$\t{73B461}$%i\t{cccccc}6%% (10%%)\n\
    Ввести сумму в валюте ЕВРО\t{73B461}%i ЕВРО\t{cccccc}3%% (5%%)\n\
    Ввести сумму в валюте BTC\t{73B461}%i BTC\t{cccccc}0%% (0%%)", \
    GetMoney(playerid),\
    GetInvCount(playerid, 776), \
    GetInvCount(playerid, Item_Bitcoin));
    return SPD(playerid, 8264, DIALOG_STYLE_TABLIST_HEADERS, !"{BFBBBA}Торговля", str_2, !"Выбрать", !"Отмена");
}
stock ShowTradeBTC(playerid)
{
    f(str_1, 150, "{FFFFFF}Введите количество, которое хотите передать\n{73B461}Доступно: %i BTC", GetInvCount(playerid, Item_Bitcoin));
    return SPD(playerid, 8266, DIALOG_STYLE_INPUT, !"Торговля", str_1, !"Выбрать", !"Отмена");
}
stock ShowTradeEURO(playerid)
{
    f(str_1, 150, "{FFFFFF}Введите количество, которое хотите передать\n{73B461}Доступно: %i ЕВРО", GetInvCount(playerid, 776));
    return SPD(playerid, 8265, DIALOG_STYLE_INPUT, !"Торговля", str_1, !"Выбрать", !"Отмена");
}
stock ShowTradeMoney(playerid)
{
    f(str_1, 150, "{FFFFFF}Введите количество, которое хотите передать\n{73B461}Доступно: $%i", GetMoney(playerid));
    return SPD(playerid, 8258, DIALOG_STYLE_INPUT, !"Торговля", str_1, !"Выбрать", !"Отмена");
}
stock showboomtdmenu(playerid)
{
    #include ../library/TEXTDRAWS/boom
   	BoomUse[playerid] = 1;
   	Music[playerid] = 1;
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]);
    PlayerTextDrawSetString(playerid, boomtext_p[playerid][0], "1_/_27");
    for(new i = 0; i < 10; i++){
		TextDrawShowForPlayer(playerid, boomtext[i]);
	}
	for(new i = 0; i < 9; i++){
		PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
	}
	bumboxopen{playerid} = true;
	ShowMenuBoom(playerid);
	SelectTextDraw(playerid, 0x777777FF-50);
	return 1;
}
HideBoom(playerid)
{
    for(new i = 0; i < 10; i++){
		TextDrawHideForPlayer(playerid, boomtext[i]);
	}
	for(new i = 0; i < 9; i++){
		DestroyPlayerTD(playerid, boomtext_p[playerid][i]);
	}
	for(new i = 0; i < 16; i++){
	    DestroyPlayerTD(playerid, pboom[playerid][i]);
	}
	BoomUse[playerid] = 0;
    bumboxopen{playerid} = false;
	CancelSelectTextDrawEx(playerid);
    return 1;
}
ShowMenuBoom(playerid)
{
	if(BoomUse[playerid] == 1)
	{
		if(NumMusic[playerid] == 1)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 2)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 3)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 4)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 5)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 6)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 7)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 8)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 2)
	{
		if(NumMusic[playerid] == 9)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 10)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 11)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 12)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 13)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 14)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 15)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 16)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 3)
	{
		if(NumMusic[playerid] == 17)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 18)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 19)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 20)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 21)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 22)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 23)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 24)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 4)
	{
		if(NumMusic[playerid] == 25)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 26)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 27)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 28)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 29)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 30)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 31)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 32)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 5)
	{
		if(NumMusic[playerid] == 33)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 34)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 35)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 36)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 37)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 38)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 39)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 40)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 6)
	{
		if(NumMusic[playerid] == 41)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 42)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 43)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 44)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 45)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 46)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 47)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 48)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 7)
	{
		if(NumMusic[playerid] == 49)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 50)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 51)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 52)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 53)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 54)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 55)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 56)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 8)
	{
		if(NumMusic[playerid] == 57)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 58)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 59)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 60)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 61)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 62)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 63)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 64)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 9)
	{
		if(NumMusic[playerid] == 65)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 66)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 67)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 68)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 69)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 70)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 71)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 72)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 10)
	{
		if(NumMusic[playerid] == 73)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 74)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 75)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 76)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 77)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 78)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 79)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 80)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 11)
	{
		if(NumMusic[playerid] == 81)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 82)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 83)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 84)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 85)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 86)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 87)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 88)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 12)
	{
		if(NumMusic[playerid] == 89)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 90)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 91)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 92)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 93)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 94)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 95)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 96)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 13)
	{
		BoomUse[playerid] = 13;
		if(NumMusic[playerid] == 97)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 98)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 99)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 100)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 101)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 102)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 103)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 104)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 14)
	{
		if(NumMusic[playerid] == 105)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 106)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 107)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 108)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 109)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 110)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 111)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 112)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 15)
	{
		if(NumMusic[playerid] == 113)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 114)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 115)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 116)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 117)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 118)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 119)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 120)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 16)
	{
		if(NumMusic[playerid] == 121)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 122)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 123)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 124)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 125)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 126)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 127)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 128)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 17)
	{
		if(NumMusic[playerid] == 129)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 130)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 131)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 132)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 133)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 134)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 135)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 136)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 18)
	{
		if(NumMusic[playerid] == 137)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 138)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 139)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 140)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 141)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 142)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 143)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 144)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 19)
	{
		if(NumMusic[playerid] == 145)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 146)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 147)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 148)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 149)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 150)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 151)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 152)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 20)
	{
		if(NumMusic[playerid] == 153)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 154)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 155)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 156)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 157)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 158)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 159)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 160)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 21)
	{
		if(NumMusic[playerid] == 161)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 162)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 163)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 164)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 165)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 166)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 167)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 168)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 22)
	{
		if(NumMusic[playerid] == 169)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 170)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 171)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 172)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 173)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 174)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 175)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 176)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 23)
	{
		if(NumMusic[playerid] == 177)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 178)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 179)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 180)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 181)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 182)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 183)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 184)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 24)
	{
		if(NumMusic[playerid] == 185)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 186)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 187)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 188)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 189)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 190)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 191)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 192)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 25)
	{
		if(NumMusic[playerid] == 193)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 194)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 195)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 196)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 197)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 198)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 199)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 200)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 26)
	{
		if(NumMusic[playerid] == 201)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 202)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
		else if(NumMusic[playerid] == 203)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][11]);
			PlayerTextDrawShow(playerid, pboom[playerid][10]);
		}
		else if(NumMusic[playerid] == 204)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][9]);
			PlayerTextDrawShow(playerid, pboom[playerid][8]);
		}
		else if(NumMusic[playerid] == 205)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][7]);
			PlayerTextDrawShow(playerid, pboom[playerid][6]);
		}
		else if(NumMusic[playerid] == 206)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][5]);
			PlayerTextDrawShow(playerid, pboom[playerid][4]);
		}
		else if(NumMusic[playerid] == 207)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][3]);
			PlayerTextDrawShow(playerid, pboom[playerid][2]);
		}
		else if(NumMusic[playerid] == 208)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][1]);
			PlayerTextDrawShow(playerid, pboom[playerid][0]);
		}
	}
	else if(BoomUse[playerid] == 27)
	{
		if(NumMusic[playerid] == 209)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][15]);
			PlayerTextDrawShow(playerid, pboom[playerid][14]);
		}
		else if(NumMusic[playerid] == 210)
		{
 			PlayerTextDrawShow(playerid, pboom[playerid][13]);
			PlayerTextDrawShow(playerid, pboom[playerid][12]);
		}
	}
	return 1;
}
stock BumBoxStr(playerid, str)
{
    BoomUse[playerid] = str;
    for(new i = 0; i < 16; i++) PlayerTextDrawHide(playerid, pboom[playerid][i]);
    for(new i = 0; i < 9; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
    if(BoomUse[playerid] == 1) Music[playerid] = 1;
    else if(BoomUse[playerid] == 2) Music[playerid] = 9;
    else if(BoomUse[playerid] == 3) Music[playerid] = 17;
    else if(BoomUse[playerid] == 4) Music[playerid] = 25;
    else if(BoomUse[playerid] == 5) Music[playerid] = 33;
    else if(BoomUse[playerid] == 6) Music[playerid] = 41;
    else if(BoomUse[playerid] == 7) Music[playerid] = 49;
    else if(BoomUse[playerid] == 8) Music[playerid] = 57;
    else if(BoomUse[playerid] == 9) Music[playerid] = 65;
    else if(BoomUse[playerid] == 10) Music[playerid] = 73;
    else if(BoomUse[playerid] == 11) Music[playerid] = 81;
    else if(BoomUse[playerid] == 12) Music[playerid] = 89;
    else if(BoomUse[playerid] == 13) Music[playerid] = 97;
    else if(BoomUse[playerid] == 14) Music[playerid] = 105;
    else if(BoomUse[playerid] == 15) Music[playerid] = 113;
    else if(BoomUse[playerid] == 16) Music[playerid] = 121;
    else if(BoomUse[playerid] == 17) Music[playerid] = 129;
    else if(BoomUse[playerid] == 18) Music[playerid] = 137;
    else if(BoomUse[playerid] == 19) Music[playerid] = 145;
    else if(BoomUse[playerid] == 20) Music[playerid] = 153;
    else if(BoomUse[playerid] == 21) Music[playerid] = 161;
    else if(BoomUse[playerid] == 22) Music[playerid] = 169;
    else if(BoomUse[playerid] == 23) Music[playerid] = 177;
    else if(BoomUse[playerid] == 24) Music[playerid] = 185;
    else if(BoomUse[playerid] == 25) Music[playerid] = 193;
    else if(BoomUse[playerid] == 26) Music[playerid] = 201;
    else if(BoomUse[playerid] == 27) Music[playerid] = 209;
    if(NumMusic[playerid] !=0) ShowMenuBoom(playerid);
	if(BoomUse[playerid] != 27) {
	    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][6], BumInfo[Music[playerid]+2][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][5], BumInfo[Music[playerid]+3][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][4], BumInfo[Music[playerid]+4][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][3], BumInfo[Music[playerid]+5][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][2], BumInfo[Music[playerid]+6][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][1], BumInfo[Music[playerid]+7][bName]); }
	else {
	    PlayerTextDrawSetString(playerid, boomtext_p[playerid][8], BumInfo[Music[playerid]][bName]);
    	PlayerTextDrawSetString(playerid, boomtext_p[playerid][7], BumInfo[Music[playerid]+1][bName]); }
	f(str_4, sizeof(str_4), "%i_/_27", BoomUse[playerid]);
	PlayerTextDrawSetString(playerid, boomtext_p[playerid][0], str_4);
	for(new i = 0; i < 9; i++) PlayerTextDrawShow(playerid, boomtext_p[playerid][i]);
	if(BoomUse[playerid] == 27) for(new i = 1; i < 7; i++) PlayerTextDrawHide(playerid, boomtext_p[playerid][i]);
	return 1;
}
@__LaunchGO(playerid);
@__LaunchGO(playerid)
{
    if(LauncherSize[playerid] >= 50.000000) GameTextForPlayer(playerid,"Go-Go-Go!!!",1000,4);
    PlayerTextDrawHide(playerid, launchsize[playerid][0]);
	PlayerTextDrawTextSize(playerid, launchsize[playerid][0], LauncherSize[playerid], 1.259899);
	if(LauncherSize[playerid] >= 13.000000) PlayerTextDrawColor(playerid, launchsize[playerid][0], 0x386a2bFF);
	if(LauncherSize[playerid] >= 50.000000) PlayerTextDrawTextSize(playerid, launchsize[playerid][0], 50.000000, 1.259899);
	if(LauncherSize[playerid] >= 60.000000 && LauncherSize[playerid] <= 61.000000)
	{
		new car = GetPlayerVehicleID(playerid);
		UpdateVehicleDamageStatus(car,0,0,0, 5);
	}
	if(LauncherSize[playerid] >= 62.000000) PlayerTextDrawColor(playerid, launchsize[playerid][0], 0xb01925FF);
	if(LauncherSize[playerid] >= 80.000000)
	{
	 	for(new i; i < 9; i++){
		    TextDrawHideForPlayer(playerid, launch[i]);
		}
		DestroyPlayerTD(playerid, launchsize[playerid][0]);
		if(launchtimer[playerid] !=-1){
		    KillTimer(launchtimer[playerid]);
		    launchtimer[playerid] =-1;
		}
		LauncherSize[playerid] = 0.000000;
		LauncherSize2[playerid] = 0;
		J_SetVehicleHealth(GetPlayerVehicleID(playerid), 100);
		skorostb[playerid] = 0;
	}
	if(LauncherSize[playerid] < 75.000000) LauncherSize2[playerid] += 35;
	LauncherSize[playerid] += 2.500000;
	PlayerTextDrawShow(playerid, launchsize[playerid][0]);
	return 1;
}

stock CreatePageButton(playerid)
{
	Item_Menu_Shop[playerid][6] = CreatePlayerTextDraw(playerid, 320.299988, 352.242859, "usebox");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][6], 0.000000, 3.665600);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][6], 180.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][6], 1);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][6], 0xE1E1E1FF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][6], 0x1A1A1AFF);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][6], 2);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][6], 0x000000FF);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][6], 0);

	Item_Menu_Shop[playerid][5] = CreatePlayerTextDraw(playerid, 286.255859, 358.242859, "usebox");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][5], 0.000000, 2.335400);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][5], 214.044113, 0.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][5], 1);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][5], 0xE1E1E1FF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][5], 1);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][5], 0x050505FF);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][5], 2);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][5], 0x000000FF);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][5], 0);

	Item_Menu_Shop[playerid][4] = CreatePlayerTextDraw(playerid, 216.544113, 357.742859, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][4], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][4], 19.831934, 22.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][4], 1);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][4], 0x1A1A1AFF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][4], 0);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][4], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][4], 2);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][4], 0x000000FF);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][4], 4);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][4], 0);

	Item_Menu_Shop[playerid][3] = CreatePlayerTextDraw(playerid, 225.832306, 365.220886, "<");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][3], 0.125555, 0.704395);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][3], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][3], 2);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][3], 0x777777FF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][3], 0);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][3], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][3], 0x00000000);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][3], 0);

	Item_Menu_Shop[playerid][2] = CreatePlayerTextDraw(playerid, 264.123962, 357.742859, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][2], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][2], 19.831934, 22.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][2], 1);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][2], 0x1A1A1AFF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][2], 0);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][2], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][2], 2);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][2], 0x000000FF);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][2], 1);

	Item_Menu_Shop[playerid][1] = CreatePlayerTextDraw(playerid, 273.412140, 365.220886, ">");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][1], 0.125555, 0.704395);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][1], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][1], 2);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][1], 0x777777FF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][1], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][1], 0x00000000);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][1], 0);

	Item_Menu_Shop[playerid][0] = CreatePlayerTextDraw(playerid, 250.250000, 365.220886, "1");
	PlayerTextDrawLetterSize(playerid, Item_Menu_Shop[playerid][0], 0.125555, 0.704395);
	PlayerTextDrawTextSize(playerid, Item_Menu_Shop[playerid][0], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, Item_Menu_Shop[playerid][0], 2);
	PlayerTextDrawColor(playerid, Item_Menu_Shop[playerid][0], 0x777777FF);
	PlayerTextDrawUseBox(playerid, Item_Menu_Shop[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, Item_Menu_Shop[playerid][0], 0x80808080);
	PlayerTextDrawSetShadow(playerid, Item_Menu_Shop[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, Item_Menu_Shop[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, Item_Menu_Shop[playerid][0], 0x00000000);
	PlayerTextDrawFont(playerid, Item_Menu_Shop[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, Item_Menu_Shop[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, Item_Menu_Shop[playerid][0], 0);
}
stock UseRedactor(playerid, number, slot, model)
{
	CarInfo[number][cModelObject][slot] = model;
	CancelSelectTextDraw(playerid);
	return EditOwnableCarObject(playerid, slot);
}
stock UseAttachCar(playerid, slot)
{
    new number = GetVehicleID(GetPlayerVehicleID(playerid));
	new td = InventClick{playerid}, ID = PI[playerid][pInvItem][td];
	RefreshInv(playerid, td);
	CarInfo[number][cSlotItem][slot] = ID;
	UpdateSlotModCar(playerid, slot, number);
	PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
	SaveInv(number, 5, slot);
	return 1;
}
stock AC_Bogdan(playerid, code)
{
	if(Osnovat(PN(playerid)) || code == 228) return 0;
	#if AC_ON
	Kick(playerid);
	#endif
	return 1;
}
stock CheckWeapons(playerid)
{
	switch(GetPlayerWeapon(playerid))
	{
		case 35..40: AC_Bogdan(playerid, 15);
	}
	return 1;
}
#if !AC_ON
ac_ShowPlayerDialog(playerid, dialogid)
{
	playerid = dialogid;
	return playerid;
}
#endif
stock KladProg(playerid)
{
	if(pTemp[playerid][pKladProgress] >= 1)
	{
		if(pTemp[playerid][pKladProgress] <= 15)
		{
			switch(random(7))
			{
				case 0..3:
					{
						GameTextForPlayer(playerid, "~g~PRESS: ~r~N", 1500, 3);
      					pTemp[playerid][pKladKey] = 1;
	    			}
				case 4..7:
   					{
   	    				GameTextForPlayer(playerid, "~g~PRESS: ~r~Y", 1500, 3);
   						pTemp[playerid][pKladKey] = 2;
		    		}
			}
		}
		else if(pTemp[playerid][pKladProgress] >= 15)
		{
			new i = random(sizeof(kladqusans));
			pTemp[playerid][pKladProgress] = 0;
			pTemp[playerid][pKladKey] = 0;
			pTemp[playerid][pKladID][1] = i;
			ClearAnimations(playerid);
			strmid(pTemp[playerid][pKladOtevet], kladqusans[i][kladanswer], 0, 256);
			GameTextForPlayer(playerid, "~g~SUCCESSFULLY", 3000, 3);
			f(str_1, sizeof(str_1), "{FFFFFF}\n\nДля того, чтобы взломать замок,\nвам необходима ответить на вопрос-загадку!\n\nВопрос:\n%s\n\nВведите ответ в пустое контекстное поле:\n\n", kladqusans[i][kladquestion]);
			SPD(playerid, 3736, DIALOG_STYLE_INPUT, !"{FFFFFF}Взлом | {DC4747}Клад", str_1, !"»", !"X");
		}
	}
	return true;
}
stock GiveItemBox(playerid, box)
{
	new item, amount = 1;
	switch(box)
	{
	    case 0:
	    {
			InvAdd(playerid, Item_YellowBox, -1);
			aml(102, playerid, "", "открытие yellow box", Item_YellowBox, 1);
	    	switch(random(117))
			{
				case 0..3:
				{
				    item = Item_Ticket_Donate;
			 		amount = randomEx(1, 30);
				}
				case 4..8: item = 515;
				case 9..14: item = 525;
				case 15..20: item = 563;
				case 21..40:
				{
					item = Item_GoldRoulette;
					amount = randomEx(1, 15);
				}
				case 41..55:
				{
				    item = Item_Gold;
				    amount = randomEx(1, 15);
				}
				case 56..72:
				{
				    item = Item_FamilyTalon;
				    amount = randomEx(1, 100);
				}
				case 73..85:
				{
				    item = Item_Cotton;
				    amount = randomEx(1, 30);
				}
				case 86..100:
				{
				    item = Item_Ticket_AZ;
					amount = randomEx(1, 10000);
				}
				case 101..117:
				{
					item = Item_Linen;
				    amount = randomEx(1, 30);
				}
			}
			SCMf(playerid, COLOR_YELLOW, "Вы использовали сундук {cccccc}Rare Box Yellow{FFFF00}! Ваш приз: %s (Количество: %iшт.)", ItemsInfo[item][ItemName], amount);
		    switch(item)
			{
			    case Item_Ticket_Donate, 515, 525, 563: SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии сундука 'Rare Box Yellow' и выиграл %s (%iшт.)", PN(playerid), ItemsInfo[item][ItemName], amount);
			}
	    }
	    case 1:
		{
		    InvAdd(playerid, Item_BlueBox, -1);
		    aml(102, playerid, "", "открытие blue box", Item_BlueBox, 1);
		    switch(random(117))
		    {
		        case 0..3:
				{
					item = Item_Ticket_Donate;
			 		amount = randomEx(1, 40);
				}
				case 4..8: item = 428;
				case 9..14: item = 556;
				case 15..20: item = 510;
				case 21..40:
				{
					item = Item_GoldRoulette;
					amount = randomEx(1, 15);
				}
				case 41..55:
				{
				    item = Item_Gold;
				    amount = randomEx(1, 15);
				}
				case 56..72:
				{
				    item = Item_FamilyTalon;
				    amount = randomEx(1, 100);
				}
				case 73..85:
				{
				    item = Item_Cotton;
				    amount = randomEx(1, 30);
				}
				case 86..100:
				{
				    item = Item_Euro;
					amount = randomEx(1, 10000);
				}
				case 101..117:
				{
					item = Item_Linen;
				    amount = randomEx(1, 30);
				}
		    }
		    SCMf(playerid, COLOR_YELLOW, "Вы использовали сундук {cccccc}Rare Box Blue{FFFF00}! Ваш приз: %s (Количество: %iшт.)", ItemsInfo[item][ItemName], amount);
		    switch(item)
			{
			    case 428, 556, 510, Item_Ticket_Donate: SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии сундука 'Rare Box Blue' и выиграл %s (%iшт.)", PN(playerid), ItemsInfo[item][ItemName], amount);
			}
		}
		case 2:
		{
		    InvAdd(playerid, Item_RedBox, -1);
		    aml(102, playerid, "", "открытие red box", Item_RedBox, 1);
		    switch(random(117))
		    {
		        case 0..3:
				{
			 		amount = randomEx(1, 50);
					item = Item_Ticket_Donate;
				}
				case 4..8: item = 433;
				case 9..14: item = 486;
				case 15..20: item = 457;
				case 21..40:
				{
					item = Item_GoldRoulette;
					amount = randomEx(1, 15);
				}
				case 41..55:
				{
				    item = Item_Gold;
				    amount = randomEx(1, 15);
				}
				case 56..72:
				{
				    item = Item_FamilyTalon;
				    amount = randomEx(1, 100);
				}
				case 73..85:
				{
				    item = Item_Cotton;
				    amount = randomEx(1, 30);
				}
				case 86..100:
				{
				    item = Item_Euro;
					amount = randomEx(1, 20000);
    			}
				case 101..117:
				{
					item = Item_Linen;
				    amount = randomEx(1, 30);
				}
		    }
            SCMf(playerid, COLOR_YELLOW, "Вы использовали сундук {cccccc}Rare Box Red{FFFF00}! Ваш приз: %s (Количество: %iшт.)", ItemsInfo[item][ItemName], amount);
            switch(item)
			{
			    case 433, 486, 457, Item_Ticket_Donate: SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии сундука 'Rare Box Red' и выиграл %s (%iшт.)", PN(playerid), ItemsInfo[item][ItemName], amount);
			}
		}
		case 3:
		{
		    InvAdd(playerid, Item_AcsessoryBox, -1);
		    aml(102, playerid, "", "открытие Acsessory box", Item_AcsessoryBox, 1);
	    	switch(random(120))
			{
				case 0..2:
				{
			 		amount = randomEx(1, 30);
					item = Item_Ticket_Donate;
				}
				case 4..8: item = 1094;
				case 9..14: item = 1095;
				case 15..20: item = 1096;
				case 21..40:
				{
					item = Item_GoldRoulette;
					amount = randomEx(1, 15);
				}
				case 41..55:
				{
				    item = Item_Gold;
				    amount = randomEx(1, 15);
				}
				case 56..72:
				{
				    item = Item_FamilyTalon;
				    amount = randomEx(1, 100);
				}
				case 73..85:
				{
				    item = Item_Cotton;
				    amount = randomEx(1, 30);
				}
				case 86..100:
				{
				    item = Item_Ticket_AZ;
					amount = randomEx(1, 10000);
				}
				case 101..117:
				{
					item = Item_Linen;
				    amount = randomEx(1, 30);
				}
				default: item = 1097;
			}
			SCMf(playerid, COLOR_YELLOW, "Вы использовали сундук {cccccc}Rare Box Acsessory{FFFF00}! Ваш приз: %s (Количество: %iшт.)", ItemsInfo[item][ItemName], amount);
			switch(item)
			{
			    case 1094, 1095, 1096, Item_Ticket_Donate: SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии сундука 'Rare Box Acsessory' и выиграл %s (%iшт.)", PN(playerid), ItemsInfo[item][ItemName], amount);
			}
		}
	}
	if(item != Item_Ticket_Donate)
	{
		InvAdd(playerid, item, amount, 0);
		aml(101, playerid, "", "открытие бокса", item, amount);
	}
	else
	{
		GiveDonateMoney(playerid, amount);
		aml(83, playerid, "", "открытие бокса", amount);

		SCM(playerid, COLOR_VALIK, !"[Подсказка] {FFFFFF}AZ-RUB автоматически были зачислены");
	}
	return 1;
}
stock GiveitemKlade(playerid)
{
	new item, amount = 1;
	switch(random(500))
	{
    	case 0..1: item = 519;
    	case 2..4: item = 520;
    	case 5..15: item = 779;
    	case 16..31: item = 385;
    	case 32..57: item = 396;
    	case 58..88: item = 615;
    	case 89..119: item = 616;
    	case 120..150: item = 617;
    	case 151..170: item = 657;
    	case 171..186: item = 658;
    	case 201..250:
    	{
    		item = Item_GoldRoulette;
    		amount = random(25);
    	}
    	case 251..271: item = 645;
    	case 272..290: item = 646;
    	case 291..312: item = 647;
    	case 321..331: item = 464;
    	case 332..340: item = 528;
    	case 341..350: item = 777;
    	case 351..362: item = 770;
		case 363..369: item = 768;
		case 370..373: item = 431;
		case 374..380: item = 656;
		default:
		{
			item = 776;
			amount = random(15000);
		}
	}
	InvAdd(playerid, item, amount);
	aml(101, playerid, "", "открытие клада", item, amount);
	return 1;
}
stock CheckPhones(playerid)
{
	new retn;
	for(new i = Item_Xiaomi_Blue; i < Item_iPhone_DarkRed; i++)
	{
		if(GetInvCount(playerid, i))
		{
			retn = true;
			break;
		}
	}
	return retn;
}

stock UsePhone(playerid, phone)
{
    if(!PI[playerid][pTelNum]) return SCM(playerid, COLOR_GREY, !"У вас нет sim-карты!");
	HideTextDraws(playerid, 5);
	HideLogo(playerid);
	itemphone[playerid] = phone;
	if(!telephoneon{playerid})
	{
	   	switch(phone)
		{
			case Item_Xiaomi_Blue..Item_Xiaomi_DarkRed:
			{
			    SetPVarInt(playerid,!"telephone",1);//ксиоми 1, айфон 2, самсинг 3
                f(str_4, sizeof(str_4), "%s достал(а) %s из кармана", cPN(playerid), ItemsInfo[phone][ItemName]);
				ProxDetector(25, playerid, str_4, COLOR_ME);
				for(new i; i < 58; i++)TextDrawShowForPlayer(playerid, telephonexiaomi[i]);
			}
			case Item_iPhone_Blue..Item_iPhone_DarkRed:
			{
			    SetPVarInt(playerid,!"telephone",2);
                f(str_4, sizeof(str_4), "%s достал(а) %s из кармана", cPN(playerid), ItemsInfo[phone][ItemName]);
				ProxDetector(25, playerid, str_4, COLOR_ME);
				for(new i; i < 67; i++)TextDrawShowForPlayer(playerid, telephoneiphone[i]);
			}
			case Item_Samsung_Blue..Item_Samsung_DarkRed:
			{
			    SetPVarInt(playerid,!"telephone",3);
			 	f(str_4, sizeof(str_4), "%s достал(а) %s из кармана", cPN(playerid), ItemsInfo[phone][ItemName]);
				ProxDetector(25, playerid, str_4, COLOR_ME);
				for(new i; i < 72; i++) TextDrawShowForPlayer(playerid, telephoneSamsung[i]);
			}
		}
		telephoneon{playerid} = true;
		SelectTextDraw(playerid, -16776961);
		if(!IsPlayerAttachedObjectSlotUsed(playerid, 6)) SetPlayerAttachedObject(playerid, 6, 18868, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
	}
	return 1;
}
stock HidePhone(playerid)
{
    if(telephoneon{playerid})
    {
	    switch(GetPVarInt(playerid, !"telephone"))
	    {
		    case 1:
		    {
				for(new i; i < 58; i++) TextDrawHideForPlayer(playerid, telephonexiaomi[i]);
		        if(Phonestat{playerid})
		        {
		            Phonestat{playerid} = false;
		            for(new i; i < 32; i++) TextDrawHideForPlayer(playerid, PnumberXiaomi[i]);
		            PlayerTextDrawDestroy(playerid, Ppnumber[playerid]);
		        }
			}
			case 2:
			{
				for(new i; i < 67; i++) TextDrawHideForPlayer(playerid, telephoneiphone[i]);
		        if(Phonestat{playerid})
		        {
		            Phonestat{playerid} = false;
		            for(new i; i < 32; i++) TextDrawHideForPlayer(playerid, PnumberXiaomi[i]);
		            PlayerTextDrawDestroy(playerid, Ppnumber[playerid]);
		        }
			}
			case 3:
			{
				for(new i; i < 72; i++) TextDrawHideForPlayer(playerid, telephoneSamsung[i]);
		        if(Phonestat{playerid})
		        {
		            Phonestat{playerid} = false;
		            for(new i; i < 34; i++) TextDrawHideForPlayer(playerid, PnumberSamsung[i]);
		            PlayerTextDrawDestroy(playerid, Ppnumber[playerid]);
		        }
			}
		}
		switch(itemphone[playerid])
		{
			case Item_Xiaomi_Blue..Item_iPhone_DarkRed:
			{
				f(str_4, sizeof(str_4), "%s убрал(а) %s из кармана", cPN(playerid), ItemsInfo[itemphone[playerid]][ItemName]);
				ProxDetector(25, playerid, str_4, COLOR_ME);
			}
		}
		telephoneon{playerid} = false;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
		CancelSelectTextDraw(playerid);
	}
	return 1;
}
stock MenuSlotsUpdate(id, slot, type)
{
	foreach(new i: Player)
    {
    	switch(type)
    	{
    		case 1: if(TrashID[i] != id) continue;
    		case 2: if(HouseID[i] != id) continue;
    		case 3: if(idaofcar[i] != id) continue;
    		default: return false;
    	}
    	MenuSlotUpdate(i, slot, type);
	}
	return 1;
}

stock ShowDialogObject(playerid, global, dialogid)
{
	if(global == 0)
	{
	    new O = ListObject[playerid];
	    new LESD = 0;
	    for(new i; i < 24; i++) ObjectListItem[playerid][i] = -1;
		str_1 = "[idx*uid]	Модель,Группа|Метка	Создатель,Дата\n{FFFFFF}";
		for(new i = ListObject[playerid]; i < TOTALOBJECTS; i++)
		{
		    if(LESD != 24)
		    {
		        if(GetString(ObjInfo[i][objName], "None")) continue;
		        if(GetString(ObjInfo[i][objOwner], PN(playerid)))
		        {
				    f(str_1, sizeof(str_1), "%s[%i*%i]\t%i, %s\t(%s, %s %s)\n",str_1, i, ObjInfo[i][objID], ObjInfo[i][objModel], ObjInfo[i][objName], ObjInfo[i][objOwner], ObjInfo[i][otime], ObjInfo[i][odate]);
				    ObjectListItem[playerid][LESD] = i;
				    ListObject[playerid]++;
				    LESD++;
				}
		    }
		    else break;
		}
		if(!O)
		{
		    if(ObjectListItem[playerid][0] == -1)
		    {
			    SCM(playerid, -1, !"[Admin Mapping] Вы не создавали ни одного объекта.");
			    return callcmd::map(playerid);
			}
		}
        if(LESD != 24) for(new i = 0; i < 24; i++) if(ObjectListItem[playerid][i] == -1) f(str_1, sizeof(str_1),"%s\n-", str_1);
        else f(str_1, sizeof(str_1), "%sСледующая страница >>>", str_1);
	    SPD(playerid, dialogid, DIALOG_STYLE_TABLIST_HEADERS, !"Admin My List Objects", str_1, !"Выбрать", !"Назад");
	}
	else
	{
	    new LESD = 0;
	    new O = ListObject[playerid];
	    for(new i = 0; i < 24; i++) ObjectListItem[playerid][i] = -1;
	    str_1 = "[idx*uid]	Модель,Группа|Метка	Создатель,Дата\n{FFFFFF}";
		for(new i= ListObject[playerid]; i < TOTALOBJECTS; i++)
		{
		    if(LESD == 24) break;
		    if(GetString(ObjInfo[i][objName], "None")) continue;
			f(str_1, sizeof(str_1), "%s[%i*%i]\t%i, %s\t(%s, %s %s)\n", str_1, i, ObjInfo[i][objID], ObjInfo[i][objModel], ObjInfo[i][objName], ObjInfo[i][objOwner], ObjInfo[i][otime], ObjInfo[i][odate]);
			ObjectListItem[playerid][LESD] = i;
			ListObject[playerid]++;
			LESD++;
		}
		if(!O)
		{
            if(ObjectListItem[playerid][0] == -1)
            {
			    SCM(playerid, -1, !"[Admin Mapping] Вы базе данных нету созданных объектов.");
			    return callcmd::map(playerid);
			}
		}
		if(LESD != 24) for(new i = 0; i < 24; i++) if(ObjectListItem[playerid][i] == -1) f(str_1, sizeof(str_1), "%s\n-", str_1);
        else f(str_1, sizeof(str_1), "%sСледующая страница >>>", str_1);
	    SPD(playerid, 9071, DIALOG_STYLE_TABLIST_HEADERS, !"Admin All List Objects", str_1, !"Выбрать", !"Назад");
	}
	return 1;
}
forward LoadObjects();
public LoadObjects()
{
	new currenttime = GetTickCount();
	TOTALOBJECTS = cache_num_rows();
    if(TOTALOBJECTS)
    {
    	for(new i; i < TOTALOBJECTS; i++)
    	{
	     	cache_get_value_name_int(i, "ID", ObjInfo[i][objID]);
            cache_get_value_name(i, "Owner", ObjInfo[i][objOwner]);
    		cache_get_value_name(i, "Name", ObjInfo[i][objName]);
    		cache_get_value_name_int(i, "Model", ObjInfo[i][objModel]);
    		cache_get_value_name_float(i, "PosX", ObjInfo[i][objPosX]);
    		cache_get_value_name_float(i, "PosY", ObjInfo[i][objPosY]);
    		cache_get_value_name_float(i, "PosZ", ObjInfo[i][objPosZ]);
    		cache_get_value_name_float(i, "RotX", ObjInfo[i][objRotX]);
    		cache_get_value_name_float(i, "RotY", ObjInfo[i][objRotY]);
    		cache_get_value_name_float(i, "RotZ", ObjInfo[i][objRotZ]);
    		cache_get_value_name(i, "time", ObjInfo[i][otime]);
    		cache_get_value_name(i, "date", ObjInfo[i][odate]);
            cache_get_value_name_int(i, "uidowner", ObjInfo[i][objuidowner]);
    		ObjInfo[i][objectID] = CreateObject(ObjInfo[i][objModel], ObjInfo[i][objPosX], ObjInfo[i][objPosY], ObjInfo[i][objPosZ], ObjInfo[i][objRotX], ObjInfo[i][objRotY], ObjInfo[i][objRotZ]);
    	}
    }
    printf("LoadObjects(%i) загрузился за %i ms", TOTALOBJECTS, GetTickCount() - currenttime);
}
stock ConvertToNegativeNumber(number) return -number;
stock ShowPrefixDialog(playerid) return SPD(playerid, 3761, 1, !"{FFFFFF}Установка префикса | {ae433d}Ввод префикса", !"{FFFFFF}Для того что бы установить префикс напиште его ниже\nТак же префиксу можно указать уникальный цвет\nПолучить его можно через программу \"ColorMania\" \nУказывать его нужно перед текстом префикса в {} без #\nПример {ae433d}(ae433d) Цвет{FFFFFF} (показаны круглые скобки, \nибо фигурных не будет видно, вы же юзайте фигурные)\nДля того что бы удалить префикс, оставьте поле пустым\nВведите цвет и тест префикса", !"Выбрать", !"Отмена");
stock GetNumberOfPlayersOnThisIP(ip[])
{
	static against_ip[16];
	new ip_count;
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerIp(i, against_ip, 16);
			if(!strcmp(against_ip, ip)) ip_count++;
		}
	}
	return ip_count;
}
stock BogdanKupira(playerid, type = 1)
{
	switch(type)
	{
		case 1:
		{
		    if(OrgInfo[TEAM_ARMY][oMats] < 2000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}На складе недостаточно материалов!");
			InvAdd(playerid, Item_Ingredients, 30);
			aml(101, playerid, "", "украл ингредиенты", Item_Ingredients, 30);
			OrgInfo[TEAM_ARMY][oMats] -= 150;
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			SetPlayerChatBubble(playerid, "Украл ингредиенты", COLOR_PURPLE, 10.0, 5000);
			SPD(playerid, 0, 0, !"", !"{928989}Вы успешно украли 30 шт. ингредиентов ( частей оружия ).\nДля того чтобы из них изготовить патроны, а затем оружие , вам\nнеобходимо отправится на завод /gps - работы для новичков - завод\nи найти там чекпоинт в котором можно обменять ингредиенты.\nЗатем у вас появятся патроны и из них можно сделать оружие командой /creategun.\n\n{3F8628}Приятной игры", !"Закрыть", !"");
		}
		case 2:
		{
		    if(OrgInfo[TEAM_ARMYSF][oMats] < 2000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}На складе недостаточно материалов!");
			InvAdd(playerid, Item_Ingredients, 30);
			aml(101, playerid, "", "украл ингредиенты", Item_Ingredients, 30);
		    OrgInfo[TEAM_ARMYSF][oMats] -= 150;
		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			SetPlayerChatBubble(playerid, "Украл ингредиенты", COLOR_PURPLE, 10.0, 5000);
		    SPD(playerid, 0, 0, !"", !"{928989}Вы успешно украли 30 шт. ингредиентов ( частей оружия ).\nДля того чтобы из них изготовить патроны, а затем оружие , вам\nнеобходимо отправится на завод /gps - работы для новичков - завод\nи найти там чекпоинт в котором можно обменять ингредиенты.\nЗатем у вас появятся патроны и из них можно сделать оружие командой /creategun.\n\n{3F8628}Приятной игры", !"Закрыть", !"");
		}
		case 3:
		{
			if(OrgInfo[TEAM_ARMYLV][oMats] < 2000) return SCM(playerid, 0xAFAFAFFF, "[Ошибка] {FFFFFF}На складе недостаточно материалов!");
			InvAdd(playerid, Item_Ingredients, 30);
			aml(101, playerid, "", "украл ингредиенты", Item_Ingredients, 30);
		    OrgInfo[TEAM_ARMYLV][oMats] -= 150;
		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			SetPlayerChatBubble(playerid, "Украл ингредиенты", COLOR_PURPLE, 10.0, 5000);
		    SPD(playerid, 0, 0, !"", !"{928989}Вы успешно украли 30 шт. ингредиентов ( частей оружия ).\nДля того чтобы из них изготовить патроны, а затем оружие , вам\nнеобходимо отправится на завод /gps - работы для новичков - завод\nи найти там чекпоинт в котором можно обменять ингредиенты.\nЗатем у вас появятся патроны и из них можно сделать оружие командой /creategun.\n\n{3F8628}Приятной игры", !"Закрыть", !"");
		}
	}
	return 1;
}
stock IsABot(playerid)
{
	static ip[16];
	GetPlayerIp(playerid, ip, 16);
	for(new i; i < sizeof(IpForBots); i++) if(GetString(IpForBots[i], ip)) return 1;
	return 0;
}
stock HexStr(string[]) 
{
	new ret, val, i; 
	if (string[0] == '0' && (string[1] == 'x' || string[1] == 'X')) i = 2;
	while (string[i]) 
	{ 
		ret <<= 4; 
		val = string[i++] - '0';
		if (val > 0x09) val -= 0x07;
		if (val > 0x0F) val -= 0x20;
		if (val < 0x01) continue;
		if (val < 0x10) ret += val; 
	}
	return ret; 
}
stock GetVehicleModelBogdan(model)
{
	if(model <= 611) return model;
	new model_id = 411;
	for(new i; i < sizeof(NewCar); i++)
	{
		if(NewCar[i][NewCarLauncher] == model)
		{
			model_id = NewCar[i][NewCarClient];
			break;
		}
	}
	return model_id;
}
stock IsValidModel(model)
{
	if(model <= 611) return 1;
	new valid;
	for(new i; i < sizeof(NewCar); i++)
	{
		if(NewCar[i][NewCarLauncher] == model)
		{
			valid = 1;
			break;
		}
	}
	return valid;
}
stock IsPlayerLauncher(playerid) 
{
    static version[24];
    GetPlayerVersion(playerid, version, sizeof(version));
    if(GetString(version, M_LAUNCHER_VERSION)) return 1;
    return 0;
}
/*--------[Custom Skins Models]--------*/
forward GetLauncherSkinModel(current_model);
public GetLauncherSkinModel(current_model)
{
	new model = -1, i = GetItemNewSkin(current_model);
	if(current_model == NewSkin[i][NewSkinLauncher]) model = NewSkin[i][NewSkinClient];
	return model;
}
/*--------[Custom Vehicles Models]--------*/
forward GetLauncherVehicleModel(current_model);
public GetLauncherVehicleModel(current_model)
{
	new model = -1, i = GetItemNewCar(current_model);
	if(current_model == NewCar[i][NewCarLauncher]) model = NewCar[i][NewCarClient];
	return model;
}
stock GetNameCar(model)
{
	if(model <= 611) return VehicleName[model-400];
	static name[28];
	name = "Invalid";
	for(new i; i < sizeof(NewCar); i++)
	{
		if(NewCar[i][NewCarLauncher] == model)
		{
			SetString(name, NewCar[i][NewCarName]);
			break;
		}
	}
	return name;
}
stock IsValidSkin(skin)
{
	if(skin <= 311) return 1;
	new valid;
	for(new i; i < sizeof(NewSkin); i++)
	{
		if(NewSkin[i][NewSkinLauncher] == skin)
		{
			valid = 1;
			break;
		}
	}
	return valid;
}
stock GetItemSkin(skin)
{
	if(skin <= 311) return skin;
	new item;
	for(new i; i < sizeof(NewSkin); i++)
	{
		if(NewSkin[i][NewSkinLauncher] == skin)
		{
			item = NewSkin[i][NewSkinItem];
			break;
		}
	}
	return item;
}
stock GetItemNewSkin(skin)
{
	new item;
	for(new i; i < sizeof(NewSkin); i++)
	{
		if(NewSkin[i][NewSkinLauncher] == skin)
		{
			item = i;
			break;
		}
	}
	return item;
}
stock GetItemNewCar(model)
{
	new item;
	for(new i; i < sizeof(NewCar); i++)
	{
		if(NewCar[i][NewCarLauncher] == model)
		{
			item = i;
			break;
		}
	}
	return item;
}
stock SendInfoBug(playerid) return SCM(playerid, COLOR_LIGHTRED, !"[Ошибка] {FFFFFF}Богдан фиксанул эту дырочку!");
stock IsPlayerLauncherOld(playerid)
{
	static version[25];
	GetPlayerVersion(playerid, version, sizeof(version));
	return version;
}
stock ShowRecon(playerid)
{
	if(ReconOpen{playerid}) return 0;
	#include ../library/TEXTDRAWS/recon/recon
	for(new i; i < 50; i++) PlayerTextDrawShow(playerid, recon_p[playerid][i]);
	SelectTextDraw(playerid, 0xC0C0C0FF);
	ReconOpen{playerid} = true;
	return 1;
}
stock HideRecon(playerid)
{
	if(!ReconOpen{playerid}) return 0;
	for(new i; i < 50; i++) if(IsPlayerTextDrawVisible(playerid, recon_p[playerid][i])) DestroyPlayerTD(playerid, recon_p[playerid][i]);
	CancelSelectTextDraw(playerid);
	ReconOpen{playerid} = false;
	return 1;
}
stock HideReconMenu(playerid, menu)
{
	if(!ReconMenus[playerid]) return 0;
	switch(menu)
	{
		case 1: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][47], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][47]);
			PlayerTextDrawShow(playerid, recon_p[playerid][47]);
		}
		case 2:
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][46], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][46]);
			PlayerTextDrawShow(playerid, recon_p[playerid][46]);
		}
		case 3: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][45], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][45]);
			PlayerTextDrawShow(playerid, recon_p[playerid][45]);
		}
		case 4: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][44], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][44]);
			PlayerTextDrawShow(playerid, recon_p[playerid][44]);
		}
		case 5: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][43], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][43]);
			PlayerTextDrawShow(playerid, recon_p[playerid][43]);
		}
		case 6: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][42], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][42]);
			PlayerTextDrawShow(playerid, recon_p[playerid][42]);
		}
		case 7: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][41], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][41]);
			PlayerTextDrawShow(playerid, recon_p[playerid][41]);
		}
		case 8: 
		{
			PlayerTextDrawColor(playerid, recon_p[playerid][40], 0xA52A2AFF);
			PlayerTextDrawHide(playerid, recon_p[playerid][40]);
			PlayerTextDrawShow(playerid, recon_p[playerid][40]);
		}
	}
	for(new i; i < 7; i++) if(IsPlayerTextDrawVisible(playerid, reconmenu[playerid][i])) DestroyPlayerTD(playerid, reconmenu[playerid][i]);
	ReconMenus[playerid] = 0;
	return 1;
}
stock ShowReconMenu(playerid, menu)
{
	if(ReconMenus[playerid] == menu) return 0;
	switch(menu)
	{
		case 1: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_1
			PlayerTextDrawColor(playerid, recon_p[playerid][47], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][47]);
		}
		case 2:
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_2
			PlayerTextDrawColor(playerid, recon_p[playerid][46], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][46]);
		}
		case 3: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_3
			PlayerTextDrawColor(playerid, recon_p[playerid][45], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][45]);
		}
		case 4: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_4
			PlayerTextDrawColor(playerid, recon_p[playerid][44], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][44]);
		}
		case 5: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_5
			PlayerTextDrawColor(playerid, recon_p[playerid][43], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][43]);
		}
		case 6: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_6
			PlayerTextDrawColor(playerid, recon_p[playerid][42], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][42]);
		}
		case 7: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_7
			PlayerTextDrawColor(playerid, recon_p[playerid][41], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][41]);
		}
		case 8: 
		{
			#include ../library/TEXTDRAWS/recon/reconmenu_8
			PlayerTextDrawColor(playerid, recon_p[playerid][40], 0xC0C0C0FF);
			PlayerTextDrawShow(playerid, recon_p[playerid][40]);
		}
	}
	for(new i; i < 7; i++) PlayerTextDrawShow(playerid, reconmenu[playerid][i]);
	ReconMenus[playerid] = menu;
	return 1;
}
stock SetRouletteSelectTable(playerid, roll)
{
    if(RollTimeUpdate[playerid]) return 1;
    PlayerTextDrawSetSelectable(playerid, RollTD[playerid][18], roll == 0 ? 0 : 1); 
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, RollTD[playerid][i+14], roll == 0 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, RollTD[playerid][i+14], roll == 0 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, RollTD[playerid][i+14]);
    PlayerTextDrawSetSelectable(playerid, RollTD[playerid][23], roll == 1 ? 0 : 1);
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, RollTD[playerid][i+19], roll == 1 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, RollTD[playerid][i+19], roll == 1 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, RollTD[playerid][i+19]);
    PlayerTextDrawSetSelectable(playerid, RollTD[playerid][28], roll == 2 ? 0 : 1);
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, RollTD[playerid][i+24], roll == 2 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, RollTD[playerid][i+24], roll == 2 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, RollTD[playerid][i+24]);
    PlayerTextDrawSetSelectable(playerid, RollTD[playerid][48], roll == 3 ? 0 : 1); 
    for(new i; i < 4; i++) PlayerTextDrawColor(playerid, RollTD[playerid][i+44], roll == 3 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawBoxColor(playerid, RollTD[playerid][i+44], roll == 3 ? InvColor[PI[playerid][pInvColor]][2] : InvColor[PI[playerid][pInvColor]][1]), PlayerTextDrawShow(playerid, RollTD[playerid][i+44]);
    return PlayerTextDrawShow(playerid, RollTD[playerid][18]), PlayerTextDrawShow(playerid, RollTD[playerid][23]), PlayerTextDrawShow(playerid, RollTD[playerid][28]), PlayerTextDrawShow(playerid, RollTD[playerid][48]);
}
stock BuyRoulette(playerid)
{
    str_1[0] = EOS, f(str_1, sizeof(str_1), "{BFBBBA}В наличии: {BEB455}%i AZ Coins", PI[playerid][pVirMoney]);
    new rollname[12], cost;
    switch(GetPVarInt(playerid, "RollType"))
    {
        case 0: rollname = "бронзовой", cost = 50000;
        case 1: rollname = "серебряной", cost = 100000;
        case 2: rollname = "золотой", cost = 200000;
        case 3: rollname = "платиновой", cost = 500000;
    }
    str_2[0] = EOS, f(str_2, sizeof(str_2), "{BEB455}Стоимость %s рулетки: %i AZ Coins\n{FFFFFF}Хотите купить рулетку?", rollname, cost);
    SPD(playerid, 9238, DIALOG_STYLE_MSGBOX, str_1, str_2, "Оплатить", "Отмена");
    return SetPVarInt(playerid, "RollCost", cost);
}
enum enumrollitem
{
    rollitem,
    money
}
new RollPrizeBronze[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {316},{316},{642},
    {642}, {638}, {638}, {635},{635},{635},
    {634}, {633}, {634}, {327},{328},{328},
    {631}, {638}, {631}, {656},{328},{328},
    {631}, {638}, {631}, {656},{656},{327},
    {631}, {638}, {656}, {643},{643},{327},
    {633}, {328}, {656}, {327},{327},{327},
    {633}, {328}, {327}, {327},{327},{327}
};
new RollPrizeSilver[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {528},{316},{642},
    {642}, {638}, {638}, {635},{635},{635},
    {634}, {633}, {634}, {327},{0,1},{528},
    {631}, {638}, {1081}, {656},{328},{328},
    {631}, {528}, {631}, {656},{656},{1081},
    {631}, {638}, {656}, {643},{643},{1081},
    {633}, {328}, {1081}, {327},{612},{327},
    {633}, {528}, {327}, {327},{0,1},{612}
};
new RollPrizeGold[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {350},{316},{642},
    {642}, {638}, {350}, {350},{635},{635},
    {634}, {633}, {350}, {350},{1081},{528},
    {631}, {350}, {350}, {656},{328},{328},
    {631}, {528}, {350}, {656},{656},{0,1},
    {631}, {638}, {656}, {643},{643},{0,1},
    {633}, {328}, {1081}, {327},{612},{327},
    {633}, {350}, {327}, {327},{342},{350}
};
new RollPrizePlatinum[][enumrollitem] =
{
    {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1}, {0,1},
    {316}, {316}, {327}, {350},{316},{642},
    {642}, {342}, {638}, {635},{635},{342},
    {634}, {342}, {634}, {327},{1081},{528},
    {631}, {350}, {1081}, {656},{328},{342},
    {631}, {528}, {631}, {656},{656},{0,1},
    {631}, {638}, {656}, {643},{643},{342},
    {633}, {328}, {1081}, {327},{612},{327},
    {633}, {350}, {350}, {327},{0,1},{612}
};
stock ShowRoulette(playerid)
{
    if(RouletteOpen{playerid}) return false;
    HideTextDraws(playerid, 4); 
    #include ../library/TEXTDRAWS/roulette
    RouletteOpen{playerid} = true;
    PlayerTextDrawSetStringf(playerid, RollTD[playerid][41], "%i", PI[playerid][pVirMoney]);
    PlayerTextDrawSetSelectable(playerid, RollTD[playerid][43], 1);
    for(new i; i < 49; i++) PlayerTextDrawShow(playerid, RollTD[playerid][i]);
    CreateRoulettePage(playerid);
    return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
}
stock HideRoulette(playerid)
{
    if(!RouletteOpen{playerid}) return false;
    if(RollTimeUpdate[playerid]) return SelectTextDraw(playerid, InvColor[PI[playerid][pInvColor]][2]);
    RouletteOpen{playerid} = false;
    for(new i; i < 49; i++)  
    {
        DestroyPlayerTD(playerid, RollTD[playerid][i]);
        if(i < 16) DestroyPlayerTD(playerid, RoulettePageSlot[playerid][i]), DestroyPlayerTD(playerid, RoulettePageAmount[playerid][i]);
    }
    DeletePVar(playerid, "RollType");
    return CancelSelectTextDraw(playerid);
}
stock CreateRoulettePage(playerid)
{
    new Float:X = 166.966507, Float:Y[2], j, Float:X2 = 181.101501;
    for(new i; i < 16; i++)
    {
        if(i == 8) j = 0;
        if(i < 8) Y[0] = 144.070404;
        else Y[0] = 190.070404;
        RoulettePageSlot[playerid][i] = CreatePlayerTextDraw(playerid, X+j*34.9, Y[0], "LD_SPAC:WHITE");
        PlayerTextDrawLetterSize(playerid, RoulettePageSlot[playerid][i], 0.000000, 0.000000);
        PlayerTextDrawTextSize(playerid, RoulettePageSlot[playerid][i], 28.270000, 33.270000);
        PlayerTextDrawAlignment(playerid, RoulettePageSlot[playerid][i], 1);
        PlayerTextDrawColor(playerid, RoulettePageSlot[playerid][i], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, RoulettePageSlot[playerid][i], 0);
        PlayerTextDrawBoxColor(playerid, RoulettePageSlot[playerid][i], 0x80808080);
        PlayerTextDrawSetShadow(playerid, RoulettePageSlot[playerid][i], 0);
        PlayerTextDrawSetOutline(playerid, RoulettePageSlot[playerid][i], 0);
        PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][i], 0x191919FF);
        PlayerTextDrawFont(playerid, RoulettePageSlot[playerid][i], 5);
        PlayerTextDrawSetProportional(playerid, RoulettePageSlot[playerid][i], 0);
        PlayerTextDrawSetSelectable(playerid, RoulettePageSlot[playerid][i], 0);
        PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][i]);
        if(i < 8) Y[1] = 164.048889;
        else Y[1] = 210.048889;
        RoulettePageAmount[playerid][i] = CreatePlayerTextDraw(playerid, X2+j*34.9, Y[1], "_");
        PlayerTextDrawLetterSize(playerid, RoulettePageAmount[playerid][i], 0.145500, 0.683461);
        PlayerTextDrawTextSize(playerid, RoulettePageAmount[playerid][i], 1280.000000, 1280.000000);
        PlayerTextDrawAlignment(playerid, RoulettePageAmount[playerid][i], 2);
        PlayerTextDrawColor(playerid, RoulettePageAmount[playerid][i], 0xFFFFFFFF);
        PlayerTextDrawUseBox(playerid, RoulettePageAmount[playerid][i], 0);
        PlayerTextDrawBoxColor(playerid, RoulettePageAmount[playerid][i], 0x80808080);
        PlayerTextDrawSetShadow(playerid, RoulettePageAmount[playerid][i], 0);
        PlayerTextDrawSetOutline(playerid, RoulettePageAmount[playerid][i], 1);
        PlayerTextDrawBackgroundColor(playerid, RoulettePageAmount[playerid][i], 0x19191980);
        PlayerTextDrawFont(playerid, RoulettePageAmount[playerid][i], 1);
        PlayerTextDrawSetProportional(playerid, RoulettePageAmount[playerid][i], 1);
        PlayerTextDrawSetSelectable(playerid, RoulettePageAmount[playerid][i], 0);
        PlayerTextDrawShow(playerid, RoulettePageAmount[playerid][i]);
        j++;
    }
    return 1;
}
new RollUpdatePage[MAX_PLAYERS];
forward RollUpdate(playerid);
public RollUpdate(playerid)
{
    RollTimeUpdate[playerid] ++, RollUpdatePage[playerid] ++;
    if(RollTimeUpdate[playerid] > 15) 
    {
        RollTimeUpdate[playerid] = 1; 
        PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][15], 0x191919FF); 
        PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][15]);
    }
    new page = RollTimeUpdate[playerid], rand = random(25), rand2 = random(30), rand3 = random(40), roll = GetPVarInt(playerid, "RollType");
    if(ItemsInfo[RoulleteItem[playerid][roll][page-1]][ItemColor]) PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][page-1], ItemsInfo[RoulleteItem[playerid][roll][page-1]][ItemColor]);
    else PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][page-1], 0x191919FF);
    PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][page], InvColor[PI[playerid][pInvColor]][1]);
    PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][page]), PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][page-1]);
    if(RollUpdatePage[playerid] >= 1 && RollUpdatePage[playerid] <= 15+rand) SetTimerEx("RollUpdate", 150, false, "d", playerid);
    else if(RollUpdatePage[playerid] >= 15+rand && RollUpdatePage[playerid] <= 35+rand2) SetTimerEx("RollUpdate", 350, false, "d", playerid);
    else if(RollUpdatePage[playerid] >= 35+rand2 && RollUpdatePage[playerid] <= 40+rand3) SetTimerEx("RollUpdate", 550, false, "d", playerid);
    else if(RollUpdatePage[playerid] >= 40+rand3) 
    {
        if(RoulleteItemMoney[playerid][roll][page])
        {
            f(str_1, sizeof(str_1), "{FFFFFF}\n\nПоздравляем с получением: {97FC9A}%i$.\nПриятной игры на "SITE"\n\n",  RoulleteItemAmount[playerid][roll][page]);
            GiveMoney(playerid, RoulleteItemAmount[playerid][roll][page]);
        }
        else
        {
            f(str_1, sizeof(str_1), "получил с рулетки %s[%i]", ItemsInfo[RoulleteItem[playerid][roll][page]][ItemName], RoulleteItemAmount[playerid][roll][page]);
            aml(16, playerid, "", str_1);
            InvAdd(playerid, RoulleteItem[playerid][roll][page], RoulleteItemAmount[playerid][roll][page], 0);
           	f(str_1, sizeof(str_1), "{FFFFFF}\n\nПоздравляем с получением: {97FC9A}%s (%i){FFFFFF}.\nПриятной игры на "SITE"\n\n", ItemsInfo[RoulleteItem[playerid][roll][page]][ItemName], RoulleteItemAmount[playerid][roll][page]);
        }
        SPD(playerid, 0, DIALOG_STYLE_MSGBOX, "", str_1, "Спасибо", "");
        RollUpdatePage[playerid] = 0, RollTimeUpdate[playerid] = 0;
        PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][page], 0xBABC49FF), PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][page]);
    }  
}
stock RollUpdateModel(playerid, roll)
{
    if(RollTimeUpdate[playerid]) return 1;
    SetPVarInt(playerid, "RollType", roll);
    new rand, ID, icon[2];
    for(new i; i < 16; i++)
    {
        switch(roll)
        {
            case 0:
            {
                if(!RoulleteItem[playerid][0][i])
                {
                    rand = random(sizeof(RollPrizeBronze));
                    RoulleteItem[playerid][0][i] = RollPrizeBronze[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][0][i]][MaxItem] > 1) RoulleteItemAmount[playerid][0][i] = random(ItemsInfo[RoulleteItem[playerid][0][i]][MaxItem]);
                    else RoulleteItemAmount[playerid][0][i] = 1;
                    if(RollPrizeBronze[rand][money]) RoulleteItemAmount[playerid][0][i] = random(10000000), RoulleteItemMoney[playerid][0][i] = true;//money
                }
            }
            case 1:
            {
                if(!RoulleteItem[playerid][1][i])
                {
                    rand = random(sizeof(RollPrizeSilver));
                    RoulleteItem[playerid][1][i] = RollPrizeSilver[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][1][i]][MaxItem] > 1) RoulleteItemAmount[playerid][1][i] = random(ItemsInfo[RoulleteItem[playerid][1][i]][MaxItem]);
                    else RoulleteItemAmount[playerid][1][i] = 1;
                    if(RollPrizeSilver[rand][money]) RoulleteItemAmount[playerid][1][i] = random(10000000), RoulleteItemMoney[playerid][1][i] = true;//money
                }
            }
            case 2:
            {
                if(!RoulleteItem[playerid][2][i])
                {
                    rand = random(sizeof(RollPrizeGold));
                    RoulleteItem[playerid][2][i] = RollPrizeGold[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][2][i]][MaxItem] > 1) RoulleteItemAmount[playerid][2][i] = random(ItemsInfo[RoulleteItem[playerid][2][i]][MaxItem]);
                    else RoulleteItemAmount[playerid][2][i] = 1;
                    if(RollPrizeGold[rand][money]) RoulleteItemAmount[playerid][2][i] = random(10000000), RoulleteItemMoney[playerid][2][i] = true;//money
                }
            }
            case 3:
            {
                if(!RoulleteItem[playerid][3][i])
                {
                    rand = random(sizeof(RollPrizePlatinum));
                    RoulleteItem[playerid][3][i] = RollPrizePlatinum[rand][rollitem];
                    if(ItemsInfo[RoulleteItem[playerid][3][i]][MaxItem] > 1) RoulleteItemAmount[playerid][3][i] = random(ItemsInfo[RoulleteItem[playerid][3][i]][MaxItem]);
                    else RoulleteItemAmount[playerid][3][i] = 1;
                    if(RollPrizePlatinum[rand][money]) RoulleteItemAmount[playerid][3][i] = random(10000000), RoulleteItemMoney[playerid][3][i] = true;//money
                }
            }
        }
        if(RoulleteItemAmount[playerid][roll][i] == 0) RoulleteItemAmount[playerid][roll][i] = 1;
        if(!RoulleteItemMoney[playerid][roll][i])
        {
            ID = RoulleteItem[playerid][roll][i], icon = "";
            if(ItemsInfo[ID][ItemColor]) PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][i], ItemsInfo[ID][ItemColor]);
            else PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][i], 0x191919FF);
            PlayerTextDrawSetPreviewModel(playerid, RoulettePageSlot[playerid][i], ItemsInfo[ID][ItemModel]);
            PlayerTextDrawSetPreviewRot(playerid, RoulettePageSlot[playerid][i], ItemsInfo[ID][ItemPosX], ItemsInfo[ID][ItemPosY], ItemsInfo[ID][ItemPosZ], ItemsInfo[ID][ItemPosC]);
        }
        else 
        {            
            icon = "$", PlayerTextDrawSetPreviewModel(playerid,  RoulettePageSlot[playerid][i], 1550), PlayerTextDrawSetPreviewRot(playerid,  RoulettePageSlot[playerid][i], -30.0, 0.0, 0.0, 1.0);
            PlayerTextDrawBackgroundColor(playerid, RoulettePageSlot[playerid][i], 0x191919FF);
        }
        PlayerTextDrawSetStringf(playerid, RoulettePageAmount[playerid][i], "%s%i", icon, RoulleteItemAmount[playerid][roll][i]);
        PlayerTextDrawShow(playerid, RoulettePageSlot[playerid][i]), PlayerTextDrawShow(playerid, RoulettePageAmount[playerid][i]);
    }
    PlayerTextDrawSetStringf(playerid, RollTD[playerid][42], "%i", roll !=3 ? GetInvCount(playerid, 313+roll) : GetInvCount(playerid, Item_PlatinumRoullete));
    PlayerTextDrawSetSelectable(playerid, RollTD[playerid][29], 1), PlayerTextDrawShow(playerid, RollTD[playerid][29]);
    SetRouletteSelectTable(playerid, roll);
    return 1;
}
stock OpenRoullete(playerid, roll = 0)
{
    ShowRoulette(playerid);
    return RollUpdateModel(playerid, roll);
}
forward UpdateMining(playerid);
public UpdateMining(playerid)
{
    new slot = GetPVarInt(playerid, "VideoCardSlot");
    if(random(100) <= MaxVideoCart[PI[playerid][pInvItemMining][slot]][0])
    {
        GameTextForPlayer(playerid, !"~g~Successfully", 0, 1);
        PI[playerid][pInvItemMining][slot] ++;
        if(InventStatus{playerid}) InvSlotUpdate(playerid, slot);
        str_1[0] = EOS;
        for(new i; i < PI[playerid][pInvCell]; i++) f(str_1, sizeof(str_1), "%s%i,", str_1, PI[playerid][pInvItemMining][i]);
        mysql_pqueryf(mysql, "UPDATE `Qelksekm` SET `LevelVideoCard` = '%s' WHERE `ID` = '%i'", str_1, PI[playerid][pID]);
    }
    else GameTextForPlayer(playerid, !"~r~Failing", 0, 1);
    return ClearAnims(playerid);
}
stock GetVideoCardManagement(playerid)
{
	if(PI[playerid][pVideoCartID] != -1) return PI[playerid][pVideoCartID];
    for(new i; i < sizeof(VideoCardManagement); i++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 1.1, VideoCardManagement[i][0], VideoCardManagement[i][1], VideoCardManagement[i][2])) continue;
    	PI[playerid][pVideoCartID] = i;
		return i;
	}
	return -1;
}
stock ShowInfoMining(playerid, house)
{
    if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_RED ,!"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
    str_1 = "{FFFF00}Полка | Состояние\t{FFFF00}Прибыль (BTC)\t{FFFF00}Уровень видеокарты\t{FFFF00}Состояние системы охлаждение";
    new total;
    for(new i; i < 5; i++)
    {
    	for(new j; j < 4; j++)
    	{
	 		total = GetMiningMenenger(i+1, j);
	        str_2[0] = EOS;
	        if(j == 0) f(str_2, sizeof(str_2), "%s{FFFF00}Стойка №%i\n", i > 0 ? "\n\t\n" : "", i+1);
	        if(HouseInfo[house][hMiningLevel][total] == 0) f(str_1, sizeof(str_1), "%s\n%s{808080}Полка №%i | Свободна", str_1, str_2, j+1);
	        else
	        {
	            f(str_1, sizeof(str_1), "\
	            %s\n%s\n\
	            {FFFFFF}Полка №%i | %s{FFFFFF}\t\
	            %f BTC\t%i уровень\t%.2f%%",
	            str_1, str_2, j+1, HouseInfo[house][hMiningStatus][total] == false ? "{FF6347}На паузе" : "{9ACD32}Работает",
	            HouseInfo[house][hMiningProfit][total], HouseInfo[house][hMiningLevel][total], HouseInfo[house][hMiningState][total]);
	        }
	    }
    }
    return SPD(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "Обзор всех видеокарт", str_1, "Закрыть", "");
}
stock ShowMining(playerid, house)
{
    if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_RED ,!"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
    new total;
    str_1 = "{FFFF00}Полка | Состояние\t{FFFF00}Прибыль (BTC)\t{FFFF00}Уровень видеокарты\t{FFFF00}Состояние системы охлаждение";
    for(new i; i < 4; i++)
    {
    	total = GetMiningMenenger(GetVideoCardManagement(playerid)+1, i);
        if(HouseInfo[house][hMiningLevel][total] == 0) f(str_1, sizeof(str_1), "%s\n{808080}Полка №%i | Свободна", str_1, i+1);
        else
        {
            f(str_1, sizeof(str_1), "\
            %s\n\
            {FFFFFF}Полка №%i | %s{FFFFFF}\t\
            %f BTC\t%i уровень\t%.2f%%",
            str_1, i+1, HouseInfo[house][hMiningStatus][total] == false ? "{FF6347}На паузе" : "{9ACD32}Работает",
            HouseInfo[house][hMiningProfit][total], HouseInfo[house][hMiningLevel][total], HouseInfo[house][hMiningState][total]);
        }
    }
    return SPD(playerid, 1021, DIALOG_STYLE_TABLIST_HEADERS, "Выберите видеокарту", str_1, "Выбрать", "Закрыть");
}
stock ShowMiningResponse(playerid, listitem)
{
    new house = HouseEntered[playerid];
    if(!GetString(HouseInfo[house][hOwner],PN(playerid))) return SCM(playerid, COLOR_RED ,!"[Ошибка] {FFFFFF}Вы не владелец этого дома!");
    new cart = GetVideoCardManagement(playerid);
    if(cart == -1) return 1;
    new total = GetMiningMenenger(cart+1, listitem);
    if(HouseInfo[house][hMiningLevel][total] == 0) return ShowMining(playerid, house);
    f(str_1, sizeof(str_1), "Стойка №%i Полка №%i", cart+1, listitem+1);
    f(str_2, sizeof(str_2), "\
    %s\n\
    {FFFFFF}Забрать прибыль (%f BTC)\n\
    {FFFFFF}Залить охлаждающую жидкость\n\
    {FFFFFF}Достать видеокарту", HouseInfo[house][hMiningStatus][total] == true ? "{FF6347}Остановить видеокартку" : "{9ACD32}Запустить видеокартку", HouseInfo[house][hMiningProfit][total]);
    SPD(playerid, 1022, DIALOG_STYLE_TABLIST, str_1, str_2, "Выбрать", "Назад");
    return SetPVarInt(playerid, !"MiningListItem", listitem);
}
stock GetMiningMenenger(cart, listitem) return cart * 4 + listitem - 4;
CMD:trunk(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_RED, !"Используй: /trunk [id]");
    if(IsACar(params[0])) return false;
    new Float:X,Float:Y,Float:Z;
    GetVehicleShiftPos(params[0], 1, X, Y, Z, 2.0);
    if(IsPlayerInRangeOfPoint(playerid, 3.5, X, Y, Z))
    {
        f(str_2, 65, "Багажник: %s\n{C62929}Заглянуть в багажник", TrunkInfo[params[0]][tOpen] ? ("{56A736}[Открыт]{FFFFFF}") : ("{C62929}[Закрыт]{FFFFFF}"));
        SPD(playerid, 1966, 2, !">> Багажник", str_2, !"Принять", !"Отмена");
        idaofcar[playerid] = params[0];
    }
    else SCM(playerid, COLOR_LIGHTRED, !"[Ошибка]{FFFFFF} Вы далеко от транспорта!");
    return 1;
}
stock EditBizItemCost(playerid, biz, listitem, reasponse = 1)
{
	static str_cost[30];
	str_cost[0] = EOS;

	if(reasponse == 1)
	{
		GetNameEditBizItemCost(biz, listitem, str_cost);
  		f(str_1,sizeof(str_1),"{FFFFFF} Введите новую стоимость {EEE8AA}%s{FFFFFF} в вашем магазине\nспользуйте цену от {FFD700}100${FFFFFF} до {FFD700}15.000$", str_cost);
    	SPD(playerid, 151, DIALOG_STYLE_INPUT, !"", str_1, !"Изменить", !"Отмена");
    	SetPVarString(playerid, "GetItemCost", str_cost);
    	SetPVarInt(playerid, "GetItemCostListItem", listitem+1);

    }
    else 
    {
    	new bool:stop;
    	str_3 = "Название\tСтоимость\n";
		for(new i; i < sizeof(ItemNameBussineses); i++)
		{
			str_cost[0] = EOS;			
			GetNameEditBizItemCost(biz, i, str_cost);
			if(BizInfo[biz][bState] == B_GAS)
			{
				stop = true;
				SPD(playerid, 150, DIALOG_STYLE_LIST, !"", "{FFFFFF}1. Изменить стоимость 1 литра бензина\n2. Изменить стоимость продуктов", !"Выбрать", !"Отмена");
				break;
			}
			if(!GetString(str_cost, "None")) f(str_3, sizeof(str_3), "%s\n{FFFFFF}%s\t{F0E68C}%i$", str_3, str_cost, BizInfo[biz][bItemCost][i]);
		}
		if(!stop) SPD(playerid, 158, DIALOG_STYLE_TABLIST_HEADERS, !"", str_3, !"Изменить", !"Отмена");
    }
    return 1;
}

stock GetNameEditBizItemCost(biz, i, string[])
{	
	switch(BizInfo[biz][bState])
	{
		case 0: SetString(string, ItemNameBussineses[i][bAmmo]);
		case 1: SetString(string, ItemNameBussineses[i][bBar]);
		case 2: SetString(string, ItemNameBussineses[i][bShop]);
		case 6: SetString(string, ItemNameBussineses[i][bRefuel]);
		case 7: SetString(string, ItemNameBussineses[i][bDinet]);
	}
	return 1;
}
stock GetLauncher(playerid) // проверка на лаунчер, не трогаем
{
    static version[24];
    GetPlayerVersion(playerid, version, sizeof(version));
    if(GetString(version, ""NAME" PC")) return 1;
    return 0;
}
stock SaveCostBiz(bizid)
{
    str_1[0] = EOS;
    for(new i; i < 20; i++)
    {
        if(BizInfo[bizid][bItemCost][i] < 1) BizInfo[bizid][bItemCost][i] = 500;
        f(str_1, sizeof(str_1), "%s%i,", str_1, BizInfo[bizid][bItemCost][i]);
    }
    return mysql_pqueryf(mysql, "UPDATE `Businesses` SET `ItemCost` = '%s' WHERE `ID` = '%i'", str_1, BizInfo[bizid][bID]);
}
stock SearchSlotCar(playerid, set = 0)
{
    new number = GetVehicleID(GetPlayerVehicleID(playerid)), ret = 1;
    if(number == INVALID_VEHICLE_ID) return 0;
    for(new i; i < 6; i++)
    {
        if(!CarInfo[number][cSlotItem][i])
        {
            if(set) UseAttachCar(playerid, i), UseModCar[playerid][i] = 0;
            else ret = i;
            break;
        }
    }
    return ret;
}
stock UseSimCard(playerid, response = 0)
{
    if(!CheckPhones(playerid)) return SCM(playerid, COLOR_RED, !">>>>{FFFFFF} - У вас нет мобильного телефона!");
    if(PI[playerid][pTelNum] && !response) return SPD(playerid, 106, DIALOG_STYLE_MSGBOX, "{BFBBBA}Sim Card", "{FFFFFF}Вы хотите выкинуть старую сим карту и зарегистрировать новую?", "Выбрать", "Отмена");
    new telephone = 1000000 + random(8999999);
    if(CheckTelNum(playerid, telephone)) return false;
    PI[playerid][pTelNum] = telephone, UpdatePlayerDataInt(playerid, "TelNum", telephone);
    f(str_1, sizeof(str_1), "[Информация] {FFFFFF}Вы успешно зарегистрировали новую SIM карту. Ваш новый номер телефона: %i.", telephone);
	SCM(playerid, COLOR_VALIK, str_1);
    return InvAdd(playerid, Item_SimCard, -1);
}

stock ShowInterfaceCustomization(playerid)
{
	new interface[9][30];

	for(new i; i < 9; i++)
	{
	    if(i == 0)
	    {
			if(PI[playerid][pCustomArizona][i] == 0) interface[i] = "Обычный";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Клиентский №1";
			else if(PI[playerid][pCustomArizona][i] == 2) interface[i] = "Клиентский №2";
	    }
		if(i == 1)
	    {
			if(PI[playerid][pCustomArizona][i] == 0) interface[i] = "Обычный";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Клиентский №1";
			else if(PI[playerid][pCustomArizona][i] == 2) interface[i] = "Клиентский №2";
		}
		if(i == 2)
	    {
			if(PI[playerid][pCustomArizona][i] == 0) interface[i] = "Обычный";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Клиентский №1";
			else if(PI[playerid][pCustomArizona][i] == 2) interface[i] = "Клиентский №2";
		}
		if(i == 6)
	    {
			if(PI[playerid][pCustomArizona][i] == 0) interface[i] = "Обычный";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Клиентский";
		}
		if(i == 8)
	    {
			if(PI[playerid][pCustomArizona][i] == 0) interface[i] = "Полный";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Упрощенный";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Простой";
		}
		else
		{
            if(PI[playerid][pCustomArizona][i] == 0) interface[i] = "Выключено";
			else if(PI[playerid][pCustomArizona][i] == 1) interface[i] = "Включено";
		}
	}

	format(str_1, 1200, "\
	Тип\tПараметр\t\n\n\
	{AFAFAF}Спидометр:\t{9ACD32}[%s]\n\
	{AFAFAF}Худ:\t{9ACD32}[%s]\n\
	{AFAFAF}Радар:\t{9ACD32}[%s]\n\
	{AFAFAF}Подсказки:\t{9ACD32}[%s]\n\
	{AFAFAF}Прозрачный чат:\t{9ACD32}[%s]\n\
	{AFAFAF}Сохранение диалога:\t{9ACD32}[%s]\n\
	{AFAFAF}NameTag:\t{9ACD32}[%s]\n\
	{AFAFAF}Снег:\t{9ACD32}[%s]\n\
	{AFAFAF}Вид диалогов:\t{9ACD32}[%s]", interface[0], interface[1], interface[2], interface[3], interface[4], interface[5],
	interface[6], interface[7], interface[8]);

    SPD(playerid, 1503, DIALOG_STYLE_TABLIST_HEADERS, "{BFBBBA}{FFFFFF}Кастомизация | {ae433d}Интерфейс", str_1, "»", "«");
	return 1;
}

stock DmZoneSpawn(playerid) {
	ResetGun(playerid);
	DmZoneSendToPlace(playerid);

	DmZonePlayed[playerid] = true;
	DmZonePlayers += 1;
	return 1;
}

stock DmZoneExit(playerid) {
	DmZonePlayed[playerid] = false;
	DmZonePlayers -= 1;

	SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid, 0);
	ResetGun(playerid);
	PlayerSpawn(playerid);

	UpdatePlayerDataInt(playerid, "DmKill", PI[playerid][pDmZoneKill]);
	UpdatePlayerDataInt(playerid, "DmDeath", PI[playerid][pDmZoneDeath]);
	return 1;
}

stock DmZoneKilled(playerid, killerid) {
	GiveGun(killerid, 24, 200);
	SetPlayerHealth(killerid, 100);

	PI[killerid][pDmZoneKill] += 1;
	PI[playerid][pDmZoneDeath] += 1;
	return 1;
}

stock DmZoneSendToPlace(playerid) {
	new rand = random(14);
	SetPlayerPos(playerid, DmZonePos[rand][0], DmZonePos[rand][1], DmZonePos[rand][2]);
	SetPlayerFacingAngle(playerid, DmZonePos[rand][3]);
	SetPlayerVirtualWorld(playerid, 10);
	SetCameraBehindPlayer(playerid);

	SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid, 0);
	GiveGun(playerid, 24, 5000);

	TogglePlayerControllable(playerid, true);
	return 1;
}

stock GenerateCaptcha()
{
    new TextArray[] = "123456789";
    new cstring[32];
    format(cstring, sizeof(cstring), "%c%c%c%c%c", TextArray[random(sizeof(TextArray)-1)], TextArray[random(sizeof(TextArray)-1)], TextArray[random(sizeof(TextArray)-1)], TextArray[random(sizeof(TextArray)-1)],  TextArray[random(sizeof(TextArray)-1)]);
    return cstring;
}

stock DollarsOtchisl(playerid)
{
    switch(random(100))
    {
		case 0..19:
		{
		    switch(random(19))
    		{
		        case 0..1:
				{
				    InvAdd(playerid, 1251, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: BMW 760LI", PN(playerid));
				}
				case 2..3:
				{
				    InvAdd(playerid, 1252, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Aston Martin One-77", PN(playerid));
				}
				case 4..5:
				{
				    InvAdd(playerid, 1253, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Bentley Mulliner Bacalar", PN(playerid));
				}
				case 6..7:
				{
				    InvAdd(playerid, 1254, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Bentley Bentyaga", PN(playerid));
				}
				case 8..9:
				{
				    InvAdd(playerid, 1260, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Mercedes S500 W223", PN(playerid));
				}
				case 10..11:
				{
				    InvAdd(playerid, 1263, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Mercedes SLR", PN(playerid));
				}
				case 12..13:
				{
				    InvAdd(playerid, 1267, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Ferrari Enzo", PN(playerid));
				}
				case 14..15:
				{
				    InvAdd(playerid, 1262, 1);
		    		SCMAllf(COLOR_GREEN, "%s испытал удачу при открытии ларца 'Олигарха' и выиграл автомобиль: Ferrari J50", PN(playerid));
				}
			}
		}
		case 20..49:
		{
			switch(random(11))
    		{
		        case 0..2:
				{
				    new amount = random(5);
				    InvAdd(playerid, 313, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Бронзовая рулетка (Количество: %i)", amount);
				}
				case 3..5:
				{
				    new amount = random(5);
    				InvAdd(playerid, 314, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Серебряная рулетка (Количество: %i)", amount);
				}
				case 6..8:
				{
				    new amount = random(5);
    				InvAdd(playerid, 315, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Золотая рулетка (Количество: %i)", amount);
				}
			}
		}
		case 50..69:
		{
			switch(random(19))
    		{
		        case 0..4:
				{
				    new amount = random(50);
				    InvAdd(playerid, 359, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Семейный талон (Количество: %i)", amount);
				}
				case 5..9:
				{
				    new amount = random(50);
    				InvAdd(playerid, 1208, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Точильный камень (Количество: %i)", amount);
				}
				case 10..15:
				{
				    new amount = random(20);
    				InvAdd(playerid, 366, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Гражданский талон (Количество: %i)", amount);
				}
				case 16..18:
				{
				    new amount = random(30);
    				InvAdd(playerid, 775, amount);
				    SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Талон EXP (Количество: %i)", amount);
				}
			}
		}
		case 70..99:
		{
            new amount = random(10000000);
            GiveMoney(playerid, amount);
            SCMf(playerid, COLOR_YELLOW, "Вы использовали ларец {cccccc}Олигарха{FFFF00}! Ваш приз: Деньги (Количество: %i)", amount);
		}
	}
	InvAdd(playerid, 1280, -1);
	return 1;
}

stock VerifyCaptcha1(playerid)
{
    new t[32], stri[32];
	GetPVarString(playerid, "enter_c", t, 32);
	GetPVarString(playerid, "captcha", stri, 32);

	if(!strcmp(t, stri, true))
	{
		if(strlen(t) == 5)
		{
			SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Поздравляю! Вы ввели правильно и получаете за это 10.000 AZ!");
			DestroyPlayerTD(playerid, Textdrawa);
			DestroyPlayerTD(playerid, Textdrawb);
			DestroyPlayerTD(playerid, Textdrawf);
			GiveDonate(playerid,10000);
			PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
		}
		else SendClientMessage(playerid, COLOR_RED, "Вы не правильно ввели капчу!");
	}
	else SendClientMessage(playerid, COLOR_RED, "Вы не правильно ввели капчу!");
	return true;
}

stock GetBlackLuckPrize(playerid)
{
	new BlackLuckPrizeID, BlackLuckPrizeAmout;
    switch(random(8))
    {
        case 0:
		{
			BlackLuckPrizeID = Item_Drugs;
			BlackLuckPrizeAmout = 50;
		}
        case 1:
		{
			BlackLuckPrizeID = Item_Mats;
			BlackLuckPrizeAmout = 300;
		}
        case 2:
		{
			BlackLuckPrizeID = Item_Armour;
			BlackLuckPrizeAmout = 20;
		}
        case 3:
		{
			BlackLuckPrizeID = Item_Videocard;
			BlackLuckPrizeAmout = 1;
		}
        case 4:
		{
			BlackLuckPrizeID = Item_BronzeRoulette;
			BlackLuckPrizeAmout = 1;
		}
        case 5:
		{
			BlackLuckPrizeID = Item_SilverRoulette;
			BlackLuckPrizeAmout = 1;
		}
        case 6:
		{
			BlackLuckPrizeID = Item_Ticket_EXP;
			BlackLuckPrizeAmout = random(5);
		}
        case 7:
		{
			BlackLuckPrizeID = 363;
			BlackLuckPrizeAmout = 1;
		}
    }
	InvAdd(playerid, BlackLuckPrizeID, BlackLuckPrizeAmout);

	str_1[0] = EOS;
	format(str_1, sizeof(str_1), "{ffffff}Вы нашли и открыли закладку, которую для вас оставила организация ""Тёмная Удача""!\n\n{FFFF00}В закладке было:{ffffff}\n%s",ItemsInfo[BlackLuckPrizeID][ItemName]);
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "", str_1, "Закрыть", "");
	return 1;
}
